[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8511428833007812, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0258630540754816, 1.1389924143724564, 0.8116184304481988, 0.6991907030347946, 0.6546580370280879, 0.5918506728722639, 0.5521976485732304, 0.5162856121026073, 0.48903040636516343, 0.4696786450341456, 0.45193586269106456, 0.4272164350936221, 0.4184785761168415, 0.4098670450081647, 0.39418136948340005, 0.3713269929104257, 0.36631541599875916, 0.3608824570047353, 0.3556670095186507, 0.3382152410711453, 0.339140361589983, 0.3218650999810513, 0.3213326240598313, 0.3011893971469251, 0.30005266437787487, 0.29600926579863496, 0.2870762173754113, 0.27355074404630964, 0.2644610326752419, 0.2542049872790188, 0.24800850393718277, 0.24673489652935224], "accuracy": [0.32082948088645935, 0.607449471950531, 0.705058753490448, 0.739928662776947, 0.757099449634552, 0.7819310426712036, 0.791969358921051, 0.8105930685997009, 0.8216879963874817, 0.8269713521003723, 0.8341038227081299, 0.8457271456718445, 0.843481719493866, 0.848368763923645, 0.8597279191017151, 0.8672566413879395, 0.8643507957458496, 0.8667283058166504, 0.8696341514587402, 0.8759741187095642, 0.8732003569602966, 0.8831065893173218, 0.8798044919967651, 0.8873332738876343, 0.8883898854255676, 0.8894465565681458, 0.8942015767097473, 0.8948619961738586, 0.9013340473175049, 0.9056927561759949, 0.9071456789970398, 0.9026548862457275], "val_loss": [0.9136350154876709, 0.6481655325208392, 0.5680422101702008, 0.5160472393035889, 0.4916612591062273, 0.45504610879080637, 0.4236565487725394, 0.4030957392283848, 0.39004838466644287, 0.37750491074153353, 0.36842664650508333, 0.3607162662914821, 0.3491857647895813, 0.34083625248500277, 0.34335159403937204, 0.3239568642207554, 0.31400672027042936, 0.3289616107940674, 0.31450412954602924, 0.30730141912187847, 0.31302976608276367, 0.3056027463504246, 0.3023728472845895, 0.3032165510313852, 0.297315103667123, 0.29485537324632916, 0.287704987185342, 0.29448685475758146, 0.2900950482913426, 0.28744445528302875, 0.28686067887714933, 0.29008630343845915], "val_accuracy": [0.6193333268165588, 0.7223333120346069, 0.7493333220481873, 0.7609999775886536, 0.7753333449363708, 0.7903333306312561, 0.8056666851043701, 0.8256666660308838, 0.8263333439826965, 0.8360000252723694, 0.8373333215713501, 0.843666672706604, 0.8496666550636292, 0.8519999980926514, 0.8473333120346069, 0.856333315372467, 0.8579999804496765, 0.8533333539962769, 0.8536666631698608, 0.8600000143051147, 0.8619999885559082, 0.8629999756813049, 0.859666645526886, 0.8633333444595337, 0.8663333058357239, 0.8706666827201843, 0.8786666393280029, 0.8706666827201843, 0.8766666650772095, 0.8786666393280029, 0.8723333477973938, 0.8756666779518127]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 0, 4, 1, 2, 5, 2, 2, 3, 5, 2, 0, 4, 1, 5, 5, 6, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 4, 5, 1, 8, 8, 1, 0, 3, 6, 3, 4, 1, 9, 2], [2, 1, 0, 2, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [84, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8477143049240112, "mapping_values": [1, 15, 15, 8, 7, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0258688219565726, 1.139058194242653, 0.8120348087202336, 0.6995389350826368, 0.6557813936598691, 0.5912108647509998, 0.5507215564717958, 0.5142109266928457, 0.4869016781301704, 0.46860585199638743, 0.4576554591188719, 0.42689474981773673, 0.41761371576003486, 0.4082624113177107, 0.3959785297034738, 0.37394625920393465, 0.3685983389580585, 0.3605864067686043, 0.35127215522186805, 0.33653344596381735, 0.33234906735878106, 0.3198702607203972, 0.31848717221982603, 0.2986157578980178, 0.2954038948690603, 0.29699283575322005, 0.28706554438081855, 0.2748644916593375, 0.2680697638667916, 0.2581592443644048, 0.2498464953504171, 0.24367834100350413, 0.23814213721113844, 0.23706296756676615, 0.22968003043188726], "accuracy": [0.32082948088645935, 0.6073173880577087, 0.705058753490448, 0.7408532500267029, 0.7564390301704407, 0.7840443849563599, 0.7921014428138733, 0.8128384351730347, 0.8220842480659485, 0.8284242749214172, 0.8310658931732178, 0.8461233377456665, 0.8448025584220886, 0.8502179384231567, 0.8609166741371155, 0.8623695969581604, 0.8644828796386719, 0.8642187118530273, 0.8722757697105408, 0.8765024542808533, 0.8779553771018982, 0.8805969953536987, 0.880729079246521, 0.8922203183174133, 0.8912957310676575, 0.8889182209968567, 0.8942015767097473, 0.8960506916046143, 0.9014661312103271, 0.9050323367118835, 0.9034473896026611, 0.9029190540313721, 0.9088627696037292, 0.9128252267837524, 0.9125610589981079], "val_loss": [0.9137167930603027, 0.6485878910337176, 0.568082502910069, 0.5169478484562465, 0.4925605228969029, 0.45344693320138113, 0.42196208238601685, 0.40477321829114643, 0.38819041422435213, 0.38128782170159475, 0.37186655827931, 0.3588695355824062, 0.35070529154368807, 0.3389958654131208, 0.3425031304359436, 0.32402720621653963, 0.314685549054827, 0.3343525103160313, 0.31346482038497925, 0.30648716006960186, 0.3190775598798479, 0.30566619975226267, 0.30017987319401335, 0.3001751559121268, 0.29974962983812603, 0.29533075434820993, 0.2853751352855137, 0.2937666433198111, 0.2895538296018328, 0.28320214578083586, 0.2923525060926165, 0.2819132890020098, 0.28105098009109497, 0.2844586457524981, 0.2864874601364136], "val_accuracy": [0.6190000176429749, 0.7203333377838135, 0.750333309173584, 0.7613333463668823, 0.7766666412353516, 0.7916666865348816, 0.8096666932106018, 0.8246666789054871, 0.82833331823349, 0.8289999961853027, 0.8356666564941406, 0.8460000157356262, 0.8500000238418579, 0.8526666760444641, 0.8473333120346069, 0.8566666841506958, 0.8603333234786987, 0.8503333330154419, 0.8583333492279053, 0.8613333106040955, 0.8619999885559082, 0.8603333234786987, 0.8640000224113464, 0.8676666617393494, 0.8640000224113464, 0.871666669845581, 0.8766666650772095, 0.8773333430290222, 0.8776666522026062, 0.8799999952316284, 0.8703333139419556, 0.8790000081062317, 0.8733333349227905, 0.8793333172798157, 0.878000020980835]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0258709134962327, 1.138974041341082, 0.8115122621054064, 0.6987988201224997, 0.6541318614185919, 0.5899775760552635, 0.5509018327550267, 0.5137139332292889, 0.48822942542251957, 0.47074159471633775, 0.45622951837027503, 0.42606736552509034, 0.41750735547154916, 0.40770912075149796, 0.39373993146153424, 0.3719035164122064, 0.3690089063361935, 0.3573215548128673, 0.35605845544174786, 0.3408064937720666, 0.33962434766047256, 0.3206615717679345, 0.3182851156625041, 0.2978015087024332, 0.29890783186822345, 0.2972740635911566, 0.28680104372319043, 0.277347700384236, 0.2647029046353537, 0.25646099498589686, 0.24693827337364338, 0.24510585031237317, 0.233830954345651, 0.23740980158219357, 0.22929327211375597, 0.22403710946911093, 0.22503984581249548, 0.21997355031157845, 0.21485721326507298, 0.20747785151925904, 0.1951575125421846, 0.19786953989265302, 0.19521942831946873, 0.19260692771998034, 0.18294025430896924, 0.18138260742212253, 0.1793358594124044, 0.17533948953558567, 0.17249000118928515, 0.16398925017828733, 0.1554861971376563], "accuracy": [0.32082948088645935, 0.6070532202720642, 0.7047945857048035, 0.7417778372764587, 0.7569673657417297, 0.7835160493850708, 0.7924976944923401, 0.8120459914207458, 0.8214238286018372, 0.8276317715644836, 0.8342359066009521, 0.8449346423149109, 0.8481045961380005, 0.8492933511734009, 0.8605204224586487, 0.8632941246032715, 0.8648791313171387, 0.8684453964233398, 0.8737286925315857, 0.8737286925315857, 0.8753136992454529, 0.878879964351654, 0.8815215826034546, 0.8918240666389465, 0.8891823887825012, 0.887201189994812, 0.891559898853302, 0.893541157245636, 0.9000132083892822, 0.9062210917472839, 0.9058248400688171, 0.9054285883903503, 0.9093911051750183, 0.9103156924247742, 0.9095231890678406, 0.9121648669242859, 0.9083344340324402, 0.915070652961731, 0.9165235757827759, 0.9204860925674438, 0.9237881302833557, 0.9225993752479553, 0.9257693886756897, 0.9220710396766663, 0.9290714859962463, 0.9274864792823792, 0.9295997619628906, 0.932769775390625, 0.9332981109619141, 0.9362039566040039, 0.9400343298912048], "val_loss": [0.9137442452566964, 0.6480448927198138, 0.5679537057876587, 0.5161922999790737, 0.4906513009752546, 0.4540253366742815, 0.4207168391772679, 0.40221366712025236, 0.38917132786342074, 0.37878975697926115, 0.36639790875571115, 0.3587621620723179, 0.3502813492502485, 0.3384141411100115, 0.342622126851763, 0.3242377894265311, 0.31192883423396517, 0.33225968054362703, 0.3135534184319632, 0.30451485088893343, 0.3122094188417707, 0.3079533066068377, 0.30054813623428345, 0.29839958463396343, 0.29954810653414043, 0.2952290432793753, 0.2884778806141445, 0.28850150959832327, 0.2951767274311611, 0.28749431882585796, 0.28891984054020475, 0.28616141421454294, 0.27532975162778583, 0.29211126055036274, 0.28304230315344675, 0.2932573982647487, 0.29478064605167936, 0.2981071812765939, 0.2884332963398525, 0.2886255383491516, 0.30110503094536917, 0.29176690748759676, 0.2975991368293762, 0.2906246440751212, 0.2993617994444711, 0.28763000454221455, 0.3042939475604466, 0.3005651320729937, 0.30364677735737394, 0.3013475111552647, 0.3081717661448887], "val_accuracy": [0.6190000176429749, 0.7213333249092102, 0.75, 0.7596666812896729, 0.7776666879653931, 0.7903333306312561, 0.8066666722297668, 0.8259999752044678, 0.82833331823349, 0.8330000042915344, 0.8393333554267883, 0.8479999899864197, 0.8463333249092102, 0.8513333201408386, 0.8463333249092102, 0.8569999933242798, 0.8613333106040955, 0.8510000109672546, 0.8553333282470703, 0.8650000095367432, 0.8616666793823242, 0.8653333187103271, 0.8653333187103271, 0.8709999918937683, 0.8610000014305115, 0.8703333139419556, 0.8740000128746033, 0.875333309173584, 0.8759999871253967, 0.878333330154419, 0.8736666440963745, 0.8786666393280029, 0.8809999823570251, 0.878333330154419, 0.878333330154419, 0.8796666860580444, 0.8813333511352539, 0.8790000081062317, 0.8833333253860474, 0.8809999823570251, 0.8806666731834412, 0.878333330154419, 0.8793333172798157, 0.8859999775886536, 0.8803333044052124, 0.887666642665863, 0.8863333463668823, 0.8870000243186951, 0.8856666684150696, 0.8853333592414856, 0.8846666812896729]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8465714454650879, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.025871692316612, 1.1387529925364135, 0.8116856573311692, 0.700008851646385, 0.6557360921773959, 0.5922713007641632, 0.5528620204606218, 0.5140207129667275, 0.4883854312588746, 0.47198492104366957, 0.45726841858207684, 0.4286160986452779, 0.42109679708139475, 0.4084079570034003, 0.39630911393078044, 0.37637959592110287, 0.3702576194874221, 0.35904919388681245, 0.35392683535802477, 0.3409095590636715, 0.3395948587131853, 0.3205186270680237, 0.31899814649957786, 0.3026419888437385, 0.30057115991196504, 0.30445444706707836, 0.28810714497983164, 0.27420259959992793, 0.2623495069087504, 0.2538980314476835, 0.24258304637783099, 0.24249085842020018, 0.2301082323472482, 0.23134033218185585, 0.22432411343288333, 0.2215486627114904, 0.2251986357195345], "accuracy": [0.32082948088645935, 0.6071853041648865, 0.7053229212760925, 0.7396644949913025, 0.7574957013130188, 0.7808743715286255, 0.791441023349762, 0.8108572363853455, 0.8231409192085266, 0.8277638554573059, 0.8323867321014404, 0.8446704745292664, 0.8455950617790222, 0.8518029451370239, 0.863029956817627, 0.86553955078125, 0.8622375130653381, 0.8648791313171387, 0.873860776424408, 0.872407853603363, 0.8755778670310974, 0.8823140859603882, 0.8798044919967651, 0.8868049383163452, 0.8914278149604797, 0.8857482671737671, 0.893541157245636, 0.8957865834236145, 0.9008057117462158, 0.9071456789970398, 0.9071456789970398, 0.9045040011405945, 0.9126931428909302, 0.9125610589981079, 0.9122969508171082, 0.917580246925354, 0.9119006991386414], "val_loss": [0.9137084824698312, 0.6481608322688511, 0.5676435061863491, 0.5158443110329765, 0.49159995147160124, 0.4531616483415876, 0.42355191707611084, 0.40579044818878174, 0.39060587542397635, 0.3818801726613726, 0.37128244979040964, 0.3606004800115313, 0.3533977781023298, 0.3394922358649118, 0.3444190536226545, 0.32173132044928415, 0.31471411670957294, 0.33202747787748066, 0.3224365711212158, 0.30605898584638325, 0.31525085653577534, 0.31081630502428326, 0.30590860332761494, 0.3021000027656555, 0.29984624896730694, 0.29780392135892597, 0.2810749411582947, 0.2890147396496364, 0.2918725439480373, 0.28642099244253977, 0.2877658009529114, 0.2841607928276062, 0.2823637809072222, 0.2941590803010123, 0.29226386547088623, 0.2910757064819336, 0.3006983143942697], "val_accuracy": [0.6190000176429749, 0.7210000157356262, 0.7486666440963745, 0.7620000243186951, 0.7776666879653931, 0.7926666736602783, 0.8066666722297668, 0.8233333230018616, 0.8286666870117188, 0.8326666951179504, 0.8396666646003723, 0.8456666469573975, 0.8489999771118164, 0.8523333072662354, 0.8460000157356262, 0.8569999933242798, 0.862666666507721, 0.8500000238418579, 0.8539999723434448, 0.8600000143051147, 0.8613333106040955, 0.8633333444595337, 0.8613333106040955, 0.8643333315849304, 0.862666666507721, 0.8713333606719971, 0.878333330154419, 0.8759999871253967, 0.8766666650772095, 0.8773333430290222, 0.8769999742507935, 0.8799999952316284, 0.8790000081062317, 0.8776666522026062, 0.8740000128746033, 0.8759999871253967, 0.8713333606719971]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 5, 5, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0258672288411708, 1.13873940474794, 0.8116725624560239, 0.6989714441565853, 0.6543354085407804, 0.5910761485152067, 0.552452286937375, 0.5138142886588193, 0.4861379460439139, 0.47158949739031425, 0.4537132314017987, 0.42752041418035003, 0.4208854941990492, 0.40562923966051173, 0.3936933136776753, 0.37193119290120347, 0.36754158741101106, 0.3558423515198143, 0.3554977226872974, 0.33701329741574326, 0.332457133201387, 0.3194173772604931, 0.3201655293452568, 0.30153885260155455, 0.2993479723652293, 0.29322544111079385, 0.2869385980525273, 0.27628429544804955, 0.2648641580344034, 0.2544109480685058, 0.24554939518641203, 0.24326744144815637, 0.23662899949248, 0.2341275515888251, 0.22505243222364865], "accuracy": [0.32082948088645935, 0.6069211363792419, 0.7049266695976257, 0.7401928305625916, 0.7580240368843079, 0.7823272943496704, 0.7936864495277405, 0.811649739742279, 0.8215559124946594, 0.8240655064582825, 0.833179235458374, 0.845859169960022, 0.8433496356010437, 0.8532558679580688, 0.8639545440673828, 0.86553955078125, 0.8642187118530273, 0.8689737319946289, 0.8733324408531189, 0.8776912093162537, 0.8749174475669861, 0.8796724081039429, 0.8800686597824097, 0.8874653577804565, 0.8891823887825012, 0.8905032277107239, 0.8952582478523254, 0.894069492816925, 0.9027869701385498, 0.9039757251739502, 0.9088627696037292, 0.9079381823539734, 0.909259021282196, 0.9116365313529968, 0.913089394569397], "val_loss": [0.9137163843427386, 0.6477624348231724, 0.5679440838950021, 0.5163754905973162, 0.4912289891924177, 0.4544943571090698, 0.42261825289045063, 0.4043350560324533, 0.38968612466539654, 0.3777550288609096, 0.36412352323532104, 0.3568152018955776, 0.3486274906567165, 0.33791920116969515, 0.34063940388815744, 0.3229987621307373, 0.3146670290402004, 0.32434860297611784, 0.3147134951182774, 0.3056786230632237, 0.31621237312044415, 0.3046089836529323, 0.30254900455474854, 0.2986642803464617, 0.29591286182403564, 0.29255122797829763, 0.28500049454825266, 0.29661689485822407, 0.2882171613829477, 0.2821595328194754, 0.2945767896515982, 0.2882238967078073, 0.28066010986055645, 0.28908652918679373, 0.288777836731502], "val_accuracy": [0.6190000176429749, 0.7206666469573975, 0.7483333349227905, 0.7603333592414856, 0.7760000228881836, 0.7896666526794434, 0.8080000281333923, 0.8240000009536743, 0.8289999961853027, 0.8336666822433472, 0.8420000076293945, 0.8463333249092102, 0.8486666679382324, 0.8513333201408386, 0.8483333587646484, 0.8573333621025085, 0.8583333492279053, 0.8569999933242798, 0.8543333411216736, 0.8653333187103271, 0.8629999756813049, 0.8619999885559082, 0.8616666793823242, 0.8673333525657654, 0.8666666746139526, 0.8713333606719971, 0.8756666779518127, 0.8740000128746033, 0.8759999871253967, 0.8796666860580444, 0.8733333349227905, 0.8766666650772095, 0.8756666779518127, 0.8786666393280029, 0.878000020980835]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 1, 0, 1, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.16914285719394684, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.148009303758929, 2.7662332610305524, 2.524935612793785, 2.7338148697948945, 2.620981017564817, 2.5688694484198273, 2.6881976840896313, 2.6541800961250703, 2.4814215065418628, 2.492687352597044, 2.6877669715579033, 2.4702280704229738], "accuracy": [0.17355699837207794, 0.11940298229455948, 0.11993131786584854, 0.09668471664190292, 0.1006472036242485, 0.1014397069811821, 0.10038304328918457, 0.1150442510843277, 0.09787346422672272, 0.10117553919553757, 0.09813763201236725, 0.09985470771789551], "val_loss": [2.038505349840437, 2.132392951420375, 2.3142551694597517, 2.323522227151053, 2.3117877415248325, 2.2288904190063477, 2.2031211171831404, 2.2099099159240723, 2.343123367854527, 2.2192749295915877, 2.143627166748047, 2.3070599692208424], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.12600000202655792, 0.10000000149011612, 0.10133333504199982, 0.1003333330154419, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [5, 1, 4, 1, 2, 5, 2, 2, 2, 9, 2, 0, 4, 1, 6, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 0, 0, 0, 2, 2, 0, 2, 0, 2, 0, 2, 1, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 37, 37, 22, 15, 7, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))))))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 2, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3024806557172766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 8, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 0, 0, 3, 9, 6, 5], [2, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 74, 17, 17, 60, 59, 23, 57, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [20, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 58, 58, 37, 21, 7, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), grad)))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, grad)))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 5, 4, 1, 2, 2, 2, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 6, 5, 4, 3, 3, 3, 5, 2, 8, 8, 1, 0, 3, 5], [1, 1, 0, 2, 1, 0, 2, 2, 1, 1, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 41, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 36, 36, 21, 15, 4, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [35953735.16852406, 5429205708.265751, 93779377375.3026, 659338168072.4872, 2902760971161.6133, 9611454259707.469], "accuracy": [0.09853387624025345, 0.10777968913316727, 0.1014397069811821, 0.09153348207473755, 0.10315678268671036, 0.09945846349000931], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 4, 1, 3, 5, 2, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 0, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 5, 4, 5, 2, 5, 9, 2, 5, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 3, 1, 6, 3, 5, 8, 8, 4], [1, 0, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [64, 26, 17, 17, 73, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.08857142925262451, "mapping_values": [1, 10, 10, 7, 3, 3, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302875501163852, 2.3019459903547244, 2.299956907795846, 2.2993539055781578, 2.2995813228293276, 2.2997261085971283, 2.3004527674564015, 2.2999023042728464, 2.3005996888827935, 2.300991258317642, 2.3015714414430537], "accuracy": [0.08928807079792023, 0.09259014576673508, 0.10091137140989304, 0.10038304328918457, 0.10289261490106583, 0.1002509593963623, 0.09496764093637466, 0.09840179979801178, 0.09642054885625839, 0.09206181764602661, 0.08440100401639938], "val_loss": [1.970623356955392, 1.96982022694179, 1.969147069113595, 1.969036442892892, 1.9691785403660365, 1.9697706358773368, 1.9705572128295898, 1.9711257389613561, 1.9715824808393205, 1.9720022337777274, 1.9724183763776506], "val_accuracy": [0.04233333468437195, 0.05133333429694176, 0.06066666543483734, 0.07766667008399963, 0.09433333575725555, 0.09566666930913925, 0.0860000029206276, 0.08633333444595337, 0.08433333039283752, 0.07699999958276749, 0.070333331823349]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [1, 5, 4, 2, 2, 9, 6, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 4, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 0, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0754285678267479, "mapping_values": [1, 40, 40, 25, 15, 6, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028913201468257, 2.3021794536314966, 2.300616980008382, 2.300221167031438, 2.3005072307183583, 2.3008555049956705, 2.30129146431069, 2.2998090212009115, 2.30034252879579, 2.2999458078380117, 2.301311613121179, 2.299121492306759, 2.2996338105645746, 2.3003878701144145, 2.3005988652034444, 2.3000537535738337, 2.3007192260569367, 2.3005011818900543], "accuracy": [0.08928807079792023, 0.09232597798109055, 0.09945846349000931, 0.09708096832036972, 0.09232597798109055, 0.09668471664190292, 0.09100515395402908, 0.09919429570436478, 0.09602430462837219, 0.09602430462837219, 0.09206181764602661, 0.09589222073554993, 0.09853387624025345, 0.09615638852119446, 0.0936468094587326, 0.10302469879388809, 0.10051512718200684, 0.09496764093637466], "val_loss": [1.9706901141575404, 1.9701946122305733, 1.9698054449898856, 1.969585623059954, 1.969477925981794, 1.969503402709961, 1.969597271510533, 1.9696910040719169, 1.9696452277047294, 1.9695629392351424, 1.9695253372192383, 1.9695912769862585, 1.969757420676095, 1.9700074195861816, 1.9702660696847099, 1.97049161366054, 1.9706779207502092, 1.9708561216081892], "val_accuracy": [0.041999999433755875, 0.04533333331346512, 0.05400000140070915, 0.05700000002980232, 0.05999999865889549, 0.06333333253860474, 0.0676666647195816, 0.070333331823349, 0.07566666603088379, 0.07833333313465118, 0.08100000023841858, 0.08133333176374435, 0.0820000022649765, 0.07966666668653488, 0.07533333450555801, 0.07133333384990692, 0.06966666877269745, 0.06700000166893005]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.05400000140070915, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029662523255796, 2.302715203293153, 2.3016823820072063, 2.3015854769945934, 2.302296055306407, 2.3028904508684667, 2.3033114275707467, 2.301516195723504, 2.3022787161884906, 2.3021374010784657, 2.303696694485563, 2.300632398614416, 2.301302527077619, 2.3029698475303744, 2.3020395887778213, 2.3007800063877815, 2.3018111319448087, 2.3007406114571447, 2.3008758848873283, 2.3011532657733134, 2.301235671654952, 2.301354195164368, 2.300046736994723, 2.299968564326123, 2.2988818497343497, 2.300862714961189, 2.3002757664606035, 2.3025418108858373, 2.300468549941273, 2.301769584696826, 2.301586217096752, 2.300222056936421, 2.300390799220968, 2.3002604242203146, 2.299866329614339, 2.2996722032302377, 2.3008207131402054], "accuracy": [0.08942015469074249, 0.09087307006120682, 0.09681680053472519, 0.0936468094587326, 0.08889182657003403, 0.09179764986038208, 0.09060890227556229, 0.0944393053650856, 0.09100515395402908, 0.08955223858356476, 0.08691058307886124, 0.08915598690509796, 0.08955223858356476, 0.08757099509239197, 0.09153348207473755, 0.09602430462837219, 0.09998679161071777, 0.09074098616838455, 0.09272222965955734, 0.0936468094587326, 0.08809932321310043, 0.09417514503002167, 0.09285431355237961, 0.09800554811954498, 0.09998679161071777, 0.09391097724437714, 0.09060890227556229, 0.09245806187391281, 0.09694888442754745, 0.09391097724437714, 0.08875974267721176, 0.10038304328918457, 0.10077928751707077, 0.09721305221319199, 0.09536388516426086, 0.09747721254825592, 0.09800554811954498], "val_loss": [1.9709128652300154, 1.970846516745431, 1.9707843235560827, 1.9707301684788294, 1.9706587110246931, 1.97058139528547, 1.9705108915056502, 1.970454216003418, 1.9703941345214844, 1.9703320094517298, 1.97027131489345, 1.970224244253976, 1.9701785360063826, 1.97011137008667, 1.9700677054268974, 1.9700234958103724, 1.9699694769723075, 1.969937869480678, 1.9698999268668038, 1.9698566028050013, 1.9698281969342912, 1.9698033332824707, 1.9697727475847517, 1.9697433880397253, 1.9697274480547224, 1.969719750540597, 1.969712393624442, 1.969693388257708, 1.9696728161403112, 1.9696383476257324, 1.9696168899536133, 1.9696051052638464, 1.9695888928004675, 1.9695649147033691, 1.969555241721017, 1.9695523806980677, 1.9695483616420202], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.0403333343565464, 0.041999999433755875, 0.04266666620969772, 0.04399999976158142, 0.044333335012197495, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.04600000008940697, 0.047333333641290665, 0.04833333194255829, 0.04833333194255829, 0.04899999871850014, 0.049666665494441986, 0.050999999046325684, 0.05166666582226753, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.05433333292603493, 0.05433333292603493, 0.05400000140070915, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.057999998331069946, 0.05900000035762787, 0.058666665107011795, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.058666665107011795]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2, 0, 0, 0, 1, 1, 3, 1, 1, 0, 1], [83, 51, 17, 17, 60, 59, 23, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3030143202319513, 2.302866437825324, 2.301910109382028, 2.30187358221342, 2.3027129532591446, 2.3034271539525113], "accuracy": [0.08902391046285629, 0.09074098616838455, 0.09549596905708313, 0.09285431355237961, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 2, 3, 9, 2, 2, 2, 5, 4, 0, 4, 1, 5, 2, 7, 6, 2, 8, 8, 8, 1, 4, 5, 3, 6, 3, 0, 5, 6, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [1, 1, 0, 0, 0, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 49, 22, 72, 1, 45, 37, 82, 42, 99], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030143202319513, 2.302866437825324, 2.301910109382028, 2.30187358221342, 2.3027129532591446, 2.3034271539525113], "accuracy": [0.08902391046285629, 0.09074098616838455, 0.09549596905708313, 0.09285431355237961, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [1, 5, 4, 2, 2, 9, 2, 2, 2, 5, 3, 0, 4, 1, 5, 5, 7, 6, 3, 8, 8, 8, 1, 4, 5, 3, 6, 9, 0, 5, 5, 5, 9, 1, 0, 8, 2, 3, 2, 8, 3, 0, 7, 8, 0, 6, 4, 1, 7, 9, 3, 8, 4, 2, 7, 5, 2, 0, 3, 4, 9, 7, 1, 3, 5, 6], [2, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 74, 51, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 33, 33, 20, 13, 4, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(grad, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3030143202319513, 2.302866437825324, 2.301910109382028, 2.30187358221342, 2.3027129532591446, 2.3034271539525113], "accuracy": [0.08902391046285629, 0.09074098616838455, 0.09549596905708313, 0.09285431355237961, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 5, 4, 1, 2, 5, 2, 2, 5, 3, 1, 0, 4, 0, 5, 5, 7, 6, 2, 3, 2, 8, 1, 6, 5, 0, 3, 3, 3, 4, 2, 8, 3, 1, 0, 3, 9, 6, 8, 0, 4, 5, 1, 8, 9], [0, 1, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 1, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 51, 17, 17, 60, 59, 85, 22, 72, 1, 50], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 71, 71, 45, 26, 11, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))))))), tf.math.square(grad))), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(grad)))), grad)), tf.math.subtract(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad))), grad)))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), grad)))))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030143202319513, 2.302866437825324, 2.301910109382028, 2.30187358221342, 2.3027129532591446, 2.3034271539525113], "accuracy": [0.08902391046285629, 0.09074098616838455, 0.09549596905708313, 0.09285431355237961, 0.08836349099874496, 0.09047681838274002], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]