[{"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 4, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8500000238418579, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0414055879357593, 1.1354921744043298, 0.792864199721377, 0.6978022905388654, 0.6361158322255058, 0.5888675654710732, 0.5532810484586753, 0.5305636836757844, 0.5025754567811895, 0.4796879152580259, 0.4634652685857704, 0.44597185300467523, 0.43460109820061704, 0.4104717070392535, 0.41173860528339656, 0.39413172518336276, 0.3766706911934334, 0.36571791315784136, 0.3545310899857375, 0.3489153932318979, 0.34349953856261617, 0.33675959539797645, 0.32188736990521283, 0.3063660542080982, 0.2981744480170846, 0.29516798093680774, 0.2844606040648623, 0.2863155520233134, 0.2787437126377019, 0.2678708784737843, 0.25419701250662907, 0.2517231876556317, 0.2532700096056399, 0.24350973583876953, 0.23751774512545276, 0.22457964521522897, 0.21515850070925469], "accuracy": [0.3077532649040222, 0.5967507362365723, 0.7040021419525146, 0.7364945411682129, 0.7606657147407532, 0.7790252566337585, 0.796328067779541, 0.7967243194580078, 0.81112140417099, 0.8211596608161926, 0.8308017253875732, 0.8342359066009521, 0.8424250483512878, 0.8515387773513794, 0.8508783578872681, 0.8555012345314026, 0.8663320541381836, 0.8628978729248047, 0.8710870146751404, 0.8732003569602966, 0.8710870146751404, 0.8745211958885193, 0.8817857503890991, 0.8862766027450562, 0.8906353116035461, 0.8928807377815247, 0.8960506916046143, 0.893541157245636, 0.8945978283882141, 0.9009377956390381, 0.9075419306755066, 0.9076740145683289, 0.9013340473175049, 0.9058248400688171, 0.9093911051750183, 0.913089394569397, 0.9198256731033325], "val_loss": [1.0124345506940569, 0.6280751058033535, 0.5710840225219727, 0.5218761648450579, 0.4816224234444754, 0.44581455843789236, 0.4330963747841971, 0.41638760907309397, 0.3937355620520456, 0.3810105579239981, 0.3687886510576521, 0.3644036991255624, 0.36343112162181307, 0.35375683648245676, 0.3359485609190805, 0.3266151802880423, 0.32810176270348684, 0.31823818172727314, 0.31236837591443745, 0.3111930063792637, 0.32209569215774536, 0.306183968271528, 0.29569355079105925, 0.2985673887389047, 0.29615301745278494, 0.29260952132088797, 0.2968018480709621, 0.30238962173461914, 0.2938483442578997, 0.29092586040496826, 0.28787619726998465, 0.2888668179512024, 0.291946930544717, 0.2973839555467878, 0.2882167867251805, 0.2859914643423898, 0.2930651732853481], "val_accuracy": [0.5529999732971191, 0.731333315372467, 0.7413333058357239, 0.765333354473114, 0.7739999890327454, 0.8016666769981384, 0.8100000023841858, 0.8133333325386047, 0.8306666612625122, 0.8259999752044678, 0.8383333086967468, 0.8426666855812073, 0.8370000123977661, 0.8446666598320007, 0.8546666502952576, 0.859666645526886, 0.8553333282470703, 0.8553333282470703, 0.8619999885559082, 0.862666666507721, 0.8556666374206543, 0.8659999966621399, 0.8700000047683716, 0.8706666827201843, 0.8700000047683716, 0.8709999918937683, 0.8723333477973938, 0.8679999709129333, 0.8713333606719971, 0.8756666779518127, 0.8759999871253967, 0.8803333044052124, 0.8756666779518127, 0.875333309173584, 0.8799999952316284, 0.8796666860580444, 0.878333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [4, 44, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8488571643829346, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0414056418798916, 1.1355794596083175, 0.7924249615998017, 0.6975244833037145, 0.6348759592988661, 0.5895468236637658, 0.5536867107980995, 0.5294140475993899, 0.502893513393062, 0.4839826815982678, 0.46473468928100287, 0.44579220005880493, 0.43842763912408517, 0.41195705073258626, 0.4127385969002013, 0.3955183787518142, 0.3763926181779357, 0.36352316583498767, 0.3517369148186752, 0.34986610938340384, 0.34269864259457716, 0.3387728138189463, 0.3238097036739839, 0.3069688215696297, 0.29987398933079484, 0.2986697060139802, 0.28279207526590405, 0.2846958873026627, 0.27883696602934216, 0.265606759089237, 0.2516223926467666, 0.25242113410292866, 0.24811790151177868, 0.24539183388611643, 0.23696991134242548, 0.22064392469412994, 0.21495966292871477, 0.2077461919705346, 0.21233821229542, 0.20833223014814098, 0.1999827624567905, 0.2013916104595029, 0.19704880745395803, 0.1873169402247328, 0.19110026408841566], "accuracy": [0.3077532649040222, 0.5964865684509277, 0.7045304179191589, 0.735569953918457, 0.7606657147407532, 0.7798177003860474, 0.7943468689918518, 0.7989697456359863, 0.8086118102073669, 0.819970965385437, 0.8289526104927063, 0.8374059200286865, 0.843481719493866, 0.852331280708313, 0.8487650156021118, 0.8560295701026917, 0.8650112152099609, 0.86553955078125, 0.8717474341392517, 0.869502067565918, 0.8679170608520508, 0.8755778670310974, 0.8808611631393433, 0.8865407705307007, 0.8878615498542786, 0.8877294659614563, 0.8968431949615479, 0.893541157245636, 0.8963148593902588, 0.9015982151031494, 0.9083344340324402, 0.9055606722831726, 0.9072777628898621, 0.9026548862457275, 0.9117686152458191, 0.9159952402114868, 0.9187690019607544, 0.9186369180679321, 0.917580246925354, 0.9191652536392212, 0.9225993752479553, 0.9241843819618225, 0.926429808139801, 0.9305243492126465, 0.9272223114967346], "val_loss": [1.0124330180031913, 0.6279694012233189, 0.5704672677176339, 0.521246177809579, 0.4804889644895281, 0.44740751811436247, 0.43255522421428133, 0.41634381668908255, 0.39383236851011005, 0.3812324660164969, 0.3719936524118696, 0.3651752471923828, 0.36629838602883474, 0.35392785923821585, 0.336505617414202, 0.3295632175036839, 0.32607141562870573, 0.3197662319455828, 0.31586073126111713, 0.3142092653683254, 0.32108278785433086, 0.30521728311266216, 0.29953569173812866, 0.29801532200404574, 0.29756459168025423, 0.28852276291166035, 0.29123146193368094, 0.3075494255338396, 0.2969996758869716, 0.2971470526286534, 0.2919414724622454, 0.288350122315543, 0.3005797948156084, 0.3006118025098528, 0.290210953780583, 0.2882930977003915, 0.29311422790799824, 0.2943111402647836, 0.29050263336726595, 0.30202220167432514, 0.29875658239637104, 0.28854929549353464, 0.29759861741747173, 0.29822565828050884, 0.29555546385901316], "val_accuracy": [0.5529999732971191, 0.7306666374206543, 0.7426666617393494, 0.7666666507720947, 0.7746666669845581, 0.7990000247955322, 0.8096666932106018, 0.8166666626930237, 0.8289999961853027, 0.8256666660308838, 0.8363333344459534, 0.8416666388511658, 0.8343333601951599, 0.843666672706604, 0.8513333201408386, 0.856333315372467, 0.8536666631698608, 0.8519999980926514, 0.8583333492279053, 0.8613333106040955, 0.8560000061988831, 0.8673333525657654, 0.8666666746139526, 0.8629999756813049, 0.8703333139419556, 0.8703333139419556, 0.8740000128746033, 0.8673333525657654, 0.8683333396911621, 0.8726666569709778, 0.871999979019165, 0.8803333044052124, 0.871999979019165, 0.8763333559036255, 0.8776666522026062, 0.8773333430290222, 0.8809999823570251, 0.8790000081062317, 0.8759999871253967, 0.8846666812896729, 0.878333330154419, 0.8840000033378601, 0.8809999823570251, 0.8846666812896729, 0.8803333044052124]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0403500548789624, 1.1376506398225175, 0.791438064137785, 0.696510345464086, 0.6288526789654894, 0.5869798610522495, 0.5542572350738827, 0.5340086072348742, 0.5125555138168492, 0.4891778435988622, 0.46905590324369734, 0.4509206203114733, 0.4397883885265137, 0.41915124898825373, 0.4141312190656885, 0.4029404011857256, 0.38240614751106117, 0.3689903929768584, 0.3587364964890773, 0.35061450312638626, 0.3441917050618537, 0.33973688835859017, 0.3269430870046831, 0.31277370983898334, 0.3084969932904506, 0.30288940624805916, 0.28997388998153045, 0.2880484552714708, 0.2792986238779031, 0.27342595888827975, 0.26193620652853933, 0.2639445073813054, 0.2553252856319827, 0.2440161660260465, 0.23935603093650631, 0.22953385751575858, 0.21930235059049388, 0.20545247071383888, 0.21234388869900855, 0.21148591375330483, 0.20504887782705458, 0.2020114487259222, 0.1972683445317886], "accuracy": [0.30762118101119995, 0.5982036590576172, 0.7058512568473816, 0.737022876739502, 0.7663452625274658, 0.778232753276825, 0.7952714562416077, 0.7969884872436523, 0.8072909712791443, 0.817989706993103, 0.8281601071357727, 0.8329150676727295, 0.8404437899589539, 0.8485008478164673, 0.8486329317092896, 0.8499537706375122, 0.8622375130653381, 0.8643507957458496, 0.8679170608520508, 0.867520809173584, 0.8689737319946289, 0.8710870146751404, 0.8796724081039429, 0.8868049383163452, 0.8862766027450562, 0.8889182209968567, 0.8891823887825012, 0.8910315632820129, 0.8967111110687256, 0.8971073627471924, 0.9038436412811279, 0.8989565372467041, 0.902390718460083, 0.9082023501396179, 0.9062210917472839, 0.9120327830314636, 0.9186369180679321, 0.919561505317688, 0.9169198274612427, 0.9177123308181763, 0.9222031235694885, 0.9211464524269104, 0.9280148148536682], "val_loss": [1.0223639011383057, 0.6263774803706578, 0.5717154570988247, 0.5185934475490025, 0.4783742427825928, 0.4469574008669172, 0.4394950696400234, 0.4225116031510489, 0.3976744157927377, 0.38385536840983797, 0.3747217655181885, 0.3664663093430655, 0.3639154774802072, 0.3531464423452105, 0.33620106322424753, 0.33266315289906095, 0.3289429119655064, 0.3224592549460275, 0.3169993758201599, 0.3144388794898987, 0.32614476340157644, 0.31049040385654997, 0.3022374766213553, 0.2966990215437753, 0.29742054428373066, 0.29496948208127705, 0.2977566548756191, 0.3050719584737505, 0.2974142176764352, 0.29081731183188303, 0.2913069895335606, 0.2865751385688782, 0.291679961340768, 0.2900293043681553, 0.2887769511767796, 0.2880890539714268, 0.29181926591055735, 0.28468678678785053, 0.29101658718926565, 0.2934125917298453, 0.29138430527278353, 0.2888327155794416, 0.30044818775994436], "val_accuracy": [0.5366666913032532, 0.734000027179718, 0.734333336353302, 0.7673333287239075, 0.7823333144187927, 0.7976666688919067, 0.8059999942779541, 0.8086666464805603, 0.8306666612625122, 0.824999988079071, 0.8366666436195374, 0.8460000157356262, 0.8376666903495789, 0.8429999947547913, 0.8513333201408386, 0.8506666421890259, 0.8489999771118164, 0.8546666502952576, 0.8600000143051147, 0.8633333444595337, 0.8553333282470703, 0.8656666874885559, 0.8650000095367432, 0.8673333525657654, 0.8659999966621399, 0.8679999709129333, 0.8679999709129333, 0.8730000257492065, 0.8740000128746033, 0.8709999918937683, 0.8743333220481873, 0.8769999742507935, 0.878000020980835, 0.8799999952316284, 0.8790000081062317, 0.8796666860580444, 0.8790000081062317, 0.8846666812896729, 0.8790000081062317, 0.8836666941642761, 0.8823333382606506, 0.878000020980835, 0.8769999742507935]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8391428589820862, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040349996463104, 1.137669875290825, 0.7913067798572934, 0.6965302485422042, 0.6286708040086899, 0.5871830439728171, 0.5529996806037519, 0.5348854611704394, 0.5105154595244689, 0.48598461597272197, 0.46618546470517513, 0.44811051413997477, 0.4375089433104717, 0.42001353145401477, 0.4129658185251637, 0.40132901826712275, 0.3788929752717165, 0.36566627658573925, 0.3533774503525049, 0.3459689077125202, 0.34167382722958406, 0.3366584570345515, 0.3265857818403485, 0.3145411821671953, 0.3057296016252178, 0.30494759252373377, 0.29206853983755265, 0.28869879750008154, 0.2805142901978551, 0.26991040739739464, 0.25984700008972905, 0.2595283935775752, 0.253043053436273, 0.2440929883199676, 0.2383503742371379, 0.22392285940842685, 0.2105485363533122, 0.2088557718302737, 0.2133658317849778, 0.2162199634972533, 0.20559803199349236, 0.21049302120242436, 0.20389947213509046, 0.199218637086948, 0.19326712885482075, 0.17747250154640035, 0.17448804622683087, 0.17523763387737934, 0.1719904975403947, 0.17510829915924472, 0.15974664698738575, 0.15730172462821432], "accuracy": [0.30762118101119995, 0.5983357429504395, 0.7063795924186707, 0.7371549606323242, 0.7666094303131104, 0.7798177003860474, 0.7960638999938965, 0.796328067779541, 0.8074230551719666, 0.822348415851593, 0.8305375576019287, 0.8352925777435303, 0.8438779711723328, 0.8471800088882446, 0.8510104417800903, 0.8487650156021118, 0.8615770936012268, 0.8644828796386719, 0.8691058158874512, 0.8708229064941406, 0.8676528930664062, 0.8754457831382751, 0.8795403242111206, 0.8857482671737671, 0.8857482671737671, 0.8854840993881226, 0.8901069760322571, 0.8920882344245911, 0.8952582478523254, 0.8997490406036377, 0.9031832218170166, 0.9030511379241943, 0.9039757251739502, 0.9060890078544617, 0.9093911051750183, 0.9167877435684204, 0.9191652536392212, 0.9179764986038208, 0.9186369180679321, 0.9174481630325317, 0.9183727502822876, 0.9189010858535767, 0.923920214176178, 0.923920214176178, 0.9266939759254456, 0.9326376914978027, 0.9329018592834473, 0.9298639297485352, 0.9342226982116699, 0.9292035102844238, 0.941091001033783, 0.9368643760681152], "val_loss": [1.0223686354500907, 0.6262914793831962, 0.5712924684797015, 0.5179910830089024, 0.4778355530330113, 0.4482180731637137, 0.43920205320630756, 0.4232384647641863, 0.3956351620810373, 0.3848369632448469, 0.3704964518547058, 0.36475887468882967, 0.36797672510147095, 0.34256700958524433, 0.33254440341676983, 0.33412312609808786, 0.3258181299482073, 0.31979870796203613, 0.3159253001213074, 0.31402467829840525, 0.3260354825428554, 0.309405973979405, 0.30188844885144916, 0.2941987429346357, 0.2964424746377127, 0.2944751467023577, 0.29812430483954294, 0.30435452290943693, 0.2991080454417637, 0.29054259402411325, 0.29315491233553204, 0.28645600591387066, 0.2922599060194833, 0.2925768324307033, 0.2965054597173418, 0.2893516591617039, 0.2918331963675363, 0.2896279777799334, 0.2852217895644052, 0.2893033027648926, 0.2951462779726301, 0.2896125742367336, 0.29589405230113436, 0.29637725012642996, 0.29279856170926777, 0.2968082513128008, 0.2959939922605242, 0.29545871700559345, 0.30919394322804045, 0.3023393154144287, 0.31603756121226717, 0.3166000076702663], "val_accuracy": [0.5366666913032532, 0.7336666584014893, 0.7353333234786987, 0.7673333287239075, 0.7816666960716248, 0.7979999780654907, 0.8050000071525574, 0.8083333373069763, 0.8303333520889282, 0.8230000138282776, 0.8413333296775818, 0.8450000286102295, 0.8383333086967468, 0.8506666421890259, 0.8536666631698608, 0.8550000190734863, 0.8533333539962769, 0.8546666502952576, 0.8643333315849304, 0.862333357334137, 0.8556666374206543, 0.8640000224113464, 0.8673333525657654, 0.8673333525657654, 0.8683333396911621, 0.8686666488647461, 0.8700000047683716, 0.8700000047683716, 0.8736666440963745, 0.8743333220481873, 0.878000020980835, 0.8799999952316284, 0.8769999742507935, 0.874666690826416, 0.8763333559036255, 0.8809999823570251, 0.8826666474342346, 0.8836666941642761, 0.8826666474342346, 0.8840000033378601, 0.8813333511352539, 0.8846666812896729, 0.8840000033378601, 0.8816666603088379, 0.8803333044052124, 0.8836666941642761, 0.8863333463668823, 0.8846666812896729, 0.8816666603088379, 0.8826666474342346, 0.8849999904632568, 0.8796666860580444]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [6, 3, 5, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2145549942394998, 1.6610825523456578, 1.1909757840587731, 1.0483644107518304, 0.9294819801931667, 0.8670054883091536, 0.8186000389130738, 0.7681509719753404, 0.7710308337554861, 0.7382174964594158, 0.7327373825548001, 0.7016311683564721, 0.6856337616141636, 0.6874709575167737, 0.6537765998409535, 0.6623890236651877, 0.6326234853814039, 0.614602545784323, 0.6125257942245432, 0.6277455191460457, 0.6122989537866754, 0.6046728002963647, 0.5862716158792689, 0.5918478652108631, 0.5827397957233594, 0.5654805481488978, 0.5788831510217576, 0.5731310198304204, 0.5563651458729906], "accuracy": [0.2467309534549713, 0.47193238139152527, 0.5816932916641235, 0.6345264911651611, 0.6654338836669922, 0.6837934255599976, 0.7040021419525146, 0.7199841737747192, 0.7143045663833618, 0.7251353859901428, 0.7260599732398987, 0.7372870445251465, 0.7440232634544373, 0.7475894689559937, 0.7537974119186401, 0.7531369924545288, 0.7644960880279541, 0.7681944370269775, 0.7724210619926453, 0.7683265209197998, 0.7697794437408447, 0.7729493975639343, 0.7840443849563599, 0.7755910754203796, 0.787082314491272, 0.7917051911354065, 0.7784969210624695, 0.7832518815994263, 0.7950072884559631], "val_loss": [1.6704062734331404, 0.9745531763349261, 0.8622199467250279, 0.7249940804072789, 0.6497607401439122, 0.6081125225339618, 0.560290949685233, 0.5674005917140416, 0.5532351561955043, 0.5973571709224156, 0.520081639289856, 0.5193790537970406, 0.49743519510541645, 0.5058082853044782, 0.48921750273023334, 0.5005362204142979, 0.472441417830331, 0.47732273169926237, 0.4871108191353934, 0.472270062991551, 0.4535316058567592, 0.4875680719103132, 0.45102553708212717, 0.44206398725509644, 0.4484763315745762, 0.43928166798182894, 0.4817602464130947, 0.4349884646279471, 0.4408985376358032], "val_accuracy": [0.4833333194255829, 0.5873333215713501, 0.6506666541099548, 0.6956666707992554, 0.7276666760444641, 0.7336666584014893, 0.7599999904632568, 0.7480000257492065, 0.7473333477973938, 0.7153333425521851, 0.7789999842643738, 0.7720000147819519, 0.7839999794960022, 0.7803333401679993, 0.7833333611488342, 0.7863333225250244, 0.7866666913032532, 0.7946666479110718, 0.7776666879653931, 0.7773333191871643, 0.8023333549499512, 0.7770000100135803, 0.7950000166893005, 0.8169999718666077, 0.8036666512489319, 0.800000011920929, 0.7703333497047424, 0.8063333630561829, 0.8019999861717224]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.696571409702301, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304471866534355, 2.302386983636663, 2.3008386299295545, 2.2991740649418193, 2.297158608709297, 2.2949455541752553, 2.293757285392831, 2.293629997772642, 2.2902766589428123, 2.288162435507179, 2.2868175888263065, 2.28315165952653, 2.2824778963058003, 2.2785932102286504, 2.2793631510192283, 2.2770519154245954, 2.2739338948190992, 2.2734088898649807, 2.269535059658701, 2.2666677164914915, 2.2674837800820646, 2.259057554287319, 2.253637833350276, 2.2543464081713456, 2.2472137565295363, 2.2339630171670386, 2.232119642023901, 2.2206728987453825, 2.2099110475541925, 2.1912500027888453, 2.175021231497252, 2.1450576642091486, 2.1144123542829982, 2.0732421226284807, 2.020516810557625, 1.9473717458936848, 1.8456314154241882, 1.7034762741756981, 1.5687421446132497, 1.4270510546929014, 1.2695445054715193, 1.1924315866084383, 1.1665081314485717, 1.1279174703506825, 1.093490833155058, 1.0853746023475377, 1.1497443626585448, 1.1389499775029097, 1.1427720541872795, 1.191571532806086, 1.1804532095772196, 1.2009683222330447, 1.2903587109597603, 1.2396093494053515, 1.2661232723772187], "accuracy": [0.08611807972192764, 0.09126931428909302, 0.09338264167308807, 0.1022322028875351, 0.10130762308835983, 0.11279883980751038, 0.11530841141939163, 0.11940298229455948, 0.1208558976650238, 0.12693171203136444, 0.13340377807617188, 0.13380002975463867, 0.13221503794193268, 0.14674416184425354, 0.13815876841545105, 0.14581957459449768, 0.149649977684021, 0.1492537260055542, 0.15334829688072205, 0.15876370668411255, 0.15255580842494965, 0.1678774207830429, 0.16510368883609772, 0.16312244534492493, 0.17038699984550476, 0.19495442509651184, 0.18993528187274933, 0.18914277851581573, 0.20155857503414154, 0.21661603450775146, 0.22837141156196594, 0.24725927412509918, 0.25624093413352966, 0.2769779562950134, 0.29639413952827454, 0.32241448760032654, 0.35609564185142517, 0.3937392830848694, 0.4282129108905792, 0.4748381972312927, 0.5325584411621094, 0.5675604343414307, 0.5705983638763428, 0.5729758143424988, 0.5982036590576172, 0.5982036590576172, 0.59225994348526, 0.6042794585227966, 0.6004490852355957, 0.5926561951637268, 0.5840708017349243, 0.5773345828056335, 0.5729758143424988, 0.5709945559501648, 0.5494650602340698], "val_loss": [1.9706509453909737, 1.9696833065577917, 1.9683042934962682, 1.9666699000767298, 1.964902400970459, 1.9631144659859794, 1.9613223757062639, 1.959479876926967, 1.9576112202235632, 1.9557813916887556, 1.9539284706115723, 1.952018874032157, 1.950000422341483, 1.9478536333356584, 1.9456409045628138, 1.9432789257594518, 1.9407502583095007, 1.9379829679216658, 1.9349632944379533, 1.9316175324576241, 1.9277928216116769, 1.9230500629970007, 1.91708585194179, 1.9099136080060686, 1.9015492030552454, 1.8928120476858956, 1.8829163823808943, 1.8707329886300224, 1.85504150390625, 1.8347344398498535, 1.809126853942871, 1.7767605100359236, 1.73456266948155, 1.6764398642948695, 1.5961179733276367, 1.4838488101959229, 1.330195529120309, 1.1513965129852295, 0.994929449898856, 0.8796579497201102, 0.7962888649531773, 0.7979457548686436, 0.7564222812652588, 0.7534783567701068, 0.6990258693695068, 0.728840708732605, 0.7419223615101406, 0.6916886227471488, 0.7047527006694249, 0.7080212320600238, 0.7507242134639195, 0.7489101205553327, 0.7214358534131732, 0.7094177688871112, 0.8160251549312046], "val_accuracy": [0.03999999910593033, 0.04766666516661644, 0.05433333292603493, 0.06566666811704636, 0.07866666465997696, 0.0976666659116745, 0.11299999803304672, 0.12600000202655792, 0.13566666841506958, 0.14366666972637177, 0.1483333259820938, 0.15299999713897705, 0.16300000250339508, 0.16966666281223297, 0.18400000035762787, 0.19966666400432587, 0.21566666662693024, 0.22233332693576813, 0.23066666722297668, 0.23866666853427887, 0.25433334708213806, 0.26866665482521057, 0.2853333353996277, 0.2966666519641876, 0.29899999499320984, 0.29866665601730347, 0.3190000057220459, 0.35733333230018616, 0.3856666684150696, 0.4076666533946991, 0.4243333339691162, 0.4313333332538605, 0.437333345413208, 0.44699999690055847, 0.46399998664855957, 0.5103333592414856, 0.5786666870117188, 0.6036666631698608, 0.5830000042915344, 0.6100000143051147, 0.6813333630561829, 0.6740000247955322, 0.6489999890327454, 0.6779999732971191, 0.7056666612625122, 0.6766666769981384, 0.6963333487510681, 0.7020000219345093, 0.7153333425521851, 0.7253333330154419, 0.6966666579246521, 0.6959999799728394, 0.6976666450500488, 0.6959999799728394, 0.6703333258628845]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 4, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.13199999928474426, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303302559161687, 2.299541230876259, 2.299768756645514, 2.301578444449531, 2.302137693283722, 2.3028198874716304, 2.303266585573875, 2.303689624151266, 2.304203895514179], "accuracy": [0.08902391046285629, 0.10328886657953262, 0.10579843819141388, 0.10249637067317963, 0.11015717685222626, 0.11161009222269058, 0.10447761416435242, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9687803813389368, 1.9695888246808733, 1.9718435151236398, 1.9730264799935477, 1.9738069943019323, 1.9741760662623815, 1.9744875090462821, 1.9749095099312919, 1.9754921368190221], "val_accuracy": [0.07599999755620956, 0.1146666631102562, 0.11033333092927933, 0.11766666918992996, 0.11100000143051147, 0.10166666656732559, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 1, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10314285755157471, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034004626603504, 2.300260608442833, 2.300224542869726, 2.3019492690116974, 2.3022616141035477, 2.3028197136726423, 2.303366240792507], "accuracy": [0.08889182657003403, 0.10170386731624603, 0.10302469879388809, 0.10077928751707077, 0.10632677376270294, 0.11134592443704605, 0.10289261490106583], "val_loss": [1.9692679132734026, 1.970057419368199, 1.9722555024283273, 1.973229135785784, 1.973782675606864, 1.9742084911891393, 1.9746452059064592], "val_accuracy": [0.07133333384990692, 0.11366666853427887, 0.10566666722297668, 0.11166666448116302, 0.10866666585206985, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 2, 7, 4, 3, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302041659533403, 2.3025841982199955, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09166556596755981, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2569861.904830904, 3167490353.937921, 190274901461.73346, 3376493327744.2534, 30478816589519.68, 180373568934931.62], "accuracy": [0.09919429570436478, 0.1026284471154213, 0.09866596013307571, 0.10130762308835983, 0.09430722147226334, 0.10077928751707077], "val_loss": [39124587.428571425, 15364787638.857143, 539578147986.2857, 6865431672539.429, 49760630659949.71, 252048986154130.28], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [20, 43, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.sqrt(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302535574906349, 2.3025792005622328, 2.3025783270955666, 2.30257878418785, 2.302583078336029, 2.3025840512828553], "accuracy": [0.08968432247638702, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736434391566686, 1.9736438478742326, 1.9736461639404297, 1.9736470494951521, 1.9736477306910925, 1.973649365561349], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4623617401306954, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02852991595864296, 0.09206181764602661, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.8660614831107005, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.04466666653752327, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [7, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [37295132.57931543, 5540552620.37987, 93817485602.79382, 660591622419.6455, 2923949990698.4355, 9678619528675.53], "accuracy": [0.09945846349000931, 0.1026284471154213, 0.09866596013307571, 0.10130762308835983, 0.09430722147226334, 0.10077928751707077], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3028356225939945, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [174.5798850857492, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0408136323094368, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [835959972.5714285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09942857176065445, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3044426002837506, 2.30235274649567, 2.300939630350464, 2.2997271101063173, 2.2989678258798882, 2.298860127348642, 2.299248863693084, 2.2997177374629043, 2.3000716122307434, 2.3006269945019446, 2.3008188178211455], "accuracy": [0.08598599582910538, 0.09100515395402908, 0.0952318087220192, 0.09998679161071777, 0.10328886657953262, 0.10434553027153015, 0.10870426893234253, 0.10738343745470047, 0.10857218503952026, 0.10474177449941635, 0.1010434553027153], "val_loss": [1.9706872531345911, 1.969909940447126, 1.969182082584926, 1.96887241091047, 1.9688283375331335, 1.9690848759242467, 1.9697223390851701, 1.970508439200265, 1.9711809158325195, 1.9718293462480818, 1.9724130630493164], "val_accuracy": [0.041999999433755875, 0.05133333429694176, 0.06666667014360428, 0.09033333510160446, 0.1146666631102562, 0.12866666913032532, 0.12600000202655792, 0.12700000405311584, 0.1263333261013031, 0.12333333492279053, 0.10400000214576721]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 4, 3, 3, 0], [38, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3045689271441416, 2.3031299420635003, 2.302882069751587, 2.302708439964896, 2.3025963330990002, 2.3022745074124904], "accuracy": [0.08598599582910538, 0.08994849026203156, 0.0886276587843895, 0.09311848133802414, 0.08889182657003403, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [55, 98, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3045689271441416, 2.3031299420635003, 2.302882069751587, 2.302708439964896, 2.3025963330990002, 2.3022745074124904], "accuracy": [0.08598599582910538, 0.08994849026203156, 0.0886276587843895, 0.09311848133802414, 0.08889182657003403, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3045689271441416, 2.3031299420635003, 2.302882069751587, 2.302708439964896, 2.3025963330990002, 2.3022745074124904], "accuracy": [0.08598599582910538, 0.08994849026203156, 0.0886276587843895, 0.09311848133802414, 0.08889182657003403, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1, 8, 4], [7, 1, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 19, 12, 10, 2, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304569300470288, 2.303131188478421, 2.3028820654688067, 2.3026983494204996, 2.302571156147433, 2.302222264173591], "accuracy": [0.08598599582910538, 0.08994849026203156, 0.08849557489156723, 0.09351472556591034, 0.08902391046285629, 0.09140139818191528], "val_loss": [1.9710000583103724, 1.9709997858319963, 1.9709927695138114, 1.9709794861929757, 1.97096129826137, 1.9709288052150182], "val_accuracy": [0.03799999877810478, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03700000047683716, 0.03733333200216293]}}]