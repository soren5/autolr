[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7877143025398254, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2930165361876282, 2.270079106072771, 2.2437314790678595, 2.2123137111472353, 2.1704291810511975, 2.1163344464801512, 2.044876152624181, 1.95314337213388, 1.8485261250984526, 1.7226975277005216, 1.617866585771437, 1.5075462309124763, 1.4284026522945656, 1.343699338413768, 1.2733395001860248, 1.2382137535144593, 1.1802576227966568, 1.1406578072435931, 1.1167614594930513, 1.0891774993263388, 1.046585326213028, 1.022503761772183, 1.0014095840956698, 0.9767406809174106, 0.9678126097418267, 0.9609713452272663, 0.9404269135576182, 0.9162622279715246, 0.903382094859636, 0.8950082467704826, 0.8929881841798484, 0.8825578690756108, 0.8690163612192522, 0.8586978701757261, 0.8538789343619785, 0.8371334942324664, 0.8388779460950818, 0.8208917997705623, 0.819845956416729, 0.8138654581733021, 0.8071004268263687, 0.7960974243590703, 0.7969954109084825, 0.7982265708185442, 0.7895606124421561, 0.7732428316001831, 0.7742962350289205, 0.7698231916921392, 0.7618962706686279, 0.7648350177833417, 0.7494142607627937, 0.7541899185737425, 0.7336844816309916, 0.7414293394758245, 0.7444965126901459, 0.7354440849218795, 0.7252286078435177, 0.7254300139221486, 0.7218083937674182, 0.7281705130832921, 0.7207627582779933, 0.7234305384577604, 0.7084209774589463, 0.7120149543240968, 0.7047604773227549, 0.7015983887541296, 0.6977473412916062, 0.6990337116197746, 0.6983982536298661, 0.6923646991593947, 0.6900138604705517, 0.6965577261968453, 0.6754284748044138, 0.6823509238761697, 0.6782809387124399, 0.6778543237461437, 0.6725639636018068, 0.6756815971353224, 0.6728819222293431, 0.6651014848439417, 0.6664030227710259, 0.6551513583621392, 0.6688829131445093, 0.6593935880143298, 0.6629882076271237, 0.6626859704390997, 0.6533428739405516, 0.6545983617016983, 0.6443725101400786, 0.6578674407887689, 0.6475363476338435, 0.6435400168373915, 0.6478394548953752, 0.6405456010156289, 0.6459662448130169, 0.6312613370097026, 0.6366420591732515, 0.6387642424230358, 0.6349365993371776], "accuracy": [0.11940298229455948, 0.17316074669361115, 0.24303261935710907, 0.2851670980453491, 0.32981112599372864, 0.3590014576911926, 0.3967771828174591, 0.42742040753364563, 0.4500066041946411, 0.47404569387435913, 0.490159809589386, 0.5189539194107056, 0.5221238732337952, 0.550521731376648, 0.5666358470916748, 0.5761458277702332, 0.5885615944862366, 0.6057323813438416, 0.6056002974510193, 0.6129969358444214, 0.6330735683441162, 0.6411306262016296, 0.6491876840591431, 0.6536785364151001, 0.6619997620582581, 0.661471426486969, 0.6643772125244141, 0.6713775992393494, 0.6770572066307068, 0.681547999382019, 0.6816800832748413, 0.6804913282394409, 0.6909258961677551, 0.6901333928108215, 0.6960771083831787, 0.6972658634185791, 0.6933034062385559, 0.7055870890617371, 0.7077004313468933, 0.7058512568473816, 0.7043983340263367, 0.7111346125602722, 0.7087571024894714, 0.7073041796684265, 0.7127195596694946, 0.719852089881897, 0.7193237543106079, 0.7190595865249634, 0.7219653725624084, 0.7190595865249634, 0.7246070504188538, 0.7243428826332092, 0.7292299270629883, 0.7289658188819885, 0.7339849472045898, 0.7310791015625, 0.7288337349891663, 0.7329282760620117, 0.7337207794189453, 0.7367587089538574, 0.733588695526123, 0.7343811988830566, 0.7441553473472595, 0.7416457533836365, 0.7378153204917908, 0.7466648817062378, 0.7441553473472595, 0.7465327978134155, 0.7383436560630798, 0.7429665923118591, 0.7448157668113708, 0.7413815855979919, 0.7511557340621948, 0.7495707273483276, 0.7530049085617065, 0.7499669790267944, 0.7559106945991516, 0.750231146812439, 0.7508915662765503, 0.7584202885627747, 0.7528728246688843, 0.7576277852058411, 0.7548540234565735, 0.7560427784919739, 0.7526086568832397, 0.7578919529914856, 0.76106196641922, 0.7585523724555969, 0.7618544697761536, 0.759080708026886, 0.7611940503120422, 0.7625148296356201, 0.7614582180976868, 0.7618544697761536, 0.7642319202423096, 0.7667415142059326, 0.76106196641922, 0.7655527591705322, 0.7613261342048645], "val_loss": [1.9488194329398019, 1.9257637432643346, 1.8984078679765974, 1.8634003911699568, 1.8174380574907576, 1.7563372339521135, 1.677800178527832, 1.5800086430140905, 1.4686681543077742, 1.3490043708256312, 1.2373065948486328, 1.1370633329663957, 1.0547226497105189, 0.9853243146623883, 0.9288835525512695, 0.884676422391619, 0.8459372520446777, 0.813509430204119, 0.787628173828125, 0.764426554952349, 0.7429186105728149, 0.7260424068995884, 0.7087927375520978, 0.6942453214100429, 0.6821005855287824, 0.6717049053737095, 0.6616880212511335, 0.6542102609361921, 0.6426112311226981, 0.6342284679412842, 0.627812283379691, 0.6193980489458356, 0.6126147849219186, 0.6069088152476719, 0.6019570316587176, 0.5972804171698434, 0.590527960232326, 0.5869467599051339, 0.5821789162499564, 0.5790181159973145, 0.5732418979917254, 0.5677270718983242, 0.5642469780785697, 0.5628057888575962, 0.5587983642305646, 0.5593972546713692, 0.5521676029477801, 0.5484233754021781, 0.5455175808497837, 0.541976877621242, 0.5389738082885742, 0.5382158926555088, 0.5345231805528913, 0.5311412640980312, 0.5311647142682757, 0.5269074780600411, 0.5241650172642299, 0.5212284667151315, 0.5200881106512887, 0.5196868181228638, 0.516077058655875, 0.5163644552230835, 0.5125649486269269, 0.511539169720241, 0.5090535708836147, 0.5062428031648908, 0.5050526176180158, 0.5029361929212298, 0.501985992704119, 0.5004433393478394, 0.49893312794821604, 0.49804236207689556, 0.4946384940828596, 0.49271254880087717, 0.49186132635389057, 0.49055327687944683, 0.4883408546447754, 0.4878138814653669, 0.4869621821812221, 0.4851849249431065, 0.4836747305733817, 0.48192691802978516, 0.4802081414631435, 0.48034008911677767, 0.4797036818095616, 0.47955851895468576, 0.4770020416804722, 0.4761954035077776, 0.4741335255759103, 0.4744292838232858, 0.4730799198150635, 0.47578353541237967, 0.4704648426600865, 0.47069879940577913, 0.47059997490474154, 0.46702584198543, 0.466958965573992, 0.4677635601588658, 0.4646439382008144], "val_accuracy": [0.23000000417232513, 0.3333333432674408, 0.3813333213329315, 0.42500001192092896, 0.4556666612625122, 0.5056666731834412, 0.531333327293396, 0.5486666560173035, 0.5713333487510681, 0.5870000123977661, 0.6079999804496765, 0.6190000176429749, 0.6433333158493042, 0.6706666946411133, 0.6769999861717224, 0.6893333196640015, 0.6923333406448364, 0.6940000057220459, 0.7013333439826965, 0.7076666951179504, 0.7113333344459534, 0.7143333554267883, 0.7193333506584167, 0.7226666808128357, 0.7250000238418579, 0.7296666502952576, 0.7306666374206543, 0.7423333525657654, 0.7396666407585144, 0.7459999918937683, 0.7453333139419556, 0.75, 0.7540000081062317, 0.7523333430290222, 0.753000020980835, 0.7543333172798157, 0.7639999985694885, 0.7559999823570251, 0.7580000162124634, 0.7586666941642761, 0.765333354473114, 0.7703333497047424, 0.7673333287239075, 0.7590000033378601, 0.7689999938011169, 0.765333354473114, 0.7733333110809326, 0.7730000019073486, 0.7689999938011169, 0.7733333110809326, 0.7730000019073486, 0.7770000100135803, 0.7739999890327454, 0.777999997138977, 0.7749999761581421, 0.7786666750907898, 0.7763333320617676, 0.7763333320617676, 0.7760000228881836, 0.7816666960716248, 0.7776666879653931, 0.7710000276565552, 0.7820000052452087, 0.7836666703224182, 0.7803333401679993, 0.7839999794960022, 0.7793333530426025, 0.7829999923706055, 0.7833333611488342, 0.7826666831970215, 0.7886666655540466, 0.7839999794960022, 0.7853333353996277, 0.7889999747276306, 0.7896666526794434, 0.7870000004768372, 0.7883333563804626, 0.7873333096504211, 0.7876666784286499, 0.7910000085830688, 0.7910000085830688, 0.7896666526794434, 0.7919999957084656, 0.7883333563804626, 0.7903333306312561, 0.7943333387374878, 0.7946666479110718, 0.7943333387374878, 0.7963333129882812, 0.7976666688919067, 0.7946666479110718, 0.7913333177566528, 0.796999990940094, 0.8050000071525574, 0.7963333129882812, 0.8003333210945129, 0.7996666431427002, 0.7960000038146973, 0.8023333549499512]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.5751428604125977, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.810279957354738, 2.2907990761216386, 2.0477498791016577, 2.974630776019758, 2.1055091843550247, 1.8246869909890875, 2.0221130462480716, 1.824798190378006, 1.4146136184173914, 1.7543230567862094, 1.6420786998464352], "accuracy": [0.18082155287265778, 0.15995244681835175, 0.2727513015270233, 0.14859332144260406, 0.2763175368309021, 0.3757759928703308, 0.3369435966014862, 0.38264429569244385, 0.5369172096252441, 0.43508124351501465, 0.468630313873291], "val_loss": [1.591869286128453, 1.9218736376081194, 1.8524119513375419, 1.9585926873343331, 1.9334430013384138, 1.1706013338906425, 1.8727379526410783, 1.1804724761417933, 1.2782466752188546, 1.5605128152029855, 1.092949322291783], "val_accuracy": [0.43033334612846375, 0.19866666197776794, 0.406333327293396, 0.13199999928474426, 0.1433333307504654, 0.5770000219345093, 0.23899999260902405, 0.5553333163261414, 0.5213333368301392, 0.5239999890327454, 0.5286666750907898]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [97, 75], [1, 1, 0], [0, 1], [6], [7], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 3, 0], [6, 32]], "fitness": -0.14000000059604645, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.097451296276119e+26, 1.255483028724626e+26, 1.320927929457824e+26, 1.2759567122085088e+26, 1.281039866914681e+26, 1.2550560587319122e+26], "accuracy": [0.10645885765552521, 0.10896842926740646, 0.10619468986988068, 0.10487385839223862, 0.10645885765552521, 0.11715757846832275], "val_loss": [8.51076219114127e+25, 8.51076219114127e+25, 8.51076219114127e+25, 8.51076219114127e+25, 8.51076219114127e+25, 8.51076219114127e+25], "val_accuracy": [0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475, 0.12300000339746475]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 55], [0, 1, 0], [0], [8], [7], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.13085713982582092, "mapping_values": [1, 4, 4, 2, 2, 0, 7, 7, 4, 3, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.312885852616461, 2.3413759848035762, 2.3791442277676804, 2.43699996878584, 2.5423077905277265, 2.8414515500464823, 7.915702624075983, 2933424.366858224, 130084621.79579976, 1544377351.9165237, 285701375.80980057, 288501063.3332453, 383523760.08241975, 498207698.75789195, 628763108.780346], "accuracy": [0.0742306187748909, 0.03553031384944916, 0.02126535400748253, 0.015057455748319626, 0.010434553027153015, 0.01558578759431839, 0.07674019038677216, 0.1026284471154213, 0.10949676483869553, 0.09708096832036972, 0.10540219396352768, 0.10447761416435242, 0.10196803510189056, 0.09866596013307571, 0.10698718577623367], "val_loss": [1.9948180743626185, 2.0243609292166576, 2.0653603417532787, 2.131208692278181, 2.27060672215053, 2.948010035923549, 43.224808829171316, 3797320.1428571427, 1303820946.2857144, 205462413.7142857, 128136406.85714285, 144178409.14285713, 173954354.2857143, 222718944.0, 286408621.71428573], "val_accuracy": [0.00800000037997961, 0.007333333138376474, 0.00566666666418314, 0.00566666666418314, 0.007666666526347399, 0.038333334028720856, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.1289999932050705, 0.1106666699051857, 0.11400000005960464, 0.11699999868869781, 0.11433333158493042, 0.10866666585206985]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 1, 1, 9], [0, 3, 0, 2, 5], [42, 55], [1, 1, 0], [0, 1], [8], [7], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 3, 0], [6, 32]], "fitness": -0.1305714249610901, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.259724610526026e+25, 1.0123443754864749e+27, 9.382179769682553e+27, 4.006724216143478e+28, 1.2578204640644587e+29, 3.0368774395072587e+29, 6.288910276453932e+29, 1.3593472143101996e+30, 2.4051777470376505e+30, 4.04567285418756e+30, 7.013605533809206e+30, 1.13033902943679e+31, 1.6480490663295665e+31], "accuracy": [0.10460969805717468, 0.10487385839223862, 0.1010434553027153, 0.09681680053472519, 0.09985470771789551, 0.10830801725387573, 0.10210011899471283, 0.10540219396352768, 0.1026284471154213, 0.09932637959718704, 0.10157178342342377, 0.09840179979801178, 0.09536388516426086], "val_loss": [1.4431004366875562e+26, 2.764388842443036e+27, 1.6400117326386785e+28, 5.958726823104127e+28, 1.6457649579935695e+29, 3.8111757776281494e+29, 7.805873618700951e+29, 1.4633673142949447e+30, 2.5953974210605676e+30, 4.3535361680818603e+30, 6.958630555845245e+30, 1.0684397624058195e+31, 1.585869788229651e+31], "val_accuracy": [0.1106666699051857, 0.11166666448116302, 0.11366666853427887, 0.11433333158493042, 0.11533333361148834, 0.11533333361148834, 0.11566666513681412, 0.11699999868869781, 0.11666666716337204, 0.11666666716337204, 0.11666666716337204, 0.11599999666213989, 0.11599999666213989]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1], [8, 6, 7, 9, 1, 9], [0, 3, 0, 2], [26, 55, 83], [0, 1, 1, 1, 0], [0, 0, 1], [2, 9], [7], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 3, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 1, 1, 9], [1, 3, 0, 2, 4], [26, 55], [1, 1, 0], [0, 1], [6], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), beta))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1], [8, 7, 6, 9, 1, 9], [4, 3, 0, 2], [26, 95, 41], [1, 1, 0], [1], [8], [7], [], [0, 0, 0, 1, 1], [8, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [9, 2, 7, 9, 1, 9], [4, 0, 2, 2], [26, 55], [0, 1, 0], [0], [5], [7], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 9, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 1, 1, 9], [0, 3, 0, 2], [97, 84], [0, 1, 1], [0, 1], [6], [7], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 3, 0], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [4, 3, 7, 1, 1, 9], [0, 3, 0, 2], [97, 84], [1, 1, 0], [0], [6], [7], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 5, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [0, 1, 0], [1], [8], [7], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302191919512705, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 3, 0, 2], [26, 28], [0, 0, 0], [0, 1], [8], [7], [], [1, 1, 0, 1, 1], [4, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [51430025643.25984, 7787841499698.111, 132979354832271.12, 930361743805609.8, 4108302401409256.0, 1.3451627949891776e+16], "accuracy": [0.10038304328918457, 0.0940430611371994, 0.09642054885625839, 0.09906221181154251, 0.09589222073554993, 0.09351472556591034], "val_loss": [423945465270.8571, 22860547040402.285, 245404949769654.84, 1337567936437101.8, 5010333980987977.0, 1.4779419325066678e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [49, 95, 41], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 2, 0, 2], [23, 67, 65], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1249583026.5877993, 23920074721.703342, 111149398282.9893, 306646194684.2805, 658649832938.5624, 1201538478655.0955], "accuracy": [0.10011887550354004, 0.09417514503002167, 0.09655263274908066, 0.09919429570436478, 0.09589222073554993, 0.09377889335155487], "val_loss": [4657283364.571428, 37247155053.71429, 125696353426.28572, 297935203766.8571, 581887346980.5714, 1005477279451.4286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [5, 3, 0, 2], [26, 24], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [7, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 1, 0, 3, 5, 2], [3, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 7, 1, 1, 9], [5, 2, 0, 2, 4], [97, 84], [1, 1, 0], [0, 1], [8], [7], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 3, 0], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.pow(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [8654178.64407833, 1779442319316.245, 59203379685638.12, 352565015015910.4, 1210597378799480.5, 3021221455216045.0, 6455028769412254.0], "accuracy": [0.10077928751707077, 0.09708096832036972, 0.09655263274908066, 0.09694888442754745, 0.1022322028875351, 0.1022322028875351, 0.1026284471154213], "val_loss": [1.973644392830985, 9494262485577.143, 125600278773760.0, 554527426684050.3, 1593252248102034.2, 3623049267136804.5, 7102695558536046.0], "val_accuracy": [0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 7, 1, 1, 9], [0, 3, 0, 2, 1], [97, 57], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0], [8, 1, 6, 3, 6, 5], [7], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [2, 3, 0], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 11, 6, 6, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(sigma)), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [8.239112978528046e+27, 3.324233757450667e+29, 2.438021517282195e+30, 1.0028501262371417e+31, 2.4069106586003967e+31, 6.458577942051738e+31], "accuracy": [0.09457138925790787, 0.0948355570435524, 0.10117553919553757, 0.10130762308835983, 0.09853387624025345, 0.09774138033390045], "val_loss": [5.53217691174282e+28, 8.851494932167098e+29, 4.481069811329688e+30, 1.4162402253688667e+31, 3.457616475630786e+31, 7.169709349357337e+31], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [2, 3, 0, 2], [61, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027118195506167, 2.303213231174024, 2.3029080611871233, 2.3032600054289323, 2.3027109066256917, 2.301638295889499], "accuracy": [0.09311848133802414, 0.08651433140039444, 0.09325055778026581, 0.08730682730674744, 0.0882314071059227, 0.0882314071059227], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]