[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8494285941123962, "mapping_values": [1, 18, 18, 12, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9397251587565296, 1.2832375594165426, 0.78315539568517, 0.6844813594602717, 0.6041210433275094, 0.5849957503048719, 0.5294250728919947, 0.508278837293414, 0.49157591565819525, 0.46447781591194337, 0.43724928283971676, 0.4271545672830794, 0.4254971359659731, 0.3958479194805811, 0.3838618313867843, 0.37488239431236364, 0.3690253328401588, 0.3588124731544018, 0.34860051900105093, 0.3372589480631293, 0.33319467955639553, 0.3237551133732801, 0.3156921807816787, 0.3012257308464607, 0.3029328189379881, 0.2946968306765785, 0.2750170764402234, 0.2791480960555915, 0.27929195023609615, 0.26469459989996413, 0.27201509581596595, 0.2490029658356111, 0.2377671733953225, 0.2279322326868249, 0.23500960080213615, 0.23121814377406144, 0.21834519507075345], "accuracy": [0.37247392535209656, 0.587769091129303, 0.700700044631958, 0.7466648817062378, 0.7800818681716919, 0.7812706232070923, 0.8010830879211426, 0.8121780753135681, 0.8239334225654602, 0.834632158279419, 0.8400475382804871, 0.8422929644584656, 0.8450667262077332, 0.8564258217811584, 0.8594637513160706, 0.8603883385658264, 0.8668603897094727, 0.8617091774940491, 0.8722757697105408, 0.8742570281028748, 0.8753136992454529, 0.8796724081039429, 0.878879964351654, 0.8811253309249878, 0.884691596031189, 0.8916919827461243, 0.8972394466400146, 0.8927486538887024, 0.8977677822113037, 0.8996169567108154, 0.9014661312103271, 0.902390718460083, 0.9091269373893738, 0.9134856462478638, 0.9093911051750183, 0.9152027368545532, 0.9183727502822876], "val_loss": [1.6708178520202637, 0.6590841497693744, 0.5671402386256627, 0.48223250252859934, 0.4852959258215768, 0.4240362899644034, 0.41866666078567505, 0.3902463572365897, 0.40147381169455393, 0.36658444574901033, 0.3691990545817784, 0.3935213770185198, 0.3458669015339443, 0.34085987295423237, 0.3305583596229553, 0.34062594175338745, 0.32441550493240356, 0.3267922486577715, 0.32139549936567036, 0.31361173731940134, 0.33174788100378855, 0.3082696199417114, 0.3063780835696629, 0.3022394861493792, 0.3054549779210772, 0.30595468623297556, 0.2966582775115967, 0.3069689529282706, 0.3029362899916513, 0.3045309952327183, 0.2903891290937151, 0.2869394677025931, 0.30046282495771137, 0.3108657683644976, 0.3131277050290789, 0.2923186591693333, 0.30939384017671856], "val_accuracy": [0.5413333177566528, 0.6926666498184204, 0.75, 0.7839999794960022, 0.7773333191871643, 0.8133333325386047, 0.8190000057220459, 0.8246666789054871, 0.8220000267028809, 0.8349999785423279, 0.8399999737739563, 0.8273333311080933, 0.8413333296775818, 0.8476666808128357, 0.8446666598320007, 0.8506666421890259, 0.8506666421890259, 0.8523333072662354, 0.8583333492279053, 0.8613333106040955, 0.8523333072662354, 0.8646666407585144, 0.8616666793823242, 0.862666666507721, 0.8693333268165588, 0.8673333525657654, 0.8723333477973938, 0.862666666507721, 0.8693333268165588, 0.8733333349227905, 0.8756666779518127, 0.8823333382606506, 0.8790000081062317, 0.8703333139419556, 0.8703333139419556, 0.8820000290870667, 0.871999979019165]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 6, 1, 0, 3, 5, 2], [1, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9398715015510133, 1.2847812240464798, 0.7847716938298314, 0.6891626391617409, 0.6043726186143913, 0.5799128430205533, 0.5311566094728021, 0.5109448949453963, 0.4914201916075024, 0.46282676973945636, 0.43782891487999676, 0.429932521047247, 0.4271764366452909, 0.40522863398122905, 0.38094677525646164, 0.3771653051161259, 0.3659232058907387, 0.36153770293762433, 0.3524555783694714, 0.34115348827758596, 0.3374953681467515, 0.32665382584072516, 0.3155010472498455, 0.3000165520051624, 0.30879037868880543, 0.2986566918660873, 0.2792079257943044, 0.28582159742041824, 0.2761447952683607, 0.26977980289799647, 0.2652659110440523, 0.25237299363532195, 0.24173804585999187, 0.2314838800117277, 0.23557776923405419, 0.22631243614472765, 0.22597774645561367, 0.21490684777140034, 0.21984978925164633, 0.2216947630742569, 0.20716780197579454], "accuracy": [0.37247392535209656, 0.5868445634841919, 0.7013604640960693, 0.7454761862754822, 0.776251494884491, 0.7849689722061157, 0.7989697456359863, 0.8108572363853455, 0.8219521641731262, 0.8305375576019287, 0.8381983637809753, 0.8436138033866882, 0.844010055065155, 0.852859616279602, 0.8588033318519592, 0.8578787446022034, 0.863558292388916, 0.8658037185668945, 0.8652753829956055, 0.8733324408531189, 0.8759741187095642, 0.8782195448875427, 0.8811253309249878, 0.8858803510665894, 0.882710337638855, 0.8893144726753235, 0.8942015767097473, 0.8931449055671692, 0.8957865834236145, 0.9006736278533936, 0.9005415439605713, 0.9051644206047058, 0.91124027967453, 0.913617730140686, 0.9104477763175964, 0.9179764986038208, 0.9122969508171082, 0.9183727502822876, 0.9162594079971313, 0.9163914918899536, 0.9225993752479553], "val_loss": [1.6718885557992118, 0.6543228455952236, 0.5707427263259888, 0.48629866327558247, 0.48955123765128, 0.4226693255560739, 0.41703461749213083, 0.39325188738959177, 0.40021428891590666, 0.36433457476752146, 0.36332617487226215, 0.3925482290131705, 0.34930085284369333, 0.34066483804157804, 0.3261713130133493, 0.33873545272009714, 0.32267350809914724, 0.3253561684063503, 0.3203526565006801, 0.3157399126461574, 0.3324697358267648, 0.3138615829604013, 0.3064085841178894, 0.3053697262491499, 0.31600528955459595, 0.3042247550828116, 0.30408625091825214, 0.29858131068093435, 0.30306353739329744, 0.2991891843932016, 0.29665402855191914, 0.2814069390296936, 0.3071464215006147, 0.306467490536826, 0.3015723058155605, 0.2856094752039228, 0.3061419980866568, 0.30998319387435913, 0.3027233822005136, 0.2879198023251125, 0.30259673084531513], "val_accuracy": [0.5426666736602783, 0.70333331823349, 0.7440000176429749, 0.7826666831970215, 0.7739999890327454, 0.8133333325386047, 0.8140000104904175, 0.8199999928474426, 0.8240000009536743, 0.8379999995231628, 0.8399999737739563, 0.8286666870117188, 0.8416666388511658, 0.8463333249092102, 0.843999981880188, 0.8479999899864197, 0.8500000238418579, 0.8550000190734863, 0.8603333234786987, 0.8610000014305115, 0.8519999980926514, 0.8629999756813049, 0.8633333444595337, 0.8656666874885559, 0.8603333234786987, 0.8740000128746033, 0.8696666955947876, 0.8723333477973938, 0.8690000176429749, 0.875333309173584, 0.871999979019165, 0.8820000290870667, 0.8726666569709778, 0.8736666440963745, 0.8733333349227905, 0.8840000033378601, 0.875333309173584, 0.8733333349227905, 0.875, 0.8813333511352539, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [6, 3, 2, 2, 2, 6, 1, 5, 2, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8445714116096497, "mapping_values": [1, 19, 19, 10, 9, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9398778730993809, 1.2848387732560593, 0.7851759247445411, 0.6860848735934787, 0.603277928801481, 0.5780599547210323, 0.5308073198459939, 0.5075156239864298, 0.4901699770978571, 0.46034931345717184, 0.4359888108438583, 0.4298499977709894, 0.4209044158513819, 0.40279972541444037, 0.3854956959201171, 0.3745632862819578, 0.3612297081818213, 0.35856463806882055, 0.3473327765532803, 0.3387361588794258, 0.33783555687410705, 0.3234647683353472, 0.3161815462008821, 0.3009337814114648, 0.30649327125689135, 0.300337044145012, 0.2713916525549782, 0.28032920745464285, 0.27555569653277384, 0.27308217985298433, 0.26977356154141474, 0.255390233038801, 0.24194402441632368, 0.23292089448416348, 0.2417015768887738, 0.2294205627984154, 0.21980191670577634], "accuracy": [0.37247392535209656, 0.587372899055481, 0.7016246318817139, 0.7461365461349487, 0.7773081660270691, 0.7847048044204712, 0.8013472557067871, 0.813498854637146, 0.8226125836372375, 0.8333113193511963, 0.8396512866020203, 0.8424250483512878, 0.8487650156021118, 0.852331280708313, 0.8565579056739807, 0.8628978729248047, 0.8665962219238281, 0.8661999702453613, 0.8709549307823181, 0.8745211958885193, 0.8762382864952087, 0.8805969953536987, 0.8828424215316772, 0.8824461698532104, 0.8844274282455444, 0.8883898854255676, 0.8973715305328369, 0.89552241563797, 0.8965790271759033, 0.8989565372467041, 0.8981640338897705, 0.9022586345672607, 0.908730685710907, 0.9132214784622192, 0.9122969508171082, 0.9159952402114868, 0.9157310724258423], "val_loss": [1.6719537121909005, 0.6532092094421387, 0.5668977669307164, 0.4859964336667742, 0.47001196656908306, 0.4190416932106018, 0.4112934725625174, 0.38871284893580843, 0.40057354313986643, 0.36236413036073956, 0.3625538945198059, 0.37678819043295725, 0.35018928561891827, 0.34843466111591886, 0.3318127223423549, 0.3354015520640782, 0.3169716256005423, 0.3198937858854021, 0.32106066601616995, 0.3130206806319101, 0.33396599122456144, 0.3170455438750131, 0.3051454424858093, 0.3038948007992336, 0.32036028589521137, 0.30103164059775217, 0.3017921192305429, 0.29851843629564556, 0.30960515567234587, 0.30156682218824116, 0.29880220549447195, 0.2845920920372009, 0.3083328349249704, 0.3093834178788321, 0.3213903733662197, 0.2904132604598999, 0.30694659267153057], "val_accuracy": [0.5426666736602783, 0.7036666870117188, 0.7463333606719971, 0.7806666493415833, 0.7820000052452087, 0.8130000233650208, 0.8206666707992554, 0.8233333230018616, 0.8186666369438171, 0.8379999995231628, 0.8420000076293945, 0.8353333473205566, 0.8403333425521851, 0.8443333506584167, 0.8450000286102295, 0.8486666679382324, 0.8560000061988831, 0.8560000061988831, 0.8586666584014893, 0.859666645526886, 0.8519999980926514, 0.8640000224113464, 0.8683333396911621, 0.8633333444595337, 0.859000027179718, 0.8723333477973938, 0.8700000047683716, 0.8713333606719971, 0.8653333187103271, 0.875, 0.871666669845581, 0.8833333253860474, 0.8759999871253967, 0.8723333477973938, 0.8676666617393494, 0.8809999823570251, 0.8733333349227905]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 8, 2, 9, 6, 6, 5, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [82, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8254285454750061, "mapping_values": [1, 12, 12, 7, 5, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9404747515558614, 1.2834532749478087, 0.7828063601988371, 0.6822683425658824, 0.6041844532694783, 0.593670078788089, 0.5292952846321904, 0.5066638948060518, 0.49093403565554555, 0.4653934664249798, 0.4382347926338036, 0.42875309526849464, 0.4262037252304403, 0.40573325741009203, 0.38450857060476146, 0.37903773376828626, 0.36650612000476857, 0.36183965170718835, 0.3471985986526884, 0.3411622601548332, 0.3399600935744383, 0.3236337065413297, 0.3131742366332388, 0.30275170452889827, 0.3030906524191821, 0.2944714609051834, 0.27449581512780064, 0.27504010959670466, 0.2702279574386731, 0.26693770954275425, 0.259951177307911, 0.24778181704563504, 0.2392544190444494, 0.23334025350607082, 0.23260374333384234, 0.22612960065840856, 0.21958015536540818, 0.21267228444742725, 0.22094328788293272, 0.22267747781122713, 0.20065248628782795], "accuracy": [0.3727380931377411, 0.5875049233436584, 0.6997754573822021, 0.748249888420105, 0.7775723338127136, 0.7775723338127136, 0.8043851256370544, 0.8119139075279236, 0.8220842480659485, 0.8274996876716614, 0.8385946154594421, 0.8408400416374207, 0.8467837572097778, 0.8491612672805786, 0.8573504090309143, 0.8576145768165588, 0.8622375130653381, 0.8636903762817383, 0.8705587387084961, 0.8713511824607849, 0.8755778670310974, 0.8771628737449646, 0.8840311765670776, 0.8835028409957886, 0.886672854423523, 0.8924844861030579, 0.8924844861030579, 0.8992207050323486, 0.8972394466400146, 0.8971073627471924, 0.9017302989959717, 0.9068815112113953, 0.9095231890678406, 0.9121648669242859, 0.9088627696037292, 0.917580246925354, 0.9149385690689087, 0.9196935892105103, 0.9152027368545532, 0.91124027967453, 0.9253731369972229], "val_loss": [1.6753855092184884, 0.6580956493105207, 0.5613317489624023, 0.4822301353727068, 0.4872477224894932, 0.42634563786642893, 0.41825991017477854, 0.39077411379132954, 0.3994559645652771, 0.3642446143286569, 0.3626274125916617, 0.38989890473229544, 0.35083969150270733, 0.34965034893580843, 0.3352386014802115, 0.3387756177357265, 0.3204596723828997, 0.32230573892593384, 0.32256145988191876, 0.3227433051381792, 0.3218328356742859, 0.3103860190936497, 0.30390192781175884, 0.3071390390396118, 0.3167951362473624, 0.3046555774552481, 0.30194686140332905, 0.29946786165237427, 0.2965538501739502, 0.300770708492824, 0.29236253670283724, 0.2840627602168492, 0.3046885388238089, 0.3045345629964556, 0.3036261200904846, 0.2911323734692165, 0.30832137380327496, 0.30817122970308575, 0.30517464876174927, 0.29275613171713694, 0.3227638176509312], "val_accuracy": [0.5450000166893005, 0.6966666579246521, 0.7476666569709778, 0.7833333611488342, 0.7753333449363708, 0.8106666803359985, 0.8159999847412109, 0.8259999752044678, 0.8276666402816772, 0.8389999866485596, 0.8420000076293945, 0.8309999704360962, 0.8379999995231628, 0.8460000157356262, 0.8429999947547913, 0.847000002861023, 0.8483333587646484, 0.859666645526886, 0.8586666584014893, 0.8606666922569275, 0.8573333621025085, 0.862666666507721, 0.8679999709129333, 0.8610000014305115, 0.8610000014305115, 0.8723333477973938, 0.8723333477973938, 0.8690000176429749, 0.8683333396911621, 0.875333309173584, 0.8806666731834412, 0.8840000033378601, 0.878000020980835, 0.8736666440963745, 0.8730000257492065, 0.8849999904632568, 0.8756666779518127, 0.8763333559036255, 0.8713333606719971, 0.8849999904632568, 0.8723333477973938]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 2, 9, 3, 0, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [42, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7991428375244141, "mapping_values": [1, 12, 12, 7, 5, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0710363537329, 1.4995568886314636, 1.178781097244829, 0.9933449099990025, 0.8867413710373236, 0.8245060603222779, 0.7961148405355344, 0.7767120858366778, 0.7284917750961319, 0.6950945977002024, 0.713653533843845, 0.6661450187244499, 0.6699712247723176, 0.6428974284834126, 0.6648514544911877, 0.6325987185138863, 0.6182148637961812, 0.5756865737224378, 0.6262683485083655, 0.6110209514593735, 0.5661460829527465, 0.6000278112186401], "accuracy": [0.32082948088645935, 0.47906485199928284, 0.5732399821281433, 0.6433760523796082, 0.665830135345459, 0.6926429867744446, 0.6934354901313782, 0.7016246318817139, 0.7191916704177856, 0.7349095344543457, 0.7202483415603638, 0.7384757399559021, 0.7409853339195251, 0.7528728246688843, 0.7397965788841248, 0.7528728246688843, 0.7555144429206848, 0.7837802171707153, 0.7519482374191284, 0.7631752490997314, 0.7788931727409363, 0.76542067527771], "val_loss": [1.2569985049111503, 0.8463555744716099, 0.9679885932377407, 0.7204358577728271, 0.6675211872373309, 0.6182346514293126, 0.5654345069612775, 0.5553786924907139, 0.5516549178532192, 0.5622485705784389, 0.5153636080878121, 0.5106936522892543, 0.5034926107951573, 0.5082118681498936, 0.5478482416697911, 0.4990376574652536, 0.4638140882764544, 0.5359663452420916, 0.5489173616681781, 0.4655714545931135, 0.49498307704925537, 0.4886390481676374], "val_accuracy": [0.4606666564941406, 0.6313333511352539, 0.5913333296775818, 0.6763333082199097, 0.6959999799728394, 0.7173333168029785, 0.7283333539962769, 0.7519999742507935, 0.7516666650772095, 0.7513333559036255, 0.7766666412353516, 0.7829999923706055, 0.7789999842643738, 0.7633333206176758, 0.7599999904632568, 0.7630000114440918, 0.8013333082199097, 0.7446666955947876, 0.7513333559036255, 0.7816666960716248, 0.765999972820282, 0.765333354473114]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [40, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 7, 5, 2, 9, 3, 9, 0], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 11, 8, 3, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))))", "other_info": {"loss": [6260106.932118852, 68145305672.647736, 14188922384071.836, 630782193439419.5, 1.1435266402004888e+16, 1.2031230464088896e+17], "accuracy": [0.09655263274908066, 0.09721305221319199, 0.09655263274908066, 0.09998679161071777, 0.10447761416435242, 0.09734513610601425], "val_loss": [163576352.0, 499846592219.4286, 58613551707867.43, 1757569605435392.0, 2.4787372343146204e+16, 2.1647919244348154e+17], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [6, 3, 8, 2, 9, 6, 1, 6, 9, 5, 2], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [35, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303767313778975, 2.3085937422217158, 2.312434953988866, 2.313932761099234, 2.31303553306636, 2.318240534722325, 2.3222579468258653, 2.3163924384756394, 2.313015042452245], "accuracy": [0.09298639744520187, 0.09642054885625839, 0.09879804402589798, 0.09813763201236725, 0.10236428678035736, 0.09642054885625839, 0.09721305221319199, 0.09668471664190292, 0.09879804402589798], "val_loss": [1.9759021486554826, 1.9805756296430315, 1.9801759038652693, 1.978766713823591, 1.9889072009495325, 1.9924757821219308, 1.9841872623988561, 1.9803711346217565, 1.9840124675205775], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.10133333504199982, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [0, 2, 0, 2, 2, 1, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 14, 9, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))))), grad))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025902130064977, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 8, 2, 9, 6, 1, 5, 2, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.7542628842478654e+27, 4.293334917920754, 10.317995361632454, 17.44177492580331, 24.631828112609163, 31.837727393645494], "accuracy": [0.057852331548929214, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.366081850869315, 6.396295411246164, 12.414736066545759, 18.566143580845424, 24.74442563738142, 30.911163330078125], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 8, 1, 0, 3, 5, 2], [0, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [3, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 0, 2, 6, 6, 1, 2, 3, 5, 2, 4, 1, 9, 2], [0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [55, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 15, 12, 5, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(alpha))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [6, 3, 0, 6, 6, 6, 1, 0, 6, 5, 2, 2, 4, 0, 0, 8], [0, 2, 2, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [74, 70, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 3, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(alpha)))))))), tf.math.add(alpha, grad)))), alpha)), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1566130255.6194193, 29452029588.4401, 133738980164.40417, 376281300983.3438, 800516161988.2858, 1478588630740.55], "accuracy": [0.09655263274908066, 0.09721305221319199, 0.09655263274908066, 0.09985470771789551, 0.10447761416435242, 0.09694888442754745], "val_loss": [5731463899.428572, 45838717513.14286, 154691974875.42856, 366660213613.7143, 716116665490.2858, 1237422777490.2856], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 2, 9, 8, 1, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [32, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [3, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [6, 4, 0, 2, 6, 6, 3, 0, 3, 5, 2, 4, 1, 3, 2], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [94, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 12, 10, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [9.490956422813437e+24, 10.354756451144336, 24.209934706480716, 38.58983096061145, 52.97868403146422, 67.39106366549657], "accuracy": [0.06709814071655273, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.449013301304409, 15.690831865583148, 27.995709010532924, 40.31627001081194, 52.674016680036274, 65.00755964006696], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 0, 2, 6, 6, 1, 0, 3, 5, 2, 1, 0, 3, 2], [1, 2, 1, 2, 2, 1, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [3, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 23, 23, 13, 10, 1, 3, 3, 1, 2, 0, 11, 8, 6, 2, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(grad, tf.math.add(alpha, alpha)))))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3726525541624737, 3.054419648929153, 4.860445352231097, 8.031157790488729, 12.22595366391177, 17.857798852594286], "accuracy": [0.08994849026203156, 0.09417514503002167, 0.09602430462837219, 0.09893012791872025, 0.10315678268671036, 0.09734513610601425], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [9, 3, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [67, 87, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.372652585653502, 3.054419361132641, 4.860445027621572, 8.031198464175572, 12.226077672812004, 17.858178115933406], "accuracy": [0.08994849026203156, 0.09417514503002167, 0.09602430462837219, 0.09893012791872025, 0.10315678268671036, 0.09734513610601425], "val_loss": [2.090093340192522, 2.770204612186977, 4.282114165169852, 6.5843433652605325, 9.649071557181221, 13.518982206072126], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9, 4, 0], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 72, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0674285739660263, "mapping_values": [1, 21, 21, 14, 7, 4, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(grad, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302993176934773, 2.3012571760597575, 2.30066918249789, 2.300983646463614, 2.30004057158663, 2.301046734362577, 2.3006065424013573, 2.300211441562538, 2.300246602555843, 2.2997840014525597, 2.300018465608701, 2.2998695811575365, 2.3005544868174987, 2.300558030062096], "accuracy": [0.08902391046285629, 0.09060890227556229, 0.0956280529499054, 0.09192973375320435, 0.09509972482919693, 0.09285431355237961, 0.0936468094587326, 0.0940430611371994, 0.09457138925790787, 0.09774138033390045, 0.10236428678035736, 0.09906221181154251, 0.09721305221319199, 0.09391097724437714], "val_loss": [1.9702648435320174, 1.9698198863438197, 1.9697226796831404, 1.9697701590401786, 1.9699200221470423, 1.9699713162013464, 1.9698389598301478, 1.9697637557983398, 1.969696044921875, 1.9698713166373116, 1.9700024468558175, 1.9702325548444475, 1.9704100063868932, 1.9705944742475237], "val_accuracy": [0.047333333641290665, 0.05366666615009308, 0.05700000002980232, 0.060333333909511566, 0.06233333423733711, 0.06566666811704636, 0.0676666647195816, 0.07400000095367432, 0.07699999958276749, 0.07500000298023224, 0.07400000095367432, 0.07333333045244217, 0.0689999982714653, 0.06800000369548798]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 0, 2, 9, 6, 3, 0, 3, 5, 2, 9], [1, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 18, 18, 12, 6, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034615750955854, 2.3025636655023747, 2.3024463585543833, 2.302993113259913, 2.3017328246205695, 2.3029011536299544], "accuracy": [0.08796724677085876, 0.08809932321310043, 0.09179764986038208, 0.08611807972192764, 0.09219389408826828, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0], [6, 3, 8, 2, 9, 6, 1, 5, 4, 5, 2, 1, 0, 4, 7, 6, 6, 3, 9, 4, 9, 3, 9], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [8, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 35, 35, 23, 12, 7, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad)))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034615750955854, 2.3025636655023747, 2.3024463585543833, 2.302993113259913, 2.3017328246205695, 2.3029011536299544], "accuracy": [0.08796724677085876, 0.08809932321310043, 0.09179764986038208, 0.08611807972192764, 0.09219389408826828, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 8, 9, 9, 6, 1, 5, 2, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.006000000052154064, "mapping_values": [1, 8, 8, 6, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.7993024891047287, 2.6172742609964494, 4.640045433594897, 2.3973041664355814, 2.4175224792310166, 2.4237112456686885, 2.3996094313311525], "accuracy": [0.17884030938148499, 0.13815876841545105, 0.12415797263383865, 0.09919429570436478, 0.1026284471154213, 0.10130762308835983, 0.1022322028875351], "val_loss": [2.060576779501779, 2.5094874245779857, 2.0994229316711426, 2.068912982940674, 2.024977002825056, 2.056891509464809, 2.1142636026654924], "val_accuracy": [0.09433333575725555, 0.15133333206176758, 0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.10100000351667404, 0.09933333098888397]}}]