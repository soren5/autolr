[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 6, 9, 5, 4, 3, 3, 5, 5, 1, 0, 8, 2, 9, 1, 7, 9, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 2, 2, 2, 2, 1, 1, 0, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.852571427822113, "mapping_values": [1, 16, 16, 10, 6, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0382174702210905, 1.090458867595873, 0.7796122848381377, 0.6905894962756578, 0.6285906297151895, 0.5825878880783205, 0.5414091948630898, 0.5130949291602228, 0.4929014442028733, 0.4720885147114377, 0.4465719664164538, 0.44627076163031815, 0.41421583032312015, 0.3981361059370357, 0.3887899732584998, 0.37414038313173614, 0.3663133851344386, 0.35628570252720704, 0.348105884144697, 0.3382305133619864, 0.32821831161855247, 0.3161724477537934, 0.29878006733214896, 0.29864355875296034, 0.2928881731291237, 0.2856686288071913, 0.2802305371179368, 0.2763022027507261, 0.26003022403560216, 0.2563522560875004, 0.24919100222672927, 0.2422199853186783, 0.2381749958854861, 0.22898267837579084, 0.22595216060681445, 0.2164673554765046, 0.21173347689810681, 0.20979707951338505, 0.19872365098556335, 0.1979397958327341, 0.19792423555840274, 0.1925211255545031, 0.19359603190403163, 0.19146891707056754, 0.18649795043658995, 0.17812468123324182, 0.1783189446367781, 0.16616793034524177, 0.16570130859926913, 0.15725253392692412, 0.14915081811398406, 0.14941197685506666, 0.14145110080294432, 0.14101398550343, 0.1405077021647249, 0.14443020147457572], "accuracy": [0.30563995242118835, 0.6126006841659546, 0.7140403985977173, 0.7427024245262146, 0.763967752456665, 0.7839123010635376, 0.8005547523498535, 0.8082155585289001, 0.8177255392074585, 0.8261788487434387, 0.8404437899589539, 0.8392550349235535, 0.8474441766738892, 0.8543124794960022, 0.8597279191017151, 0.8623695969581604, 0.8658037185668945, 0.8683133125305176, 0.8712190985679626, 0.8747853636741638, 0.8799365758895874, 0.8812574148178101, 0.8906353116035461, 0.8877294659614563, 0.8886540532112122, 0.8928807377815247, 0.8944657444953918, 0.8931449055671692, 0.8973715305328369, 0.9039757251739502, 0.9054285883903503, 0.9093911051750183, 0.9101836085319519, 0.9111081957817078, 0.9101836085319519, 0.9148064851760864, 0.9215427041053772, 0.919561505317688, 0.926429808139801, 0.9216747879981995, 0.9216747879981995, 0.9272223114967346, 0.9253731369972229, 0.9243164658546448, 0.9289394021034241, 0.9322414398193359, 0.9317131042480469, 0.9356756210327148, 0.9348831176757812, 0.9418835043907166, 0.9446572661399841, 0.9433364272117615, 0.94558185338974, 0.9447893500328064, 0.9443930983543396, 0.9447893500328064], "val_loss": [0.9151077951703753, 0.6322361060551235, 0.5616788182939801, 0.5174556289400373, 0.4789540767669678, 0.4479642425264631, 0.42849409580230713, 0.41424669538225445, 0.3988660318510873, 0.38348714794431416, 0.363918662071228, 0.35064456292561125, 0.3546344297272818, 0.34157730851854595, 0.33274015358516146, 0.3295487250600542, 0.3226120046206883, 0.3215698684964861, 0.31649506092071533, 0.3103517549378531, 0.31052763972963604, 0.3105190907205854, 0.2977133308138166, 0.2985369733401707, 0.2962201748575483, 0.3093507375035967, 0.3019034096172878, 0.2908060210091727, 0.29146294934409006, 0.2919823442186628, 0.29102072545460295, 0.2873174122401646, 0.2858537435531616, 0.28457404034478323, 0.29341971022742136, 0.293530992099217, 0.2912158455167498, 0.29003999062946867, 0.30049666336604525, 0.30046882799693514, 0.2981673649379185, 0.2940577779497419, 0.3169151714869908, 0.3041325552122934, 0.30468446016311646, 0.3056163021496364, 0.29742727109364103, 0.31091943808964323, 0.3118578791618347, 0.3089919260569981, 0.31487925563539776, 0.3147051845278059, 0.3205094167164394, 0.3222786528723581, 0.32245377131870817, 0.32580602169036865], "val_accuracy": [0.6420000195503235, 0.7289999723434448, 0.737666666507721, 0.7563333511352539, 0.7806666493415833, 0.7923333048820496, 0.8119999766349792, 0.8163333535194397, 0.8169999718666077, 0.8299999833106995, 0.8393333554267883, 0.847000002861023, 0.8450000286102295, 0.8486666679382324, 0.8560000061988831, 0.859333336353302, 0.8573333621025085, 0.8539999723434448, 0.8600000143051147, 0.8640000224113464, 0.8636666536331177, 0.8606666922569275, 0.8723333477973938, 0.8713333606719971, 0.8676666617393494, 0.862666666507721, 0.8679999709129333, 0.874666690826416, 0.8763333559036255, 0.8740000128746033, 0.8743333220481873, 0.8773333430290222, 0.8786666393280029, 0.8799999952316284, 0.8796666860580444, 0.875333309173584, 0.878000020980835, 0.8803333044052124, 0.8763333559036255, 0.8786666393280029, 0.8809999823570251, 0.8816666603088379, 0.8806666731834412, 0.8786666393280029, 0.8813333511352539, 0.8820000290870667, 0.8823333382606506, 0.8823333382606506, 0.8786666393280029, 0.8870000243186951, 0.8883333206176758, 0.8790000081062317, 0.8866666555404663, 0.8823333382606506, 0.8813333511352539, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 1, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8514285683631897, "mapping_values": [1, 34, 34, 21, 13, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad), tf.math.subtract(grad, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), grad)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038217252114225, 1.0904573633166637, 0.7795928168951828, 0.6909219122062097, 0.6284917694088522, 0.581837254264304, 0.5404664406828703, 0.5109831254243882, 0.4905907340951017, 0.4717697246065859, 0.44702447494416897, 0.44287401000427734, 0.41228930164227445, 0.39710380909087367, 0.3853160564602799, 0.37261000932593463, 0.36660996549054853, 0.3556270510048804, 0.3501901851550951, 0.3382045302991271, 0.32657599085042693, 0.31517230228756743, 0.29716281760732466, 0.3052829552942248, 0.29495512065775975, 0.2840795896749581, 0.2728185618731481, 0.2790619090579331, 0.2653087990993459, 0.26184109001938444, 0.2525985246132299, 0.24387520984683164, 0.23892997184788248, 0.22799004054796962, 0.22391517864415486, 0.21901185929444583, 0.21167010858334162, 0.21379128280545365, 0.1967104020576593, 0.19968582509672794, 0.1989463728436421, 0.19086525449781463, 0.185988141803174, 0.17558278808457078, 0.17618842883518485, 0.16908427631070885], "accuracy": [0.30563995242118835, 0.6129969358444214, 0.7125874757766724, 0.743891179561615, 0.761590301990509, 0.7841764688491821, 0.7984414100646973, 0.8103289008140564, 0.8183859586715698, 0.8290846943855286, 0.8428213000297546, 0.8400475382804871, 0.8485008478164673, 0.8541803956031799, 0.8610487580299377, 0.8618412613868713, 0.8640866279602051, 0.8677849769592285, 0.8692378997802734, 0.8759741187095642, 0.8799365758895874, 0.876370370388031, 0.8919561505317688, 0.8864086866378784, 0.8874653577804565, 0.895918607711792, 0.8967111110687256, 0.8938053250312805, 0.9010698795318604, 0.8982961177825928, 0.9039757251739502, 0.9079381823539734, 0.9068815112113953, 0.9116365313529968, 0.9122969508171082, 0.915070652961731, 0.9173160791397095, 0.920089840888977, 0.9299960136413574, 0.9245806336402893, 0.9228635430335999, 0.926429808139801, 0.928411066532135, 0.9331660270690918, 0.9297318458557129, 0.9332981109619141], "val_loss": [0.9151020050048828, 0.6326144933700562, 0.5621745586395264, 0.5176832165036883, 0.47975380080086844, 0.4470134973526001, 0.4282272287777492, 0.4134625622204372, 0.3964439034461975, 0.3800539885248457, 0.3616126435143607, 0.35220896346228464, 0.35166986499513897, 0.34160542488098145, 0.32875365018844604, 0.32704618147441317, 0.32189683403287617, 0.32041055815560476, 0.3130039317267282, 0.3100087557520185, 0.30524230003356934, 0.3080237592969622, 0.2960049424852644, 0.3006314890725272, 0.29197078943252563, 0.3060527869633266, 0.29296975476401194, 0.2862691198076521, 0.29364071573529926, 0.28847771883010864, 0.2922835946083069, 0.2869649188859122, 0.2860439249447414, 0.28292026690074373, 0.29321151971817017, 0.2905148778642927, 0.28564861842564176, 0.2808316435132708, 0.294779760496957, 0.2949617760522025, 0.285723192351205, 0.28804762022835867, 0.2978598816054208, 0.29663753509521484, 0.29661199876240324, 0.29822860445295063], "val_accuracy": [0.6420000195503235, 0.7283333539962769, 0.7356666922569275, 0.7553333044052124, 0.7796666622161865, 0.7926666736602783, 0.8116666674613953, 0.8173333406448364, 0.8209999799728394, 0.8353333473205566, 0.843666672706604, 0.8420000076293945, 0.8456666469573975, 0.8476666808128357, 0.8569999933242798, 0.8573333621025085, 0.8583333492279053, 0.8573333621025085, 0.8613333106040955, 0.859333336353302, 0.8640000224113464, 0.8629999756813049, 0.8693333268165588, 0.8686666488647461, 0.871666669845581, 0.8706666827201843, 0.8709999918937683, 0.8766666650772095, 0.8733333349227905, 0.8773333430290222, 0.8773333430290222, 0.8766666650772095, 0.875, 0.8813333511352539, 0.8803333044052124, 0.8790000081062317, 0.8803333044052124, 0.8816666603088379, 0.8803333044052124, 0.8843333125114441, 0.8899999856948853, 0.8853333592414856, 0.8849999904632568, 0.8856666684150696, 0.8846666812896729, 0.8863333463668823]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 1, 5, 4, 0, 0, 0, 9, 5, 7, 6, 1, 4, 5, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [26, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8431428670883179, "mapping_values": [1, 26, 26, 16, 10, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))))), tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03821383351112, 1.090292933240401, 0.7796400799066037, 0.6898363813937002, 0.6269784179015355, 0.5800106618004768, 0.5408036385970014, 0.5099383279820947, 0.49300968655269567, 0.47083477211618907, 0.4449264142121527, 0.44130732980953497, 0.41108666209811784, 0.3987692961516775, 0.3861815764990308, 0.375492005776641, 0.36851871050643314, 0.35720793370085147, 0.3459399349976682, 0.33546706493252604, 0.3274133262451944, 0.3177213662800583, 0.2970997180881722, 0.2995855817705365, 0.2889557136575764, 0.2818453395961849, 0.2721957188311695, 0.27993770354868885, 0.26705833773539916, 0.26514406574282584, 0.2562362905727039, 0.2502720116065273, 0.2397850327161262, 0.2329986011150601, 0.22904648791136065, 0.23241855743192427, 0.21845817688732982, 0.2127206487591713, 0.20023856128306042], "accuracy": [0.30563995242118835, 0.6126006841659546, 0.713908314704895, 0.7428345084190369, 0.7647602558135986, 0.7852331399917603, 0.8009510040283203, 0.8092722296714783, 0.8183859586715698, 0.8264430165290833, 0.8436138033866882, 0.8409721255302429, 0.8479725122451782, 0.8527275323867798, 0.8614450097084045, 0.8593316674232483, 0.8627657890319824, 0.867520809173584, 0.8709549307823181, 0.8754457831382751, 0.8780874609947205, 0.8792761564254761, 0.8922203183174133, 0.8893144726753235, 0.889578640460968, 0.8949940800666809, 0.8975036144256592, 0.8957865834236145, 0.8986923694610596, 0.9027869701385498, 0.9015982151031494, 0.901862382888794, 0.9091269373893738, 0.9091269373893738, 0.9093911051750183, 0.9097873568534851, 0.9159952402114868, 0.9186369180679321, 0.9251089692115784], "val_loss": [0.9151330675397601, 0.6325485536030361, 0.5601453951426915, 0.5176368611199516, 0.4781585761478969, 0.4459003380366734, 0.42616569995880127, 0.42025675092424664, 0.3958883115223476, 0.3781647597040449, 0.36355204241616385, 0.3469200645174299, 0.3516907777105059, 0.3395252227783203, 0.32737255096435547, 0.3250843456813267, 0.31963453122547697, 0.3206097568784441, 0.31496318749019075, 0.3050498792103359, 0.3079303077289036, 0.30706489086151123, 0.29710730484553743, 0.3042964254106794, 0.29848908526556833, 0.30073452847344534, 0.2957151106425694, 0.29524563040052143, 0.2946580818721226, 0.2934203403336661, 0.29373274530683247, 0.286959775856563, 0.2852194053786142, 0.2864290050097874, 0.30567112990788053, 0.29168891055243357, 0.29930150508880615, 0.282515857900892, 0.2966412901878357], "val_accuracy": [0.6420000195503235, 0.7286666631698608, 0.7390000224113464, 0.7609999775886536, 0.7796666622161865, 0.7956666946411133, 0.8130000233650208, 0.8153333067893982, 0.8193333148956299, 0.8346666693687439, 0.8410000205039978, 0.8460000157356262, 0.8500000238418579, 0.8500000238418579, 0.8569999933242798, 0.8576666712760925, 0.8566666841506958, 0.8556666374206543, 0.8543333411216736, 0.8646666407585144, 0.8659999966621399, 0.8650000095367432, 0.8693333268165588, 0.8700000047683716, 0.8673333525657654, 0.8723333477973938, 0.8733333349227905, 0.875, 0.875, 0.8759999871253967, 0.8723333477973938, 0.8793333172798157, 0.8796666860580444, 0.8806666731834412, 0.8790000081062317, 0.875333309173584, 0.875333309173584, 0.8806666731834412, 0.8806666731834412]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 8, 6, 1, 4, 6, 2, 1, 5, 4, 0, 0, 1, 9, 5, 7, 0, 1, 6, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 2, 2, 0, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 77, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8411428332328796, "mapping_values": [1, 33, 33, 20, 13, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, grad))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038213806491817, 1.0903341687350714, 0.7794895911922135, 0.6892533936930086, 0.6285783562599124, 0.5816204572602538, 0.541922563189261, 0.5128153695752828, 0.49282223710121337, 0.46979470848800986, 0.4457316811349902, 0.4443736976053673, 0.4124011162241861, 0.3972915533259403, 0.3814039725858018, 0.3732428975376738, 0.37006283770415604, 0.35634554343736247, 0.34749375939321964, 0.33522066814457624, 0.32690605359416924, 0.31264846836807325, 0.2961710639688648, 0.30234385610587244, 0.297710714397996, 0.2858848053868011, 0.2728951773772922, 0.27151364986536886, 0.2598895541728212, 0.25640979112808526, 0.24699997811182978, 0.2459733585175459, 0.2387117900297768, 0.22908836190829016, 0.2275735195133239, 0.22701109232699096, 0.2124669013470864, 0.2086224995465909], "accuracy": [0.30563995242118835, 0.6124686598777771, 0.7136441469192505, 0.7434949278831482, 0.7662131786346436, 0.7853652238845825, 0.8016114234924316, 0.8084797263145447, 0.8165367841720581, 0.8251221776008606, 0.8436138033866882, 0.8387266993522644, 0.8474441766738892, 0.8555012345314026, 0.8647470474243164, 0.863558292388916, 0.8626337051391602, 0.8677849769592285, 0.8720116019248962, 0.8772949576377869, 0.8831065893173218, 0.882710337638855, 0.8934090733528137, 0.8869370222091675, 0.885219931602478, 0.8938053250312805, 0.8967111110687256, 0.8973715305328369, 0.8996169567108154, 0.9039757251739502, 0.904768168926239, 0.9035794734954834, 0.91124027967453, 0.9117686152458191, 0.9085986018180847, 0.9153348207473755, 0.91559898853302, 0.9192973375320435], "val_loss": [0.9151334421975272, 0.6324882337025234, 0.5596718277250018, 0.5169345991952079, 0.4788712092808315, 0.4459575244358608, 0.42941953454698834, 0.41762594665799824, 0.39782385315213886, 0.3803552900041853, 0.3637371744428362, 0.3475487061909267, 0.35277074575424194, 0.33889501435416086, 0.32740317072187153, 0.3263299890926906, 0.31855676003864836, 0.32036882638931274, 0.3126486199242728, 0.30572367565972464, 0.30928927659988403, 0.3083295396396092, 0.296874931880406, 0.3024678315435137, 0.29312547615596224, 0.3118175779070173, 0.29473982538495747, 0.2902932507651193, 0.2903792602675302, 0.29009837763650076, 0.2902169738497053, 0.2890788572175162, 0.2899698444775173, 0.28492376634052824, 0.30162141152790617, 0.28657764196395874, 0.29487704379217966, 0.28722173827035086], "val_accuracy": [0.6420000195503235, 0.7276666760444641, 0.737666666507721, 0.7590000033378601, 0.7786666750907898, 0.7940000295639038, 0.8096666932106018, 0.8140000104904175, 0.8199999928474426, 0.8330000042915344, 0.8426666855812073, 0.8483333587646484, 0.8460000157356262, 0.8516666889190674, 0.8529999852180481, 0.8556666374206543, 0.8579999804496765, 0.8543333411216736, 0.8583333492279053, 0.8650000095367432, 0.862666666507721, 0.8643333315849304, 0.8690000176429749, 0.8703333139419556, 0.8673333525657654, 0.8643333315849304, 0.8679999709129333, 0.8730000257492065, 0.8763333559036255, 0.8773333430290222, 0.8740000128746033, 0.8759999871253967, 0.8809999823570251, 0.878000020980835, 0.875, 0.8790000081062317, 0.8776666522026062, 0.8793333172798157]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 1, 1, 5, 2, 0, 1, 0, 4, 3, 0, 6, 1, 1, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [98, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8408571481704712, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.038207124709579, 1.0905566893910625, 0.7793135096399838, 0.6898921007461961, 0.6287448050055947, 0.5809643895650316, 0.5422760743931725, 0.5107937826535265, 0.49065486465809194, 0.47282304239153405, 0.4466999715754794, 0.44283187314976225, 0.4122322528959974, 0.39761587081095956, 0.3874593557242027, 0.3743283795312159, 0.3695711276637029, 0.3555287750145826, 0.3467766529990068, 0.33521564973816187, 0.32594733141936394, 0.3116166438440432, 0.29987504281986344, 0.3027257987607692, 0.2956635696406787, 0.28082424581342164, 0.2748166453750174, 0.27671614685677076, 0.26546421490797606, 0.25974531640009463, 0.25886133335813194, 0.2467039660684122, 0.2413467079491553, 0.23462596180818146, 0.22634376842135437, 0.22028591831118408, 0.2173912577609565, 0.2141999934371027, 0.2010003023194977, 0.20256138928436315, 0.19882168315263424, 0.19813172647139304, 0.1931219807925745, 0.17901028939730076, 0.17778641723363062, 0.1727839559690591, 0.175390520787132, 0.16668450987952307, 0.1622527051382943, 0.1588734963082398], "accuracy": [0.3055078685283661, 0.6126006841659546, 0.7136441469192505, 0.7454761862754822, 0.7658169269561768, 0.7821952104568481, 0.8009510040283203, 0.8096684813499451, 0.8186501264572144, 0.8285563588142395, 0.8429533839225769, 0.8403117060661316, 0.8487650156021118, 0.8548408150672913, 0.8598600029945374, 0.8631620407104492, 0.8617091774940491, 0.8689737319946289, 0.8701624870300293, 0.8749174475669861, 0.8804649114608765, 0.8811253309249878, 0.8912957310676575, 0.8870691061019897, 0.8887861371040344, 0.8936732411384583, 0.8945978283882141, 0.8948619961738586, 0.897899866104126, 0.9009377956390381, 0.8992207050323486, 0.90423983335495, 0.9072777628898621, 0.9113723635673523, 0.9101836085319519, 0.9157310724258423, 0.9173160791397095, 0.9167877435684204, 0.9251089692115784, 0.9249768853187561, 0.9206181764602661, 0.9256373047828674, 0.923920214176178, 0.9318451881408691, 0.930260181427002, 0.9311847686767578, 0.9314489364624023, 0.937656819820404, 0.9322414398193359, 0.9388455748558044], "val_loss": [0.9151823180062431, 0.6323757171630859, 0.5606599364961896, 0.5192521640232631, 0.47754388196127756, 0.4461736168180193, 0.4271108167512076, 0.41522704703467234, 0.3964242424283709, 0.3801786814417158, 0.3594394155911037, 0.349308294909341, 0.3534383007458278, 0.3383041875702994, 0.3267349260193961, 0.3248234050614493, 0.32245257071086336, 0.3204847403935024, 0.3163130113056728, 0.3065279722213745, 0.30210903712681364, 0.3129456213542393, 0.2958555391856602, 0.3018791505268642, 0.2920675107410976, 0.3006460496357509, 0.29367272342954365, 0.2944886088371277, 0.2874117749077933, 0.2969517707824707, 0.29986880506787983, 0.29166315283094135, 0.2859937037740435, 0.2823237180709839, 0.29742289440972464, 0.29667424304144724, 0.28961106709071566, 0.2839052251407078, 0.2902463674545288, 0.29751951353890554, 0.28434320858546663, 0.27979651519230436, 0.30617659432547434, 0.29898706504276823, 0.29847250665937153, 0.2962943826402937, 0.29675611427852083, 0.30965256690979004, 0.3059923137937273, 0.30653988463538034], "val_accuracy": [0.6416666507720947, 0.7283333539962769, 0.7383333444595337, 0.7566666603088379, 0.7793333530426025, 0.796999990940094, 0.812333345413208, 0.8146666884422302, 0.8196666836738586, 0.8289999961853027, 0.8456666469573975, 0.8446666598320007, 0.8450000286102295, 0.8486666679382324, 0.8539999723434448, 0.8583333492279053, 0.8556666374206543, 0.856333315372467, 0.8526666760444641, 0.8640000224113464, 0.8676666617393494, 0.8629999756813049, 0.871666669845581, 0.8706666827201843, 0.871999979019165, 0.8706666827201843, 0.8713333606719971, 0.8740000128746033, 0.8773333430290222, 0.8776666522026062, 0.8759999871253967, 0.8773333430290222, 0.8799999952316284, 0.8786666393280029, 0.8756666779518127, 0.8756666779518127, 0.878000020980835, 0.8809999823570251, 0.8836666941642761, 0.8763333559036255, 0.8840000033378601, 0.8859999775886536, 0.8843333125114441, 0.8813333511352539, 0.8880000114440918, 0.8830000162124634, 0.8820000290870667, 0.8849999904632568, 0.8790000081062317, 0.8813333511352539]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [4, 6, 6, 6, 4, 4, 6, 1, 1, 5, 5, 0, 1, 0, 4, 3, 2, 6, 1, 1, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 26, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.75685715675354, "mapping_values": [1, 33, 33, 18, 15, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))))), tf.math.square(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), grad)))), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), alpha), alpha)))), tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2218838785428727, 1.7195801802315118, 1.2748244273239013, 1.0910005041668365, 0.970055490066945, 0.9079128389959369, 0.8537250293984373, 0.815395670213625, 0.7721976479046758, 0.7590324686754807, 0.7335952182865382, 0.7185047954348462, 0.717953430545045, 0.6898472542067434, 0.6758798476790299], "accuracy": [0.2546559274196625, 0.4620261490345001, 0.5501254796981812, 0.6028265953063965, 0.6507726907730103, 0.6744155287742615, 0.6857746839523315, 0.6988508701324463, 0.7127195596694946, 0.7207766771316528, 0.7304186820983887, 0.7362303733825684, 0.7280412316322327, 0.7446836829185486, 0.7457403540611267], "val_loss": [1.70478732245309, 1.040856122970581, 0.86252532686506, 0.7270893199103219, 0.6919442415237427, 0.6260182346616473, 0.6173219510487148, 0.5823885713304792, 0.589476329939706, 0.5446872540882656, 0.5376506703240531, 0.545007722718375, 0.5365017993109567, 0.5236730405262539, 0.5403444256101336], "val_accuracy": [0.5093333125114441, 0.6003333330154419, 0.6513333320617676, 0.6890000104904175, 0.7026666402816772, 0.7246666550636292, 0.7306666374206543, 0.7586666941642761, 0.731333315372467, 0.7699999809265137, 0.765333354473114, 0.7643333077430725, 0.753000020980835, 0.7400000095367432, 0.753333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 1, 1, 5, 2, 0, 0, 0, 9, 5, 2, 6, 1, 1, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [76, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [98, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7477142810821533, "mapping_values": [1, 26, 26, 16, 10, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.negative(tf.math.negative(alpha))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2113108040713016, 1.6483392864721578, 1.2223193381267563, 1.023526861541354, 0.9430535699177758, 0.8499210115673205, 0.8324786705221907, 0.7819308909159358, 0.7718027808552547, 0.7379827968920888, 0.7358613882901222, 0.6979030040135206], "accuracy": [0.26020342111587524, 0.47827234864234924, 0.5624092221260071, 0.6320168972015381, 0.6643772125244141, 0.687887966632843, 0.6884163022041321, 0.7112666964530945, 0.7156254053115845, 0.7172104120254517, 0.7264562249183655, 0.7342491149902344], "val_loss": [1.664132492882865, 0.9630470957074847, 0.7944059542247227, 0.7849183763776507, 0.6272097315107074, 0.6634125368935722, 0.5686495815004621, 0.5617812361036029, 0.5559308018003192, 0.5784854548318046, 0.5478001832962036, 0.5238562992640904], "val_accuracy": [0.5379999876022339, 0.6623333096504211, 0.6756666898727417, 0.6883333325386047, 0.7433333396911621, 0.7206666469573975, 0.7630000114440918, 0.7606666684150696, 0.7593333125114441, 0.7316666841506958, 0.7450000047683716, 0.7566666603088379]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 6, 8, 4, 4, 6, 8, 2, 1, 4, 1, 0, 1, 4, 5, 9, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 2, 1, 1, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 26, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [52, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.3094285726547241, "mapping_values": [1, 15, 15, 8, 7, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.537876503295304, 2.3095044638140325, 2.2356140552778223, 2.2239328611008857, 2.2742654871332837, 1.755529791278106, 2.4232864656059134, 2.30598841650674], "accuracy": [0.21172896027565002, 0.10540219396352768, 0.19535067677497864, 0.19284109771251678, 0.1394795924425125, 0.3987584114074707, 0.13842293620109558, 0.1006472036242485], "val_loss": [1.9874542100088937, 1.960540499005999, 1.559149639947074, 1.974144799368722, 1.497417790549142, 1.878883225577218, 1.976700714656285, 1.9740324701581682], "val_accuracy": [0.10000000149011612, 0.2933333218097687, 0.34166666865348816, 0.10066666454076767, 0.257666677236557, 0.21799999475479126, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 2, 5, 4, 0, 0, 0, 9, 4, 7, 4, 2, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [94, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [47, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [98, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.28028571605682373, "mapping_values": [1, 25, 25, 15, 10, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))), alpha)))), tf.math.square(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.353826568111248, 2.3003667320132553, 2.3059066841867164, 2.303002977478285, 2.3077195542536675, 2.3028775195183613], "accuracy": [0.2526746690273285, 0.13155461847782135, 0.10976093262434006, 0.09642054885625839, 0.11398758739233017, 0.09470347315073013], "val_loss": [1.9849849428449358, 1.9630065645490373, 1.974062374659947, 1.973597730909075, 1.9738476616995675, 1.9738189833504813], "val_accuracy": [0.28200000524520874, 0.2199999988079071, 0.09833333641290665, 0.1316666603088379, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 1, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.19371429085731506, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2726981210639337, 2.1811321217858515, 2.1634735986147544, 2.259447143345839, 2.215912486520882, 2.298365809236929, 2.292976291849471], "accuracy": [0.15242372453212738, 0.20684190094470978, 0.22678641974925995, 0.1736890822649002, 0.19561484456062317, 0.11795007437467575, 0.1228371411561966], "val_loss": [1.8157380649021693, 1.8384626933506556, 1.6886793885912215, 1.858273710523333, 1.7611024039132255, 1.9753310339791434, 1.9753002439226424], "val_accuracy": [0.3529999852180481, 0.4869999885559082, 0.3526666760444641, 0.34066668152809143, 0.38600000739097595, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 6, 5, 4, 0, 0, 1, 9, 6, 1, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 1, 0, 1, 1, 0, 1, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 26, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 21, 14, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.sqrt(alpha))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), grad)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1478.5090550062537, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05732399970293045, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [501358844781.7143, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 3, 6, 6, 2, 4, 6, 9, 1, 5, 2, 0, 0, 0, 9, 5, 0, 6, 1, 1, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [0, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [98, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027266321432918, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 6, 2, 1, 9, 4, 0, 0, 1, 9, 3, 7, 6, 1, 3, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 72, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 51, 31, 20, 8, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.multiply(grad, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 6, 8, 8, 4, 6, 2, 5, 1, 4, 1, 6, 1, 4, 5, 9, 5, 1, 4, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 0, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [93, 98, 24, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)))))))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 6, 8, 4, 4, 6, 2, 6, 1, 4, 1, 0, 1, 4, 5, 9, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 2, 0, 1, 2, 0, 1, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 64, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.0868571400642395, "mapping_values": [1, 20, 20, 10, 10, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.subtract(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301058847544263, 2.300856977264249, 2.3015737525381668, 2.3023821229963666, 2.3025981563350952, 2.303135167055, 2.3040406409192946], "accuracy": [0.09113723784685135, 0.10540219396352768, 0.10117553919553757, 0.09126931428909302, 0.09774138033390045, 0.1014397069811821, 0.10619468986988068], "val_loss": [1.9699879373822893, 1.9714048249380929, 1.973031452723912, 1.9734983444213867, 1.9738163948059082, 1.974431106022426, 1.9756238119942802], "val_accuracy": [0.0729999989271164, 0.11699999868869781, 0.08933333307504654, 0.08833333104848862, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 3, 6, 9, 5, 4, 6, 3, 5, 5, 4, 0, 6, 2, 9, 1, 7, 9, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 2, 0, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.07285714149475098, "mapping_values": [1, 23, 23, 15, 8, 3, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))))))), tf.math.add(tf.math.add(alpha, alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3016914061079126, 2.3019955999044113, 2.3024272865481334, 2.3015129993840797, 2.300064010989192, 2.300863705448518, 2.2993814975767246, 2.2993185950024664, 2.298724720963335, 2.2998600365416153, 2.298048524934665, 2.3007995637967493, 2.298944445145113, 2.3006073156950606, 2.3010521623767395, 2.2996857503559203], "accuracy": [0.08836349099874496, 0.09325055778026581, 0.0948355570435524, 0.09774138033390045, 0.09840179979801178, 0.0940430611371994, 0.10236428678035736, 0.10236428678035736, 0.10447761416435242, 0.10249637067317963, 0.09985470771789551, 0.09932637959718704, 0.10566636174917221, 0.09734513610601425, 0.09919429570436478, 0.09932637959718704], "val_loss": [1.9707089832850866, 1.9702565329415458, 1.9698594638279505, 1.9695380074637276, 1.9693658692496163, 1.9693411418369837, 1.9693737711225237, 1.9694865771702357, 1.9695440701075964, 1.969561985560826, 1.9696008818490165, 1.9696884836469377, 1.9698501995631628, 1.9700711795261927, 1.9703187261308943, 1.97055755342756], "val_accuracy": [0.04266666620969772, 0.04600000008940697, 0.05400000140070915, 0.061000000685453415, 0.06599999964237213, 0.0729999989271164, 0.0793333351612091, 0.08166666328907013, 0.08833333104848862, 0.08933333307504654, 0.09000000357627869, 0.08900000154972076, 0.08866667002439499, 0.08266666531562805, 0.07900000363588333, 0.07733333110809326]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 4, 6, 5, 4, 4, 6, 2, 1, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [64, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.07085714489221573, "mapping_values": [1, 33, 33, 21, 12, 3, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(grad, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), alpha), tf.math.sqrt(grad))), grad))))))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3014043757723717, 2.3014454193843306, 2.3020357761904546, 2.3013002658328046, 2.3002875812018098, 2.301111072990731, 2.2996888497974486, 2.2996182341884865, 2.2989168994698495, 2.299975707908553, 2.29826315777287, 2.3010823761294183, 2.299343403634961, 2.3010660662642874, 2.3014530996053826, 2.300064981668664], "accuracy": [0.08889182657003403, 0.09642054885625839, 0.09536388516426086, 0.09826971590518951, 0.09826971590518951, 0.0952318087220192, 0.10130762308835983, 0.10315678268671036, 0.10249637067317963, 0.09945846349000931, 0.09879804402589798, 0.09430722147226334, 0.10342095047235489, 0.09417514503002167, 0.09589222073554993, 0.09642054885625839], "val_loss": [1.9703470638820104, 1.970020362309047, 1.9698247228349959, 1.969623361315046, 1.96982022694179, 1.9697410719735282, 1.969745091029576, 1.9697497912815638, 1.9697587830679757, 1.9697961126055037, 1.9699064663478307, 1.9701088496616908, 1.9703501973833357, 1.9705392973763602, 1.9706943375723702, 1.9709004674639021], "val_accuracy": [0.04600000008940697, 0.05400000140070915, 0.056333333253860474, 0.06300000101327896, 0.06599999964237213, 0.0716666653752327, 0.07666666805744171, 0.07900000363588333, 0.0820000022649765, 0.08166666328907013, 0.0833333358168602, 0.0793333351612091, 0.07366666942834854, 0.07533333450555801, 0.07599999755620956, 0.07000000029802322]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 3, 9, 2, 1, 0, 4, 0, 2, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 2, 0, 1, 0, 0, 1, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.0705714300274849, "mapping_values": [1, 33, 33, 20, 13, 5, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, grad))))), grad)), tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3014003989592897, 2.3014466880634084, 2.3020411158722816, 2.301313010000235, 2.3003050127773865, 2.3011236916664113, 2.299692974838803, 2.2996247386604867, 2.2989212719677083, 2.2999766259035335, 2.298257705447633, 2.3010751469858635, 2.299335773673591, 2.3010606454300797, 2.301447755546303, 2.300062777013228], "accuracy": [0.08889182657003403, 0.09628847241401672, 0.09536388516426086, 0.09840179979801178, 0.09826971590518951, 0.09509972482919693, 0.10130762308835983, 0.10315678268671036, 0.10249637067317963, 0.09959053993225098, 0.09893012791872025, 0.09457138925790787, 0.10394927859306335, 0.0940430611371994, 0.09589222073554993, 0.09694888442754745], "val_loss": [1.9703518322535925, 1.9700262205941337, 1.969837256840297, 1.969637393951416, 1.9698343958173479, 1.969747815813337, 1.969754423413958, 1.9697572844369071, 1.969762189047677, 1.9697981561933244, 1.9699031966073173, 1.9701072829110282, 1.97034638268607, 1.9705345290047782, 1.9706907272338867, 1.970900194985526], "val_accuracy": [0.04600000008940697, 0.05400000140070915, 0.05666666850447655, 0.06266666948795319, 0.06599999964237213, 0.0716666653752327, 0.07599999755620956, 0.07866666465997696, 0.08233333379030228, 0.0820000022649765, 0.0833333358168602, 0.08033332973718643, 0.07466666400432587, 0.07466666400432587, 0.07599999755620956, 0.06966666877269745]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 6, 4, 4, 9, 2, 1, 5, 4, 0, 0, 1, 9, 3, 4, 6, 1, 2, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.04942857101559639, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3017529877909673, 2.302461501550933, 2.3034788297230713, 2.3032354850023333, 2.301758094754091, 2.3033583783643623, 2.3016568250848852, 2.300895874699613, 2.3005224805324778, 2.301690355031844, 2.299693193229088, 2.3025145377969194, 2.300340491357717, 2.3021487325268524, 2.302701197973001, 2.2998050946475113, 2.3000518165291606, 2.302896444650453, 2.301415044177147, 2.3017641641775284, 2.3011052879627747, 2.302173500504429, 2.300553840369659, 2.3014203445896606, 2.3029282968498697, 2.299617041906645, 2.299552736438544, 2.300121281109529, 2.299604786826383, 2.299592222094835, 2.301568751636828, 2.302151400509795, 2.3002278273840306, 2.2992293288631838, 2.2999847282303354, 2.300371096701339, 2.300420786112275, 2.3002290508104997, 2.299927858864831, 2.3013270438827496, 2.299390764756682, 2.2991776290019867, 2.300475856489777, 2.2994442696836503, 2.2985500633094635, 2.299666312014532, 2.2973829440909324, 2.2991565901605506, 2.2981419515112185, 2.299163819524543, 2.299881774483891, 2.2986842274996486, 2.298680844323951, 2.2987661829965935, 2.298785871219295, 2.298516124734915, 2.2980439966506867, 2.299865111478363, 2.298275721811615, 2.2987777157986184, 2.2991933056770018, 2.2963597783323104, 2.297837543890634, 2.2985203564993664, 2.297644520227888, 2.2986480117773165, 2.297851046204583, 2.2983539197675116, 2.29944895655645, 2.297991355365183, 2.2980743257864953, 2.2964798125608517, 2.299754745688468, 2.2975100441820446, 2.297613604918069, 2.2975199015668637, 2.298688687763005, 2.297426742097217, 2.2977424597522886], "accuracy": [0.08836349099874496, 0.09153348207473755, 0.09259014576673508, 0.09126931428909302, 0.08942015469074249, 0.08558975160121918, 0.09311848133802414, 0.09536388516426086, 0.09430722147226334, 0.09721305221319199, 0.09311848133802414, 0.0940430611371994, 0.09311848133802414, 0.0936468094587326, 0.09179764986038208, 0.09998679161071777, 0.0944393053650856, 0.09140139818191528, 0.09760929644107819, 0.09747721254825592, 0.09589222073554993, 0.09311848133802414, 0.09232597798109055, 0.09787346422672272, 0.09087307006120682, 0.09721305221319199, 0.09655263274908066, 0.09853387624025345, 0.09259014576673508, 0.09232597798109055, 0.09245806187391281, 0.09840179979801178, 0.09549596905708313, 0.09919429570436478, 0.09919429570436478, 0.09721305221319199, 0.09457138925790787, 0.09985470771789551, 0.09351472556591034, 0.09893012791872025, 0.09998679161071777, 0.09589222073554993, 0.09311848133802414, 0.09747721254825592, 0.09998679161071777, 0.09972262382507324, 0.09708096832036972, 0.10460969805717468, 0.10157178342342377, 0.09906221181154251, 0.09509972482919693, 0.10077928751707077, 0.10077928751707077, 0.09985470771789551, 0.10117553919553757, 0.10117553919553757, 0.10381719470024109, 0.1026284471154213, 0.10500594228506088, 0.09853387624025345, 0.10619468986988068, 0.10460969805717468, 0.09972262382507324, 0.09642054885625839, 0.10170386731624603, 0.09655263274908066, 0.10302469879388809, 0.10421344637870789, 0.09694888442754745, 0.10368511080741882, 0.10091137140989304, 0.10698718577623367, 0.0948355570435524, 0.1006472036242485, 0.10196803510189056, 0.10328886657953262, 0.09985470771789551, 0.10421344637870789, 0.1018359512090683], "val_loss": [1.9709151131766183, 1.9708264895847865, 1.970749855041504, 1.9706748553684779, 1.9706053052629744, 1.9705302374703544, 1.9704583712986536, 1.9703870500837053, 1.9703119822910853, 1.9702469280787878, 1.9701766967773438, 1.970111506325858, 1.970038958958217, 1.9699603489467077, 1.9698809215000697, 1.96981566292899, 1.9697472027369909, 1.9696729523794991, 1.969604560307094, 1.9695301737104143, 1.9694653919764928, 1.9693940026419503, 1.9693244525364466, 1.9692543574741908, 1.969186578478132, 1.9691222735813685, 1.9690563338143485, 1.9689975466047014, 1.9689397811889648, 1.9688779285975866, 1.9688191413879395, 1.9687562670026506, 1.9687028612409319, 1.9686496598379952, 1.9685936655317033, 1.968534197126116, 1.9684725488935197, 1.9684156690325056, 1.9683536802019392, 1.9682923725673132, 1.9682354927062988, 1.9681792259216309, 1.9681260926382882, 1.9680681909833635, 1.9680129459926061, 1.9679555892944336, 1.9679007530212402, 1.967853341783796, 1.9678073610578264, 1.9677508899143763, 1.9677001408168249, 1.967649323599679, 1.9676013674054826, 1.967554977961949, 1.967507771083287, 1.9674571582249232, 1.9674108369009835, 1.967353275844029, 1.967306137084961, 1.9672558648245675, 1.96721008845738, 1.967165129525321, 1.9671177182878767, 1.967064448765346, 1.9670190129961287, 1.9669700350080217, 1.9669188090733118, 1.9668750081743513, 1.9668291636875697, 1.9667835916791643, 1.966735907963344, 1.9666877474103654, 1.9666427203587122, 1.9665944235665458, 1.9665486471993583, 1.966503483908517, 1.9664547783987862, 1.9664126123700822, 1.966362135750907], "val_accuracy": [0.03866666555404663, 0.03933333232998848, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.04633333161473274, 0.046666666865348816, 0.04766666516661644, 0.04833333194255829, 0.04833333194255829, 0.04866666719317436, 0.04866666719317436, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.05133333429694176, 0.05166666582226753, 0.05133333429694176, 0.05166666582226753, 0.052666667848825455, 0.052666667848825455, 0.052666667848825455, 0.05299999937415123, 0.05299999937415123, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.055666666477918625, 0.055666666477918625, 0.0560000017285347, 0.056333333253860474, 0.056333333253860474, 0.056333333253860474, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.0573333315551281, 0.05766666680574417, 0.05833333358168602, 0.05900000035762787, 0.059333331882953644, 0.05966666713356972, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.05999999865889549, 0.061000000685453415, 0.06199999898672104, 0.06199999898672104, 0.061666667461395264, 0.06266666948795319, 0.06300000101327896, 0.06366666406393051, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06433333456516266, 0.06533333659172058, 0.06499999761581421, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 3, 6, 8, 4, 3, 3, 2, 1, 5, 4, 1, 0, 1, 4, 5, 9, 6, 8, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 0, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 98, 17, 0, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 8, 7, 1, 8, 2, 2, 1], [2, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301790052857838, 2.302598154980981, 2.3036911363504693, 2.303531651042787, 2.3021284346378335, 2.303816818306081], "accuracy": [0.08836349099874496, 0.09087307006120682, 0.09192973375320435, 0.09087307006120682, 0.08889182657003403, 0.08479725569486618], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]