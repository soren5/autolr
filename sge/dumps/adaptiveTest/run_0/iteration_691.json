[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 3, 9, 1, 2, 2, 2, 1, 2, 0, 4, 1, 5, 2, 7, 6, 2, 8, 0, 8, 1, 6, 5], [0, 2, 2, 0, 2, 2, 0, 0, 1, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8414285778999329, "mapping_values": [1, 15, 15, 9, 6, 3, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.029531740446321, 1.1431344172674605, 0.8234045124639688, 0.7314834143381392, 0.6481238015103318, 0.5982103067823075, 0.5596349759344978, 0.5343360329789099, 0.5018783556141196, 0.4799200900321183, 0.4556352067672345, 0.44414296294751343, 0.4147632367354909, 0.40553643244951315, 0.392324841871962, 0.3952932447773701, 0.3684348057305509, 0.36225402836219556, 0.35319370059698735, 0.33765133277709536, 0.3279351757627988, 0.3238144577447024, 0.31114542858633054, 0.29247879153386935, 0.29267242534710763, 0.292441035951401], "accuracy": [0.3125082552433014, 0.6050719618797302, 0.6973979473114014, 0.7207766771316528, 0.7535332441329956, 0.7712323069572449, 0.7943468689918518, 0.8006868362426758, 0.8170651197433472, 0.8189142942428589, 0.8327829837799072, 0.8407079577445984, 0.8508783578872681, 0.8512746095657349, 0.8539162874221802, 0.8577466607093811, 0.8605204224586487, 0.867520809173584, 0.8673887252807617, 0.8758420348167419, 0.8765024542808533, 0.8833707571029663, 0.8838990926742554, 0.8924844861030579, 0.8907673954963684, 0.8901069760322571], "val_loss": [0.8792625835963658, 0.6263066530227661, 0.5907363551003593, 0.5331023931503296, 0.48582143442971365, 0.45021726403917584, 0.43575245993477957, 0.40855489458356586, 0.38891283103397917, 0.3918796692575727, 0.36951540197644916, 0.3597749556813921, 0.3571119819368635, 0.34180760383605957, 0.34814727306365967, 0.33832802942820955, 0.3371113623891558, 0.3260131648608616, 0.3133774059159415, 0.3169060434613909, 0.31248469012124197, 0.3075218881879534, 0.313620924949646, 0.2989825350897653, 0.30061274766921997, 0.29701138394219534], "val_accuracy": [0.6653333306312561, 0.7350000143051147, 0.731333315372467, 0.7549999952316284, 0.7749999761581421, 0.7946666479110718, 0.8013333082199097, 0.8116666674613953, 0.8339999914169312, 0.8306666612625122, 0.8370000123977661, 0.8496666550636292, 0.840666651725769, 0.847000002861023, 0.8463333249092102, 0.8483333587646484, 0.8506666421890259, 0.856333315372467, 0.8629999756813049, 0.8613333106040955, 0.8683333396911621, 0.8650000095367432, 0.8646666407585144, 0.8650000095367432, 0.8669999837875366, 0.8669999837875366]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8394285440444946, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0295322705663, 1.1439524095339657, 0.8233185438605316, 0.731342495149074, 0.6480212755144044, 0.5981249012069743, 0.5589230754954578, 0.5338113621918438, 0.5001257704847666, 0.480573990526547, 0.45255135948616104, 0.4457169336657624, 0.4180840813268083, 0.4093632358940066, 0.3909349598471735, 0.39460048233009426, 0.3738633252216793, 0.36537265132415436, 0.3560975319665925, 0.3422761451747707, 0.3366770990701667, 0.3284072342951536, 0.31502913561133095, 0.29769493503467265, 0.29475491578474083, 0.29573777755726094, 0.28197260100402854, 0.276088425492283, 0.2782365944068729, 0.26564291092808123, 0.27336455380297797, 0.2653896213640642, 0.2608683823204752, 0.2523909011623721], "accuracy": [0.3125082552433014, 0.6056002974510193, 0.6956809163093567, 0.7205125093460083, 0.7547219395637512, 0.7712323069572449, 0.7961959838867188, 0.8018755912780762, 0.8156121969223022, 0.8204993009567261, 0.8356888294219971, 0.8401796221733093, 0.8473120927810669, 0.8490291833877563, 0.8537842035293579, 0.8581429123878479, 0.8594637513160706, 0.8646149635314941, 0.8685774803161621, 0.8761062026023865, 0.874389111995697, 0.8841632604598999, 0.8802007436752319, 0.891559898853302, 0.8911636471748352, 0.8828424215316772, 0.8922203183174133, 0.8977677822113037, 0.896446943283081, 0.8989565372467041, 0.8928807377815247, 0.8993527889251709, 0.9015982151031494, 0.9012019634246826], "val_loss": [0.8792454515184674, 0.6264130047389439, 0.5905545779636928, 0.5320832218442645, 0.4855379717690604, 0.4483663865498134, 0.4344449383871896, 0.40908758129392353, 0.39106365612574984, 0.39258815561022076, 0.3702145389148167, 0.3605232409068516, 0.3571365901402065, 0.34402538197381155, 0.3444264531135559, 0.3375075289181301, 0.33977374008723665, 0.32942341906683786, 0.3170510615621294, 0.33321575607572285, 0.3187203066689627, 0.3095993995666504, 0.3075581874166216, 0.3008203847067697, 0.2963200296674456, 0.2990024430411203, 0.3049687317439488, 0.30309574944632395, 0.29250491516930716, 0.2981471078736441, 0.29706173283713205, 0.3070558224405561, 0.2966580731528146, 0.29617176737104145], "val_accuracy": [0.6650000214576721, 0.7360000014305115, 0.731333315372467, 0.7540000081062317, 0.7760000228881836, 0.7960000038146973, 0.8009999990463257, 0.8096666932106018, 0.8276666402816772, 0.8293333053588867, 0.8386666774749756, 0.8503333330154419, 0.8356666564941406, 0.8460000157356262, 0.8519999980926514, 0.8539999723434448, 0.8473333120346069, 0.8523333072662354, 0.8600000143051147, 0.8576666712760925, 0.8653333187103271, 0.8643333315849304, 0.8666666746139526, 0.8650000095367432, 0.8659999966621399, 0.8696666955947876, 0.8686666488647461, 0.8683333396911621, 0.875, 0.8730000257492065, 0.8700000047683716, 0.8656666874885559, 0.874666690826416, 0.8740000128746033]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0295314998391154, 1.1432958830931812, 0.8238884024395841, 0.7321957232000774, 0.648657317410969, 0.5988414100904066, 0.5601646505988049, 0.536276231313095, 0.5019083630060869, 0.48021545070131866, 0.45322830588306495, 0.4452116596637353, 0.416279695608266, 0.4066546020758481, 0.39207952922172457, 0.39356563901306063, 0.36873595669851833, 0.36309311570524144, 0.3522820103130698, 0.3398816566646154, 0.3343049087158803, 0.32203028862896127, 0.3094978072128087, 0.2932382027203176, 0.28852613095704355, 0.29135787601972285, 0.2824297839695232, 0.2725182521368424, 0.2734401398378356, 0.26358994732931573, 0.26956448935955396, 0.25857840145993083, 0.25814906125409715, 0.24755553157023152], "accuracy": [0.3125082552433014, 0.6057323813438416, 0.6964733600616455, 0.7206445932388306, 0.7540615797042847, 0.7685906887054443, 0.7952714562416077, 0.8018755912780762, 0.8150838613510132, 0.8210275769233704, 0.835160493850708, 0.8412362933158875, 0.8470479249954224, 0.8508783578872681, 0.8557654023170471, 0.856689989566803, 0.8602562546730042, 0.8663320541381836, 0.8691058158874512, 0.8746532797813416, 0.8739928603172302, 0.8865407705307007, 0.8831065893173218, 0.8907673954963684, 0.8923524022102356, 0.8874653577804565, 0.8948619961738586, 0.8934090733528137, 0.8997490406036377, 0.9019944667816162, 0.8922203183174133, 0.9027869701385498, 0.9037115573883057, 0.9043719172477722], "val_loss": [0.87925614629473, 0.6262676034654889, 0.5914982216698783, 0.5336091348103115, 0.48585433619362967, 0.45047570977892193, 0.4364135776247297, 0.4075899805341448, 0.39210064922060284, 0.3930632472038269, 0.37035409041813444, 0.35913040808268953, 0.35303392580577303, 0.3410760590008327, 0.3550792762211391, 0.33406451770237516, 0.3359853710447039, 0.3250563996178763, 0.31526115110942293, 0.3242208021027701, 0.3099015014512198, 0.30596940006528583, 0.3017098903656006, 0.29664603301457, 0.29579699890954153, 0.298960770879473, 0.2989906924111502, 0.29918915033340454, 0.29399585723876953, 0.29333622114998953, 0.30102678707667757, 0.31270746673856464, 0.29099561486925396, 0.2903737170355661], "val_accuracy": [0.6650000214576721, 0.7360000014305115, 0.7323333621025085, 0.7543333172798157, 0.7766666412353516, 0.7976666688919067, 0.8036666512489319, 0.8146666884422302, 0.8253333568572998, 0.8326666951179504, 0.8383333086967468, 0.8496666550636292, 0.8429999947547913, 0.8503333330154419, 0.8443333506584167, 0.8566666841506958, 0.8473333120346069, 0.8546666502952576, 0.8633333444595337, 0.859333336353302, 0.8679999709129333, 0.8653333187103271, 0.8696666955947876, 0.8669999837875366, 0.8663333058357239, 0.8663333058357239, 0.8709999918937683, 0.8703333139419556, 0.874666690826416, 0.8736666440963745, 0.8666666746139526, 0.8616666793823242, 0.8730000257492065, 0.8743333220481873]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 3, 0, 2, 1, 5, 0, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 1, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 33, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7919999957084656, "mapping_values": [1, 14, 14, 9, 5, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.210487022029568, 1.6465384770913478, 1.2127083101607647, 1.030473873316415, 0.9328903084449355, 0.8586103107399865, 0.807286485240381, 0.7899135131137467, 0.7429142130238426, 0.7446214311772554, 0.7122711278995141, 0.7087284156186879, 0.6833972709053905, 0.6694074846797253, 0.6549952629771073, 0.6522457994222484, 0.6231723737408063, 0.624537784457128, 0.6340194933166625, 0.6301457954986677, 0.6060622922732704, 0.6063695387943562, 0.5890341462035299, 0.5895117226766163, 0.5730296042790235], "accuracy": [0.25716549158096313, 0.4788006842136383, 0.5753533244132996, 0.6258090138435364, 0.6664905548095703, 0.6903975605964661, 0.7033417224884033, 0.7104741930961609, 0.7230220437049866, 0.7253995537757874, 0.7413815855979919, 0.7276449799537659, 0.7454761862754822, 0.7516840696334839, 0.7563069462776184, 0.7565711140632629, 0.7691190242767334, 0.7643640041351318, 0.7621186375617981, 0.7621186375617981, 0.7766477465629578, 0.7683265209197998, 0.7808743715286255, 0.7803460359573364, 0.7902522683143616], "val_loss": [1.6587866374424525, 0.970266444342477, 0.804539612361363, 0.7909519672393799, 0.6926078966685704, 0.6616571460451398, 0.6231445244380406, 0.5656544140407017, 0.5506639991487775, 0.5395992824009487, 0.5293718917029244, 0.5216592039380755, 0.5040125335965838, 0.5259320565632412, 0.48879001821790424, 0.47965870584760395, 0.4735297475542341, 0.4772756951195853, 0.46956428459712435, 0.4637126922607422, 0.48454909665243967, 0.45596749441964285, 0.45125411237989155, 0.45599164281572613, 0.45021510124206543], "val_accuracy": [0.46933332085609436, 0.6043333411216736, 0.6700000166893005, 0.6456666588783264, 0.7023333311080933, 0.7056666612625122, 0.7160000205039978, 0.749666690826416, 0.7549999952316284, 0.7689999938011169, 0.7639999985694885, 0.7749999761581421, 0.7796666622161865, 0.7639999985694885, 0.7823333144187927, 0.7823333144187927, 0.7900000214576721, 0.7876666784286499, 0.7903333306312561, 0.8046666383743286, 0.7706666588783264, 0.79666668176651, 0.79666668176651, 0.7940000295639038, 0.7976666688919067]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.6868571639060974, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0264445914253506, 1.3203324146746895, 1.0065459976925621, 0.8359351003914777, 0.7291106857155701, 0.6720319041533792, 0.6493653546723046, 0.6118808193386915, 0.5929052399260067, 0.589999599274769, 0.5652005265118376, 0.5399896657194491, 0.5594871576672232, 0.5269022755666322, 0.5449822699278888, 0.5293895382891242, 0.5351196919544388, 0.5626475166225824, 0.5716814165653223, 0.580325248313539], "accuracy": [0.31964072585105896, 0.594241201877594, 0.6392814517021179, 0.6909258961677551, 0.7185312509536743, 0.7464007139205933, 0.7497028112411499, 0.7629110813140869, 0.7718927264213562, 0.7827235460281372, 0.7903843522071838, 0.7918372750282288, 0.7967243194580078, 0.7998943328857422, 0.8058380484580994, 0.8047813773155212, 0.8004226684570312, 0.7955356240272522, 0.7766477465629578, 0.7810064554214478], "val_loss": [0.8488187789916992, 0.8101707015718732, 0.6422328948974609, 0.5302556753158569, 0.5171837125505719, 0.4726508004324777, 0.4590527500425066, 0.4494058745247977, 0.43687789780753, 0.4313517042568752, 0.43222821610314505, 0.4108636634690421, 0.4150995526994978, 0.4249440687043326, 0.42709946632385254, 0.431736205305372, 0.4527579035077776, 0.45799522740500315, 0.500846437045506, 0.48084752900259836], "val_accuracy": [0.6626666784286499, 0.6949999928474426, 0.7136666774749756, 0.7540000081062317, 0.7739999890327454, 0.7829999923706055, 0.793666660785675, 0.7953333258628845, 0.7983333468437195, 0.8066666722297668, 0.8180000185966492, 0.8213333487510681, 0.8226666450500488, 0.8223333358764648, 0.8273333311080933, 0.8223333358764648, 0.8146666884422302, 0.8190000057220459, 0.8209999799728394, 0.7903333306312561]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 1, 6, 0, 9, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [47, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.3488571345806122, "mapping_values": [1, 14, 14, 8, 6, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), alpha))), tf.math.add(alpha, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.190676282488549, 1.6776013548788913, NaN, NaN, NaN, NaN], "accuracy": [0.3127724230289459, 0.4367983043193817, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5587738922664098, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.3889999985694885, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [7, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.18628571927547455, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.479680519534801, 2.914341626874586, 3.2349166289107707, 3.5699062950465312, 3.8649769223613384, 4.194185618726947, 4.56717776968778, 4.948607309036849], "accuracy": [0.15281997621059418, 0.13432836532592773, 0.13921542465686798, 0.14080041646957397, 0.1492537260055542, 0.14529123902320862, 0.14595165848731995, 0.12772421538829803], "val_loss": [2.2057482174464633, 2.6140546798706055, 2.8476463045392717, 3.0422140530177524, 3.389641966138567, 3.782635143824986, 4.069191660199847, 4.381585257393973], "val_accuracy": [0.1066666692495346, 0.16766667366027832, 0.2706666588783264, 0.24766667187213898, 0.09833333641290665, 0.15933333337306976, 0.1066666692495346, 0.1446666717529297]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [30, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [9, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.321671489333401, 2.3198393931745964, 2.3217784831898953, 2.323252539829319, 2.327577736525409, 2.329745284003541, 2.328613740168763], "accuracy": [0.09734513610601425, 0.09734513610601425, 0.09787346422672272, 0.1006472036242485, 0.09945846349000931, 0.09708096832036972, 0.09866596013307571], "val_loss": [1.9833228247506278, 1.997335774557931, 2.0047575405665805, 1.9959186145237513, 1.9838160106113978, 1.9793554033551897, 1.9929080690656389], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 8, 2, 1, 2, 2, 2, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 0, 1, 6, 5], [0, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 7, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 3, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [56, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(grad, grad), tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [13, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302424979578345, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [163851968.00076953, 2676554783.311055, 11890087934.64747, 32034488889.68538, 67802642733.61405, 123024623626.00871], "accuracy": [0.10302469879388809, 0.0948355570435524, 0.09866596013307571, 0.09972262382507324, 0.10540219396352768, 0.10249637067317963], "val_loss": [462252809.14285713, 3695568530.285714, 12469804763.428572, 29554800932.57143, 57720169618.28571, 99736420352.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [7, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [50, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026957283276985, 2.302818522020621, 2.302772418839537, 2.3036412642915662, 2.3043627059061325, 2.3081301481118213], "accuracy": [0.09879804402589798, 0.10038304328918457, 0.09919429570436478, 0.10038304328918457, 0.10077928751707077, 0.09959053993225098], "val_loss": [1.973752430507115, 1.9739937782287598, 1.9742889404296875, 1.9749823297773088, 1.9762077331542969, 1.980320998600551], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 3, 6, 3, 2, 4, 2, 2, 2, 2, 0, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 2, 4, 4, 7, 1, 1, 1, 4, 2, 7], [0, 1, 2, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 1, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 63, 63, 35, 28, 8, 2, 2, 1, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, grad), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(grad, alpha))))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad), grad))))), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [14065609700.282885, 2.747088059697609e+17, 8.067610161639479e+24, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09496764093637466, 0.10170386731624603, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777], "val_loss": [816779324854.8572, 1.450194044483063e+19, 2.140752028451623e+26, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 3, 0, 2, 4, 5, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 3, 0, 0, 0, 0, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [78, 33, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 5, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 3, 2, 0, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 0, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [82, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [47, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0965714305639267, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(grad, tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.7337291522902237e+28, 2.2502962466353487e+30, 1.7551448510044908e+31, 7.100254081870547e+31, 1.9183281808198323e+32, 4.413563891902082e+32, 8.743404735159389e+32, 1.49965781254582e+33], "accuracy": [0.08558975160121918, 0.08677849918603897, 0.08374059200286865, 0.08241976052522659, 0.08255184441804886, 0.080042265355587, 0.08281600475311279, 0.07555144280195236], "val_loss": [3.401035927885107e+29, 6.35026350645533e+30, 3.368144635617337e+31, 1.0887287775801496e+32, 2.6935194430881465e+32, 5.6343221618290556e+32, 1.0500361713602064e+33, 1.7993341750952155e+33], "val_accuracy": [0.11033333092927933, 0.11033333092927933, 0.1106666699051857, 0.1106666699051857, 0.11033333092927933, 0.11033333092927933, 0.109333336353302, 0.10899999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303084733007197, 2.303478391997771, 2.3017634844751624, 2.301755869597996, 2.3035519706291248, 2.3010528085096684], "accuracy": [0.0820235088467598, 0.08942015469074249, 0.09153348207473755, 0.09259014576673508, 0.09259014576673508, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [74, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [35, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3030835770660025, 2.303493953825004, 2.3021153441005775, 2.3040248535848047, 2.308901461911255, 2.3098622966263003], "accuracy": [0.0820235088467598, 0.08915598690509796, 0.08994849026203156, 0.08677849918603897, 0.08057060092687607, 0.07449477910995483], "val_loss": [1.9709974697657995, 1.9710965156555176, 1.972062655857631, 1.9741483415876115, 1.9788484573364258, 1.9799086025782995], "val_accuracy": [0.038333334028720856, 0.03733333200216293, 0.03466666489839554, 0.026000000536441803, 0.014999999664723873, 0.013000000268220901]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 2, 1, 2, 4, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [4, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.03514285758137703, "mapping_values": [1, 4, 4, 2, 2, 2, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031378043026987, 2.3038823959172725, 2.3028798917375615, 2.3039519105368855, 2.3071704185114497, 2.3064798489695195], "accuracy": [0.0820235088467598, 0.08849557489156723, 0.08809932321310043, 0.08730682730674744, 0.08519349992275238, 0.08070268481969833], "val_loss": [1.971189294542585, 1.9717199461800712, 1.972592762538365, 1.9738099915640694, 1.9753742218017578, 1.9772882461547852], "val_accuracy": [0.03566666692495346, 0.03333333507180214, 0.028999999165534973, 0.02566666714847088, 0.02133333310484886, 0.01600000075995922]}}]