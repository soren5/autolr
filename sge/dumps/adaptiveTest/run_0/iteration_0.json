[{"genotype": [[0], [1], [1], [], [1], [], [0], [1], [], [5], [], [1], [], [], [], [], [0, 1], [0], [2], []], "fitness": -0.36000001430511475, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3491211562911833, 2.2403026593595903, 3.3460766606878187, 2.2249862300469467, 2.293809158801088, 2.304163874762327], "accuracy": [0.20499274134635925, 0.18597279489040375, 0.1258750557899475, 0.17276449501514435, 0.1574428677558899, 0.10236428678035736], "val_loss": [1.9541894367762975, 5.798503058297293, 1.9752002443586076, 1.9752912521362305, 1.9748708861214774, 1.9738120351518904], "val_accuracy": [0.2433333396911621, 0.18933333456516266, 0.09933333098888397, 0.13066667318344116, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0]}, {"genotype": [[0], [0], [1], [], [3], [], [1], [1], [], [5], [], [0, 1, 0, 0, 1], [0, 0, 1], [1, 7], [5], [], [0, 1], [0], [1], []], "fitness": -0.25200000405311584, "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.340699024802548, 2.205085875477537, 2.2513803785125326, 2.580989925695401, 2.3108646400128183, 2.297042075495883, 2.1709616419157696, 2.1442098994186414, 2.3250760817020764, 2.3042854118687273, 2.303506175556266], "accuracy": [0.18821820616722107, 0.1846519559621811, 0.22282393276691437, 0.14819706976413727, 0.10210011899471283, 0.11372341960668564, 0.23920221626758575, 0.2351076453924179, 0.09760929644107819, 0.09985470771789551, 0.09232597798109055], "val_loss": [1.9507761001586914, 1.8769999231610979, 3.1411262239728654, 1.9894099235534668, 1.9755690438406808, 1.9284492901393346, 1.9767780985151018, 2.042557920728411, 1.9742143494742257, 1.9737648282732283, 1.9737963676452637], "val_accuracy": [0.1743333339691162, 0.19233334064483643, 0.20000000298023224, 0.09833333641290665, 0.10066666454076767, 0.25999999046325684, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10499999672174454, 0.09600000083446503]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0]}, {"genotype": [[0], [1], [1], [], [1], [], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [3, 4, 3, 2, 1, 7, 6, 7, 5, 8, 3, 3, 1, 4, 8, 6, 3, 2, 1, 4, 8, 4, 1, 1, 6, 4, 3, 3, 2, 4, 9, 0, 1, 9, 4, 9, 4, 6, 0, 4, 1, 4, 5, 1, 1, 2, 9, 9, 7, 4, 9, 7, 5], [3, 3, 0, 0, 3, 5, 1, 3, 3, 1, 4, 1, 4, 4, 3, 4, 2, 1, 2, 0, 2, 2, 1, 5, 4, 0, 3, 5, 5, 3, 2, 1, 4, 3], [15, 43, 28, 28, 57, 40, 36, 28, 81, 45], [0], [1], [], [6], [], [0, 0, 0, 0, 1, 1, 1], [8, 1, 5, 1], [2, 3, 0], [7]], "fitness": -0.10000000149011612, "tree_depth": 73, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), grad), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.pow(grad, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))), alpha)), tf.math.add(beta, beta))))))), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, beta))))))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, alpha), grad)), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.subtract(beta, sigma)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 87, 87, 53, 34, 10, 1, 1, 0, 1, 0, 7, 4, 3, 1]}, {"genotype": [[0], [0], [1], [], [1], [], [1], [1], [], [3], [], [1], [], [], [], [], [0, 1, 0], [2, 9], [2], [44]], "fitness": -0.10000000149011612, "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3038890694016243, 3.041513255999435, 27.800240626125415, 108.20746278693537, 246.2059356040486, 441.85146423589754], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9951964787074499, 7.89409909929548, 56.46011134556362, 154.38849312918526, 301.6872994559152, 498.32277134486606], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1]}, {"genotype": [[0], [0], [1], [], [1], [], [1, 0, 0], [0, 1, 1], [4], [3, 4], [], [1], [], [], [], [], [0, 0, 1, 1], [0, 1], [0, 0], [54, 47]], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [45320547.000035346, 908495155.0579845, 4228995053.267468, 11730024902.990887, 24755856760.679436, 45523973386.85405], "accuracy": [0.10236428678035736, 0.09747721254825592, 0.09959053993225098, 0.09959053993225098, 0.09430722147226334, 0.09879804402589798], "val_loss": [177601764.57142857, 1419541906.2857144, 4789517897.142858, 11351269668.571428, 22168432640.0, 38304985673.14286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2]}, {"genotype": [[0], [1], [1], [], [1], [], [0], [1], [], [4], [], [1], [], [], [], [], [1], [], [0], [87]], "fitness": -0.10000000149011612, "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022548650407266, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1, 0, 0, 1, 1], [0, 0, 1, 1, 1], [2, 3], [1, 0, 0], [44, 27], [1, 1, 1], [0, 1, 1], [3], [1, 1], [], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4356215382453676, 8.608484756677315, 49.53892914431049, 213.2690722206407, 723.7760315626651, 2110.919534752004], "accuracy": [0.08796724677085876, 0.09959053993225098, 0.09774138033390045, 0.1002509593963623, 0.10289261490106583, 0.10936468094587326], "val_loss": [2.5516964367457797, 14.137516566685267, 69.69751630510602, 262.20767647879467, 823.8012172154018, 2227.2594866071427], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 5, 5, 2, 3, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [1], [], [1], [0], [9], [], [25], [0, 1], [0], [5], [], [], [0, 1], [5], [0], [73]], "fitness": -0.10000000149011612, "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3032553665169697, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1]}, {"genotype": [[0], [0], [1], [], [2], [], [1], [1], [], [4], [], [0], [1], [], [0], [46], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 3, 1, 6, 9, 5, 5, 8, 1, 2, 5, 5, 5], [2, 1, 1, 2, 2, 2, 2], [82]], "fitness": -0.10000000149011612, "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(beta, tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(alpha))), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.square(tf.math.square(alpha)), beta), tf.math.square(beta))))), beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 21, 14, 7, 1]}, {"genotype": [[0], [0], [1], [], [1], [], [0, 1, 0], [0, 1, 1], [2], [0, 2], [82], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [33242037534.0042, 4.73690406995362e+17, 1.960612461910746e+25, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10368511080741882, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [2], [], [0], [1], [], [0], [0], [1], [], [], [], [], [1], [], [0], [87]], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026371976214786, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 5, 8, 3, 6, 1, 0, 7], [2, 3, 2, 2, 3, 3], [], [1, 0], [0, 1], [8], [1], [], [1], [], [], [], [], [1], [], [0], [66]], "fitness": -0.10000000149011612, "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), grad)))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028679323895513, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 14, 14, 8, 6, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1], [0], [9], [], [5], [0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1], [6, 4, 1, 9, 5], [0, 3, 1], [59, 39], [1], [], [], [], [], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 5, 1, 6, 2, 2, 6, 9, 0, 3, 2, 5], [3, 2, 1, 3, 1, 1, 3, 0], [33, 92]], "fitness": -0.10000000149011612, "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad))), tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(sigma), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), sigma), tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(alpha, alpha)))), tf.math.add(tf.math.square(sigma), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 20, 12, 8, 2]}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 2, 4, 8, 5], [2, 0, 0, 0], [80, 28, 67], [0], [1], [], [2], [], [0, 0, 0, 1, 0], [0, 1, 0, 0], [3, 3, 9], [1], [85], [0, 1, 1], [1], [1, 3], []], "fitness": -0.10000000149011612, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 5, 4, 3, 1, 1, 3, 1, 2, 0]}, {"genotype": [[0], [1, 0], [0, 1], [0], [2], [], [1, 1, 1, 1, 1], [0, 0, 1, 0, 1], [5, 3, 5], [5, 0], [3], [0], [1], [], [0], [34], [1], [], [3], []], "fitness": -0.10000000149011612, "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(grad, tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [90480.46089731845, 1782218.585886937, 8135979.359529785, 22562483.420948356, 47831609.17923656, 89405736.1912561], "accuracy": [0.10170386731624603, 0.09813763201236725, 0.09774138033390045, 0.09826971590518951, 0.10210011899471283, 0.09589222073554993], "val_loss": [345962.77678571426, 2746241.6428571427, 9245438.57142857, 21888202.85714286, 42719186.28571428, 73782850.28571428], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]}, {"genotype": [[0], [0, 0, 1, 0], [0, 0, 1, 1], [8, 6], [3, 3], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 2, 6, 0, 6, 8, 9], [4, 3, 3], [23], [0], [1], [], [7], [], [0, 1, 1], [7], [1, 0], [5]], "fitness": -0.10000000149011612, "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(beta, grad)))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}, "mapping_values": [1, 4, 4, 2, 2, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1]}, {"genotype": [[0], [0, 0, 1, 1], [0, 1, 0, 1], [3, 0], [3, 2], [], [1], [0], [9], [], [96], [1], [], [], [], [], [1], [], [1], []], "fitness": -0.07314285635948181, "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3018387754312077, 2.3024827319837877, 2.30090218011682, 2.3012697875554835, 2.299786064240911, 2.3001324494343867, 2.3003047249808746, 2.2991599829410125, 2.299170524594397, 2.2995975398903967, 2.2999990978387084, 2.3001305506198224, 2.3001717016476806, 2.2997919404983773, 2.300941877770717, 2.300843921776508], "accuracy": [0.08875974267721176, 0.08981640636920929, 0.09021265059709549, 0.09615638852119446, 0.09840179979801178, 0.09417514503002167, 0.0944393053650856, 0.09602430462837219, 0.10408136248588562, 0.10302469879388809, 0.10593052208423615, 0.09919429570436478, 0.09932637959718704, 0.09576013684272766, 0.09232597798109055, 0.09694888442754745], "val_loss": [1.9703655924115862, 1.969895703451974, 1.9697021756853377, 1.9696734973362513, 1.9696717943464006, 1.9697487013680595, 1.9696295601981026, 1.9695372581481934, 1.9694928441728865, 1.9694558552333288, 1.9695010866437639, 1.969705036708287, 1.969961370740618, 1.9702043533325195, 1.9703681809561593, 1.9705442019871302], "val_accuracy": [0.04533333331346512, 0.05400000140070915, 0.05833333358168602, 0.05999999865889549, 0.06366666406393051, 0.06700000166893005, 0.07066666334867477, 0.07566666603088379, 0.07966666668653488, 0.0806666687130928, 0.08433333039283752, 0.08266666531562805, 0.07699999958276749, 0.07666666805744171, 0.07733333110809326, 0.07599999755620956]}, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [2, 5, 6, 2, 2, 5, 9, 2, 6, 2, 3, 0, 9, 2, 4], [1, 3, 2, 2, 0, 0, 1, 0, 0], [42, 90, 47, 75, 97, 79], [1], [1], [], [1], [], [1], [], [], [], [], [1], [], [3], []], "fitness": -0.035999998450279236, "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302767916976532, 2.3025679837096997, 2.303856210056124, 2.302479195604235, 2.3022171212477125, 2.301143174976988], "accuracy": [0.08400475233793259, 0.09166556596755981, 0.09311848133802414, 0.09259014576673508, 0.08889182657003403, 0.0952318087220192], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}, "mapping_values": [1, 24, 24, 15, 9, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [1], [], [0], [1], [], [2], [], [0, 1], [0], [8], [], [], [0, 1, 0, 1], [3, 5], [1, 0], [2]], "fitness": -0.035999998450279236, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032613369641033, 2.3023749614955413, 2.3000715207178137, 2.303247289131063, 2.302734233762736, 2.300110399919872], "accuracy": [0.09325055778026581, 0.09126931428909302, 0.1018359512090683, 0.0878351628780365, 0.08968432247638702, 0.08611807972192764], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1]}, {"genotype": [[0], [1], [1], [], [0], [17], [1], [1], [], [1], [], [1], [], [], [], [], [0, 1, 0, 0, 0, 1, 1, 1], [4, 1, 8, 3], [3, 3, 2, 1], []], "fitness": -0.035999998450279236, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.subtract(tf.math.sqrt(tf.math.multiply(sigma, beta)), alpha))", "other_info": {"loss": [2.30303755689527, 2.3017123301330575, 2.303150323403746, 2.3037266205047118, 2.302980471375344, 2.302828722846601], "accuracy": [0.08915598690509796, 0.09219389408826828, 0.09325055778026581, 0.08598599582910538, 0.09021265059709549, 0.09008057415485382], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 0]}]