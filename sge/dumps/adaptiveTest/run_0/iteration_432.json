[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.847428560256958, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.084761205051459, 1.6240550223090913, 1.0731414686639973, 0.797898272206172, 0.6988747754132885, 0.6292559393818006, 0.599456684905241, 0.5780336278194387, 0.5423014818315162, 0.5148800508362852, 0.4904776469607159, 0.4658698060013095, 0.4596116243730116, 0.43918504225752686, 0.4289418744522866, 0.4178049964297638, 0.4113114154877333, 0.3908084798262277, 0.38056513317556206, 0.3790825162116862, 0.3674099642122584, 0.3582987979796458, 0.36878145368910736, 0.3544826821297734, 0.34147783987919855, 0.33550114635431755, 0.32025399959995887, 0.31250020590802824, 0.3048529836440587, 0.2976328644848865, 0.3041332915096613, 0.2879130011339544, 0.2866391872630663, 0.2774321121105728, 0.2745614925950762, 0.27265532235852985], "accuracy": [0.311319500207901, 0.46704530715942383, 0.6263373494148254, 0.703209638595581, 0.7429665923118591, 0.7703077793121338, 0.7849689722061157, 0.7868181467056274, 0.8047813773155212, 0.8132346868515015, 0.8178576231002808, 0.8280280232429504, 0.835160493850708, 0.8387266993522644, 0.8448025584220886, 0.8491612672805786, 0.846387505531311, 0.8582749962806702, 0.8599920868873596, 0.860652506351471, 0.8660678863525391, 0.8646149635314941, 0.8676528930664062, 0.8742570281028748, 0.8757099509239197, 0.8805969953536987, 0.8798044919967651, 0.8868049383163452, 0.8907673954963684, 0.8906353116035461, 0.8838990926742554, 0.8951261639595032, 0.8938053250312805, 0.897899866104126, 0.8960506916046143, 0.8989565372467041], "val_loss": [1.8104588644845145, 0.8291726282664708, 0.6088830573218209, 0.5767411845070975, 0.48902760233197895, 0.45446109771728516, 0.48807166303907124, 0.4343881096158709, 0.404855523790632, 0.3931742140225002, 0.3769364612443106, 0.3799165402139936, 0.3671989526067461, 0.35355225631168913, 0.33704908405031475, 0.3364334617342268, 0.3360470873968942, 0.326626147542681, 0.3378988078662327, 0.3295688714299883, 0.32668005568640573, 0.34348240068980623, 0.3094020485877991, 0.3132387399673462, 0.32075432368687223, 0.30448377983910696, 0.3052534546170916, 0.30681211607796804, 0.31397844212395803, 0.3197064144270761, 0.295761729989733, 0.2992373194013323, 0.3112350787435259, 0.3115655779838562, 0.30244217600141254, 0.29930533681597027], "val_accuracy": [0.3009999990463257, 0.684333324432373, 0.7383333444595337, 0.7506666779518127, 0.7776666879653931, 0.7856666445732117, 0.7733333110809326, 0.8033333420753479, 0.8163333535194397, 0.8240000009536743, 0.8346666693687439, 0.8276666402816772, 0.8373333215713501, 0.843666672706604, 0.8583333492279053, 0.8496666550636292, 0.8506666421890259, 0.8543333411216736, 0.8473333120346069, 0.8586666584014893, 0.8560000061988831, 0.8486666679382324, 0.8629999756813049, 0.8633333444595337, 0.8636666536331177, 0.8713333606719971, 0.8666666746139526, 0.8696666955947876, 0.8659999966621399, 0.8666666746139526, 0.875, 0.8726666569709778, 0.8709999918937683, 0.8709999918937683, 0.8733333349227905, 0.8690000176429749]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2], [7, 1], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.084728976786176, 1.6280187863589373, 1.064663670838013, 0.7862877205157907, 0.6906594140827853, 0.6294351571177164, 0.5892104737321856, 0.5842293770857113, 0.538390924260286, 0.5121822801988516, 0.47972961767805317, 0.4696440054653595, 0.4585986860384794, 0.43795104189209416, 0.4285597146903645, 0.4166127148006476, 0.41196159684442335, 0.381999760271772, 0.38507706445709844, 0.3930600331821903, 0.36879466891509194, 0.35596111202284075, 0.36515919673853797, 0.3539996453169834, 0.33787543312937374, 0.3333904785353195, 0.32231569426359835, 0.3036172156714335, 0.30793748701709905, 0.2925045245540235, 0.30176542586559757, 0.2886576988654224, 0.28851139314768887, 0.2767431519216062, 0.26794748454242884, 0.26985343978972154, 0.2658131674075753, 0.2676796147796881, 0.24416719738794057, 0.25193536229822316, 0.2494569290421973, 0.236877703466719, 0.23612080210542571], "accuracy": [0.31145158410072327, 0.4651961326599121, 0.6255448460578918, 0.7083608508110046, 0.7485140562057495, 0.7736098170280457, 0.7907806038856506, 0.7887993454933167, 0.8063663840293884, 0.8145555257797241, 0.826310932636261, 0.830669641494751, 0.8342359066009521, 0.8428213000297546, 0.8436138033866882, 0.8511425256729126, 0.8488970994949341, 0.8598600029945374, 0.8552370667457581, 0.8564258217811584, 0.8661999702453613, 0.8679170608520508, 0.8659358024597168, 0.8698983192443848, 0.8805969953536987, 0.8780874609947205, 0.8819178342819214, 0.8922203183174133, 0.8886540532112122, 0.891559898853302, 0.8886540532112122, 0.8905032277107239, 0.8922203183174133, 0.8961827754974365, 0.8951261639595032, 0.8967111110687256, 0.8996169567108154, 0.8973715305328369, 0.906749427318573, 0.9046360850334167, 0.9070135951042175, 0.9109761118888855, 0.9089948534965515], "val_loss": [1.8105499403817313, 0.8485451425824847, 0.6141793046678815, 0.5604538066046578, 0.49287968022482737, 0.45111719199589323, 0.49095397336142405, 0.42710106713431223, 0.40749025344848633, 0.38624511446271625, 0.37802954230989727, 0.37011668511799406, 0.36783210720334736, 0.36070489031927927, 0.342167283807482, 0.341362544468471, 0.33419945410319735, 0.32457888977868216, 0.3355547785758972, 0.3231778655733381, 0.32735891001565115, 0.3415311745234898, 0.31741203580583843, 0.3060597266469683, 0.31879075935908724, 0.322023800441197, 0.2995804803712027, 0.30839056628090994, 0.303953264440809, 0.30364853143692017, 0.2962095056261335, 0.30275642020361765, 0.3122606022017343, 0.30987092426845003, 0.30525889566966463, 0.3066264050347464, 0.28957334586552214, 0.30028471776417326, 0.31173427615846905, 0.30868520055498394, 0.31127331938062397, 0.30070230790546965, 0.30421589953558786], "val_accuracy": [0.29899999499320984, 0.6726666688919067, 0.7243333458900452, 0.762333333492279, 0.7726666927337646, 0.7973333597183228, 0.7753333449363708, 0.8053333163261414, 0.8149999976158142, 0.8286666870117188, 0.8309999704360962, 0.8339999914169312, 0.8349999785423279, 0.8399999737739563, 0.8513333201408386, 0.8460000157356262, 0.8486666679382324, 0.8556666374206543, 0.8453333377838135, 0.8579999804496765, 0.8546666502952576, 0.8496666550636292, 0.8560000061988831, 0.8610000014305115, 0.8643333315849304, 0.8653333187103271, 0.8713333606719971, 0.8683333396911621, 0.8669999837875366, 0.871999979019165, 0.8730000257492065, 0.8736666440963745, 0.8669999837875366, 0.8693333268165588, 0.8696666955947876, 0.8659999966621399, 0.8756666779518127, 0.8793333172798157, 0.8723333477973938, 0.871666669845581, 0.874666690826416, 0.8769999742507935, 0.875333309173584]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [86, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1], [8, 1], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7345714569091797, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30064044315518, 2.2920483454831633, 2.2698567644826424, 2.243598683950152, 2.2032676710507433, 2.146991978483965, 2.0616533288299417, 1.9400946726463317, 1.7686943268936544, 1.5860832985980147, 1.4631559617483794, 1.3991038231660093, 1.382361920439509, 1.3908276667196233, 1.313617964792938, 1.203970833256764, 1.079661182857476, 0.9494946437221492, 0.9050740381399434, 0.8982286292170458, 0.9274693182698488, 0.9168455246700634, 0.8901612521823938, 0.8577318159801108, 0.8279437775609358, 0.8270673413853588, 0.820663746258901, 0.8026050767957132, 0.8335494135569557], "accuracy": [0.09298639744520187, 0.11808215826749802, 0.17461365461349487, 0.25003302097320557, 0.30999869108200073, 0.3533218801021576, 0.3899088501930237, 0.40668338537216187, 0.43745872378349304, 0.47232863306999207, 0.4975564777851105, 0.5202747583389282, 0.531369686126709, 0.5564654469490051, 0.5773345828056335, 0.6000528335571289, 0.631488561630249, 0.6560559868812561, 0.6621318459510803, 0.6659622192382812, 0.6613393425941467, 0.677189290523529, 0.6884163022041321, 0.6889446377754211, 0.6926429867744446, 0.6923788189888, 0.693831741809845, 0.6968696117401123, 0.6877558827400208], "val_loss": [1.9654689516339983, 1.950575283595494, 1.9271840367998396, 1.895615713936942, 1.8519456727164132, 1.7861248425074987, 1.6845241274152483, 1.5340869426727295, 1.3396108831678117, 1.1441771643502372, 0.9930126667022705, 0.8857075146266392, 0.8318985019411359, 0.79232200554439, 0.7495266028812954, 0.7437948329108102, 0.6925852809633527, 0.662557704108102, 0.6773364884512765, 0.6932907615389142, 0.7038437468664986, 0.6901203393936157, 0.653280428477696, 0.6181700570242745, 0.6031095130102975, 0.5990906783512661, 0.5885281733104161, 0.5843507051467896, 0.5934882164001465], "val_accuracy": [0.07266666740179062, 0.21833333373069763, 0.33766666054725647, 0.3799999952316284, 0.4073333442211151, 0.43566668033599854, 0.468666672706604, 0.5046666860580444, 0.5443333387374878, 0.5823333263397217, 0.640666663646698, 0.6713333129882812, 0.6706666946411133, 0.6830000281333923, 0.703000009059906, 0.7093333601951599, 0.7089999914169312, 0.7229999899864197, 0.7080000042915344, 0.7076666951179504, 0.7366666793823242, 0.734666645526886, 0.7353333234786987, 0.7426666617393494, 0.734666645526886, 0.7333333492279053, 0.737666666507721, 0.7409999966621399, 0.7356666922569275]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 8, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2], [7, 0], [39], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.4497142732143402, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.448324784847094, 2.2167299187430585, 2.290516983610906, 2.2943427066415008, 2.300767634633258, 2.554125828844382, 2.3051098498371, 2.3012907979605206], "accuracy": [0.1880861222743988, 0.21159687638282776, 0.14159291982650757, 0.136045441031456, 0.10434553027153015, 0.15942411124706268, 0.09972262382507324, 0.11068551242351532], "val_loss": [1.9548702239990234, 1.809964861188616, 1.5770398548671178, 1.9743296759469169, 1.916548728942871, 1.9756187030247279, 1.9739648955208915, 1.969778605869838], "val_accuracy": [0.19466666877269745, 0.3526666760444641, 0.44333332777023315, 0.10000000149011612, 0.18700000643730164, 0.1003333330154419, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2], [7, 1], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.44342857599258423, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1958344597716324, 2.148159216770076, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2934883236885071, 0.2533350884914398, 0.3199048936367035, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9743272917611259, 1.7963499341692244, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.37533333897590637, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1], [8], [2, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.31771427392959595, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4474767573269336, 2.241121042736801, 2.3045821004398213, 2.2683989701254053, 2.287922471600312, 2.1920787139953544, 2.214532740033298, 2.3071389247744136, 2.3045297507297535, 2.3036694911177826], "accuracy": [0.18795403838157654, 0.2238806039094925, 0.10196803510189056, 0.15202747285366058, 0.14093250036239624, 0.20274733006954193, 0.20882314443588257, 0.09734513610601425, 0.10394927859306335, 0.09972262382507324], "val_loss": [1.9463583401271276, 1.9812216077532088, 1.972269058227539, 1.9740626471383231, 1.6230616569519043, 1.9507480348859514, 1.9781366756984167, 1.974466051374163, 1.9738264083862305, 1.9737014089311873], "val_accuracy": [0.20533333718776703, 0.10133333504199982, 0.10133333504199982, 0.10166666656732559, 0.2563333213329315, 0.1889999955892563, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [4, 5, 9, 0, 1, 9], [3, 0, 3, 3, 0], [79, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1], [8, 1], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.24057142436504364, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4504555228710365, 2.250675734905535, 2.2073959288359664, 3.286519077302537, 2.3075285737288707, 2.304437433078289], "accuracy": [0.1880861222743988, 0.17197199165821075, 0.18861444294452667, 0.11398758739233017, 0.10130762308835983, 0.09391097724437714], "val_loss": [1.9687567438398088, 1.9728196689060755, 1.9749736104692732, 1.9795686176845007, 1.9750097819737025, 1.9739818572998047], "val_accuracy": [0.1809999942779541, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027288275718565, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0], [8], [7, 1], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [487579604.1700283, 1141804359.6502442, 4646959056004.143, 3.22201838644086e+17, 1.3503175814811534e+22, 6.641327258824413e+26], "accuracy": [0.09496764093637466, 0.09972262382507324, 0.09694888442754745, 0.09602430462837219, 0.09945846349000931, 0.09615638852119446], "val_loss": [798454107.4285715, 5240880566.857142, 139499425684333.72, 7.340573508863113e+18, 3.663074145409601e+23, 1.90228424265494e+28], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 6, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 79, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1], [8, 1], [7], [64], [0, 0, 0, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [6.728716636272974e+28, 1050696.0426397035, 23553925755.53031, 478374604364987.6, NaN, NaN], "accuracy": [0.10011887550354004, 0.10130762308835983, 0.09589222073554993, 0.09932637959718704, 0.09959053993225098, 0.09998679161071777], "val_loss": [612.894792829241, 13272746.57142857, 286850940928.0, 6199418225463881.0, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1203139318.969383, 183699680070.8387, 3067208524281.305, 21925990462017.258, 98815215732220.14, 322344240166616.3], "accuracy": [0.09721305221319199, 0.09774138033390045, 0.09906221181154251, 0.09734513610601425, 0.10289261490106583, 0.09747721254825592], "val_loss": [10058426953.142857, 541923100964.5714, 5815502260516.571, 31700320742838.855, 118734888594870.86, 350230864798866.3], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [79, 84, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0, 0, 0], [1, 7, 8], [2, 7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 2, 0, 1, 9], [3, 5, 3, 3, 0], [21, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3035106974475656, 2.6098259026269557, 5.931547060366777, 24.22223292869615, 31.40600235278596, 212.24614884368086, 669.4716249807809, 1126.6918858729805], "accuracy": [0.1002509593963623, 0.09932637959718704, 0.10447761416435242, 0.09998679161071777, 0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9840476853506905, 2.797234535217285, 14.749844687325615, 27.706304822649276, 20.223502022879465, 411.5625, 803.6817626953125, 1196.4529854910713], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 6, 9, 0, 1, 9], [3, 5, 3, 3, 0], [30, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [8, 6], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 4, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2], [4, 1], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [2, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [8], [7, 1], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303392761875657, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [79, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1], [8], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027288275718565, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [79, 84, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1], [8], [6, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3667584040287446, 3.058074106267572, 4.867101082633657, 8.017444281325506, 12.479938784956916, 18.016073910661927], "accuracy": [0.08677849918603897, 0.09787346422672272, 0.10051512718200684, 0.09734513610601425, 0.10196803510189056, 0.09774138033390045], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [79, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1], [8], [7], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302172270559317, 2.303560999453485, 2.3014262925207087, 2.303311124123193, 2.3027154599450377, 2.303316301059383], "accuracy": [0.08928807079792023, 0.09008057415485382, 0.0882314071059227, 0.08572183549404144, 0.09074098616838455, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [79, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1], [8], [4, 7], [64], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30230269547325, 2.3040070403379582, 2.302198557947542, 2.3043943880539937, 2.304128426413384, 2.305056198949213], "accuracy": [0.08902391046285629, 0.08968432247638702, 0.08638224750757217, 0.08400475233793259, 0.08651433140039444, 0.08770307898521423], "val_loss": [1.9712992395673479, 1.9715999875749861, 1.9719033241271973, 1.9722037996564592, 1.9725072724478585, 1.9728107452392578], "val_accuracy": [0.03466666489839554, 0.03333333507180214, 0.03233333304524422, 0.03200000151991844, 0.029666665941476822, 0.028333334252238274]}}]