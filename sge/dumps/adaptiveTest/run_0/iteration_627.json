[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [0, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8539999723434448, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.059121204940414, 1.0754598483134254, 0.7716822788510985, 0.6868392501635054, 0.6397602064120472, 0.6105949911285842, 0.5803046012441196, 0.562624612961148, 0.5413021573600295, 0.5228505475236723, 0.5202745502777009, 0.4934690242406636, 0.4884185652612553, 0.4648483914312449, 0.45548005710897066, 0.44737722712768585, 0.43306772529945053, 0.42536636922873083, 0.41382600510943884, 0.40510747217310106, 0.3880261528477803, 0.3815909121778458, 0.3822644905462367, 0.39175302067752116, 0.3682247885521204, 0.36308176332319325, 0.35896781969457775, 0.34628582982858885, 0.3381242924291759, 0.3276399153925251, 0.3259523034434293, 0.3157450831868566, 0.31323659652259767, 0.3044012633840311, 0.2993469928603965, 0.2944417473008966, 0.28926625682488566, 0.2867930455490299], "accuracy": [0.313300758600235, 0.6135252714157104, 0.7107383608818054, 0.7450799345970154, 0.7629110813140869, 0.7696473598480225, 0.7821952104568481, 0.7893276810646057, 0.8050455451011658, 0.8061022162437439, 0.8094043135643005, 0.8157442808151245, 0.8186501264572144, 0.8321225643157959, 0.8379341959953308, 0.8401796221733093, 0.8405758738517761, 0.8453308939933777, 0.8486329317092896, 0.8562937378883362, 0.8625016212463379, 0.8607845902442932, 0.8597279191017151, 0.8564258217811584, 0.8661999702453613, 0.8634262084960938, 0.8672566413879395, 0.8698983192443848, 0.8770307898521423, 0.8784837126731873, 0.8776912093162537, 0.8842953443527222, 0.8838990926742554, 0.8842953443527222, 0.8901069760322571, 0.891559898853302, 0.889578640460968, 0.8907673954963684], "val_loss": [0.9639109202793666, 0.621089015688215, 0.5435895919799805, 0.5044021606445312, 0.4999561139515468, 0.4668523073196411, 0.45529208864484516, 0.4290791324206761, 0.44414290360042025, 0.42129807812826975, 0.4002235531806946, 0.39314816679273334, 0.3832810776574271, 0.3723794477326529, 0.36450809240341187, 0.3536118524415152, 0.35592013597488403, 0.3571737749235971, 0.3457088811056955, 0.339708149433136, 0.3364214471408299, 0.32832367931093487, 0.3375775218009949, 0.3265978353364127, 0.32297987597329275, 0.31860125064849854, 0.3145031247820173, 0.31417650835854666, 0.30634203978947233, 0.31584551504680086, 0.31793094532830374, 0.310252777167729, 0.30169559376580374, 0.30882440294538227, 0.2967011162212917, 0.29783293179103304, 0.29471022742135183, 0.2962688548224313], "val_accuracy": [0.6573333144187927, 0.7266666889190674, 0.7576666474342346, 0.7839999794960022, 0.7646666765213013, 0.7906666398048401, 0.7879999876022339, 0.8109999895095825, 0.7993333339691162, 0.8066666722297668, 0.8209999799728394, 0.8253333568572998, 0.8293333053588867, 0.8399999737739563, 0.8423333168029785, 0.8453333377838135, 0.8450000286102295, 0.8433333039283752, 0.8450000286102295, 0.8496666550636292, 0.8519999980926514, 0.8510000109672546, 0.8503333330154419, 0.8600000143051147, 0.8619999885559082, 0.8629999756813049, 0.8636666536331177, 0.8633333444595337, 0.8666666746139526, 0.8629999756813049, 0.8613333106040955, 0.8643333315849304, 0.8706666827201843, 0.8646666407585144, 0.8683333396911621, 0.8703333139419556, 0.8650000095367432, 0.8653333187103271]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8531428575515747, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0589911197831903, 1.0757730146125795, 0.7727437633344478, 0.686942603806652, 0.6425298519059572, 0.6106391669957235, 0.5826102892216627, 0.5655518047026419, 0.5397997907423278, 0.522222914684403, 0.5198604176860396, 0.49351502552858795, 0.4882145974661586, 0.4676261663460508, 0.4553347211456601, 0.4498639959881822, 0.4314287573378619, 0.42430185214749827, 0.4105232191155096, 0.40514150357926604, 0.38862155628808975, 0.3809166963641134, 0.3833288433584539, 0.3905727545213013, 0.37040410352310627, 0.35923311458744345, 0.3566863226608719, 0.3436298671730474, 0.3386990521223695, 0.3318649866262589, 0.32481157678135036, 0.31585474734482055, 0.31234351807833505, 0.3065917153896011, 0.2987121214341998, 0.2927230937629564, 0.2885816741998973, 0.2879586756119182], "accuracy": [0.3131686747074127, 0.6129969358444214, 0.7096816897392273, 0.7427024245262146, 0.7625148296356201, 0.7728173136711121, 0.7803460359573364, 0.7874785661697388, 0.8067626357078552, 0.8064984679222107, 0.809140145778656, 0.8171972036361694, 0.817989706993103, 0.8304054737091064, 0.837141752243042, 0.8403117060661316, 0.8416325449943542, 0.8451988101005554, 0.8515387773513794, 0.854708731174469, 0.8639545440673828, 0.8627657890319824, 0.856689989566803, 0.8573504090309143, 0.8669924736022949, 0.86553955078125, 0.8660678863525391, 0.8721436858177185, 0.8757099509239197, 0.8754457831382751, 0.8794082403182983, 0.8816536664962769, 0.8815215826034546, 0.8808611631393433, 0.8877294659614563, 0.8926165699958801, 0.8902390599250793, 0.8893144726753235], "val_loss": [0.9633927345275879, 0.6235142946243286, 0.5456479617527553, 0.501698476927621, 0.49882515839168, 0.46737045901162283, 0.45800232887268066, 0.43110558816364836, 0.43402113233293804, 0.42538810627801077, 0.3980786119188581, 0.3955213257244655, 0.3811021787779672, 0.3739515372685024, 0.36681727852140156, 0.35433393716812134, 0.3582837070737566, 0.3532021301133292, 0.34600662333624704, 0.33939043964658466, 0.3334204043660845, 0.32847629274640766, 0.3328940272331238, 0.3259467823164804, 0.3267433302743094, 0.3198735203061785, 0.3127963968685695, 0.31149586609431673, 0.3084703343255179, 0.31108451741082327, 0.3204712101391384, 0.3082205653190613, 0.30221687044416157, 0.3079465116773333, 0.2976839712687901, 0.2998491610799517, 0.2960531370980399, 0.29719326325825285], "val_accuracy": [0.6573333144187927, 0.7239999771118164, 0.7583333253860474, 0.7836666703224182, 0.7666666507720947, 0.7883333563804626, 0.7906666398048401, 0.8106666803359985, 0.8040000200271606, 0.8026666641235352, 0.8226666450500488, 0.8223333358764648, 0.8316666483879089, 0.8349999785423279, 0.8410000205039978, 0.8473333120346069, 0.843666672706604, 0.8450000286102295, 0.8489999771118164, 0.8506666421890259, 0.8543333411216736, 0.8523333072662354, 0.8503333330154419, 0.8573333621025085, 0.859666645526886, 0.862333357334137, 0.862666666507721, 0.8603333234786987, 0.8616666793823242, 0.8656666874885559, 0.8610000014305115, 0.8646666407585144, 0.8693333268165588, 0.862333357334137, 0.8690000176429749, 0.8690000176429749, 0.8653333187103271, 0.8676666617393494]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8471428751945496, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.058991095046987, 1.0757715498703566, 0.7728732226547107, 0.6871732111069127, 0.6425411891801844, 0.6078592621497568, 0.5841848869695955, 0.5619971817668088, 0.5412089314600574, 0.5238966173373666, 0.5196752847067637, 0.49463613636190423, 0.488112580192056, 0.4650070016701554, 0.45510914958762516, 0.45004874791026417, 0.4318333935381761, 0.4230307500084645, 0.4101127957655312, 0.40491815850782265, 0.3858662536587965, 0.3817353420694664, 0.38348952046774004, 0.3910063758321237, 0.3708657788491882, 0.35826017442569597, 0.3551034290225924, 0.34293624245416626, 0.3397283820727435, 0.32773495264466507, 0.3243478892218278, 0.3147771327077689, 0.31245807310798307, 0.3051712438218141, 0.29645725398598377, 0.29460578495957646, 0.2883562261890411, 0.28501416703634697], "accuracy": [0.3131686747074127, 0.6129969358444214, 0.709549605846405, 0.7429665923118591, 0.7619865536689758, 0.7750627398490906, 0.7835160493850708, 0.7931581139564514, 0.8059701323509216, 0.8030643463134766, 0.8119139075279236, 0.8158763647079468, 0.8173292875289917, 0.8330471515655518, 0.8383304476737976, 0.8354246616363525, 0.8409721255302429, 0.8453308939933777, 0.852331280708313, 0.854708731174469, 0.8627657890319824, 0.8584070801734924, 0.8582749962806702, 0.8549728989601135, 0.8632941246032715, 0.8650112152099609, 0.8684453964233398, 0.8732003569602966, 0.8761062026023865, 0.8792761564254761, 0.8786157965660095, 0.8815215826034546, 0.885219931602478, 0.8823140859603882, 0.8894465565681458, 0.8920882344245911, 0.8899748921394348, 0.8932769894599915], "val_loss": [0.9633924620492118, 0.6234797239303589, 0.5453881025314331, 0.5019251448767525, 0.4942101921354021, 0.46959190709250315, 0.4589245319366455, 0.4312004106385367, 0.43740512643541607, 0.4208471349307469, 0.40375180755342754, 0.39359200852257864, 0.3829112308365958, 0.37169421570641653, 0.3659075157982962, 0.35728849683489117, 0.3587991339819772, 0.355792624609811, 0.3451851946966989, 0.33748158386775423, 0.33615278346197947, 0.32825603655406405, 0.3373976690428598, 0.3324983886310032, 0.32438820600509644, 0.3195473551750183, 0.3141345126288278, 0.31021698883601595, 0.3106714827673776, 0.3121486987386431, 0.31932041474751066, 0.31137714215687345, 0.3040776423045567, 0.3078983170645578, 0.3017447590827942, 0.2979825053896223, 0.29549843072891235, 0.29987742219652447], "val_accuracy": [0.6573333144187927, 0.7239999771118164, 0.7566666603088379, 0.7823333144187927, 0.7696666717529297, 0.7853333353996277, 0.784333348274231, 0.8090000152587891, 0.8029999732971191, 0.8090000152587891, 0.8203333616256714, 0.8233333230018616, 0.82833331823349, 0.8393333554267883, 0.8410000205039978, 0.843999981880188, 0.840666651725769, 0.8426666855812073, 0.8473333120346069, 0.8500000238418579, 0.8483333587646484, 0.8539999723434448, 0.8489999771118164, 0.8560000061988831, 0.8613333106040955, 0.8600000143051147, 0.8600000143051147, 0.8656666874885559, 0.8619999885559082, 0.8616666793823242, 0.8643333315849304, 0.862333357334137, 0.8703333139419556, 0.8640000224113464, 0.8666666746139526, 0.8686666488647461, 0.8636666536331177, 0.8659999966621399]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [85, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 9, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7848571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 5, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.209863671946598, 1.6492866068121905, 1.216773900641206, 1.0165781220975978, 0.9261523731443561, 0.8620014490625878, 0.8144297026419574, 0.8054064743396959, 0.7596508177547658, 0.742696966099591, 0.7176408718259281, 0.6920513367341132, 0.7012155706368228, 0.6618927232089563, 0.6645786799869329, 0.6417002347655316, 0.6482953336244844, 0.628820407620479, 0.6220124922392627, 0.6058470846922989, 0.6025348285311768], "accuracy": [0.26258090138435364, 0.47708359360694885, 0.5684850215911865, 0.6395456194877625, 0.659490168094635, 0.6831330060958862, 0.6992471218109131, 0.7000396251678467, 0.7104741930961609, 0.7220974564552307, 0.7243428826332092, 0.7396644949913025, 0.7298903465270996, 0.7450799345970154, 0.7481178045272827, 0.7539294958114624, 0.7512878179550171, 0.7576277852058411, 0.7630431652069092, 0.7695152759552002, 0.7693831920623779], "val_loss": [1.6608670098440987, 0.9797030517033168, 0.8477769919804165, 0.7228935446058001, 0.6422668525150844, 0.6199510608400617, 0.6243964093072074, 0.5746956893375942, 0.5649652481079102, 0.5409092221941266, 0.542122381074088, 0.5241995879581997, 0.526483586856297, 0.5106416770390102, 0.5023645673479352, 0.4872546706880842, 0.5241437639508929, 0.5104297229221889, 0.48727500438690186, 0.4977914605821882, 0.46826633385249544], "val_accuracy": [0.5553333163261414, 0.6526666879653931, 0.6483333110809326, 0.6880000233650208, 0.7369999885559082, 0.718999981880188, 0.7143333554267883, 0.734666645526886, 0.75, 0.7543333172798157, 0.7603333592414856, 0.7796666622161865, 0.7710000276565552, 0.7733333110809326, 0.7683333158493042, 0.793666660785675, 0.7563333511352539, 0.7566666603088379, 0.7850000262260437, 0.7693333625793457, 0.7850000262260437]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.5277143120765686, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3037902134567942, 2.301690517903445, 2.299358143672306, 2.2980708322977237, 2.2947321160751923, 2.2933337280637223, 2.2940940605950093, 2.290711101177519, 2.2898496851834795, 2.2870890613654664, 2.2855508025800075, 2.2843017325252037, 2.2848543387677425, 2.2807365538280053, 2.2792706149144966, 2.278403511168289, 2.27756760158496, 2.275800724826894, 2.27418134004968, 2.2732835761339687, 2.2688170824666867, 2.2683405588961487, 2.2660651643120966, 2.2636717669857713, 2.2628409604291875, 2.262653388713786, 2.260133039745058, 2.259385087313417, 2.2574299427937397, 2.256114848427501, 2.2518167299853338, 2.2515721396684425, 2.249698098152069, 2.248710186820634, 2.246436017552513, 2.244436973751402, 2.2416338281010466, 2.2391369158266525, 2.2375967633281766, 2.2367859271224213, 2.2350667233102435, 2.2321739790383237, 2.2306621208198476, 2.228084610878689, 2.2250066092930387, 2.2232411687778146, 2.220763320479458, 2.219302084247245, 2.217568673194439, 2.215435268793596, 2.211502524729749, 2.2099086286337966, 2.207938590746955, 2.205002845853091, 2.198858051157709, 2.199975961549895, 2.197782177226639, 2.193656823292164, 2.191382357000659, 2.187092937766254, 2.184592820555385, 2.182485850416926, 2.1784918613721036, 2.1762777766720367, 2.174341415448857, 2.170808936374661, 2.1659403367521834, 2.162764897231239, 2.1580618242498844, 2.157193943210612, 2.1520628306875453, 2.1498327630307177, 2.1435721500312583, 2.137796781349963, 2.136516141601762, 2.132791521148974, 2.130538113380798, 2.1253834525591913, 2.1213155016057037, 2.114530582689984, 2.1111051307268083, 2.1069933580857825, 2.104266197957603, 2.0983003110713048, 2.096443265483616, 2.088636995385336, 2.083632639449239, 2.0796564011415706, 2.0738071846750987, 2.0715924982759444, 2.0605565013666323, 2.0594926665188567, 2.051359671548751, 2.04662845654652, 2.041913587655594, 2.0354759675825687, 2.0328285005413513, 2.023082255687318, 2.015294356604987, 2.0104857153660114], "accuracy": [0.08717474341392517, 0.09325055778026581, 0.10289261490106583, 0.10606260597705841, 0.11161009222269058, 0.11570466309785843, 0.10817593336105347, 0.11874257028102875, 0.12270505726337433, 0.1306300312280655, 0.1302337795495987, 0.14014001190662384, 0.1394795924425125, 0.14555540680885315, 0.14714039862155914, 0.1558578759431839, 0.15678246319293976, 0.16549994051456451, 0.1624620258808136, 0.17540615797042847, 0.1752740740776062, 0.18742570281028748, 0.1850482076406479, 0.19112402200698853, 0.1950865089893341, 0.19482234120368958, 0.20103025436401367, 0.2016906589269638, 0.21014396846294403, 0.2082948088645935, 0.22322018444538116, 0.21793685853481293, 0.22335226833820343, 0.22995641827583313, 0.23484347760677338, 0.2413155436515808, 0.24105137586593628, 0.24699510633945465, 0.2550521790981293, 0.24765552580356598, 0.2499009370803833, 0.26020342111587524, 0.26363757252693176, 0.26363757252693176, 0.27024170756340027, 0.28358209133148193, 0.27261921763420105, 0.28080835938453674, 0.27777042984962463, 0.2859595715999603, 0.28622373938560486, 0.2864879071712494, 0.28978997468948364, 0.3003566265106201, 0.3074890971183777, 0.3057720363140106, 0.30880993604660034, 0.3117157518863678, 0.31303659081459045, 0.31845200061798096, 0.3195086419582367, 0.32584863901138306, 0.3307357132434845, 0.33324527740478516, 0.33522653579711914, 0.33126401901245117, 0.33601900935173035, 0.34724608063697815, 0.3431515097618103, 0.34288734197616577, 0.34566107392311096, 0.3451327383518219, 0.35926562547683716, 0.360190212726593, 0.35741645097732544, 0.3646810054779053, 0.35781270265579224, 0.3646810054779053, 0.36428478360176086, 0.37445515394210815, 0.3715493381023407, 0.37022849917411804, 0.3735305666923523, 0.3807951509952545, 0.3749834895133972, 0.38105931878089905, 0.3831726312637329, 0.3761722445487976, 0.3823801279067993, 0.39307886362075806, 0.3961167633533478, 0.3933430314064026, 0.3991546630859375, 0.3963809311389923, 0.3975696861743927, 0.40430590510368347, 0.39690926671028137, 0.4093250632286072, 0.41024965047836304, 0.4099854826927185], "val_loss": [1.9694745200020927, 1.9679767744881767, 1.9664772578648158, 1.964987005506243, 1.9634888512747628, 1.9620117459978377, 1.960512706211635, 1.95901278087071, 1.9575306347438268, 1.9560541425432478, 1.9545846666608537, 1.953103678567069, 1.9516213280814034, 1.9501290321350098, 1.9486308097839355, 1.947143827165876, 1.9456447192600794, 1.9441262653895788, 1.9426016807556152, 1.9410698754446847, 1.9395313944135393, 1.9379709107535226, 1.936406067439488, 1.9347951071602958, 1.9331764493669783, 1.9315563610621862, 1.9299039159502303, 1.9282638004847936, 1.9266020229884557, 1.9249210357666016, 1.9232152530125208, 1.9214826311383928, 1.9197197641645158, 1.9179370062691825, 1.9161502293178014, 1.914323057447161, 1.912452289036342, 1.9105569975716727, 1.9086524418422155, 1.9067333766392298, 1.9047661508832658, 1.9027785573686873, 1.9007442338126046, 1.8986752373831612, 1.896568434579032, 1.8944360869271415, 1.8922641617911202, 1.8900559970310755, 1.887826578957694, 1.8855440276009696, 1.8831981931413924, 1.8808338301522392, 1.8783790724618095, 1.8759242466517858, 1.8733704430716378, 1.8708077839442663, 1.8681907653808594, 1.86553008215768, 1.8627986907958984, 1.8600290843418665, 1.8571955135890417, 1.8542917796543665, 1.8513178825378418, 1.8483048847743444, 1.8452794211251395, 1.8421823637826102, 1.839017118726458, 1.8357670647757394, 1.8324596541268485, 1.8290895053318568, 1.825620174407959, 1.8221197809491838, 1.8185347148350306, 1.814833504813058, 1.8111199651445662, 1.807347365788051, 1.8035058975219727, 1.7995643615722656, 1.7955724852425712, 1.7914236613682337, 1.7872328758239746, 1.7829457010541643, 1.7786430631365096, 1.7742321831839425, 1.769770894731794, 1.7651617186410087, 1.7604962757655553, 1.7557456152779716, 1.7509187970842635, 1.7460317611694336, 1.7409649576459612, 1.7358887536185128, 1.7306747436523438, 1.7253922734941756, 1.720022133418492, 1.7145701135907854, 1.7090888704572404, 1.7034032685416085, 1.6975886140550887, 1.6917410237448556], "val_accuracy": [0.047333333641290665, 0.05533333495259285, 0.06466666609048843, 0.07533333450555801, 0.08666666597127914, 0.09700000286102295, 0.1133333370089531, 0.12433333694934845, 0.13766667246818542, 0.15533334016799927, 0.1693333387374878, 0.1886666715145111, 0.19766665995121002, 0.21266666054725647, 0.23000000417232513, 0.24300000071525574, 0.25200000405311584, 0.26466667652130127, 0.27666667103767395, 0.2866666615009308, 0.29633334279060364, 0.3036666810512543, 0.3100000023841858, 0.3166666626930237, 0.3233333230018616, 0.3296666741371155, 0.3356666564941406, 0.3383333384990692, 0.3449999988079071, 0.35066667199134827, 0.3543333411216736, 0.35733333230018616, 0.36266666650772095, 0.36633333563804626, 0.3709999918937683, 0.37599998712539673, 0.37966665625572205, 0.38100001215934753, 0.3843333423137665, 0.38600000739097595, 0.38966667652130127, 0.3916666805744171, 0.39500001072883606, 0.4000000059604645, 0.4026666581630707, 0.4073333442211151, 0.41200000047683716, 0.41466665267944336, 0.4166666567325592, 0.4180000126361847, 0.41866666078567505, 0.42233332991600037, 0.4246666729450226, 0.42766666412353516, 0.429666668176651, 0.43299999833106995, 0.43533334136009216, 0.43933331966400146, 0.4410000145435333, 0.44333332777023315, 0.4449999928474426, 0.4466666579246521, 0.4476666748523712, 0.4503333270549774, 0.45133334398269653, 0.4533333480358124, 0.45366665720939636, 0.4560000002384186, 0.4573333263397217, 0.4586666524410248, 0.46033334732055664, 0.46399998664855957, 0.46799999475479126, 0.47066667675971985, 0.4736666679382324, 0.47566667199134827, 0.47733333706855774, 0.4793333411216736, 0.4816666543483734, 0.48366665840148926, 0.4869999885559082, 0.4880000054836273, 0.4896666705608368, 0.492000013589859, 0.492333322763443, 0.4936666786670685, 0.4963333308696747, 0.4983333349227905, 0.5023333430290222, 0.5059999823570251, 0.5086666941642761, 0.5120000243186951, 0.512666642665863, 0.5146666765213013, 0.5166666507720947, 0.518666684627533, 0.5220000147819519, 0.5249999761581421, 0.5266666412353516, 0.5276666879653931]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [5, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.36571428179740906, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6288404671302827, 2.244344893857205, 2.184380606795031, 2.3062283428133186, 2.304369398788958, 2.3035413572076857, 2.3031669002813104], "accuracy": [0.18940694630146027, 0.1644432693719864, 0.21925769746303558, 0.09536388516426086, 0.09272222965955734, 0.09972262382507324, 0.09721305221319199], "val_loss": [1.9774746213640486, 1.826540470123291, 1.9786325182233537, 1.9753635270254952, 1.9741014071873255, 1.9738194601876395, 1.9737252507890974], "val_accuracy": [0.17266666889190674, 0.3720000088214874, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.13542857766151428, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.1650899559074404, 21.414570533242035, 2.4338026652325415, 2.7421810432998903, 2.6151715028775664, 2.4898116023013652, 2.5218724955373735], "accuracy": [0.2292959988117218, 0.1018359512090683, 0.10593052208423615, 0.11319508403539658, 0.09787346422672272, 0.10593052208423615, 0.09919429570436478], "val_loss": [89.45129830496651, 2.00701904296875, 2.1843228340148926, 2.0991734095982144, 2.2204766273498535, 2.2280894007001604, 2.1608357429504395], "val_accuracy": [0.1586666703224182, 0.18733333051204681, 0.10133333504199982, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.12285714596509933, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4718749539853087, 2.336692262933459, 2.351493533198324, 2.3036362866306064, 2.3032308600723876, 2.3031155834769876], "accuracy": [0.1880861222743988, 0.1526878923177719, 0.10157178342342377, 0.09589222073554993, 0.09734513610601425, 0.09681680053472519], "val_loss": [1.9759343692234583, 2.2711286544799805, 1.9747415270124162, 1.9741810389927454, 1.9738594463893346, 1.9737308365958077], "val_accuracy": [0.10599999874830246, 0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1168571412563324, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034089708120407, 2.301475927483656, 2.3014997522104466, 2.301626741106736, 2.301882331806828, 2.302362457667643, 2.302513931657597], "accuracy": [0.08625016361474991, 0.09259014576673508, 0.10408136248588562, 0.10051512718200684, 0.09694888442754745, 0.09655263274908066, 0.09747721254825592], "val_loss": [1.9705307824271066, 1.9714302335466658, 1.97248717716762, 1.97308349609375, 1.9734683718000139, 1.9736100605555944, 1.9736401694161552], "val_accuracy": [0.07633333653211594, 0.1080000028014183, 0.10199999809265137, 0.08433333039283752, 0.10766666382551193, 0.10633333027362823, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [85, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0], [9, 3, 0, 0, 1, 9], [1, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [2, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [575703.1401810931, 10884347.813234711, 49888034.53704926, 141015368.70479462, 298545058.6754722, 538295240.02219], "accuracy": [0.09879804402589798, 0.09734513610601425, 0.10091137140989304, 0.10170386731624603, 0.09826971590518951, 0.10051512718200684], "val_loss": [2130872.5714285714, 16977644.0, 57223603.428571425, 135552210.2857143, 264646710.85714287, 457190710.85714287], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 1, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.622383700637706, 13.022323951272758, NaN, NaN, NaN, NaN], "accuracy": [0.03315281867980957, 0.09708096832036972, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [44.21268790108817, 11.953089850289482, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033316377887414, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), beta))", "other_info": {"loss": [2.3033332525857166, 2.302584201085679, 2.302584330639772, 2.3025820653641054, 2.302584856571444, 2.3025853744414126], "accuracy": [0.09576013684272766, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736451421465193, 1.973646913255964, 1.9736456871032715, 1.973646640777588, 1.9736477306910925, 1.9736477306910925], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 4, 2, 3, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), beta))", "other_info": {"loss": [2.305960316368932, 2.310162074971177, 2.315714294348946, 2.327762367073193, 2.3438229884264916, 2.3584570891947525, 2.401957310201816, 2.435141707298038, 2.485327516076367, 2.534548380969774, 2.605636062371402, 2.6840583977052455, 2.777052711297366, 2.865278607110117, 2.9843352700677985, 3.127384412494932], "accuracy": [0.08400475233793259, 0.0878351628780365, 0.0870426595211029, 0.09377889335155487, 0.09351472556591034, 0.09826971590518951, 0.09126931428909302, 0.09589222073554993, 0.09774138033390045, 0.09496764093637466, 0.09945846349000931, 0.09813763201236725, 0.09893012791872025, 0.0956280529499054, 0.09457138925790787, 0.09655263274908066], "val_loss": [1.9726896286010742, 1.9746993609837122, 1.9768221718924386, 1.9807850973946708, 1.98818268094744, 1.9991303171430315, 2.0136472838265553, 2.0321554456438338, 2.055108002253941, 2.082963671003069, 2.11620078768049, 2.1552953720092773, 2.2006737164088657, 2.2527437891278947, 2.3118972097124373, 2.378470148359026], "val_accuracy": [0.023333333432674408, 0.03799999877810478, 0.07199999690055847, 0.09300000220537186, 0.0949999988079071, 0.09533333033323288, 0.09666666388511658, 0.0989999994635582, 0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 1, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3044557715010225, 2.303960448573562, 2.3032118342319863, 2.303534761411702, 2.3018369836546504, 2.301892822381764], "accuracy": [0.08611807972192764, 0.0878351628780365, 0.09351472556591034, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [67, 59, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 11, 7, 6, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3044557715010225, 2.303960448573562, 2.3032118342319863, 2.303534761411702, 2.3018369836546504, 2.301892822381764], "accuracy": [0.08611807972192764, 0.0878351628780365, 0.09351472556591034, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [75, 83, 6], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3044557715010225, 2.303960448573562, 2.3032118342319863, 2.303534761411702, 2.3018369836546504, 2.301892822381764], "accuracy": [0.08611807972192764, 0.0878351628780365, 0.09351472556591034, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 3, 0, 1, 9], [0, 4, 3, 3, 0], [38, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304458380406795, 2.3039698322388347, 2.3032277992388606, 2.30355748291328, 2.3018674651755475, 2.3019298174125864], "accuracy": [0.08611807972192764, 0.08796724677085876, 0.09351472556591034, 0.09417514503002167, 0.09272222965955734, 0.0944393053650856], "val_loss": [1.971005575997489, 1.9710117748805456, 1.971017701285226, 1.9710240364074707, 1.9710306440080916, 1.9710372516087122], "val_accuracy": [0.038333334028720856, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [3, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 2, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3044557715010225, 2.303960448573562, 2.3032118342319863, 2.303534761411702, 2.3018369836546504, 2.301892822381764], "accuracy": [0.08611807972192764, 0.0878351628780365, 0.09351472556591034, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [58, 83, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.03400000184774399, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3047881810074045, 2.3050246643683128, 2.3049366551934454, 2.3060659238958654, 2.3052493066615147, 2.3060045472823902], "accuracy": [0.08519349992275238, 0.08598599582910538, 0.09087307006120682, 0.0882314071059227, 0.08611807972192764, 0.08677849918603897], "val_loss": [1.9714952877589635, 1.972004004887172, 1.9725624493190221, 1.973259789603097, 1.9740540640694755, 1.9746307645525252], "val_accuracy": [0.032999999821186066, 0.03099999949336052, 0.027000000700354576, 0.027000000700354576, 0.026333333924412727, 0.025333333760499954]}}]