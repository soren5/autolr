[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8494285941123962, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0493900547914374, 1.1294466912030008, 0.8074071726164782, 0.7119617604025288, 0.6440420134853866, 0.5883359329307777, 0.5511088932446989, 0.5288892856064317, 0.5021995416942163, 0.4845850927647724, 0.4554716610810886, 0.45590066060713175, 0.420458416818486, 0.41281086666992456, 0.3900360191628886, 0.3882834019166226, 0.37484116600552064, 0.35924148598934097, 0.34031252055797345, 0.3421400537454315, 0.33424043090918815, 0.3254041002411112, 0.32233803724301036, 0.3100696605044806, 0.29693663227339273, 0.2868642890261243, 0.28507012543330623, 0.2715781891169628, 0.2705814255392389, 0.2568983635244557, 0.2566224498409306, 0.2530566789037626, 0.23536668493093957, 0.23423769124164212, 0.23314771157536981, 0.23405355813795817, 0.22422720656820402, 0.21958209235497186, 0.21292101434271932, 0.20225082632494232, 0.203032961156327, 0.20073332255227674, 0.18658764392094226, 0.18894257387701138, 0.17957151684235462, 0.17701386980660258, 0.181947730132271, 0.16342955359677597], "accuracy": [0.311319500207901, 0.6013736724853516, 0.6983225345611572, 0.7312111854553223, 0.7564390301704407, 0.7773081660270691, 0.7943468689918518, 0.8057059645652771, 0.8182538747787476, 0.8256505131721497, 0.8314621448516846, 0.8305375576019287, 0.8449346423149109, 0.8507462739944458, 0.8570862412452698, 0.857218325138092, 0.8631620407104492, 0.8664641380310059, 0.8761062026023865, 0.876370370388031, 0.8725399374961853, 0.8824461698532104, 0.8819178342819214, 0.882710337638855, 0.8930128216743469, 0.8908994793891907, 0.89552241563797, 0.9002773761749268, 0.8971073627471924, 0.9014661312103271, 0.9049002528190613, 0.9079381823539734, 0.913617730140686, 0.9082023501396179, 0.9113723635673523, 0.9099194407463074, 0.9141460657119751, 0.9198256731033325, 0.9179764986038208, 0.9228635430335999, 0.9191652536392212, 0.9235239624977112, 0.930788516998291, 0.9280148148536682, 0.9319772720336914, 0.9325056076049805, 0.9339585304260254, 0.9371285438537598], "val_loss": [0.9411825452532087, 0.6475515365600586, 0.5698695523398263, 0.5176111630031041, 0.49234749589647564, 0.45279811109815327, 0.436764052936009, 0.41420604501451763, 0.4000279903411865, 0.37764389174325125, 0.3764771393367222, 0.3537221721240452, 0.3500890391213553, 0.34633701188223703, 0.34066643033708843, 0.3311611669404166, 0.3294187699045454, 0.3213563050542559, 0.3161461523600987, 0.30748702798570904, 0.31223420585904804, 0.3069681099482945, 0.3073549951825823, 0.3048131891659328, 0.30898929493767874, 0.29270344972610474, 0.2992339474814279, 0.3019419397626604, 0.28990168230874197, 0.29341420105525423, 0.29231015273502897, 0.2930666634014675, 0.2939027803284781, 0.2979755571910313, 0.30147424765995573, 0.2873055509158543, 0.2943871702466692, 0.29923990794590544, 0.2976389527320862, 0.29817951577050344, 0.29568817785808016, 0.29940371002469746, 0.30284384318760466, 0.305914112499782, 0.3019474148750305, 0.31156151635306223, 0.31232536690575735, 0.3039580413273403], "val_accuracy": [0.628000020980835, 0.7143333554267883, 0.7416666746139526, 0.7613333463668823, 0.7683333158493042, 0.7929999828338623, 0.8003333210945129, 0.8096666932106018, 0.8240000009536743, 0.8306666612625122, 0.8273333311080933, 0.843999981880188, 0.8476666808128357, 0.8396666646003723, 0.8473333120346069, 0.8539999723434448, 0.8486666679382324, 0.8583333492279053, 0.8583333492279053, 0.8629999756813049, 0.8613333106040955, 0.8663333058357239, 0.8676666617393494, 0.8653333187103271, 0.8683333396911621, 0.8703333139419556, 0.8703333139419556, 0.8730000257492065, 0.875, 0.8733333349227905, 0.8766666650772095, 0.8756666779518127, 0.8766666650772095, 0.8793333172798157, 0.8726666569709778, 0.8769999742507935, 0.8766666650772095, 0.878000020980835, 0.8796666860580444, 0.8803333044052124, 0.8799999952316284, 0.8793333172798157, 0.8846666812896729, 0.8816666603088379, 0.8826666474342346, 0.8773333430290222, 0.8816666603088379, 0.8840000033378601]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 6, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.836571455001831, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0485396863384144, 1.1370182265899658, 0.8119374898525198, 0.7124853510236885, 0.6425709301423025, 0.5888613709573969, 0.5497201658306089, 0.5240606111132977, 0.5024889322705571, 0.48141638055028474, 0.447721326840064, 0.4422572348662938, 0.41797191904457476, 0.4186381135382405, 0.4006788729125514, 0.39297049377950555, 0.3822372378241416, 0.35943236051927135, 0.3414679305341817, 0.34741740250127695, 0.33793154008919774, 0.3293216584727371, 0.32514219597157173, 0.31690656821945984, 0.3026715225791415, 0.2994526798037679, 0.29077047772883674, 0.2789027890343755, 0.2797549670288324, 0.2620542643919219, 0.2580082098120759, 0.256683792778687, 0.24567846994413567, 0.23647574893416762, 0.23592391413720276, 0.23529237525306593, 0.21703921910707488, 0.21420254727687504, 0.21381104887201013, 0.20121968353248118, 0.2051452333527061, 0.19962072101416856, 0.19582829525119294, 0.19289057053799769, 0.18095815214994576, 0.18063001918235333, 0.18039952227783052, 0.1701668634914278], "accuracy": [0.31145158410072327, 0.6024303436279297, 0.6946242451667786, 0.7331924438476562, 0.7559106945991516, 0.7817989587783813, 0.7997622489929199, 0.806630551815033, 0.8178576231002808, 0.8265751004219055, 0.8334434032440186, 0.8343679904937744, 0.8442742228507996, 0.8481045961380005, 0.8504821062088013, 0.8581429123878479, 0.8582749962806702, 0.8658037185668945, 0.8741249442100525, 0.872407853603363, 0.8742570281028748, 0.8808611631393433, 0.8799365758895874, 0.8824461698532104, 0.8879936337471008, 0.8885219693183899, 0.897899866104126, 0.8965790271759033, 0.895918607711792, 0.8988244533538818, 0.9037115573883057, 0.906749427318573, 0.9058248400688171, 0.9089948534965515, 0.909259021282196, 0.9076740145683289, 0.9177123308181763, 0.9196935892105103, 0.9182406663894653, 0.9225993752479553, 0.9222031235694885, 0.9222031235694885, 0.9251089692115784, 0.9241843819618225, 0.9298639297485352, 0.9276185631752014, 0.9293355941772461, 0.9340906143188477], "val_loss": [0.9363542965480259, 0.6467781748090472, 0.5695805038724627, 0.5187195880072457, 0.48982930183410645, 0.4569847413471767, 0.43515677962984356, 0.4142657348087856, 0.3984776735305786, 0.3742037330354963, 0.3683448008128575, 0.3519795366695949, 0.35353818961552214, 0.34881568806512014, 0.34695935249328613, 0.33458055768694195, 0.32889840432575773, 0.3185533199991499, 0.31530853680201937, 0.3103678226470947, 0.32354030438831877, 0.3129583512033735, 0.3087993689945766, 0.30143133231571745, 0.3142021894454956, 0.3001148019518171, 0.30694208826337543, 0.30621996096202303, 0.29179154123578754, 0.28852573462894987, 0.29328228746141705, 0.2918933629989624, 0.29905861616134644, 0.29634937218257357, 0.29671952554157804, 0.2965716975075858, 0.2970024347305298, 0.2951249139649527, 0.29878119059971403, 0.29993938548224314, 0.2942350591932024, 0.29631506545203073, 0.2990774086543492, 0.3110251767294748, 0.3068673866135733, 0.30791978325162617, 0.311170186315264, 0.30832662752696444], "val_accuracy": [0.6269999742507935, 0.7223333120346069, 0.7423333525657654, 0.7566666603088379, 0.7693333625793457, 0.7929999828338623, 0.8050000071525574, 0.8119999766349792, 0.8236666917800903, 0.8370000123977661, 0.8396666646003723, 0.847000002861023, 0.843666672706604, 0.8389999866485596, 0.8433333039283752, 0.8543333411216736, 0.8533333539962769, 0.8553333282470703, 0.862666666507721, 0.8573333621025085, 0.8556666374206543, 0.8616666793823242, 0.8636666536331177, 0.8703333139419556, 0.862333357334137, 0.8690000176429749, 0.8650000095367432, 0.8650000095367432, 0.8740000128746033, 0.8773333430290222, 0.878000020980835, 0.8756666779518127, 0.8790000081062317, 0.8823333382606506, 0.8756666779518127, 0.8793333172798157, 0.8813333511352539, 0.8826666474342346, 0.8730000257492065, 0.8709999918937683, 0.8843333125114441, 0.8820000290870667, 0.8856666684150696, 0.8786666393280029, 0.8813333511352539, 0.875, 0.8849999904632568, 0.8836666941642761]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 8, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8360000252723694, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0485374925158926, 1.1372254837804765, 0.8105453352067826, 0.7109280730975445, 0.6425029044657682, 0.5867795884223457, 0.5491066570799065, 0.5250406272816636, 0.5014464810831105, 0.4807770308714816, 0.44990327923194906, 0.4411168216895339, 0.41822720325429286, 0.41373442001803173, 0.3981585068481316, 0.38999041276459273, 0.3765709422732451, 0.35453764047400355, 0.3392437226177758, 0.34533785222354835, 0.33847349521159936, 0.32711365950058763, 0.31973530645179016, 0.3083827691527878, 0.295815428037685, 0.29803981843673005, 0.28685784586322083, 0.2744166266097841, 0.2788569734962845, 0.2641260627199079, 0.2611192429519175, 0.2567025090819573, 0.23926112362619215, 0.23558207391795072], "accuracy": [0.31145158410072327, 0.6021661758422852, 0.6955488324165344, 0.7337207794189453, 0.7568352818489075, 0.7825914621353149, 0.7971205711364746, 0.8034605979919434, 0.8175934553146362, 0.8264430165290833, 0.8309338092803955, 0.8374059200286865, 0.8424250483512878, 0.8494254350662231, 0.8510104417800903, 0.8618412613868713, 0.8623695969581604, 0.873860776424408, 0.8771628737449646, 0.8742570281028748, 0.8734645247459412, 0.8799365758895874, 0.8799365758895874, 0.8845595121383667, 0.8903711438179016, 0.8901069760322571, 0.8947299122810364, 0.9021265506744385, 0.8932769894599915, 0.897899866104126, 0.9002773761749268, 0.904768168926239, 0.9082023501396179, 0.909259021282196], "val_loss": [0.9362979275839669, 0.6472342695508685, 0.5682102612086705, 0.5197784730366298, 0.4884285756519863, 0.4540973561150687, 0.43436457429613384, 0.41457304784229826, 0.3991781643458775, 0.3744811585971287, 0.3654883418764387, 0.35024659974234446, 0.3504096269607544, 0.34701848881585257, 0.34893358605248587, 0.3330783418246678, 0.32518239532198223, 0.317506057875497, 0.31039339303970337, 0.3118393761771066, 0.31717428990772795, 0.3070070913859776, 0.30483226265226093, 0.3064056209155491, 0.3114503877503531, 0.298524694783347, 0.3028628485543387, 0.3097534775733948, 0.2908862999507359, 0.2955939769744873, 0.2937589032309396, 0.29710859060287476, 0.29947629145213533, 0.2985231450625828], "val_accuracy": [0.6269999742507935, 0.722000002861023, 0.7429999709129333, 0.7566666603088379, 0.7680000066757202, 0.7950000166893005, 0.8043333292007446, 0.8103333115577698, 0.8233333230018616, 0.8366666436195374, 0.8389999866485596, 0.8456666469573975, 0.8446666598320007, 0.8413333296775818, 0.8413333296775818, 0.8579999804496765, 0.8529999852180481, 0.859000027179718, 0.8619999885559082, 0.859000027179718, 0.8586666584014893, 0.8696666955947876, 0.8619999885559082, 0.8686666488647461, 0.862333357334137, 0.8703333139419556, 0.8686666488647461, 0.8686666488647461, 0.8799999952316284, 0.8773333430290222, 0.8763333559036255, 0.875333309173584, 0.8796666860580444, 0.8799999952316284]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 6, 2, 9, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [24, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7411428689956665, "mapping_values": [1, 8, 8, 6, 2, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2948173084720063, 2.286365886862567, 2.274789755291801, 2.2623730097873858, 2.2486743554777995, 2.233710575506845, 2.2190388071853504, 2.2001707257218035, 2.17935145907414, 2.154311576870218, 2.123627352975914, 2.093509411185157, 2.0537952748209083, 2.015144245200358, 1.968536435321747, 1.9134989939723521, 1.8564011107314895, 1.7959532330867842, 1.739529735675782, 1.673896981063473, 1.6192918286552171, 1.5576392052085755, 1.5126826168130088, 1.4673174458125704, 1.4194059933748195, 1.3778504281232322, 1.3458584362977783, 1.3141088054763044, 1.2742825491773833, 1.2492112498383527, 1.2285985787940488, 1.2007334371678124, 1.1853182308268568, 1.1579084898329304, 1.1332908523962908, 1.1272610177169968, 1.097047057512052, 1.0899990075111012, 1.0773177892934094, 1.0536899094442413, 1.054147456882967, 1.0435251076349634, 1.0250338316593566, 1.013276435317711, 0.997453045040436, 0.9895038049706946, 0.9890592087529134, 0.9727198065169625, 0.9509237276611863, 0.9603088723906216, 0.9407372808160406, 0.9380413544900729, 0.9297500823341136, 0.920461882382588, 0.910450842677799, 0.9150094750566474, 0.9096347488794565, 0.9038082428061022, 0.8962854296303602, 0.8909718673683633, 0.8899093401461954, 0.8742823091401652, 0.869069801998995, 0.8663080118713661, 0.8618829047612195, 0.86222796685912, 0.8650325864628243, 0.8523698757983091, 0.8509940600681771, 0.8454544616413154, 0.841872089983938, 0.8334270466147098, 0.8216497061385172, 0.8313765844821993, 0.819540397436895, 0.8246149107245029, 0.818721681238874, 0.816977064843506], "accuracy": [0.109232597053051, 0.1286487877368927, 0.15995244681835175, 0.1982565075159073, 0.23101307451725006, 0.2561088502407074, 0.2797516882419586, 0.3016774654388428, 0.3206973969936371, 0.3440760672092438, 0.36600184440612793, 0.3739268183708191, 0.39783385396003723, 0.40047550201416016, 0.4147404432296753, 0.4364020526409149, 0.4391758143901825, 0.4628186523914337, 0.4653282165527344, 0.4777440130710602, 0.4884427487850189, 0.5089156031608582, 0.5114251971244812, 0.5229163765907288, 0.531369686126709, 0.5476158857345581, 0.548540472984314, 0.5542200207710266, 0.5612204670906067, 0.5712587237358093, 0.5783912539482117, 0.587769091129303, 0.5844670534133911, 0.5947695374488831, 0.5992603302001953, 0.611940324306488, 0.6174877882003784, 0.6199973821640015, 0.6217144131660461, 0.632941484451294, 0.6201294660568237, 0.6310923099517822, 0.6400739550590515, 0.6429798007011414, 0.6460176706314087, 0.6497160196304321, 0.6465460062026978, 0.6565843224525452, 0.6670188903808594, 0.6619997620582581, 0.6684718132019043, 0.6650376319885254, 0.6717738509178162, 0.6719059348106384, 0.6745476126670837, 0.6756042838096619, 0.67666095495224, 0.6781138777732849, 0.6781138777732849, 0.683000922203064, 0.6807554960250854, 0.6872276067733765, 0.6890767216682434, 0.6900013089179993, 0.6881521344184875, 0.6893408894538879, 0.6911900639533997, 0.6910579800605774, 0.69673752784729, 0.6952846646308899, 0.695813000202179, 0.7030775547027588, 0.7055870890617371, 0.7018887996673584, 0.7041342258453369, 0.7025492191314697, 0.7043983340263367, 0.7043983340263367], "val_loss": [1.95974029813494, 1.948678765978132, 1.9373089245387487, 1.9251582963126046, 1.9119673456464494, 1.8971902302333288, 1.880626610347203, 1.8616271700177873, 1.8396331242152624, 1.8140289442879813, 1.7844593865530831, 1.7508208411080497, 1.7122134821755546, 1.6688830511910575, 1.6206268583025252, 1.567643097468785, 1.5110749857766288, 1.4516008240836007, 1.3917901515960693, 1.331296750477382, 1.2723997320447649, 1.2162418706076485, 1.16481842313494, 1.117621728352138, 1.0740469183240617, 1.0350847244262695, 1.0004294940403529, 0.9697715554918561, 0.941094091960362, 0.9159247534615653, 0.8927381038665771, 0.872293404170445, 0.8534455980573382, 0.8358642033168248, 0.8191520316260201, 0.8052083594458443, 0.7915888684136527, 0.7790207011359078, 0.7674887691225324, 0.7560797078268868, 0.7462553637368339, 0.737902045249939, 0.7283623729433332, 0.7195884159633091, 0.7113413640430996, 0.7036498955317906, 0.6969499928610665, 0.6903499364852905, 0.6837870393480573, 0.6783148561205182, 0.6720552785055978, 0.6666089807237897, 0.6616342067718506, 0.657164454460144, 0.6517933436802456, 0.6485258170536586, 0.6436223813465664, 0.6387804235730853, 0.6350495985576085, 0.6303904226848057, 0.6273710557392665, 0.6230693714959281, 0.6198705945696149, 0.6159774746213641, 0.6119371141706195, 0.6090586185455322, 0.606755086353847, 0.6036990540368217, 0.6012830904551915, 0.5976154804229736, 0.5952901840209961, 0.5920119966779437, 0.5893506152289254, 0.5872607401439122, 0.5854196037564959, 0.5823583943503243, 0.5801538739885602, 0.578741022518703], "val_accuracy": [0.11900000274181366, 0.2356666624546051, 0.3109999895095825, 0.3566666543483734, 0.38333332538604736, 0.4086666703224182, 0.4273333251476288, 0.4490000009536743, 0.4623333215713501, 0.47600001096725464, 0.4866666793823242, 0.500333309173584, 0.5183333158493042, 0.5323333144187927, 0.5423333048820496, 0.5529999732971191, 0.5619999766349792, 0.5723333358764648, 0.5836666822433472, 0.590666651725769, 0.6003333330154419, 0.609666645526886, 0.6236666440963745, 0.6413333415985107, 0.652999997138977, 0.6636666655540466, 0.6706666946411133, 0.6736666560173035, 0.6763333082199097, 0.6830000281333923, 0.6840000152587891, 0.687666654586792, 0.6899999976158142, 0.6926666498184204, 0.6983333230018616, 0.7020000219345093, 0.7013333439826965, 0.70333331823349, 0.7080000042915344, 0.7083333134651184, 0.7110000252723694, 0.715666651725769, 0.7170000076293945, 0.718999981880188, 0.7183333039283752, 0.7223333120346069, 0.7246666550636292, 0.7273333072662354, 0.7269999980926514, 0.7263333201408386, 0.7293333411216736, 0.7306666374206543, 0.7319999933242798, 0.7326666712760925, 0.737333357334137, 0.734333336353302, 0.7386666536331177, 0.737333357334137, 0.737666666507721, 0.7440000176429749, 0.7433333396911621, 0.746999979019165, 0.7459999918937683, 0.7476666569709778, 0.7509999871253967, 0.749666690826416, 0.7543333172798157, 0.7549999952316284, 0.7516666650772095, 0.7516666650772095, 0.7573333382606506, 0.7573333382606506, 0.762666642665863, 0.762666642665863, 0.7553333044052124, 0.7609999775886536, 0.7566666603088379, 0.7556666731834412]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 1, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [89, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 0, 0, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 0, 7, 1, 8, 2, 2, 1], [0, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.16542857885360718, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.451782386379471, 2.4822482925758167, 2.4067382303604976, NaN, NaN, NaN, NaN], "accuracy": [0.1666886806488037, 0.13630960881710052, 0.10276053100824356, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0030058452061246, 2.00224426814488, 2.093785149710519, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.14100000262260437, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 8, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [86, 70, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 2, 9, 0, 1, 9], [0, 0, 0, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [1, 8, 0, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 5, 5, 2, 3, 3, 5, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 6, 1, 1, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [89, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 3, 3, 1, 2, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3014659832780704, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 5, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [11, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30172474471538, 2.3032848099990844, 2.30415668964323, 2.3049007398010546, 2.3079922587848563, 2.3168811529162316], "accuracy": [0.09800554811954498, 0.09721305221319199, 0.10038304328918457, 0.10236428678035736, 0.09826971590518951, 0.10077928751707077], "val_loss": [1.9737259319850378, 1.9741251128060477, 1.974991730281285, 1.9764579364231654, 1.980595316205706, 1.9900240216936385], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [8177928.96765653, 417843638.7267204, 2565971497.9960375, 7931360734.660151, 18137536453.300224, 34766292172.09669], "accuracy": [0.10196803510189056, 0.09893012791872025, 0.09668471664190292, 0.09826971590518951, 0.09589222073554993, 0.10210011899471283], "val_loss": [47406826.28571428, 738238134.8571428, 3022440374.857143, 7855538761.142858, 16193155072.0, 28990810404.57143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 1, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [89, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 2, 2, 1, 1, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [35595329.91054407, 5571204120.277903, 95561157552.87703, 665847289842.7452, 2923089089512.3306, 9648927470625.678], "accuracy": [0.10196803510189056, 0.09893012791872025, 0.09668471664190292, 0.09826971590518951, 0.09589222073554993, 0.1022322028875351], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 6, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 4, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 6, 1, 1, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [92, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 2, 2, 2, 1, 1, 0, 5, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.square(alpha), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 5, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 6, 0, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 1, 4, 3, 2, 1, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10421344637870789, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 8, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 2, 2, 0, 2, 2, 0, 0, 1, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [34, 82, 17, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [9, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [7, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 8, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [7, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [9, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [2.6718263464864567, 862478950.1288711, NaN, NaN, NaN, NaN], "accuracy": [0.19574692845344543, 0.11927089840173721, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.254793575831822, 16167457072274.285, NaN, NaN, NaN, NaN], "val_accuracy": [0.17900000512599945, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 4, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.05371428653597832, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.299368658148932, 2.3018994985428534, 2.30166938726566, 2.3015232594131936, 2.3006659864103947, 2.3006909364376087, 2.301641341166458, 2.301126085519948, 2.301203106656098, 2.3017391015383954, 2.2995326557431506, 2.301051231438946, 2.2993585235800773, 2.300877599447883, 2.3012972592268293, 2.3007025335443143], "accuracy": [0.09787346422672272, 0.09325055778026581, 0.09166556596755981, 0.09140139818191528, 0.09470347315073013, 0.0944393053650856, 0.08915598690509796, 0.09470347315073013, 0.09681680053472519, 0.09655263274908066, 0.09813763201236725, 0.09642054885625839, 0.09959053993225098, 0.09840179979801178, 0.09496764093637466, 0.08902391046285629], "val_loss": [1.970386028289795, 1.9700144359043665, 1.9698028564453125, 1.9697577612740653, 1.9697070121765137, 1.9697295597621374, 1.969820840018136, 1.9697941371372767, 1.9697649819510323, 1.9698029245649065, 1.969914095742362, 1.96987669808524, 1.9699674333844865, 1.9700630051749093, 1.9701123237609863, 1.9702794892447335], "val_accuracy": [0.045666664838790894, 0.05066666752099991, 0.0533333346247673, 0.052666667848825455, 0.05433333292603493, 0.05433333292603493, 0.055666666477918625, 0.05766666680574417, 0.05966666713356972, 0.06199999898672104, 0.06266666948795319, 0.06266666948795319, 0.061666667461395264, 0.06066666543483734, 0.06066666543483734, 0.05966666713356972]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 8, 1, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 1], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2997244777082373, 2.303041733644894, 2.303369302885675, 2.3033002359110366, 2.30259725871481, 2.3026825546856178], "accuracy": [0.09681680053472519, 0.08994849026203156, 0.0882314071059227, 0.08532558381557465, 0.09140139818191528, 0.08757099509239197], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 8, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 1, 1, 1], [0, 8, 5, 2, 9, 3, 9], [3, 1, 1], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [2.2997244777082373, 2.303041733644894, 2.303369302885675, 2.3033002359110366, 2.30259725871481, 2.3026825546856178], "accuracy": [0.09681680053472519, 0.08994849026203156, 0.0882314071059227, 0.08532558381557465, 0.09140139818191528, 0.08757099509239197], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 1, 1, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 48, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2997244777082373, 2.303041733644894, 2.303369302885675, 2.3033002359110366, 2.30259725871481, 2.3026825546856178], "accuracy": [0.09681680053472519, 0.08994849026203156, 0.0882314071059227, 0.08532558381557465, 0.09140139818191528, 0.08757099509239197], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 6, 2, 2, 5, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [89, 48, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 2, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 17, 17, 10, 7, 2, 3, 3, 1, 2, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2997405453758657, 2.3031013278346477, 2.3034699819406357, 2.3034362369729324, 2.3027780860910454, 2.30289936223129], "accuracy": [0.09681680053472519, 0.08994849026203156, 0.08796724677085876, 0.08506141602993011, 0.09100515395402908, 0.0866464152932167], "val_loss": [1.971036774771554, 1.9710779190063477, 1.971113613673619, 1.9711496489388602, 1.9711894989013672, 1.9712253298078264], "val_accuracy": [0.03766666725277901, 0.036666665226221085, 0.03566666692495346, 0.03566666692495346, 0.03466666489839554, 0.03466666489839554]}}]