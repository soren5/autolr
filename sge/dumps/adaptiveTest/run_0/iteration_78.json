[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.39228570461273193, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.989259022731728, 2.260825548252614, 2.7160856923123613, 2.3048078601291984, 2.303255639134806, 2.3030032525209307, 2.3031336907870608], "accuracy": [0.19931316375732422, 0.1578391194343567, 0.12851670384407043, 0.09879804402589798, 0.09774138033390045, 0.10170386731624603, 0.09747721254825592], "val_loss": [1.711963415145874, 2.1345909663609097, 1.9759960855756487, 1.97418669291905, 1.9737473215375627, 1.9737465041024345, 1.9736994334629603], "val_accuracy": [0.23100000619888306, 0.38333332538604736, 0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [3, 2, 6, 2, 8, 0, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.339428573846817, "mapping_values": [1, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9895475674078624, 2.2002828233608276, 2.2972705517273697, 2.222912710639763, 2.3046253043048655, 2.3034915115697556, 2.303314326193984, 2.3030911830626994], "accuracy": [0.19957733154296875, 0.21172896027565002, 0.11676132678985596, 0.18557654321193695, 0.10091137140989304, 0.09853387624025345, 0.09734513610601425, 0.09549596905708313], "val_loss": [1.704094444002424, 1.974959237234933, 1.847278050013951, 1.975630623953683, 1.9738258634294783, 1.9736401694161552, 1.9736341748918806, 1.9737065179007394], "val_accuracy": [0.23399999737739563, 0.1003333330154419, 0.29466667771339417, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.32028570771217346, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.988421548768561, 2.1662724444800365, 2.6195792044945807, 2.1895660627566906, 2.2696184525321645, 2.6536428145980633, 2.112338075705838, 2.31026659218422, 2.3042913426371645, 2.303340036824017, 2.3032673068443987], "accuracy": [0.19944524765014648, 0.21754062175750732, 0.11411966383457184, 0.17936864495277405, 0.12798838317394257, 0.1990489959716797, 0.2510896921157837, 0.10051512718200684, 0.09298639744520187, 0.09417514503002167, 0.09549596905708313], "val_loss": [1.6785167625972204, 3.653733389718192, 1.9687976837158203, 1.6334143706730433, 1.9370130811418806, 1.6120435850960868, 1.9856035368783134, 1.9759987422398158, 1.9741812433515276, 1.9738922800336565, 1.9737181663513184], "val_accuracy": [0.25033333897590637, 0.17366667091846466, 0.10133333504199982, 0.2996666729450226, 0.16466666758060455, 0.3726666569709778, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.26342856884002686, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9881341184969545, 2.2921448612036786, 2.5867556751270366, 2.0638789058030795, 2.313635997138617, 2.3065605331421404, 2.3039306893938836, 2.304550356349106], "accuracy": [0.19970941543579102, 0.13670584559440613, 0.1702549159526825, 0.29612997174263, 0.1566503793001175, 0.09681680053472519, 0.10698718577623367, 0.09760929644107819], "val_loss": [1.7312796115875244, 1.857794897896903, 1.6081774234771729, 1.980001653943743, 1.9771900858197893, 1.9739524296351842, 1.9739438465663366, 1.9742459569658553], "val_accuracy": [0.2303333282470703, 0.18133333325386047, 0.3656666576862335, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 1, 9, 8, 6, 2, 0, 3, 5, 2], [2, 1, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2582857012748718, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9888829823734424, 2.3239338473243296, 2.2949769720189117, 2.333223513576884, 2.1998709276635426, 2.3050909123290344, 2.2470850657950683, 2.2713205110222168], "accuracy": [0.19931316375732422, 0.18676528334617615, 0.11438383162021637, 0.13736626505851746, 0.1884823739528656, 0.09826971590518951, 0.19244486093521118, 0.14872540533542633], "val_loss": [1.686894723347255, 1.9735644204275948, 1.7309772627694267, 1.9570954867771693, 1.9800946371895927, 1.968351091657366, 1.471531867980957, 1.9757777622767858], "val_accuracy": [0.23633334040641785, 0.10000000149011612, 0.34166666865348816, 0.10133333504199982, 0.09933333098888397, 0.12433333694934845, 0.32066667079925537, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2565714418888092, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9898102647828986, 2.3821371643062377, 2.3049000717188783, 2.3032088416395187, 2.3026386605372218, 2.283814104840016], "accuracy": [0.19957733154296875, 0.2020869106054306, 0.09998679161071777, 0.09338264167308807, 0.10368511080741882, 0.1274600476026535], "val_loss": [1.6844496045793806, 1.9771029608590263, 1.9740831511361259, 1.973632880619594, 1.9725896971566337, 1.9768874985831124], "val_accuracy": [0.24566666781902313, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.25028571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9895894475790015, 2.268319687618477, 2.3009423406888403, 4.277616319655112, 2.3099200972130176, 2.304207015330403], "accuracy": [0.19970941543579102, 0.1950865089893341, 0.10962884873151779, 0.17672698199748993, 0.09906221181154251, 0.09787346422672272], "val_loss": [1.6994151047297887, 1.9756247656685966, 1.9440076691763741, 1.9858364377702986, 1.9755209514072962, 1.9741627829415458], "val_accuracy": [0.23533333837985992, 0.10533333569765091, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [0, 0, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.19657142460346222, "mapping_values": [1, 3, 3, 1, 2, 2, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9895805951358936, 2.29286193227283, 2.3045390214367063, 2.3024001173481192, 2.271813907108098, 2.2845180519914203, 2.3038162491057355, 2.3038324378878605, 2.303045623416772, 2.3025923167646773], "accuracy": [0.19944524765014648, 0.20803064107894897, 0.09721305221319199, 0.10421344637870789, 0.1640470176935196, 0.14212125539779663, 0.10130762308835983, 0.0948355570435524, 0.10394927859306335, 0.09985470771789551], "val_loss": [1.6920909200395857, 1.976756981440953, 1.9735776356288366, 1.9712229456220354, 1.8707481792994909, 1.9743097169058663, 1.9737730707441057, 1.9738035883222307, 1.9735599245343889, 1.972533907209124], "val_accuracy": [0.24033333361148834, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.2513333261013031, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.09833333641290665, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [4, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 2, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.15142856538295746, "mapping_values": [1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))))), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.954548888848269, 4.369528660949975e+26, NaN, NaN, NaN, NaN], "accuracy": [0.2024831622838974, 0.10645885765552521, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.972559792654855, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.15114285051822662, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.952281662312796, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20235107839107513, 0.10857218503952026, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.981810978480748, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [8, 2, 2, 2, 8, 6, 2, 0, 3, 5, 2], [2, 1, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [2, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3161550883241633, 2.375696375322474, 2.4781360144722875, 2.979550115593893, 7.5192219740868, 402.55945369996067], "accuracy": [0.09153348207473755, 0.10342095047235489, 0.10236428678035736, 0.09985470771789551, 0.09985470771789551, 0.09813763201236725], "val_loss": [2.0114573069981168, 2.0355453491210938, 2.1727027211870467, 2.7475362505231584, 69.87584141322544, 915.7343401227679], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 0, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [31, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 2, 2, 8, 6, 2, 0, 3, 5, 2], [3, 0, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [4], [], [0, 0, 0, 1, 1, 1], [1, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3036662402673875, 2.3040400655467073, 2.307235281150323, 2.3069833470940226, 2.30788069460386, 2.3092536963114036, 2.3110508689507516, 2.314212767833165], "accuracy": [0.09113723784685135, 0.09879804402589798, 0.09998679161071777, 0.09602430462837219, 0.09985470771789551, 0.09470347315073013, 0.09959053993225098, 0.09800554811954498], "val_loss": [1.9738262040274483, 1.9742582184927804, 1.9749581473214286, 1.9791336740766252, 1.9802301270621163, 1.9808494704110282, 1.9785825184413366, 1.9799160957336426], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [1, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 2, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3038330793601176, 2.3013631922457716, 2.302752770673424, 2.3011191565488796, 2.3023640159697125, 2.30224907478526], "accuracy": [0.08241976052522659, 0.09021265059709549, 0.08942015469074249, 0.09074098616838455, 0.09655263274908066, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 3, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [4], [], [1, 0, 0, 1, 1], [5, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3038330793601176, 2.3013631922457716, 2.302752770673424, 2.3011191565488796, 2.3023640159697125, 2.30224907478526], "accuracy": [0.08241976052522659, 0.09021265059709549, 0.08942015469074249, 0.09074098616838455, 0.09655263274908066, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 1, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3038330793601176, 2.3013631922457716, 2.302752770673424, 2.3011191565488796, 2.3023640159697125, 2.30224907478526], "accuracy": [0.08241976052522659, 0.09021265059709549, 0.08942015469074249, 0.09074098616838455, 0.09655263274908066, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [0, 1, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [1, 1, 0], [0], [8], [4], [], [0, 1, 0, 1, 1], [6, 4, 9, 2, 9], [3, 0, 2], [46, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3038330793601176, 2.3013631922457716, 2.302752770673424, 2.3011191565488796, 2.3023640159697125, 2.30224907478526], "accuracy": [0.08241976052522659, 0.09021265059709549, 0.08942015469074249, 0.09074098616838455, 0.09655263274908066, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]