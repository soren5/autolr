[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.854285717010498, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9377979073526364, 1.1083393174391758, 0.781648551098281, 0.6878871474016014, 0.61901196703982, 0.578787256453913, 0.5415941543819063, 0.5162455261013432, 0.48759806301804454, 0.46277015977342917, 0.4507898714847537, 0.44278768633949034, 0.4119459146191148, 0.40669690801356967, 0.39107767421776324, 0.36929714347487663, 0.36337882733426907, 0.35932997184391147, 0.3517044822710884, 0.33423540307514704, 0.3200176436556896, 0.32407250548508093, 0.30300691747835456, 0.29864907878784536, 0.2878558394608481, 0.29478804771265005, 0.27459812454811383, 0.26406194107675157, 0.26398733510175604, 0.24819305678675785, 0.25031259105449905, 0.23836720577871573, 0.2260466933372455, 0.22301826798967822, 0.22231045927054782, 0.21632121442732888, 0.2050914929771562, 0.2052743037193994, 0.1984392135465433, 0.20055866037353848, 0.19942681176464683, 0.18525538505454184], "accuracy": [0.35081231594085693, 0.6400739550590515, 0.7141724824905396, 0.7366266250610352, 0.7629110813140869, 0.7829877138137817, 0.7975168228149414, 0.811649739742279, 0.8153480291366577, 0.833179235458374, 0.8310658931732178, 0.8366134166717529, 0.8507462739944458, 0.8510104417800903, 0.8545766472816467, 0.8605204224586487, 0.8687095642089844, 0.8636903762817383, 0.8693699836730957, 0.8791441321372986, 0.8794082403182983, 0.8803328275680542, 0.8891823887825012, 0.8861445188522339, 0.891559898853302, 0.8883898854255676, 0.8972394466400146, 0.9002773761749268, 0.8993527889251709, 0.9059569239616394, 0.9017302989959717, 0.9104477763175964, 0.917580246925354, 0.9169198274612427, 0.9148064851760864, 0.9170519113540649, 0.9185048341751099, 0.9202219247817993, 0.9257693886756897, 0.9255052208900452, 0.9248448014259338, 0.9280148148536682], "val_loss": [0.942852088383266, 0.6277048076902118, 0.5504527602876935, 0.5034700802394322, 0.4814681666237967, 0.4390570436205183, 0.42479237488337923, 0.40384128264018465, 0.37749353476933073, 0.3834252187183925, 0.3665579557418823, 0.34992285285677227, 0.3377350313322885, 0.33689142976488384, 0.3320779119219099, 0.33960825204849243, 0.3369867375918797, 0.31881401368549894, 0.30703623805727276, 0.3063738431249346, 0.3018689581326076, 0.30780781166894094, 0.2938838686261858, 0.2964139836175101, 0.30018759625298636, 0.2993650606700352, 0.2874346801212856, 0.29524282046726774, 0.285159707069397, 0.29014821563448223, 0.28174568925585064, 0.2937590479850769, 0.27964385066713604, 0.29347024645124165, 0.2953480822699411, 0.2859434826033456, 0.2977614402770996, 0.2890493188585554, 0.290315500327519, 0.29269922631127493, 0.30484494992664884, 0.29751732519694735], "val_accuracy": [0.5960000157356262, 0.7229999899864197, 0.7509999871253967, 0.7620000243186951, 0.7726666927337646, 0.7986666560173035, 0.8113333582878113, 0.8223333358764648, 0.8330000042915344, 0.8286666870117188, 0.8433333039283752, 0.8473333120346069, 0.8503333330154419, 0.8506666421890259, 0.8513333201408386, 0.8523333072662354, 0.8450000286102295, 0.8619999885559082, 0.8606666922569275, 0.8603333234786987, 0.8640000224113464, 0.8606666922569275, 0.8743333220481873, 0.8693333268165588, 0.8659999966621399, 0.875, 0.874666690826416, 0.8743333220481873, 0.8793333172798157, 0.8756666779518127, 0.878333330154419, 0.8756666779518127, 0.8836666941642761, 0.8736666440963745, 0.8803333044052124, 0.8830000162124634, 0.8846666812896729, 0.8826666474342346, 0.8809999823570251, 0.8793333172798157, 0.8826666474342346, 0.8816666603088379]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8477143049240112, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9377867959478134, 1.107878879927027, 0.7819281048022714, 0.6873639315236845, 0.6186515493494346, 0.5783668183978081, 0.5404657465654861, 0.5163598936570241, 0.48780449661580627, 0.4635524523532181, 0.4547730901844041, 0.44252345576860713, 0.41117156321472415, 0.40812515109490094, 0.38785316633227135, 0.3692445980992378, 0.3624113577271276, 0.3620843603398113, 0.3515858323645551, 0.3370333801737992, 0.32395176192505204, 0.32981476234942536, 0.30872778152635366, 0.2990077748597495, 0.288982817289332, 0.29247458734375026, 0.27265233935114414, 0.26360460952871023, 0.26478159522903183, 0.24751008244994263, 0.24759420829087894, 0.23506409898961242, 0.22741842094531795, 0.2299488709036228], "accuracy": [0.35081231594085693, 0.6396777033805847, 0.7137762308120728, 0.7390040755271912, 0.763967752456665, 0.7840443849563599, 0.7989697456359863, 0.8083476424217224, 0.8141592741012573, 0.8335754871368408, 0.8284242749214172, 0.8370096683502197, 0.8510104417800903, 0.8481045961380005, 0.859199583530426, 0.8634262084960938, 0.8669924736022949, 0.8656716346740723, 0.8697662353515625, 0.8758420348167419, 0.8786157965660095, 0.8734645247459412, 0.8873332738876343, 0.8857482671737671, 0.8923524022102356, 0.8894465565681458, 0.8997490406036377, 0.8997490406036377, 0.8990886211395264, 0.9070135951042175, 0.9054285883903503, 0.909259021282196, 0.913617730140686, 0.9109761118888855], "val_loss": [0.942594051361084, 0.6287566082818168, 0.5498796360833305, 0.5034199953079224, 0.48055587496076313, 0.4392680951527187, 0.4240513699395316, 0.40482501472745624, 0.3799166679382324, 0.38178118637629915, 0.37034012590135845, 0.34971798317773, 0.340993412903377, 0.34036810057503836, 0.3328711816242763, 0.3411732316017151, 0.33828260217394146, 0.31304111651011873, 0.30714677912848337, 0.30844087260110037, 0.30909558704921175, 0.3167253647531782, 0.29987641743251253, 0.3055894034249442, 0.30220548595700947, 0.29765957593917847, 0.285753071308136, 0.291383045060294, 0.28226145676204134, 0.287086512361254, 0.28075383390699116, 0.2934087174279349, 0.28096045766557964, 0.2880807263510568], "val_accuracy": [0.5956666469573975, 0.7226666808128357, 0.7506666779518127, 0.7613333463668823, 0.7716666460037231, 0.7983333468437195, 0.8130000233650208, 0.8213333487510681, 0.8316666483879089, 0.82833331823349, 0.8353333473205566, 0.8500000238418579, 0.8486666679382324, 0.8519999980926514, 0.8539999723434448, 0.8516666889190674, 0.8460000157356262, 0.862333357334137, 0.8566666841506958, 0.8566666841506958, 0.856333315372467, 0.856333315372467, 0.8679999709129333, 0.8686666488647461, 0.8653333187103271, 0.871999979019165, 0.8763333559036255, 0.8723333477973938, 0.8806666731834412, 0.8756666779518127, 0.878000020980835, 0.875, 0.8799999952316284, 0.8763333559036255]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 1, 7, 6, 0, 9, 1, 0, 7], [4, 0, 3, 5, 0], [50, 49, 6, 67], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10057143121957779, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [1.6992632436160544e+17, 5.84119718341659e+19, 8.317635962339692e+19, 8.142197032025663e+19, 2.6800569459694076e+20, 1.6773936490959846e+18, 8.27634692669667e+20, 3.301267702536692e+20], "accuracy": [0.0936468094587326, 0.10170386731624603, 0.09998679161071777, 0.1002509593963623, 0.09998679161071777, 0.10011887550354004, 0.09972262382507324, 0.10011887550354004], "val_loss": [1.94620705727298e+19, 9.747927358380329e+19, 5.1299095980493767e+20, 1.6413644536638783e+20, 8.711159958521143e+19, 2.8939812032965018e+19, 1.0857612484516603e+20, 1.7879485542609076e+20], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10166666656732559, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [0, 0, 4, 5, 0, 4, 0], [35, 49, 6, 33, 84, 18, 50], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303049541152684, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 2, 1, 8, 6, 7, 5, 9, 5, 8, 4, 9, 6, 9], [0, 0, 3, 3, 0, 3, 3], [36, 49, 6, 99, 23, 69], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 23, 23, 16, 7, 6, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [22, 27, 6, 31, 88, 68], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 9, 9, 6, 6, 7, 3, 9], [4, 0, 4, 5, 0, 2, 4], [36, 49, 6, 17], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [76742154841404.58, 224.0369571539169, 1294.1248291886288, 3961.0678434904776, 8961.701149689192, 17005.3498714771], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [44.5830089024135, 560.7025146484375, 2182.545479910714, 5537.679408482143, 11255.507533482143, 19976.2265625], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 2, 1, 9, 4, 7, 8, 9, 6, 8, 4, 9], [2, 0, 1, 5, 0, 4, 0], [70, 49, 6, 76, 64, 32, 64], [1, 1, 0], [1], [8], [3], [64], [0, 0, 1, 0, 1, 1], [4, 4, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 4, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), alpha), grad), tf.math.pow(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.pow(beta, tf.math.square(alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 6, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [6, 3, 7, 2, 1, 9, 4, 7, 8, 9, 6, 8, 4, 9, 9], [0, 0, 3, 3, 0, 3, 2], [50, 53, 6, 56, 44, 60, 59], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 21, 21, 15, 6, 7, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [4, 3, 7, 0, 1, 9, 9], [4, 0, 4, 5, 0], [73, 8, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 7, 3, 3, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 3, 7, 0, 1, 9], [4, 3, 4, 3, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 3, 9], [4, 0, 4, 5, 0], [36, 29, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 1, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3034849587905173, 2.303085650057447, 2.3032304276690714, 2.3028615531573724, 2.302936801159654, 2.302931427971373], "accuracy": [0.0874389111995697, 0.09417514503002167, 0.09470347315073013, 0.09417514503002167, 0.09311848133802414, 0.09259014576673508], "val_loss": [1.9736590385437012, 1.9736357416425432, 1.9736547470092773, 1.973686626979283, 1.97365174974714, 1.9736683028084892], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [6, 9, 7, 0, 1, 9], [2, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3629003388927976, 3.042164798457436, 4.9046707242754835, 8.098335862427403, 12.33827104632723, 17.98883689887425], "accuracy": [0.09034473448991776, 0.09325055778026581, 0.10170386731624603, 0.10210011899471283, 0.10289261490106583, 0.09906221181154251], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [8, 2, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 1, 1, 1], [6, 3, 5, 2, 9, 3, 9], [2, 3, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, sigma)", "other_info": {"loss": [2.3010742411464196, 2.3031017671030085, 2.301690874444873, 2.303922428635716, 2.3027781094258977, 2.3030441861977082], "accuracy": [0.09008057415485382, 0.0944393053650856, 0.09060890227556229, 0.0870426595211029, 0.08981640636920929, 0.08691058307886124], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [2, 0, 1, 5, 3], [73, 40, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3010742411464196, 2.3031017671030085, 2.301690874444873, 2.303922428635716, 2.3027781094258977, 2.3030441861977082], "accuracy": [0.09008057415485382, 0.0944393053650856, 0.09060890227556229, 0.0870426595211029, 0.08981640636920929, 0.08691058307886124], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 3, 7, 0, 1, 9], [0, 0, 4, 5, 0], [36, 8, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 6, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3010742411464196, 2.3031017671030085, 2.301690874444873, 2.303922428635716, 2.3027781094258977, 2.3030441861977082], "accuracy": [0.09008057415485382, 0.0944393053650856, 0.09060890227556229, 0.0870426595211029, 0.08981640636920929, 0.08691058307886124], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]