[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [71, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8462857007980347, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040874049427676, 1.0935212421678613, 0.7909077683601712, 0.6892042003130129, 0.6304105328861686, 0.5905236315890987, 0.5520401221807402, 0.5267358966837974, 0.49738834743817184, 0.47283614330508406, 0.45553402383613106, 0.4408238189740975, 0.4234424186121314, 0.4071648193152038, 0.40595307741513453, 0.38380489492570685, 0.37094752558816646, 0.3554489544952361, 0.34337890559120765, 0.34485975119258594, 0.33741456101347256, 0.3287461577641446, 0.31934000110235733, 0.32001021313881434, 0.3068165420509679, 0.29225018691345844, 0.3017302306927175, 0.2937965817289928, 0.279063488262173, 0.2627686469538526, 0.26686600046686254, 0.26051444863488943, 0.24220076563721712, 0.23658131465872817, 0.22091917861895144, 0.23158028229565245, 0.21882015859343829, 0.20570880267929015, 0.2088494723255073, 0.20587445367848506, 0.19970972661636036, 0.1952429463098613], "accuracy": [0.31726324558258057, 0.6110157370567322, 0.7034738063812256, 0.743891179561615, 0.7597411274909973, 0.7798177003860474, 0.7968564033508301, 0.8082155585289001, 0.8197067975997925, 0.8276317715644836, 0.8355567455291748, 0.8385946154594421, 0.8437458872795105, 0.8514066934585571, 0.8474441766738892, 0.8581429123878479, 0.8634262084960938, 0.8693699836730957, 0.8728041052818298, 0.871879518032074, 0.8720116019248962, 0.878351628780365, 0.8841632604598999, 0.8824461698532104, 0.8829745054244995, 0.8898428082466125, 0.8841632604598999, 0.885219931602478, 0.8919561505317688, 0.8997490406036377, 0.9002773761749268, 0.9001452922821045, 0.9083344340324402, 0.909259021282196, 0.9174481630325317, 0.9126931428909302, 0.9174481630325317, 0.921938955783844, 0.9202219247817993, 0.9210143685340881, 0.924448549747467, 0.9277506470680237], "val_loss": [0.9178850310189384, 0.6263456174305507, 0.5593406983784267, 0.5130614212581089, 0.4851213182721819, 0.45339460032326834, 0.4272326486451285, 0.4157013807977949, 0.3947762761797224, 0.3891972729137966, 0.36846054451806204, 0.3566293546131679, 0.34911954402923584, 0.34573901551110403, 0.3348084432738168, 0.3263170208249773, 0.32800906896591187, 0.3172067829540798, 0.3210501415388925, 0.3182990040097918, 0.31157047407967703, 0.31678357294627596, 0.3040125455175127, 0.3069650445665632, 0.30510135207857403, 0.31521473612104145, 0.30110208477292744, 0.3074286920683725, 0.29845610686710905, 0.30071660450526644, 0.2883900148527963, 0.30528720787593294, 0.2868180956159319, 0.2862678851400103, 0.29722024713243755, 0.29706025975091116, 0.2893994450569153, 0.2985770446913583, 0.28635971886771067, 0.290532580443791, 0.30088846172605244, 0.2963178924151829], "val_accuracy": [0.656000018119812, 0.718999981880188, 0.7519999742507935, 0.7649999856948853, 0.7770000100135803, 0.7879999876022339, 0.8033333420753479, 0.812666654586792, 0.8196666836738586, 0.8276666402816772, 0.8379999995231628, 0.8510000109672546, 0.8433333039283752, 0.8453333377838135, 0.8489999771118164, 0.8539999723434448, 0.8539999723434448, 0.856333315372467, 0.8606666922569275, 0.859333336353302, 0.8579999804496765, 0.8629999756813049, 0.862333357334137, 0.8686666488647461, 0.8653333187103271, 0.8610000014305115, 0.8650000095367432, 0.8659999966621399, 0.8700000047683716, 0.8703333139419556, 0.8743333220481873, 0.8759999871253967, 0.8796666860580444, 0.8730000257492065, 0.8803333044052124, 0.8790000081062317, 0.8833333253860474, 0.8823333382606506, 0.8816666603088379, 0.8830000162124634, 0.8830000162124634, 0.8833333253860474]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8437142968177795, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.047873524060071, 1.0942726793731319, 0.7901669719971528, 0.691822507771613, 0.6321427239135367, 0.5947883386322851, 0.5588803136109393, 0.5240993831986214, 0.4992002196410203, 0.4747934883666816, 0.4552107492631311, 0.439905819686932, 0.42447087141138895, 0.41171541761618247, 0.4101342604640862, 0.38871763614914784, 0.38016371242578995, 0.35905816133909413, 0.3478789104328589, 0.3423236861417574, 0.3428320293303069, 0.325784106079645, 0.31678428522836044, 0.314290463404806, 0.30413743970479473, 0.2927040774958276, 0.2988915804937421, 0.28446304410786566, 0.2763790323230112, 0.2711652540976361, 0.27202138106710544, 0.26291246518734784, 0.24937423511999096, 0.23869816541844954, 0.2281488446968264, 0.24628091431793017, 0.22991343673154774, 0.2192658882638829, 0.2154520656852013, 0.20789634185720035], "accuracy": [0.3148857355117798, 0.6104874014854431, 0.7065116763114929, 0.7390040755271912, 0.7589486241340637, 0.7783648371696472, 0.7928939461708069, 0.8092722296714783, 0.8152159452438354, 0.8271034359931946, 0.8342359066009521, 0.8367455005645752, 0.8461233377456665, 0.8527275323867798, 0.8490291833877563, 0.8536521196365356, 0.8598600029945374, 0.8708229064941406, 0.8732003569602966, 0.8691058158874512, 0.8710870146751404, 0.8787478804588318, 0.8796724081039429, 0.8816536664962769, 0.8842953443527222, 0.8922203183174133, 0.8858803510665894, 0.894069492816925, 0.8927486538887024, 0.8972394466400146, 0.896446943283081, 0.900409460067749, 0.9030511379241943, 0.9078060984611511, 0.9104477763175964, 0.9068815112113953, 0.913089394569397, 0.9152027368545532, 0.9162594079971313, 0.9208822846412659], "val_loss": [0.929776804787772, 0.622542245047433, 0.5583124160766602, 0.5124495029449463, 0.4832007714680263, 0.4594704934528896, 0.42747663600104197, 0.41147666318076, 0.3963941080229623, 0.38857216494424, 0.3760903137070792, 0.3690180608204433, 0.35230203185762676, 0.3456688608442034, 0.33646089690072195, 0.3280455470085144, 0.32660283361162457, 0.3165648409298488, 0.32321801355906893, 0.321390117917742, 0.30548483984810965, 0.31599184444972445, 0.3014388084411621, 0.30324264083589825, 0.30706501858575, 0.30920657089778353, 0.29696977138519287, 0.2971691233771188, 0.2992387243679592, 0.3039223977497646, 0.29314171416418894, 0.30140606846128193, 0.2869429077420916, 0.28939296518053326, 0.30097109930855886, 0.2953513094357082, 0.301741932119642, 0.2955760189465114, 0.29601292099271503, 0.28925488676343647], "val_accuracy": [0.6499999761581421, 0.7286666631698608, 0.7419999837875366, 0.7716666460037231, 0.7760000228881836, 0.7803333401679993, 0.8026666641235352, 0.8146666884422302, 0.8193333148956299, 0.8256666660308838, 0.8379999995231628, 0.8399999737739563, 0.8443333506584167, 0.8476666808128357, 0.8493333458900452, 0.859666645526886, 0.8539999723434448, 0.8573333621025085, 0.8600000143051147, 0.8546666502952576, 0.8633333444595337, 0.8619999885559082, 0.8643333315849304, 0.8696666955947876, 0.8643333315849304, 0.8669999837875366, 0.8706666827201843, 0.8723333477973938, 0.8683333396911621, 0.8676666617393494, 0.8703333139419556, 0.8709999918937683, 0.8766666650772095, 0.8759999871253967, 0.8806666731834412, 0.8726666569709778, 0.8776666522026062, 0.8786666393280029, 0.8766666650772095, 0.8790000081062317]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7662857174873352, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.223758582000672, 1.735249698390389, 1.2811814120039098, 1.0784152380589718, 0.9939787150326815, 0.9321698193552629, 0.836035659190072, 0.8053975878311674, 0.7961959379727988, 0.7412043170465407, 0.7293361059788935, 0.726265807051653, 0.7276479923304723, 0.6958266295824289, 0.6901545915951929], "accuracy": [0.2436930388212204, 0.4637432396411896, 0.5547483563423157, 0.6259410977363586, 0.6425835490226746, 0.655527651309967, 0.6960771083831787, 0.7063795924186707, 0.6996433734893799, 0.7269845604896545, 0.7304186820983887, 0.7285695672035217, 0.7317395210266113, 0.7432307600975037, 0.7428345084190369], "val_loss": [1.7149536609649658, 1.0676039627620153, 0.8779201507568359, 0.8035143613815308, 0.6816743782588414, 0.6177181856972831, 0.6308738844735282, 0.5784604890005929, 0.6012424571173531, 0.532374552318028, 0.5368948323386056, 0.5502687862941197, 0.5408863340105329, 0.5181213787623814, 0.5286388397216797], "val_accuracy": [0.5130000114440918, 0.6190000176429749, 0.6586666703224182, 0.6766666769981384, 0.690666675567627, 0.746666669845581, 0.7196666598320007, 0.7393333315849304, 0.734333336353302, 0.7743333578109741, 0.7703333497047424, 0.7480000257492065, 0.7689999938011169, 0.7713333368301392, 0.753000020980835]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [11, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7425714135169983, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.3027248123712103, 2.2937643905247143, 2.282215192538085, 2.262610615929435, 2.236371670920599, 2.2048760209935705, 2.15817625222504, 2.092130759010824, 1.9941446763366015, 1.8474538041899438, 1.6916667551270659, 1.5510245644893503, 1.491275791431604, 1.416756042163795, 1.4205448303114327, 1.2872464965756827, 1.197883495203083, 1.0832473642050455, 0.986218560727643, 0.9591210434197781, 0.9347908013626852, 0.9233102524411236, 0.9111801485863533, 0.8971582646335924, 0.8680703502447062, 0.8586481680896508, 0.8416739808821864, 0.8475291467361666, 0.836495624754045, 0.8333294302433741, 0.8241218420272302, 0.788751819405841, 0.7790964361368279, 0.785631281990086, 0.7710658305939304, 0.7588301332572259, 0.7565485609363429, 0.7524012125651629, 0.7398802971228979, 0.724467592649708, 0.7293560528137963, 0.7221498017486816, 0.7028833411042528, 0.6936120871287673, 0.6973617942640888, 0.6967921167348339, 0.696579820649058, 0.6911371341155993, 0.676654400960597, 0.6730250329342122, 0.6698583705613264, 0.6619890346707858, 0.6698979663574905, 0.6630519208828094, 0.6545163797522895, 0.6564401150489795, 0.6361865015424175, 0.6360034549776369, 0.6252469123472643, 0.618246503840537, 0.6214724986418726, 0.6089319778298028, 0.6091395835315294, 0.6059091237982928, 0.5933887695025428, 0.5891011956109347, 0.5888731984918333, 0.5890901154767032, 0.5762525391836901, 0.5703072051613983, 0.570995027048083, 0.5597484080767225, 0.5591887972059189, 0.5553295862137791, 0.5672740309371641, 0.5600132493767457, 0.5509847060265148, 0.5455211377131264, 0.5380350854009166, 0.5374364874240446, 0.5265770848196385, 0.5240919723439572, 0.5208797089065684, 0.5223015982713273, 0.524058349711028, 0.5114653058229043, 0.509832316925182, 0.5146240483240728, 0.5082286229270278, 0.5098033848534391, 0.4943600747374622, 0.505964191519526, 0.49702116058581636, 0.49688052097410496, 0.4971422269800635, 0.4901187344903345, 0.49321649133521395, 0.48604175032736086, 0.49112458560744204, 0.4793035047535474], "accuracy": [0.08479725569486618, 0.11134592443704605, 0.1442345827817917, 0.19838859140872955, 0.2604675590991974, 0.3097345232963562, 0.33826443552970886, 0.37247392535209656, 0.390569269657135, 0.41962751746177673, 0.4282129108905792, 0.45964866876602173, 0.4764232039451599, 0.5054814219474792, 0.5153876543045044, 0.5601637959480286, 0.5867124795913696, 0.6133931875228882, 0.6357152462005615, 0.6347906589508057, 0.6409985423088074, 0.6568484902381897, 0.6630563735961914, 0.6712455153465271, 0.6826046705245972, 0.6798309087753296, 0.6847180128097534, 0.6802271604537964, 0.6865671873092651, 0.6877558827400208, 0.6921146512031555, 0.7003037929534912, 0.705058753490448, 0.7037379741668701, 0.7107383608818054, 0.7083608508110046, 0.7078325152397156, 0.707040011882782, 0.7190595865249634, 0.7219653725624084, 0.7207766771316528, 0.7232862114906311, 0.7320036888122559, 0.7341170310974121, 0.7359662055969238, 0.735569953918457, 0.7395324110984802, 0.735041618347168, 0.7448157668113708, 0.748778223991394, 0.7446836829185486, 0.7477215528488159, 0.7474573850631714, 0.7452120184898376, 0.7491744756698608, 0.7555144429206848, 0.7578919529914856, 0.7574957013130188, 0.7618544697761536, 0.7677981853485107, 0.7647602558135986, 0.7725531458854675, 0.7668735980987549, 0.7696473598480225, 0.7726852297782898, 0.7758552432060242, 0.7795535326004028, 0.776251494884491, 0.7800818681716919, 0.7860256433486938, 0.7833839654922485, 0.793950617313385, 0.7849689722061157, 0.7952714562416077, 0.7886672616004944, 0.7931581139564514, 0.7954035401344299, 0.7955356240272522, 0.8020076751708984, 0.8021397590637207, 0.8047813773155212, 0.8012151718139648, 0.8018755912780762, 0.8064984679222107, 0.8083476424217224, 0.8058380484580994, 0.8120459914207458, 0.8086118102073669, 0.8096684813499451, 0.8094043135643005, 0.8137630224227905, 0.8145555257797241, 0.8125742673873901, 0.8125742673873901, 0.8094043135643005, 0.8132346868515015, 0.8144234418869019, 0.8232730031013489, 0.8197067975997925, 0.8203672170639038], "val_loss": [1.9674486432756697, 1.9576899664742606, 1.9420174871172224, 1.9207685334341866, 1.8934954915727888, 1.857344423021589, 1.8053195817129952, 1.7260540553501673, 1.60261903490339, 1.4268990925380163, 1.2258481638772147, 1.0447709219796317, 0.9175750528063092, 0.8591972078595843, 0.8049247094563076, 0.770312854221889, 0.7620776210512433, 0.7042770045144218, 0.6894757747650146, 0.7001043387821743, 0.6913824592317853, 0.6866324118205479, 0.6689216920307705, 0.6427943365914481, 0.6251850298472813, 0.6125041927610125, 0.6069595984050206, 0.60423629624503, 0.5956923791340419, 0.5841986111232212, 0.5746372086661202, 0.5684442179543632, 0.5673794916697911, 0.5633033854620797, 0.5565114361899239, 0.5518247059413365, 0.5492045368467059, 0.5444146735327584, 0.5376631702695575, 0.5343625715800694, 0.5320291689464024, 0.5270682232720512, 0.521295326096671, 0.5171039615358625, 0.5142138515199933, 0.5111513478415353, 0.5070132187434605, 0.5021736110959735, 0.4993389674595424, 0.4992143767220633, 0.4997812509536743, 0.49851999964032856, 0.4948315279824393, 0.4899579627173288, 0.4852151189531599, 0.4809443780354091, 0.47693915026528494, 0.4736450569970267, 0.4708653518131801, 0.4682107312338693, 0.46598238604409353, 0.4644008363996233, 0.46186319419315885, 0.4580081360680716, 0.4532801764351981, 0.4481391651289804, 0.44407854761396137, 0.44119533470698763, 0.4378069979803903, 0.43329985652651104, 0.4285209264074053, 0.4248021585600717, 0.4227383647646223, 0.42145521300179617, 0.4203269737107413, 0.41820905038288664, 0.41496382440839497, 0.41213198219026836, 0.4103785582951137, 0.40804516417639597, 0.4052383303642273, 0.4032255155699594, 0.40244579315185547, 0.40202238730021883, 0.4008692077228001, 0.4002887691770281, 0.4003298112324306, 0.3996499351092747, 0.3979595048086984, 0.39636233023234774, 0.3953652211597988, 0.39424785545894075, 0.39264122928891865, 0.3914221099444798, 0.3909522805895124, 0.3890333686556135, 0.38650351762771606, 0.3848422510283334, 0.38381077562059673, 0.38181956325258526], "val_accuracy": [0.05833333358168602, 0.13600000739097595, 0.2840000092983246, 0.35466668009757996, 0.3843333423137665, 0.4099999964237213, 0.437333345413208, 0.4620000123977661, 0.4873333275318146, 0.5166666507720947, 0.5690000057220459, 0.6293333172798157, 0.6650000214576721, 0.652999997138977, 0.6773333549499512, 0.6863333582878113, 0.6899999976158142, 0.7036666870117188, 0.7086666822433472, 0.6850000023841858, 0.7166666388511658, 0.7129999995231628, 0.7183333039283752, 0.7293333411216736, 0.7279999852180481, 0.7283333539962769, 0.7279999852180481, 0.7253333330154419, 0.7319999933242798, 0.7363333106040955, 0.7450000047683716, 0.7506666779518127, 0.750333309173584, 0.749666690826416, 0.7549999952316284, 0.7540000081062317, 0.7526666522026062, 0.7596666812896729, 0.7633333206176758, 0.762333333492279, 0.7639999985694885, 0.765333354473114, 0.7646666765213013, 0.7696666717529297, 0.7683333158493042, 0.7720000147819519, 0.7743333578109741, 0.7776666879653931, 0.7793333530426025, 0.7753333449363708, 0.7763333320617676, 0.7766666412353516, 0.7796666622161865, 0.7823333144187927, 0.7850000262260437, 0.7860000133514404, 0.7913333177566528, 0.7913333177566528, 0.7896666526794434, 0.7893333435058594, 0.7919999957084656, 0.793666660785675, 0.7953333258628845, 0.79666668176651, 0.8013333082199097, 0.8043333292007446, 0.8036666512489319, 0.8066666722297668, 0.8063333630561829, 0.8063333630561829, 0.8106666803359985, 0.8140000104904175, 0.815666675567627, 0.8146666884422302, 0.8136666417121887, 0.8190000057220459, 0.8173333406448364, 0.8183333277702332, 0.815666675567627, 0.8140000104904175, 0.8193333148956299, 0.8199999928474426, 0.8173333406448364, 0.8216666579246521, 0.8240000009536743, 0.8223333358764648, 0.8230000138282776, 0.8240000009536743, 0.8273333311080933, 0.8293333053588867, 0.8316666483879089, 0.8326666951179504, 0.8330000042915344, 0.8296666741371155, 0.8299999833106995, 0.8343333601951599, 0.8363333344459534, 0.8366666436195374, 0.8360000252723694, 0.8376666903495789]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.5274285674095154, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3033955522012466, 2.297048724826616, 2.289514682107456, 2.2791528862701385, 2.268750115880688, 2.249806612237979, 2.198321372983069, 2.0264650729070675, 1.6910542865959, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.10210011899471283, 0.1254788041114807, 0.1438383311033249, 0.1562541276216507, 0.17183992266654968, 0.19931316375732422, 0.287280410528183, 0.4081363081932068, 0.3167349100112915, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9694030625479562, 1.9624528203691756, 1.9530320167541504, 1.9430180958339147, 1.9257116317749023, 1.8827554157802038, 1.7741054126194544, 1.391028983252389, 1.112121650150844, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.047333333641290665, 0.10266666859388351, 0.14766666293144226, 0.2016666680574417, 0.23233333230018616, 0.29499998688697815, 0.4449999928474426, 0.4830000102519989, 0.5289999842643738, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [7, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [4, 1, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 3, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.11057142913341522, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.30297872652042, 2.3001400981959006, 2.3005869566819546, 2.3009886062691605, 2.301359670572529, 2.3018564090532254, 2.3022936468095416, 2.3024652367018597], "accuracy": [0.08466517180204391, 0.09536388516426086, 0.09813763201236725, 0.09747721254825592, 0.09932637959718704, 0.10130762308835983, 0.10196803510189056, 0.10170386731624603], "val_loss": [1.9705087116786413, 1.9709869112287248, 1.9718897002083915, 1.9726405143737793, 1.973076411655971, 1.9734089033944267, 1.9735747746058874, 1.9736246381487166], "val_accuracy": [0.06866666674613953, 0.10066666454076767, 0.11400000005960464, 0.09966666996479034, 0.08666666597127914, 0.09933333098888397, 0.11100000143051147, 0.10566666722297668]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 2, 2, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 4, 9, 0, 1, 9], [1, 5, 3, 3, 0], [3, 63, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [72, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [6, 4, 9, 0, 1, 9], [0, 5, 3, 3, 0], [3, 63, 6], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 0, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [60, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 2, 3, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [2, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 3, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [18, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [70, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024192256320344, 2.3022545708830267, 2.3027114279596734, 2.3051121621288724, 2.3173463616026644, 2.4011461740755022], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736530440194267, 1.9737526348658971, 1.9745485442025321, 1.9790635108947754, 2.0051450729370117, 2.2324376106262207], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [48, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [28, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [69, 63, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 0, 7, 1, 8, 2, 2, 1], [3, 6, 0, 6], [36, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 7, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 3, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 11, 5, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(sigma, beta))))", "other_info": {"loss": [2.303935505190955, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.0816272646188736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974989414215088, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.023000000044703484, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [4, 2, 4, 8, 3, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 3, 2, 3, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [13, 63, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 6, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [60, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 32, 19, 13, 6], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.multiply(sigma, tf.math.pow(tf.math.add(tf.math.add(beta, alpha), sigma), beta)), beta)), alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.pow(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 4, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 1, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [74, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [71, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [28, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [1, 6, 0, 6], [36, 55], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 6, 4, 1, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [60, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [2.3028621380402505, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [9, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [71, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [63, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 0, 7, 1, 8, 2, 2, 1], [3, 6, 0, 6], [36, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 2, 4, 3, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.07085714489221573, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 11, 5, 6, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.math.add(sigma, beta)))", "other_info": {"loss": [2.3043176439129334, 2.303273450838592, 2.3067197808500106, 2.3086244452820006, 2.309975154206832, 2.31439855942369, 2.320108997256544, 2.3227247632867734, 2.3306568281415303, 2.3362057340017572, 2.3673413164186408, 3.4933050533179944e+26, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.08955223858356476, 0.08241976052522659, 0.08928807079792023, 0.0796460211277008, 0.07845727354288101, 0.07357019931077957, 0.07621186226606369, 0.07317395508289337, 0.07938185334205627, 0.07607977837324142, 0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972158363887242, 1.9732488904680525, 1.9749016080583846, 1.9768210819789342, 1.9788392611912318, 1.981104510171073, 1.9840069498334612, 1.9876299585614885, 1.9935968262808663, 2.00372246333531, 2.038520131792341, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.030666666105389595, 0.026000000536441803, 0.02500000037252903, 0.024000000208616257, 0.024000000208616257, 0.03200000151991844, 0.041999999433755875, 0.05433333292603493, 0.0793333351612091, 0.09466666728258133, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [36, 55], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3037122928108977, 2.3013281805829253, 2.3026695850739123, 2.302252611857616, 2.3013440674920487, 2.3025701204704774], "accuracy": [0.08321225643157959, 0.09285431355237961, 0.08915598690509796, 0.09708096832036972, 0.09179764986038208, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1], [8, 5, 4, 8, 4, 5, 6, 3, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 51, 17, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [28, 43, 6], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [9, 0, 7, 1, 8, 2, 2, 1], [4, 6, 0, 6], [36, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 1, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [60, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.square(alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3037122928108977, 2.3013281805829253, 2.3026695850739123, 2.302252611857616, 2.3013440674920487, 2.3025701204704774], "accuracy": [0.08321225643157959, 0.09285431355237961, 0.08915598690509796, 0.09708096832036972, 0.09179764986038208, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]