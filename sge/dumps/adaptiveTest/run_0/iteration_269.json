[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8548571467399597, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9517885662104555, 1.1167851013750558, 0.7776398926032548, 0.6654490317887067, 0.6154829588595824, 0.5677944481286233, 0.5298303910108558, 0.5078491643947018, 0.47861627161920095, 0.46370906643092186, 0.4347423392555512, 0.4156961907422176, 0.3977672275480042, 0.3941423143488368, 0.3784619837806461, 0.37227885435522196, 0.35822684542299216, 0.3535644516394107, 0.3437809455372701, 0.32648715630750363, 0.32026187532125383, 0.302530257327288, 0.2981286661468398, 0.29442816884557665, 0.2799864461562574, 0.2750601145246828, 0.2609298447962088, 0.2536024393745307, 0.25543253613052086, 0.25075220154371275, 0.23870742891002025, 0.23967382563552395, 0.23065769651137355, 0.22054801702798554, 0.22620842451424789, 0.20978317165599916, 0.21102044670266276, 0.19267204967566673, 0.1955240251598042, 0.19370868408432756, 0.17764114675985085, 0.1867723104472268, 0.179939708164056, 0.17223379513283982, 0.1715078341934927, 0.17114334335306364, 0.1606103052036905, 0.16187465079487937], "accuracy": [0.33483028411865234, 0.6188086271286011, 0.707040011882782, 0.7430986762046814, 0.7695152759552002, 0.7881389260292053, 0.8042530417442322, 0.8120459914207458, 0.8239334225654602, 0.8304054737091064, 0.8403117060661316, 0.8498216867446899, 0.8553691506385803, 0.8539162874221802, 0.8544445633888245, 0.86118084192276, 0.8726720213890076, 0.8729361891746521, 0.8765024542808533, 0.880729079246521, 0.8803328275680542, 0.8908994793891907, 0.8868049383163452, 0.8894465565681458, 0.8943336606025696, 0.8930128216743469, 0.9055606722831726, 0.9033153057098389, 0.8993527889251709, 0.9043719172477722, 0.9104477763175964, 0.9088627696037292, 0.9108440279960632, 0.9167877435684204, 0.9158631563186646, 0.9207502603530884, 0.9191652536392212, 0.9289394021034241, 0.9249768853187561, 0.9224672913551331, 0.9290714859962463, 0.9253731369972229, 0.9293355941772461, 0.9325056076049805, 0.9342226982116699, 0.935279369354248, 0.9377889037132263, 0.939109742641449], "val_loss": [0.8900145803179059, 0.6327805178506034, 0.5471758331571307, 0.49492285932813374, 0.4711365188871111, 0.429970988205501, 0.40736252069473267, 0.39473810366221834, 0.3760374273572649, 0.3649178743362427, 0.36174010378973825, 0.3475043092455183, 0.3495525973183768, 0.3325325420924595, 0.32261777775628225, 0.3183319313185556, 0.31456953287124634, 0.3137501903942653, 0.3065932733672006, 0.31453405959265573, 0.30790326425007414, 0.3098664709499904, 0.2986190744808742, 0.29493285928453716, 0.30341146673474995, 0.30206441027777536, 0.29002407618931364, 0.2957932523318699, 0.2904189314161028, 0.294281005859375, 0.2987650292260306, 0.2932137336049761, 0.2959979261670794, 0.3003351518086025, 0.28230358021599905, 0.31003980125699726, 0.3001668793814523, 0.2882193752697536, 0.29828931604112896, 0.2968988759177072, 0.3014750991548811, 0.30398522104535786, 0.29512470960617065, 0.29867606503622873, 0.30735810313905987, 0.30841881036758423, 0.2994479537010193, 0.31815401145390104], "val_accuracy": [0.6480000019073486, 0.7263333201408386, 0.7506666779518127, 0.7699999809265137, 0.7749999761581421, 0.8050000071525574, 0.8100000023841858, 0.8183333277702332, 0.8316666483879089, 0.8389999866485596, 0.8443333506584167, 0.8523333072662354, 0.8416666388511658, 0.8526666760444641, 0.8546666502952576, 0.8586666584014893, 0.859333336353302, 0.859333336353302, 0.8633333444595337, 0.8616666793823242, 0.8629999756813049, 0.8650000095367432, 0.8693333268165588, 0.8706666827201843, 0.8709999918937683, 0.8726666569709778, 0.8743333220481873, 0.8756666779518127, 0.8713333606719971, 0.8773333430290222, 0.8790000081062317, 0.875, 0.8769999742507935, 0.8776666522026062, 0.8813333511352539, 0.8796666860580444, 0.8816666603088379, 0.8826666474342346, 0.8853333592414856, 0.8796666860580444, 0.8830000162124634, 0.8796666860580444, 0.887333333492279, 0.8806666731834412, 0.8820000290870667, 0.8833333253860474, 0.8830000162124634, 0.8863333463668823]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8488571643829346, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9517328765618724, 1.1214696029787916, 0.779330463331326, 0.6670556420096474, 0.6159890892325832, 0.5676619412089383, 0.5264997665735047, 0.508451675285422, 0.4744176635920427, 0.46270662195426504, 0.4337567945772772, 0.4122049526185124, 0.3972842671914958, 0.3885604219902083, 0.37870309517336653, 0.37488852983940674, 0.35859326624426274, 0.3552898263942296, 0.34395774782861244, 0.3293081353865185, 0.3171113704835199, 0.3075468861990601, 0.2981603389635157, 0.29592503919624746, 0.2834227377980093, 0.28585887369368257, 0.2697628793652189, 0.26155562720687997, 0.25575011774942846, 0.24904727554749567, 0.2403774632773521, 0.2446210500551111, 0.2415563749276636, 0.22233382018959327, 0.23544449524408034, 0.22247041976998244, 0.21634551256466, 0.19721202933163204, 0.2029024493527403, 0.19454214541927195, 0.18232008063750668, 0.18480959861954963, 0.1791629038643859, 0.1728819003962192, 0.17495552551288174, 0.17172687281951016], "accuracy": [0.3350944519042969, 0.6153744459152222, 0.7073041796684265, 0.7436270117759705, 0.7676661014556885, 0.7882710099220276, 0.8061022162437439, 0.8131026029586792, 0.8259146809577942, 0.8294808864593506, 0.8411042094230652, 0.8521991968154907, 0.8532558679580688, 0.8558974862098694, 0.8605204224586487, 0.8652753829956055, 0.8696341514587402, 0.8697662353515625, 0.8709549307823181, 0.8762382864952087, 0.8808611631393433, 0.8861445188522339, 0.8869370222091675, 0.8891823887825012, 0.8948619961738586, 0.889050304889679, 0.8996169567108154, 0.900409460067749, 0.9008057117462158, 0.9035794734954834, 0.9055606722831726, 0.9051644206047058, 0.9074098467826843, 0.9124290347099304, 0.9113723635673523, 0.9148064851760864, 0.9161273241043091, 0.9261656403541565, 0.9218068718910217, 0.9251089692115784, 0.9266939759254456, 0.9273543953895569, 0.9342226982116699, 0.9321093559265137, 0.9321093559265137, 0.930788516998291], "val_loss": [0.8903453690665108, 0.6310968228748867, 0.5477889605930873, 0.4966541699000767, 0.46978793825422016, 0.4288708652768816, 0.4048987627029419, 0.39580313648496357, 0.3774814009666443, 0.3661491274833679, 0.35936678307397024, 0.3456010903630938, 0.3453664609364101, 0.33039645637784687, 0.31746091161455425, 0.3198891111782619, 0.31606301239558626, 0.3066205893244062, 0.30613466671534945, 0.3154749700001308, 0.309002195085798, 0.31795177289417814, 0.3022671341896057, 0.29251945870263235, 0.3091610244342259, 0.29698554958615986, 0.2974545359611511, 0.2945245589528765, 0.29264839206423077, 0.2891860178538731, 0.29357802867889404, 0.28705000025885447, 0.3009881632668631, 0.2910123552594866, 0.28748856272016254, 0.2962720905031477, 0.29014841999326435, 0.2963803836277553, 0.29103217806134907, 0.29225490774427143, 0.29325716836111887, 0.2955908945628575, 0.3100905844143459, 0.29737391642161776, 0.30148637294769287, 0.304119919027601], "val_accuracy": [0.6480000019073486, 0.7266666889190674, 0.7509999871253967, 0.765666663646698, 0.7770000100135803, 0.8073333501815796, 0.815666675567627, 0.8233333230018616, 0.8323333263397217, 0.8363333344459534, 0.8450000286102295, 0.8500000238418579, 0.8450000286102295, 0.8536666631698608, 0.8606666922569275, 0.859000027179718, 0.859333336353302, 0.8640000224113464, 0.8640000224113464, 0.8616666793823242, 0.8666666746139526, 0.8610000014305115, 0.8713333606719971, 0.8713333606719971, 0.8659999966621399, 0.8709999918937683, 0.875333309173584, 0.8773333430290222, 0.8723333477973938, 0.8776666522026062, 0.8776666522026062, 0.875333309173584, 0.8769999742507935, 0.8769999742507935, 0.8809999823570251, 0.8846666812896729, 0.8830000162124634, 0.8803333044052124, 0.8820000290870667, 0.8799999952316284, 0.8870000243186951, 0.8830000162124634, 0.8786666393280029, 0.8809999823570251, 0.8826666474342346, 0.8843333125114441]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 6, 0, 0, 1, 9], [4, 0, 3, 5, 0], [0, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.4337143003940582, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.343483585297959, 2.2704754399428233, 2.2124967551140062, 2.5687391587913533, 2.3095527633054305, 2.296101561815763], "accuracy": [0.21423853933811188, 0.16523577272891998, 0.1795007288455963, 0.21265354752540588, 0.09655263274908066, 0.11530841141939163], "val_loss": [1.460425683430263, 1.9648617335728236, 1.8163929666791643, 1.9831462587629045, 1.9731083597455705, 1.9417405809674944], "val_accuracy": [0.48266667127609253, 0.09933333098888397, 0.27166667580604553, 0.10066666454076767, 0.10066666454076767, 0.20933333039283752]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [9, 49, 6], [0, 1, 0], [0], [8], [3], [64], [0, 0, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [88, 32, 85]], "fitness": -0.25028571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(sigma)))", "other_info": {"loss": [3.1970845289737984, 2.353728807298436, 2.467507843328206, 2.361618903019897, 2.3590207125737193, 2.3466642979916768, 2.344475273600407], "accuracy": [0.2262580841779709, 0.13221503794193268, 0.11478008329868317, 0.09972262382507324, 0.09959053993225098, 0.09602430462837219, 0.09906221181154251], "val_loss": [2.137519563947405, 1.9789999553135462, 2.0029401779174805, 1.981449740273612, 2.0191494396754672, 2.052128791809082, 2.0372397559029713], "val_accuracy": [0.09933333098888397, 0.18533332645893097, 0.10133333504199982, 0.09933333098888397, 0.10000000149011612, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 0, 5, 0], [0, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.18685714900493622, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3016241835628315, 2.3018747639772585, 2.3015054757364233, 2.3013467038265074, 2.302027091342602, 2.301421904970138, 2.302300768883599, 2.30142165005026, 2.3013088141985385, 2.2995498826270406, 2.2997188354291147, 2.300771555707219, 2.3018141257024443, 2.300649489771972, 2.2988646303453244, 2.2973609568341815, 2.2995377224607396, 2.2969231069867386, 2.297914863687701, 2.298705005154492, 2.299391254064288, 2.2993801069328925, 2.298547541885769, 2.298259599570034, 2.298104471172151, 2.2968031422274064, 2.2980588817986924, 2.296439550839647, 2.2961435176283533, 2.2970336258230333, 2.296525668820779, 2.296441353386136, 2.296737302957257, 2.295641128019555, 2.295293092255296, 2.2950645662679836, 2.2950213331477736, 2.2954111635850296, 2.2942227565884794, 2.2954879956490424, 2.2936913263937897, 2.2938908018755355, 2.2943805630149434, 2.2936301260985843, 2.2943478765551912, 2.2935633149523036, 2.2937515865243294, 2.293617899013847, 2.2911219755577577, 2.291578703111803, 2.2933961025334275, 2.2915849883747517, 2.2915786651336223, 2.2924384758094867, 2.2925479471281993, 2.2913932873981975, 2.290926542107014, 2.2906998559200784, 2.2913309519773684, 2.2914056826450286, 2.290333846651127, 2.2902363075981396, 2.2919911681353975, 2.2906405806084824, 2.2898480966500223, 2.291662602738902, 2.287967262550226, 2.2903312848559336, 2.2901585787326084, 2.289784042543314, 2.2884097638430614, 2.28876230496583, 2.2884895929397766, 2.287499530613619, 2.286797607548091, 2.287783986494573, 2.287103819636117, 2.2880644388895433, 2.2877320652829343, 2.28763539500445, 2.2868380229455165, 2.2869041359356888, 2.287015535418604, 2.285911849996496, 2.2857791952028124, 2.2860826256252818, 2.286815945309513, 2.285885814567992, 2.2852744434204526, 2.285000987040951, 2.2852241397455084, 2.284129135518294, 2.2847487916091116, 2.2849239265095243, 2.2847415001448104, 2.28428633196353, 2.283463720821229, 2.2838004875208298, 2.2821209367397612, 2.282472877423084], "accuracy": [0.09549596905708313, 0.09166556596755981, 0.09100515395402908, 0.0948355570435524, 0.09192973375320435, 0.08889182657003403, 0.09047681838274002, 0.09259014576673508, 0.09576013684272766, 0.09787346422672272, 0.10315678268671036, 0.09166556596755981, 0.09298639744520187, 0.09259014576673508, 0.0948355570435524, 0.10289261490106583, 0.0940430611371994, 0.10130762308835983, 0.09840179979801178, 0.10249637067317963, 0.09642054885625839, 0.10460969805717468, 0.09509972482919693, 0.1010434553027153, 0.10170386731624603, 0.10447761416435242, 0.10328886657953262, 0.10579843819141388, 0.10408136248588562, 0.10487385839223862, 0.10408136248588562, 0.10579843819141388, 0.10738343745470047, 0.107647605240345, 0.10645885765552521, 0.10751552134752274, 0.10513802617788315, 0.10566636174917221, 0.11279883980751038, 0.11068551242351532, 0.11227050423622131, 0.11478008329868317, 0.11015717685222626, 0.11002509295940399, 0.11094967275857925, 0.11161009222269058, 0.10949676483869553, 0.11319508403539658, 0.1146479994058609, 0.12415797263383865, 0.11161009222269058, 0.1150442510843277, 0.11940298229455948, 0.11398758739233017, 0.11702549457550049, 0.1200634017586708, 0.11557257920503616, 0.12217672914266586, 0.11557257920503616, 0.11728965491056442, 0.1208558976650238, 0.12653546035289764, 0.11821424216032028, 0.11742173880338669, 0.12442214041948318, 0.11808215826749802, 0.12798838317394257, 0.11715757846832275, 0.12019548565149307, 0.120459645986557, 0.12402588874101639, 0.12389380484819412, 0.11940298229455948, 0.12336547672748566, 0.13010171055793762, 0.12151630967855453, 0.1266675442457199, 0.1298375427722931, 0.12389380484819412, 0.1258750557899475, 0.12719587981700897, 0.13049794733524323, 0.13155461847782135, 0.13710209727287292, 0.1336679458618164, 0.12759213149547577, 0.13247919082641602, 0.13380002975463867, 0.13591335713863373, 0.13168670237064362, 0.13459251821041107, 0.1356491893529892, 0.1320829540491104, 0.13247919082641602, 0.13815876841545105, 0.13630960881710052, 0.1406683325767517, 0.14132875204086304, 0.1468762308359146, 0.13855500519275665], "val_loss": [1.9708128656659807, 1.9706244468688965, 1.9704365730285645, 1.97024781363351, 1.9700591223580497, 1.969869818006243, 1.9696837152753557, 1.9694966588701521, 1.9693103517804826, 1.9691221373421806, 1.9689324242728097, 1.9687456403459822, 1.968557902744838, 1.9683732986450195, 1.9681852885654993, 1.9679993220738001, 1.9678117888314384, 1.9676258223397392, 1.9674386978149414, 1.96725252696446, 1.9670659473964147, 1.9668808664594377, 1.9666938100542342, 1.96651029586792, 1.9663246699741908, 1.9661383628845215, 1.9659535544259208, 1.9657677241734095, 1.9655815533229284, 1.9653969492231096, 1.9652131625584193, 1.9650281497410365, 1.9648430006844657, 1.9646588053022112, 1.9644725663321358, 1.964286940438407, 1.9641000883919852, 1.963916642325265, 1.9637304033551897, 1.963545458657401, 1.9633620807102747, 1.9631785665239607, 1.962995937892369, 1.9628120149884904, 1.9626265934535436, 1.9624427386692591, 1.962258952004569, 1.9620740073067802, 1.9618909018380302, 1.9617046628679549, 1.9615215573992049, 1.9613359996250697, 1.9611503056117467, 1.96096590587071, 1.9607823916843958, 1.9605977194649833, 1.960416385105678, 1.9602306910923548, 1.9600466319492884, 1.959862164088658, 1.959677287510463, 1.9594928196498327, 1.9593076705932617, 1.9591242926461356, 1.958941868373326, 1.9587592397417342, 1.958573477608817, 1.958392551967076, 1.9582080841064453, 1.958024024963379, 1.9578394208635603, 1.9576547486441476, 1.9574700083051408, 1.9572853360857283, 1.9571009363446916, 1.9569176946367537, 1.9567341123308455, 1.9565506662641252, 1.9563647678920202, 1.9561784608023507, 1.9559922899518694, 1.9558096613202776, 1.9556261471339635, 1.9554424285888672, 1.9552569389343262, 1.955073016030448, 1.954885823386056, 1.9547033991132463, 1.9545191356113978, 1.9543321473257882, 1.9541449546813965, 1.9539604868207658, 1.9537757464817591, 1.9535925728934151, 1.9534074919564384, 1.9532206399100167, 1.9530345371791296, 1.9528483663286482, 1.9526638303484236, 1.9524788175310408], "val_accuracy": [0.039000000804662704, 0.03999999910593033, 0.04066666588187218, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.04600000008940697, 0.047333333641290665, 0.04800000041723251, 0.04933333396911621, 0.050333332270383835, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.0573333315551281, 0.05766666680574417, 0.05900000035762787, 0.05999999865889549, 0.061000000685453415, 0.06233333423733711, 0.06433333456516266, 0.06533333659172058, 0.0663333311676979, 0.06833333522081375, 0.070333331823349, 0.07100000232458115, 0.07199999690055847, 0.07333333045244217, 0.07466666400432587, 0.07633333653211594, 0.07699999958276749, 0.07800000160932541, 0.07900000363588333, 0.07966666668653488, 0.08133333176374435, 0.08299999684095383, 0.08533333241939545, 0.08766666799783707, 0.08866667002439499, 0.08966666460037231, 0.09200000017881393, 0.09266666322946548, 0.09333333373069763, 0.0949999988079071, 0.0963333323597908, 0.09733333438634872, 0.1003333330154419, 0.10166666656732559, 0.10333333164453506, 0.10433333367109299, 0.10700000077486038, 0.10899999737739563, 0.11233333498239517, 0.1133333370089531, 0.11566666513681412, 0.11699999868869781, 0.11833333224058151, 0.11900000274181366, 0.12033333629369736, 0.12133333086967468, 0.12333333492279053, 0.12466666847467422, 0.1263333261013031, 0.1263333261013031, 0.1276666671037674, 0.12933333218097687, 0.1313333362340927, 0.13333334028720856, 0.13500000536441803, 0.13699999451637268, 0.13966666162014008, 0.14166666567325592, 0.1433333307504654, 0.1456666737794876, 0.1496666669845581, 0.1523333340883255, 0.15333333611488342, 0.1550000011920929, 0.1576666682958603, 0.15933333337306976, 0.16033333539962769, 0.1613333374261856, 0.16300000250339508, 0.16466666758060455, 0.1666666716337204, 0.16899999976158142, 0.1720000058412552, 0.17366667091846466, 0.1756666600704193, 0.179666668176651, 0.18033333122730255, 0.1836666613817215, 0.1860000044107437, 0.18833333253860474, 0.1886666715145111, 0.1899999976158142, 0.19166666269302368]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 9, 2, 9, 9], [4, 3, 3, 5, 0], [37, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 1, 1, 1], [2, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 6, 1, 3, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 0, 5, 0], [58, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 0, 1, 0, 1, 0, 0, 1], [8, 3, 6, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [2.3022779794558716, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9, 7], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 0, 1, 0, 1], [0, 7, 8, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 6, 7, 5, 2, 4, 5, 6, 6, 6, 0], [4, 0, 3, 5, 0], [0, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3024862292199924, 2.3029647580447716, 2.303488097910742, 2.304439046017293, 2.3051135788472763, 2.3056055193233327, 2.3060047495177773, 2.3063430207642615], "accuracy": [0.09549596905708313, 0.09615638852119446, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736757959638322, 1.9739603315080916, 1.9747363499232702, 1.9752429553440638, 1.9757048743111747, 1.976087978907994, 1.9763924053737096, 1.9766484669276647], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 7, 6, 1, 9], [3, 0, 3, 3, 0, 2], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 2, 1, 0, 0, 0, 0, 9, 7, 2, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [28926.84690181262, 540358.0518755779, 2502326.343580769, 6956100.493990226, 14964209.54035134, 27733429.179764893], "accuracy": [0.09708096832036972, 0.10157178342342377, 0.09959053993225098, 0.1006472036242485, 0.10117553919553757, 0.09509972482919693], "val_loss": [107960.10714285714, 853413.1785714285, 2869405.0714285714, 6788980.0, 13245158.57142857, 22871032.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [6, 6, 0, 0, 1, 9], [4, 3, 3, 5, 0], [99, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 7, 5, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [28992.621597583282, 541597.1537280412, 2508073.598599921, 6972083.088099326, 14998645.258750495, 27797358.807026815], "accuracy": [0.09708096832036972, 0.10157178342342377, 0.09959053993225098, 0.1006472036242485, 0.10117553919553757, 0.09509972482919693], "val_loss": [108206.97991071429, 855372.625, 2875996.714285714, 6804584.285714285, 13275674.57142857, 22923777.14285714], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [4, 3, 7, 0, 1, 9], [4, 0, 3, 2, 0], [0, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 9, 7, 2, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [71384370523257.67, 2.3663460695984466, 2.395472015167476, 2.46452799902742, 2.747061607907272, 5.067912009665838], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0212462970188687, 2.0398843629019603, 2.0781236376081194, 2.1868626730782643, 2.9068302427019392, 6.965684345790318], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [24516.461892739797, 7080938.0121516315, 12747675.523444723, 12988454.94980848, 13712563.987055872, 13551162.948883899], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [516060.375, 13267516.285714285, 13027140.57142857, 9926843.714285715, 9926837.142857144, 9926831.42857143], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 3, 7, 0, 1, 9, 7], [4, 0, 2, 2, 3], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 1, 0, 1], [3, 7, 2, 2, 9, 3, 9], [2, 3, 2], [88, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.301704453596932, 2.302155373638427, 2.3048672169710684, 2.313539306296491, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09126931428909302, 0.0820235088467598, 0.07026813179254532, 0.08809932321310043, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970999104636056, 1.970999104636056, 1.9799722262791224, 1.9848262923104423, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.02033333294093609, 0.014333332888782024, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 0, 1, 1, 4, 6], [3, 0, 3, 5, 0, 4, 4, 3], [36, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 0, 1, 0, 1], [0, 2, 5, 2, 9, 3, 9], [2, 0, 2], [50, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.pow(grad, tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 0, 7, 0, 9, 9], [4, 0, 3, 3, 0], [29, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [165.25022314291084, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1669633060.5714285, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09566666930913925, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 7, 3, 1, 9, 7, 6], [4, 0, 3, 2, 0, 5, 2], [9, 49, 6], [1, 1, 0], [0], [8], [3], [64], [0, 0, 1, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(sigma)))", "other_info": {"loss": [2.301704453596932, 2.302155373638427, 2.3019834510748804, 2.302025835291427, 2.302909261152776, 2.3025043467646498], "accuracy": [0.09549596905708313, 0.09126931428909302, 0.08994849026203156, 0.09377889335155487, 0.08994849026203156, 0.08611807972192764], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 9, 7, 0, 1, 9], [5, 0, 3, 5, 0], [29, 49, 6], [0, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301704453596932, 2.302155373638427, 2.3019834510748804, 2.302025835291427, 2.302909261152776, 2.3025043467646498], "accuracy": [0.09549596905708313, 0.09126931428909302, 0.08994849026203156, 0.09377889335155487, 0.08994849026203156, 0.08611807972192764], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 5, 0, 1, 9, 5], [3, 0, 2, 5, 0], [9, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [88, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301704453596932, 2.302155373638427, 2.3019834510748804, 2.302025835291427, 2.302909261152776, 2.3025043467646498], "accuracy": [0.09549596905708313, 0.09126931428909302, 0.08994849026203156, 0.09377889335155487, 0.08994849026203156, 0.08611807972192764], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]