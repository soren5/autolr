[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [26, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7705714106559753, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2940510656729414, 2.269751594775483, 2.2440353561275908, 2.212503659364617, 2.171143286263765, 2.115357476864131, 2.04521114223779, 1.9560949302321144, 1.8452063733560533, 1.7347113086468413, 1.6143781798721353, 1.5133300546673327, 1.4246514073893253, 1.3480632690752912, 1.2865500016817721, 1.2311621776519592, 1.1766096241580277, 1.1456976099855722, 1.1014014799455374, 1.077939159992018, 1.0581916495242438, 1.0305445208572803, 1.002361891307788, 0.9863371602170393, 0.9708526195898473, 0.949751626451679, 0.9322923943272451, 0.9188359733963718, 0.9080882855473161, 0.9020103365753651, 0.8884310298796737, 0.8795702081740004, 0.8650577494796116, 0.8578528186050247, 0.8429057910898657, 0.8375695710562602, 0.8332256607690649, 0.8279236339700851, 0.8251210924121352, 0.8250210125763434, 0.8141774793090664, 0.7953215477693634, 0.7898910861635063, 0.7915673550597713, 0.7872252225356252, 0.7855309270959032, 0.768842190555247, 0.7622861337069712, 0.7625330391025908, 0.7658179871961347, 0.7496149255111154, 0.7435314403375725, 0.7457206369296608, 0.7400793515538432, 0.7386635522155273, 0.727816845479186, 0.7297698818398126, 0.7411197710739481, 0.7183698695081651, 0.7183278164827687, 0.7167400876292621, 0.7155975380656805, 0.7065123461571667, 0.712038041286937, 0.7082997547904687, 0.7011435007721505, 0.7035421301439658, 0.7013520194854026], "accuracy": [0.1162329912185669, 0.1760665625333786, 0.24118345975875854, 0.2899220585823059, 0.33522653579711914, 0.3677189350128174, 0.3929467797279358, 0.421740859746933, 0.4535728394985199, 0.4651961326599121, 0.48910316824913025, 0.5127459764480591, 0.5303130149841309, 0.5473517179489136, 0.5632016658782959, 0.5735041499137878, 0.5898824334144592, 0.5992603302001953, 0.6170915365219116, 0.6230352520942688, 0.6293752193450928, 0.637828528881073, 0.6468101739883423, 0.6505085229873657, 0.657508909702301, 0.6631884574890137, 0.6699247360229492, 0.672170102596283, 0.684982180595398, 0.6773213744163513, 0.6775855422019958, 0.6864351034164429, 0.6948884129524231, 0.6889446377754211, 0.7020208835601807, 0.6991150379180908, 0.7004358768463135, 0.7041342258453369, 0.7003037929534912, 0.6992471218109131, 0.709549605846405, 0.7062475085258484, 0.7136441469192505, 0.7112666964530945, 0.711530864238739, 0.713379979133606, 0.7202483415603638, 0.7232862114906311, 0.718399167060852, 0.724210798740387, 0.7263241410255432, 0.726192057132721, 0.7314753532409668, 0.7310791015625, 0.7321357727050781, 0.7375511527061462, 0.7358341217041016, 0.7279091477394104, 0.739928662776947, 0.7371549606323242, 0.7375511527061462, 0.733060359954834, 0.7423061728477478, 0.7424382567405701, 0.7386078238487244, 0.744419515132904, 0.7445515990257263, 0.7440232634544373], "val_loss": [1.94890410559518, 1.926034791128976, 1.898777689252581, 1.8641016142708915, 1.8178842408316476, 1.7572409084865026, 1.679023095539638, 1.5813941274370467, 1.468073776790074, 1.3518672330038888, 1.236971718924386, 1.1375181334359306, 1.0543716294424874, 0.9848390987941197, 0.9294751712254116, 0.8837613718850272, 0.8444215910775321, 0.8122239623750959, 0.7856205872126988, 0.764227066721235, 0.7438336610794067, 0.7257027115140643, 0.7086209399359567, 0.6969590016773769, 0.6847019195556641, 0.6713918788092477, 0.6608976977212089, 0.6518335683005196, 0.6442352022443499, 0.6348535333360944, 0.6268048456736973, 0.6205441611153739, 0.6121847799846104, 0.6061824900763375, 0.6012101684297834, 0.5936604057039533, 0.5906862871987479, 0.5848230293818882, 0.5825626509530204, 0.5769397871834892, 0.572993346623012, 0.5689469746180943, 0.5633669410433088, 0.5611741372517177, 0.5573725189481463, 0.5534555571419852, 0.5527590683528355, 0.5490498202187675, 0.546134386743818, 0.5420232500348773, 0.5392273323876517, 0.5356420448848179, 0.5353837524141584, 0.5307676451546806, 0.5284190859113421, 0.5292096478598458, 0.5233286619186401, 0.5247601440974644, 0.5201271602085659, 0.518938558442252, 0.5167695965085711, 0.5144022021974836, 0.5119737897600446, 0.5106711728232247, 0.5099434682301113, 0.5110012122562954, 0.5048109803880964, 0.5033788340432304], "val_accuracy": [0.22033333778381348, 0.3503333330154419, 0.3916666805744171, 0.43933331966400146, 0.4646666646003723, 0.4893333315849304, 0.5260000228881836, 0.5460000038146973, 0.5649999976158142, 0.5916666388511658, 0.6079999804496765, 0.6359999775886536, 0.6513333320617676, 0.6726666688919067, 0.6813333630561829, 0.6893333196640015, 0.6933333277702332, 0.7009999752044678, 0.7056666612625122, 0.7066666483879089, 0.7160000205039978, 0.7143333554267883, 0.721666693687439, 0.7263333201408386, 0.7260000109672546, 0.7300000190734863, 0.734000027179718, 0.7369999885559082, 0.7326666712760925, 0.7413333058357239, 0.7493333220481873, 0.7486666440963745, 0.7509999871253967, 0.7566666603088379, 0.753000020980835, 0.7559999823570251, 0.7603333592414856, 0.7596666812896729, 0.753333330154419, 0.7603333592414856, 0.762333333492279, 0.7606666684150696, 0.7689999938011169, 0.7643333077430725, 0.7633333206176758, 0.7713333368301392, 0.7643333077430725, 0.7670000195503235, 0.7746666669845581, 0.7710000276565552, 0.7760000228881836, 0.7739999890327454, 0.7680000066757202, 0.7743333578109741, 0.7776666879653931, 0.7723333239555359, 0.7793333530426025, 0.7793333530426025, 0.7803333401679993, 0.7793333530426025, 0.778333306312561, 0.7789999842643738, 0.7850000262260437, 0.7833333611488342, 0.7816666960716248, 0.7836666703224182, 0.7839999794960022, 0.7820000052452087]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 5, 0, 2], [26, 55, 84], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7514285445213318, "mapping_values": [1, 5, 5, 3, 2, 0, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.299534729773799, 2.288287461662116, 2.2783899679160027, 2.2682159196714826, 2.257364119678488, 2.244669504893722, 2.233077828689825, 2.2193956027461113, 2.2032465743602874, 2.186570662800914, 2.167137352986626, 2.144868300276315, 2.1214463086947632, 2.0920554043169366, 2.0590256186303777, 2.026347227226301, 1.9845170224615138, 1.942830533399369, 1.8943480360918923, 1.849179396539899, 1.8062663135936687, 1.748934430043774, 1.6992747088338973, 1.6458174134950911, 1.5959309792206855, 1.5457448164359564, 1.5053706379331036, 1.4654502819053974, 1.4282989336782679, 1.4002864439851808, 1.367900906521111, 1.3350793649617785, 1.3071823450300624, 1.277883495999176, 1.2588289358108555, 1.2285126809824443, 1.2116238520901517, 1.1938218252927462, 1.1817343368380375, 1.1696521065191365, 1.1499589561014727, 1.1241498967801669, 1.1067104374397196, 1.0987696018768198, 1.089896302228874, 1.0775041733876416, 1.0547308248457041, 1.043590073509302, 1.0424791531492894, 1.0341047177288305, 1.0128617404458578, 1.0017870340160233, 0.9945319107164245, 0.9910434144142518, 0.9774924339225909, 0.9643708434969033, 0.962303413942962, 0.9748330396935767, 0.94495941293301, 0.9469476931555837, 0.9362679967286958, 0.9355258333164986, 0.9215392469966165, 0.9318048059979702, 0.9148852082999973, 0.9064516147854242, 0.9054986174474098, 0.9059020172902511, 0.8950603156514282, 0.8813980820550265, 0.8848968912597504, 0.8735889520910926, 0.8840050023103734, 0.8686966626730105, 0.8682094333572096, 0.864124047127949, 0.8594965211719396, 0.856380803347925, 0.8547990408713366, 0.8398690536006126, 0.8460704442248951, 0.8400646038200908, 0.8475753871551547, 0.8397478964098567, 0.8315816956693155, 0.8368079917006693, 0.8293279794071486, 0.8201248424321811, 0.8127462059247605, 0.8165805890355143, 0.8159485242511965, 0.815095328045496, 0.8065623759262912, 0.7988388368151585, 0.8004728102287234, 0.7972087917027456, 0.7964831110965369, 0.793176699851435, 0.793225297641603, 0.7907867549338345], "accuracy": [0.1026284471154213, 0.12310130894184113, 0.1534803807735443, 0.18451987206935883, 0.20961563289165497, 0.23801347613334656, 0.25544843077659607, 0.2847708463668823, 0.2996962070465088, 0.3206973969936371, 0.334169864654541, 0.33945319056510925, 0.3663980960845947, 0.38185179233551025, 0.387399286031723, 0.39149385690689087, 0.41262713074684143, 0.41962751746177673, 0.43970412015914917, 0.4441949427127838, 0.4601770043373108, 0.46572446823120117, 0.4733852744102478, 0.4934619069099426, 0.4991414546966553, 0.5116893649101257, 0.5139347314834595, 0.5296525955200195, 0.5355963706970215, 0.5350680351257324, 0.5436534285545349, 0.5550125241279602, 0.5534275770187378, 0.5621450543403625, 0.5680887699127197, 0.577070415019989, 0.5810328722000122, 0.5888257622718811, 0.5852595567703247, 0.5927882790565491, 0.6003170013427734, 0.6058644652366638, 0.6132611036300659, 0.6110157370567322, 0.6145819425582886, 0.625148594379425, 0.6370360851287842, 0.6384889483451843, 0.6312243938446045, 0.6380926966667175, 0.6427156329154968, 0.6441685557365417, 0.6513010263442993, 0.6473385095596313, 0.6534143686294556, 0.6619997620582581, 0.6635847091674805, 0.6520935297012329, 0.6653017997741699, 0.6674151420593262, 0.6641130447387695, 0.6668868064880371, 0.6736230254173279, 0.6693964004516602, 0.6728305220603943, 0.678642213344574, 0.6794346570968628, 0.6782459616661072, 0.6757363677024841, 0.683000922203064, 0.6806234121322632, 0.6885483860969543, 0.6827367544174194, 0.6860388517379761, 0.6848500967025757, 0.693831741809845, 0.694360077381134, 0.6954167485237122, 0.6884163022041321, 0.702681303024292, 0.698718786239624, 0.7008321285247803, 0.6940959095954895, 0.6980583667755127, 0.6999075412750244, 0.6992471218109131, 0.7003037929534912, 0.7049266695976257, 0.709021270275116, 0.7021529674530029, 0.7038700580596924, 0.7082287669181824, 0.7069079279899597, 0.7079645991325378, 0.711530864238739, 0.7062475085258484, 0.7160216569900513, 0.7141724824905396, 0.7117950320243835, 0.7147008180618286], "val_loss": [1.9614214897155762, 1.9520750726972307, 1.9425499779837472, 1.932582242148263, 1.921936103275844, 1.9105252538408553, 1.8978899547031947, 1.8838986669267928, 1.8678734643118722, 1.850013051714216, 1.829627854483468, 1.8069103785923548, 1.7814430509294783, 1.7528492382594518, 1.7207355499267578, 1.6852529389517648, 1.6457709584917342, 1.6028705324445451, 1.556537389755249, 1.508272988455636, 1.4588233402797155, 1.407850742340088, 1.3568222522735596, 1.3063396045139857, 1.2577477182660783, 1.2109037467411585, 1.167178017752511, 1.1267805780683244, 1.0895309107644218, 1.0556463854653495, 1.02491181237357, 0.9965988908495221, 0.9699743134634835, 0.9461266994476318, 0.923504182270595, 0.9024997098105294, 0.8845307145799909, 0.8669707775115967, 0.8513110365186419, 0.8372161218098232, 0.8239221743174961, 0.8108693531581334, 0.7979361159460885, 0.7866725921630859, 0.7764427321297782, 0.7669123922075544, 0.7572844539369855, 0.7484050478254046, 0.7403910670961652, 0.7325935874666486, 0.7251046044485909, 0.7177330255508423, 0.7109541893005371, 0.704412613596235, 0.6981786659785679, 0.6929567371095929, 0.6862917627607074, 0.6827074289321899, 0.6773530926023211, 0.6729616607938494, 0.6673887116568429, 0.6629934821810041, 0.6582180091312954, 0.6541259459086827, 0.6507314613887242, 0.647443345614842, 0.6425234079360962, 0.6392303534916469, 0.635300704411098, 0.6308725050517491, 0.6285398857934135, 0.624536395072937, 0.6221562453678676, 0.6191216707229614, 0.6165915897914341, 0.6137188843318394, 0.6102511882781982, 0.6084410973957607, 0.6056163651602608, 0.6033281087875366, 0.6008311680385044, 0.5977114609309605, 0.5955183335712978, 0.5944338526044574, 0.5917390244347709, 0.5890614305223737, 0.5875960418156215, 0.5851836545126778, 0.5825665848595756, 0.5813322067260742, 0.5784571511404855, 0.577050907271249, 0.5747725112097604, 0.5727744102478027, 0.5713814326695034, 0.5697268077305385, 0.5681237833840507, 0.5667377880641392, 0.5650871992111206, 0.5642388207571847], "val_accuracy": [0.10166666656732559, 0.19300000369548798, 0.2773333191871643, 0.32600000500679016, 0.359333336353302, 0.37966665625572205, 0.4000000059604645, 0.4169999957084656, 0.43299999833106995, 0.4503333270549774, 0.4636666774749756, 0.47566667199134827, 0.49000000953674316, 0.5049999952316284, 0.5189999938011169, 0.5293333530426025, 0.5373333096504211, 0.5479999780654907, 0.5563333630561829, 0.5619999766349792, 0.5723333358764648, 0.5793333053588867, 0.5866666436195374, 0.5953333377838135, 0.6016666889190674, 0.612333357334137, 0.6259999871253967, 0.6396666765213013, 0.6499999761581421, 0.6606666445732117, 0.6683333516120911, 0.6733333468437195, 0.675000011920929, 0.6793333292007446, 0.6840000152587891, 0.6880000233650208, 0.6893333196640015, 0.6913333535194397, 0.6923333406448364, 0.6946666836738586, 0.6966666579246521, 0.6983333230018616, 0.703000009059906, 0.7043333053588867, 0.7049999833106995, 0.7076666951179504, 0.7086666822433472, 0.7099999785423279, 0.7133333086967468, 0.715666651725769, 0.7176666855812073, 0.7183333039283752, 0.7200000286102295, 0.7206666469573975, 0.7226666808128357, 0.722000002861023, 0.7266666889190674, 0.7269999980926514, 0.7293333411216736, 0.7306666374206543, 0.7329999804496765, 0.734666645526886, 0.7360000014305115, 0.7366666793823242, 0.7393333315849304, 0.737666666507721, 0.7400000095367432, 0.7403333187103271, 0.7409999966621399, 0.7446666955947876, 0.7426666617393494, 0.7463333606719971, 0.746999979019165, 0.7463333606719971, 0.746666669845581, 0.749666690826416, 0.7523333430290222, 0.7509999871253967, 0.7506666779518127, 0.7513333559036255, 0.753000020980835, 0.7543333172798157, 0.7556666731834412, 0.7523333430290222, 0.7526666522026062, 0.7570000290870667, 0.7546666860580444, 0.7549999952316284, 0.7599999904632568, 0.7599999904632568, 0.7643333077430725, 0.7630000114440918, 0.7593333125114441, 0.765666663646698, 0.762333333492279, 0.7606666684150696, 0.7663333415985107, 0.7673333287239075, 0.7689999938011169, 0.765999972820282]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.21057142317295074, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3325813518239995, 2.223824657862921, 2.3069346738041134, 2.306531486698917, 2.2988863348126363, 2.2617626068945085, 2.290618447264849, 2.3156919349941987, 2.3047991989940906, 2.3030002318699565], "accuracy": [0.19482234120368958, 0.2114647924900055, 0.10830801725387573, 0.12930920720100403, 0.12270505726337433, 0.18214239180088043, 0.15876370668411255, 0.09721305221319199, 0.09377889335155487, 0.09642054885625839], "val_loss": [1.5902392864227295, 1.9890304974147253, 1.9523754119873047, 1.9749039922441756, 1.891594341823033, 1.976539475577218, 2.0065969058445523, 1.9761500358581543, 1.9741195269993372, 1.9735133307320731], "val_accuracy": [0.26499998569488525, 0.10300000011920929, 0.19733333587646484, 0.09833333641290665, 0.28433331847190857, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 7, 9, 1, 9], [0, 3, 0, 2], [48, 53, 23, 51], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [3, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 4, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 8, 7, 9, 1, 9], [0, 3, 0, 2], [26, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031558548659383, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 2, 0, 2], [26, 55, 72], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 7, 7, 4, 3, 3, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8953421323086213, 5471630.830473455, 152901.4172879398, 2.3025851429508597, 2.3025851429508597, 808203073398.2773], "accuracy": [0.10011887550354004, 0.10170386731624603, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.10051512718200684], "val_loss": [267.92088099888394, 744426.0357142857, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 4, 7, 0, 6, 9], [2, 3, 0, 2], [48, 55], [1, 1, 0], [1], [8], [2], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025361963818023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 3, 2, 3, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [26, 55], [0, 0, 0], [1, 1], [4], [1], [], [1, 1, 0, 1, 1], [3, 4, 5, 2, 9], [1, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 8, 5, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 7, 0, 6, 9], [1, 3, 0, 2], [44, 53, 23, 51], [0, 1, 0], [1], [8], [5], [], [0, 1, 1, 1, 1], [3, 4, 5, 2, 9], [3, 0, 3], [94, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 9, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 1, 7, 0, 6, 9], [0, 0, 2, 3, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [26, 84], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025361963818023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1], [9, 4, 7, 0, 6, 9], [0, 3, 0, 2], [26, 55], [0, 0, 0, 0], [0, 0, 1, 1], [8, 4], [7, 4], [], [0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 5, 2, 9, 6], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 4, 4, 2, 2, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), sigma)), tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 4, 2, 3, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [26, 55], [0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0], [6, 0, 6, 9], [7], [51], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 6, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3868335.40387804, 923735152297338.2, 2.377930520571293e+23, 4.440404227380875e+31, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [444567332.5714286, 9.854180303980837e+16, 2.156324901561106e+25, 4.857766199535815e+33, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [26, 7], [0, 1, 0], [0, 1], [2], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 4, 7, 0, 6, 9], [5, 3, 0, 2], [14, 53, 23, 51], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 8, 7, 9, 1, 9], [0, 3, 0, 2], [14, 53, 23, 51], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [6, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3024166546099694, 2.3025847650585143, 2.3025852059329175, 2.3025851744418886, 2.3025851429508597, 2.3025852374239464], "accuracy": [0.09377889335155487, 0.09813763201236725, 0.09998679161071777, 0.09325055778026581, 0.09998679161071777, 0.09615638852119446], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644460950579], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 1, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 1, 1, 1, 1, 0, 1, 1, 1], [6, 4, 7, 0, 6, 9], [0, 3, 0, 2], [98, 55], [0, 1, 0], [0], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3037558939667613, 2.302290459067169, 2.3023711742899438, 2.302493956331186, 2.3021409949921283, 2.300872012057624], "accuracy": [0.09166556596755981, 0.09074098616838455, 0.09087307006120682, 0.08889182657003403, 0.0882314071059227, 0.09628847241401672], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 4, 7, 0, 6, 9], [0, 0, 2, 3, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [26, 55], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 3, 1, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3037558939667613, 2.302290459067169, 2.3023711742899438, 2.302493956331186, 2.3021409949921283, 2.300872012057624], "accuracy": [0.09166556596755981, 0.09074098616838455, 0.09087307006120682, 0.08889182657003403, 0.0882314071059227, 0.09628847241401672], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 8, 7, 9, 1, 9], [3, 3, 0, 2], [14, 53, 23, 51], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 0, 4, 4, 2, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3037558939667613, 2.302290459067169, 2.3023711742899438, 2.302493956331186, 2.3021409949921283, 2.300872012057624], "accuracy": [0.09166556596755981, 0.09074098616838455, 0.09087307006120682, 0.08889182657003403, 0.0882314071059227, 0.09628847241401672], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [0, 3, 0, 2], [14, 53, 23, 51], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3037558939667613, 2.302290459067169, 2.3023711742899438, 2.302493956331186, 2.3021409949921283, 2.300872012057624], "accuracy": [0.09166556596755981, 0.09074098616838455, 0.09087307006120682, 0.08889182657003403, 0.0882314071059227, 0.09628847241401672], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [3, 2, 2, 3, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [26, 55], [0, 0, 0], [0, 1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, beta), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037558939667613, 2.302290459067169, 2.3023711742899438, 2.302493956331186, 2.3021409949921283, 2.300872012057624], "accuracy": [0.09166556596755981, 0.09074098616838455, 0.09087307006120682, 0.08889182657003403, 0.0882314071059227, 0.09628847241401672], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]