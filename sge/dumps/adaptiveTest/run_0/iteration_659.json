[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8479999899864197, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043829318208308, 1.0978495100265355, 0.7965912123035682, 0.6865456119787896, 0.6303361122240685, 0.5783258551667001, 0.5485693514858806, 0.521133268750213, 0.4935600078573568, 0.4759555935324333, 0.4517538404074233, 0.44688136850239785, 0.4275067706685009, 0.4020965507497814, 0.39706937580407176, 0.3902799845560588, 0.3568891334558884, 0.3532327043814918, 0.34489571868294755, 0.3363500961286202, 0.3201009383440616, 0.3139900094946976, 0.30268690837545953, 0.3034841565132582, 0.31097281435776414, 0.29153380746996366, 0.2810560969935747, 0.2711798687219588, 0.27132932758720213, 0.2611759060748013, 0.25044132050718726, 0.2519400946657183, 0.2423186971900832, 0.23354165906509972, 0.2251090896112288, 0.21370956320583764, 0.21858611762161503, 0.21669085743231717, 0.20182315478148855, 0.20135598527071988, 0.2024979467531158], "accuracy": [0.31079116463661194, 0.6086382269859314, 0.7077004313468933, 0.7396644949913025, 0.7667415142059326, 0.7827235460281372, 0.7955356240272522, 0.8074230551719666, 0.819970965385437, 0.8244617581367493, 0.8380662798881531, 0.833179235458374, 0.8418967127799988, 0.8582749962806702, 0.8565579056739807, 0.8561616539955139, 0.8722757697105408, 0.8692378997802734, 0.8732003569602966, 0.8750495314598083, 0.8815215826034546, 0.8862766027450562, 0.8854840993881226, 0.8857482671737671, 0.8821820020675659, 0.8949940800666809, 0.8968431949615479, 0.89552241563797, 0.8960506916046143, 0.9031832218170166, 0.9058248400688171, 0.9046360850334167, 0.9080702662467957, 0.9084665179252625, 0.9162594079971313, 0.9181085824966431, 0.9165235757827759, 0.9166556596755981, 0.9270902276039124, 0.9223352074623108, 0.9260335564613342], "val_loss": [0.9159036704472133, 0.6530651875904628, 0.5557406970432827, 0.5120189189910889, 0.4813307523727417, 0.4473041125706264, 0.42772973435265677, 0.4089879478727068, 0.4059867092541286, 0.38217722518103464, 0.3681361675262451, 0.35674950054713656, 0.34526413679122925, 0.3407782997403826, 0.3377312251499721, 0.3261480586869376, 0.32161453792027067, 0.32262798718043734, 0.310461231640407, 0.3085704616137913, 0.3101659502301897, 0.3038696731839861, 0.30769444363457815, 0.30534217187336515, 0.2943569677216666, 0.2989588975906372, 0.2867763638496399, 0.2944335341453552, 0.29469173295157297, 0.2861117550304958, 0.30362050022397724, 0.2963792937142508, 0.2950598767825535, 0.296487101486751, 0.2903170585632324, 0.29410687514713835, 0.2891039252281189, 0.2901089702333723, 0.29922216279166086, 0.30600874764578684, 0.2895704082080296], "val_accuracy": [0.6626666784286499, 0.7246666550636292, 0.753333330154419, 0.7676666378974915, 0.7736666798591614, 0.7893333435058594, 0.8076666593551636, 0.8183333277702332, 0.8186666369438171, 0.8349999785423279, 0.8370000123977661, 0.8483333587646484, 0.8550000190734863, 0.846666693687439, 0.8476666808128357, 0.8546666502952576, 0.8613333106040955, 0.8529999852180481, 0.8583333492279053, 0.8619999885559082, 0.8613333106040955, 0.8696666955947876, 0.8656666874885559, 0.8646666407585144, 0.8730000257492065, 0.8696666955947876, 0.8733333349227905, 0.8756666779518127, 0.8730000257492065, 0.878333330154419, 0.8683333396911621, 0.8733333349227905, 0.8809999823570251, 0.8769999742507935, 0.8806666731834412, 0.8853333592414856, 0.8846666812896729, 0.8806666731834412, 0.8803333044052124, 0.8806666731834412, 0.8853333592414856]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 6, 8, 8, 9, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8345714211463928, "mapping_values": [1, 7, 7, 6, 1, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0429038960526507, 1.0851149201125454, 0.7864644717483662, 0.6816412194797691, 0.6224954067881333, 0.5759374298486948, 0.5465131648354259, 0.5195164108092145, 0.49765812853512875, 0.47676775785658293, 0.45276766752507064, 0.4438451455017642, 0.4263550089122345, 0.4045140080408823, 0.3965449965806323, 0.3926528299552354, 0.36526368115761054, 0.3676095871310649, 0.3535338984213139, 0.3398133611965646, 0.3282412094659557, 0.32203011505041046, 0.3082600219563691, 0.299225885819104, 0.30848228684616064, 0.29105243968957323, 0.2864723210211333, 0.2757136479636162, 0.27650149875132163, 0.2650194079168028, 0.24933741668692166, 0.2524660390523352, 0.2406774775608892, 0.23752275353937008, 0.23007023902522605, 0.2183690026979153, 0.22355930668968235, 0.2191976447107612, 0.2074210746724293, 0.20102602566403327, 0.2087027570669441, 0.1996414477795091, 0.19974134256417458, 0.1957226274878263, 0.1803353307659222, 0.17295471265008658, 0.1802358041448427, 0.17457824890930984, 0.16803353212024905, 0.16287121573900265, 0.15082147966648657, 0.15211779406049925, 0.1515956049121492, 0.14840078265706955, 0.15220749415009485], "accuracy": [0.3109232485294342, 0.6100911498069763, 0.7135120630264282, 0.7432307600975037, 0.7663452625274658, 0.785101056098938, 0.7980451583862305, 0.8055738806724548, 0.817461371421814, 0.8239334225654602, 0.8339717388153076, 0.8352925777435303, 0.8426892161369324, 0.8569541573524475, 0.8558974862098694, 0.8531237840652466, 0.8677849769592285, 0.8676528930664062, 0.8673887252807617, 0.8751816153526306, 0.8772949576377869, 0.8833707571029663, 0.8840311765670776, 0.8894465565681458, 0.8845595121383667, 0.8928807377815247, 0.89552241563797, 0.895918607711792, 0.8956544995307922, 0.9001452922821045, 0.9043719172477722, 0.9063531756401062, 0.9063531756401062, 0.9063531756401062, 0.9125610589981079, 0.91559898853302, 0.9140139818191528, 0.9152027368545532, 0.9196935892105103, 0.921938955783844, 0.9211464524269104, 0.9204860925674438, 0.9232597947120667, 0.9240522980690002, 0.9310526847839355, 0.9323735237121582, 0.9277506470680237, 0.9322414398193359, 0.9330339431762695, 0.934751033782959, 0.9418835043907166, 0.9421476721763611, 0.9409589171409607, 0.9408268332481384, 0.9408268332481384], "val_loss": [0.9136455740247454, 0.6478455066680908, 0.550946729523795, 0.5057139226368496, 0.48184033802577425, 0.4436653341565813, 0.42542400530406405, 0.41379445791244507, 0.4071587920188904, 0.3839809468814305, 0.3710587365286691, 0.35844939947128296, 0.3450521230697632, 0.34446425097329275, 0.33425961221967426, 0.3315969024385725, 0.321118916784014, 0.3327142170497349, 0.3152144466127668, 0.30969488620758057, 0.31313606670924593, 0.30225710357938496, 0.3070054224559239, 0.3131969060216631, 0.2941997562135969, 0.2999055300440107, 0.298734188079834, 0.29345950910023283, 0.2908946956907, 0.2935964379991804, 0.2907329968043736, 0.28476096051079886, 0.2959749102592468, 0.2901300958224705, 0.292665387902941, 0.2921059216771807, 0.2897477320262364, 0.29352580649512156, 0.301702082157135, 0.3065649952207293, 0.2911048105784825, 0.3039641295160566, 0.307974066053118, 0.2949883426938738, 0.29544126987457275, 0.2936438832964216, 0.3072975277900696, 0.3075775759560721, 0.3079775060926165, 0.30817086356026785, 0.30836689472198486, 0.31760914836611065, 0.33480063506535124, 0.31536225761686054, 0.31590384244918823], "val_accuracy": [0.656000018119812, 0.7289999723434448, 0.7573333382606506, 0.7670000195503235, 0.7730000019073486, 0.8003333210945129, 0.8116666674613953, 0.8199999928474426, 0.8180000185966492, 0.8333333134651184, 0.8336666822433472, 0.8463333249092102, 0.8519999980926514, 0.843999981880188, 0.8519999980926514, 0.8486666679382324, 0.8556666374206543, 0.8493333458900452, 0.8619999885559082, 0.8606666922569275, 0.8650000095367432, 0.8690000176429749, 0.8656666874885559, 0.8690000176429749, 0.8700000047683716, 0.8690000176429749, 0.871666669845581, 0.8743333220481873, 0.8743333220481873, 0.875, 0.8709999918937683, 0.878000020980835, 0.8769999742507935, 0.878000020980835, 0.8790000081062317, 0.8816666603088379, 0.8813333511352539, 0.8799999952316284, 0.8786666393280029, 0.8799999952316284, 0.8823333382606506, 0.8790000081062317, 0.8793333172798157, 0.8853333592414856, 0.8870000243186951, 0.8853333592414856, 0.8796666860580444, 0.8889999985694885, 0.8849999904632568, 0.8893333077430725, 0.8866666555404663, 0.887666642665863, 0.8856666684150696, 0.8883333206176758, 0.8813333511352539]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 8, 8, 3, 2, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.833142876625061, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.04382701646603, 1.0969546128415224, 0.7957359197322073, 0.6860527598925585, 0.6274506035434918, 0.5762537756631907, 0.5454460566447884, 0.5160096254031955, 0.493294045433408, 0.47552925256170603, 0.4519038580593227, 0.4425332464318092, 0.42326938839888356, 0.4066447311420136, 0.39799359195960776, 0.3906331745199854, 0.360800523677475, 0.35509734538095566, 0.35285407162660526, 0.3385720100259233, 0.3223054353051796, 0.319545677557377, 0.3016472466712174, 0.3032656865443662, 0.30833009521896027, 0.29136071001549657, 0.2759449940040489, 0.27014791038861097, 0.27628980217010213, 0.26959793291874784, 0.2497629962714908, 0.24998401898781006, 0.23909963572722825, 0.23139471224648306, 0.22994209317806108, 0.21705060045496505, 0.2233820397619873, 0.22187644499498604, 0.2074528209301207, 0.20354476578365369, 0.20414405756693602, 0.19579637045117732], "accuracy": [0.3109232485294342, 0.6086382269859314, 0.7079645991325378, 0.7427024245262146, 0.7671377658843994, 0.7876105904579163, 0.7981772422790527, 0.8092722296714783, 0.8206313848495483, 0.8264430165290833, 0.833179235458374, 0.8411042094230652, 0.8475762605667114, 0.8548408150672913, 0.8544445633888245, 0.8552370667457581, 0.869502067565918, 0.8696341514587402, 0.8683133125305176, 0.8735966086387634, 0.8819178342819214, 0.882710337638855, 0.883238673210144, 0.8861445188522339, 0.8856161832809448, 0.889578640460968, 0.8939374089241028, 0.8982961177825928, 0.8972394466400146, 0.8953903317451477, 0.9027869701385498, 0.9045040011405945, 0.9080702662467957, 0.9101836085319519, 0.9119006991386414, 0.9181085824966431, 0.9163914918899536, 0.9149385690689087, 0.9236560463905334, 0.9203540086746216, 0.9220710396766663, 0.9241843819618225], "val_loss": [0.9158165454864502, 0.6529925380434308, 0.5557693243026733, 0.5110144104276385, 0.479305624961853, 0.4455957753317697, 0.42439726420811247, 0.4084773489407131, 0.4061119130679539, 0.3816055400030954, 0.3690817356109619, 0.3515346476009914, 0.34351664781570435, 0.3437409741537912, 0.336095324584416, 0.3251031722341265, 0.32232428448540823, 0.33132163115910124, 0.31069265944617136, 0.31108068568365915, 0.3084228123937334, 0.3028904455048697, 0.3087378144264221, 0.30192190408706665, 0.2957529936517988, 0.29422017506190706, 0.2878522958074297, 0.29856166669300627, 0.28832267011914936, 0.2819735663277762, 0.29987924439566477, 0.29152813128062655, 0.2918884498732431, 0.2935451694897243, 0.28800390447889057, 0.2928806117602757, 0.28923808676855906, 0.2814531411443438, 0.2909776568412781, 0.29210916587284635, 0.2881829057421003, 0.29339201961244854], "val_accuracy": [0.6629999876022339, 0.7266666889190674, 0.7523333430290222, 0.7676666378974915, 0.7749999761581421, 0.7910000085830688, 0.8096666932106018, 0.8193333148956299, 0.8186666369438171, 0.8366666436195374, 0.8343333601951599, 0.8519999980926514, 0.8546666502952576, 0.8433333039283752, 0.8500000238418579, 0.8600000143051147, 0.8583333492279053, 0.8543333411216736, 0.8613333106040955, 0.8613333106040955, 0.862666666507721, 0.8683333396911621, 0.8640000224113464, 0.8683333396911621, 0.8696666955947876, 0.8743333220481873, 0.8740000128746033, 0.8709999918937683, 0.874666690826416, 0.8793333172798157, 0.875333309173584, 0.8776666522026062, 0.8793333172798157, 0.8790000081062317, 0.8833333253860474, 0.8833333253860474, 0.8886666893959045, 0.8820000290870667, 0.8826666474342346, 0.8823333382606506, 0.8883333206176758, 0.8826666474342346]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 8, 8, 3, 2, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8317142724990845, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043825284742865, 1.0968678093400566, 0.7954596582342054, 0.6863536271027382, 0.6287942148627953, 0.5759776834373413, 0.5449304282547162, 0.517084738542501, 0.4941790059431275, 0.47470610060822205, 0.4519078784914159, 0.442644176859787, 0.4261488039078509, 0.4052494285192, 0.39638106276755636, 0.39383432893406023, 0.36159189115693585, 0.35332912102335745, 0.3446359237651815, 0.33298552912129636, 0.3170988906557219, 0.3147744715701887, 0.30187995789104904, 0.2986673459306353, 0.3068230120048641, 0.2882367690414753, 0.27802580248221526, 0.2656499173828262, 0.27114393953649735, 0.2604114427668559, 0.24971747934314412, 0.2517982623135771, 0.23897279815517317, 0.229377489945892, 0.22921869286480298, 0.2156318457465776, 0.22568775584527356, 0.21728521218200353, 0.20740656522814277, 0.20201866293682508, 0.20456776814516808, 0.19457493344349647, 0.1998229956409604, 0.19461289449705502, 0.1794780513704445, 0.1697028527138901, 0.17481549446136566, 0.17181809933241315, 0.1632390062743804, 0.1642061930704331], "accuracy": [0.3109232485294342, 0.6079778075218201, 0.7094175219535828, 0.7427024245262146, 0.7656848430633545, 0.7844406366348267, 0.7981772422790527, 0.8082155585289001, 0.819970965385437, 0.8281601071357727, 0.8310658931732178, 0.8385946154594421, 0.8462554216384888, 0.8561616539955139, 0.8558974862098694, 0.8525954484939575, 0.868049144744873, 0.8709549307823181, 0.8712190985679626, 0.8787478804588318, 0.8831065893173218, 0.8838990926742554, 0.8878615498542786, 0.8899748921394348, 0.884691596031189, 0.893541157245636, 0.8980319499969482, 0.8986923694610596, 0.89552241563797, 0.9012019634246826, 0.9056927561759949, 0.9049002528190613, 0.9083344340324402, 0.9119006991386414, 0.91124027967453, 0.9171839952468872, 0.9169198274612427, 0.9177123308181763, 0.921938955783844, 0.919561505317688, 0.9203540086746216, 0.9269581437110901, 0.9253731369972229, 0.9272223114967346, 0.9288073182106018, 0.9359397888183594, 0.9314489364624023, 0.9306564331054688, 0.937260627746582, 0.9368643760681152], "val_loss": [0.9158380712781634, 0.6528220006397792, 0.5557015453066144, 0.5105066129139492, 0.47978717940194265, 0.4449310302734375, 0.42447125911712646, 0.40920086417879376, 0.4059591974530901, 0.3839930125645229, 0.37068344014031546, 0.35288751125335693, 0.3467766387122018, 0.34714105299540926, 0.33359213386263165, 0.33163951124463764, 0.3197407977921622, 0.32455133540289743, 0.30790230206080843, 0.3075717347008841, 0.31177590574537006, 0.30364842074257986, 0.30934020451136995, 0.3058930550302778, 0.292948203427451, 0.2965773173740932, 0.2910699078014919, 0.29156460080827984, 0.2893956218447004, 0.2870046922138759, 0.30037340947559904, 0.2893908619880676, 0.2910634023802621, 0.30108118057250977, 0.2920087320463998, 0.2919928857258388, 0.2961323176111494, 0.29565335171563284, 0.29597508907318115, 0.3092090742928641, 0.2909970794405256, 0.30207278047289166, 0.3048049637249538, 0.3004541482244219, 0.3028900112424578, 0.29370141880852835, 0.3150255935532706, 0.31916492325919016, 0.30594476631709505, 0.31167447566986084], "val_accuracy": [0.6629999876022339, 0.7250000238418579, 0.7526666522026062, 0.7703333497047424, 0.7753333449363708, 0.7919999957084656, 0.8086666464805603, 0.8199999928474426, 0.8199999928474426, 0.8306666612625122, 0.8333333134651184, 0.8476666808128357, 0.8526666760444641, 0.8426666855812073, 0.8533333539962769, 0.8529999852180481, 0.8586666584014893, 0.8583333492279053, 0.8640000224113464, 0.8619999885559082, 0.8603333234786987, 0.8700000047683716, 0.8633333444595337, 0.8676666617393494, 0.8706666827201843, 0.8709999918937683, 0.874666690826416, 0.8763333559036255, 0.8723333477973938, 0.8756666779518127, 0.8683333396911621, 0.8763333559036255, 0.8803333044052124, 0.875333309173584, 0.8806666731834412, 0.8803333044052124, 0.878333330154419, 0.8826666474342346, 0.8796666860580444, 0.8799999952316284, 0.8843333125114441, 0.878000020980835, 0.8813333511352539, 0.8849999904632568, 0.8856666684150696, 0.8849999904632568, 0.8790000081062317, 0.8803333044052124, 0.8836666941642761, 0.8813333511352539]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 42, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [46, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8145714402198792, "mapping_values": [1, 13, 13, 10, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.050150511885489, 1.3843929237063535, 0.8578855023486754, 0.7265395529360551, 0.6541627995357884, 0.6142981111523088, 0.5762911366118951, 0.5441925288931474, 0.523238981255073, 0.49663731757723156, 0.47467096348511717, 0.4731300372048266, 0.4521848769779014, 0.42971900568000865, 0.4130537817900475, 0.40622183899397013, 0.3882144610950456, 0.36753436465619843, 0.3674222990002504, 0.355141927860259, 0.3493937956595607, 0.3467474560011112, 0.33347325618823503, 0.33155667600756417, 0.3419178060103779, 0.30979879566738555, 0.30706421653230226, 0.2984378519484616, 0.30881148374800227, 0.27907939916352364, 0.2611980159379362, 0.2827152292395564, 0.2648860605015589, 0.26597251050964466, 0.2599290868393135, 0.2445050130379655, 0.2497020594518828, 0.2445027018582202, 0.23823660738464075, 0.24041768794345691], "accuracy": [0.32624489068984985, 0.5223880410194397, 0.6767930388450623, 0.7277770638465881, 0.752212405204773, 0.7697794437408447, 0.7852331399917603, 0.8001585006713867, 0.804649293422699, 0.8149517774581909, 0.8234050869941711, 0.8259146809577942, 0.8319904804229736, 0.8413683772087097, 0.8491612672805786, 0.8529917001724243, 0.8570862412452698, 0.8650112152099609, 0.8643507957458496, 0.8725399374961853, 0.8693699836730957, 0.8745211958885193, 0.878351628780365, 0.8786157965660095, 0.8754457831382751, 0.8860124349594116, 0.8906353116035461, 0.8891823887825012, 0.8796724081039429, 0.895918607711792, 0.8982961177825928, 0.8912957310676575, 0.9012019634246826, 0.9013340473175049, 0.9070135951042175, 0.9100515246391296, 0.9037115573883057, 0.9066173434257507, 0.9066173434257507, 0.9074098467826843], "val_loss": [1.3440711498260498, 0.7024226529257638, 0.5735753774642944, 0.5318628719874791, 0.47709723881312777, 0.45438192571912495, 0.4451397316796439, 0.42542931011744906, 0.3950777053833008, 0.3865457092012678, 0.3863752228873117, 0.36228476251874653, 0.3769129088946751, 0.3629147069794791, 0.3336142471858433, 0.33915625299726215, 0.3443930574825832, 0.3473850062915257, 0.3356407880783081, 0.3295224905014038, 0.3099070361682347, 0.31932638372693745, 0.29999999489103046, 0.3106581653867449, 0.30622609172548565, 0.29699937786374775, 0.3006764565195356, 0.313144930771419, 0.2991987296513149, 0.2956323112760271, 0.30047025850840975, 0.2931890998567854, 0.2974911332130432, 0.2978816883904593, 0.2874497856412615, 0.3059071557862418, 0.300504846232278, 0.3040491853441511, 0.3089618171964373, 0.3125585743359157], "val_accuracy": [0.4586666524410248, 0.7006666660308838, 0.7363333106040955, 0.7480000257492065, 0.781000018119812, 0.7903333306312561, 0.7953333258628845, 0.8130000233650208, 0.8230000138282776, 0.8270000219345093, 0.8246666789054871, 0.8379999995231628, 0.8333333134651184, 0.8373333215713501, 0.8503333330154419, 0.8476666808128357, 0.8503333330154419, 0.843999981880188, 0.8533333539962769, 0.859666645526886, 0.8663333058357239, 0.8613333106040955, 0.8676666617393494, 0.8586666584014893, 0.8673333525657654, 0.8693333268165588, 0.8713333606719971, 0.859333336353302, 0.8693333268165588, 0.874666690826416, 0.8700000047683716, 0.8740000128746033, 0.8723333477973938, 0.8773333430290222, 0.8793333172798157, 0.875, 0.8773333430290222, 0.8773333430290222, 0.8740000128746033, 0.871999979019165]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8102856874465942, "mapping_values": [1, 9, 9, 6, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2116774969789974, 1.6317086029739238, 1.210741518290445, 1.0122788782605343, 0.888908801423938, 0.8543156545474907, 0.7723129047000917, 0.7833896637073109, 0.7483322571738206, 0.7274570986658055, 0.7071395906726871, 0.6963623109715348, 0.6910605153167063, 0.6538415215806151, 0.6793501403479449, 0.651125107750271, 0.6355397979801578, 0.6323432190511772, 0.6164456740377948, 0.6274817369444307, 0.5955637177188462, 0.5858803281395458, 0.5899419762580906, 0.5809333613205108, 0.5829154692935654, 0.58712017663702, 0.5573673787496156, 0.5569324667474865, 0.5549520241145083, 0.5492020004051645, 0.5574617041509857, 0.5614200140097516, 0.5525562784234374, 0.5336913655006087, 0.5363547362120491, 0.5191416648857314, 0.5258180844297247, 0.5270874219768319, 0.5243134390227688, 0.5161603013396248, 0.5161891160324942, 0.49806762621025163, 0.5029924794069103, 0.4928719960207228, 0.4902578873751485], "accuracy": [0.25716549158096313, 0.4934619069099426, 0.5823537111282349, 0.6421872973442078, 0.681547999382019, 0.7005679607391357, 0.720380425453186, 0.7169462442398071, 0.7292299270629883, 0.7316074371337891, 0.7396644949913025, 0.7423061728477478, 0.7432307600975037, 0.7618544697761536, 0.7453441023826599, 0.757099449634552, 0.763439416885376, 0.7714964747428894, 0.7728173136711121, 0.7656848430633545, 0.7815347909927368, 0.7835160493850708, 0.7839123010635376, 0.7836481332778931, 0.7844406366348267, 0.7853652238845825, 0.7954035401344299, 0.7957997918128967, 0.796328067779541, 0.7969884872436523, 0.7926297783851624, 0.7955356240272522, 0.7964601516723633, 0.8057059645652771, 0.8039889335632324, 0.8103289008140564, 0.8094043135643005, 0.8054417967796326, 0.8043851256370544, 0.8107251524925232, 0.8084797263145447, 0.8189142942428589, 0.81548011302948, 0.8247259259223938, 0.8219521641731262], "val_loss": [1.6606852327074324, 0.9646496772766113, 0.7729495593479702, 0.7059860910688128, 0.6539176872798375, 0.5968215806143624, 0.5847868408475604, 0.5710281474249703, 0.5619608334132603, 0.5290956497192383, 0.53787248475211, 0.5689054557255336, 0.5138050488063267, 0.5558156285967145, 0.49784272057669504, 0.4934568234852382, 0.5227151938847133, 0.4899512359074184, 0.47542308058057514, 0.46796178817749023, 0.46433881350925993, 0.4631098338535854, 0.44933078970227924, 0.45066232340676443, 0.44719369070870535, 0.4447657721383231, 0.4653049537113735, 0.4343944362231663, 0.4318896106311253, 0.4398361785071237, 0.4536060946328299, 0.4255941254752023, 0.4218748297010149, 0.4210448520524161, 0.43569479669843403, 0.41906462396894184, 0.435488189969744, 0.4132669482912336, 0.4088918651853289, 0.4042935882295881, 0.40159982442855835, 0.40300979784556795, 0.4044263107436044, 0.4081155317170279, 0.4002072640827724], "val_accuracy": [0.5173333287239075, 0.5933333039283752, 0.6853333115577698, 0.7089999914169312, 0.7273333072662354, 0.7413333058357239, 0.7516666650772095, 0.7519999742507935, 0.7583333253860474, 0.7699999809265137, 0.7540000081062317, 0.7486666440963745, 0.7733333110809326, 0.7393333315849304, 0.7826666831970215, 0.777999997138977, 0.765666663646698, 0.7789999842643738, 0.796999990940094, 0.7893333435058594, 0.796999990940094, 0.7956666946411133, 0.7979999780654907, 0.8059999942779541, 0.800000011920929, 0.7973333597183228, 0.7860000133514404, 0.8076666593551636, 0.8133333325386047, 0.8026666641235352, 0.7893333435058594, 0.8100000023841858, 0.8180000185966492, 0.8119999766349792, 0.79666668176651, 0.8149999976158142, 0.8036666512489319, 0.8223333358764648, 0.8159999847412109, 0.8276666402816772, 0.8230000138282776, 0.8203333616256714, 0.8236666917800903, 0.8153333067893982, 0.824999988079071]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 8, 8, 3, 2, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 83, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7988571524620056, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.216998795823115, 1.70866073143087, 1.2384350158912851, 1.1152390360973925, 0.975541684904969, 0.888052666451811, 0.8320829211571245, 0.835861033050848, 0.7704608726731349, 0.7432890511333762, 0.7325827674764321, 0.7029600512822385, 0.7176059295299456, 0.6967711090380253, 0.6761555523841515, 0.6747801050282016, 0.6476022451545238, 0.647152461458931, 0.6468308318513117, 0.6365659716280145, 0.6129209741452083, 0.619118627280355, 0.6041185043318208, 0.5947784229654441, 0.5931991855025276, 0.5932170353419494, 0.5782319364798398], "accuracy": [0.24858011305332184, 0.4675736427307129, 0.5769383311271667, 0.5992603302001953, 0.644300639629364, 0.6760005354881287, 0.6983225345611572, 0.6936996579170227, 0.7189275026321411, 0.7220974564552307, 0.7182670831680298, 0.7397965788841248, 0.735569953918457, 0.7366266250610352, 0.7465327978134155, 0.7479857206344604, 0.7549861073493958, 0.7518161535263062, 0.7589486241340637, 0.761590301990509, 0.7692511081695557, 0.7646281719207764, 0.7721568942070007, 0.7771760821342468, 0.7791573405265808, 0.7718927264213562, 0.7832518815994263], "val_loss": [1.691096339906965, 1.0063625403812952, 0.886967556817191, 0.7652467148644584, 0.7028573751449585, 0.6239065102168492, 0.6017064367021833, 0.5648749044963292, 0.5787367820739746, 0.565407395362854, 0.5486254692077637, 0.5140823636736188, 0.5290731191635132, 0.5089566196714129, 0.5024742909840175, 0.48890863146100727, 0.4853262390409197, 0.4924125671386719, 0.48931779180254253, 0.4796889679772513, 0.5212698323386056, 0.4623257943562099, 0.4625586611883981, 0.4475970097950527, 0.4875656706946237, 0.45791312626429964, 0.4560141222817557], "val_accuracy": [0.5256666541099548, 0.6483333110809326, 0.6263333559036255, 0.6679999828338623, 0.6883333325386047, 0.737666666507721, 0.7419999837875366, 0.7596666812896729, 0.7279999852180481, 0.7409999966621399, 0.7390000224113464, 0.7803333401679993, 0.7720000147819519, 0.7733333110809326, 0.777999997138977, 0.7806666493415833, 0.7823333144187927, 0.777999997138977, 0.7796666622161865, 0.7816666960716248, 0.7580000162124634, 0.8040000200271606, 0.7943333387374878, 0.8029999732971191, 0.765333354473114, 0.8009999990463257, 0.7963333129882812]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 1, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 37, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [6, 26, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [7, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [15, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [6.942466348374225, 48.97607291476948, 154.84967148639365, 354.66080719626984, 694.093056822497, 1188.4088816946964], "accuracy": [0.09813763201236725, 0.09800554811954498, 0.09998679161071777, 0.09945846349000931, 0.09985470771789551, 0.10157178342342377], "val_loss": [14.197259085518974, 60.609283447265625, 157.5200413295201, 326.0683070591518, 590.384748186384, 975.3607700892857], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 6, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [8, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1284330057.1914787, 26354757384.216618, 131855637624.51038, 392328416927.80133, 922385952776.1152, 1816180681671.5996], "accuracy": [0.09800554811954498, 0.09800554811954498, 0.09668471664190292, 0.10170386731624603, 0.09959053993225098, 0.09721305221319199], "val_loss": [5292939117.714286, 48744013824.0, 186254622720.0, 495471127990.8571, 1077949759488.0, 2065239638016.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 37, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [74, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3016905723514336, 2.3025847020764565, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023341594512643, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 3, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 83, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023341594512643, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 83, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3023341594512643, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.455721058944402, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03486989811062813, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.609990801130022, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.026333333924412727, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 9, 8, 8, 3, 6, 8, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [7, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [85, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [50700276770.990974, 7761167479309.322, 131744954675933.08, 916991629177177.8, 4097972137389350.0, 1.3375231499356396e+16], "accuracy": [0.09747721254825592, 0.09694888442754745, 0.09985470771789551, 0.09945846349000931, 0.09959053993225098, 0.10210011899471283], "val_loss": [423219494912.0, 22816091612306.285, 244909782223140.56, 1335068342166674.2, 5001632070462903.0, 1.4752760769843786e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 9, 6, 8, 8, 3, 2, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [0, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3642812767174926, 3.066008774863573, 4.904800512598269, 8.004783467877385, 12.392990382497715, 17.819171987394252], "accuracy": [0.09457138925790787, 0.0952318087220192, 0.09972262382507324, 0.09998679161071777, 0.09826971590518951, 0.10196803510189056], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0674285739660263, "mapping_values": [1, 7, 7, 5, 2, 2, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302682344955366, 2.3051507070221686, 2.3020807286263647, 2.302392703163279, 2.3025891171816775, 2.30163413183076, 2.302915147644827, 2.3014603607123316, 2.30103155593862, 2.301980961236688, 2.3023321472375056, 2.301556113688638, 2.301470741698487, 2.302328101931436, 2.301925815312208, 2.301435347451132, 2.301898076848867, 2.3012474623055206, 2.3003419605716657, 2.3018024452704764, 2.301607155166896, 2.2999371062999137, 2.2997464208460565, 2.2997711617728394, 2.301319847237936, 2.3001487778162426, 2.3014566885434626, 2.300554228905973, 2.2996239295299925, 2.2998514313345746, 2.300651058560554, 2.299086116229727, 2.3010135852366296, 2.2993853148877457, 2.301754702320031, 2.3013257636149733, 2.299871714044918, 2.3011298490442917, 2.300174620645614, 2.3008588842664808, 2.3006151174714837, 2.300973944675968, 2.3002660972976634, 2.2991762361222916, 2.300878498075881, 2.3004850572551545, 2.301198366720915, 2.3011935126937346, 2.3002424382136843, 2.300557684794456, 2.2996217313931995, 2.2998118154628795, 2.3004405813100015, 2.300514698469439, 2.3011564550272556, 2.3002806243296896, 2.300803784507849, 2.300047294826807, 2.300722145117852, 2.3009922425382565, 2.300480524216031, 2.3003345302319276, 2.299691187628445, 2.3005780142059953, 2.3005400066756145, 2.2993200981007624, 2.300947388700758, 2.3005128054177333, 2.299263487811952, 2.300559706109122, 2.300365153966311, 2.300506890961649, 2.300750922785144, 2.3005715129145887, 2.2999805033939107, 2.3007800553248403, 2.299638155696729, 2.3003815380557966, 2.299250508878902, 2.299616117298548, 2.300408496706792, 2.300395658727587, 2.299767381337813, 2.300050780663259, 2.3004653511455486, 2.2993743716292707, 2.2990272303047026, 2.3007404007506707, 2.300349731833282, 2.3003808641477805, 2.300092859448317, 2.299894431043279, 2.298569054226314, 2.2998949172332726, 2.2993138094682735, 2.2993789988265707], "accuracy": [0.0936468094587326, 0.08466517180204391, 0.09113723784685135, 0.08585391938686371, 0.08968432247638702, 0.09126931428909302, 0.08691058307886124, 0.09060890227556229, 0.09351472556591034, 0.09589222073554993, 0.09311848133802414, 0.09285431355237961, 0.09232597798109055, 0.08915598690509796, 0.09734513610601425, 0.09668471664190292, 0.09113723784685135, 0.09074098616838455, 0.09206181764602661, 0.09047681838274002, 0.0882314071059227, 0.09549596905708313, 0.10249637067317963, 0.09919429570436478, 0.0936468094587326, 0.1002509593963623, 0.09377889335155487, 0.09377889335155487, 0.10117553919553757, 0.10276053100824356, 0.09694888442754745, 0.1014397069811821, 0.09311848133802414, 0.09549596905708313, 0.08717474341392517, 0.09549596905708313, 0.09285431355237961, 0.09721305221319199, 0.09615638852119446, 0.09787346422672272, 0.09219389408826828, 0.09840179979801178, 0.09866596013307571, 0.09747721254825592, 0.09259014576673508, 0.09642054885625839, 0.08994849026203156, 0.09192973375320435, 0.09787346422672272, 0.09945846349000931, 0.08889182657003403, 0.09853387624025345, 0.09021265059709549, 0.09351472556591034, 0.09219389408826828, 0.09800554811954498, 0.09959053993225098, 0.09866596013307571, 0.09496764093637466, 0.09140139818191528, 0.09694888442754745, 0.0952318087220192, 0.09959053993225098, 0.09945846349000931, 0.09879804402589798, 0.09470347315073013, 0.09602430462837219, 0.09615638852119446, 0.09945846349000931, 0.10051512718200684, 0.09800554811954498, 0.10077928751707077, 0.09879804402589798, 0.09774138033390045, 0.09417514503002167, 0.10302469879388809, 0.10368511080741882, 0.09536388516426086, 0.10130762308835983, 0.09906221181154251, 0.09826971590518951, 0.10170386731624603, 0.09840179979801178, 0.09853387624025345, 0.09285431355237961, 0.10249637067317963, 0.09919429570436478, 0.09311848133802414, 0.09932637959718704, 0.09721305221319199, 0.1006472036242485, 0.09866596013307571, 0.10210011899471283, 0.10091137140989304, 0.09959053993225098, 0.09972262382507324], "val_loss": [1.97093323298863, 1.9708593232291085, 1.970796721322196, 1.9707370485578264, 1.970672607421875, 1.970604079110282, 1.970524856022426, 1.9704691341945104, 1.9704320771353585, 1.9703740392412459, 1.97032254082816, 1.9702629361833846, 1.9702226775033134, 1.9701848711286272, 1.970125947679792, 1.970071860722133, 1.97003207887922, 1.9699933188302177, 1.9699766295296806, 1.9699419566563197, 1.9699083055768694, 1.9698759487697057, 1.9698574883597237, 1.9698373930794852, 1.9698081697736467, 1.9697874614170618, 1.9697636195591517, 1.9697366441999162, 1.9697258131844657, 1.9697119167872839, 1.969682284763881, 1.9696690014430456, 1.9696368489946638, 1.9696272441319056, 1.96962308883667, 1.9696136202130998, 1.9696132114955358, 1.969606672014509, 1.969602108001709, 1.9695912769862585, 1.9695826939174108, 1.9695836475917272, 1.9695820127214705, 1.9695690018790108, 1.9695649147033691, 1.9695741789681571, 1.969585963657924, 1.9695869173322404, 1.9695886203220911, 1.9695893015180315, 1.9696022442408971, 1.969609192439488, 1.9696135520935059, 1.969620704650879, 1.969623020717076, 1.9696301051548548, 1.9696378707885742, 1.9696542194911413, 1.9696636881147112, 1.9696672984531947, 1.9696670940944128, 1.9696784019470215, 1.9696835790361678, 1.969686508178711, 1.96968446459089, 1.9696910721915108, 1.9696860313415527, 1.9696835109165736, 1.9696873937334334, 1.9696784019470215, 1.969670363834926, 1.969655990600586, 1.9696486336844308, 1.9696473394121443, 1.9696510178702218, 1.9696410724094935, 1.9696321487426758, 1.9696240425109863, 1.969625745500837, 1.9696243149893624, 1.9696177755083357, 1.9696091243198939, 1.9696064676557268, 1.969592911856515, 1.9695792198181152, 1.969576154436384, 1.9695675032479423, 1.9695582389831543, 1.9695489747183663, 1.9695356232779366, 1.9695284026009696, 1.9695242473057337, 1.9695227486746651, 1.9695214544023787, 1.9695190020969935, 1.9695145743233817], "val_accuracy": [0.038333334028720856, 0.03933333232998848, 0.0403333343565464, 0.04233333468437195, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04399999976158142, 0.04466666653752327, 0.045666664838790894, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04899999871850014, 0.049666665494441986, 0.050333332270383835, 0.05133333429694176, 0.052666667848825455, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05666666850447655, 0.05666666850447655, 0.0573333315551281, 0.05766666680574417, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.059333331882953644, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.060333333909511566, 0.061000000685453415, 0.061000000685453415, 0.06066666543483734, 0.061666667461395264, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06233333423733711, 0.06266666948795319, 0.06366666406393051, 0.06333333253860474, 0.06400000303983688, 0.06333333253860474, 0.06433333456516266, 0.06499999761581421, 0.06499999761581421, 0.06499999761581421, 0.06599999964237213, 0.06700000166893005, 0.06700000166893005, 0.06700000166893005, 0.0676666647195816, 0.0676666647195816, 0.06800000369548798, 0.06800000369548798, 0.06800000369548798, 0.06800000369548798, 0.06866666674613953, 0.06866666674613953, 0.06866666674613953, 0.07000000029802322, 0.07000000029802322, 0.07066666334867477, 0.07199999690055847, 0.0729999989271164, 0.0729999989271164, 0.07333333045244217, 0.07466666400432587, 0.07566666603088379, 0.07633333653211594, 0.07599999755620956, 0.07633333653211594, 0.07633333653211594, 0.07666666805744171, 0.07733333110809326, 0.07699999958276749, 0.07699999958276749, 0.07733333110809326, 0.07833333313465118, 0.07800000160932541, 0.07766667008399963, 0.07800000160932541, 0.07766667008399963, 0.07733333110809326]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 37, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.054571427404880524, "mapping_values": [1, 6, 6, 4, 2, 2, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302684202642646, 2.3051581022809007, 2.302094457864667, 2.3024127530604463, 2.302614276813179, 2.301666012372103, 2.3029548015261936, 2.3015038471778686, 2.3010791853324157, 2.302034465943219, 2.3023922151153147, 2.3016216872689776, 2.3015414309019837, 2.302404315007786, 2.302003877132387, 2.301517853316787, 2.3019852349156986, 2.301343828601104, 2.3004366753517345, 2.301901325242961, 2.3017078483928195, 2.3000373770107037, 2.2998520765227726, 2.299880622731003, 2.3014348198819263, 2.300266993469361, 2.3015731500203125, 2.3006756781524027, 2.2997533061390683, 2.299977798031117, 2.3007853967701646, 2.2992262513709028, 2.301157981460404, 2.2995306300512315, 2.3019059147769907, 2.3014786665103597, 2.300034215626322, 2.301291492747089, 2.3003369247152854, 2.3010239513590194], "accuracy": [0.0936468094587326, 0.08466517180204391, 0.09100515395402908, 0.08585391938686371, 0.08981640636920929, 0.09113723784685135, 0.08677849918603897, 0.09047681838274002, 0.09325055778026581, 0.0956280529499054, 0.09298639744520187, 0.09245806187391281, 0.09232597798109055, 0.08928807079792023, 0.09721305221319199, 0.09681680053472519, 0.09113723784685135, 0.09034473448991776, 0.09179764986038208, 0.09021265059709549, 0.0874389111995697, 0.09509972482919693, 0.10170386731624603, 0.09853387624025345, 0.09351472556591034, 0.09945846349000931, 0.09351472556591034, 0.0936468094587326, 0.10051512718200684, 0.10249637067317963, 0.09708096832036972, 0.10038304328918457, 0.09285431355237961, 0.09509972482919693, 0.08651433140039444, 0.09509972482919693, 0.09232597798109055, 0.09655263274908066, 0.09549596905708313, 0.09747721254825592], "val_loss": [1.970937660762242, 1.970869813646589, 1.970813206263951, 1.9707585062299455, 1.9707000596182687, 1.9706380026681083, 1.9705636841910226, 1.9705121857779366, 1.970480510166713, 1.9704271044049944, 1.9703803743634904, 1.9703282628740584, 1.9702937262398856, 1.9702574184962682, 1.9702014923095703, 1.9701523099626814, 1.9701160022190638, 1.9700824192592077, 1.9700685228620256, 1.9700380052839006, 1.9700068065098353, 1.9699774469648088, 1.9699622562953405, 1.9699455669948034, 1.9699196134294783, 1.9699011530194963, 1.9698799678257533, 1.9698540823800224, 1.9698467935834612, 1.9698376655578613, 1.969810894557408, 1.9698020390101842, 1.9697751998901367, 1.9697698184422083, 1.9697696140834264, 1.9697635514395577, 1.9697653225490026, 1.9697609628949846, 1.9697577612740653, 1.9697504043579102], "val_accuracy": [0.038333334028720856, 0.03933333232998848, 0.0403333343565464, 0.041333332657814026, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.044333335012197495, 0.04399999976158142, 0.04399999976158142, 0.04533333331346512, 0.04633333161473274, 0.046666666865348816, 0.046666666865348816, 0.047333333641290665, 0.04866666719317436, 0.04899999871850014, 0.05000000074505806, 0.050999999046325684, 0.052000001072883606, 0.052666667848825455, 0.05299999937415123, 0.05433333292603493, 0.05400000140070915, 0.05433333292603493, 0.05366666615009308, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.056333333253860474, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.058666665107011795, 0.05833333358168602, 0.057999998331069946, 0.058666665107011795, 0.057999998331069946, 0.058666665107011795]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302714545382579, 2.3052867559504278, 2.302288892105066, 2.3026907259777727, 2.3029736264538316, 2.3021192645132267], "accuracy": [0.09351472556591034, 0.08453308790922165, 0.09034473448991776, 0.08598599582910538, 0.08968432247638702, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302740655570785, 2.305406281882273, 2.3024941842947433, 2.303012891578448, 2.3034078919608847, 2.302680552328551], "accuracy": [0.09338264167308807, 0.08440100401639938, 0.08981640636920929, 0.08545766770839691, 0.08915598690509796, 0.08981640636920929], "val_loss": [1.9710540090288435, 1.9711341857910156, 1.9712142263139998, 1.9712937899998255, 1.9713807787214006, 1.97146817616054], "val_accuracy": [0.036666665226221085, 0.03466666489839554, 0.03433333337306976, 0.033666666597127914, 0.03333333507180214, 0.03233333304524422]}}]