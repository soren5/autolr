[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8465714454650879, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03024788060917, 1.0633239109030237, 0.7753109618452609, 0.6910602694347534, 0.6259806570501659, 0.5968859797660244, 0.5744004435369824, 0.5446179038293295, 0.5135920967927872, 0.4718027684029146, 0.45291153163312214, 0.4511529328706258, 0.41983428358512076, 0.42142167233157984, 0.40001076840138816, 0.39543179259355654, 0.37191309391263455, 0.37392882606561517, 0.36401224722085673, 0.3483245518024587, 0.337732601686948, 0.3254109154469018, 0.3193324792457531, 0.3099413356485305, 0.29843169994373775, 0.29801001435084473, 0.2874840083902916, 0.27668017944316853, 0.27103236545157267, 0.26080920881740705, 0.26697917098161994, 0.24769120105914846, 0.23798874618315569, 0.23284774814787604, 0.2386022657451219, 0.228810614714722, 0.22404241993513563, 0.21908582065398619, 0.20866908321188835, 0.20219627300454734, 0.20129298134848994, 0.19907635368486484, 0.19113572054432998, 0.1799670156116546, 0.17675704917320723, 0.18529352201698732, 0.179747784896266, 0.1760364907776848, 0.16724688528377965], "accuracy": [0.3187161684036255, 0.6269977688789368, 0.7128516435623169, 0.7477215528488159, 0.7640998363494873, 0.7745344042778015, 0.78113853931427, 0.8020076751708984, 0.8072909712791443, 0.8249900937080383, 0.8338396549224854, 0.8360850811004639, 0.850350022315979, 0.8462554216384888, 0.8543124794960022, 0.8557654023170471, 0.8642187118530273, 0.8625016212463379, 0.8689737319946289, 0.8768987059593201, 0.8722757697105408, 0.8804649114608765, 0.8840311765670776, 0.8874653577804565, 0.8849557638168335, 0.8903711438179016, 0.8923524022102356, 0.8992207050323486, 0.8973715305328369, 0.9049002528190613, 0.8993527889251709, 0.9062210917472839, 0.9103156924247742, 0.9075419306755066, 0.9075419306755066, 0.9103156924247742, 0.91559898853302, 0.9157310724258423, 0.9215427041053772, 0.9189010858535767, 0.9215427041053772, 0.9232597947120667, 0.9261656403541565, 0.9297318458557129, 0.9319772720336914, 0.9286752343177795, 0.9290714859962463, 0.9340906143188477, 0.9334301948547363], "val_loss": [0.9040796075548444, 0.6097059420176915, 0.5540781021118164, 0.5149296351841518, 0.487322279385158, 0.4633960723876953, 0.4340974007334028, 0.41555310998644146, 0.4011511206626892, 0.3815447858401707, 0.37032145261764526, 0.35416732515607563, 0.362026504107884, 0.35106139523642405, 0.3369447333472116, 0.34692820480891634, 0.329645037651062, 0.3275678072656904, 0.31846507106508526, 0.31848619665418354, 0.3073426740510123, 0.30955934524536133, 0.3117397427558899, 0.30526855162211824, 0.3078464184488569, 0.295685384954725, 0.30182888678142, 0.29607718331473215, 0.2892877629825047, 0.2886555790901184, 0.2971192257744925, 0.29573987211499897, 0.3006119557789394, 0.2943276252065386, 0.2929414340427944, 0.30056255204336985, 0.30670985153743197, 0.2961969120161874, 0.2899068849427359, 0.29139052970068796, 0.2959496123450143, 0.30626266343253, 0.2864271742956979, 0.29964858293533325, 0.302801821913038, 0.2967411194528852, 0.29618869509015766, 0.30425905329840525, 0.29646200793130056], "val_accuracy": [0.6449999809265137, 0.7293333411216736, 0.753000020980835, 0.7723333239555359, 0.7799999713897705, 0.7906666398048401, 0.7996666431427002, 0.8100000023841858, 0.8206666707992554, 0.831333339214325, 0.8403333425521851, 0.8446666598320007, 0.8389999866485596, 0.8423333168029785, 0.8519999980926514, 0.8479999899864197, 0.8539999723434448, 0.8519999980926514, 0.8573333621025085, 0.8583333492279053, 0.8606666922569275, 0.8666666746139526, 0.859666645526886, 0.8676666617393494, 0.8679999709129333, 0.8706666827201843, 0.8686666488647461, 0.871999979019165, 0.8726666569709778, 0.8740000128746033, 0.871999979019165, 0.8743333220481873, 0.875333309173584, 0.875333309173584, 0.8776666522026062, 0.878000020980835, 0.8766666650772095, 0.8830000162124634, 0.8826666474342346, 0.8806666731834412, 0.8816666603088379, 0.8813333511352539, 0.8853333592414856, 0.8856666684150696, 0.8823333382606506, 0.8830000162124634, 0.8826666474342346, 0.8840000033378601, 0.8840000033378601]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.829714298248291, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.030245260051717, 1.063498221210847, 0.7765992278073993, 0.6937393761266886, 0.6271096424986548, 0.5961395369198312, 0.570868581450768, 0.5458548944372117, 0.5140793320800744, 0.47595990563837165, 0.455536553986777, 0.4537584457407223, 0.4217811587771341, 0.41798439804573323, 0.3986617236121015, 0.39704621799428935, 0.3738196585841576, 0.3711883594307681, 0.3605189770086173, 0.34711010857832003, 0.3373660649826278, 0.31876269112394123, 0.3169839248610305, 0.3060115242497229, 0.3028435917964087, 0.2967795882014362, 0.29287478622585916, 0.2847113107779967, 0.272371070822862, 0.26444833161903014, 0.2668280222939935, 0.2515427997524492, 0.24474742482713405, 0.23542033045354252, 0.23481605185918866, 0.22624511746147194, 0.22448274940783716, 0.21824680754907252, 0.20854646892335674, 0.20801268579772184, 0.20511005833605261, 0.1980031844966085, 0.19057831488202323, 0.1857066264954446, 0.17996823172630053, 0.18268105841945773, 0.17955944464821086, 0.1770462301984014, 0.16284426504342847, 0.15540442148007264, 0.15885978654320246, 0.15804126137763502, 0.14853300439399766], "accuracy": [0.3187161684036255, 0.6267336010932922, 0.7100779414176941, 0.7483819723129272, 0.7643640041351318, 0.774798572063446, 0.7832518815994263, 0.7967243194580078, 0.8096684813499451, 0.8228767514228821, 0.8329150676727295, 0.8330471515655518, 0.8469158411026001, 0.8488970994949341, 0.8539162874221802, 0.8543124794960022, 0.863029956817627, 0.8619733452796936, 0.868049144744873, 0.8750495314598083, 0.8704266548156738, 0.8792761564254761, 0.8812574148178101, 0.8870691061019897, 0.8848236799240112, 0.8898428082466125, 0.8930128216743469, 0.8945978283882141, 0.8994848728179932, 0.9014661312103271, 0.8993527889251709, 0.8992207050323486, 0.9078060984611511, 0.9124290347099304, 0.9119006991386414, 0.9105798602104187, 0.9170519113540649, 0.9166556596755981, 0.9210143685340881, 0.9202219247817993, 0.9196935892105103, 0.9228635430335999, 0.9249768853187561, 0.9268260598182678, 0.9297318458557129, 0.9281468987464905, 0.9315810203552246, 0.9313168525695801, 0.9400343298912048, 0.9389776587486267, 0.9371285438537598, 0.9397701621055603, 0.945978045463562], "val_loss": [0.9041188444410052, 0.6108276162828717, 0.5549378565379551, 0.5141374724251884, 0.48526523794446674, 0.46554032393864225, 0.43296368632997784, 0.4173427224159241, 0.40140398911067415, 0.3791147896221706, 0.3745722344943455, 0.35622377906526836, 0.3533233659608023, 0.3473093594823565, 0.3390696474484035, 0.34356069564819336, 0.3314622300011771, 0.32602267605917795, 0.31575000286102295, 0.31797183411461966, 0.3063229237283979, 0.3083878329821995, 0.3107052189963205, 0.3135449205126081, 0.30821382999420166, 0.30112309966768536, 0.3048187238829477, 0.29428692374910626, 0.29598729951041086, 0.29418512753077913, 0.29962328502110075, 0.3001332793916975, 0.3035081539835249, 0.2948397057397025, 0.2955049787248884, 0.2967244727270944, 0.30242919921875, 0.2934341175215585, 0.29191860130855013, 0.2860107421875, 0.2975811873163496, 0.2948513797351292, 0.2982637711933681, 0.2976321918623788, 0.3043351003101894, 0.2939195547785078, 0.2931299975940159, 0.30793148279190063, 0.2875707575253078, 0.3134445973805019, 0.30710166692733765, 0.32022054706301006, 0.30553822006498066], "val_accuracy": [0.6449999809265137, 0.7296666502952576, 0.7546666860580444, 0.768666684627533, 0.7853333353996277, 0.7856666445732117, 0.8009999990463257, 0.812333345413208, 0.8186666369438171, 0.8306666612625122, 0.8379999995231628, 0.8433333039283752, 0.8413333296775818, 0.8446666598320007, 0.8493333458900452, 0.8506666421890259, 0.8539999723434448, 0.8506666421890259, 0.8613333106040955, 0.859666645526886, 0.8616666793823242, 0.8629999756813049, 0.8613333106040955, 0.8663333058357239, 0.8659999966621399, 0.8700000047683716, 0.8659999966621399, 0.871999979019165, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8733333349227905, 0.8673333525657654, 0.8773333430290222, 0.8766666650772095, 0.878333330154419, 0.8786666393280029, 0.8763333559036255, 0.8816666603088379, 0.8813333511352539, 0.8796666860580444, 0.8833333253860474, 0.8833333253860474, 0.8823333382606506, 0.8806666731834412, 0.8813333511352539, 0.8846666812896729, 0.8856666684150696, 0.8853333592414856, 0.8826666474342346, 0.8803333044052124, 0.8786666393280029, 0.8849999904632568]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [29, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7908571362495422, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.268242576795877, 1.939083225801715, 1.3992080313260955, 1.0199458244659048, 0.8732319303066535, 0.8087585210926135, 0.7461886207236432, 0.7194228290944698, 0.6861499370034061, 0.6584573126015583, 0.6155097260136315, 0.5965557719313033, 0.5710368559360819, 0.5521492749480146, 0.5316697060392674, 0.5039309965400585, 0.5080638934183177, 0.4852062243559357, 0.46432655762766395, 0.45905620054152535, 0.4476444246809575, 0.4366489108747826, 0.4243940086436231, 0.4138457335461841, 0.3983413868293062, 0.38975491356131675, 0.3835219254488675, 0.38117183661259335, 0.36303138822659586, 0.3583258936914077, 0.34779161886768317, 0.33939100472273026, 0.3387298707193025], "accuracy": [0.1798969805240631, 0.40866464376449585, 0.5241051316261292, 0.6312243938446045, 0.6804913282394409, 0.6915863156318665, 0.7152291536331177, 0.7326641082763672, 0.7358341217041016, 0.7428345084190369, 0.7638356685638428, 0.767930269241333, 0.7800818681716919, 0.7924976944923401, 0.7926297783851624, 0.8047813773155212, 0.806630551815033, 0.8150838613510132, 0.82683926820755, 0.8259146809577942, 0.8308017253875732, 0.8345000743865967, 0.843481719493866, 0.8409721255302429, 0.8466516733169556, 0.8521991968154907, 0.8590674996376038, 0.856689989566803, 0.8646149635314941, 0.8639545440673828, 0.8692378997802734, 0.8716153502464294, 0.8747853636741638], "val_loss": [1.8438431194850378, 1.1457734107971191, 0.7505461658750262, 0.7073806694575718, 0.6030165978840419, 0.5702421324593681, 0.5518896920340401, 0.5425602538245065, 0.5083303110940116, 0.49023750850132536, 0.47622908864702496, 0.4582359620503017, 0.44190781457083567, 0.43016680649348665, 0.41685530969074797, 0.4066718816757202, 0.3992349590573992, 0.3909684845379421, 0.38576704263687134, 0.37688868386404856, 0.37179808957236155, 0.36632226194654194, 0.3607998320034572, 0.36068369661058697, 0.35338529518672396, 0.3455201046807425, 0.337775605065482, 0.33429196902683805, 0.33454613174710957, 0.3291637216295515, 0.32776427268981934, 0.32640775612422396, 0.3243470617703029], "val_accuracy": [0.4493333399295807, 0.5820000171661377, 0.6903333067893982, 0.6903333067893982, 0.7260000109672546, 0.753333330154419, 0.7536666393280029, 0.7636666893959045, 0.7739999890327454, 0.7713333368301392, 0.7963333129882812, 0.7886666655540466, 0.8019999861717224, 0.8109999895095825, 0.812666654586792, 0.8226666450500488, 0.8216666579246521, 0.8293333053588867, 0.8286666870117188, 0.8373333215713501, 0.8346666693687439, 0.8396666646003723, 0.8456666469573975, 0.8473333120346069, 0.8536666631698608, 0.8523333072662354, 0.8569999933242798, 0.8629999756813049, 0.8556666374206543, 0.8600000143051147, 0.8603333234786987, 0.862666666507721, 0.862333357334137]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [44, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [7, 9, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.3959999978542328, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5601188205000494, 2.3873210098481747, 2.299080638963596, 2.5180394450482315, 2.306318958154239, 2.3036598722775063], "accuracy": [0.18438778817653656, 0.17197199165821075, 0.11332716792821884, 0.15229164063930511, 0.1026284471154213, 0.1010434553027153], "val_loss": [1.6320673057011195, 1.9746027673993791, 1.8728297097342355, 1.978301729474749, 1.97425719669887, 1.9735886710030692], "val_accuracy": [0.3553333282470703, 0.10133333504199982, 0.09799999743700027, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.3840000033378601, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.560258851846794, 2.373527851527976, 2.4539121463550413, 2.298587734169255, 2.5321840906754116, 2.3046887837317893], "accuracy": [0.18478403985500336, 0.16774533689022064, 0.15361246466636658, 0.11200633645057678, 0.1566503793001175, 0.09774138033390045], "val_loss": [1.6510817323412215, 1.9311284337724959, 1.9747603280203683, 1.9482239314488001, 1.975149154663086, 1.9737747056143624], "val_accuracy": [0.3556666672229767, 0.17733334004878998, 0.10000000149011612, 0.16566666960716248, 0.1003333330154419, 0.0989999994635582]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.12228571623563766, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.381491529691205, 3.2110720297695385, 2.3149670095586066, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20552106201648712, 0.15255580842494965, 0.13789460062980652, 0.1216483935713768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9668192863464355, 2.017131737300328, 1.9015823772975378, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.21799999475479126, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 4, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [917841.1877116971, 17232161.567560427, 78877929.34513274, 216636889.19931316, 464964771.4447233, 862575923.0748911], "accuracy": [0.09206181764602661, 0.1018359512090683, 0.10038304328918457, 0.09998679161071777, 0.10289261490106583, 0.09549596905708313], "val_loss": [3328143.214285714, 26532472.0, 89445001.14285715, 211897664.0, 413722523.4285714, 714754797.7142857], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [96.02896747984639, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03975696861743927, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1007752.7142857143, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [0, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [96.0287236400237, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03975696861743927, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1007721.75, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.5038832649500016, 14.692376825425603, 40.58576048464429, 84.3470019933932, 151.10436934931025, 248.37453293715328], "accuracy": [0.09074098616838455, 0.10091137140989304, 0.10011887550354004, 0.09932637959718704, 0.10249637067317963, 0.09628847241401672], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [196372882302.7551, 2.328860282362602, 2.3084603963574053, 704938421139.4979, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.0952318087220192, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.010621888296945, 1.9819723537990026, 1.9751067842755998, 1.9739126477922713, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [0, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 1, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), alpha))", "other_info": {"loss": [5860265.01964129, 2.3133819407759217, 2.3055665338390523, 2.303555582776093, 2.303053799117671, 2.3031494077391015, 2.3029716751437226, 2.3030627873500955, 2.3029540992132693, 2.3031137394568137], "accuracy": [0.09351472556591034, 0.09642054885625839, 0.09430722147226334, 0.0948355570435524, 0.09694888442754745, 0.09998679161071777, 0.0952318087220192, 0.0940430611371994, 0.09325055778026581, 0.09245806187391281], "val_loss": [1.9876251220703125, 1.9772307532174247, 1.97434173311506, 1.973822934286935, 1.9736285209655762, 1.973686695098877, 1.9737083571297782, 1.9736779076712472, 1.9736937114170618, 1.9736619676862444], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.09933333098888397, 0.10066666454076767, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303005390730296, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), alpha))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.467767724523518, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03315281867980957, 0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.299995558602469, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.04699999839067459, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [44, 43, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05772024765610695, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [196372813051.13705, 2.3288603138536303, 2.3084603963574053, 704788011215.3136, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09998679161071777, 0.0952318087220192, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.010621888296945, 1.9819724219185966, 1.9751067842755998, 1.9739126477922713, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030053727489186, 2.3025851699701625, 2.3025850169867446, 2.3025851294412085, 2.3025850169867446, 2.3025850441005202], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736442565917969, 1.973644188472203, 1.9736442565917969, 1.973644188472203, 1.973644188472203, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.054571427404880524, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 4, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304154793946278, 2.30354909291593, 2.3004490799828923, 2.303105544137004, 2.301268930810554, 2.30279830150506, 2.300208563975308, 2.302234410357875, 2.302328956755413, 2.302988533204683, 2.2999722239615625, 2.30119224442404, 2.3019523952206002, 2.3008820018622194, 2.3008727548680112, 2.3014488124482115, 2.301628969160006, 2.3006292049832204, 2.302609220834031, 2.3010735969974254, 2.300947900052084, 2.300611861236123, 2.299713082333062, 2.3009829658165173, 2.2999498104737373, 2.3000007329159065, 2.3007825074052892, 2.3010432850242277, 2.2993078526882464, 2.3010309991457394, 2.300605466636322, 2.3006789747277714, 2.2991634493474993, 2.2998398056655054, 2.3001482849816415, 2.300140246077772, 2.300530912759297, 2.301001993987255, 2.2984258731783593, 2.2990834723374216, 2.299052854428879, 2.298847125332668, 2.300870569516576, 2.2987932482132303, 2.299476114041801, 2.300404285537474, 2.3000707193970946, 2.299070135067955, 2.298991604094429, 2.2986252283958666, 2.2984517279743217, 2.2986767709278837, 2.2988782190706565, 2.29870275256971, 2.2983863575741, 2.2988141966439226, 2.2987661122047607, 2.2986089994626795, 2.299631076355998, 2.2990757065867355, 2.299254093124819, 2.2982172493323074, 2.2994913703115816, 2.298668142102571, 2.2988632976449854, 2.297599960107215, 2.2988581643553614, 2.3001006008249467, 2.2979514859907066, 2.298724743416438, 2.3000095288326174, 2.298122987802617, 2.296856412168318, 2.2981327175542963, 2.299045472049978, 2.2976431703334472, 2.2961294258968183, 2.2973376877351033, 2.296982725078183, 2.297715860823315, 2.2967671971704666, 2.2973492259850765, 2.2982169866026543, 2.2991545547379038, 2.2980972264405364, 2.2980858696103805, 2.296023349090574, 2.297957380575952, 2.295831242635533, 2.296206756526799, 2.2964861314877103, 2.297581208301746, 2.2958057560011884, 2.2973385011168865, 2.2976058276731575, 2.297721538340899, 2.296345166809854, 2.2961557631353426, 2.2971116082228376, 2.296574800179194], "accuracy": [0.08479725569486618, 0.08849557489156723, 0.09126931428909302, 0.0878351628780365, 0.09589222073554993, 0.08889182657003403, 0.09576013684272766, 0.09377889335155487, 0.09351472556591034, 0.08691058307886124, 0.09787346422672272, 0.09113723784685135, 0.09391097724437714, 0.09642054885625839, 0.0952318087220192, 0.09325055778026581, 0.09800554811954498, 0.0944393053650856, 0.09113723784685135, 0.09694888442754745, 0.09047681838274002, 0.09153348207473755, 0.09615638852119446, 0.0936468094587326, 0.09576013684272766, 0.09866596013307571, 0.09787346422672272, 0.09179764986038208, 0.09866596013307571, 0.09338264167308807, 0.09430722147226334, 0.09192973375320435, 0.09628847241401672, 0.09840179979801178, 0.09734513610601425, 0.09391097724437714, 0.09589222073554993, 0.0944393053650856, 0.10077928751707077, 0.10276053100824356, 0.09298639744520187, 0.09906221181154251, 0.09906221181154251, 0.09496764093637466, 0.09351472556591034, 0.09549596905708313, 0.09906221181154251, 0.09998679161071777, 0.10038304328918457, 0.09893012791872025, 0.1002509593963623, 0.09866596013307571, 0.09774138033390045, 0.1026284471154213, 0.10540219396352768, 0.10342095047235489, 0.10038304328918457, 0.09840179979801178, 0.09932637959718704, 0.10328886657953262, 0.1014397069811821, 0.10593052208423615, 0.10130762308835983, 0.09998679161071777, 0.09721305221319199, 0.10381719470024109, 0.09932637959718704, 0.09721305221319199, 0.10302469879388809, 0.10038304328918457, 0.09615638852119446, 0.09826971590518951, 0.10447761416435242, 0.10289261490106583, 0.10593052208423615, 0.09840179979801178, 0.10645885765552521, 0.10645885765552521, 0.10170386731624603, 0.10196803510189056, 0.09998679161071777, 0.10328886657953262, 0.10157178342342377, 0.10117553919553757, 0.09760929644107819, 0.10355303436517715, 0.10474177449941635, 0.10553427785634995, 0.10659094154834747, 0.10777968913316727, 0.10500594228506088, 0.1014397069811821, 0.10460969805717468, 0.10566636174917221, 0.10553427785634995, 0.10249637067317963, 0.10249637067317963, 0.10447761416435242, 0.10791176557540894, 0.1002509593963623], "val_loss": [1.970926148550851, 1.9708457674298967, 1.9707703590393066, 1.9706904547555106, 1.970602103642055, 1.970522471836635, 1.970447063446045, 1.9703715869358607, 1.9703046253749303, 1.970233712877546, 1.9701619148254395, 1.9700920922415597, 1.970019953591483, 1.9699572835649763, 1.9698850086757116, 1.9698125294276647, 1.9697492463248116, 1.9696756090436662, 1.9696025848388672, 1.9695357595171248, 1.969472817012242, 1.9694108963012695, 1.969339098249163, 1.9692754064287459, 1.969205447605678, 1.9691435268947057, 1.9690742492675781, 1.9690089225769043, 1.9689490454537528, 1.9688821520124162, 1.9688258852277483, 1.9687654631478446, 1.9687064034598214, 1.9686519759041923, 1.9685893739972795, 1.9685331072126115, 1.9684741837637765, 1.968417031424386, 1.968355587550572, 1.968301500592913, 1.9682441438947404, 1.9681915555681502, 1.968141692025321, 1.9680875369480677, 1.9680334499904089, 1.9679759570530482, 1.9679225512913294, 1.9678732327052526, 1.9678149904523576, 1.9677649225507463, 1.9677134922572546, 1.9676594052995955, 1.9676064082554408, 1.9675587926592146, 1.9675037520272392, 1.967453956604004, 1.967400278363909, 1.967351300375802, 1.9673009599958147, 1.9672507558550154, 1.9672024590628487, 1.967148985181536, 1.9670985766819544, 1.967050279889788, 1.9670024599347795, 1.9669530732291085, 1.9669106347220284, 1.9668630872453963, 1.9668175833565849, 1.9667664936610632, 1.9667192186628069, 1.9666719436645508, 1.966620649610247, 1.9665696280343192, 1.9665159497942244, 1.9664626121520996, 1.9664184025355749, 1.9663698332650321, 1.966325146811349, 1.9662793704441615, 1.966238021850586, 1.9661901337759835, 1.96613952091762, 1.966092927115304, 1.9660414968218123, 1.965994085584368, 1.9659521920340401, 1.9659032140459334, 1.965858050755092, 1.9658105032784599, 1.9657643181937081, 1.9657203810555595, 1.965677125113351, 1.9656297819955009, 1.9655852999005998, 1.9655372074672155, 1.9654948370797294, 1.9654506955827986, 1.9654058728899275, 1.965367657797677], "val_accuracy": [0.03866666555404663, 0.03933333232998848, 0.03933333232998848, 0.03999999910593033, 0.04066666588187218, 0.04100000113248825, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.043666668236255646, 0.044333335012197495, 0.04500000178813934, 0.04500000178813934, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.04533333331346512, 0.046666666865348816, 0.047333333641290665, 0.04800000041723251, 0.04866666719317436, 0.04899999871850014, 0.04899999871850014, 0.04866666719317436, 0.04899999871850014, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.050999999046325684, 0.05133333429694176, 0.050999999046325684, 0.05166666582226753, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05299999937415123, 0.0533333346247673, 0.05366666615009308, 0.05433333292603493, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.055666666477918625, 0.05666666850447655, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.05766666680574417, 0.058666665107011795, 0.058666665107011795, 0.05900000035762787, 0.05966666713356972, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.06133333221077919, 0.06199999898672104, 0.06233333423733711, 0.06300000101327896, 0.06300000101327896, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421, 0.06533333659172058, 0.06599999964237213, 0.06599999964237213, 0.0663333311676979, 0.0663333311676979, 0.0663333311676979, 0.0663333311676979, 0.0663333311676979, 0.06700000166893005, 0.06733333319425583, 0.06866666674613953, 0.06866666674613953, 0.06966666877269745, 0.07000000029802322, 0.07066666334867477, 0.07066666334867477, 0.07100000232458115, 0.07100000232458115, 0.07133333384990692, 0.07233333587646484, 0.0729999989271164, 0.0729999989271164]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [0, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.041999999433755875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3161946869702654, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0635672296796526, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 6, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3042166355247935, 2.3037726081767023, 2.300831660775933, 2.3036696717188327, 2.3020378135025634, 2.3037428505715756], "accuracy": [0.08466517180204391, 0.08770307898521423, 0.09113723784685135, 0.08585391938686371, 0.09417514503002167, 0.0866464152932167], "val_loss": [1.9710684503827776, 1.971141951424735, 1.9712144987923759, 1.971294948032924, 1.9713899067470007, 1.9714760780334473], "val_accuracy": [0.03700000047683716, 0.03566666692495346, 0.03466666489839554, 0.03466666489839554, 0.03400000184774399, 0.03400000184774399]}}]