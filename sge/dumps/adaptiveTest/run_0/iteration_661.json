[{"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8460000157356262, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0460628443988655, 1.089326402908303, 0.7909683121697715, 0.6896928208158662, 0.633774291270791, 0.5979316389839395, 0.5537892730716921, 0.522464484680976, 0.49887715255453635, 0.47063201086837003, 0.4528312097805335, 0.4349622005807599, 0.43123324784022027, 0.40579874834222657, 0.4085902718190173, 0.38127364447922707, 0.36860912739876284, 0.3575685882037736, 0.3575187182508329, 0.34558901485198873, 0.33062528854174744, 0.32041761570791794, 0.3096505630057265, 0.303188066078829, 0.2840885439797352, 0.29009497351083363, 0.2856148061199967, 0.2773018547918944, 0.2664102827513837, 0.2623646396884293, 0.25217209037788446, 0.26282887657745846, 0.25473355343746173, 0.24555763540849268, 0.23867914450048944, 0.2286536769938743, 0.22393572166327866, 0.21733848052277716, 0.21871252759076726, 0.208303903056457, 0.1955177444099136, 0.2002928294954897, 0.1910138153983397, 0.18113052509228125, 0.17946304673366636], "accuracy": [0.3039228618144989, 0.616299033164978, 0.6997754573822021, 0.746268630027771, 0.7640998363494873, 0.7788931727409363, 0.7961959838867188, 0.8041210174560547, 0.817461371421814, 0.8227446675300598, 0.8350284099578857, 0.8387266993522644, 0.8411042094230652, 0.8544445633888245, 0.847840428352356, 0.857218325138092, 0.8667283058166504, 0.8669924736022949, 0.8684453964233398, 0.8692378997802734, 0.8786157965660095, 0.8821820020675659, 0.8840311765670776, 0.8849557638168335, 0.8926165699958801, 0.889578640460968, 0.8945978283882141, 0.8918240666389465, 0.8957865834236145, 0.8997490406036377, 0.9045040011405945, 0.896446943283081, 0.9008057117462158, 0.9088627696037292, 0.9078060984611511, 0.9097873568534851, 0.9108440279960632, 0.9178444147109985, 0.9159952402114868, 0.9223352074623108, 0.9260335564613342, 0.9224672913551331, 0.9262977242469788, 0.9292035102844238, 0.927882730960846], "val_loss": [0.9411551611764091, 0.6368021283830915, 0.5607125588825771, 0.5288056135177612, 0.48294900144849506, 0.4539909192493984, 0.4264871563230242, 0.41455348900386263, 0.40264272689819336, 0.3817350098064968, 0.37061937366213116, 0.35684778009142193, 0.35097679070064, 0.34037119150161743, 0.3340411526816232, 0.3248455098697117, 0.32472201756068636, 0.3213996546609061, 0.32594819579805645, 0.30785153593335834, 0.3038694773401533, 0.30500257866723196, 0.3041453106062753, 0.30559633459363666, 0.28909019912992207, 0.2930594427245004, 0.29206568002700806, 0.294759784426008, 0.29897765602384296, 0.29348271233694895, 0.2962710091045925, 0.28559026547840666, 0.2857106498309544, 0.28859479086739676, 0.2799669419016157, 0.2846213919775827, 0.2902694514819554, 0.2983492357390268, 0.29100005115781513, 0.2911792056901114, 0.29240398747580393, 0.295737087726593, 0.29661063637052265, 0.29335589919771465, 0.2921579224722726], "val_accuracy": [0.6263333559036255, 0.7113333344459534, 0.7419999837875366, 0.7570000290870667, 0.781000018119812, 0.7866666913032532, 0.8006666898727417, 0.8180000185966492, 0.8169999718666077, 0.8330000042915344, 0.8383333086967468, 0.8393333554267883, 0.846666693687439, 0.8483333587646484, 0.8500000238418579, 0.859666645526886, 0.8536666631698608, 0.8533333539962769, 0.8496666550636292, 0.859333336353302, 0.8650000095367432, 0.8669999837875366, 0.8679999709129333, 0.8633333444595337, 0.8706666827201843, 0.874666690826416, 0.871666669845581, 0.871999979019165, 0.8709999918937683, 0.8730000257492065, 0.875333309173584, 0.8803333044052124, 0.8773333430290222, 0.8809999823570251, 0.8843333125114441, 0.8820000290870667, 0.8776666522026062, 0.8826666474342346, 0.8809999823570251, 0.8870000243186951, 0.8833333253860474, 0.878333330154419, 0.8826666474342346, 0.8813333511352539, 0.8826666474342346]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8411428332328796, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 10, 7, 5, 2, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.04684593774828, 1.0843546081055362, 0.7891552568174798, 0.6907286146423678, 0.6321472243673183, 0.5977509177875808, 0.5546174024420801, 0.5221366172122791, 0.49875934711930425, 0.4677286173027929, 0.45125738137418003, 0.43183057868107516, 0.42822233845041, 0.4033144892379986, 0.40495384725927913, 0.3758230164121596, 0.3657062434997415, 0.35419218984372614, 0.34957738076423406, 0.3452178649874947, 0.33603733690612275, 0.3227065509305008, 0.30620993486232984, 0.30590316311967625, 0.28614686378918114, 0.29075239496208405, 0.28205853654975827, 0.28253320590883846], "accuracy": [0.30339452624320984, 0.6206578016281128, 0.7005679607391357, 0.7467969655990601, 0.7638356685638428, 0.776251494884491, 0.7946110367774963, 0.8067626357078552, 0.8195747137069702, 0.8261788487434387, 0.8352925777435303, 0.8436138033866882, 0.8437458872795105, 0.8540483713150024, 0.8500858545303345, 0.8626337051391602, 0.8656716346740723, 0.8688416481018066, 0.8710870146751404, 0.870030403137207, 0.8780874609947205, 0.8805969953536987, 0.889050304889679, 0.8882578015327454, 0.891559898853302, 0.8922203183174133, 0.8920882344245911, 0.8887861371040344], "val_loss": [0.9435909475599017, 0.6282843691962106, 0.5643610273088727, 0.5193989447184971, 0.4820722852434431, 0.4533013105392456, 0.4261923772948129, 0.4146779945918492, 0.39571123463766916, 0.3798770308494568, 0.3733713626861572, 0.3581805314336504, 0.34807227339063374, 0.3373806732041495, 0.3305803452219282, 0.32444755520139423, 0.3202919363975525, 0.31784645148686, 0.31790317807878765, 0.3073548674583435, 0.3055093543870108, 0.30115108830588205, 0.29775203125817434, 0.30507384879248484, 0.29043648072651457, 0.291039024080549, 0.2882271238735744, 0.2932906321116856], "val_accuracy": [0.6340000033378601, 0.7223333120346069, 0.7350000143051147, 0.7609999775886536, 0.781333327293396, 0.7889999747276306, 0.7996666431427002, 0.8186666369438171, 0.8220000267028809, 0.8353333473205566, 0.8303333520889282, 0.843999981880188, 0.847000002861023, 0.8523333072662354, 0.8533333539962769, 0.8566666841506958, 0.856333315372467, 0.8546666502952576, 0.8533333539962769, 0.8629999756813049, 0.8700000047683716, 0.8683333396911621, 0.8736666440963745, 0.8669999837875366, 0.8686666488647461, 0.8700000047683716, 0.8736666440963745, 0.871666669845581]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8394285440444946, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.046845969239309, 1.0843547243153053, 0.7890427634306966, 0.6902447569686755, 0.6321279598642822, 0.5991096708989021, 0.5547081909757863, 0.5214368122884578, 0.4980321347146632, 0.46602719174699225, 0.45223673841563106, 0.4301585237568301, 0.4281515711137348, 0.4023715472531561, 0.40351185078209006, 0.3747419647221961, 0.36418544291552457, 0.3560289844994563, 0.35651647858001834, 0.3474448434924878, 0.3346406178247061, 0.319659231463601, 0.30676772228447424, 0.30784674036252485, 0.28482452357339666, 0.2920875688624845, 0.2836021382330651, 0.2771181137593919], "accuracy": [0.30339452624320984, 0.6205257177352905, 0.7004358768463135, 0.7473253011703491, 0.7635715007781982, 0.7750627398490906, 0.7942147850990295, 0.8076872229576111, 0.8206313848495483, 0.8244617581367493, 0.8354246616363525, 0.8426892161369324, 0.8437458872795105, 0.8562937378883362, 0.852859616279602, 0.863029956817627, 0.867520809173584, 0.868049144744873, 0.8669924736022949, 0.8663320541381836, 0.8799365758895874, 0.8813894987106323, 0.8845595121383667, 0.8885219693183899, 0.8924844861030579, 0.8930128216743469, 0.8928807377815247, 0.8912957310676575], "val_loss": [0.9435909475599017, 0.6281679357801165, 0.5642959901264736, 0.5197397640773228, 0.4815783330372402, 0.4554130349840437, 0.4253911205700466, 0.41071414947509766, 0.39702861649649485, 0.38148381880351473, 0.36933694566999165, 0.35618730953761507, 0.34762511934552875, 0.33987104892730713, 0.32930435453142437, 0.3224721465791975, 0.3174072929791042, 0.3191218972206116, 0.3253483261380877, 0.3094784276826041, 0.30248552560806274, 0.3031788808958871, 0.29924899339675903, 0.3059736319950649, 0.29427067722593037, 0.29264371735709055, 0.2900034189224243, 0.29482426813670565], "val_accuracy": [0.6340000033378601, 0.722000002861023, 0.7350000143051147, 0.7596666812896729, 0.7806666493415833, 0.7870000004768372, 0.7996666431427002, 0.8196666836738586, 0.8223333358764648, 0.8299999833106995, 0.8356666564941406, 0.8450000286102295, 0.8506666421890259, 0.8493333458900452, 0.8536666631698608, 0.859333336353302, 0.859333336353302, 0.859000027179718, 0.8533333539962769, 0.8610000014305115, 0.8656666874885559, 0.8603333234786987, 0.8730000257492065, 0.862333357334137, 0.871666669845581, 0.8706666827201843, 0.8726666569709778, 0.8713333606719971]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8362857103347778, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0468460479196446, 1.0842377318997094, 0.788797507527293, 0.6902181938371291, 0.6317154673726378, 0.5969232495482005, 0.5532485904820827, 0.5211711598818785, 0.496730091702968, 0.4675782249155235, 0.45239657822569773, 0.429545287612155, 0.4299952266490565, 0.40283332544862005, 0.4050407020360125, 0.37522462341826684, 0.36817748908983355, 0.3559315927615019, 0.3562865346855161, 0.34818618447316746, 0.335995328086258, 0.3222215198617113, 0.30790021399134704, 0.30755855307807667, 0.28597858177357505, 0.2946150906648713], "accuracy": [0.30339452624320984, 0.6206578016281128, 0.6993792057037354, 0.7479857206344604, 0.7646281719207764, 0.778232753276825, 0.7965922355651855, 0.8088759779930115, 0.819970965385437, 0.8256505131721497, 0.8350284099578857, 0.8445383906364441, 0.8433496356010437, 0.8544445633888245, 0.8514066934585571, 0.8660678863525391, 0.86553955078125, 0.8671245574951172, 0.8696341514587402, 0.8721436858177185, 0.8774270415306091, 0.8805969953536987, 0.8840311765670776, 0.8853520154953003, 0.8918240666389465, 0.891559898853302], "val_loss": [0.9435903004237584, 0.6281229257583618, 0.5644456999642509, 0.5209976434707642, 0.48150854451315744, 0.4556279352733067, 0.42693578345435007, 0.40905880076544626, 0.3991504567010062, 0.3794669338635036, 0.37088195766721455, 0.35681393316813875, 0.34643622807094027, 0.3414545740400042, 0.3304991381508963, 0.3266494444438389, 0.32430566208703177, 0.3145495057106018, 0.3238249846867153, 0.3109513350895473, 0.30022241388048443, 0.30166871207101004, 0.3013561282839094, 0.3067232881273542, 0.293316730431148, 0.2910143562725612], "val_accuracy": [0.6340000033378601, 0.722000002861023, 0.7353333234786987, 0.7609999775886536, 0.7829999923706055, 0.7870000004768372, 0.7990000247955322, 0.8190000057220459, 0.8176666498184204, 0.8309999704360962, 0.8336666822433472, 0.8410000205039978, 0.8463333249092102, 0.8500000238418579, 0.8546666502952576, 0.8566666841506958, 0.8513333201408386, 0.8546666502952576, 0.8510000109672546, 0.8616666793823242, 0.8690000176429749, 0.8640000224113464, 0.8676666617393494, 0.8659999966621399, 0.8679999709129333, 0.8683333396911621]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 1, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8342857360839844, "mapping_values": [1, 13, 13, 10, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, tf.math.square(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.046846016475852, 1.0843448599079863, 0.7891479295085151, 0.6906581233914786, 0.6325127837633051, 0.5970769359718744, 0.554087448208292, 0.5220269259444759, 0.4978804991206221, 0.46885122309791066, 0.4548618806005233, 0.4344846092950808, 0.4317030347357211, 0.4075555957626468, 0.40596154510085264, 0.37844913583059414, 0.3702828600193767, 0.3574075524313512, 0.35447361149319945, 0.3432207467250222, 0.3324907276931456, 0.32120303961783825, 0.30997355147485706, 0.30817450295035015, 0.28601213374850837, 0.291441262256452], "accuracy": [0.30339452624320984, 0.6205257177352905, 0.700171709060669, 0.7464007139205933, 0.7638356685638428, 0.7759873270988464, 0.7957997918128967, 0.8057059645652771, 0.8202351331710815, 0.8265751004219055, 0.8347642421722412, 0.8430854678153992, 0.8433496356010437, 0.8520671129226685, 0.8487650156021118, 0.8623695969581604, 0.863558292388916, 0.8668603897094727, 0.8687095642089844, 0.8697662353515625, 0.8812574148178101, 0.8809932470321655, 0.8836349248886108, 0.8854840993881226, 0.8927486538887024, 0.8927486538887024], "val_loss": [0.943591662815639, 0.6282108000346592, 0.5644521713256836, 0.5202134677342006, 0.4811633655003139, 0.453114526612418, 0.4270411218915667, 0.4124300650187901, 0.39626706498009817, 0.38061847005571636, 0.3727436065673828, 0.35907926729747225, 0.3549578530447824, 0.3424909625734602, 0.33164104393550325, 0.32906488861356464, 0.32248220273426603, 0.31883271251405987, 0.3171187554086958, 0.3118429183959961, 0.301513671875, 0.30205155270440237, 0.29814936433519634, 0.30958410671779085, 0.2933076705251421, 0.2958153060504368], "val_accuracy": [0.6340000033378601, 0.7226666808128357, 0.7356666922569275, 0.7596666812896729, 0.7820000052452087, 0.7883333563804626, 0.7993333339691162, 0.8166666626930237, 0.8190000057220459, 0.8289999961853027, 0.8323333263397217, 0.8416666388511658, 0.8450000286102295, 0.8493333458900452, 0.8513333201408386, 0.8539999723434448, 0.8546666502952576, 0.8560000061988831, 0.8533333539962769, 0.8616666793823242, 0.8696666955947876, 0.8659999966621399, 0.8696666955947876, 0.8656666874885559, 0.8676666617393494, 0.8659999966621399]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 44, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7834285497665405, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.222565605026021, 1.7197756012905354, 1.3030268040000645, 1.069286985593213, 0.964309973070225, 0.9285637131220377, 0.8434509030343865, 0.8041077003644647, 0.7709217211432099, 0.7666208469998395, 0.7384685112138576, 0.706331914032707, 0.7106055064586175, 0.6782960811972603, 0.6767374327264332, 0.6499382213137925, 0.6810112170901643, 0.6351394040662347, 0.6575096307523877], "accuracy": [0.24263638257980347, 0.460969477891922, 0.5503896474838257, 0.6186765432357788, 0.6489235162734985, 0.6585655808448792, 0.6922467350959778, 0.7073041796684265, 0.7099458575248718, 0.7166820764541626, 0.7276449799537659, 0.7347774505615234, 0.7339849472045898, 0.746268630027771, 0.7423061728477478, 0.7548540234565735, 0.7395324110984802, 0.7618544697761536, 0.7506273984909058], "val_loss": [1.7078757286071777, 1.0566560200282507, 0.8024840014321464, 0.7562151976994106, 0.6804103681019374, 0.6617367437907627, 0.6043105125427246, 0.5769893782479423, 0.5796258790152413, 0.5574370963232858, 0.5439739227294922, 0.548731940133231, 0.5184346437454224, 0.4978964158466884, 0.509777273450579, 0.4985124553952898, 0.5039299556187221, 0.4852585622242519, 0.505560006414141], "val_accuracy": [0.47466665506362915, 0.6039999723434448, 0.6863333582878113, 0.6499999761581421, 0.6986666917800903, 0.7146666646003723, 0.7453333139419556, 0.7463333606719971, 0.7363333106040955, 0.7419999837875366, 0.7556666731834412, 0.7603333592414856, 0.7673333287239075, 0.7873333096504211, 0.765999972820282, 0.7670000195503235, 0.7786666750907898, 0.7763333320617676, 0.7536666393280029]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 6, 3, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7802857160568237, "mapping_values": [1, 40, 40, 25, 15, 6, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.sqrt(alpha), grad), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2225629291388307, 1.7197788552742876, 1.3032218378139069, 1.0701023707882982, 0.9623344289376325, 0.9323935363790568, 0.8429932685072207, 0.8046594454690749, 0.7700951707644973, 0.7692240072735832, 0.7397546190800464, 0.7063553676141047, 0.7132308750718797, 0.679790223610006, 0.6747930372915468, 0.6484038577481599, 0.6825211235340387, 0.6349037614843046, 0.6556664627651103], "accuracy": [0.24263638257980347, 0.4605732262134552, 0.5503896474838257, 0.616299033164978, 0.6498481035232544, 0.6593580842018127, 0.6906617283821106, 0.7062475085258484, 0.7100779414176941, 0.7125874757766724, 0.7250033020973206, 0.7359662055969238, 0.7329282760620117, 0.7448157668113708, 0.746268630027771, 0.7555144429206848, 0.7412495017051697, 0.7629110813140869, 0.748249888420105], "val_loss": [1.7078521592276437, 1.056330748966762, 0.802751898765564, 0.7534303835460118, 0.6783253805977958, 0.6634396655218942, 0.6041764191218785, 0.5757134812218803, 0.5889453377042498, 0.5588877882276263, 0.5469821180616107, 0.5482040132795062, 0.5201284033911568, 0.5022398233413696, 0.5067821741104126, 0.4956539699009487, 0.5030084848403931, 0.49136980942317415, 0.5031357152121407], "val_accuracy": [0.47466665506362915, 0.6050000190734863, 0.6863333582878113, 0.6499999761581421, 0.6983333230018616, 0.7139999866485596, 0.750333309173584, 0.7459999918937683, 0.7253333330154419, 0.7396666407585144, 0.753333330154419, 0.7603333592414856, 0.765999972820282, 0.7860000133514404, 0.7683333158493042, 0.7680000066757202, 0.7803333401679993, 0.7716666460037231, 0.7583333253860474]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [4, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.3871428668498993, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7760916554523165, 2.560330263454491, 2.3070627423073433, 2.2937884541739404, 2.2942568239298446, 2.3050185633908646, 2.303561474117762, 2.3032064515019233, 2.3031123125982984], "accuracy": [0.16893409192562103, 0.19640734791755676, 0.10051512718200684, 0.12098798155784607, 0.17857614159584045, 0.09998679161071777, 0.09192973375320435, 0.0956280529499054, 0.09509972482919693], "val_loss": [1.9685844693865096, 1.9813918386186873, 1.9737979343959264, 1.8941256659371513, 1.9768005098615373, 1.9741080829075404, 1.9737646920340401, 1.9738388742719377, 1.9736873762948173], "val_accuracy": [0.21199999749660492, 0.09933333098888397, 0.11166666448116302, 0.28299999237060547, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [7, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1825714260339737, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.2356107793605684, 2.5636419135471455, 2.3902703976319404, 3.886609705825602, NaN, NaN], "accuracy": [0.1702549159526825, 0.11015717685222626, 0.09694888442754745, 0.10685510188341141, 0.11134592443704605, 0.09998679161071777], "val_loss": [2.2472573689052036, 1.9984030042375838, 2.0880372183663503, 4.133092880249023, NaN, NaN], "val_accuracy": [0.20399999618530273, 0.10100000351667404, 0.09833333641290665, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 8, 8, 3, 5, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 1, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.305741302467309, 2.313871031439835, 2.319760797203587, 2.347907832112562, 2.396469214022073, 2.412161828724936, 2.419828298683605], "accuracy": [0.09655263274908066, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09536388516426086, 0.09998679161071777], "val_loss": [1.978407723563058, 1.986743995121547, 1.9913780348641532, 2.0543743542262485, 2.056429862976074, 2.0750790323529924, 2.0777341978890553], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 6, 0, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 42, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [22, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [7, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [92, 43, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027121147790117, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.508510553857292, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02615242451429367, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14.922291891915458, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.049666665494441986, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 8, 8, 3, 0, 8, 0, 2, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 42, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [26, 43, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303477482725805, 2.302578139377544, 2.3025783232851524, 2.3025786707256732, 2.30257608751658, 2.30257683958533, 2.302577531537706, 2.3025769689819673], "accuracy": [0.0886276587843895, 0.10117553919553757, 0.10434553027153015, 0.09998679161071777, 0.107647605240345, 0.10011887550354004, 0.10381719470024109, 0.10606260597705841], "val_loss": [1.9736446653093611, 1.973644733428955, 1.973644733428955, 1.973644597189767, 1.9736440522330148, 1.9736441203526087, 1.9736437797546387, 1.9736436435154505], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3027121147790117, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [76, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023792949445245, 2.302584639094399, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09457138925790787, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [785.3932119497234, 13491.997873000182, 61132.792833055406, 168185.95599161275, 356234.1619667151, 651044.7890305112], "accuracy": [0.1002509593963623, 0.10342095047235489, 0.09734513610601425, 0.09681680053472519, 0.10130762308835983, 0.09893012791872025], "val_loss": [2739.8981584821427, 20742.485491071428, 68931.14955357143, 162212.48214285713, 315494.72321428574, 543686.1964285715], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 6, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 42, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [8, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 2, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.36261927746133, 3.0389398507879175, 4.93865951920513, 8.034933961251818, 12.290877560519933, 17.855058938599438], "accuracy": [0.09457138925790787, 0.10276053100824356, 0.09866596013307571, 0.09800554811954498, 0.1002509593963623, 0.09959053993225098], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 88, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.08257143199443817, "mapping_values": [1, 13, 13, 10, 3, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302595849869163, 2.299209218975607, 2.2998586384973914, 2.3021199948846576, 2.3023469483674464, 2.302731877950362, 2.3031768511000124, 2.3037167168910617, 2.3046174783748232, 2.305901827608763], "accuracy": [0.08572183549404144, 0.09906221181154251, 0.1002509593963623, 0.09219389408826828, 0.10659094154834747, 0.10513802617788315, 0.1002509593963623, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.969684328351702, 1.9704315321786063, 1.972433294568743, 1.97338901247297, 1.9738005910600935, 1.9741716384887695, 1.974553448813302, 1.9751579420907157, 1.9761172022138322, 1.9779832022530692], "val_accuracy": [0.06233333423733711, 0.08366666734218597, 0.07366666942834854, 0.0976666659116745, 0.1133333370089531, 0.1003333330154419, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 8, 8, 3, 2, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.054571427404880524, "mapping_values": [1, 2, 2, 2, 0, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034378166889016, 2.3015324605564635, 2.30291938712458, 2.301434732210902, 2.301947555647802, 2.303867598377309, 2.3029593454927046, 2.301977180234823, 2.3019079662915534, 2.300659306659328, 2.3022910764487885, 2.301924554222469, 2.301672860127808, 2.3027259144942365, 2.3015501521849564, 2.3002571738422852, 2.301843159297328, 2.3013707445502645, 2.29943902447491, 2.3014059484028593, 2.3004712527218025, 2.3013791273361686, 2.2998372753298497, 2.300641981365973, 2.3001150506409704, 2.2999525183243223, 2.3014361262872565, 2.300168158812467, 2.3003098161040105, 2.299109714913913, 2.300316242982116, 2.299921893456262, 2.2995840465828823, 2.299352920097902, 2.2999548326315202, 2.3002465482968004, 2.2992810025868273, 2.298572216618409, 2.3020103766602955, 2.2991699581967526, 2.299049989028677, 2.29855570845427, 2.3001387987815787, 2.2988238220343327, 2.2994322864339494, 2.29858545421877, 2.300144105177388, 2.2982720052718864, 2.296548299911614, 2.299700605996832, 2.2996146724901463, 2.299185998467186, 2.2989818316409143, 2.3000605928584523, 2.2992021242357628, 2.297692975379441, 2.3002284896403666, 2.2989451871997155, 2.2972106153560965, 2.2991361872174596, 2.299331611945188, 2.297676382283997, 2.2971346379271145, 2.2978576011567022, 2.298106263074672, 2.298330153015705, 2.297339346525046, 2.299219994512862, 2.2977458989820176, 2.298136165129148, 2.299869363113653, 2.297180676331153, 2.2975486142996546, 2.2969914470854498, 2.2975710448871087, 2.299074441970001, 2.2968379023714056, 2.298695545217947, 2.2960457898181397, 2.2981985147524315, 2.295196179936764, 2.2965145666270823, 2.2962249892656406, 2.2981634920677254, 2.297006286728919, 2.2971440408648975, 2.2974756604503126, 2.2968936094030368, 2.297196386355167, 2.2974465966240416, 2.2966072693508472, 2.2972160812854576, 2.2978650242535035, 2.296834383784284, 2.2986311489297195, 2.296232701733506, 2.2967929132169562, 2.2973430854234054, 2.297328638567538, 2.295359250246148], "accuracy": [0.08506141602993011, 0.09021265059709549, 0.09113723784685135, 0.09325055778026581, 0.09153348207473755, 0.09166556596755981, 0.08796724677085876, 0.09509972482919693, 0.09391097724437714, 0.09140139818191528, 0.09140139818191528, 0.09668471664190292, 0.09787346422672272, 0.09126931428909302, 0.08902391046285629, 0.09813763201236725, 0.09219389408826828, 0.09192973375320435, 0.09972262382507324, 0.09351472556591034, 0.08466517180204391, 0.09245806187391281, 0.0956280529499054, 0.09721305221319199, 0.09008057415485382, 0.09589222073554993, 0.09272222965955734, 0.09509972482919693, 0.09734513610601425, 0.09972262382507324, 0.09826971590518951, 0.09747721254825592, 0.0936468094587326, 0.09853387624025345, 0.09496764093637466, 0.0952318087220192, 0.09602430462837219, 0.09879804402589798, 0.09457138925790787, 0.10196803510189056, 0.09972262382507324, 0.10051512718200684, 0.09774138033390045, 0.09708096832036972, 0.09787346422672272, 0.10408136248588562, 0.09813763201236725, 0.10157178342342377, 0.10011887550354004, 0.10381719470024109, 0.09681680053472519, 0.10077928751707077, 0.0956280529499054, 0.09774138033390045, 0.10857218503952026, 0.10394927859306335, 0.0956280529499054, 0.09800554811954498, 0.10276053100824356, 0.10130762308835983, 0.10328886657953262, 0.10553427785634995, 0.11042134463787079, 0.09972262382507324, 0.09826971590518951, 0.1014397069811821, 0.09826971590518951, 0.10196803510189056, 0.09668471664190292, 0.10434553027153015, 0.09760929644107819, 0.1002509593963623, 0.10632677376270294, 0.10011887550354004, 0.1022322028875351, 0.09932637959718704, 0.09919429570436478, 0.10474177449941635, 0.10976093262434006, 0.10315678268671036, 0.1072513535618782, 0.10791176557540894, 0.10447761416435242, 0.09866596013307571, 0.10302469879388809, 0.10302469879388809, 0.10394927859306335, 0.10540219396352768, 0.10527011007070541, 0.10474177449941635, 0.10500594228506088, 0.10566636174917221, 0.10315678268671036, 0.10289261490106583, 0.09853387624025345, 0.10645885765552521, 0.10487385839223862, 0.10474177449941635, 0.10566636174917221, 0.10130762308835983], "val_loss": [1.9709224019731795, 1.9708374568394251, 1.9707516261509486, 1.970681939806257, 1.9706032616751534, 1.9705306461879186, 1.9704506737845284, 1.970371927533831, 1.970292227608817, 1.9702211107526506, 1.9701501982552665, 1.9700801713126046, 1.9700038092476981, 1.9699373926435197, 1.9698643003191267, 1.9697820799691337, 1.969717570713588, 1.9696521759033203, 1.9695867129734583, 1.9695241110665458, 1.9694531304495675, 1.96938385282244, 1.9693159375871931, 1.9692488397870744, 1.9691874640328544, 1.9691266332353865, 1.9690661430358887, 1.9690026555742537, 1.9689366476876395, 1.9688694817679269, 1.9688130106244768, 1.968754427773612, 1.9686963217599052, 1.9686340604509627, 1.9685773849487305, 1.9685207094464983, 1.9684626034327917, 1.9684019088745117, 1.968339238848005, 1.9682763644627161, 1.9682224818638392, 1.9681697572980608, 1.9681145804268974, 1.9680565425327845, 1.9680018424987793, 1.9679485729762487, 1.9678965977260046, 1.9678429876055037, 1.9677956444876534, 1.9677440779549735, 1.9676929882594518, 1.9676403318132674, 1.9675899233136858, 1.9675406047276087, 1.967489583151681, 1.9674363136291504, 1.9673846789768763, 1.9673282078334264, 1.9672763688223702, 1.9672298431396484, 1.9671763692583357, 1.9671310016087122, 1.9670854296003069, 1.9670361110142298, 1.9669878142220634, 1.9669412885393416, 1.966895375932966, 1.9668460573468889, 1.9667953763689314, 1.966751984187535, 1.966702665601458, 1.9666609082903181, 1.9666167667933874, 1.9665726934160506, 1.966522216796875, 1.966472557612828, 1.9664256232125419, 1.9663809367588587, 1.9663307326180595, 1.9662864548819405, 1.9662446975708008, 1.9661974225725447, 1.9661455835614885, 1.9661015101841517, 1.9660556656973702, 1.9660070964268275, 1.9659654753548759, 1.9659174510410853, 1.9658778054373605, 1.9658356394086565, 1.9657912254333496, 1.9657432692391532, 1.965689046042306, 1.9656451089041573, 1.9656031472342355, 1.9655565534319197, 1.9655085972377233, 1.9654632295880998, 1.965416090829032, 1.9653692926679338], "val_accuracy": [0.039000000804662704, 0.039000000804662704, 0.03966666758060455, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.04233333468437195, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.04466666653752327, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.04633333161473274, 0.04699999839067459, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.04933333396911621, 0.049666665494441986, 0.05000000074505806, 0.050999999046325684, 0.05133333429694176, 0.05133333429694176, 0.05133333429694176, 0.05133333429694176, 0.05233333259820938, 0.05299999937415123, 0.0533333346247673, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.054999999701976776, 0.05533333495259285, 0.0560000017285347, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.05766666680574417, 0.057999998331069946, 0.058666665107011795, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.060333333909511566, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.06133333221077919, 0.061666667461395264, 0.06199999898672104, 0.06233333423733711, 0.06300000101327896, 0.06300000101327896, 0.06300000101327896, 0.06366666406393051, 0.06400000303983688, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421, 0.06499999761581421, 0.06499999761581421, 0.06499999761581421, 0.06533333659172058, 0.06566666811704636, 0.06599999964237213, 0.06700000166893005, 0.06733333319425583, 0.06800000369548798, 0.06833333522081375, 0.06866666674613953, 0.06933332979679108, 0.07066666334867477, 0.07100000232458115, 0.0716666653752327, 0.0716666653752327, 0.07199999690055847, 0.07199999690055847, 0.07199999690055847, 0.07199999690055847, 0.0716666653752327, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.07366666942834854]}}]