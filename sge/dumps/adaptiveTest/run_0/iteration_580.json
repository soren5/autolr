[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.041380453355371, 1.1123617977718745, 0.8112882405082548, 0.7155356645473888, 0.6523137636912765, 0.5989113350538703, 0.5588011324933145, 0.5247176596281031, 0.49331982184426343, 0.4790447444695964, 0.4611783908886003, 0.4397582065797737, 0.421524588280917, 0.42335050165645355, 0.4025763366413217, 0.3892589472367102, 0.36401877112675807, 0.3651922317252514, 0.3580985855133526, 0.34469408388103806, 0.3273158347121697, 0.32969079828454423, 0.3313830588920761, 0.31124272811461623, 0.3041058731959276, 0.2987389406507923, 0.29598503275129223, 0.2862100337970652, 0.2751248530101751, 0.2727509591250671, 0.26398550315642355, 0.2568166750320716, 0.24227729698355488, 0.24993093506046934, 0.23899028033092903, 0.22777661588276696, 0.2276509853953053, 0.2219658339728989, 0.21881043832055833, 0.20922784478539064, 0.19941221993982894, 0.19919106404204426, 0.1973812809205877, 0.18506282113129358, 0.1821633368167643], "accuracy": [0.3123761713504791, 0.6067890524864197, 0.6991150379180908, 0.7309470176696777, 0.754589855670929, 0.7733456492424011, 0.7926297783851624, 0.8016114234924316, 0.8142913579940796, 0.8228767514228821, 0.8297450542449951, 0.8408400416374207, 0.8450667262077332, 0.8453308939933777, 0.8500858545303345, 0.8562937378883362, 0.8615770936012268, 0.8664641380310059, 0.8708229064941406, 0.871879518032074, 0.8772949576377869, 0.8766345381736755, 0.8784837126731873, 0.8787478804588318, 0.887201189994812, 0.8894465565681458, 0.8894465565681458, 0.8934090733528137, 0.8949940800666809, 0.897899866104126, 0.9000132083892822, 0.9049002528190613, 0.9085986018180847, 0.9082023501396179, 0.9137498140335083, 0.9128252267837524, 0.9144102334976196, 0.9149385690689087, 0.91559898853302, 0.9189010858535767, 0.9228635430335999, 0.923920214176178, 0.9223352074623108, 0.9289394021034241, 0.9290714859962463], "val_loss": [0.9339904103960309, 0.6524231604167393, 0.5730138335909162, 0.5201593467167446, 0.4956896986280169, 0.47494045325687956, 0.4403498683656965, 0.41836313690458027, 0.39723180873053415, 0.38155331781932283, 0.3735515645572117, 0.36626845598220825, 0.357053279876709, 0.3367070470537458, 0.33857904161725727, 0.3349973899977548, 0.33046434606824604, 0.31803265639713835, 0.31421356541769846, 0.31495702266693115, 0.3137833901814052, 0.30507252897535053, 0.3052114503724234, 0.30761962277548655, 0.30519033329827444, 0.29455286264419556, 0.3178566098213196, 0.30434536082404, 0.29615165506090435, 0.29766940219061716, 0.29193657636642456, 0.30459095750536236, 0.29885914496013094, 0.2920123679297311, 0.28468112434659687, 0.29698653732027325, 0.29019512448992046, 0.2863179360117231, 0.3041314993585859, 0.287287780216762, 0.2975480556488037, 0.2895726135798863, 0.30501495940344675, 0.30246457031794954, 0.2994456546647208], "val_accuracy": [0.6169999837875366, 0.7073333263397217, 0.7543333172798157, 0.7606666684150696, 0.7609999775886536, 0.7856666445732117, 0.7923333048820496, 0.8059999942779541, 0.8233333230018616, 0.8296666741371155, 0.8366666436195374, 0.8393333554267883, 0.8483333587646484, 0.8486666679382324, 0.8500000238418579, 0.8493333458900452, 0.8533333539962769, 0.8566666841506958, 0.8646666407585144, 0.8560000061988831, 0.8606666922569275, 0.862333357334137, 0.8619999885559082, 0.8659999966621399, 0.8683333396911621, 0.871999979019165, 0.8656666874885559, 0.8683333396911621, 0.8696666955947876, 0.8726666569709778, 0.8733333349227905, 0.8696666955947876, 0.8736666440963745, 0.8740000128746033, 0.878000020980835, 0.8786666393280029, 0.8766666650772095, 0.8796666860580444, 0.8693333268165588, 0.8836666941642761, 0.8793333172798157, 0.8809999823570251, 0.8826666474342346, 0.8833333253860474, 0.8816666603088379]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 1, 6, 3, 4, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [49, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.843999981880188, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 1, 2, 1, 12, 10, 7, 3, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0413769207862327, 1.1128517030063574, 0.8106135971841244, 0.7150123185957774, 0.6516633170502234, 0.5986439560256724, 0.5596372855574054, 0.5263534580412605, 0.4933868948502579, 0.4782373351018505, 0.46150706763737365, 0.4403251255893783, 0.4185820591093889, 0.41902626193730175, 0.4010838922287857, 0.3919010581892747, 0.3703018864423623, 0.3664550341792693, 0.35948594074916246, 0.33961873969869877, 0.3260786335434597, 0.3286898129171526, 0.317176554850489, 0.3062182004464978, 0.2986412755077258, 0.29743599433468126, 0.2939823738627383, 0.2792424662568865, 0.27239128972844456, 0.2732968704536087, 0.2596348722231245, 0.25475850603513084, 0.24541412040605018, 0.25076374291917036, 0.2459324231874894, 0.23876031840387635, 0.22661538856880714, 0.22438921679311724, 0.2206825638420436, 0.21189724690469186, 0.1993926283985223, 0.19407070666185508, 0.19519827927714561, 0.18546400442689936, 0.19024857504138573, 0.18370268841768223, 0.18945400861268188, 0.1711605764426544, 0.17466418621460084, 0.1666701321750033, 0.16054768296650704, 0.15385616747552944, 0.153054366179776], "accuracy": [0.3121120035648346, 0.6057323813438416, 0.6979262828826904, 0.7306828498840332, 0.7524765729904175, 0.7728173136711121, 0.7890635132789612, 0.802271842956543, 0.8125742673873901, 0.8204993009567261, 0.829216718673706, 0.8437458872795105, 0.847840428352356, 0.8459912538528442, 0.8525954484939575, 0.8556333184242249, 0.863558292388916, 0.8648791313171387, 0.8698983192443848, 0.8757099509239197, 0.8780874609947205, 0.8742570281028748, 0.8849557638168335, 0.8815215826034546, 0.8860124349594116, 0.8898428082466125, 0.8885219693183899, 0.8911636471748352, 0.8985602855682373, 0.895918607711792, 0.9019944667816162, 0.9029190540313721, 0.9071456789970398, 0.9038436412811279, 0.9085986018180847, 0.9072777628898621, 0.9093911051750183, 0.9133535623550415, 0.9134856462478638, 0.9165235757827759, 0.9225993752479553, 0.9261656403541565, 0.924448549747467, 0.9290714859962463, 0.9270902276039124, 0.930788516998291, 0.9314489364624023, 0.9338264465332031, 0.9306564331054688, 0.9375247359275818, 0.9380530714988708, 0.941091001033783, 0.9404305815696716], "val_loss": [0.9340246064322335, 0.6530915669032505, 0.5727346454347882, 0.5195225817816598, 0.49649696690695627, 0.47350357260022846, 0.43990698882511686, 0.41912547179630827, 0.39963100637708393, 0.38374357564108713, 0.37169383253370014, 0.3636231677872794, 0.35499863965170725, 0.3404270921434675, 0.33981840099607197, 0.3402029275894165, 0.3315423812185015, 0.31705619607652935, 0.31762808561325073, 0.3164407696042742, 0.31281558104923796, 0.3046472498348781, 0.3015018616403852, 0.3025012271744864, 0.3014809659549168, 0.29559522015707834, 0.3007276824542454, 0.300319424697331, 0.2931017109325954, 0.2915730816977365, 0.2836851647921971, 0.2992266757147653, 0.3027253917285374, 0.28611007758549284, 0.29442127261843, 0.29498912606920513, 0.2910600219454084, 0.2797985417502267, 0.29885023832321167, 0.28460519654410227, 0.29306832381657194, 0.2932704772268023, 0.29601621627807617, 0.29306947333472116, 0.30327433347702026, 0.30909706013543264, 0.3044176016535078, 0.29184109824044363, 0.30552391495023457, 0.3153894713946751, 0.3052842361586435, 0.33181514910289217, 0.3204013279506138], "val_accuracy": [0.6173333525657654, 0.7073333263397217, 0.7556666731834412, 0.7613333463668823, 0.7613333463668823, 0.784333348274231, 0.7926666736602783, 0.8073333501815796, 0.8180000185966492, 0.8293333053588867, 0.8386666774749756, 0.840666651725769, 0.8489999771118164, 0.847000002861023, 0.8516666889190674, 0.8489999771118164, 0.8533333539962769, 0.8610000014305115, 0.8583333492279053, 0.8536666631698608, 0.8600000143051147, 0.8653333187103271, 0.8636666536331177, 0.8693333268165588, 0.8696666955947876, 0.875333309173584, 0.8703333139419556, 0.8700000047683716, 0.8706666827201843, 0.8733333349227905, 0.8776666522026062, 0.8656666874885559, 0.8730000257492065, 0.878000020980835, 0.8756666779518127, 0.8803333044052124, 0.8796666860580444, 0.8843333125114441, 0.871666669845581, 0.8843333125114441, 0.8823333382606506, 0.8820000290870667, 0.8846666812896729, 0.8856666684150696, 0.8786666393280029, 0.878000020980835, 0.8803333044052124, 0.887333333492279, 0.8826666474342346, 0.8823333382606506, 0.8806666731834412, 0.8803333044052124, 0.887333333492279]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 8, 4, 1, 0, 0, 3, 5, 2, 6, 4, 1], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8360000252723694, "mapping_values": [1, 8, 8, 5, 3, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0413768847762412, 1.112862213814279, 0.8103218629942468, 0.7146582319877876, 0.6508523572343073, 0.5985602319138225, 0.5600211781722333, 0.5246447190601025, 0.4945197383591591, 0.47822834369276873, 0.463967305101408, 0.4409442665027101, 0.42128503513122045, 0.4192598567599744, 0.3995273677451877, 0.39294134221529176, 0.36556612497402013, 0.36695330763899214, 0.3549691441784666, 0.3436125905136501, 0.32947662463277605, 0.33086229020562613, 0.32392425819977544, 0.31358847935690054, 0.3032193734795111, 0.2988023046749049, 0.29174663927718525, 0.2820233441638342, 0.2739999352736228, 0.27636752080104887, 0.26564482289802255], "accuracy": [0.3121120035648346, 0.6057323813438416, 0.6985867023468018, 0.7323999404907227, 0.755118191242218, 0.7730814814567566, 0.7903843522071838, 0.8018755912780762, 0.8128384351730347, 0.8214238286018372, 0.8294808864593506, 0.8385946154594421, 0.8457271456718445, 0.8457271456718445, 0.8541803956031799, 0.8535200357437134, 0.8642187118530273, 0.8656716346740723, 0.8725399374961853, 0.8714832663536072, 0.8799365758895874, 0.8757099509239197, 0.8823140859603882, 0.8779553771018982, 0.8868049383163452, 0.8886540532112122, 0.889050304889679, 0.8928807377815247, 0.8993527889251709, 0.8947299122810364, 0.8947299122810364], "val_loss": [0.9340227331433978, 0.6535776512963432, 0.5722198145730155, 0.5191584484917777, 0.4976649454661778, 0.47276358945029123, 0.43817869254520964, 0.41996486697878155, 0.39811703136989046, 0.383108913898468, 0.37256678513118197, 0.3688388296536037, 0.35568383761814665, 0.33697480814797537, 0.34223508834838867, 0.33682563475200106, 0.32738245385033743, 0.3162856698036194, 0.3150718893323626, 0.31608703306743074, 0.32036965233939035, 0.3044541989053999, 0.3036536318915231, 0.30551427602767944, 0.30149364471435547, 0.2984799231801714, 0.3073166608810425, 0.2941314237458365, 0.29420584440231323, 0.293175859110696, 0.29026007652282715], "val_accuracy": [0.6173333525657654, 0.7056666612625122, 0.7553333044052124, 0.7609999775886536, 0.7593333125114441, 0.7860000133514404, 0.7913333177566528, 0.8066666722297668, 0.8213333487510681, 0.8273333311080933, 0.8376666903495789, 0.8363333344459534, 0.8433333039283752, 0.8523333072662354, 0.8463333249092102, 0.8453333377838135, 0.8533333539962769, 0.8576666712760925, 0.8606666922569275, 0.8560000061988831, 0.8550000190734863, 0.8679999709129333, 0.8676666617393494, 0.8643333315849304, 0.8646666407585144, 0.875333309173584, 0.8673333525657654, 0.874666690826416, 0.8690000176429749, 0.8723333477973938, 0.8713333606719971]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 1, 0, 5, 2, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8345714211463928, "mapping_values": [1, 22, 22, 13, 9, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.041376301908789, 1.112567523443436, 0.8106791620650674, 0.7146137097508223, 0.6510471668398974, 0.598545773831404, 0.5608495540780131, 0.5292789670360118, 0.4934723805151501, 0.47480502248345713, 0.4622377942243288, 0.44006062634491006, 0.4201136039523968, 0.42362631030952486, 0.40246065678361576, 0.3894049245305679, 0.36850707479959877, 0.36815965531870926, 0.35867964508133227, 0.3385138970718187, 0.3280942273681599, 0.33246208331556903, 0.3198987955564301, 0.3070272970248396, 0.3007291204319056, 0.294841047082642, 0.28966033920840567, 0.2765944682966055, 0.268835911059093, 0.2690365431905816, 0.25898835378678214], "accuracy": [0.31224408745765686, 0.6062607169151306, 0.6991150379180908, 0.7314753532409668, 0.7540615797042847, 0.7746664881706238, 0.7903843522071838, 0.8017435073852539, 0.8145555257797241, 0.8251221776008606, 0.8284242749214172, 0.8388587832450867, 0.8467837572097778, 0.8457271456718445, 0.8519350290298462, 0.8539162874221802, 0.8627657890319824, 0.8648791313171387, 0.8713511824607849, 0.8734645247459412, 0.8811253309249878, 0.874389111995697, 0.8829745054244995, 0.8809932470321655, 0.8868049383163452, 0.8894465565681458, 0.893541157245636, 0.8934090733528137, 0.9021265506744385, 0.8988244533538818, 0.9012019634246826], "val_loss": [0.9339841093335833, 0.653067912374224, 0.5726386308670044, 0.5200831549508231, 0.49706108229500906, 0.4741155930927822, 0.4401595762797764, 0.4168728419712612, 0.39929436785834177, 0.38153726713997976, 0.3721508298601423, 0.3627450721604483, 0.3561224341392517, 0.3386810081345694, 0.33826727526528494, 0.33417018822261263, 0.3295831424849374, 0.3185209035873413, 0.3153277805873326, 0.3164019414356777, 0.3167194809232439, 0.3047826290130615, 0.3056695376123701, 0.3030150958469936, 0.30070803846631733, 0.29486863953726633, 0.30431593315941946, 0.3025357297488621, 0.2914763603891645, 0.294198819569179, 0.29047461066927227], "val_accuracy": [0.6169999837875366, 0.7070000171661377, 0.7540000081062317, 0.7613333463668823, 0.7633333206176758, 0.7876666784286499, 0.7916666865348816, 0.8096666932106018, 0.8216666579246521, 0.8333333134651184, 0.8366666436195374, 0.8429999947547913, 0.8473333120346069, 0.8523333072662354, 0.8536666631698608, 0.8510000109672546, 0.8510000109672546, 0.859333336353302, 0.8576666712760925, 0.8579999804496765, 0.8569999933242798, 0.8666666746139526, 0.862333357334137, 0.8679999709129333, 0.8696666955947876, 0.8769999742507935, 0.871999979019165, 0.8673333525657654, 0.8723333477973938, 0.871999979019165, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 7, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8339999914169312, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0413768375869346, 1.112849210113535, 0.8107776517456139, 0.7151493780002964, 0.6518393683395743, 0.5990198876533085, 0.5592637305577134, 0.5276947424884454, 0.4934369075047956, 0.48058565652775115, 0.46169482253608984, 0.4409957653173067, 0.418995335680414, 0.41724735144941544, 0.39917565054188725, 0.38749611561544944, 0.3621759466829868, 0.3672030059109747, 0.35820087296473685, 0.34500046396976636, 0.32957378851345515, 0.3309473049536735, 0.32507217581860065, 0.30707017207630655, 0.29821516531900316, 0.2983847487761659, 0.290152523019578, 0.2774024019781719, 0.27193148990962895, 0.26999020829192555, 0.2600220108013332, 0.25356253348226954, 0.24568199143040023, 0.24931649134899442, 0.24484394015007488, 0.23339915164961492, 0.22890926460194125, 0.22460514691999922, 0.2197617749890096, 0.21153655098516236, 0.2024944019654581, 0.19668174552651382, 0.19251870243792774, 0.18462418322675908, 0.1885335024093451, 0.18356037232594294, 0.18760372590253444], "accuracy": [0.3121120035648346, 0.6057323813438416, 0.6976621150970459, 0.7316074371337891, 0.7535332441329956, 0.7737419009208679, 0.7923656105995178, 0.8017435073852539, 0.8131026029586792, 0.8212917447090149, 0.8290846943855286, 0.839519202709198, 0.8477083444595337, 0.8482366800308228, 0.8510104417800903, 0.8573504090309143, 0.8643507957458496, 0.867520809173584, 0.8696341514587402, 0.8709549307823181, 0.8792761564254761, 0.8741249442100525, 0.8835028409957886, 0.882710337638855, 0.887201189994812, 0.8857482671737671, 0.8887861371040344, 0.8944657444953918, 0.8997490406036377, 0.8975036144256592, 0.9051644206047058, 0.9043719172477722, 0.9074098467826843, 0.9072777628898621, 0.9058248400688171, 0.9080702662467957, 0.9099194407463074, 0.9162594079971313, 0.915070652961731, 0.9207502603530884, 0.9192973375320435, 0.9241843819618225, 0.9249768853187561, 0.9274864792823792, 0.9281468987464905, 0.9294676780700684, 0.9293355941772461], "val_loss": [0.9340234824589321, 0.6530376332146781, 0.5730177674974714, 0.5199306351797921, 0.49641726698194233, 0.47314187458583284, 0.44019973278045654, 0.4201350893293108, 0.40062397718429565, 0.3828683750970023, 0.3727614624159677, 0.36321074622017996, 0.3550769942147391, 0.3359107886041914, 0.34073563132967266, 0.33671960660389494, 0.3312124865395682, 0.31845727988651823, 0.31680965423583984, 0.3187645162854876, 0.3189287781715393, 0.3060177394321987, 0.3001766971179417, 0.30617029326302664, 0.30055941002709524, 0.2946111134120396, 0.30672283683504376, 0.29836509057453703, 0.2965337463787624, 0.29830230985369, 0.287746182509831, 0.30142482689448763, 0.30021761996405466, 0.2931492839540754, 0.2919560500553676, 0.28905809777123587, 0.29117250442504883, 0.29017068658556255, 0.3049487130982535, 0.2869785598346165, 0.29658537251608713, 0.29392249243600027, 0.30075083460126606, 0.304500869342259, 0.3052508405276707, 0.31138141666139874, 0.3052300214767456], "val_accuracy": [0.6173333525657654, 0.7073333263397217, 0.7540000081062317, 0.762333333492279, 0.7593333125114441, 0.7846666574478149, 0.7916666865348816, 0.8050000071525574, 0.8206666707992554, 0.8273333311080933, 0.8360000252723694, 0.8403333425521851, 0.8446666598320007, 0.8513333201408386, 0.8496666550636292, 0.8423333168029785, 0.8560000061988831, 0.8610000014305115, 0.8640000224113464, 0.8579999804496765, 0.8560000061988831, 0.8666666746139526, 0.8693333268165588, 0.8669999837875366, 0.8706666827201843, 0.8736666440963745, 0.8663333058357239, 0.8740000128746033, 0.8709999918937683, 0.8730000257492065, 0.875333309173584, 0.8703333139419556, 0.8709999918937683, 0.874666690826416, 0.8723333477973938, 0.878000020980835, 0.8756666779518127, 0.8766666650772095, 0.8676666617393494, 0.8813333511352539, 0.8806666731834412, 0.8816666603088379, 0.8809999823570251, 0.8813333511352539, 0.8790000081062317, 0.875, 0.8736666440963745]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 0, 2, 4, 1, 0, 0, 5, 0, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8308571577072144, "mapping_values": [1, 17, 17, 11, 6, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.negative(grad))))))), tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0413806062915527, 1.1123418661077749, 0.8112856413253373, 0.7151962257788843, 0.6511376297721112, 0.5984319364547478, 0.5604341412343212, 0.5271075146309436, 0.49488858437541294, 0.47662420925714905, 0.4621285656935755, 0.43717126391425565, 0.4203831860969064, 0.4192772130208198, 0.39810508601401917, 0.3860922799000509, 0.3659334331101367, 0.36182543627101954, 0.3573470488712221, 0.3426987493019283, 0.32660788936527446, 0.3317308999394319, 0.32346855593064616, 0.3075914406237932, 0.29944364780274996, 0.3002255946110426, 0.2932558167667248, 0.2783868796695351, 0.27279414524098017, 0.2729466807147877, 0.26581482239497606], "accuracy": [0.3123761713504791, 0.6067890524864197, 0.6995112895965576, 0.7317395210266113, 0.7539294958114624, 0.7709681391716003, 0.7921014428138733, 0.8006868362426758, 0.8127063512802124, 0.8232730031013489, 0.828820526599884, 0.8397833704948425, 0.845859169960022, 0.8481045961380005, 0.8506141901016235, 0.8576145768165588, 0.8615770936012268, 0.8681812286376953, 0.8701624870300293, 0.8726720213890076, 0.8790120482444763, 0.8757099509239197, 0.8833707571029663, 0.8815215826034546, 0.8865407705307007, 0.8878615498542786, 0.8889182209968567, 0.8938053250312805, 0.8953903317451477, 0.894069492816925, 0.8957865834236145], "val_loss": [0.933988196509225, 0.652576037815639, 0.5728627783911568, 0.5202454498835972, 0.4954426458903721, 0.4726189545222691, 0.43887451716831755, 0.42065141030720304, 0.39833831787109375, 0.38227401460920063, 0.372978789465768, 0.3660899315561567, 0.35766455956867765, 0.3365605132920401, 0.33939055034092497, 0.33382917301995413, 0.32960885763168335, 0.31905193839754376, 0.31622351918901714, 0.3156992793083191, 0.31651443243026733, 0.3050926498004368, 0.3028594170297895, 0.3036918725286211, 0.3049395424979074, 0.29301505429404123, 0.3051020843642099, 0.2991816742079599, 0.29448782546179636, 0.2978875381605966, 0.2964675171034677], "val_accuracy": [0.6169999837875366, 0.7076666951179504, 0.7543333172798157, 0.7609999775886536, 0.7633333206176758, 0.7853333353996277, 0.7943333387374878, 0.8063333630561829, 0.8220000267028809, 0.8286666870117188, 0.8353333473205566, 0.8399999737739563, 0.843666672706604, 0.8483333587646484, 0.8503333330154419, 0.8503333330154419, 0.8523333072662354, 0.8603333234786987, 0.8619999885559082, 0.8583333492279053, 0.8579999804496765, 0.8663333058357239, 0.8653333187103271, 0.8706666827201843, 0.8653333187103271, 0.8759999871253967, 0.8679999709129333, 0.8736666440963745, 0.8663333058357239, 0.8730000257492065, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [5, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1, 3, 9, 1, 2, 9], [2, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7097142934799194, "mapping_values": [1, 29, 29, 19, 10, 3, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), alpha))), grad))))), alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.059263950546168, 1.1309345821977812, 0.8801563230913076, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.3027341067790985, 0.6044115424156189, 0.6923788189888, 0.34420815110206604, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [0.9935098716190883, 0.7222147839409965, 0.5667427267347064, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.6293333172798157, 0.715666651725769, 0.7546666860580444, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 8, 6, 4, 3, 0, 0, 3, 5, 2, 8, 4, 1, 0, 4, 0, 0], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6039999723434448, "mapping_values": [1, 20, 20, 12, 8, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0235664082587497, 1.3411169177300863, 0.9877469334793192, 0.8416023544426906, 0.7696852084116897, 0.7183288923501496, 0.6914146773142191, 0.6694718252918141, 0.636572852968902, 0.5950962139504886, 0.5704173827530323, 0.5381541409355192, 0.5544531470229361, 0.5512856680561822, 0.5793521875450875, 0.6057504919132363, 0.6704178390533161, 0.615007489238669], "accuracy": [0.30603620409965515, 0.5987319946289062, 0.6568484902381897, 0.6942279934883118, 0.7025492191314697, 0.7285695672035217, 0.7351737022399902, 0.7540615797042847, 0.7594769597053528, 0.7729493975639343, 0.7865539789199829, 0.7926297783851624, 0.7946110367774963, 0.7960638999938965, 0.7927618622779846, 0.7825914621353149, 0.7557786107063293, 0.7737419009208679], "val_loss": [0.8878281457083566, 0.7999185834612165, 0.6181280272347587, 0.5770921196256366, 0.5312147991997855, 0.5114282880510602, 0.5007250819887433, 0.4739485127585275, 0.44824518476213726, 0.4272583212171282, 0.4149535128048488, 0.4301201956612723, 0.42367290599005564, 0.41895484924316406, 0.4344156129019601, 0.4489175932747977, 0.4501729352133615, 0.46267177377428326], "val_accuracy": [0.6536666750907898, 0.699999988079071, 0.7319999933242798, 0.731333315372467, 0.7456666827201843, 0.7666666507720947, 0.7573333382606506, 0.7806666493415833, 0.7983333468437195, 0.8130000233650208, 0.8163333535194397, 0.8226666450500488, 0.8330000042915344, 0.8109999895095825, 0.8166666626930237, 0.8113333582878113, 0.8149999976158142, 0.8116666674613953]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 3, 0, 2, 4, 1, 0, 9, 5, 3, 2, 8, 4, 1], [1, 2, 0, 2, 2, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [56, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.35742858052253723, "mapping_values": [1, 18, 18, 12, 6, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad)))))))), tf.math.add(alpha, grad))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2713859306429165, 2.371962434690327, 2.208372421898248, 2.4092291263053287, 2.31624310452153, 2.303946907777576, 2.3029390124911884, 2.3030072989921684], "accuracy": [0.25016510486602783, 0.14898955821990967, 0.1822744756937027, 0.14661207795143127, 0.1356491893529892, 0.09470347315073013, 0.10130762308835983, 0.1026284471154213], "val_loss": [2.145918437412807, 1.9745281083243233, 1.725710664476667, 1.9731737545558385, 1.9755370276314872, 1.9739841052464075, 1.9736533164978027, 1.9736426217215401], "val_accuracy": [0.1823333352804184, 0.11666666716337204, 0.2536666691303253, 0.11233333498239517, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 2, 0, 2, 3, 1, 0, 0, 5, 3, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [98, 35, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.11171428859233856, "mapping_values": [1, 19, 19, 12, 7, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), grad))))))))), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302115542777478, 2.3024048093854477, 2.301153455853163, 2.301152324663917, 2.300160254343799, 2.300603481284411, 2.3001668892516403, 2.3014487060085345, 2.301132442047095, 2.301227866981354, 2.301438737208455, 2.301421021709762, 2.3015003711036357], "accuracy": [0.09470347315073013, 0.09060890227556229, 0.09906221181154251, 0.09879804402589798, 0.09879804402589798, 0.09985470771789551, 0.10091137140989304, 0.09576013684272766, 0.10051512718200684, 0.09972262382507324, 0.09787346422672272, 0.10170386731624603, 0.09153348207473755], "val_loss": [1.9707224709647042, 1.970567226409912, 1.9705619812011719, 1.970665727342878, 1.9709078243800573, 1.9712028503417969, 1.9715429714747839, 1.9718727384294783, 1.9721787316458566, 1.9724475315638952, 1.9726810455322266, 1.9728552954537528, 1.9729973929268974], "val_accuracy": [0.04766666516661644, 0.057999998331069946, 0.07066666334867477, 0.0833333358168602, 0.09466666728258133, 0.10499999672174454, 0.10866666585206985, 0.11133333295583725, 0.109333336353302, 0.10366666316986084, 0.09866666793823242, 0.09300000220537186, 0.08733333647251129]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 3, 0, 2, 4, 4, 0, 6, 5, 0, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026586745031254, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [2, 1, 8, 6, 4, 3, 0, 0, 3, 5, 2, 8, 4, 1, 0, 4, 0, 0], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [9, 1, 8, 6, 4, 3, 0, 0, 3, 5, 2, 8, 4, 1, 0, 4, 0, 0], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 3, 0, 2, 4, 1, 6, 6, 3, 4, 2, 8, 4, 1, 5, 8, 9], [1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [6, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), grad)))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, alpha)))), alpha))))), alpha), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3020455844177783, 2.3025849854957157, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [5, 1, 6, 2, 4, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 2, 2, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [0, 1, 8, 6, 4, 3, 0, 0, 3, 5, 2, 8, 4, 1, 0, 4, 0, 0], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [49, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [879091.3289640925, 16884892.2625809, 78698961.92418438, 218558212.9705455, 463910543.33430195, 860107745.4159292], "accuracy": [0.0956280529499054, 0.09893012791872025, 0.10130762308835983, 0.09576013684272766, 0.09959053993225098, 0.10276053100824356], "val_loss": [3326858.1428571427, 26527334.285714287, 89433472.0, 211877216.0, 413690605.71428573, 714709302.8571428], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [2, 1, 8, 6, 4, 3, 0, 0, 3, 5, 2, 8, 4, 1, 0, 4, 0, 0], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [19, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 1, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 2, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 3, 0, 2, 4, 1, 0, 1, 5, 0, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0657142847776413, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3015854930235267, 2.3001690398054886, 2.3014407875263587, 2.3026191242272436, 2.302556040170186, 2.3026706411255633, 2.3030145025650084, 2.3037561246700387, 2.3051303930727247, 2.3102065592929435], "accuracy": [0.09576013684272766, 0.09866596013307571, 0.09536388516426086, 0.08387266844511032, 0.09708096832036972, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9695965903145927, 1.970745631626674, 1.9731005259922572, 1.9734298161097936, 1.9735501834324427, 1.9738660539899553, 1.974261896950858, 1.9750957489013672, 1.9774409702845983, 1.9862983567374093], "val_accuracy": [0.06466666609048843, 0.08933333307504654, 0.07000000029802322, 0.08699999749660492, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [5, 1, 6, 3, 4, 0, 3, 0, 0, 6, 8, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0657142847776413, "mapping_values": [1, 19, 19, 12, 7, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), grad), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3015854930235267, 2.3001691207689237, 2.30144158831173, 2.302618602294932, 2.302557317792716, 2.3026698000001837, 2.30301312152594, 2.303755782740448, 2.305129664307336, 2.310204589151199], "accuracy": [0.09576013684272766, 0.09866596013307571, 0.09536388516426086, 0.08387266844511032, 0.09721305221319199, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9695965221949987, 1.97074556350708, 1.973099640437535, 1.9734294755118233, 1.9735498428344727, 1.973865168435233, 1.974261692592076, 1.975095340183803, 1.9774400847298759, 1.9862937927246094], "val_accuracy": [0.06466666609048843, 0.08933333307504654, 0.06966666877269745, 0.08699999749660492, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}]