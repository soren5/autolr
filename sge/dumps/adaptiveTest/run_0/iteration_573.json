[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8477143049240112, "mapping_values": [1, 9, 9, 5, 4, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033324335072066, 1.106564860853458, 0.7828605860420552, 0.6914582124885047, 0.6301244831182827, 0.5765685995792464, 0.5349595094826148, 0.5119143327300292, 0.48980955473105386, 0.4654730610552402, 0.45208044457019925, 0.4312840726602, 0.42017525922604965, 0.39522403685282315, 0.3768602210013244, 0.37391768749190707, 0.35946129291773377, 0.34996036098554795, 0.3502471318153295, 0.33224218089456775, 0.32808963764124793, 0.32931891966647064, 0.31016155964017245, 0.3030546019460232, 0.29144075292448846, 0.2912349808154687, 0.2773832787832548, 0.26790083406300924, 0.25934856350844515, 0.24787614602320512, 0.2549888454510504, 0.24250118694426975, 0.24229361047802694, 0.2430159170251906, 0.23057551015369676, 0.23269326703824922, 0.22794468015759078, 0.20820882646218108, 0.20701247265333858, 0.2049874964348156, 0.20385788998323864, 0.2000163253827291, 0.18429182789872398, 0.18771192630433828, 0.17779902350971838, 0.18374573153086532, 0.17525886494399157, 0.17056328231837095], "accuracy": [0.30999869108200073, 0.6149781942367554, 0.7079645991325378, 0.7366266250610352, 0.7664773464202881, 0.7844406366348267, 0.7985734939575195, 0.8055738806724548, 0.8178576231002808, 0.828292191028595, 0.835160493850708, 0.844010055065155, 0.8451988101005554, 0.8568220734596252, 0.8598600029945374, 0.8638224601745605, 0.8676528930664062, 0.8693699836730957, 0.8710870146751404, 0.8782195448875427, 0.8816536664962769, 0.878879964351654, 0.8838990926742554, 0.8854840993881226, 0.8907673954963684, 0.8887861371040344, 0.8968431949615479, 0.8968431949615479, 0.9027869701385498, 0.9050323367118835, 0.9052965044975281, 0.9025228023529053, 0.9115044474601746, 0.9093911051750183, 0.913089394569397, 0.9109761118888855, 0.9125610589981079, 0.9179764986038208, 0.9199577569961548, 0.921938955783844, 0.9204860925674438, 0.9272223114967346, 0.9288073182106018, 0.9268260598182678, 0.9322414398193359, 0.9268260598182678, 0.9325056076049805, 0.9350152015686035], "val_loss": [0.9573549883706229, 0.6560827493667603, 0.5432733127049038, 0.5053462982177734, 0.4717627763748169, 0.4415523665291922, 0.4174214516367231, 0.40438657999038696, 0.3893373267991202, 0.37835200343813213, 0.3604264089039394, 0.3569604754447937, 0.34408726011003765, 0.3305089473724365, 0.32332671540124075, 0.32531745944704327, 0.3216436675616673, 0.3165384190423148, 0.3081660951886858, 0.31122430733272005, 0.31243126732962473, 0.30518828119550434, 0.29910037347248625, 0.2976618153708322, 0.2957846352032253, 0.299112754208701, 0.2906152606010437, 0.2884852375302996, 0.28881047453199116, 0.2954913718359811, 0.29573542731148855, 0.2914845177105495, 0.28635369879858835, 0.2889522399221148, 0.29537531307765413, 0.2900264433452061, 0.28976209674562725, 0.29918559959956575, 0.2916261724063328, 0.2994406989642552, 0.2939874104091099, 0.29138754095349995, 0.3071460894175938, 0.3002376300948007, 0.3041767477989197, 0.30317927258355276, 0.3116457462310791, 0.30110526936394827], "val_accuracy": [0.6083333492279053, 0.7193333506584167, 0.7573333382606506, 0.7716666460037231, 0.7876666784286499, 0.796999990940094, 0.8143333196640015, 0.8240000009536743, 0.8276666402816772, 0.8389999866485596, 0.8453333377838135, 0.840666651725769, 0.8539999723434448, 0.856333315372467, 0.8603333234786987, 0.859333336353302, 0.856333315372467, 0.8653333187103271, 0.8640000224113464, 0.8646666407585144, 0.8656666874885559, 0.871666669845581, 0.8703333139419556, 0.8743333220481873, 0.8709999918937683, 0.871666669845581, 0.8743333220481873, 0.875333309173584, 0.8769999742507935, 0.8756666779518127, 0.875333309173584, 0.8799999952316284, 0.8769999742507935, 0.878333330154419, 0.8799999952316284, 0.8806666731834412, 0.8790000081062317, 0.878333330154419, 0.8823333382606506, 0.8809999823570251, 0.8840000033378601, 0.8823333382606506, 0.8863333463668823, 0.8823333382606506, 0.8796666860580444, 0.8806666731834412, 0.8813333511352539, 0.8836666941642761]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033325198036474, 1.106589659125404, 0.7825837674126445, 0.6914591375059849, 0.6295405515054938, 0.5739404357277942, 0.5324413620438385, 0.5072542922710305, 0.4895534293251015, 0.46404094243597566, 0.4487130803328778, 0.4259993639864296, 0.41647555321561286, 0.3949062694860503, 0.3774955099119628, 0.37504435135483377, 0.36186081815027304, 0.35465792594190915, 0.3500761792384528, 0.33672958062923564, 0.33120931405684795, 0.3264253899571194, 0.311356141625961, 0.302377233774025, 0.2919081337636787, 0.28954019445422585, 0.2801110950073373, 0.2696353146397222, 0.2626888299969288, 0.2513669152080958, 0.2572669672644795, 0.24858055738189735, 0.24646270925208894, 0.24422749830526747, 0.23406360079630917, 0.23096983478195585, 0.2261231424093341, 0.20897068287190698, 0.20297603770694903], "accuracy": [0.30999869108200073, 0.6149781942367554, 0.7077004313468933, 0.7366266250610352, 0.7663452625274658, 0.7852331399917603, 0.8016114234924316, 0.8090080618858337, 0.8186501264572144, 0.82683926820755, 0.8358209133148193, 0.8450667262077332, 0.8441421389579773, 0.8549728989601135, 0.86118084192276, 0.8610487580299377, 0.8648791313171387, 0.8693699836730957, 0.873860776424408, 0.8766345381736755, 0.8798044919967651, 0.8819178342819214, 0.8840311765670776, 0.8889182209968567, 0.8885219693183899, 0.8924844861030579, 0.8975036144256592, 0.8972394466400146, 0.9009377956390381, 0.9068815112113953, 0.9031832218170166, 0.9035794734954834, 0.9064852595329285, 0.9064852595329285, 0.9126931428909302, 0.9108440279960632, 0.9116365313529968, 0.9196935892105103, 0.9214106202125549], "val_loss": [0.9573208604540143, 0.6557374852044242, 0.5431256464549473, 0.5046426568712506, 0.47040597030094694, 0.44118547439575195, 0.4145753468785967, 0.4030919756208147, 0.38860868556158884, 0.3808922512190683, 0.3607297454561506, 0.35299451862062725, 0.34237079109464374, 0.3333897079740252, 0.32561043330601286, 0.3265289238521031, 0.32451253277914865, 0.32144314902169363, 0.3124595284461975, 0.3071460212979998, 0.31243022850581575, 0.30458695547921316, 0.3017016904694693, 0.29942069734845844, 0.2962921346936907, 0.29815702778952463, 0.292429302419935, 0.28753181866237093, 0.28819393260138376, 0.2911671740668161, 0.2967627133641924, 0.2922583052090236, 0.2847026586532593, 0.288031314100538, 0.3038618990353176, 0.28084637437547955, 0.29728364092963083, 0.2838908178465707, 0.30097176347460064], "val_accuracy": [0.6079999804496765, 0.718999981880188, 0.7583333253860474, 0.7706666588783264, 0.7883333563804626, 0.7946666479110718, 0.8183333277702332, 0.8256666660308838, 0.82833331823349, 0.8363333344459534, 0.8463333249092102, 0.846666693687439, 0.8493333458900452, 0.8556666374206543, 0.8576666712760925, 0.859000027179718, 0.8573333621025085, 0.8603333234786987, 0.8640000224113464, 0.8646666407585144, 0.859333336353302, 0.8679999709129333, 0.8646666407585144, 0.8679999709129333, 0.8690000176429749, 0.871999979019165, 0.8743333220481873, 0.8730000257492065, 0.8759999871253967, 0.874666690826416, 0.8676666617393494, 0.8763333559036255, 0.878333330154419, 0.8823333382606506, 0.875333309173584, 0.8799999952316284, 0.8790000081062317, 0.8820000290870667, 0.878333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8371428847312927, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033326030029455, 1.1066608308029529, 0.7828801130857985, 0.691841611158673, 0.6298229824109494, 0.5749071709247802, 0.5355651080569004, 0.5101031531329956, 0.49091064073012536, 0.46653245147571054, 0.45229895788649244, 0.42698387988034714, 0.4174706350385615, 0.39299385097867323, 0.37665441778704095, 0.37246174159507867, 0.3638546547956156, 0.35586916303291394, 0.3494294031720356, 0.3348245711067428, 0.32951486870408325, 0.3254733619877628, 0.3096258066286579, 0.30673265715379755, 0.2998186410882643, 0.29609109739019035, 0.2821817192434871, 0.27282255024343766, 0.26112718653244316, 0.25229044375701776, 0.25830360402315833, 0.247701569539429, 0.24915991909334514, 0.23700980889940496, 0.23128572007558287, 0.22788166263123638, 0.2236966506825651, 0.20681832142871967, 0.20433259758620514, 0.20503637544380723, 0.2050510132356862, 0.19565140297029943, 0.18881680495695524, 0.18922414007621152, 0.17847170820798006, 0.1821620829660249, 0.18162481627522867, 0.1658066905480901, 0.16262127666102738], "accuracy": [0.30999869108200073, 0.6148461103439331, 0.7083608508110046, 0.7358341217041016, 0.7670056819915771, 0.7847048044204712, 0.8000264167785645, 0.8105930685997009, 0.8181217908859253, 0.828820526599884, 0.8339717388153076, 0.8437458872795105, 0.8448025584220886, 0.8553691506385803, 0.8617091774940491, 0.8627657890319824, 0.8640866279602051, 0.8684453964233398, 0.8705587387084961, 0.8778232932090759, 0.8819178342819214, 0.880729079246521, 0.8824461698532104, 0.8849557638168335, 0.8861445188522339, 0.8865407705307007, 0.8969752788543701, 0.898428201675415, 0.9037115573883057, 0.9039757251739502, 0.901862382888794, 0.9045040011405945, 0.9055606722831726, 0.9088627696037292, 0.91124027967453, 0.9124290347099304, 0.9124290347099304, 0.919561505317688, 0.9218068718910217, 0.921938955783844, 0.9211464524269104, 0.9252410531044006, 0.9262977242469788, 0.9289394021034241, 0.9305243492126465, 0.927882730960846, 0.9298639297485352, 0.9371285438537598, 0.9371285438537598], "val_loss": [0.9573276383536202, 0.6555349145616803, 0.5436430488313947, 0.5042904956000192, 0.47024452686309814, 0.442522542817252, 0.41465904882975985, 0.4029553702899388, 0.3927935447011675, 0.3797054035323007, 0.35947902713503155, 0.3551873905318124, 0.34286608014787945, 0.3291807174682617, 0.3236946974481855, 0.3271398033414568, 0.32520859582083567, 0.3193705677986145, 0.31738528183528353, 0.3036593198776245, 0.310815121446337, 0.30684250593185425, 0.30230248825890677, 0.30493500402995516, 0.29980272906167166, 0.2976514441626413, 0.29794117382594515, 0.28917900153568815, 0.2930110778127398, 0.2975930486406599, 0.29931174005780903, 0.2900647521018982, 0.28708887100219727, 0.2919796790395464, 0.2928748386246817, 0.287077077797481, 0.29462691715785433, 0.29477805750710623, 0.2985597848892212, 0.2986307144165039, 0.29549384117126465, 0.3000333734921047, 0.3011155298777989, 0.29787388869694303, 0.30013831172670635, 0.297519964831216, 0.2978729265076773, 0.30603621687207905, 0.31184132610048565], "val_accuracy": [0.6079999804496765, 0.7196666598320007, 0.7559999823570251, 0.7733333110809326, 0.7866666913032532, 0.7929999828338623, 0.8130000233650208, 0.8273333311080933, 0.8263333439826965, 0.8333333134651184, 0.8443333506584167, 0.8403333425521851, 0.8523333072662354, 0.8560000061988831, 0.8583333492279053, 0.8556666374206543, 0.8569999933242798, 0.8656666874885559, 0.8656666874885559, 0.8629999756813049, 0.859666645526886, 0.8709999918937683, 0.8673333525657654, 0.8696666955947876, 0.8706666827201843, 0.8733333349227905, 0.8693333268165588, 0.8759999871253967, 0.8713333606719971, 0.8733333349227905, 0.8730000257492065, 0.878333330154419, 0.8730000257492065, 0.8803333044052124, 0.878333330154419, 0.8806666731834412, 0.8799999952316284, 0.8740000128746033, 0.8793333172798157, 0.8766666650772095, 0.8809999823570251, 0.8823333382606506, 0.8836666941642761, 0.8849999904632568, 0.8840000033378601, 0.8830000162124634, 0.8830000162124634, 0.8836666941642761, 0.8823333382606506]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 4, 7, 0, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8368571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, alpha))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9220951443350847, 1.3437671127210378, 0.8263917689420418, 0.6902087537635508, 0.618644225441501, 0.5767849410813104, 0.5176651766350272, 0.49521579622450823, 0.4791047092339681, 0.465880574252328, 0.44643646085408734, 0.4275525327230158, 0.41261593872892105, 0.4091100003016765, 0.375285028320939, 0.3670870441849426, 0.3659284531621413, 0.3552942269112314, 0.3599855039790794, 0.3320970751897235, 0.3271774006258338, 0.3156192915873552, 0.2939424450883083, 0.2978691950710049, 0.29804642400477366, 0.28385654059950355, 0.2670167345081763, 0.26913970368743934], "accuracy": [0.3477744162082672, 0.5445780158042908, 0.6902654767036438, 0.7437590956687927, 0.7725531458854675, 0.7852331399917603, 0.809140145778656, 0.8127063512802124, 0.8201030492782593, 0.8314621448516846, 0.8347642421722412, 0.8444063067436218, 0.854708731174469, 0.8525954484939575, 0.8625016212463379, 0.8679170608520508, 0.8627657890319824, 0.8689737319946289, 0.8669924736022949, 0.8811253309249878, 0.8803328275680542, 0.8841632604598999, 0.8934090733528137, 0.887201189994812, 0.8857482671737671, 0.8949940800666809, 0.9025228023529053, 0.8985602855682373], "val_loss": [1.2617970194135393, 0.6929944242749896, 0.5527985266276768, 0.489655682018825, 0.4820409502301897, 0.4312606624194554, 0.398252648966653, 0.4062548279762268, 0.3688502141407558, 0.3816835454532078, 0.3535810538700649, 0.35044232436588835, 0.3363231931413923, 0.33628571033477783, 0.32546454668045044, 0.3383325849260603, 0.3211442232131958, 0.33597839730126516, 0.31849861996514456, 0.3152820382799421, 0.3064285431589399, 0.2971631714275905, 0.29583384309496197, 0.306246144430978, 0.297497774873461, 0.30180303539548603, 0.2992413640022278, 0.2987052457673209], "val_accuracy": [0.46933332085609436, 0.7046666741371155, 0.753333330154419, 0.7776666879653931, 0.7883333563804626, 0.8106666803359985, 0.8259999752044678, 0.8186666369438171, 0.8413333296775818, 0.8276666402816772, 0.8460000157356262, 0.8443333506584167, 0.8503333330154419, 0.8483333587646484, 0.8550000190734863, 0.8523333072662354, 0.859333336353302, 0.8463333249092102, 0.8600000143051147, 0.8610000014305115, 0.8640000224113464, 0.8653333187103271, 0.8726666569709778, 0.8603333234786987, 0.8696666955947876, 0.8706666827201843, 0.8683333396911621, 0.8706666827201843]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 3, 0, 1, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1, 1, 2, 3, 3, 7, 8, 0, 5, 4, 6, 6, 0, 0, 3, 4, 2, 5], [1, 2, 0, 2, 0, 2, 2, 1, 2, 2, 2, 1, 2, 0, 3, 2, 1, 1, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [74, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 5, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11228571087121964, "mapping_values": [1, 17, 17, 10, 7, 2, 3, 3, 1, 2, 1, 7, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.557029003952756, 2.6065758959082816, 2.345193106437545, 2.36913242936528, 2.572349309008025, 2.3441920923818262, 2.3362707012853194, 2.3389742603674857, 2.343858226509835], "accuracy": [0.23774930834770203, 0.11861048638820648, 0.09285431355237961, 0.09813763201236725, 0.10421344637870789, 0.10196803510189056, 0.1006472036242485, 0.09985470771789551, 0.09681680053472519], "val_loss": [2.1043343544006348, 2.007352352142334, 1.9931341579982214, 1.9941351754324776, 2.0081305503845215, 1.9967551231384277, 2.007336820874895, 2.0064867564610074, 2.0090859958103726], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [2, 3, 0, 6, 4, 4, 8, 0, 4, 5, 6, 8, 8, 2, 1, 3, 3, 0, 7, 8, 0, 1, 2, 4, 6, 0, 0, 3, 4, 2, 5, 0], [1, 2, 2, 2, 0, 2, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 10, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 9, 9, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 48, 29, 19, 2, 3, 3, 1, 2, 1, 7, 6, 5, 1, 2, 5, 2, 3, 2], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), grad))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), grad), tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3018917169521798, 2.3026191418307285, 2.302635680887567, 2.3026261070794622, 2.3026263956632502, 2.3026311402905963, 2.3026295697700077, 2.302630479388375, 2.3026406183029917], "accuracy": [0.09391097724437714, 0.08809932321310043, 0.09919429570436478, 0.0956280529499054, 0.09681680053472519, 0.09655263274908066, 0.09694888442754745, 0.09760929644107819, 0.09206181764602661], "val_loss": [1.9736480712890625, 1.973651681627546, 1.9736532483782088, 1.9736548832484655, 1.973656245640346, 1.973653997693743, 1.9736601965767997, 1.9736544064113073, 1.9736505917140417], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [32, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301833798494542, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [0, 4, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 2, 12, 9, 8, 1, 2, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3013685846750715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 9, 0, 2, 4, 6, 1, 4, 2, 1, 2], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [90, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301833798494542, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [293.1246788373571, 9.776988186335895e+26, 4.143900305068158, 8.429925691339838, 14.285805356689904, 20.834186931847423], "accuracy": [0.04807819426059723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3936801792.0, 2.6194819041660855, 5.416198866707938, 10.040995734078544, 15.477603912353516, 21.30905314854213], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 0, 2, 2, 1, 2, 0, 3, 2, 2, 8, 4, 1, 1, 2, 3, 3, 7, 8, 0, 5, 4, 4, 6, 0, 0, 3, 4, 2, 5], [2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 2, 0, 9], [0, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301833798494542, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [3, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1, 1, 2, 5, 3, 7, 8, 0, 5, 4, 4, 6, 0, 0, 3, 4, 2, 5], [0, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 0, 0, 1, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [6, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 5, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 3, 3, 1, 2, 1, 5, 4, 3, 1, 0, 10, 7, 3, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1293.3984883086337, 9.442495041236176, 18.763418307472545, 38.43263774081275, 65.49081368698909, 96.97396482468407], "accuracy": [0.09998679161071777, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.886835983821324, 11.301844733101982, 24.882490430559432, 45.83447701590402, 71.82918003627232, 101.7446790422712], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 3, 0, 2, 4, 8, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 0, 3, 0, 2, 1, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 6, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [4, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 14, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha))))))))))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 3, 0, 8, 4, 1, 0, 0, 9, 5, 4, 8, 4, 1, 1, 2, 3, 3, 7, 8, 0, 5, 2, 4, 6, 0, 0, 3, 4, 2, 5], [1, 2, 0, 2, 0, 1, 2, 1, 2, 1, 3, 1, 1, 0, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 1, 7, 4, 3, 1, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3013685846750715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 0, 6, 4, 4, 3, 0, 3, 5, 2, 8, 8, 2, 1, 2, 3, 0, 7, 8, 0, 5, 2, 4, 6, 0, 0, 3, 4, 2, 5, 0], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 10, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301833798494542, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 6, 0, 2, 4, 6, 9, 4, 3, 5, 2], [0, 2, 0, 1, 0, 1, 0, 1, 2, 1, 3, 2, 0, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [295035911.7892562, 44305991490.64589, 751465595442.6522, 5307631767364.269, 23535125237970.453, 77395116962557.53], "accuracy": [0.1006472036242485, 0.10421344637870789, 0.09589222073554993, 0.09681680053472519, 0.09840179979801178, 0.10249637067317963], "val_loss": [2410019108.571429, 129899612452.57143, 1394292555776.0, 7601515397120.0, 28473360458898.285, 83989365335186.28], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [2, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1, 8, 2, 3, 3, 7, 8, 0, 5, 4, 4, 3, 0, 0, 3, 4, 2, 5], [1, 2, 0, 2, 0, 2, 1, 1, 2, 1, 3, 0, 2, 2, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 2, 0, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09914285689592361, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 8, 5, 4, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.375612352061596, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.406151499067034, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 0, 2, 4, 1, 0, 0, 1, 5, 2, 8, 4, 2, 1, 2, 3, 6, 7, 8, 0, 5, 4, 6, 6, 0, 0, 3, 4, 2, 5], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 3, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 10, 6, 5, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.359338453495901, 3.0388556440603054, 4.928981733391423, 8.051673738507075, 12.41394541622893, 18.0209444988484], "accuracy": [0.09734513610601425, 0.10289261490106583, 0.09615638852119446, 0.09668471664190292, 0.09879804402589798, 0.10315678268671036], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 5, 3, 3, 0], [38, 84, 6], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [8, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.806032989790663, 2.4700119474922677, 2.304589873811336, 2.303161264520831, 2.303072264606706, 2.302952418663026, 2.3030632934739104], "accuracy": [0.2429005354642868, 0.12270505726337433, 0.09536388516426086, 0.09866596013307571, 0.09602430462837219, 0.09470347315073013, 0.09721305221319199], "val_loss": [2.1564207077026367, 1.9762445177350725, 1.973949364253453, 1.9736902373177665, 1.9736382620675224, 1.9737039974757604, 1.9736265454973494], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397, 0.09833333641290665, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302211566293213, 2.302676520689588, 2.3025957016723817, 2.3028048996943618, 2.3024236209293982, 2.301262360175902], "accuracy": [0.08849557489156723, 0.09140139818191528, 0.08889182657003403, 0.08440100401639938, 0.08479725569486618, 0.09338264167308807], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]