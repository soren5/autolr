[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8485714197158813, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9466877309889636, 1.0915607729954506, 0.7978177586755638, 0.6785410116330083, 0.6242909628827542, 0.5941133849640658, 0.5430643736583965, 0.5055454356354525, 0.48273405183528345, 0.46320860708048, 0.4423961326344107, 0.42326980857974456, 0.4177674878511163, 0.4014846755174708, 0.40957499897443794, 0.38403062104564756, 0.38136323013436035, 0.3708745624883347, 0.3425320270015516, 0.346495466737101, 0.328683346702816, 0.31797022890216403, 0.31337113012616913, 0.295172247179999, 0.2896548118400473, 0.2849022338946482, 0.2817764374377186, 0.27694299560433383, 0.2647586389067245, 0.2602361129468159, 0.25846563953733587, 0.24827953300392938, 0.24977915742614282, 0.23375864516687336, 0.22828204697779125, 0.22374550984433583, 0.21783340336852589, 0.2122004088208723, 0.2003551177624399], "accuracy": [0.339321106672287, 0.6170915365219116, 0.7038700580596924, 0.7449478507041931, 0.7671377658843994, 0.7810064554214478, 0.791441023349762, 0.8178576231002808, 0.8216879963874817, 0.8271034359931946, 0.8409721255302429, 0.845859169960022, 0.8459912538528442, 0.8502179384231567, 0.8506141901016235, 0.8614450097084045, 0.8593316674232483, 0.8647470474243164, 0.8784837126731873, 0.8708229064941406, 0.8782195448875427, 0.8791441321372986, 0.8836349248886108, 0.8868049383163452, 0.8898428082466125, 0.8898428082466125, 0.8931449055671692, 0.8951261639595032, 0.9000132083892822, 0.9009377956390381, 0.9001452922821045, 0.9075419306755066, 0.9045040011405945, 0.9105798602104187, 0.9122969508171082, 0.9162594079971313, 0.9179764986038208, 0.9154669046401978, 0.9243164658546448], "val_loss": [0.9343433039528983, 0.6391522373471942, 0.5526190825871059, 0.5051505395344326, 0.47457419122968403, 0.461037346294948, 0.4283263768468584, 0.3986555848802839, 0.38164128576006207, 0.38049912452697754, 0.3636100803102766, 0.3512521641595023, 0.3399150626999991, 0.3703499010631016, 0.3464394041470119, 0.3267224771635873, 0.32464694125311716, 0.3178591047014509, 0.3263635124479021, 0.3092091168676104, 0.310969386781965, 0.30538253273282734, 0.29436131034578594, 0.30159094503947664, 0.29786642108644756, 0.3034021939550127, 0.29840787819453646, 0.3072497248649597, 0.28094171626227243, 0.3002756152834211, 0.28321427958352224, 0.29163202217647005, 0.2902875116893223, 0.2807146736553737, 0.2880848901612418, 0.28926269497190205, 0.3000042268208095, 0.2844729338373457, 0.2918741192136492], "val_accuracy": [0.5893333554267883, 0.7233333587646484, 0.7603333592414856, 0.768666684627533, 0.7776666879653931, 0.7873333096504211, 0.8116666674613953, 0.8236666917800903, 0.8366666436195374, 0.8333333134651184, 0.8423333168029785, 0.8500000238418579, 0.8489999771118164, 0.8303333520889282, 0.8489999771118164, 0.8519999980926514, 0.8576666712760925, 0.8573333621025085, 0.8576666712760925, 0.8640000224113464, 0.8640000224113464, 0.8700000047683716, 0.8656666874885559, 0.8700000047683716, 0.8709999918937683, 0.8653333187103271, 0.871999979019165, 0.8656666874885559, 0.8773333430290222, 0.8723333477973938, 0.8799999952316284, 0.875, 0.8756666779518127, 0.8816666603088379, 0.878333330154419, 0.8799999952316284, 0.8743333220481873, 0.8803333044052124, 0.8816666603088379]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [3, 2, 5, 0, 2, 9], [0, 3, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.845714271068573, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9455103806028466, 1.1016882106518118, 0.802298210702001, 0.6804712550704033, 0.6232205689732803, 0.5926294978567795, 0.5433342798337835, 0.5065456970713283, 0.48369368096352755, 0.46461014739904327, 0.44343152141149067, 0.42007626896804556, 0.4163663331362644, 0.39716980579648553, 0.404822043207548, 0.38217313132029734, 0.374306187082858, 0.3693851821647108, 0.3407196378577198, 0.3467578916242015, 0.3245692390020041, 0.3182770279042394, 0.315747141050798, 0.2976149954320008, 0.2846465316769501, 0.2811633327995797, 0.279819438643601, 0.2783885333146307, 0.26097739943030207, 0.25287207544023144, 0.255074368310784, 0.24467448608954948, 0.242528824612701, 0.22945431560935314], "accuracy": [0.3401135802268982, 0.6180161237716675, 0.705058753490448, 0.7456082701683044, 0.7670056819915771, 0.7812706232070923, 0.7922335267066956, 0.8152159452438354, 0.822348415851593, 0.8259146809577942, 0.8381983637809753, 0.8438779711723328, 0.8444063067436218, 0.8510104417800903, 0.8564258217811584, 0.8615770936012268, 0.8619733452796936, 0.8652753829956055, 0.8784837126731873, 0.870030403137207, 0.8791441321372986, 0.8804649114608765, 0.8824461698532104, 0.8878615498542786, 0.8932769894599915, 0.8912957310676575, 0.8905032277107239, 0.894069492816925, 0.9031832218170166, 0.901862382888794, 0.9041078090667725, 0.9070135951042175, 0.9075419306755066, 0.9125610589981079], "val_loss": [0.9377119541168213, 0.6451443774359567, 0.5552177258900234, 0.5116276400429862, 0.4754951170512608, 0.46664418492998394, 0.42781589712415424, 0.39637976033346994, 0.38160654476710726, 0.3789255363600595, 0.3604530947549002, 0.35722837277821134, 0.33812706811087473, 0.3584786994116647, 0.3349940095629011, 0.322564286845071, 0.3267294594219753, 0.3181073069572449, 0.32145061663218905, 0.30566489696502686, 0.31235529695238384, 0.30787397282464163, 0.2990855744906834, 0.297584593296051, 0.29982579605919973, 0.3079624857221331, 0.30362020220075336, 0.3018524817058018, 0.28199221406664166, 0.3048935532569885, 0.2873721122741699, 0.2909674218722752, 0.2911208612578256, 0.2899852820805141], "val_accuracy": [0.5803333520889282, 0.7139999866485596, 0.7593333125114441, 0.7526666522026062, 0.7739999890327454, 0.7866666913032532, 0.8143333196640015, 0.8243333101272583, 0.8346666693687439, 0.8349999785423279, 0.8429999947547913, 0.8453333377838135, 0.8500000238418579, 0.8379999995231628, 0.8516666889190674, 0.8573333621025085, 0.856333315372467, 0.856333315372467, 0.8586666584014893, 0.8633333444595337, 0.8640000224113464, 0.8653333187103271, 0.8679999709129333, 0.8713333606719971, 0.871999979019165, 0.8629999756813049, 0.8713333606719971, 0.8706666827201843, 0.8813333511352539, 0.8693333268165588, 0.8773333430290222, 0.8769999742507935, 0.8769999742507935, 0.8806666731834412]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7891428470611572, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 6, 4, 3, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1766440747452136, 1.650288949332705, 1.298311794596168, 1.072853763900838, 1.007911720626689, 0.906751337965891, 0.8106357678682451, 0.8366996733551216, 0.7720582676821884, 0.7599706024840807, 0.7556464141779697, 0.7034047815100927, 0.7028376641306249, 0.6874370977642703, 0.6707259152449196, 0.6513574799180046, 0.694479591102333, 0.6600388571129908, 0.6310801493052431, 0.6063013243605951, 0.5904204684430582, 0.6040009886455447, 0.598303474982842, 0.6027679763780593], "accuracy": [0.28899750113487244, 0.4461762011051178, 0.5300488471984863, 0.6126006841659546, 0.6222427487373352, 0.6709813475608826, 0.703209638595581, 0.6913221478462219, 0.7062475085258484, 0.7087571024894714, 0.7137762308120728, 0.735569953918457, 0.7308149337768555, 0.7358341217041016, 0.7460044622421265, 0.7557786107063293, 0.7430986762046814, 0.7532690763473511, 0.7555144429206848, 0.7733456492424011, 0.7773081660270691, 0.7712323069572449, 0.770439863204956, 0.7716285586357117], "val_loss": [1.5204579830169678, 1.0363774299621582, 0.9100198064531598, 0.7732256140027728, 0.7803855112620762, 0.6263903720038277, 0.666982923235212, 0.5817927292415074, 0.621671029499599, 0.5879763875688825, 0.5369303567068917, 0.5444070781980243, 0.5351233652659825, 0.5119999136243548, 0.5115008354187012, 0.6122126919882638, 0.5205801214490619, 0.4879164184842791, 0.4757941280092512, 0.47059174946376253, 0.49312991755349295, 0.4849368504115513, 0.5062253475189209, 0.476449864251273], "val_accuracy": [0.54666668176651, 0.5803333520889282, 0.5979999899864197, 0.6453333497047424, 0.6663333177566528, 0.734666645526886, 0.6899999976158142, 0.734000027179718, 0.7070000171661377, 0.7213333249092102, 0.7616666555404663, 0.7599999904632568, 0.749666690826416, 0.7753333449363708, 0.7823333144187927, 0.7179999947547913, 0.7590000033378601, 0.7760000228881836, 0.7873333096504211, 0.781333327293396, 0.7720000147819519, 0.7633333206176758, 0.7603333592414856, 0.7803333401679993]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 4, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1588695081564193, 1.505166980206549, 1.1743943194640138, 1.0213287068380104, 0.9297685964689153, 0.8347483365731925, 0.823982669283386, 0.7532111192502209, 0.7454250055990042, 0.7138837013403974, 0.7138014048113562, 0.6851139256290047, 0.6686489945625695, 0.6614302879531764, 0.6424460236611478, 0.6376497183005414, 0.6454643036443418, 0.6449684792301201, 0.5865300681612763, 0.6006923156045353, 0.6011144780306501, 0.5914054319622684, 0.578157296907853], "accuracy": [0.28820499777793884, 0.49465063214302063, 0.5752212405204773, 0.6395456194877625, 0.6542068123817444, 0.6886804699897766, 0.6933034062385559, 0.7170783281326294, 0.7202483415603638, 0.7337207794189453, 0.7252674698829651, 0.7456082701683044, 0.7473253011703491, 0.7466648817062378, 0.7598732113838196, 0.7631752490997314, 0.7523444890975952, 0.7518161535263062, 0.7738739848136902, 0.7733456492424011, 0.7736098170280457, 0.7775723338127136, 0.7796856164932251], "val_loss": [1.4358799457550049, 0.9553682463509696, 0.7928040197917393, 0.7150009019034249, 0.7005090032305036, 0.6327242680958339, 0.6381598540714809, 0.5509908029011318, 0.5406811577933175, 0.5479677745274135, 0.5471729210444859, 0.5124622242791312, 0.49698080335344585, 0.5148371968950544, 0.5028735739844186, 0.5288092408861432, 0.4854440518787929, 0.47420741830553326, 0.488247207232884, 0.49292818137577604, 0.46025848388671875, 0.46421137877873014, 0.4968632970537458], "val_accuracy": [0.5, 0.5600000023841858, 0.6413333415985107, 0.6926666498184204, 0.6813333630561829, 0.6986666917800903, 0.6963333487510681, 0.7516666650772095, 0.7540000081062317, 0.7576666474342346, 0.7486666440963745, 0.7716666460037231, 0.7873333096504211, 0.7606666684150696, 0.7763333320617676, 0.7406666874885559, 0.7793333530426025, 0.7906666398048401, 0.7760000228881836, 0.7730000019073486, 0.7889999747276306, 0.7896666526794434, 0.7633333206176758]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 5, 0, 5, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [84, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 5, 1, 0, 0], [21, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7205714583396912, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2991894963332107, 2.2952990649068012, 2.288316597350915, 2.2813667165856746, 2.274116748454092, 2.2688575539811255, 2.261513281869945, 2.2542564492609207, 2.2457853716126115, 2.2382990893844004, 2.2296606641577186, 2.220644348317354, 2.2108125542731507, 2.1993167920276995, 2.1910987159815667, 2.1741242202171294, 2.164478657189267, 2.148970657446129, 2.133215127100231, 2.116255056242413, 2.0991472730925054, 2.0782844645865857, 2.0584171185514255, 2.036984878209257, 2.0126715473384906, 1.9922937128317433, 1.9627234969140988, 1.9347891152070387, 1.904722386993012, 1.8769013779652417, 1.8394647105620947, 1.810314483189737, 1.782691757849982, 1.7475635989341187, 1.7112277125827293, 1.6806002522755639, 1.6436071159691308, 1.621997711980001, 1.5885206731775607, 1.561313284654281, 1.5296645920904257, 1.5039039079177146, 1.4768056373680587, 1.4548142776828101, 1.424795258897029, 1.4019192090013701, 1.3783681760799804, 1.3631674296914815, 1.343144099757404, 1.3168613972554921, 1.295064999616031, 1.2987466337280567, 1.2649604310889868, 1.2555935507390037, 1.2386578882784498, 1.2352209857993075, 1.2215846719018788, 1.1984401098284598, 1.1881917257350527, 1.1751835911643347, 1.1775022377789595, 1.1694242655089377, 1.1512965261818096, 1.1335774776469825, 1.1225371645615163, 1.1107416030296544, 1.107894642840224, 1.0951392889936067, 1.0885875987150035, 1.08217103648825, 1.0765492564194932, 1.0638873334794454, 1.062969892803767, 1.0472463689397087, 1.0399750191159867, 1.0310220464251187, 1.0300219526317347, 1.0336192512808222, 1.0190636023333863, 1.0123627169839835, 1.0054923045306141, 1.0026678977121593, 0.9980774427590794, 0.989453847870268, 0.9965763434584681, 0.9724740206037986, 0.9705131916542568, 0.9758293641052855, 0.9724440953325617, 0.9690784432585402, 0.9458538631579785, 0.9483677371775454, 0.9411056274121322, 0.9421819395015048, 0.9298324988282289, 0.9353695896323394, 0.9266873238392478, 0.9152831423000779, 0.9102172185448513, 0.918707486212041], "accuracy": [0.09866596013307571, 0.11081759631633759, 0.12851670384407043, 0.14661207795143127, 0.1682736724615097, 0.1802932173013687, 0.19574692845344543, 0.22044643759727478, 0.22837141156196594, 0.24237221479415894, 0.266939640045166, 0.2763175368309021, 0.29137498140335083, 0.3135649263858795, 0.3125082552433014, 0.33245277404785156, 0.3343019485473633, 0.3505481481552124, 0.36824727058410645, 0.3683793544769287, 0.3699643313884735, 0.3883238732814789, 0.39889049530029297, 0.3979659080505371, 0.40787214040756226, 0.4130233824253082, 0.41104212403297424, 0.4243825078010559, 0.43825122714042664, 0.4422137141227722, 0.4484215974807739, 0.4519878625869751, 0.4550257623195648, 0.46770572662353516, 0.47549861669540405, 0.4784044325351715, 0.49214106798171997, 0.48949941992759705, 0.5000660419464111, 0.5045568346977234, 0.5106326937675476, 0.5194822549819946, 0.5168405771255493, 0.5258222222328186, 0.5340113639831543, 0.5406154990196228, 0.5400871634483337, 0.5400871634483337, 0.5462950468063354, 0.5601637959480286, 0.5679566860198975, 0.5572579503059387, 0.5708624720573425, 0.5700700283050537, 0.5785233378410339, 0.577070415019989, 0.5761458277702332, 0.590278685092926, 0.589750349521637, 0.5881653428077698, 0.5996565818786621, 0.5979394912719727, 0.5937128663063049, 0.6096948981285095, 0.6141856908798218, 0.6123365759849548, 0.6148461103439331, 0.6159027814865112, 0.6229031682014465, 0.6229031682014465, 0.6206578016281128, 0.6259410977363586, 0.6293752193450928, 0.631488561630249, 0.635451078414917, 0.6362435817718506, 0.6395456194877625, 0.6419231295585632, 0.6406022906303406, 0.6456214785575867, 0.6453573107719421, 0.6446968913078308, 0.6479989290237427, 0.6528860330581665, 0.646149754524231, 0.6604147553443909, 0.6608110070228577, 0.6596222519874573, 0.6585655808448792, 0.6567164063453674, 0.667811393737793, 0.663848876953125, 0.6687359809875488, 0.6686038970947266, 0.6655659675598145, 0.6686038970947266, 0.6671509742736816, 0.6672830581665039, 0.6822084188461304, 0.6737551093101501], "val_loss": [1.9648576463971819, 1.9587563105991908, 1.9527274540492467, 1.9466444424220495, 1.9404194014413017, 1.934018611907959, 1.9273440497262138, 1.920341900416783, 1.9128596442086356, 1.9050365856715612, 1.8967623710632324, 1.8879389762878418, 1.8783973285130091, 1.8679355212620325, 1.8567946978977747, 1.8444781984601701, 1.8313279833112444, 1.816990511757987, 1.8016020911080497, 1.784813608442034, 1.767014844076974, 1.7477213314601354, 1.7269871575491769, 1.7049830300467355, 1.6812328611101424, 1.6563313347952706, 1.6297944273267473, 1.6020440374101912, 1.5728553022657121, 1.542822735650199, 1.5115421499524797, 1.4796536309378487, 1.4477543830871582, 1.4151349408285958, 1.3823064395359583, 1.3498343058994837, 1.3173908506120955, 1.2859537260872977, 1.255345038005284, 1.2256285122462682, 1.1969963482448034, 1.1693344116210938, 1.1432890892028809, 1.118530545915876, 1.0946624960218156, 1.071824210030692, 1.0501187188284737, 1.030268362590245, 1.011301074709211, 0.9929782663072858, 0.9753883225577218, 0.9597530364990234, 0.944382735661098, 0.9297479220799038, 0.916494641985212, 0.9038279056549072, 0.8916809899466378, 0.880305460521153, 0.8694069726126534, 0.8587617192949567, 0.849270054272243, 0.839665140424456, 0.8306729452950614, 0.8220217398234776, 0.8135921273912702, 0.8053430148533413, 0.7977322340011597, 0.7902835948126656, 0.7832522392272949, 0.7767326320920672, 0.7702681507383075, 0.7638055256434849, 0.758134126663208, 0.752263069152832, 0.7464681352887835, 0.7409491879599435, 0.7360327414103917, 0.7314437798091343, 0.7268982103892735, 0.7220057930265155, 0.7175702026912144, 0.7131250074931553, 0.7091982194355556, 0.7047694410596576, 0.7010772057941982, 0.6972382238933018, 0.6932714836938041, 0.6897793156760079, 0.6863291093281337, 0.683207494871957, 0.6795374836240496, 0.6758038657052177, 0.6722855057035174, 0.6695718594959804, 0.6664907421384539, 0.6634558779852731, 0.6604632650102887, 0.6572806664875576, 0.6550167458398002, 0.6523307732173375], "val_accuracy": [0.07699999958276749, 0.12600000202655792, 0.18933333456516266, 0.24166665971279144, 0.2849999964237213, 0.3173333406448364, 0.3409999907016754, 0.3596666753292084, 0.37466666102409363, 0.3869999945163727, 0.4000000059604645, 0.4143333435058594, 0.4230000078678131, 0.4313333332538605, 0.4476666748523712, 0.453000009059906, 0.4620000123977661, 0.47433334589004517, 0.48100000619888306, 0.49033331871032715, 0.4959999918937683, 0.5063333511352539, 0.5146666765213013, 0.5263333320617676, 0.5293333530426025, 0.5360000133514404, 0.5403333306312561, 0.546999990940094, 0.5493333339691162, 0.5550000071525574, 0.5590000152587891, 0.5680000185966492, 0.5743333101272583, 0.5806666612625122, 0.5856666564941406, 0.5883333086967468, 0.5916666388511658, 0.6000000238418579, 0.6010000109672546, 0.6079999804496765, 0.6140000224113464, 0.6206666827201843, 0.6296666860580444, 0.6399999856948853, 0.6466666460037231, 0.6539999842643738, 0.659333348274231, 0.6606666445732117, 0.6653333306312561, 0.6696666479110718, 0.6710000038146973, 0.6746666431427002, 0.6779999732971191, 0.6786666512489319, 0.6803333163261414, 0.6850000023841858, 0.687333345413208, 0.6890000104904175, 0.6903333067893982, 0.6909999847412109, 0.6916666626930237, 0.6943333148956299, 0.6943333148956299, 0.6959999799728394, 0.6993333101272583, 0.6996666789054871, 0.7026666402816772, 0.7036666870117188, 0.70333331823349, 0.703000009059906, 0.7036666870117188, 0.7073333263397217, 0.7083333134651184, 0.7113333344459534, 0.7099999785423279, 0.7110000252723694, 0.7120000123977661, 0.7143333554267883, 0.715666651725769, 0.7170000076293945, 0.7179999947547913, 0.718999981880188, 0.7203333377838135, 0.7210000157356262, 0.7236666679382324, 0.721666693687439, 0.7236666679382324, 0.7246666550636292, 0.7276666760444641, 0.7276666760444641, 0.7296666502952576, 0.7300000190734863, 0.7300000190734863, 0.7310000061988831, 0.7329999804496765, 0.734666645526886, 0.734000027179718, 0.734666645526886, 0.7360000014305115, 0.7356666922569275]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 4, 1, 8, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7097142934799194, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.946243836989634, 1.0182411466071855, 0.8490590945667579, 0.7198805213840551, 0.652845040304219, 0.6085361250245797, 0.5900364356774066, 0.5601571286044273, 0.538846515267674, 0.5330134762465568, 0.5300575980908993, 0.5027217794450329, 0.4912889274419055, 0.5208536371452902, 0.5604933188528732, 0.5573547428483425, 0.5934122069132972, 0.5916800703339179, 0.5898354164818101, 0.6224344290400289, 0.631873251999437, 0.6670389887348472, 0.7303573592007357], "accuracy": [0.34143441915512085, 0.6325452327728271, 0.6851142644882202, 0.7281733155250549, 0.7560427784919739, 0.7700436115264893, 0.774270236492157, 0.7874785661697388, 0.7926297783851624, 0.7996301651000977, 0.8039889335632324, 0.8156121969223022, 0.8107251524925232, 0.806630551815033, 0.7955356240272522, 0.7897239327430725, 0.7839123010635376, 0.7882710099220276, 0.7944789528846741, 0.7726852297782898, 0.774798572063446, 0.7684586048126221, 0.7510236501693726], "val_loss": [0.8574490887778146, 0.6024693931852069, 0.5791887215205601, 0.48242911270686556, 0.4721209151404245, 0.47165446622031076, 0.4373191935675485, 0.4235920820917402, 0.4193255049841745, 0.4344374026571001, 0.4100692357335772, 0.3957308530807495, 0.409685594694955, 0.41846409014293123, 0.4421062299183437, 0.47261379446302143, 0.4326138070651463, 0.4372814382825579, 0.47154952798570904, 0.4513731598854065, 0.42945730686187744, 0.4620159694126674, 0.6220997401646206], "val_accuracy": [0.6499999761581421, 0.7333333492279053, 0.746999979019165, 0.7763333320617676, 0.7853333353996277, 0.7876666784286499, 0.8019999861717224, 0.8103333115577698, 0.8033333420753479, 0.8040000200271606, 0.8256666660308838, 0.8276666402816772, 0.8289999961853027, 0.8276666402816772, 0.8163333535194397, 0.8259999752044678, 0.812666654586792, 0.831333339214325, 0.8023333549499512, 0.8183333277702332, 0.8296666741371155, 0.7983333468437195, 0.715666651725769]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 2, 5, 1, 2, 9, 9, 6, 5, 3, 7, 0], [3, 2, 1, 0, 0, 4, 5, 5, 3, 2, 0], [40, 96, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.46399998664855957, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6193486080036155, 2.306305702257591, 2.2990379730283057, 2.2273764159024085, 2.2049861290608854, 2.2882810056863003, 2.4497522199316077, 2.383991091274362, 2.2828742094547554], "accuracy": [0.2452780306339264, 0.10038304328918457, 0.12032756209373474, 0.1732928305864334, 0.17672698199748993, 0.16457535326480865, 0.18953903019428253, 0.12191256135702133, 0.14093250036239624], "val_loss": [1.9804216112409319, 1.9740674836294991, 1.9540117808750697, 1.3730748040335519, 1.965625558580671, 1.9646069662911552, 1.9929441043308802, 1.9762578691755022, 1.4837580408368791], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09733333438634872, 0.48266667127609253, 0.10466666519641876, 0.1809999942779541, 0.10133333504199982, 0.1003333330154419, 0.3553333282470703]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [5, 4, 1, 0, 0], [54, 19, 6, 99], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.21371428668498993, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8849936771103106, 2.239964085232391, 2.2638599359915164, 2.4375738169239685, 2.3038230635439323, 2.3032436955323106, 2.3030272738462143, 2.303014719443724], "accuracy": [0.1950865089893341, 0.15321621298789978, 0.14172500371932983, 0.11517632752656937, 0.09311848133802414, 0.09338264167308807, 0.09945846349000931, 0.1006472036242485], "val_loss": [1.7594828605651855, 1.9758740152631487, 2.429943765912737, 1.9747661863054549, 1.9740413938249861, 1.973860263824463, 1.9737298829214913, 1.9736671447753906], "val_accuracy": [0.17133332788944244, 0.10066666454076767, 0.1783333271741867, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.15228570997714996, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.4142182795063944, 2.404526019660064, 2.473861400083764, 2.342971173921171, 2.331275407270654, 2.324300588854174, 2.323106018842849], "accuracy": [0.19231277704238892, 0.10117553919553757, 0.10091137140989304, 0.09694888442754745, 0.09972262382507324, 0.09800554811954498, 0.09813763201236725], "val_loss": [2.0657552991594588, 2.023157528468541, 1.9907608032226562, 1.981091090611049, 1.9979133605957031, 2.011225087302072, 2.0001343318394254], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.09933333098888397, 0.10000000149011612, 0.10133333504199982, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [40, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [3, 2, 5, 1, 2, 9, 4, 1, 2, 5, 2, 0, 4, 0, 2, 3, 8, 2, 6, 5, 1, 3, 7, 5, 9], [0, 4, 1, 0, 0, 3, 3, 0, 5, 4, 1, 1, 2, 5, 5], [40, 19, 6, 99, 30, 26], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 40, 40, 25, 15, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, alpha)))), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.pow(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.multiply(alpha, tf.math.add(tf.math.square(tf.math.add(beta, alpha)), beta)), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [585109178.5726484, 2.0474555592631995e+28, 5.69695121504139, 11.368343282857545, 18.072529047959833, 25.106621980446675], "accuracy": [0.05111610144376755, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.3104033767324972e+29, 3.344163077218192, 7.521386010306222, 13.05944197518485, 19.017560686383927, 25.11405345371791], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 8, 3, 2, 9], [0, 4, 1, 0, 0], [40, 48, 18, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302645582737719, 2.3027270582169117, 2.302730627315644, 2.3027060815387665, 2.302682585893227, 2.30266776804155], "accuracy": [0.09681680053472519, 0.09457138925790787, 0.09998679161071777, 0.09734513610601425, 0.09813763201236725, 0.09800554811954498], "val_loss": [1.9736414636884416, 1.973656109401158, 1.9736876487731934, 1.9736667360578264, 1.9736908503941126, 1.973670550755092], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3024985111306107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 7, 5, 1, 2, 9], [0, 4, 3, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.0183309029279495, 10.096942409595494, 27.129139562749653, 54.60442140977522, 95.91433337726424, 154.0158172333324], "accuracy": [0.09536388516426086, 0.09708096832036972, 0.09417514503002167, 0.10051512718200684, 0.10196803510189056, 0.0956280529499054], "val_loss": [3.8182405744280135, 11.442135402134486, 25.38975034441267, 46.96089717320034, 77.68674795968192, 119.32506888253349], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 3, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.1172854871528492e+16, 227.29949762124932, 214.30290117567367, 181.33653406000346, 204.48270725123777, 213.2773319738668, 217.6253965249576, 214.7450721427324], "accuracy": [0.1162329912185669, 0.09959053993225098, 0.09826971590518951, 0.1006472036242485, 0.09998679161071777, 0.09932637959718704, 0.10117553919553757, 0.10381719470024109], "val_loss": [152.20203508649553, 156.59762137276786, 174.1277335030692, 206.769287109375, 194.11563546316964, 183.81524222237724, 167.86668613978796, 173.35376848493303], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.10066666454076767, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 52, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [46, 19, 6, 99, 89], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [86, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 84, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 5, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3024985111306107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [4, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 5, 8, 1, 2, 9], [0, 4, 1, 0, 0], [25, 19, 6, 99], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [7, 4, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09428571164608002, "mapping_values": [1, 8, 8, 4, 4, 2, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301836855864056, 2.30442417563858, 2.303686399501407, 2.3029035706293977, 2.301906304383999, 2.302929241612225, 2.3019639390444855, 2.301395854992779, 2.300985701662627, 2.3007135429654406, 2.2998764173875252, 2.2997263884893924, 2.298847163688741, 2.299067804164985, 2.3002375691023014, 2.2979875646010997, 2.2993986533853623, 2.299283417413389, 2.2989579745413464, 2.298713631334558, 2.29844308693049, 2.2978957755895353, 2.2983367553933136, 2.298398968251059, 2.2991023495716583, 2.299637595439836, 2.299134949179153, 2.2993963293159454, 2.2998554906856428, 2.2990056299782227, 2.298955768279868, 2.299574914436456, 2.2997017241173006], "accuracy": [0.09245806187391281, 0.08730682730674744, 0.09259014576673508, 0.08730682730674744, 0.08875974267721176, 0.09021265059709549, 0.09008057415485382, 0.09153348207473755, 0.09192973375320435, 0.09245806187391281, 0.09893012791872025, 0.0944393053650856, 0.10038304328918457, 0.09906221181154251, 0.10196803510189056, 0.10896842926740646, 0.10130762308835983, 0.10038304328918457, 0.10659094154834747, 0.10711926966905594, 0.1080438494682312, 0.10408136248588562, 0.1088363528251648, 0.10447761416435242, 0.1006472036242485, 0.10249637067317963, 0.1088363528251648, 0.10949676483869553, 0.11108175665140152, 0.10513802617788315, 0.10619468986988068, 0.10579843819141388, 0.1026284471154213], "val_loss": [1.970982279096331, 1.9709128652300154, 1.9707966532026018, 1.9706317356654577, 1.9704368455069405, 1.970228603907994, 1.9700007438659668, 1.9697607585362025, 1.9695373943873815, 1.9693233626229423, 1.9691078322274345, 1.9689407348632812, 1.9688036101205009, 1.9686980928693498, 1.968625817980085, 1.9685757500784737, 1.9685542242867606, 1.9685422352382116, 1.9685463224138533, 1.968569619315011, 1.9686110360281808, 1.9686508178710938, 1.9687178475516183, 1.968815803527832, 1.9689502716064453, 1.9691126005990165, 1.9692911420549666, 1.969479969569615, 1.9696686608450753, 1.969860621861049, 1.970045839037214, 1.9702046258108956, 1.9703608240400041], "val_accuracy": [0.038333334028720856, 0.03866666555404663, 0.03999999910593033, 0.0430000014603138, 0.04533333331346512, 0.046666666865348816, 0.049666665494441986, 0.05366666615009308, 0.05666666850447655, 0.05900000035762787, 0.06366666406393051, 0.06700000166893005, 0.0729999989271164, 0.07733333110809326, 0.08299999684095383, 0.08699999749660492, 0.09166666865348816, 0.09366666525602341, 0.09833333641290665, 0.10199999809265137, 0.10499999672174454, 0.1080000028014183, 0.1106666699051857, 0.11233333498239517, 0.11633333563804626, 0.11599999666213989, 0.11800000071525574, 0.11966666579246521, 0.11566666513681412, 0.1120000034570694, 0.10899999737739563, 0.10899999737739563, 0.10899999737739563]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 4, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 3, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.08828571438789368, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3012256470212784, 2.301796952983124, 2.3021358070025872, 2.302603861029437, 2.302617577986238, 2.302925601186313, 2.3036657886860348], "accuracy": [0.09694888442754745, 0.09615638852119446, 0.09060890227556229, 0.07938185334205627, 0.09998679161071777, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.9701319422040666, 1.9713696071079798, 1.9730901718139648, 1.9735563141959054, 1.9737371717180525, 1.9741535186767578, 1.974972929273333], "val_accuracy": [0.06400000303983688, 0.10833333432674408, 0.0820000022649765, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 1, 0, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 1, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3018424376804028, 2.3044913307298773, 2.303878693013159, 2.3032615769887252, 2.30251385554378, 2.303852205436464], "accuracy": [0.09232597798109055, 0.08691058307886124, 0.09206181764602661, 0.08677849918603897, 0.0882314071059227, 0.0878351628780365], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]