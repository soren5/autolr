[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, grad)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0561588115349516, 1.5947152504973234, 1.118673423317209, 0.8838904376641524, 0.8175739588093182, 0.7598045790641064, 0.7281095832015514, 0.6922341546267882, 0.6851213472693461, 0.6472494639992604, 0.6211086475633438, 0.6308862574978149, 0.5959472638693751, 0.5943758982582934, 0.5437009218047403, 0.5905653353947312, 0.5448375202566799, 0.5421186207528317, 0.5123858482547015, 0.4943808273805556, 0.5178758931544164, 0.5020505009412671, 0.47498632544114555, 0.4703148922600908, 0.4658346146900168, 0.4433713606784467, 0.4528521484568796, 0.43879159594948863, 0.4506694298685817, 0.4409763352423139, 0.42845820920452576, 0.4304464635060464], "accuracy": [0.3222824037075043, 0.44327038526535034, 0.591731607913971, 0.670320987701416, 0.6951525807380676, 0.7176066637039185, 0.7224937081336975, 0.7372870445251465, 0.7411174178123474, 0.7580240368843079, 0.763439416885376, 0.7580240368843079, 0.7751948237419128, 0.780610203742981, 0.7980451583862305, 0.7781006693840027, 0.7961959838867188, 0.7971205711364746, 0.8141592741012573, 0.8193105459213257, 0.8090080618858337, 0.8187822103500366, 0.8281601071357727, 0.8286884427070618, 0.835160493850708, 0.8360850811004639, 0.8305375576019287, 0.8421608805656433, 0.8407079577445984, 0.837141752243042, 0.8393871188163757, 0.8388587832450867], "val_loss": [1.4029976640428816, 0.8177709238869804, 0.7211360931396484, 0.6275512150355748, 0.5859760897500175, 0.5599885838372367, 0.5334582839693341, 0.5624814033508301, 0.5437851463045392, 0.489861113684518, 0.47886805874960764, 0.5115055697304862, 0.5311246940067836, 0.4407985380717686, 0.45691982337406706, 0.44210187026432585, 0.42659880433763775, 0.42400814805712017, 0.40943836314337595, 0.4254340444292341, 0.5124271086284092, 0.40063238995415823, 0.38811209372111727, 0.3891371062823704, 0.37635219948632376, 0.37953394651412964, 0.3610166481563023, 0.42205486978803364, 0.3618122254099165, 0.37687922375542776, 0.4120447039604187, 0.3611549990517752], "val_accuracy": [0.4483333230018616, 0.6656666398048401, 0.6793333292007446, 0.7160000205039978, 0.7403333187103271, 0.7426666617393494, 0.7676666378974915, 0.734333336353302, 0.7480000257492065, 0.781333327293396, 0.7846666574478149, 0.7556666731834412, 0.7570000290870667, 0.8009999990463257, 0.7919999957084656, 0.7990000247955322, 0.8059999942779541, 0.8033333420753479, 0.8146666884422302, 0.8063333630561829, 0.7646666765213013, 0.8243333101272583, 0.8273333311080933, 0.8270000219345093, 0.8326666951179504, 0.8316666483879089, 0.843999981880188, 0.8136666417121887, 0.8386666774749756, 0.8309999704360962, 0.8169999718666077, 0.8379999995231628]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 3, 7, 0, 1, 0], [3, 3, 2, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [4], [64], [1, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.18571428954601288, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.293268450876946, 2.5524227798984915, 2.2831675091817663, 2.2295432240656576, 2.354751783008699, 2.3236360653847155, 2.359261487752471, 2.331589624693113], "accuracy": [0.20842689275741577, 0.10659094154834747, 0.14595165848731995, 0.17170783877372742, 0.12851670384407043, 0.10157178342342377, 0.10051512718200684, 0.09840179979801178], "val_loss": [2.4208579063415527, 1.9654755592346191, 1.8173450061253138, 1.882063388824463, 1.9849838529314314, 1.9682295663016183, 1.9932097026279993, 1.9898824010576521], "val_accuracy": [0.1133333370089531, 0.11633333563804626, 0.24533332884311676, 0.21400000154972076, 0.10000000149011612, 0.12666666507720947, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 3, 3, 3, 0], [45, 40, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11057142913341522, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)), grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.299515008202098, 2.2999089692546204, 2.302443596224318, 2.303171107671705, 2.303447999879905, 2.30334447740548], "accuracy": [0.1010434553027153, 0.11068551242351532, 0.11345925182104111, 0.10038304328918457, 0.09998679161071777, 0.10289261490106583], "val_loss": [1.9687684604099818, 1.9731756619044714, 1.9738970484052385, 1.97431366784232, 1.9742774282182967, 1.974165712084089], "val_accuracy": [0.11500000208616257, 0.11500000208616257, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [6, 5, 7, 0, 1, 8, 8], [1, 1, 3, 2, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [168026534160382.44, 4.2796217654238754e+20, 7.319758583054343e+21, 4.5330094965684215e+22, 4.8134081414494926e+23, 3.23862702966381e+25, 2.669901000281396e+26], "accuracy": [0.10196803510189056, 0.1022322028875351, 0.10117553919553757, 0.10460969805717468, 0.09932637959718704, 0.09694888442754745, 0.09959053993225098], "val_loss": [765273438009051.4, 2.0462604323987954e+21, 6.661193144050408e+21, 1.483011990044752e+23, 2.8199921423637756e+24, 5.14960941416151e+25, 2.1885011619615047e+26], "val_accuracy": [0.1003333330154419, 0.10499999672174454, 0.10066666454076767, 0.09099999815225601, 0.10466666519641876, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [9, 3, 7, 4, 1, 3], [3, 0, 3, 3, 0], [21, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028216090861755, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [60, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [8, 6, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 5, 7, 0, 1, 9, 5, 6, 2], [3, 3, 3, 2, 0, 1], [58, 24, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022439425978223, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [6, 6, 7, 0, 1, 9], [5, 5, 3, 3, 0], [9, 84, 6, 13, 39, 2, 63, 5, 20, 25, 53], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [8, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024749558410624, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 3, 7, 0, 1, 0], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.8289844009419984e+32, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0672302171587944, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [2, 3, 7, 0, 1, 0], [5, 3, 2, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [142040774883060.78, 15.262778220317147, 38.31123652399618, 61.39121705854983, 84.40294351352283, 107.35718744872757, 130.45327013484587], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 24.695731571742467, 44.42287118094308, 64.15753173828125, 83.87558201381138, 103.65135192871094, 123.44057791573661], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [0, 3, 8, 0, 6, 5], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [608.8223052473903, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19852067530155182, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [405563.34821428574, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06599999964237213, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [6, 3, 1, 0, 1, 9], [3, 3, 3, 2, 0], [89, 29, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 2, 7, 0, 1, 9, 1], [1, 1, 3, 2, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(beta, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [48899863814.540794, 7695972636440.177, 127943707651370.5, 921374225226312.0, 4072453763075146.5, 1.3154099308412662e+16], "accuracy": [0.10196803510189056, 0.1018359512090683, 0.10130762308835983, 0.10355303436517715, 0.10117553919553757, 0.1026284471154213], "val_loss": [416914950436.5714, 22476122301586.285, 241261629332333.72, 1315319047145764.5, 4928816575451721.0, 1.453722765316213e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [11, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 6, 7, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022439425978223, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 1, 1, 9, 4, 3, 3, 8, 5, 4, 8, 6, 0, 8, 5, 4, 1, 9, 3, 0, 5, 1, 6, 1, 9, 3, 2, 3, 8, 6, 1, 5, 9, 5, 6, 0], [3, 0, 3, 3, 0, 4, 2, 4, 3, 3, 3, 4, 5, 2, 1, 2, 5, 3, 2, 0, 5, 3], [45, 24, 6, 56, 30, 93], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 50, 50, 32, 18, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(grad))))))), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(beta, beta))), alpha))))), tf.math.add(beta, tf.math.divide_no_nan(beta, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027790017241987, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [10, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9, 5, 6, 2], [3, 0, 3, 3, 3, 1], [66, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8, 1, 2], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3588592697207043, 3.0419436730193485, 4.882318970329175, 8.052434353922273, 12.40650227992227, 17.792863955413974], "accuracy": [0.09906221181154251, 0.10289261490106583, 0.10210011899471283, 0.10289261490106583, 0.10091137140989304, 0.10157178342342377], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09428571164608002, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301432637144247, 2.3009025389570934, 2.3009566546840565, 2.301380773750137, 2.3024046154322013, 2.3023350461756533, 2.3025690589708785, 2.302884895599057, 2.303136130271098, 2.3034067699670193], "accuracy": [0.09760929644107819, 0.09906221181154251, 0.09655263274908066, 0.0940430611371994, 0.10751552134752274, 0.11213842034339905, 0.10434553027153015, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9698188645499093, 1.9706063951764787, 1.9719198771885462, 1.9731565884181432, 1.973383562905448, 1.9736159188406808, 1.9738077436174666, 1.9739670753479004, 1.9741460936410087, 1.9744256564549036], "val_accuracy": [0.057999998331069946, 0.09333333373069763, 0.09933333098888397, 0.10700000077486038, 0.11033333092927933, 0.10466666519641876, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [6, 3, 3, 1, 1, 9, 4, 3, 3, 0, 5, 9, 8, 6, 6, 8, 5, 4, 1, 3, 4, 9, 5, 4, 6, 1, 9, 3, 2, 4, 8, 6, 1, 5, 9, 5, 6, 0], [3, 3, 3, 2, 0, 2, 1, 4, 3, 3, 0, 3, 1, 0, 1, 2, 0, 2, 4, 3, 4, 3], [9, 84, 46, 13, 39, 2, 0, 5, 20, 25, 53], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 26, 26, 17, 9, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(grad, tf.math.subtract(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)), grad), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), alpha), tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020552557850906, 2.3033685104454262, 2.303560730677554, 2.301814775834734, 2.3024874628810457, 2.3021851587037307], "accuracy": [0.09800554811954498, 0.08598599582910538, 0.08836349099874496, 0.09034473448991776, 0.0870426595211029, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [4, 2, 7, 0, 1, 9], [2, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 6, 7, 0], [7, 4, 5], [64], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 8, 5, 3, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), tf.math.add(sigma, grad))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3020552557850906, 2.3033685104454262, 2.303560730677554, 2.301814775834734, 2.3024874628810457, 2.3021851587037307], "accuracy": [0.09800554811954498, 0.08598599582910538, 0.08836349099874496, 0.09034473448991776, 0.0870426595211029, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [7, 3, 2, 8, 2, 2, 0, 0], [0, 3, 3, 2, 0], [94, 24, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3020552557850906, 2.3033685104454262, 2.303560730677554, 2.301814775834734, 2.3024874628810457, 2.3021851587037307], "accuracy": [0.09800554811954498, 0.08598599582910538, 0.08836349099874496, 0.09034473448991776, 0.0870426595211029, 0.08928807079792023], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]