[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 4, 7, 6, 4, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 13, 9, 8, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1151830953865822, 1.665258556309157, 1.1226542401685375, 0.8033276987648943, 0.709110607757324, 0.6333567800145218, 0.597752962933083, 0.5670077830273572, 0.533351316530439, 0.5180556704308048, 0.49394103624502333, 0.4858488568367188, 0.4808545368041471, 0.4568486584923948, 0.4449937090252085, 0.436001951522705, 0.4183134533284819, 0.40141739611533717, 0.3890210365724759, 0.39883499317291377, 0.3869767074555989, 0.37519283205164483, 0.363202787480098, 0.3636721263173045, 0.3453108584876105, 0.3311103593758336, 0.3154070269650535, 0.32725908532748527, 0.3159821729193337, 0.3064630592047279, 0.3025727150517684, 0.29930983979578235, 0.30127718688049465, 0.28989309280728937, 0.27466217635204104, 0.2691465036279537, 0.26792146657373234, 0.2694633400962967, 0.26543000876596495, 0.25667535991023765], "accuracy": [0.3217540681362152, 0.49187690019607544, 0.6275261044502258, 0.7038700580596924, 0.7374191284179688, 0.765949010848999, 0.7810064554214478, 0.7897239327430725, 0.8033285140991211, 0.8103289008140564, 0.819442629814148, 0.8214238286018372, 0.821820080280304, 0.8290846943855286, 0.837537944316864, 0.8407079577445984, 0.8482366800308228, 0.8510104417800903, 0.8588033318519592, 0.852859616279602, 0.8564258217811584, 0.8643507957458496, 0.8647470474243164, 0.8652753829956055, 0.8672566413879395, 0.8770307898521423, 0.8829745054244995, 0.8782195448875427, 0.8825782537460327, 0.8838990926742554, 0.8901069760322571, 0.887597382068634, 0.8858803510665894, 0.8908994793891907, 0.8939374089241028, 0.8981640338897705, 0.8967111110687256, 0.8993527889251709, 0.9001452922821045, 0.9029190540313721], "val_loss": [1.8127235003880091, 1.123922620500837, 0.6109802041734967, 0.5857752902167184, 0.520926969391959, 0.4751573119844709, 0.4754032237189157, 0.4201357534953526, 0.4167567661830357, 0.39955949783325195, 0.38764865909303936, 0.3819239395005362, 0.370645352772304, 0.3660403149468558, 0.36842380251203266, 0.353338965347835, 0.3460722395351955, 0.3591591545513698, 0.3429010169846671, 0.34367709500449045, 0.33559577805655344, 0.3351159266063145, 0.3198558603014265, 0.32687773023332867, 0.34033511366162983, 0.31256541184016634, 0.3161930612155369, 0.3034085886819022, 0.3039062363760812, 0.31830657379967825, 0.3227462257657732, 0.2976146340370178, 0.298785890851702, 0.30534196751458303, 0.2816897715841021, 0.29785819564546856, 0.2930508255958557, 0.2879876664706639, 0.30763278688703266, 0.2865483675684248], "val_accuracy": [0.4036666750907898, 0.6273333430290222, 0.7300000190734863, 0.7459999918937683, 0.7733333110809326, 0.7836666703224182, 0.7816666960716248, 0.8140000104904175, 0.8080000281333923, 0.8226666450500488, 0.8266666531562805, 0.8273333311080933, 0.8383333086967468, 0.8423333168029785, 0.8326666951179504, 0.8460000157356262, 0.847000002861023, 0.8393333554267883, 0.847000002861023, 0.8426666855812073, 0.8513333201408386, 0.8533333539962769, 0.8529999852180481, 0.8576666712760925, 0.8506666421890259, 0.8576666712760925, 0.8603333234786987, 0.862666666507721, 0.8653333187103271, 0.859666645526886, 0.8579999804496765, 0.8690000176429749, 0.8766666650772095, 0.8616666793823242, 0.8790000081062317, 0.8676666617393494, 0.875333309173584, 0.878333330154419, 0.8740000128746033, 0.8756666779518127]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8411428332328796, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.115188112852202, 1.6652443308982048, 1.1316040674724661, 0.8100275622697759, 0.705061023505514, 0.6891053050831246, 0.5994609897052607, 0.5676432024722464, 0.5408385260671027, 0.5279637291730277, 0.4960337611095639, 0.4912497729216553, 0.4752230108406219, 0.45940643589510155, 0.44962989948586607, 0.44047174933107536, 0.4158419320029416, 0.4125163891705634, 0.38770692772192017, 0.3973900854878847, 0.38638374811276277, 0.3871097019981195, 0.36151574239313894, 0.36809466207473035, 0.35112476400049875, 0.33768468801576257, 0.3218332987774192, 0.32978874215077036, 0.3244995011818518, 0.312064775772193, 0.3089889887577161, 0.31132709407661535, 0.30973881150454013, 0.29263121412021137, 0.27233992401068124, 0.26932321630763717, 0.26277365618456844, 0.2713119022645624, 0.2743211832375275, 0.257756969428349, 0.2586745806240119, 0.25076286908642115, 0.24625531759291686, 0.23591475643777512, 0.24092571973099983, 0.2410163770907937, 0.23930036681927488, 0.2291081425886522, 0.22295955825695948], "accuracy": [0.3217540681362152, 0.49293357133865356, 0.6225069165229797, 0.696209192276001, 0.7382115721702576, 0.7493065595626831, 0.7790252566337585, 0.7903843522071838, 0.7987055778503418, 0.8058380484580994, 0.8220842480659485, 0.8171972036361694, 0.8241975903511047, 0.8321225643157959, 0.8342359066009521, 0.8334434032440186, 0.8482366800308228, 0.8461233377456665, 0.8549728989601135, 0.8555012345314026, 0.857218325138092, 0.8569541573524475, 0.8673887252807617, 0.8642187118530273, 0.8642187118530273, 0.8725399374961853, 0.8804649114608765, 0.876370370388031, 0.8779553771018982, 0.8835028409957886, 0.8840311765670776, 0.8833707571029663, 0.883238673210144, 0.8882578015327454, 0.8985602855682373, 0.8931449055671692, 0.8971073627471924, 0.8969752788543701, 0.8931449055671692, 0.8989565372467041, 0.8973715305328369, 0.9038436412811279, 0.9045040011405945, 0.9095231890678406, 0.9089948534965515, 0.9054285883903503, 0.91124027967453, 0.9137498140335083, 0.9126931428909302], "val_loss": [1.8125694819859095, 1.1105262211390905, 0.6184449877057757, 0.5445591041019985, 0.5565904378890991, 0.477512036051069, 0.4629429408482143, 0.43107394661222187, 0.4203675218990871, 0.4004672169685364, 0.38191576514925274, 0.39142204182488577, 0.3718215652874538, 0.3603755831718445, 0.3646669387817383, 0.34892119680132183, 0.34315477098737446, 0.3421029533658709, 0.3408533164433071, 0.33952964203698294, 0.3366833584649222, 0.3361943449292864, 0.3218443734305246, 0.3377178822244917, 0.34250826495034353, 0.3109355313437326, 0.303689249924251, 0.313082150050572, 0.3032499296324594, 0.3044778193746294, 0.33186676672526766, 0.29714371476854595, 0.31039645842143465, 0.29449479069028583, 0.2896396517753601, 0.2902511443410601, 0.3015520913260324, 0.2985003590583801, 0.3136251313345773, 0.2990029879978725, 0.30507716110774447, 0.2875027486256191, 0.29846902404512676, 0.299380966595241, 0.3036533423832485, 0.3050491724695478, 0.3078198518071856, 0.32547539472579956, 0.2939931835447039], "val_accuracy": [0.4036666750907898, 0.6326666474342346, 0.7289999723434448, 0.7476666569709778, 0.7473333477973938, 0.7860000133514404, 0.7900000214576721, 0.8076666593551636, 0.8069999814033508, 0.8183333277702332, 0.8309999704360962, 0.8296666741371155, 0.840666651725769, 0.8463333249092102, 0.8379999995231628, 0.8483333587646484, 0.8483333587646484, 0.847000002861023, 0.8503333330154419, 0.8463333249092102, 0.8463333249092102, 0.8529999852180481, 0.859666645526886, 0.8483333587646484, 0.8519999980926514, 0.8586666584014893, 0.8640000224113464, 0.8669999837875366, 0.8629999756813049, 0.8673333525657654, 0.8539999723434448, 0.8706666827201843, 0.8610000014305115, 0.8633333444595337, 0.8733333349227905, 0.8730000257492065, 0.8693333268165588, 0.8756666779518127, 0.8673333525657654, 0.8736666440963745, 0.8690000176429749, 0.878000020980835, 0.875333309173584, 0.8793333172798157, 0.8736666440963745, 0.8766666650772095, 0.8723333477973938, 0.8693333268165588, 0.878333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 4, 7, 6, 4, 5, 0, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8360000252723694, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 13, 10, 8, 2, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1151744514455757, 1.6678883035374104, 1.150126279534098, 0.8113601581374211, 0.6938960955615655, 0.6690043380483739, 0.5920629910962331, 0.5598621333846799, 0.5364471099883998, 0.5348676785564914, 0.496106054584159, 0.48622377796447697, 0.47402508996339476, 0.46148813324691973, 0.44738298225884643, 0.43393678333166963, 0.42065947096125167, 0.4090192349571767, 0.3929188426506754, 0.3946213094376617, 0.3827804566972748, 0.3805801734483757, 0.3636345299574142, 0.3627938546162586, 0.34155588349756266, 0.33011194151138445, 0.323972428412627, 0.3194757085812641, 0.3183580502983822, 0.30949199070563294, 0.31004072872009325, 0.3084338536438547, 0.31062860774515233, 0.2906710732693307, 0.2669036464369324, 0.276399335073458, 0.26500074232589804, 0.276454239434192, 0.2709741913103991, 0.2612325052472783, 0.2573210090465707, 0.24689705079226304, 0.24363909152796115, 0.23273036983924503, 0.2341856747086274, 0.23741173221056944, 0.2341864388404096, 0.22455136066202033, 0.21616513989526268, 0.21362306305548423, 0.2128063439574964, 0.20884634115479925, 0.19048447285219977, 0.20200928971870086], "accuracy": [0.3217540681362152, 0.4924052357673645, 0.6230352520942688, 0.7017567157745361, 0.7408532500267029, 0.7539294958114624, 0.7799497842788696, 0.7921014428138733, 0.8039889335632324, 0.805177628993988, 0.8185180425643921, 0.8228767514228821, 0.8247259259223938, 0.8322546482086182, 0.8338396549224854, 0.8421608805656433, 0.8475762605667114, 0.8507462739944458, 0.8518029451370239, 0.8544445633888245, 0.86118084192276, 0.8610487580299377, 0.8617091774940491, 0.8644828796386719, 0.8726720213890076, 0.8770307898521423, 0.8804649114608765, 0.8791441321372986, 0.8775591254234314, 0.8820499181747437, 0.8821820020675659, 0.8857482671737671, 0.8842953443527222, 0.8918240666389465, 0.8990886211395264, 0.8971073627471924, 0.902390718460083, 0.8956544995307922, 0.8990886211395264, 0.89988112449646, 0.9014661312103271, 0.9059569239616394, 0.9096552729606628, 0.9093911051750183, 0.9120327830314636, 0.908730685710907, 0.9141460657119751, 0.913617730140686, 0.9182406663894653, 0.9178444147109985, 0.9192973375320435, 0.9211464524269104, 0.9241843819618225, 0.9216747879981995], "val_loss": [1.812577179500035, 1.1266299997057234, 0.6325540542602539, 0.5423246622085571, 0.5179135458809989, 0.4682030848094395, 0.4685267720903669, 0.4183638521603176, 0.4260088801383972, 0.4029457824570792, 0.38856700488499235, 0.37790430443627493, 0.3730715683528355, 0.36313641922814505, 0.35976411615099224, 0.35152929169791086, 0.3431557076317923, 0.35297946419034687, 0.339046095098768, 0.3350006171635219, 0.3268674441746303, 0.32567782061440603, 0.32488469566617695, 0.3229793310165405, 0.3327554634639195, 0.31753199441092356, 0.31171544109072, 0.3130707229886736, 0.3031563333102635, 0.3232267073222569, 0.32437820945467266, 0.29211017063685824, 0.3033010959625244, 0.2914987547057016, 0.28973054034369333, 0.2841557775224958, 0.3025042074067252, 0.2848389574459621, 0.2996130755969456, 0.29390848534447805, 0.31099984475544523, 0.2858251077788217, 0.2922620858464922, 0.2849463565008981, 0.2859861765589033, 0.30061036348342896, 0.29426251138959614, 0.30602398089000155, 0.2909136414527893, 0.31106516293116976, 0.3022599390574864, 0.2997510773794992, 0.3212205001286098, 0.29747700691223145], "val_accuracy": [0.4036666750907898, 0.625333309173584, 0.7236666679382324, 0.7493333220481873, 0.7689999938011169, 0.7919999957084656, 0.781000018119812, 0.8166666626930237, 0.8013333082199097, 0.8199999928474426, 0.8286666870117188, 0.8333333134651184, 0.8363333344459534, 0.8423333168029785, 0.8379999995231628, 0.8433333039283752, 0.8463333249092102, 0.8489999771118164, 0.8510000109672546, 0.8516666889190674, 0.8586666584014893, 0.8523333072662354, 0.8566666841506958, 0.8613333106040955, 0.8560000061988831, 0.8553333282470703, 0.8659999966621399, 0.8616666793823242, 0.8633333444595337, 0.8523333072662354, 0.8613333106040955, 0.875333309173584, 0.8686666488647461, 0.8713333606719971, 0.8736666440963745, 0.8759999871253967, 0.8653333187103271, 0.8796666860580444, 0.8713333606719971, 0.8790000081062317, 0.8676666617393494, 0.8776666522026062, 0.8799999952316284, 0.8806666731834412, 0.8793333172798157, 0.8799999952316284, 0.8743333220481873, 0.8773333430290222, 0.8840000033378601, 0.878000020980835, 0.8826666474342346, 0.8793333172798157, 0.8763333559036255, 0.8806666731834412]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [58, 84, 6], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 4, 7, 6], [4, 7], [64], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.3311428427696228, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.7555081177664755, 2.305560269517638, 2.30342263782407, 2.3030206939532, 2.3025526792901365, 2.30029230268325, 2.162803657019316, 2.473989502187922, 2.3064915708121907, 2.3037809947730215, 2.3031601445109002, 2.3034557981923145], "accuracy": [0.18544445931911469, 0.09628847241401672, 0.09959053993225098, 0.09708096832036972, 0.1006472036242485, 0.1266675442457199, 0.18914277851581573, 0.15915995836257935, 0.09760929644107819, 0.09417514503002167, 0.09628847241401672, 0.09391097724437714], "val_loss": [1.9775616100856237, 1.974397795540946, 1.9736991609845842, 1.9735255241394043, 1.9728566578456335, 1.9658887726919991, 1.5117989948817663, 1.9785090173993791, 1.974672521863665, 1.9738075392586845, 1.9738123757498605, 1.9737106731959753], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.17299999296665192, 0.38466668128967285, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [11, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1], [2, 9], [3, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [2, 7, 9, 0, 1, 9], [5, 3, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [6, 9], [3, 7, 6], [87, 55], [1, 0, 0, 0, 1, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 85, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [79, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7, 6], [87, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [34, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 4, 3, 3, 0], [45, 84, 6], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1], [1, 4, 7, 6], [3, 7], [64, 55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7, 6], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 4, 7, 9, 5, 5, 0, 9], [4, 7, 6], [36, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 8, 5, 5, 0, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 4, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [87, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1], [4, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 4, 7, 6, 4, 5, 0, 9], [4, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 8, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 1], [2, 9], [3, 7, 6], [64], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 4, 5, 2, 9, 2, 3], [2, 0, 2], [6, 32, 85, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.303002084172271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [73, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1], [1, 4, 7, 6], [4, 7, 6], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3634633074788023, 3.0256950358011783, 4.879391292145759, 8.005653858121832, 12.477238226686376, 17.84930758916502], "accuracy": [0.08651433140039444, 0.09866596013307571, 0.1002509593963623, 0.0940430611371994, 0.09536388516426086, 0.10210011899471283], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [91, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 1, 0], [2, 9], [3, 7], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304409251630645, 2.302468785929752, 2.3013845818342866, 2.3022088710390394, 2.3026957110076327, 2.3020394247410523], "accuracy": [0.08347642421722412, 0.08730682730674744, 0.09430722147226334, 0.09060890227556229, 0.09285431355237961, 0.08981640636920929], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [1, 4, 3, 0, 1, 9], [2, 2, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1], [2, 9], [3, 7, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.304409251630645, 2.302468785929752, 2.3013845818342866, 2.3022088710390394, 2.3026957110076327, 2.3020394247410523], "accuracy": [0.08347642421722412, 0.08730682730674744, 0.09430722147226334, 0.09060890227556229, 0.09285431355237961, 0.08981640636920929], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [43, 84, 6], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7, 6], [87, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.304409251630645, 2.302468785929752, 2.3013845818342866, 2.3022088710390394, 2.3026957110076327, 2.3020394247410523], "accuracy": [0.08347642421722412, 0.08730682730674744, 0.09430722147226334, 0.09060890227556229, 0.09285431355237961, 0.08981640636920929], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]