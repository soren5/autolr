[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8531428575515747, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.937704454717257, 1.0917804605137986, 0.793019989950467, 0.691132465428869, 0.6230937168425289, 0.5699108657410525, 0.5353375738559225, 0.5100142680390982, 0.4895053942599364, 0.4717499013385438, 0.44703369055756675, 0.43104442088060124, 0.41597101820568605, 0.41749937135813303, 0.386849803301668, 0.37865455485038974, 0.3599045359541979, 0.3594158674550803, 0.3479666149084043, 0.3340465924278809, 0.32438002450591175, 0.3189332391552528, 0.308169776717701, 0.3058408701330081, 0.2847342404903847, 0.2864503770291199, 0.2862935964189831, 0.2629382292261654, 0.25530265378536343, 0.24928814731710514, 0.2524144498466768, 0.253453221012179, 0.2377494561351002, 0.2325682801703389, 0.2164723638746764], "accuracy": [0.35464271903038025, 0.6205257177352905, 0.6942279934883118, 0.7384757399559021, 0.7717606425285339, 0.7860256433486938, 0.8047813773155212, 0.8173292875289917, 0.8224804997444153, 0.8271034359931946, 0.8347642421722412, 0.8359529972076416, 0.8519350290298462, 0.8491612672805786, 0.8598600029945374, 0.8589354157447815, 0.8634262084960938, 0.8644828796386719, 0.8755778670310974, 0.8762382864952087, 0.8809932470321655, 0.8815215826034546, 0.8841632604598999, 0.8849557638168335, 0.8939374089241028, 0.8910315632820129, 0.8902390599250793, 0.9010698795318604, 0.9025228023529053, 0.9091269373893738, 0.9058248400688171, 0.9010698795318604, 0.9100515246391296, 0.9104477763175964, 0.9177123308181763], "val_loss": [0.8541273900440761, 0.6262107065745762, 0.5599616936274937, 0.5100347995758057, 0.46201634407043457, 0.43678912094661165, 0.4152468868664333, 0.39107963868549894, 0.38400684935706003, 0.3791459969111851, 0.3642931410244533, 0.35647302865982056, 0.3548802818570818, 0.34456647293908255, 0.32856970173971994, 0.3286576271057129, 0.3257225070680891, 0.31578582525253296, 0.30886250734329224, 0.3071816052709307, 0.31463396549224854, 0.3026563269751413, 0.3125085404941014, 0.29946097305842806, 0.3040234531675066, 0.3092162438801357, 0.29380073717662264, 0.2913767269679478, 0.2890514390809195, 0.28742702518190655, 0.3012834702219282, 0.3024038246699742, 0.29213402952466694, 0.2956166182245527, 0.30064036164964947], "val_accuracy": [0.6570000052452087, 0.7163333296775818, 0.7390000224113464, 0.7689999938011169, 0.7763333320617676, 0.7976666688919067, 0.8100000023841858, 0.8226666450500488, 0.824999988079071, 0.8296666741371155, 0.8370000123977661, 0.8399999737739563, 0.8403333425521851, 0.8489999771118164, 0.8539999723434448, 0.856333315372467, 0.8500000238418579, 0.8606666922569275, 0.8610000014305115, 0.859666645526886, 0.8669999837875366, 0.8700000047683716, 0.8696666955947876, 0.8706666827201843, 0.8713333606719971, 0.8636666536331177, 0.8709999918937683, 0.8766666650772095, 0.8786666393280029, 0.8799999952316284, 0.8653333187103271, 0.8776666522026062, 0.8756666779518127, 0.8773333430290222, 0.8736666440963745]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [1, 3, 5, 6, 2, 9, 4], [3, 0, 4, 5, 0, 1], [36, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.32114285230636597, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.794208099183594, 2.1807622895374936, 2.300207393359294, 2.323179678878512, 2.2855336770342483, 2.222807653985397], "accuracy": [0.19138818979263306, 0.2712983787059784, 0.11293092370033264, 0.16853784024715424, 0.1336679458618164, 0.2592788338661194], "val_loss": [1.7487244606018066, 1.9791757038661413, 1.8900939396449499, 1.9743823323931013, 1.8683910369873047, 2.009366035461426], "val_accuracy": [0.29233333468437195, 0.10000000149011612, 0.22866666316986084, 0.10300000011920929, 0.29233333468437195, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.19771428406238556, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.546591096062308, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2300885021686554, 0.10566636174917221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [80.32831028529576, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1979999989271164, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.19685713946819305, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5442578208098525, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.230484738945961, 0.1088363528251648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [83.25839451381138, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19733333587646484, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9], [3, 0, 4, 5, 3, 1], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.19685713946819305, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.545944033108682, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2308809906244278, 0.11755382269620895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [82.87869916643415, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19733333587646484, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 3, 3, 6, 2, 9, 4], [3, 0, 4, 5, 0, 1], [76, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.19571428000926971, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4737244008192376, 2.5038355267232104, 2.299648894137553, 2.3102856865490997, 2.304140703159474, 2.2996688121188003, 2.365386591327976, 2.304960719976348], "accuracy": [0.19614318013191223, 0.17553824186325073, 0.11900673806667328, 0.1336679458618164, 0.1010434553027153, 0.11979923397302628, 0.15757495164871216, 0.09985470771789551], "val_loss": [1.9386194092886788, 1.9790754999433244, 1.8534861292157854, 1.9758672714233398, 1.9734928948538644, 1.9316751616341727, 1.9769512585231237, 1.9743450028555733], "val_accuracy": [0.18533332645893097, 0.09833333641290665, 0.32733333110809326, 0.1003333330154419, 0.15433333814144135, 0.15966667234897614, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 3, 3, 6, 2, 9, 4], [3, 3, 1, 5, 0, 1], [76, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.17314285039901733, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4737514103912264, 2.4131695433158002, 2.485115254764559, 2.3069543095942517, 2.3037323910782854, 2.3032924510138053], "accuracy": [0.19574692845344543, 0.17857614159584045, 0.14000792801380157, 0.09787346422672272, 0.10210011899471283, 0.09351472556591034], "val_loss": [1.9386475426810128, 1.9642541749136788, 1.9801526069641113, 1.9749008587428503, 1.9739982060023717, 1.973851203918457], "val_accuracy": [0.18466666340827942, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [3, 5, 5, 6, 2, 9, 4, 1, 7, 2], [3, 0, 4, 2, 5, 1, 5], [36, 3, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1225714311003685, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad)))))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033589304020974, 2.303122677712975, 2.3019825326705163, 2.3028223472988727, 2.337737680504965, 2.444584507716094, 2.6418604109785133, 27.301998451322596, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.0816272646188736, 0.08796724677085876, 0.08558975160121918, 0.10130762308835983, 0.1018359512090683, 0.1006472036242485, 0.10210011899471283, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9709982190813338, 1.9709937913077218, 1.9709041459219796, 1.9682281357901437, 1.9873694011143275, 1.9996138981410436, 2.0040998458862305, 73511134354.28572, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.08933333307504654, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.1146666631102562, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 3, 3, 6, 2, 9, 4], [4, 2, 4, 5, 2], [76, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11371428519487381, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 10, 7, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303015215238481, 2.3022416422096588, 2.3008868821529176, 2.3017820700709812, 2.300584414537163, 2.3004834572274717, 2.301020847697693, 2.3007278802640183, 2.301040174434875, 2.30073607410375, 2.301026011281687, 2.30173299665606, 2.301706567495223], "accuracy": [0.08942015469074249, 0.08532558381557465, 0.09047681838274002, 0.0882314071059227, 0.09206181764602661, 0.09325055778026581, 0.09840179979801178, 0.10196803510189056, 0.1018359512090683, 0.09787346422672272, 0.10051512718200684, 0.1002509593963623, 0.09576013684272766], "val_loss": [1.9707001277378626, 1.970527512686593, 1.9705095291137695, 1.9706051690237862, 1.9708432470049178, 1.9711369105747767, 1.9714791434151786, 1.971813542502267, 1.9721263476780482, 1.9724029813494002, 1.9726448059082031, 1.9728265489850725, 1.9729753221784319], "val_accuracy": [0.04800000041723251, 0.05833333358168602, 0.07100000232458115, 0.08533333241939545, 0.09466666728258133, 0.10533333569765091, 0.10999999940395355, 0.11299999803304672, 0.1106666699051857, 0.10499999672174454, 0.0989999994635582, 0.09366666525602341, 0.09033333510160446]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 3, 5, 6, 2, 9, 4, 5, 1, 1, 4, 7, 1, 0], [3, 0, 4, 2, 5, 1, 1, 3, 4, 4], [36, 8, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 14, 10, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.square(grad), beta))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.pow(alpha, tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.negative(grad), grad)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303174825282129, 2.5781287873945438, 14.169390427863137, 72.6141287929992, 188.5776370392027, 362.566426307518], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9859764235360282, 3.862795284816197, 33.70973532540457, 112.78116280691964, 241.25122942243303, 418.93402099609375], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 4, 2, 3, 1], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [12136779.695985716, 1800053180.4918768, 29945625762.709286, 215960971491.49545, 954455276137.565, 3143807425927.016], "accuracy": [0.10091137140989304, 0.0956280529499054, 0.10051512718200684, 0.09853387624025345, 0.109232597053051, 0.09998679161071777], "val_loss": [98231750.85714285, 5289665828.571428, 56767252772.57143, 309469577216.0, 1159180320768.0, 3419263879460.5713], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [3, 3, 3, 6, 2, 9, 4], [4, 0, 4, 5, 0], [76, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9, 9], [4, 3, 4, 5, 3], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [3, 3, 5, 6, 2, 9, 4], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6782658824736747, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1905.5345284598213, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 3, 6, 5, 9, 4], [3, 0, 4, 5, 3], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [34247150668288.805, 6196.075326000773, 341571.66990407475, 33692844.93356228, 5087040431.237089, 328535021615.3385, 16983524607592.348, 834726263822619.2, 7.431843975107494e+16, 8.023696284815776e+18, 6.612909096467716e+20], "accuracy": [0.09338264167308807, 0.09985470771789551, 0.10077928751707077, 0.0948355570435524, 0.09774138033390045, 0.10976093262434006, 0.09668471664190292, 0.10038304328918457, 0.1018359512090683, 0.10302469879388809, 0.10289261490106583], "val_loss": [52.85948181152344, 51869.247767857145, 3043598.785714286, 157845929.14285713, 16560509513.142857, 2347376237421.7144, 122652586634678.86, 7570676268850030.0, 3.0942004643739354e+17, 1.499423923665903e+19, NaN], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 3, 5, 6, 2, 9, 4], [3, 0, 0, 2, 5, 1], [36, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09799999743700027, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303358525584922, 2.3031203746795654, 2.3019920662015956, 2.303609659895055, 2.3023420243671997, 2.3024035605457183, 2.303121735217974, 2.3024755483762607, 2.303824515847199, 2.3004553177573692, 2.301359913084942, 2.3040078290307746, 2.3026982936813782, 2.303772608932487, 2.3015903483103486, 2.301915175060413, 2.302929655026451, 2.302444774366688, 2.301606155641642, 2.3015592068004698, 2.3020294146877256, 2.3012849630192838, 2.3015404294242856, 2.3007594335820807, 2.3014529980783056, 2.301417452233138, 2.3017726369333023, 2.3024561602000815, 2.3001748987113984, 2.3006109809988855, 2.3013121409738035, 2.3008707133361046, 2.3009272718221725, 2.300073953872155, 2.300516771397901, 2.2996894782954014, 2.300449936885277, 2.300055765220754, 2.3008240377425895, 2.2997947818079423, 2.3001239986908417, 2.3009529292323663, 2.3000922310133465, 2.2979952994275954, 2.2988057991517077, 2.2986925288182616, 2.299338497427146, 2.298927075165988, 2.2989946347595507, 2.2996505684525723, 2.2994811380575553, 2.2993973370918495, 2.298538400921855, 2.2993189347591763, 2.2994409869013523, 2.2985631997921305, 2.298856771066283, 2.2990097389906436, 2.2996413681910512, 2.298350437772965, 2.2977030384636605, 2.2991358965552635, 2.298475994047881, 2.298261806807734, 2.299693647392705, 2.2986755616408865, 2.298446037230506, 2.2996509727973824, 2.298149384464712, 2.2985868502475677, 2.2985432084367856, 2.2985886108794973, 2.2989792134767795, 2.2983009237670595, 2.2991180875911974, 2.298790760610901, 2.2988754638575637, 2.2998938969239395, 2.2982233254633337, 2.2991952020352655, 2.2992252959330886, 2.298603039187148, 2.2990215174856754], "accuracy": [0.08902391046285629, 0.0816272646188736, 0.08796724677085876, 0.08466517180204391, 0.09008057415485382, 0.09113723784685135, 0.09060890227556229, 0.08994849026203156, 0.0886276587843895, 0.09074098616838455, 0.09153348207473755, 0.08572183549404144, 0.09153348207473755, 0.09008057415485382, 0.09245806187391281, 0.0886276587843895, 0.09681680053472519, 0.09087307006120682, 0.09285431355237961, 0.08347642421722412, 0.0874389111995697, 0.09166556596755981, 0.09087307006120682, 0.09747721254825592, 0.08902391046285629, 0.09628847241401672, 0.09774138033390045, 0.08796724677085876, 0.09668471664190292, 0.09021265059709549, 0.09245806187391281, 0.09536388516426086, 0.0952318087220192, 0.09681680053472519, 0.09311848133802414, 0.09906221181154251, 0.09879804402589798, 0.09774138033390045, 0.09047681838274002, 0.0956280529499054, 0.09866596013307571, 0.09615638852119446, 0.10236428678035736, 0.10500594228506088, 0.09866596013307571, 0.10566636174917221, 0.09906221181154251, 0.09919429570436478, 0.09853387624025345, 0.09866596013307571, 0.09972262382507324, 0.10553427785634995, 0.11068551242351532, 0.1018359512090683, 0.10157178342342377, 0.09549596905708313, 0.10289261490106583, 0.09840179979801178, 0.10091137140989304, 0.10817593336105347, 0.10619468986988068, 0.10381719470024109, 0.10460969805717468, 0.11081759631633759, 0.10527011007070541, 0.10870426893234253, 0.10289261490106583, 0.1018359512090683, 0.107647605240345, 0.10460969805717468, 0.10962884873151779, 0.10711926966905594, 0.11121384054422379, 0.10870426893234253, 0.10540219396352768, 0.10289261490106583, 0.10434553027153015, 0.1022322028875351, 0.11200633645057678, 0.10830801725387573, 0.10513802617788315, 0.11121384054422379, 0.10527011007070541], "val_loss": [1.9709975378853934, 1.9709924970354353, 1.9709842545645577, 1.970973219190325, 1.9709582328796387, 1.9709386825561523, 1.9709153856549944, 1.9708892277308874, 1.9708590507507324, 1.9708263533455985, 1.9707906586783273, 1.9707511493137904, 1.970708233969552, 1.9706613676888602, 1.9706103461129325, 1.9705571447099959, 1.9705022403172083, 1.970445224217006, 1.9703894342694963, 1.9703301702226912, 1.9702692713056291, 1.9702088492257255, 1.9701454980032784, 1.9700780596051897, 1.9700113705226354, 1.96994229725429, 1.9698717934744698, 1.9698042188371931, 1.9697370529174805, 1.9696684564862932, 1.9696002687726701, 1.9695321491786413, 1.9694647789001465, 1.9693992478506905, 1.9693348748343331, 1.9692681857517786, 1.9692037446158273, 1.9691433906555176, 1.9690850802830286, 1.9690313339233398, 1.9689816066196986, 1.9689347403390067, 1.968891211918422, 1.9688525199890137, 1.9688177789960588, 1.968787465776716, 1.9687559264046806, 1.9687273161751884, 1.9687019075666154, 1.9686810629708427, 1.9686651229858398, 1.9686495235988073, 1.9686360359191895, 1.9686239106314523, 1.9686131477355957, 1.9686027254377092, 1.9685916219438826, 1.9685803140912737, 1.9685710498264857, 1.9685640335083008, 1.968559810093471, 1.9685580389840263, 1.968555518559047, 1.9685571534293038, 1.9685622623988561, 1.96857145854405, 1.9685837200709753, 1.9685992513384138, 1.9686194147382463, 1.9686450958251953, 1.9686777251107352, 1.9687181881495885, 1.968759604862758, 1.9688028608049666, 1.9688488415309362, 1.968897751399449, 1.9689523833138602, 1.9690068789890833, 1.9690634863717216, 1.9691245896475655, 1.9691872596740723, 1.9692517008100237, 1.9693185261317663], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.039000000804662704, 0.03933333232998848, 0.03933333232998848, 0.04100000113248825, 0.041999999433755875, 0.04233333468437195, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.044333335012197495, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.04633333161473274, 0.047333333641290665, 0.047333333641290665, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.052000001072883606, 0.0533333346247673, 0.05400000140070915, 0.055666666477918625, 0.05700000002980232, 0.05700000002980232, 0.057999998331069946, 0.06066666543483734, 0.061666667461395264, 0.06266666948795319, 0.06400000303983688, 0.06499999761581421, 0.0663333311676979, 0.0663333311676979, 0.06666667014360428, 0.0689999982714653, 0.07199999690055847, 0.07400000095367432, 0.07666666805744171, 0.07766667008399963, 0.07833333313465118, 0.08100000023841858, 0.0820000022649765, 0.08399999886751175, 0.08633333444595337, 0.08733333647251129, 0.08900000154972076, 0.09266666322946548, 0.0949999988079071, 0.0949999988079071, 0.09666666388511658, 0.0976666659116745, 0.09933333098888397, 0.10100000351667404, 0.10233332961797714, 0.10433333367109299, 0.10533333569765091, 0.10700000077486038, 0.1080000028014183, 0.10866666585206985, 0.11100000143051147, 0.11233333498239517, 0.1133333370089531, 0.11433333158493042, 0.11599999666213989, 0.11733333021402359, 0.11933333426713943, 0.12099999934434891, 0.12266666442155838, 0.12333333492279053, 0.12333333492279053, 0.1236666664481163, 0.12300000339746475, 0.1223333328962326, 0.12200000137090683, 0.12066666781902313, 0.12033333629369736]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [3, 3, 3, 6, 2, 2, 4], [0, 3, 4, 5, 3, 1], [61, 49, 6, 92], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3030177689719715, 2.301993941523852, 2.300596293866469, 2.301621100496638, 2.3003085007237374, 2.300210348162527, 2.3008197030654562, 2.3001351613788055, 2.301177654630394, 2.298487613135325, 2.2992895993857636, 2.3007692798190758, 2.2999757503584597, 2.3010244346203477, 2.2994986171530947, 2.300026197663986, 2.3008124969418433], "accuracy": [0.09100515395402908, 0.08360850811004639, 0.09113723784685135, 0.08809932321310043, 0.09470347315073013, 0.09496764093637466, 0.09813763201236725, 0.09734513610601425, 0.09734513610601425, 0.10236428678035736, 0.09906221181154251, 0.09813763201236725, 0.09840179979801178, 0.09972262382507324, 0.1006472036242485, 0.09879804402589798, 0.10038304328918457], "val_loss": [1.9703963824680872, 1.9699909346444267, 1.9698553085327148, 1.969679355621338, 1.969688892364502, 1.9697115761893136, 1.969709805079869, 1.9696180479867118, 1.969501291002546, 1.9694886207580566, 1.969623020717076, 1.969724450792585, 1.9699466569083077, 1.970052991594587, 1.9701896395002092, 1.970376423427037, 1.9705258096967424], "val_accuracy": [0.045666664838790894, 0.05400000140070915, 0.058666665107011795, 0.06300000101327896, 0.06533333659172058, 0.07066666334867477, 0.07333333045244217, 0.07866666465997696, 0.08399999886751175, 0.08500000089406967, 0.08366666734218597, 0.08566666394472122, 0.08433333039283752, 0.08299999684095383, 0.08033332973718643, 0.07999999821186066, 0.07866666465997696]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [76, 92, 6, 92], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, grad))), tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033592542558377, 2.3031251518056535, 2.302003654144412, 2.303636060619493, 2.3023861038403, 2.3024732766764244], "accuracy": [0.08902391046285629, 0.0816272646188736, 0.0878351628780365, 0.08440100401639938, 0.09008057415485382, 0.09074098616838455], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]