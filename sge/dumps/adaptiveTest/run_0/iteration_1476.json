[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 9, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 1, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 3, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [4, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8608571290969849, "mapping_values": [1, 10, 10, 7, 3, 3, 5, 5, 2, 3, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.954915595249871, 1.185664603038156, 0.8107124026960716, 0.7070625224574493, 0.6551339549159235, 0.618153998392322, 0.5956162937706834, 0.5613236350075381, 0.5397913506506236, 0.5303336969889103, 0.5012755257389596, 0.49241217898812356, 0.47337546294722116, 0.4557148645015803, 0.43418366797863767, 0.44016753294369987, 0.43507961035089693, 0.41469139536185085, 0.40927915108784896, 0.3927298476076901, 0.39175136023429974, 0.3769371600206801, 0.36726672822033113, 0.3636965106396769, 0.3652785338462383, 0.35308679958785516, 0.3368752129152545, 0.3435868462590714, 0.33122866636474513, 0.3253163655814147, 0.3163698709061464, 0.3062425027780403, 0.30963907160653165, 0.29689060580051807, 0.29366284871003756, 0.29004233130421764, 0.28023233592092966, 0.2776447583569071, 0.282358935535576, 0.26454109089674654], "accuracy": [0.34183067083358765, 0.5949016213417053, 0.7012283802032471, 0.7306828498840332, 0.7544577717781067, 0.770439863204956, 0.7802139520645142, 0.7965922355651855, 0.8029322624206543, 0.8043851256370544, 0.8145555257797241, 0.8234050869941711, 0.8252542614936829, 0.8343679904937744, 0.8384625315666199, 0.8391229510307312, 0.8449346423149109, 0.8486329317092896, 0.8524633646011353, 0.8585391640663147, 0.8628978729248047, 0.8607845902442932, 0.8697662353515625, 0.8679170608520508, 0.8677849769592285, 0.874389111995697, 0.8779553771018982, 0.8721436858177185, 0.8794082403182983, 0.878879964351654, 0.8805969953536987, 0.8853520154953003, 0.8849557638168335, 0.8906353116035461, 0.8891823887825012, 0.895918607711792, 0.8928807377815247, 0.8976356983184814, 0.8931449055671692, 0.9050323367118835], "val_loss": [0.9038897241864886, 0.6560086352484567, 0.5578679186957223, 0.5240719658987862, 0.4931739568710327, 0.47953150953565327, 0.45461448601314, 0.43240649359566824, 0.42555257252284456, 0.4110790661403111, 0.40760310207094463, 0.39547778027398245, 0.38184709208352224, 0.3691266519682748, 0.3610096148082188, 0.36141875811985563, 0.3539946845599583, 0.34493360349110197, 0.34107015814099995, 0.34119307143347605, 0.3303407515798296, 0.3259603125708444, 0.3414408564567566, 0.3282278435570853, 0.31362483331135343, 0.3122837798936026, 0.3209852661405291, 0.30785179138183594, 0.3232800875391279, 0.30661353043147493, 0.2997130070413862, 0.3018428257533482, 0.3027964064053127, 0.30676246540887014, 0.2923188550131662, 0.3061246616499765, 0.3032987969262259, 0.3109589048794338, 0.28992328473499845, 0.2986775381224496], "val_accuracy": [0.621999979019165, 0.7083333134651184, 0.7540000081062317, 0.7639999985694885, 0.7786666750907898, 0.7893333435058594, 0.7940000295639038, 0.8063333630561829, 0.812333345413208, 0.8146666884422302, 0.8173333406448364, 0.8183333277702332, 0.8373333215713501, 0.8330000042915344, 0.8446666598320007, 0.8443333506584167, 0.843666672706604, 0.8536666631698608, 0.8533333539962769, 0.8463333249092102, 0.8546666502952576, 0.8579999804496765, 0.8519999980926514, 0.8553333282470703, 0.8610000014305115, 0.862333357334137, 0.8553333282470703, 0.8640000224113464, 0.8579999804496765, 0.8653333187103271, 0.8683333396911621, 0.8659999966621399, 0.8666666746139526, 0.8606666922569275, 0.871999979019165, 0.8646666407585144, 0.871666669845581, 0.8659999966621399, 0.8709999918937683, 0.871666669845581]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 3, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 81, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8574285507202148, "mapping_values": [1, 12, 12, 8, 4, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9549151410075258, 1.1864198263153471, 0.8104097182645836, 0.7070210075507531, 0.6550452183691455, 0.6188287832056448, 0.5937264608889681, 0.563526115468181, 0.5416779012460247, 0.5382400594013022, 0.5026895731289972, 0.49604036272351515, 0.4762265485795167, 0.46119425930068036, 0.43687226226411363, 0.4383906596025944, 0.4341746648352112, 0.41920145720208024, 0.40975185013198423, 0.39588786964529243, 0.3897945939069568, 0.3788400624666263, 0.3667552335513282, 0.36380521048329306, 0.3665544640559719, 0.35341981162390046, 0.3393150779706864, 0.3430878655226507, 0.3314331542774828, 0.32343167136247997, 0.3189029974227946, 0.30475047887702106, 0.31138617629703197, 0.29653746461619507, 0.29580818186535607, 0.289394105961609, 0.282915827600853, 0.2821914998177508], "accuracy": [0.34183067083358765, 0.5941091179847717, 0.7022850513458252, 0.7285695672035217, 0.7561748623847961, 0.7709681391716003, 0.7796856164932251, 0.7964601516723633, 0.8017435073852539, 0.8021397590637207, 0.8123101592063904, 0.8231409192085266, 0.8195747137069702, 0.832650899887085, 0.8363492488861084, 0.8396512866020203, 0.841500461101532, 0.8475762605667114, 0.8531237840652466, 0.8551049828529358, 0.8618412613868713, 0.8594637513160706, 0.8688416481018066, 0.8669924736022949, 0.8642187118530273, 0.8739928603172302, 0.8775591254234314, 0.8722757697105408, 0.8817857503890991, 0.880729079246521, 0.8794082403182983, 0.8874653577804565, 0.8833707571029663, 0.8914278149604797, 0.8883898854255676, 0.8986923694610596, 0.8932769894599915, 0.8956544995307922], "val_loss": [0.904158524104527, 0.6555072920663017, 0.5581946883882795, 0.5235979216439384, 0.49545061588287354, 0.48035948617117746, 0.45602997711726595, 0.4371283565248762, 0.4412745237350464, 0.4157465526035854, 0.4126057284218924, 0.3986382228987558, 0.38504016399383545, 0.36961070128849577, 0.3585540311677115, 0.358766394002097, 0.3636952723775591, 0.3456232377461025, 0.34030366795403616, 0.3368433969361441, 0.3314174583980015, 0.3263838291168213, 0.336985639163426, 0.3258723872048514, 0.3171818511826651, 0.31264456680842806, 0.3198061074529375, 0.3054349592753819, 0.31533386026109966, 0.30247762373515535, 0.30161769901003155, 0.3062650901930673, 0.29740054266793386, 0.30164164304733276, 0.2889952233859471, 0.30136601413999287, 0.310089179447719, 0.3049929312297276], "val_accuracy": [0.621999979019165, 0.7086666822433472, 0.753333330154419, 0.7630000114440918, 0.7756666541099548, 0.7913333177566528, 0.7926666736602783, 0.8063333630561829, 0.8056666851043701, 0.8136666417121887, 0.8143333196640015, 0.8209999799728394, 0.8303333520889282, 0.8353333473205566, 0.8450000286102295, 0.8423333168029785, 0.8356666564941406, 0.8513333201408386, 0.8536666631698608, 0.8473333120346069, 0.8536666631698608, 0.8546666502952576, 0.8526666760444641, 0.8546666502952576, 0.8613333106040955, 0.859333336353302, 0.8579999804496765, 0.8643333315849304, 0.862333357334137, 0.8650000095367432, 0.8666666746139526, 0.8659999966621399, 0.8756666779518127, 0.8646666407585144, 0.8693333268165588, 0.862666666507721, 0.8676666617393494, 0.8700000047683716]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8454285860061646, "mapping_values": [1, 11, 11, 7, 4, 3, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9549154109171336, 1.1856674428833884, 0.8103672381578545, 0.7072093417741808, 0.654590016878229, 0.61933030900765, 0.5913823394963706, 0.5608498639891003, 0.5386475929730856, 0.5277825367055502, 0.4983050746176741, 0.48993750848097495, 0.47259730271470546, 0.4584756720815557, 0.4375799256521461, 0.44310808645074456, 0.4346574096238183, 0.41863162594543174, 0.40936444761762214, 0.3946863382035211, 0.3881401807963336, 0.3779208421463098, 0.37074437570168817, 0.36461732996815405], "accuracy": [0.34183067083358765, 0.5949016213417053, 0.7030775547027588, 0.7289658188819885, 0.7534011602401733, 0.7697794437408447, 0.780610203742981, 0.7979130744934082, 0.8053097128868103, 0.8045172095298767, 0.8164047002792358, 0.8228767514228821, 0.8267071843147278, 0.8345000743865967, 0.8370096683502197, 0.8376700282096863, 0.8428213000297546, 0.8482366800308228, 0.8543124794960022, 0.8560295701026917, 0.8644828796386719, 0.8610487580299377, 0.8684453964233398, 0.8660678863525391], "val_loss": [0.9038842746189663, 0.6554395301001412, 0.5582610539027623, 0.5249385493142265, 0.49663664613451275, 0.47483342034476145, 0.4555869272777012, 0.43509009906223844, 0.4264777387891497, 0.41325318813323975, 0.40698994057519094, 0.39374434096472605, 0.3824987070901053, 0.37222237246377127, 0.3604621887207031, 0.3577515482902527, 0.3586422971316746, 0.3451669216156006, 0.339830253805433, 0.33692939792360577, 0.3302801677158901, 0.32783621549606323, 0.33345418316977365, 0.3233518600463867], "val_accuracy": [0.621999979019165, 0.7089999914169312, 0.7536666393280029, 0.762333333492279, 0.7770000100135803, 0.7889999747276306, 0.7896666526794434, 0.8086666464805603, 0.812666654586792, 0.8140000104904175, 0.8180000185966492, 0.8243333101272583, 0.8346666693687439, 0.8326666951179504, 0.8433333039283752, 0.8450000286102295, 0.840666651725769, 0.8486666679382324, 0.8573333621025085, 0.8516666889190674, 0.856333315372467, 0.8560000061988831, 0.8536666631698608, 0.8556666374206543]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [34, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.42085713148117065, "mapping_values": [1, 12, 12, 8, 4, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026894240756595, 2.2999296804633924, 2.3016470404128513, 2.301726846993481, 2.2997688439701367, 2.2990326054139363, 2.298869370784364, 2.2979027815561692, 2.2996831104314843, 2.296534398543348, 2.294137510814372, 2.2954830089501574, 2.294643373253827, 2.294349038227753, 2.293245127613298, 2.2911856324366293, 2.2915588204319985, 2.2892078284527, 2.2876288684572383, 2.2880209217202534, 2.288557586511207, 2.2880871708461434, 2.285290506616355, 2.283802444719761, 2.283093041999544, 2.2837358530659513, 2.282640209980235, 2.2817424846410344, 2.2808392116217613, 2.279771754392433, 2.280383324783712, 2.278670437914458, 2.27683304257129, 2.2768545455589995, 2.2766530847883244, 2.275445847794081, 2.273233730496039, 2.272561695849371, 2.271705544053162, 2.2719157242173487, 2.2706236271196274, 2.2694571256291174, 2.2688556481440623, 2.2694398444232027, 2.2667162840975084, 2.2650427283895582, 2.265842810062574, 2.263814335911108, 2.263080457985409, 2.2626983949048816, 2.262370183404568, 2.2621855632173324, 2.259948963533854, 2.2579680081796902, 2.2575225443998113, 2.255706572655469, 2.255648834861863, 2.256158962414769, 2.2548730971397206, 2.2531300215846466, 2.2507467570006967, 2.2511698346584543, 2.2510632143485436, 2.2488149433025137, 2.249624022844209, 2.2483273164675834, 2.2464337387042135, 2.2476399030510334, 2.2454108126238115, 2.2430123345663895, 2.2434140783432626, 2.240985746790531, 2.240377249262352, 2.23936975328221, 2.2382871253442267, 2.236890114529919, 2.235542144946702, 2.2343055586915024, 2.234631242627371, 2.2334628239630265, 2.2321107470993953, 2.2304716317125552, 2.228493544372349, 2.2282541455719937, 2.2267847605007294, 2.2256137206176207, 2.225410436327431, 2.2246949415417268, 2.2225117115942306, 2.2207887413605345, 2.2197649634163126, 2.216182275770079, 2.2165520297947214, 2.2165700119279554, 2.2154205543584577, 2.213541835605539, 2.212364933887855, 2.210739795605205, 2.2095573348076964, 2.2064862325285657], "accuracy": [0.0948355570435524, 0.09813763201236725, 0.09668471664190292, 0.09008057415485382, 0.09932637959718704, 0.09747721254825592, 0.0944393053650856, 0.09853387624025345, 0.09655263274908066, 0.10738343745470047, 0.10460969805717468, 0.10910051316022873, 0.11081759631633759, 0.10936468094587326, 0.10962884873151779, 0.11596883088350296, 0.11108175665140152, 0.11676132678985596, 0.12600713968276978, 0.1262712925672531, 0.12178047746419907, 0.1282525360584259, 0.12930920720100403, 0.14370624721050262, 0.14251750707626343, 0.13340377807617188, 0.13974376022815704, 0.14449875056743622, 0.1488574892282486, 0.15070664882659912, 0.1488574892282486, 0.1508387327194214, 0.15493330359458923, 0.15598995983600616, 0.15902787446975708, 0.160084530711174, 0.16814158856868744, 0.17012283205986023, 0.16655659675598145, 0.1674811840057373, 0.17223615944385529, 0.17751948535442352, 0.1802932173013687, 0.1818782240152359, 0.18359529972076416, 0.18716153502464294, 0.19072777032852173, 0.18795403838157654, 0.19310526549816132, 0.19759608805179596, 0.19178444147109985, 0.19138818979263306, 0.20353981852531433, 0.20353981852531433, 0.20974771678447723, 0.21344605088233948, 0.21212521195411682, 0.21529521048069, 0.21859727799892426, 0.2176727056503296, 0.2222955971956253, 0.2250693440437317, 0.21978603303432465, 0.2343151569366455, 0.23140932619571686, 0.22757892310619354, 0.23959846794605255, 0.23140932619571686, 0.22995641827583313, 0.23933430016040802, 0.22982433438301086, 0.25042927265167236, 0.24580636620521545, 0.2510896921157837, 0.2467309534549713, 0.2425042986869812, 0.25518426299095154, 0.2545238435268402, 0.25676923990249634, 0.2533350884914398, 0.26244881749153137, 0.26244881749153137, 0.27063795924186707, 0.26799631118774414, 0.26680755615234375, 0.26958128809928894, 0.2709021270275116, 0.2790912687778473, 0.2797516882419586, 0.27261921763420105, 0.2723550498485565, 0.2900541424751282, 0.28701624274253845, 0.2937524616718292, 0.2871483266353607, 0.2880729138851166, 0.2879408299922943, 0.29058247804641724, 0.28582748770713806, 0.30022454261779785], "val_loss": [1.97085782459804, 1.9705164773123605, 1.9700355529785156, 1.9694568089076452, 1.9688096727643694, 1.9681137629917689, 1.9673831122262138, 1.9666240555899483, 1.9658521243504115, 1.9650697026933943, 1.9642805371965681, 1.9634834017072404, 1.962681702205113, 1.9618797302246094, 1.9610791206359863, 1.9602793966020857, 1.9594765390668596, 1.958674090249198, 1.9578759329659599, 1.9570751871381487, 1.9562700816563197, 1.9554705619812012, 1.954671791621617, 1.953871182032994, 1.9530652591160365, 1.952261107308524, 1.9514571598597936, 1.9506532805306571, 1.9498464039393835, 1.9490362576075964, 1.9482279505048479, 1.9474175316946847, 1.9466087477547782, 1.9457953998020716, 1.9449802807399206, 1.9441625731331962, 1.9433418682643346, 1.94252347946167, 1.9417034557887487, 1.9408815247671944, 1.940055983407157, 1.9392290796552385, 1.9383977481297083, 1.9375650542122977, 1.936729839869908, 1.9358912876674108, 1.9350476946149553, 1.9341983113970076, 1.933344772883824, 1.9324844905308314, 1.9316192354474748, 1.9307493482317244, 1.929877621786935, 1.929002148764474, 1.9281214305332728, 1.9272331510271346, 1.9263426916939872, 1.9254465103149414, 1.9245460374014718, 1.9236384800502233, 1.9227262224469865, 1.9218086515154158, 1.9208859716142928, 1.9199535506112235, 1.919015611921038, 1.91807188306536, 1.9171186174665178, 1.916163648877825, 1.9152037756783622, 1.9142345700945174, 1.9132571901593889, 1.9122705459594727, 1.911276136125837, 1.9102769579206194, 1.909266539982387, 1.9082490376063757, 1.907219614301409, 1.9061852182660783, 1.905139446258545, 1.904085431780134, 1.903024400983538, 1.9019548552376884, 1.900876794542585, 1.8997900145394462, 1.8986950601850237, 1.8975865500313895, 1.8964685031345911, 1.8953486851283483, 1.8942178998674666, 1.8930764198303223, 1.8919222695486886, 1.8907577650887626, 1.889575685773577, 1.8883845465523856, 1.8871797834123885, 1.8859640530177526, 1.8847390583583288, 1.8835014615740096, 1.882251467023577, 1.8809892109462194], "val_accuracy": [0.039000000804662704, 0.0403333343565464, 0.041999999433755875, 0.04766666516661644, 0.050999999046325684, 0.054999999701976776, 0.057999998331069946, 0.06233333423733711, 0.0689999982714653, 0.07366666942834854, 0.0793333351612091, 0.08566666394472122, 0.09266666322946548, 0.09866666793823242, 0.10599999874830246, 0.11500000208616257, 0.12033333629369736, 0.12533333897590637, 0.13366666436195374, 0.14300000667572021, 0.15266667306423187, 0.16033333539962769, 0.16833333671092987, 0.17933332920074463, 0.18833333253860474, 0.19333332777023315, 0.19866666197776794, 0.20733332633972168, 0.21666666865348816, 0.22633333504199982, 0.23499999940395355, 0.24266666173934937, 0.2473333328962326, 0.2536666691303253, 0.25833332538604736, 0.26633334159851074, 0.273333340883255, 0.27900001406669617, 0.2836666703224182, 0.2906666696071625, 0.29466667771339417, 0.2983333468437195, 0.3023333251476288, 0.3070000112056732, 0.3113333284854889, 0.3149999976158142, 0.3179999887943268, 0.32199999690055847, 0.3266666531562805, 0.33000001311302185, 0.3343333303928375, 0.3370000123977661, 0.33933332562446594, 0.34033334255218506, 0.343666672706604, 0.3476666808128357, 0.34933334589004517, 0.35199999809265137, 0.35366666316986084, 0.3566666543483734, 0.36000001430511475, 0.3630000054836273, 0.3643333315849304, 0.36800000071525574, 0.3700000047683716, 0.3709999918937683, 0.3726666569709778, 0.3736666738986969, 0.375, 0.37700000405311584, 0.37833333015441895, 0.38199999928474426, 0.382999986410141, 0.38499999046325684, 0.38600000739097595, 0.3880000114440918, 0.3889999985694885, 0.38999998569488525, 0.38999998569488525, 0.39266666769981384, 0.3943333327770233, 0.3970000147819519, 0.3986666798591614, 0.40033334493637085, 0.4036666750907898, 0.4033333361148834, 0.4059999883174896, 0.4073333442211151, 0.4090000092983246, 0.4103333353996277, 0.41200000047683716, 0.4143333435058594, 0.4163333475589752, 0.41733333468437195, 0.4180000126361847, 0.4180000126361847, 0.4189999997615814, 0.4189999997615814, 0.42100000381469727, 0.421999990940094]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 9, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [4, 3, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.21371428668498993, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.742349256251734, 2.337153646562078, 2.868721767297558, 2.3639553365391226, 2.3833685804902918, 2.332523145223448, 2.3432185098778824, 2.3386079050751096], "accuracy": [0.15797120332717896, 0.13749834895133972, 0.1938977688550949, 0.136045441031456, 0.10157178342342377, 0.10157178342342377, 0.10196803510189056, 0.09760929644107819], "val_loss": [1.9877751214163644, 1.8418967383248466, 2.023770332336426, 1.9972917693001884, 2.0112996101379395, 2.016348021371024, 2.001473903656006, 1.9925964900425501], "val_accuracy": [0.10000000149011612, 0.2070000022649765, 0.21133333444595337, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 3, 2, 3, 0], [67, 19, 6, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.15399999916553497, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.119248462123264, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18518029153347015, 0.10579843819141388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4541.802176339285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.14366666972637177, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 2, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 5, 1, 2, 9, 3, 6, 4], [0, 3, 2, 3, 0, 5, 1], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 16, 16, 9, 7, 3, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, beta)))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [87, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), grad)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029724511141634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [20298018.358174834, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.044908203184604645, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.466722252796802e+24, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 8, 2, 1, 9, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 0, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [92, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 7, 2, 3, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [5, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [223391.92786298713, 33585450.07792894, 570365927.1134592, 4078142836.4865937, 17811896583.74323, 58873496094.09378], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09496764093637466, 0.09747721254825592, 0.1010434553027153], "val_loss": [1845095.9285714286, 99657913.14285715, 1071518427.4285715, 5847915373.714286, 21920449097.142857, 64691629494.85714], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 9, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 1, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 46, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 2, 5, 1, 2, 9, 3, 7, 2, 5], [0, 4, 2, 3, 0, 5, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 17, 17, 10, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, beta)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.344993354433075, 9.576761533933436, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04834235832095146, 0.01373662706464529, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1295211655753, 1.0912115419156094e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 9, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [3, 3, 2, 3, 0], [39, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304454678038029, 2.3154000420029357, 3.577504135341226e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.08730682730674744, 0.09496764093637466, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9754937035696847, 1.9941918509347099, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02033333294093609, 0.08933333307504654, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 18, 29, 0, 4, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [2, 9, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [7344223.4887810135, 203496239684371.44, 3.4422000865309203e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09906221181154251, 0.09985470771789551, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3151175972.571429, 6.167739927213787e+16, 1.3983817869990863e+24, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10633333027362823, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [3, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [5, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.03628571331501007, "mapping_values": [1, 11, 11, 7, 4, 2, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 3, 3, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), grad), tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027193587548416, 2.300182698881779, 2.302276496637798, 2.3028881811210744, 2.3015667453118915, 2.30150309545552, 2.302065784716099], "accuracy": [0.0948355570435524, 0.09734513610601425, 0.09470347315073013, 0.08836349099874496, 0.09496764093637466, 0.09206181764602661, 0.08572183549404144], "val_loss": [1.9709835733686174, 1.970968518938337, 1.9709537369864327, 1.9709394318716866, 1.9709252629961287, 1.9709111622401647, 1.9708975383213587], "val_accuracy": [0.038333334028720856, 0.03933333232998848, 0.038333334028720856, 0.03866666555404663, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 18, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 2, 5, 1, 2, 9], [5, 3, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 6, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302730778504073, 2.300213775394174, 2.3023570249613172, 2.3029845988100166, 2.3016820861175, 2.301636668055238], "accuracy": [0.0948355570435524, 0.09681680053472519, 0.0944393053650856, 0.0878351628780365, 0.09430722147226334, 0.09219389408826828], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 1, 1, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [4, 5, 3, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 9, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 12, 12, 7, 5, 2, 5, 5, 2, 3, 0, 6, 4, 3, 1, 0, 3, 2, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), alpha)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027311023578134, 2.3002147650312454, 2.302358500378999, 2.3029867894834357, 2.3016849696880257, 2.30163990687606], "accuracy": [0.0948355570435524, 0.09681680053472519, 0.0944393053650856, 0.0878351628780365, 0.09430722147226334, 0.09206181764602661], "val_loss": [1.9710001264299666, 1.9710003989083427, 1.971000807625907, 1.971001216343471, 1.9710016931806291, 1.9710021700177873], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 6, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [74, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 9, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027734437465606, 2.3003559556572335, 2.3025981358974175, 2.303322876732599, 2.3021218579569043, 2.302171656547237], "accuracy": [0.09470347315073013, 0.09655263274908066, 0.0936468094587326, 0.08757099509239197, 0.09351472556591034, 0.09166556596755981], "val_loss": [1.971095289502825, 1.9711891583033971, 1.9712824140276228, 1.9713753291538783, 1.9714694704328264, 1.9715636117117745], "val_accuracy": [0.03700000047683716, 0.03566666692495346, 0.03500000014901161, 0.03466666489839554, 0.03433333337306976, 0.033666666597127914]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 6, 4, 2, 1, 0, 9, 9, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 1, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 1, 2, 3, 0], [40, 19, 6, 99], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 5, 9, 8, 2, 2, 1], [3, 0, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.030571429058909416, "mapping_values": [1, 11, 11, 9, 2, 4, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034650834481227, 2.303875499004071, 2.308587920191801, 2.311486378510898, 2.3122878921754673, 2.3137949407061313], "accuracy": [0.09285431355237961, 0.08809932321310043, 0.07740060985088348, 0.06630563735961914, 0.06590939313173294, 0.05930524319410324], "val_loss": [1.97328553880964, 1.9762699263436454, 1.978785855429513, 1.9807501520429338, 1.9823911530630929, 1.9836773872375488], "val_accuracy": [0.029333332553505898, 0.02199999988079071, 0.017666665837168694, 0.015333333052694798, 0.012666666880249977, 0.012333333492279053]}}]