[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 3, 6, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8485714197158813, "mapping_values": [1, 14, 14, 9, 5, 3, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.058410494067114, 1.107619564838067, 0.7815345562507353, 0.7055350607018729, 0.6595583474237716, 0.6300795855791089, 0.5955435235927669, 0.5688339404032577, 0.556731312793905, 0.5300496445040992, 0.5066870884998615, 0.4951749191686005, 0.47660483816485316, 0.4598646431535447, 0.45144341857504805, 0.4503083833259693, 0.43275042121688434, 0.42564156017346294, 0.4098789104892908, 0.4017640162200787, 0.40639756731132964, 0.38652653751860144, 0.3827933075484378, 0.37952859222833835, 0.3705481617339866, 0.35824324504542804, 0.3496654621204759, 0.3394617650526516, 0.34081386464493324, 0.3324324967579016, 0.32288513006377983, 0.3254572024135668, 0.3130674080889002], "accuracy": [0.30207371711730957, 0.6029586791992188, 0.7112666964530945, 0.7411174178123474, 0.750759482383728, 0.7618544697761536, 0.7795535326004028, 0.7869502305984497, 0.7969884872436523, 0.8074230551719666, 0.8171972036361694, 0.8158763647079468, 0.8241975903511047, 0.8342359066009521, 0.8363492488861084, 0.8358209133148193, 0.8451988101005554, 0.8457271456718445, 0.8564258217811584, 0.8504821062088013, 0.8510104417800903, 0.8601241707801819, 0.8603883385658264, 0.8599920868873596, 0.8656716346740723, 0.8667283058166504, 0.8734645247459412, 0.8747853636741638, 0.8747853636741638, 0.874389111995697, 0.8800686597824097, 0.8813894987106323, 0.8821820020675659], "val_loss": [1.0041431018284388, 0.6450967448098319, 0.5609634263174874, 0.5207364559173584, 0.4964428118297032, 0.47352739742824007, 0.45275955540793283, 0.44632324150630404, 0.4302618588720049, 0.41327474798474995, 0.40348964078085764, 0.3960584657532828, 0.3846484252384731, 0.37435861996241976, 0.37007509810583933, 0.3690261585371835, 0.35368627309799194, 0.3503706795828683, 0.34458530800683157, 0.341334411076137, 0.33198366846357075, 0.3312904579298837, 0.3317787136350359, 0.3272612009729658, 0.3215418372835432, 0.31352455275399344, 0.31649787936891827, 0.3065321786063058, 0.30659598112106323, 0.30948049681527273, 0.30391796997615267, 0.31407515491758076, 0.3009827562740871], "val_accuracy": [0.6206666827201843, 0.7206666469573975, 0.7576666474342346, 0.7689999938011169, 0.777999997138977, 0.7919999957084656, 0.7943333387374878, 0.8019999861717224, 0.8056666851043701, 0.8103333115577698, 0.8263333439826965, 0.8236666917800903, 0.828000009059906, 0.8343333601951599, 0.8386666774749756, 0.8353333473205566, 0.8456666469573975, 0.847000002861023, 0.8460000157356262, 0.8513333201408386, 0.856333315372467, 0.8556666374206543, 0.8546666502952576, 0.8573333621025085, 0.8579999804496765, 0.8616666793823242, 0.8629999756813049, 0.8690000176429749, 0.8683333396911621, 0.8643333315849304, 0.8653333187103271, 0.8636666536331177, 0.8663333058357239]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 5, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8485714197158813, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036093404280149, 1.138435368571913, 0.792385296365919, 0.7016322850362263, 0.6251183769501684, 0.5909404596396252, 0.5562814318382697, 0.5088320509112979, 0.48733421730689713, 0.4698795701699754, 0.4439540651606342, 0.4383871538638124, 0.4204407432737163, 0.40441453301785346, 0.3971724606949057, 0.3851529747157159, 0.37289743394490166, 0.36249224045462125, 0.3426938082610989, 0.34031273843259263, 0.3356296004218952, 0.3207231805214651, 0.3088719911815279, 0.2969272244741825, 0.29496693136811397, 0.28130651582359656, 0.27656074854927987, 0.263992345320503, 0.26683672899662025, 0.26096045931552964, 0.2526047388127357, 0.2508855441664157, 0.2343216432343857, 0.2337701072380795, 0.22744865821589097, 0.21613692939714466, 0.22351139707296688, 0.21427483689972376, 0.20260400872511744, 0.19459709325337124, 0.20562786601356875], "accuracy": [0.30524370074272156, 0.6009774208068848, 0.7013604640960693, 0.7397965788841248, 0.763439416885376, 0.7753269076347351, 0.7935543656349182, 0.8094043135643005, 0.8191784620285034, 0.8321225643157959, 0.8392550349235535, 0.8404437899589539, 0.8506141901016235, 0.8536521196365356, 0.8536521196365356, 0.8578787446022034, 0.8644828796386719, 0.8646149635314941, 0.8765024542808533, 0.8737286925315857, 0.8757099509239197, 0.8800686597824097, 0.8868049383163452, 0.8898428082466125, 0.8894465565681458, 0.893541157245636, 0.8928807377815247, 0.9008057117462158, 0.897899866104126, 0.89988112449646, 0.9041078090667725, 0.901862382888794, 0.9072777628898621, 0.9124290347099304, 0.9148064851760864, 0.9163914918899536, 0.9129573106765747, 0.9146744012832642, 0.9224672913551331, 0.9281468987464905, 0.9212785363197327], "val_loss": [0.9875357832227435, 0.6584187405450004, 0.5608033793313163, 0.5167407989501953, 0.474795971597944, 0.45989571298871723, 0.42490168128694805, 0.40986266306468416, 0.3889662282807486, 0.3804808940206255, 0.3633333444595337, 0.3528022680963789, 0.3457425321851458, 0.34294136081423077, 0.33341446093150545, 0.33537690128598896, 0.31890439987182617, 0.3127744197845459, 0.31287358488355366, 0.3051390222140721, 0.29694695132119314, 0.29217032875333515, 0.29857468605041504, 0.29304260866982595, 0.2894540684563773, 0.28937110730579924, 0.2916280967848642, 0.28268069880349295, 0.28821233340672087, 0.2896167380469186, 0.3027431624276297, 0.2951767785208566, 0.28942636932645527, 0.2881053260394505, 0.28531062602996826, 0.2953159383365086, 0.29845694984708515, 0.3041883962494986, 0.2990651897021702, 0.30121318783078876, 0.2968811052186148], "val_accuracy": [0.6073333621025085, 0.7110000252723694, 0.746999979019165, 0.7620000243186951, 0.7799999713897705, 0.7919999957084656, 0.8023333549499512, 0.8180000185966492, 0.8236666917800903, 0.8320000171661377, 0.8379999995231628, 0.8463333249092102, 0.8573333621025085, 0.8496666550636292, 0.8556666374206543, 0.8463333249092102, 0.856333315372467, 0.8640000224113464, 0.8666666746139526, 0.8633333444595337, 0.8663333058357239, 0.8693333268165588, 0.8733333349227905, 0.8653333187103271, 0.8696666955947876, 0.875333309173584, 0.875, 0.8776666522026062, 0.8769999742507935, 0.8790000081062317, 0.8686666488647461, 0.8786666393280029, 0.8820000290870667, 0.8793333172798157, 0.8786666393280029, 0.8826666474342346, 0.8773333430290222, 0.8790000081062317, 0.8806666731834412, 0.8703333139419556, 0.8796666860580444]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 9, 9, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8431428670883179, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036093410987738, 1.1384093909688109, 0.7925137796374895, 0.7027160502884603, 0.6250838850546255, 0.5920078663730886, 0.5570873427920101, 0.510167706872431, 0.48794446201246366, 0.47223888305924305, 0.44350020049144534, 0.43763587671563203, 0.41928368207328526, 0.4062254826477128, 0.3951960982010113, 0.38123296066801765, 0.3705530088725044, 0.3605453684865019, 0.34411367541763366, 0.33812634365638294, 0.3387828822448316, 0.31873876515349314, 0.3103839972425115, 0.30147581390338785, 0.29106845990415764, 0.27943908155413194, 0.2767353841712399, 0.26134298931354105, 0.27178222280703734, 0.26283818035786416, 0.24923074224983713, 0.24581116419607826, 0.23428664308151062, 0.22879750965813353, 0.21491993882432195, 0.2101563370959193, 0.21586062295554007, 0.20487937631151695, 0.19896275202840027, 0.19069195778976736, 0.19802977249819478, 0.18705225100866507, 0.18269511491646778], "accuracy": [0.30524370074272156, 0.601109504699707, 0.7000396251678467, 0.7371549606323242, 0.7640998363494873, 0.776251494884491, 0.7906485199928284, 0.8096684813499451, 0.8190463781356812, 0.8310658931732178, 0.8409721255302429, 0.8387266993522644, 0.8500858545303345, 0.8544445633888245, 0.8540483713150024, 0.8590674996376038, 0.8659358024597168, 0.8650112152099609, 0.876370370388031, 0.8730682730674744, 0.8751816153526306, 0.8784837126731873, 0.8864086866378784, 0.8865407705307007, 0.8934090733528137, 0.8924844861030579, 0.8936732411384583, 0.9009377956390381, 0.8948619961738586, 0.8997490406036377, 0.9089948534965515, 0.9064852595329285, 0.91124027967453, 0.9137498140335083, 0.9161273241043091, 0.9161273241043091, 0.9120327830314636, 0.9198256731033325, 0.9261656403541565, 0.926429808139801, 0.9243164658546448, 0.9306564331054688, 0.9285431504249573], "val_loss": [0.987525463104248, 0.6586583852767944, 0.5617670161383492, 0.5158794096537999, 0.47639342716761995, 0.4610769578388759, 0.4267749956675938, 0.4112910287720816, 0.38981516872133526, 0.3815238220351083, 0.365086487361363, 0.35253927537373136, 0.34796029329299927, 0.3443728770528521, 0.3330608776637486, 0.32941414628710064, 0.3181079796382359, 0.31756025552749634, 0.3125768559319632, 0.3087612305368696, 0.2949443629809788, 0.29572912624904085, 0.29588127987725393, 0.2892610601016453, 0.28873008489608765, 0.28113350697926115, 0.2890087877001081, 0.28932363646371023, 0.28973294155938284, 0.2983948588371277, 0.29432082176208496, 0.2966068131583078, 0.28423162017549786, 0.2891988328524998, 0.2794968826430185, 0.2921972700527736, 0.28639109645571026, 0.30116582768304007, 0.28965394837515696, 0.30540621280670166, 0.2933083006313869, 0.2919911912509373, 0.29928870712007793], "val_accuracy": [0.6073333621025085, 0.7113333344459534, 0.7459999918937683, 0.7620000243186951, 0.7793333530426025, 0.7916666865348816, 0.8023333549499512, 0.8169999718666077, 0.8276666402816772, 0.8353333473205566, 0.8370000123977661, 0.8453333377838135, 0.856333315372467, 0.8453333377838135, 0.8539999723434448, 0.8533333539962769, 0.8579999804496765, 0.8569999933242798, 0.8663333058357239, 0.8650000095367432, 0.8700000047683716, 0.8696666955947876, 0.8723333477973938, 0.8700000047683716, 0.8726666569709778, 0.8799999952316284, 0.8723333477973938, 0.8806666731834412, 0.8740000128746033, 0.875333309173584, 0.8763333559036255, 0.874666690826416, 0.8836666941642761, 0.8766666650772095, 0.8836666941642761, 0.878333330154419, 0.8796666860580444, 0.8856666684150696, 0.8790000081062317, 0.8776666522026062, 0.8820000290870667, 0.8840000033378601, 0.8816666603088379]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 4, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 2, 0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8334285616874695, "mapping_values": [1, 15, 15, 9, 6, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0360938337390544, 1.138445160770303, 0.7927199057647187, 0.7025343048306442, 0.6238378319348546, 0.5899742487210324, 0.5552456733761935, 0.5084676232162861, 0.4886671977587317, 0.4709511771532428, 0.44838627412366105, 0.44325453660208175, 0.4218526546154607, 0.40556208317179987, 0.39558928747139965, 0.38363184576666887, 0.37359263753343047, 0.3627435160256364, 0.3413276450902621, 0.33800504215011473, 0.333569578707352, 0.3240560088742127, 0.3088059409647853, 0.29884042314424364, 0.2946333511827361, 0.2824887481812457, 0.2755511209728884, 0.26069547722698944, 0.26422585889238487, 0.2577627047044159, 0.2563323001536585], "accuracy": [0.30524370074272156, 0.6009774208068848, 0.7009642124176025, 0.7382115721702576, 0.7635715007781982, 0.7763835787773132, 0.7918372750282288, 0.8104609847068787, 0.8195747137069702, 0.8314621448516846, 0.8366134166717529, 0.8364813327789307, 0.8491612672805786, 0.8545766472816467, 0.8520671129226685, 0.8605204224586487, 0.8648791313171387, 0.8643507957458496, 0.8784837126731873, 0.8745211958885193, 0.8751816153526306, 0.8779553771018982, 0.8862766027450562, 0.8882578015327454, 0.8934090733528137, 0.8932769894599915, 0.8936732411384583, 0.9009377956390381, 0.8980319499969482, 0.8996169567108154, 0.9033153057098389], "val_loss": [0.9875360897609166, 0.6585438251495361, 0.561767578125, 0.5158512932913644, 0.47427778584616526, 0.4597371986934117, 0.4258373805454799, 0.4097440242767334, 0.38877170426504953, 0.3841271230152675, 0.3660860913140433, 0.35110924925122944, 0.35032059465135845, 0.3413577250071934, 0.3328979355948312, 0.3335425427981785, 0.3166273662022182, 0.3142813869885036, 0.3105912378856114, 0.30690477575574604, 0.2968282529285976, 0.2987756303378514, 0.2977482421057565, 0.29310010160718647, 0.2873566917010716, 0.2887908135141645, 0.29279472146715435, 0.2901803255081177, 0.2891637512615749, 0.29480497326169697, 0.2885851093700954], "val_accuracy": [0.6073333621025085, 0.7103333473205566, 0.7450000047683716, 0.762333333492279, 0.7793333530426025, 0.7950000166893005, 0.8009999990463257, 0.8159999847412109, 0.8289999961853027, 0.8289999961853027, 0.8366666436195374, 0.8463333249092102, 0.8503333330154419, 0.8426666855812073, 0.8529999852180481, 0.8516666889190674, 0.8613333106040955, 0.859000027179718, 0.8650000095367432, 0.859333336353302, 0.8666666746139526, 0.8709999918937683, 0.8709999918937683, 0.8679999709129333, 0.8743333220481873, 0.8786666393280029, 0.8769999742507935, 0.875, 0.8743333220481873, 0.874666690826416, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 5, 2, 5, 2, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 23, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8328571319580078, "mapping_values": [1, 9, 9, 6, 3, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0360921587154865, 1.1387220528446655, 0.7924214754563124, 0.703081917950128, 0.6256689276315469, 0.5899282375173703, 0.5553859612173676, 0.5099043616560771, 0.48898404683923175, 0.47250640738704786, 0.44491863926608627, 0.4401400489318073, 0.4201575148855108, 0.4029580607130511, 0.3976086974813166, 0.3871810412709235, 0.3716982845750861, 0.3602767483338767, 0.3428874625120149, 0.34158138882183303, 0.33364682025314873, 0.31725587485535994, 0.3061752692898267, 0.29894227739716284, 0.2918479376504639, 0.28199442304309646, 0.273423311823253, 0.2618294216071484, 0.2687425056484476, 0.2604851770504921, 0.24792413904784677, 0.24981504175460192, 0.2368992171377601, 0.23015656627014944, 0.22453054584776327, 0.21090232523527475, 0.21588062098698294, 0.20740867433782897], "accuracy": [0.30524370074272156, 0.6003170013427734, 0.702681303024292, 0.7388719916343689, 0.7635715007781982, 0.7771760821342468, 0.791969358921051, 0.8087438941001892, 0.8204993009567261, 0.8321225643157959, 0.8411042094230652, 0.8404437899589539, 0.8482366800308228, 0.8562937378883362, 0.8514066934585571, 0.8573504090309143, 0.8652753829956055, 0.8660678863525391, 0.8758420348167419, 0.8728041052818298, 0.878879964351654, 0.8791441321372986, 0.8899748921394348, 0.8889182209968567, 0.8918240666389465, 0.8924844861030579, 0.8943336606025696, 0.904768168926239, 0.8989565372467041, 0.9019944667816162, 0.9059569239616394, 0.9041078090667725, 0.9084665179252625, 0.9137498140335083, 0.9115044474601746, 0.921938955783844, 0.9126931428909302, 0.920089840888977], "val_loss": [0.9873400415693011, 0.6587048087801252, 0.5625612565449306, 0.5162567070552281, 0.4741628170013428, 0.459334135055542, 0.4269465718950544, 0.40973362752369474, 0.3894328304699489, 0.3826637438365391, 0.3658398049218314, 0.35034178836005075, 0.3443461741719927, 0.3457856518881662, 0.33442801237106323, 0.3311845915658133, 0.32208278349467684, 0.3129026549203055, 0.3134942650794983, 0.31056091615131926, 0.29873922892979216, 0.30112827675683157, 0.29476663896015715, 0.29762705734797884, 0.29456872599465506, 0.28366695983069284, 0.29195363180977957, 0.2842505489076887, 0.28907428468976704, 0.28820381845746723, 0.3010507651737758, 0.2953194720404489, 0.2839912005833217, 0.29329240322113037, 0.27677996669496807, 0.2932864597865513, 0.2950379507882254, 0.29992984022412983], "val_accuracy": [0.6073333621025085, 0.7110000252723694, 0.7433333396911621, 0.7636666893959045, 0.7796666622161865, 0.7943333387374878, 0.8003333210945129, 0.8163333535194397, 0.8233333230018616, 0.8289999961853027, 0.8389999866485596, 0.8443333506584167, 0.8553333282470703, 0.8456666469573975, 0.8506666421890259, 0.8510000109672546, 0.8566666841506958, 0.8616666793823242, 0.8643333315849304, 0.8633333444595337, 0.8703333139419556, 0.8659999966621399, 0.8736666440963745, 0.8659999966621399, 0.8696666955947876, 0.8793333172798157, 0.8776666522026062, 0.8820000290870667, 0.8759999871253967, 0.8773333430290222, 0.871999979019165, 0.8766666650772095, 0.8846666812896729, 0.878333330154419, 0.8799999952316284, 0.8786666393280029, 0.875333309173584, 0.8816666603088379]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8282856941223145, "mapping_values": [1, 9, 9, 5, 4, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036091216881797, 1.138891645945956, 0.792621763815985, 0.7028110187366386, 0.6245447676951119, 0.5892988923691551, 0.5546794669928253, 0.5084211310658866, 0.4889958095178943, 0.4712571899935932, 0.44544976530073815, 0.4419989174367446, 0.42095734767705345, 0.4057674167328161, 0.3934536420784102, 0.3834651204037896, 0.3694231355698857, 0.35805879538604973, 0.34045724009226785, 0.332877913013882, 0.3313428994773511, 0.32231849745720953, 0.3050068469410323, 0.29644295281548905, 0.28930480322187857, 0.2798420197306182, 0.2764963180657312, 0.2629080629068485, 0.26472464738394746, 0.2585482269608192, 0.25502981740123704, 0.24669461988927258, 0.23595107326402387, 0.22785663979085932, 0.22054804990265142, 0.21166490388780992, 0.21744368113444512, 0.20598332251083457], "accuracy": [0.30524370074272156, 0.6003170013427734, 0.7022850513458252, 0.7386078238487244, 0.7650244235992432, 0.7786290049552917, 0.7924976944923401, 0.8084797263145447, 0.8185180425643921, 0.8308017253875732, 0.8385946154594421, 0.8352925777435303, 0.8487650156021118, 0.8541803956031799, 0.8570862412452698, 0.8603883385658264, 0.8660678863525391, 0.8663320541381836, 0.8779553771018982, 0.8745211958885193, 0.8754457831382751, 0.8808611631393433, 0.8877294659614563, 0.8908994793891907, 0.8906353116035461, 0.8938053250312805, 0.8965790271759033, 0.900409460067749, 0.9002773761749268, 0.8980319499969482, 0.9045040011405945, 0.9068815112113953, 0.9084665179252625, 0.913089394569397, 0.9166556596755981, 0.9191652536392212, 0.9153348207473755, 0.9202219247817993], "val_loss": [0.9875122138432094, 0.6587713786533901, 0.5629685606275286, 0.5160354546138218, 0.47425239426749094, 0.460063031741551, 0.42658952304295134, 0.40920894486563547, 0.38859387806483675, 0.38198454890932354, 0.3671512348311288, 0.35008547987256733, 0.347637448992048, 0.3439559595925467, 0.33583582299096243, 0.3300966364996774, 0.3175742030143738, 0.3119097522326878, 0.3108051759856088, 0.30598660026277813, 0.29792130844933645, 0.29916138308388845, 0.2990167737007141, 0.2916739157267979, 0.29056523527417866, 0.2833513617515564, 0.2883968438420977, 0.29165637493133545, 0.2869632499558585, 0.3003033144133432, 0.296850894178663, 0.29370507172175814, 0.29403661830084665, 0.29695013591221403, 0.28045943805149626, 0.3015994259289333, 0.2903910619871957, 0.29670766421726774], "val_accuracy": [0.6073333621025085, 0.7110000252723694, 0.7423333525657654, 0.7633333206176758, 0.778333306312561, 0.7913333177566528, 0.8006666898727417, 0.8203333616256714, 0.8266666531562805, 0.8333333134651184, 0.8363333344459534, 0.8460000157356262, 0.8543333411216736, 0.8473333120346069, 0.8529999852180481, 0.8489999771118164, 0.8606666922569275, 0.859333336353302, 0.8650000095367432, 0.8643333315849304, 0.8700000047683716, 0.8700000047683716, 0.8733333349227905, 0.8683333396911621, 0.8693333268165588, 0.8773333430290222, 0.8736666440963745, 0.8766666650772095, 0.878333330154419, 0.8713333606719971, 0.8730000257492065, 0.874666690826416, 0.8816666603088379, 0.878000020980835, 0.8793333172798157, 0.8790000081062317, 0.8796666860580444, 0.8799999952316284]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 5, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [5, 22, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7962856888771057, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2188075388332855, 1.7052833409971329, 1.2826414062771831, 1.084757098731521, 0.9480108363029113, 0.9114112197652139, 0.8301241488551829, 0.801887473984795, 0.7720174381147522, 0.7667037108791283, 0.7457477756384862, 0.7081817211633692, 0.7076571937549573, 0.6892789849877877, 0.6746888117484129, 0.6774774052998834, 0.6617673831986808, 0.6460278301332857, 0.6425846442570382, 0.6117006310413952, 0.6309391972395438, 0.6155212820245448, 0.594618608135636, 0.6033116855547019, 0.5827518511741169], "accuracy": [0.24963676929473877, 0.4707436263561249, 0.5556729435920715, 0.5983357429504395, 0.6623960137367249, 0.6672830581665039, 0.6906617283821106, 0.7020208835601807, 0.713908314704895, 0.7058512568473816, 0.7187954187393188, 0.7308149337768555, 0.7310791015625, 0.7382115721702576, 0.7420420050621033, 0.7371549606323242, 0.7528728246688843, 0.7510236501693726, 0.7581561207771301, 0.7707040309906006, 0.761590301990509, 0.7651565074920654, 0.778232753276825, 0.765949010848999, 0.7819310426712036], "val_loss": [1.6986626556941442, 1.0185058457510812, 0.8604388918195452, 0.7306216784885952, 0.7163891621998378, 0.6589152983256749, 0.6044563736234393, 0.5773391212735858, 0.5607441323144096, 0.5691247667585101, 0.540713974407741, 0.5705731596265521, 0.5315844161169869, 0.5069466148103986, 0.5284843104226249, 0.5144968373434884, 0.4975372552871704, 0.4870046717779977, 0.4880643401827131, 0.4668582166944231, 0.4742635318211147, 0.4721768583570208, 0.4605283907481602, 0.45299576010022846, 0.4646672521318708], "val_accuracy": [0.5173333287239075, 0.6156666874885559, 0.6129999756813049, 0.6663333177566528, 0.6983333230018616, 0.7106666564941406, 0.734000027179718, 0.7506666779518127, 0.765666663646698, 0.762333333492279, 0.7699999809265137, 0.7333333492279053, 0.7699999809265137, 0.7693333625793457, 0.7606666684150696, 0.7716666460037231, 0.7730000019073486, 0.7713333368301392, 0.7913333177566528, 0.8056666851043701, 0.7953333258628845, 0.7960000038146973, 0.7940000295639038, 0.8046666383743286, 0.7940000295639038]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 33, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.2102857083082199, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.257779177641903, 2.3649287351984407, 2.3079789135796505, 2.3037529148839453, 2.3025499506554725, 2.3021020992572803], "accuracy": [0.18399155139923096, 0.2351076453924179, 0.09787346422672272, 0.09932637959718704, 0.10170386731624603, 0.09747721254825592], "val_loss": [1.9308956010001046, 1.9829126766749792, 1.9750377110072546, 1.9736496380397253, 1.972916943686349, 1.9720049585614885], "val_accuracy": [0.2853333353996277, 0.10000000149011612, 0.10000000149011612, 0.1080000028014183, 0.1106666699051857, 0.14800000190734863]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [74, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 9, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10057143121957779, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.193614794514859, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1682736724615097, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9934545925685339, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 3, 7, 1, 8, 5, 9, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302222964628545, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 0, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 2, 6, 0, 2, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 4, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302222964628545, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 4, 8, 0, 0, 0, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 1, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 33, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 7, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 3, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [81, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 1, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [6, 3, 7, 1, 8, 5, 9, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 11, 8, 6, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3027806118605016, 2.3213483914408184, 1.1418730062717451e+30, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.08387266844511032, 0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9747935022626604, 1.9997359684535436, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027666667476296425, 0.09666666388511658, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 5, 6, 5, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 3, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 18, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3631163300020566, 3.156388802440836, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10038304328918457, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.093103681291853, 3.2032508850097656, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [0, 4, 4], [98, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.362769625709986, 3.029241959369414, 4.8927565019648105, 8.01438195789495, 12.436590440710065, 17.937260414741264], "accuracy": [0.09628847241401672, 0.1002509593963623, 0.10276053100824356, 0.10130762308835983, 0.09298639744520187, 0.10236428678035736], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 5, 2, 5, 8, 0, 0, 2, 8, 5, 9, 2, 4, 1, 5, 5, 7, 6, 9, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [5, 7, 0, 6], [98, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.301723483058802, 2.3029613141228795, 2.301414158051087, 2.30438071049247, 2.3016709489372698, 2.30335638041604], "accuracy": [0.09285431355237961, 0.09351472556591034, 0.08981640636920929, 0.08611807972192764, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 9, 8, 0, 0, 2, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301723483058802, 2.3029613141228795, 2.301414158051087, 2.30438071049247, 2.3016709489372698, 2.30335638041604], "accuracy": [0.09285431355237961, 0.09351472556591034, 0.08981640636920929, 0.08611807972192764, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 8, 8, 0, 0, 4, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 5, 3, 0, 1, 9], [0, 3, 3, 3, 0], [38, 70, 6], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [5, 4, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301728282071155, 2.3030212214279326, 2.3015813001819874, 2.304804069585552, 2.3023361484876257, 2.304338862694108], "accuracy": [0.09285431355237961, 0.09338264167308807, 0.08942015469074249, 0.08492933213710785, 0.08889182657003403, 0.09153348207473755], "val_loss": [1.9710138865879603, 1.971086025238037, 1.971217427934919, 1.971400260925293, 1.9716436522347587, 1.9719484192984444], "val_accuracy": [0.03733333200216293, 0.036666665226221085, 0.03400000184774399, 0.03333333507180214, 0.03033333271741867, 0.029666665941476822]}}]