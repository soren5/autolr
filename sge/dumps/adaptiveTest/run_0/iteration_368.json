[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8411428332328796, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0130586464800904, 1.194659876919473, 0.7986347733975527, 0.6890884610435447, 0.618703488857361, 0.5713038118350712, 0.5419288697480179, 0.5133587799729169, 0.4900678603829583, 0.4783553357617793, 0.4511938541241924, 0.43266255175983903, 0.42744055998528463, 0.39971881587633507, 0.40217723287942153, 0.4046842210903112, 0.37720824929040103, 0.3646121330902703, 0.35351847358399285, 0.34004844036068915, 0.3383462616063978, 0.31961503371019656, 0.32397023871149355, 0.31401163469909, 0.3016047476029525, 0.2951382474656181, 0.2890122321028011, 0.2827883994873756, 0.2788272874978209, 0.2856987094000551, 0.2675039861865441, 0.25552130428641906, 0.2557919277861102, 0.2432194854786147, 0.24372359829619103, 0.2455482083210273, 0.23560242312160135, 0.2234119424108564, 0.22872437595958958, 0.21927057600859023, 0.20682277317572076, 0.20322327576986063, 0.2039170988625413, 0.20218033760711265, 0.20293885855792204, 0.19243536785632676], "accuracy": [0.32981112599372864, 0.5775987505912781, 0.7017567157745361, 0.7441553473472595, 0.7707040309906006, 0.7887993454933167, 0.8000264167785645, 0.8166688680648804, 0.8189142942428589, 0.8284242749214172, 0.8322546482086182, 0.8429533839225769, 0.8471800088882446, 0.8539162874221802, 0.8520671129226685, 0.8492933511734009, 0.8632941246032715, 0.8632941246032715, 0.871879518032074, 0.8753136992454529, 0.8749174475669861, 0.8809932470321655, 0.8767666220664978, 0.8820499181747437, 0.8862766027450562, 0.8903711438179016, 0.8928807377815247, 0.8947299122810364, 0.8980319499969482, 0.8963148593902588, 0.8948619961738586, 0.9006736278533936, 0.9010698795318604, 0.9113723635673523, 0.9099194407463074, 0.9059569239616394, 0.9141460657119751, 0.9146744012832642, 0.913617730140686, 0.9144102334976196, 0.9235239624977112, 0.9206181764602661, 0.9211464524269104, 0.9196935892105103, 0.9211464524269104, 0.923920214176178], "val_loss": [1.292238644191197, 0.6895645005362374, 0.5685398238045829, 0.5005027907235282, 0.4588116066796439, 0.42862447670527865, 0.4214557409286499, 0.3906954952648708, 0.3802757348333086, 0.40049573353358675, 0.35899507999420166, 0.3621319191796439, 0.34511533805302214, 0.36204125199999126, 0.37872910499572754, 0.33990090233939035, 0.3255471672330584, 0.333586369241987, 0.31066480704716276, 0.3328384757041931, 0.31655716044562204, 0.313200192792075, 0.310977646282741, 0.3234627332006182, 0.3037113036428179, 0.3266063502856663, 0.31006752593176706, 0.31206088406699045, 0.32036133323396954, 0.3089580535888672, 0.2965119651385716, 0.30533180066517424, 0.2946276749883379, 0.2932661942073277, 0.29514226743153166, 0.30646592378616333, 0.28791476999010357, 0.30219370126724243, 0.3061271054404123, 0.31555843353271484, 0.2994965059416635, 0.3091263004711696, 0.3145515237535749, 0.3243414419037955, 0.30166882276535034, 0.3259908642087664], "val_accuracy": [0.4339999854564667, 0.6809999942779541, 0.7456666827201843, 0.7736666798591614, 0.7926666736602783, 0.8006666898727417, 0.8140000104904175, 0.8289999961853027, 0.8316666483879089, 0.8203333616256714, 0.8429999947547913, 0.8373333215713501, 0.8529999852180481, 0.8426666855812073, 0.8393333554267883, 0.8479999899864197, 0.8579999804496765, 0.8526666760444641, 0.8633333444595337, 0.8539999723434448, 0.8629999756813049, 0.8666666746139526, 0.8646666407585144, 0.8600000143051147, 0.8686666488647461, 0.8619999885559082, 0.8669999837875366, 0.8653333187103271, 0.8650000095367432, 0.8709999918937683, 0.8733333349227905, 0.8673333525657654, 0.8763333559036255, 0.8766666650772095, 0.8776666522026062, 0.8736666440963745, 0.878333330154419, 0.8756666779518127, 0.8793333172798157, 0.8686666488647461, 0.8836666941642761, 0.8806666731834412, 0.8803333044052124, 0.871666669845581, 0.8820000290870667, 0.871666669845581]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [13, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7940000295639038, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0834445490765927, 1.6229239069097596, 1.2274808576786918, 1.0227670452897386, 0.9453194191143764, 0.8294277473715366, 0.794123227908674, 0.7809749233598298, 0.7572749133013054, 0.7011188802985531, 0.6890573017097436, 0.6518770070785167, 0.6564011713532945, 0.6501972018026988, 0.5994825401578234, 0.5972097136278068, 0.5936125728668649, 0.5808375696417301, 0.5629059403186083, 0.5632199593869498, 0.5479126288402413], "accuracy": [0.2852991819381714, 0.4357416331768036, 0.5595033764839172, 0.609430730342865, 0.6445648074150085, 0.6926429867744446, 0.6970016956329346, 0.6988508701324463, 0.71100252866745, 0.7293620109558105, 0.7288337349891663, 0.7493065595626831, 0.7461365461349487, 0.7518161535263062, 0.776251494884491, 0.7709681391716003, 0.7751948237419128, 0.7769119143486023, 0.7882710099220276, 0.783119797706604, 0.7979130744934082], "val_loss": [1.696021897452218, 1.1143976620265417, 0.7451249190739223, 0.783674785069057, 0.6736600399017334, 0.628381643976484, 0.5727769306727818, 0.6041838782174247, 0.5756733076913017, 0.5580248492104667, 0.5405690499714443, 0.48985326290130615, 0.5462925604411534, 0.47710556643349783, 0.5125811440604073, 0.4575815882001604, 0.47367664745875765, 0.4586869307926723, 0.4686625003814697, 0.44687841619764057, 0.4301606672150748], "val_accuracy": [0.33633333444595337, 0.5809999704360962, 0.6653333306312561, 0.6650000214576721, 0.6996666789054871, 0.7310000061988831, 0.7276666760444641, 0.7200000286102295, 0.7183333039283752, 0.7456666827201843, 0.7306666374206543, 0.7643333077430725, 0.737333357334137, 0.7806666493415833, 0.746999979019165, 0.7953333258628845, 0.7803333401679993, 0.7879999876022339, 0.7833333611488342, 0.781333327293396, 0.7953333258628845]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 1, 3, 0, 2, 9, 1, 8, 1, 9], [3, 2, 5, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [1], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.5854285955429077, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.827956645684928, 2.319294167925354, 2.301342814023138, 2.230652219599516, 2.1825266041854556, 2.24623306527224, 2.0247511130282434, 1.8924315885041982, 1.7104486660037168, 1.9806613327883427, 2.4379476554925024, 2.3067475456083613, 2.3053588021653377, 2.304955942661314], "accuracy": [0.17236824333667755, 0.11042134463787079, 0.11332716792821884, 0.20538897812366486, 0.21278563141822815, 0.20393607020378113, 0.29797911643981934, 0.3625676929950714, 0.4151366949081421, 0.33403778076171875, 0.14132875204086304, 0.10355303436517715, 0.09853387624025345, 0.0948355570435524], "val_loss": [1.9297897475106376, 1.9736888068062919, 1.9680596079145158, 1.9731288637433733, 1.6996655123574393, 1.7847448076520647, 1.5181810174669539, 1.703279631478446, 0.949084894997733, 2.263657774244036, 1.9757346425737654, 1.9739432334899902, 1.974043505532401, 1.9738148961748396], "val_accuracy": [0.1326666623353958, 0.10366666316986084, 0.09833333641290665, 0.10599999874830246, 0.5249999761581421, 0.2253333330154419, 0.44566667079925537, 0.3163333237171173, 0.6166666746139526, 0.47099998593330383, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.34771427512168884, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3928301032067227, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.32281073927879333, 0.1426495909690857, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9016293798174178, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1326666623353958, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 5, 0, 3, 0], [44, 37, 6, 23], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [14, 32, 85]], "fitness": -0.11314285546541214, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2613740158.4071198, 305559042418.8636, 4421545479859.277, 25922054185820.207, 104520637937660.48, 343212115591908.1], "accuracy": [0.11002509295940399, 0.09734513610601425, 0.09060890227556229, 0.08558975160121918, 0.09166556596755981, 0.08625016361474991], "val_loss": [19771280822.857143, 749918973366.8572, 6248170632923.429, 29174660071424.0, 99652396833645.72, 281259921562477.72], "val_accuracy": [0.14633333683013916, 0.09000000357627869, 0.08900000154972076, 0.09000000357627869, 0.10100000351667404, 0.10700000077486038]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [13, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [1, 3, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.440169003488545e+23, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09430722147226334, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0625628957733918e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07733333110809326, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [75, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0], [6, 3, 9, 0, 8, 9], [5, 5, 0, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0], [8], [3], [64], [0, 0, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [80020171555202.23, 230.42758270614357, 1316.1933118754437, 4002.7474642395737, 9019.145463698858, 17114.143854066915], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [46.93110874720982, 571.451904296875, 2205.9552176339284, 5582.285435267857, 11337.179129464286, 20099.149553571428], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [8, 3, 1, 8, 0, 3, 4, 0, 5, 9], [3, 4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 14, 12, 10, 2, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.0706056598758482e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05626733601093292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [36, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [4, 3, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [285131.59815703623, 5518182.595694096, 25716568.995377097, 71560790.7320037, 151146014.64958394, 281363407.6259411], "accuracy": [0.09853387624025345, 0.09945846349000931, 0.09734513610601425, 0.09734513610601425, 0.10434553027153015, 0.09694888442754745], "val_loss": [1087464.642857143, 8654894.57142857, 29161419.42857143, 69066121.14285715, 134827771.42857143, 232905764.57142857], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [0, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [6], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.4639002437589035, 51534866885300.36, 2.1400604263089955e+19, 2.3212205690733776e+24, 2.1808624220681094e+29, 1.8759292567008176e+34], "accuracy": [0.09021265059709549, 0.09747721254825592, 0.10117553919553757, 0.09840179979801178, 0.09681680053472519, 0.1026284471154213], "val_loss": [1085397686.857143, 2832229747130368.0, 6.538616863510272e+20, 7.028740494787747e+25, 6.440937951333394e+30, Infinity], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 1, 3, 0, 2, 9, 1, 8, 1, 9], [3, 0, 3, 3, 0], [69, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.add(grad, grad)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11332716792821884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [93, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [4, 3, 7, 0, 1, 4, 7, 8], [5, 3, 0, 3, 0, 0, 3], [80, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.pow(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302399566318097, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 19, 6, 23], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1], [1, 8, 5], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [14, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [4, 9, 7, 0, 1, 9], [3, 0, 3, 4, 0], [17, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1208436810.4310105, 23588672666.323605, 110202347025.51526, 306987922824.9098, 648784168433.3251, 1208198460402.0688], "accuracy": [0.09840179979801178, 0.09945846349000931, 0.09734513610601425, 0.09734513610601425, 0.10434553027153015, 0.09694888442754745], "val_loss": [4633300699.428572, 37055129892.57143, 125048773485.71428, 296396924050.2857, 578879581622.8572, 1000287052946.2858], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [8, 1, 3, 0, 2, 9, 1, 8, 1, 9], [3, 2, 5, 4, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [1], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 3, 9, 0, 1, 9], [1, 3, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 1, 0, 1], [3, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.09771428257226944, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [147762493267179.78, 1.256888349776279e+18, 2.5022923850683476e+20, 1.0258801929695074e+22, 1.9090217801233597e+23, 2.4289593066714807e+24, 2.181343862252202e+25, 1.6123055950832088e+26, 6.691882727575988e+26], "accuracy": [0.09853387624025345, 0.09972262382507324, 0.09708096832036972, 0.09840179979801178, 0.10421344637870789, 0.10170386731624603, 0.10289261490106583, 0.1010434553027153, 0.10513802617788315], "val_loss": [3795500027047351.0, 8.993045084483542e+18, 9.715056949351155e+20, 2.948949186871422e+22, 4.525484342195175e+23, 5.06729902094557e+24, 4.53202111889592e+25, 1.5600255456386288e+26, 5.940343645456396e+26], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10300000011920929, 0.10700000077486038, 0.10466666519641876, 0.10333333164453506, 0.09466666728258133, 0.09966666996479034, 0.09600000083446503]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [36, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0], [4, 9, 7, 0, 1, 9], [3, 0, 3, 2, 0], [17, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3013588929645548, 2.302636152875107, 2.3034008035507374, 2.3021626089227323, 2.3022140595639278, 2.3026695501188703], "accuracy": [0.08730682730674744, 0.08928807079792023, 0.09034473448991776, 0.09536388516426086, 0.09470347315073013, 0.08809932321310043], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [45, 78, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3013588929645548, 2.302636152875107, 2.3034008035507374, 2.3021626089227323, 2.3022140595639278, 2.3026695501188703], "accuracy": [0.08730682730674744, 0.08928807079792023, 0.09034473448991776, 0.09536388516426086, 0.09470347315073013, 0.08809932321310043], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [13, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0], [6, 3, 7, 0, 1, 9], [1, 3, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, grad))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3013588929645548, 2.302636152875107, 2.3034008035507374, 2.3021626089227323, 2.3022140595639278, 2.3026695501188703], "accuracy": [0.08730682730674744, 0.08928807079792023, 0.09034473448991776, 0.09536388516426086, 0.09470347315073013, 0.08809932321310043], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]