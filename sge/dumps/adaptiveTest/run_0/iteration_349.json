[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8528571724891663, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.004558213556038, 1.632072415523179, 0.841914638252999, 0.7032301299890995, 0.6226819579344006, 0.5766667359383225, 0.5525684991391139, 0.5166307670360606, 0.4832683921002, 0.4841517312628104, 0.4592074664859976, 0.44693917908751657, 0.43683533044365874, 0.42085924805619884, 0.4037039148502063, 0.39339841203351994, 0.38128608423862725, 0.37140042328988837, 0.38182503910836857, 0.35584687810327714, 0.35515892615864353, 0.34806149096584055, 0.340551028532233, 0.3298082697731613, 0.31891074423556315, 0.3128381837092969, 0.29651560268980276, 0.2939019121821089, 0.29549797697861463, 0.2999539159316082, 0.2803501772992347, 0.2858269761471842, 0.26254452311320314, 0.26385615836312787, 0.26261551301272446, 0.2478911146913238], "accuracy": [0.36520934104919434, 0.4621582329273224, 0.6901333928108215, 0.7360982894897461, 0.7640998363494873, 0.7862898111343384, 0.7942147850990295, 0.8084797263145447, 0.8215559124946594, 0.8248580098152161, 0.8329150676727295, 0.83119797706604, 0.8400475382804871, 0.8444063067436218, 0.8556333184242249, 0.8555012345314026, 0.8609166741371155, 0.858671247959137, 0.8590674996376038, 0.86553955078125, 0.8681812286376953, 0.8712190985679626, 0.8742570281028748, 0.8787478804588318, 0.880729079246521, 0.882710337638855, 0.8908994793891907, 0.8899748921394348, 0.8864086866378784, 0.8887861371040344, 0.8949940800666809, 0.8938053250312805, 0.9012019634246826, 0.8949940800666809, 0.8988244533538818, 0.9079381823539734], "val_loss": [1.8869613238743372, 0.7638535669871739, 0.5359673840659005, 0.5217534303665161, 0.4749504327774048, 0.4374770096370152, 0.4111566032682146, 0.40054511172430857, 0.4047958936010088, 0.38822933605739046, 0.38671867336545673, 0.3761613028390067, 0.37493594203676495, 0.35468428475516184, 0.3644129889351981, 0.35297564949308124, 0.3411542517798288, 0.3522759675979614, 0.34823334217071533, 0.31829836538859774, 0.33111075844083515, 0.32539201634270803, 0.3519252283232553, 0.3222459043775286, 0.3230950576918466, 0.31510017599378315, 0.3099883965083531, 0.3043767213821411, 0.30196571350097656, 0.3061254620552063, 0.29802316427230835, 0.2989151052066258, 0.3154292106628418, 0.3154789549963815, 0.3021606632641384, 0.30739015340805054], "val_accuracy": [0.35466668009757996, 0.6763333082199097, 0.7573333382606506, 0.7670000195503235, 0.7866666913032532, 0.796999990940094, 0.8153333067893982, 0.8196666836738586, 0.8119999766349792, 0.8296666741371155, 0.8273333311080933, 0.8323333263397217, 0.8376666903495789, 0.8410000205039978, 0.8323333263397217, 0.8399999737739563, 0.8516666889190674, 0.8403333425521851, 0.8396666646003723, 0.856333315372467, 0.8513333201408386, 0.8560000061988831, 0.8453333377838135, 0.8586666584014893, 0.8643333315849304, 0.8679999709129333, 0.8683333396911621, 0.8706666827201843, 0.8696666955947876, 0.8669999837875366, 0.875, 0.8676666617393494, 0.8616666793823242, 0.8646666407585144, 0.874666690826416, 0.8709999918937683]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [73, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0136657363592816, 1.5650409702706125, 1.285910045371599, 0.9918803869693853, 0.9413620105209825, 0.8242218613608827, 0.7909851870233231, 0.7281061563950331, 0.7147795650401939, 0.7098605697102409, 0.6695916399019206, 0.6506571277115938, 0.6370112876126228, 0.6027754628899201, 0.6106493082091856, 0.5930821643592408, 0.5743138583628193, 0.5779986603621242, 0.5465949922662291, 0.5600638402262541, 0.5516110737530657, 0.5221624345929631, 0.536049624570152, 0.5104583841879543, 0.4928621697844673, 0.5067369269932643, 0.49917617796072317, 0.48344160393008373, 0.4658376328256451, 0.4563675323544775, 0.4373000156665286, 0.46475086420313905, 0.444122510138378, 0.4586702054281591, 0.45348462040051807, 0.42584826554273963, 0.40751354341824386, 0.40603187152376075, 0.4052950993520772, 0.3926408783658274, 0.42891792270249507, 0.4104389473156229, 0.3928591787555293, 0.413992873079442, 0.38927600423830877, 0.385626821387414, 0.37805775382641266, 0.3923168470988326, 0.3520364996944798, 0.3744857788062319, 0.3631689530266999, 0.35671798705566576, 0.3547892577029994, 0.3452569592221066], "accuracy": [0.3358869254589081, 0.4617619812488556, 0.5501254796981812, 0.6490556001663208, 0.6375643610954285, 0.6902654767036438, 0.707568347454071, 0.7243428826332092, 0.7235503792762756, 0.7276449799537659, 0.7430986762046814, 0.7524765729904175, 0.7588165402412415, 0.7714964747428894, 0.7660810947418213, 0.7733456492424011, 0.7886672616004944, 0.7769119143486023, 0.7969884872436523, 0.7913089394569397, 0.7940827012062073, 0.8074230551719666, 0.8037247657775879, 0.8098005652427673, 0.8166688680648804, 0.8137630224227905, 0.813498854637146, 0.8245938420295715, 0.8322546482086182, 0.8313300609588623, 0.8399154543876648, 0.8269713521003723, 0.8399154543876648, 0.8273676037788391, 0.8318583965301514, 0.844010055065155, 0.8549728989601135, 0.8487650156021118, 0.8529917001724243, 0.8582749962806702, 0.839519202709198, 0.8482366800308228, 0.8539162874221802, 0.844010055065155, 0.856689989566803, 0.8597279191017151, 0.8648791313171387, 0.8558974862098694, 0.8701624870300293, 0.8631620407104492, 0.8729361891746521, 0.8673887252807617, 0.8664641380310059, 0.8688416481018066], "val_loss": [1.5543768065316337, 1.0622492177145821, 0.8755217620304653, 0.8322122267314366, 0.6826867376055036, 0.6116143294743129, 0.5861982788358416, 0.5644075700214931, 0.5466442448752267, 0.5349036966051374, 0.5523046425410679, 0.49431977953229633, 0.4914489814213344, 0.5720745495387486, 0.4673420190811157, 0.47068725313459125, 0.4466582877295358, 0.444200941494533, 0.47296604088374544, 0.44926105226789204, 0.4535698209490095, 0.4286447082247053, 0.4289692895753043, 0.40649466855185373, 0.41959268706185476, 0.42034766503742765, 0.4140714236668178, 0.433160058089665, 0.3894496134349278, 0.3862160955156599, 0.3946145602634975, 0.4318781920841762, 0.3665852631841387, 0.38094953128269743, 0.3737901449203491, 0.3590033309800284, 0.37214004141943796, 0.3811174545969282, 0.3530703953334263, 0.40223417963300434, 0.367416969367436, 0.3627275398799351, 0.35325621707098825, 0.3329515542302813, 0.39866725887571064, 0.33493028368268696, 0.38038153307778494, 0.343250572681427, 0.3303148150444031, 0.3352281962122236, 0.3398562840053013, 0.34020497117723736, 0.32830395868846346, 0.33678107602255686], "val_accuracy": [0.4436666667461395, 0.5616666674613953, 0.6316666603088379, 0.6016666889190674, 0.6940000057220459, 0.7200000286102295, 0.7390000224113464, 0.7369999885559082, 0.7336666584014893, 0.746999979019165, 0.7396666407585144, 0.7816666960716248, 0.7736666798591614, 0.7369999885559082, 0.7910000085830688, 0.781000018119812, 0.7983333468437195, 0.8003333210945129, 0.7823333144187927, 0.793666660785675, 0.7910000085830688, 0.8090000152587891, 0.8066666722297668, 0.8159999847412109, 0.8056666851043701, 0.8096666932106018, 0.8119999766349792, 0.8029999732971191, 0.8316666483879089, 0.8233333230018616, 0.8173333406448364, 0.8043333292007446, 0.8353333473205566, 0.8296666741371155, 0.8389999866485596, 0.8389999866485596, 0.824999988079071, 0.8270000219345093, 0.8426666855812073, 0.8153333067893982, 0.8376666903495789, 0.8416666388511658, 0.8453333377838135, 0.8516666889190674, 0.8136666417121887, 0.8539999723434448, 0.82833331823349, 0.8479999899864197, 0.8556666374206543, 0.8533333539962769, 0.8546666502952576, 0.8496666550636292, 0.8556666374206543, 0.8486666679382324]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 7, 0, 1, 6, 6, 9, 1], [3, 0, 3, 0, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.4074285626411438, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2078774228245277, 1.8882892314138477, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.27882710099220276, 0.3543785512447357, 0.12257297337055206, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.731438432421003, 2.482189655303955, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.23999999463558197, 0.30566665530204773, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 6, 6, 9, 1], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2125714272260666, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.14766878871366, 2.7375959182979095, 2.3046421564455124, 2.3033628223153655, 2.3030780459817026, 2.3030186242683137], "accuracy": [0.17250032722949982, 0.13591335713863373, 0.09985470771789551, 0.0936468094587326, 0.09655263274908066, 0.09179764986038208], "val_loss": [1.7560336930411202, 1.9766345024108887, 1.9741565840584892, 1.973825318472726, 1.9737699372427804, 1.9736648968287878], "val_accuracy": [0.28299999237060547, 0.09833333641290665, 0.10066666454076767, 0.09833333641290665, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 6, 6, 9, 1], [3, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1485714316368103, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.2060531092956, 2.3884409926649663, 2.3685250765045067, 2.317667419506401, 3.619857214949213, 2.380513539513923, 2.350204893689602, 2.3442226518745106, 2.3471757871536862], "accuracy": [0.17738740146160126, 0.17619864642620087, 0.14859332144260406, 0.13076211512088776, 0.1216483935713768, 0.10077928751707077, 0.09549596905708313, 0.09708096832036972, 0.09760929644107819], "val_loss": [1.9593894141060966, 1.9839306558881487, 2.053008896963937, 1.8020952088492257, 2.0033506665910994, 2.0240462166922435, 2.014167104448591, 2.002307483128139, 1.9981744629996163], "val_accuracy": [0.10566666722297668, 0.1120000034570694, 0.1003333330154419, 0.234333336353302, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9, 4, 1, 9, 2], [3, 3, 3, 5, 0], [89, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11228571087121964, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3010073006979748, 2.2989053754223305, 2.2994094838429717, 2.3017804260188406, 2.302265218440741, 2.3025258205601755, 2.3026721216762827], "accuracy": [0.08955223858356476, 0.10777968913316727, 0.1018359512090683, 0.080042265355587, 0.08149518072605133, 0.06828688085079193, 0.08519349992275238], "val_loss": [1.9690383502415247, 1.9693833078656877, 1.9720243045261927, 1.97305052621024, 1.9733969824654716, 1.9736441203526087, 1.9737950733729772], "val_accuracy": [0.07866666465997696, 0.125, 0.0846666693687439, 0.08900000154972076, 0.06499999761581421, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [0, 0, 3, 3, 0, 2], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0], [8], [3], [64], [0, 0, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017898370183265, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9, 4, 1, 9, 2], [3, 3, 2, 5, 0, 1], [45, 84, 6, 48, 93], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [6, 0, 7, 0, 1, 9], [3, 0, 2, 1, 0], [45, 84, 6, 48, 93], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [83, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [6, 8, 7, 0, 1, 9, 2, 7, 2, 2, 8, 5], [3, 0, 0, 5, 0, 1, 0], [45, 84, 6, 55, 46], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 1, 0, 1], [4, 6, 5, 2, 9, 3, 9], [2, 0, 0], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 19, 19, 12, 7, 5, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9, 4, 1, 9, 2], [3, 3, 2, 5, 0, 1], [45, 84, 6, 48, 93], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 6, 6, 9, 1], [3, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [9, 4, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 18, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30154412165294, 2.3025849854957157, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 1, 4], [3, 0, 3, 5, 0, 2, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 7, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), tf.math.pow(grad, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), beta)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30154412165294, 2.3025849854957157, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [4, 0, 3, 3, 0, 2], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1], [8, 6, 4, 2, 5, 9, 7], [3, 4], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09914285689592361, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 11, 9, 7, 2, 1, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [70164490.3236777, 34025646.140140004, 7233666.216946242, 3815286.026911901, 1982926.011293092, 353596.9717827483, 5914.915779578325, 2170480.439336843, 3790016.7886012415, 2830955.6931382907, 1576810.0211580372], "accuracy": [0.0660414770245552, 0.060493990778923035, 0.06577730923891068, 0.07713644206523895, 0.0750231146812439, 0.08440100401639938, 0.09893012791872025, 0.09457138925790787, 0.0746268630027771, 0.08096684515476227, 0.08757099509239197], "val_loss": [36115019.428571425, 7592733.142857143, 3318108.714285714, 2536205.285714286, 679412.2678571428, 5338.071707589285, 1264.3789324079241, 3114862.4285714286, 2474367.9285714286, 1645247.5714285714, 657594.375], "val_accuracy": [0.05900000035762787, 0.039000000804662704, 0.0416666679084301, 0.06233333423733711, 0.05833333358168602, 0.10400000214576721, 0.10133333504199982, 0.05700000002980232, 0.06066666543483734, 0.0729999989271164, 0.08233333379030228]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 3, 7, 0, 1, 2, 8, 5, 5, 8], [3, 0, 3, 5, 0, 3], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3631245721805176, 3.0528647692731625, 4.894504769697733, 8.08523852915544, 12.357655482001828, 17.879637468413843], "accuracy": [0.0886276587843895, 0.1018359512090683, 0.10130762308835983, 0.0956280529499054, 0.10659094154834747, 0.10249637067317963], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 9, 0, 1, 6, 6, 9, 1], [3, 0, 3, 5, 0, 5, 4], [77, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3018025951992644, 2.302434096483113, 2.3042394633400853, 2.3081473729487945, 2.315428199863799, 2.3271633050760117, 2.342351353132273], "accuracy": [0.0882314071059227, 0.09787346422672272, 0.10051512718200684, 0.0948355570435524, 0.09113723784685135, 0.09866596013307571, 0.09391097724437714], "val_loss": [1.9710243088858468, 1.972822870526995, 1.9752982684544154, 1.9805077825273787, 1.9893605368477958, 2.0007167543683733, 2.013782705579485], "val_accuracy": [0.06599999964237213, 0.11833333224058151, 0.11699999868869781, 0.10433333367109299, 0.10266666859388351, 0.10166666656732559, 0.11266666650772095]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 6, 6, 9, 1], [5, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3018393502369565, 2.302524451991555, 2.302090859510769, 2.3037489800798956, 2.3035179318186314, 2.301898900496725], "accuracy": [0.08638224750757217, 0.09008057415485382, 0.08915598690509796, 0.08677849918603897, 0.09153348207473755, 0.08902391046285629], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.301852085083042, 2.302550633412468, 2.3021498541428254, 2.3038160392495195, 2.3035871334804, 2.302001322139256, 2.3027401986989395, 2.302578877936643, 2.3029499740774417, 2.303307486972348, 2.3048126043786525, 2.3009896932135105, 2.303519331500389, 2.3042687318265527, 2.302838687867757, 2.3005885943729076], "accuracy": [0.08611807972192764, 0.08955223858356476, 0.08902391046285629, 0.08651433140039444, 0.09113723784685135, 0.08889182657003403, 0.09747721254825592, 0.09008057415485382, 0.08757099509239197, 0.08757099509239197, 0.08334434032440186, 0.09642054885625839, 0.08770307898521423, 0.08757099509239197, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9710357529776437, 1.9710584368024553, 1.9711029188973563, 1.9711335727146693, 1.9711507388523646, 1.9711880683898926, 1.9712163380214147, 1.9712413379124232, 1.9712674277169364, 1.9713009425571986, 1.971320424761091, 1.9713597297668457, 1.9713786670139857, 1.9713988304138184, 1.9714264188494002, 1.971472876412528], "val_accuracy": [0.03799999877810478, 0.03733333200216293, 0.03766666725277901, 0.03766666725277901, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03966666758060455, 0.03966666758060455, 0.03933333232998848, 0.03999999910593033, 0.03966666758060455, 0.03966666758060455, 0.03999999910593033, 0.03999999910593033, 0.039000000804662704]}}]