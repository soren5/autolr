[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [5, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8531428575515747, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0528024118243584, 1.1578730104889428, 0.8183031281019167, 0.7133682443166312, 0.6464259399084162, 0.5912150134893535, 0.5557152328946571, 0.5271113959514171, 0.49162743401691156, 0.4698189915352336, 0.45653843928117166, 0.4387058955118436, 0.4217931518205452, 0.41172434871207136, 0.3952542984482477, 0.38088272403511847, 0.3664080820512211, 0.3554807870993604, 0.3434413622446253, 0.3439482642659233, 0.32492484498521546, 0.3189275874996765, 0.313245710821483, 0.3113172044646644, 0.3079548377709508, 0.2884667639317624, 0.2885204683957303, 0.28044006257182524, 0.2640608629498893, 0.2671541151743303, 0.2625967313655694, 0.24764957993911668, 0.2553891275442665, 0.24293207233812766, 0.23574740694829138, 0.22774060327560203, 0.2210355057353908, 0.21159483776384136, 0.21092877658941428], "accuracy": [0.3055078685283661, 0.5938449501991272, 0.6944921612739563, 0.7325320243835449, 0.7586844563484192, 0.7775723338127136, 0.7917051911354065, 0.8058380484580994, 0.8162726163864136, 0.8240655064582825, 0.8308017253875732, 0.8374059200286865, 0.8426892161369324, 0.8491612672805786, 0.8551049828529358, 0.8578787446022034, 0.863558292388916, 0.8698983192443848, 0.8710870146751404, 0.8733324408531189, 0.8787478804588318, 0.8819178342819214, 0.8831065893173218, 0.8829745054244995, 0.8864086866378784, 0.8919561505317688, 0.891559898853302, 0.8922203183174133, 0.8975036144256592, 0.8990886211395264, 0.901862382888794, 0.9035794734954834, 0.9030511379241943, 0.9046360850334167, 0.9119006991386414, 0.9185048341751099, 0.9162594079971313, 0.9196935892105103, 0.9178444147109985], "val_loss": [1.0186304705483573, 0.6762264626366752, 0.5797287225723267, 0.5203655787876674, 0.5068753617150443, 0.4624120848519461, 0.42789494139807566, 0.41278872319630217, 0.38779965468815397, 0.38102374758039204, 0.3692916972296579, 0.368202200957707, 0.3487653306552342, 0.3450485212462289, 0.3365605218069894, 0.32657397644860403, 0.3233808789934431, 0.31746036665780203, 0.32244148424693514, 0.30915372712271555, 0.30429796661649433, 0.30971185650144306, 0.3106496163776943, 0.30396545784814016, 0.30707452978406635, 0.2969540868486677, 0.300578168460301, 0.3003254107066563, 0.3121343765939985, 0.2925107053347996, 0.2950339487620762, 0.30347542251859394, 0.28915417194366455, 0.2844843438693455, 0.3022233077457973, 0.29453631809779574, 0.29360733713422504, 0.2961591141564505, 0.29710813079561504], "val_accuracy": [0.6116666793823242, 0.7126666903495789, 0.7419999837875366, 0.7703333497047424, 0.7726666927337646, 0.7929999828338623, 0.8050000071525574, 0.8136666417121887, 0.8273333311080933, 0.8316666483879089, 0.8353333473205566, 0.8383333086967468, 0.8510000109672546, 0.8486666679382324, 0.8506666421890259, 0.8519999980926514, 0.8573333621025085, 0.856333315372467, 0.8640000224113464, 0.862333357334137, 0.8669999837875366, 0.8669999837875366, 0.8659999966621399, 0.8673333525657654, 0.8669999837875366, 0.8703333139419556, 0.8723333477973938, 0.871666669845581, 0.8669999837875366, 0.8773333430290222, 0.871999979019165, 0.8703333139419556, 0.8809999823570251, 0.8833333253860474, 0.8776666522026062, 0.8769999742507935, 0.8786666393280029, 0.8803333044052124, 0.8813333511352539]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.847428560256958, "mapping_values": [1, 16, 16, 10, 6, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0528029512184456, 1.1578935317438293, 0.8186595838508586, 0.7142845633684636, 0.6463467804369374, 0.5923357780315716, 0.5586862897025816, 0.5304693186980638, 0.49388480218740705, 0.471825227596032, 0.4593882953619929, 0.44486848168983406, 0.426667134676942, 0.41826773930172234, 0.3992540848025273, 0.3835382947690609, 0.3706989121663808, 0.35943704190475906, 0.35124243829527774, 0.34146442073305694, 0.3277748288881226, 0.3211492710007401, 0.3172909096090029, 0.3094017405386189, 0.3040546801670935, 0.28420319196696386, 0.28388920864094014, 0.28140875919541314, 0.2673186684848295, 0.2628177928375042, 0.2599527552662871, 0.24307883318585963, 0.25065794945345765, 0.23821896363432066, 0.23505419703317812, 0.22772198786958806, 0.22024013928300465, 0.2168062109170006, 0.20523504858924854, 0.20607902240901183, 0.1988662763192055, 0.1914896699085117, 0.1902774498348837, 0.19520065930415265, 0.18170710132578974, 0.1807429791067601, 0.17623073056491767], "accuracy": [0.3055078685283661, 0.5938449501991272, 0.694360077381134, 0.7316074371337891, 0.7572315335273743, 0.7755910754203796, 0.7918372750282288, 0.804649293422699, 0.8152159452438354, 0.8238013386726379, 0.8301413059234619, 0.8345000743865967, 0.8424250483512878, 0.8487650156021118, 0.8533879518508911, 0.8590674996376038, 0.8618412613868713, 0.8676528930664062, 0.8663320541381836, 0.8720116019248962, 0.8776912093162537, 0.8821820020675659, 0.8845595121383667, 0.882710337638855, 0.8881257176399231, 0.8961827754974365, 0.8908994793891907, 0.8956544995307922, 0.8985602855682373, 0.8963148593902588, 0.9014661312103271, 0.9071456789970398, 0.909259021282196, 0.9085986018180847, 0.9095231890678406, 0.9152027368545532, 0.9144102334976196, 0.9178444147109985, 0.9212785363197327, 0.9228635430335999, 0.9245806336402893, 0.9276185631752014, 0.9276185631752014, 0.9255052208900452, 0.9289394021034241, 0.9276185631752014, 0.9317131042480469], "val_loss": [1.0185914380209786, 0.6764050551823207, 0.5806058815547398, 0.5213497706821987, 0.5070595911570958, 0.4640692472457886, 0.4306934305599758, 0.4147218721253531, 0.3905561736651829, 0.38250086988721577, 0.3703143766948155, 0.3689672350883484, 0.35375882046563284, 0.3502220255987985, 0.3426866275923593, 0.3276702846799578, 0.32429202113832745, 0.31837616647992817, 0.3170204758644104, 0.30708466257367817, 0.30504376547677176, 0.3000876648085458, 0.31127774715423584, 0.3050104890550886, 0.3024441514696394, 0.2958666852542332, 0.29995471239089966, 0.30010807514190674, 0.3015818510736738, 0.28850860255105154, 0.29126857008252827, 0.30278840235301424, 0.2874899762017386, 0.2857569796698434, 0.29220815215791973, 0.2904703106198992, 0.29568541049957275, 0.2987376366342817, 0.2952298266547067, 0.2879071150507246, 0.29296318122318815, 0.2985293354306902, 0.2941085270472935, 0.2909762348447527, 0.3026785595076425, 0.31122301306043354, 0.2878703219549997], "val_accuracy": [0.6116666793823242, 0.7123333215713501, 0.7423333525657654, 0.7696666717529297, 0.7716666460037231, 0.7906666398048401, 0.8016666769981384, 0.8116666674613953, 0.824999988079071, 0.8343333601951599, 0.8356666564941406, 0.8376666903495789, 0.8446666598320007, 0.8429999947547913, 0.8519999980926514, 0.8543333411216736, 0.8513333201408386, 0.856333315372467, 0.862666666507721, 0.8629999756813049, 0.871666669845581, 0.8696666955947876, 0.8683333396911621, 0.8679999709129333, 0.871999979019165, 0.875, 0.8669999837875366, 0.8723333477973938, 0.8726666569709778, 0.8776666522026062, 0.874666690826416, 0.8756666779518127, 0.8820000290870667, 0.8769999742507935, 0.878333330154419, 0.8799999952316284, 0.8836666941642761, 0.8793333172798157, 0.8786666393280029, 0.8826666474342346, 0.878333330154419, 0.8866666555404663, 0.8833333253860474, 0.8856666684150696, 0.8809999823570251, 0.8803333044052124, 0.8849999904632568]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 0, 2, 4, 0, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8471428751945496, "mapping_values": [1, 19, 19, 12, 7, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.05188087547271, 1.1730614007424685, 0.8252803152184744, 0.7205962315369056, 0.6483258796311357, 0.5937589407911894, 0.5549786988738789, 0.5227920122984898, 0.4907136344520754, 0.46863748382945747, 0.4536952056062535, 0.43760217380026123, 0.41675717648639815, 0.4018133433975831, 0.3946155192451769, 0.37890357271145836, 0.36592059102922525, 0.35692470482847144, 0.35229200893121704, 0.3540927840222331, 0.33594207908294427, 0.32980298945192393, 0.313308761572841, 0.3142745659776793, 0.3119479415596531, 0.29790805736238046, 0.29561796766687237, 0.2833079429877952, 0.2725057230688845, 0.2724876179533423, 0.2667700753566564, 0.25348747243041675, 0.25828327571774173, 0.25008017778703645, 0.23324470680781234, 0.22580693456097176, 0.22720381668719003, 0.2198609183111274, 0.20232137236234896, 0.20816536138889385, 0.1937158583154012, 0.192924600897086, 0.190567661179622, 0.1914552631666789, 0.18718363084277898, 0.18318028151674073, 0.17396789511094682, 0.1668892090153842, 0.1715849932603486, 0.16182478610487694], "accuracy": [0.3053757846355438, 0.5890899300575256, 0.6914542317390442, 0.7285695672035217, 0.757099449634552, 0.7765156626701355, 0.793422281742096, 0.8101968169212341, 0.8169330358505249, 0.8264430165290833, 0.8305375576019287, 0.8393871188163757, 0.8490291833877563, 0.8521991968154907, 0.8544445633888245, 0.8574824929237366, 0.8667283058166504, 0.8652753829956055, 0.867520809173584, 0.8693699836730957, 0.8730682730674744, 0.8782195448875427, 0.8857482671737671, 0.8796724081039429, 0.8837670087814331, 0.8886540532112122, 0.886672854423523, 0.8919561505317688, 0.8956544995307922, 0.8956544995307922, 0.8996169567108154, 0.9045040011405945, 0.9058248400688171, 0.89988112449646, 0.913089394569397, 0.9166556596755981, 0.9120327830314636, 0.91559898853302, 0.9199577569961548, 0.9187690019607544, 0.9273543953895569, 0.928411066532135, 0.9286752343177795, 0.9253731369972229, 0.9262977242469788, 0.9315810203552246, 0.9348831176757812, 0.9392418265342712, 0.9329018592834473, 0.937260627746582], "val_loss": [1.0205756255558558, 0.6758113077708653, 0.5807960714612689, 0.5242919921875, 0.5073305538722447, 0.46464415958949495, 0.42638680764607023, 0.40918588638305664, 0.38533109426498413, 0.37722699131284443, 0.3671775204794748, 0.3603842003004892, 0.3522433042526245, 0.34241523912974764, 0.3381185701915196, 0.32572065932410105, 0.3200287137712751, 0.3201211265155247, 0.3177438122885568, 0.3126066412244524, 0.3093636291367667, 0.3076962488038199, 0.3123445851462228, 0.3028737987790789, 0.3083316258021763, 0.3034516658101763, 0.3049790348325457, 0.30169739042009625, 0.31104945284979685, 0.2880909528051104, 0.2955781476838248, 0.30490148067474365, 0.2874282939093454, 0.2926257167543684, 0.2948066421917507, 0.2937863213675363, 0.2948744807924543, 0.2931937149592808, 0.30604069573538645, 0.2859378967966352, 0.30057755538395475, 0.29923912457057406, 0.29588013887405396, 0.29706971985953196, 0.29769072362354826, 0.30695093529564993, 0.29022397313799175, 0.30024454423359465, 0.32051081316811697, 0.3090934583118984], "val_accuracy": [0.612333357334137, 0.7093333601951599, 0.7436666488647461, 0.7639999985694885, 0.7636666893959045, 0.7950000166893005, 0.8063333630561829, 0.8169999718666077, 0.8259999752044678, 0.8309999704360962, 0.8393333554267883, 0.8393333554267883, 0.8473333120346069, 0.8503333330154419, 0.8539999723434448, 0.8550000190734863, 0.8539999723434448, 0.8543333411216736, 0.8603333234786987, 0.8640000224113464, 0.8633333444595337, 0.8633333444595337, 0.8676666617393494, 0.8656666874885559, 0.8663333058357239, 0.8636666536331177, 0.8690000176429749, 0.871666669845581, 0.8650000095367432, 0.8776666522026062, 0.8673333525657654, 0.8709999918937683, 0.8796666860580444, 0.8766666650772095, 0.8786666393280029, 0.8786666393280029, 0.8793333172798157, 0.8843333125114441, 0.8806666731834412, 0.8856666684150696, 0.8806666731834412, 0.8830000162124634, 0.8826666474342346, 0.8856666684150696, 0.8880000114440918, 0.878333330154419, 0.8846666812896729, 0.8870000243186951, 0.8826666474342346, 0.8840000033378601]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 0, 2, 4, 1, 0, 6, 3, 6, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8454285860061646, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.052802319681608, 1.1578875320887663, 0.8183266028925223, 0.7135465516232858, 0.646233700584852, 0.5916393144712346, 0.5558802276523027, 0.5265361575670309, 0.49054713599386784, 0.4683275817722582, 0.45666655779609183, 0.4388340479977111, 0.42120950661866324, 0.40991336922871674, 0.39446382915984685, 0.37812629653840346, 0.37013528472113494, 0.35436151631834834, 0.34830175337223346, 0.3417263258961544, 0.32490637829164865, 0.31863805716221344, 0.30992579608151877, 0.31170124391822324, 0.3045692780919756, 0.2842468758379511, 0.2847184746052217, 0.2726128014177773, 0.25874393592854183, 0.2565907322381072, 0.25534690232592455, 0.24427923255663633, 0.25671781947103867, 0.24064222614306344, 0.23173484075511877, 0.23178492700419076, 0.22175931110987968, 0.2143108809624901], "accuracy": [0.3055078685283661, 0.5937128663063049, 0.6948884129524231, 0.7320036888122559, 0.7581561207771301, 0.7771760821342468, 0.7909126877784729, 0.8063663840293884, 0.8164047002792358, 0.8241975903511047, 0.8317263126373291, 0.8359529972076416, 0.8448025584220886, 0.8518029451370239, 0.8569541573524475, 0.8598600029945374, 0.8646149635314941, 0.8681812286376953, 0.8691058158874512, 0.8745211958885193, 0.8792761564254761, 0.8836349248886108, 0.8864086866378784, 0.8808611631393433, 0.8878615498542786, 0.8922203183174133, 0.89552241563797, 0.897899866104126, 0.900409460067749, 0.9015982151031494, 0.9034473896026611, 0.9066173434257507, 0.901862382888794, 0.9062210917472839, 0.9141460657119751, 0.9132214784622192, 0.9124290347099304, 0.9178444147109985], "val_loss": [1.018627405166626, 0.6761986528124128, 0.5797339507511684, 0.520236611366272, 0.5067820038114276, 0.463168740272522, 0.42924764326640535, 0.412901018347059, 0.38680252007075716, 0.38070383242198397, 0.3696209618023464, 0.3660841073308672, 0.3498805676187788, 0.34616204670497347, 0.3362808312688555, 0.32769985709871563, 0.32034495047160555, 0.32016278164727346, 0.31926433529172626, 0.30847119433539255, 0.3017550621713911, 0.30458996977124897, 0.3090576103755406, 0.30304511955806185, 0.3041758452142988, 0.2932725633893694, 0.2983224562236241, 0.30148560660226004, 0.297831015927451, 0.2920670679637364, 0.2899410384041922, 0.3036910721233913, 0.2905100669179644, 0.2831296409879412, 0.2905003087861197, 0.2947613426617214, 0.29324632031576975, 0.2970885378973825], "val_accuracy": [0.6116666793823242, 0.7116666436195374, 0.7409999966621399, 0.7699999809265137, 0.7726666927337646, 0.7926666736602783, 0.8026666641235352, 0.8143333196640015, 0.8270000219345093, 0.8330000042915344, 0.8379999995231628, 0.8386666774749756, 0.8476666808128357, 0.8473333120346069, 0.8529999852180481, 0.8536666631698608, 0.8579999804496765, 0.8506666421890259, 0.862666666507721, 0.862333357334137, 0.8713333606719971, 0.8679999709129333, 0.8686666488647461, 0.8653333187103271, 0.8730000257492065, 0.8709999918937683, 0.8696666955947876, 0.8740000128746033, 0.8733333349227905, 0.8796666860580444, 0.8736666440963745, 0.8693333268165588, 0.8803333044052124, 0.8790000081062317, 0.878333330154419, 0.8756666779518127, 0.8759999871253967, 0.878333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8437142968177795, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0518843801250517, 1.1729652817695526, 0.8255922709709901, 0.7211298833134593, 0.6494680447364921, 0.5931644016930204, 0.5540905165209384, 0.5219474302629643, 0.48990268170589535, 0.4683144872592598, 0.45471244963042695, 0.43677465042354974, 0.41188406163691027, 0.4001977644214194, 0.3936999420314464, 0.3752603200109895, 0.36445987561532867, 0.35383833650553215, 0.3517674227723545, 0.3478424004819714, 0.32975589776744524, 0.32561085729503897, 0.3092670180046201, 0.30883040243230553, 0.31107929625279396, 0.2916880660816946, 0.29087002101654325, 0.27673360369996214], "accuracy": [0.3053757846355438, 0.5893540978431702, 0.6909258961677551, 0.7279091477394104, 0.7544577717781067, 0.7751948237419128, 0.7954035401344299, 0.8104609847068787, 0.8187822103500366, 0.8260467648506165, 0.8321225643157959, 0.8413683772087097, 0.8520671129226685, 0.8537842035293579, 0.8569541573524475, 0.8615770936012268, 0.8636903762817383, 0.8661999702453613, 0.86553955078125, 0.871879518032074, 0.8772949576377869, 0.8815215826034546, 0.8823140859603882, 0.8812574148178101, 0.8848236799240112, 0.8861445188522339, 0.8903711438179016, 0.8936732411384583], "val_loss": [1.0205497741699219, 0.6756315401622227, 0.5801311390740531, 0.5251239027295794, 0.5066466842378888, 0.46321516377585276, 0.42637932300567627, 0.4071175115449088, 0.3850045119013105, 0.3761887976101467, 0.36690016303743633, 0.35826739243098665, 0.34895494154521395, 0.33632893221718924, 0.3345712423324585, 0.32275281633649555, 0.3186421649796622, 0.3156660199165344, 0.3157398360116141, 0.3134995869227818, 0.3029874392918178, 0.30471611874444143, 0.30700285945619854, 0.30269198758261545, 0.30321602310453144, 0.29881296839032856, 0.2995459181921823, 0.29953921692711966], "val_accuracy": [0.612333357334137, 0.7103333473205566, 0.7440000176429749, 0.7636666893959045, 0.765999972820282, 0.7946666479110718, 0.8069999814033508, 0.8196666836738586, 0.8253333568572998, 0.8349999785423279, 0.8393333554267883, 0.8420000076293945, 0.8479999899864197, 0.8543333411216736, 0.8526666760444641, 0.8569999933242798, 0.8546666502952576, 0.8560000061988831, 0.8616666793823242, 0.862333357334137, 0.8669999837875366, 0.8700000047683716, 0.8723333477973938, 0.8666666746139526, 0.8703333139419556, 0.8673333525657654, 0.8646666407585144, 0.8703333139419556]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 3, 0, 2, 9, 1, 0, 0, 3, 5, 2, 8, 4, 1], [2, 1, 2, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 40, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8428571224212646, "mapping_values": [1, 13, 13, 9, 4, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.negative(alpha))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.052802960209134, 1.1578885309684546, 0.818659911396922, 0.7145349360129554, 0.6466449164223158, 0.5929885179831792, 0.5584342997339596, 0.5292343935867609, 0.49546950442632587, 0.4685258335834796, 0.4599194370909862, 0.43995205947216304, 0.42313367431079707, 0.4134530994941246, 0.3979811893753671, 0.3798382461204851, 0.3674982996617389, 0.35740307849695213, 0.35019085692172164, 0.34639373945601, 0.33008106087318834, 0.31993427480988107, 0.312510525596896, 0.30946124546705156, 0.3098381648974065, 0.2883334404300185, 0.28734579009229416], "accuracy": [0.3055078685283661, 0.5939770340919495, 0.6947563290596008, 0.7309470176696777, 0.7559106945991516, 0.7759873270988464, 0.7923656105995178, 0.8047813773155212, 0.8157442808151245, 0.8256505131721497, 0.830669641494751, 0.8378021121025085, 0.8417646288871765, 0.8492933511734009, 0.852859616279602, 0.8597279191017151, 0.863558292388916, 0.8714832663536072, 0.8687095642089844, 0.8720116019248962, 0.878351628780365, 0.8820499181747437, 0.8862766027450562, 0.8813894987106323, 0.8864086866378784, 0.8903711438179016, 0.8903711438179016], "val_loss": [1.0185908590044295, 0.6763629232134137, 0.5805200849260602, 0.5211132764816284, 0.5074966635022845, 0.4646561656679426, 0.42996598141533987, 0.4155843257904053, 0.3898524897439139, 0.3830823302268982, 0.3701662676674979, 0.3634893298149109, 0.3522494520459856, 0.3481776458876474, 0.3396175929478237, 0.3252024735723223, 0.32224378415516447, 0.315786497933524, 0.31666839122772217, 0.31008513484682354, 0.30548449073519024, 0.3009917736053467, 0.31026478324617657, 0.3028233732495989, 0.30603677885872976, 0.2946100149835859, 0.30137678555079866], "val_accuracy": [0.6116666793823242, 0.7123333215713501, 0.7419999837875366, 0.7689999938011169, 0.7710000276565552, 0.7900000214576721, 0.8026666641235352, 0.8116666674613953, 0.8230000138282776, 0.8273333311080933, 0.8323333263397217, 0.8416666388511658, 0.8476666808128357, 0.8483333587646484, 0.8489999771118164, 0.8553333282470703, 0.8550000190734863, 0.8560000061988831, 0.862333357334137, 0.8640000224113464, 0.8669999837875366, 0.8713333606719971, 0.8703333139419556, 0.8676666617393494, 0.8686666488647461, 0.8703333139419556, 0.8700000047683716]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 0, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.052805864343302, 1.1575889173846408, 0.8179978291041438, 0.7143383126894339, 0.646470016444978, 0.5936991157328306, 0.5590656620006614, 0.5291041001911727, 0.49391018595236985, 0.47100624770000865, 0.45649719085943397, 0.44032659901131604, 0.42537712257661997, 0.41111084386625657, 0.3988881522535947, 0.3760636589073974, 0.3663653036535944, 0.3565590909451321, 0.3466114846077011, 0.34298463759562753, 0.32453272922431725, 0.3204565899026644, 0.3111308567819342, 0.3073969459875369, 0.31121712423523484, 0.28958272024262866, 0.28967651714777604], "accuracy": [0.3055078685283661, 0.5941091179847717, 0.6952846646308899, 0.7320036888122559, 0.7569673657417297, 0.7763835787773132, 0.7909126877784729, 0.805177628993988, 0.8152159452438354, 0.8232730031013489, 0.8309338092803955, 0.8380662798881531, 0.8424250483512878, 0.850350022315979, 0.8535200357437134, 0.8619733452796936, 0.8644828796386719, 0.8693699836730957, 0.8692378997802734, 0.8750495314598083, 0.8792761564254761, 0.8825782537460327, 0.8861445188522339, 0.8861445188522339, 0.8878615498542786, 0.8882578015327454, 0.8912957310676575], "val_loss": [1.0185584681374686, 0.6787086384637016, 0.580412779535566, 0.5211502994809832, 0.5086474418640137, 0.46378861154828754, 0.430191057068961, 0.41478806734085083, 0.38960689306259155, 0.3803606118474688, 0.3716864585876465, 0.36243016379220144, 0.35111438376562937, 0.34342288970947266, 0.3372772591454642, 0.32786858081817627, 0.3231570976121085, 0.316236002104623, 0.3171925800187247, 0.3047468066215515, 0.30250913756234304, 0.3031846455165318, 0.3085419365337917, 0.2996551649911063, 0.3047483648572649, 0.2944304772785732, 0.29931557178497314], "val_accuracy": [0.6116666793823242, 0.7133333086967468, 0.7409999966621399, 0.7689999938011169, 0.7696666717529297, 0.7910000085830688, 0.8003333210945129, 0.8116666674613953, 0.8259999752044678, 0.8343333601951599, 0.8320000171661377, 0.843999981880188, 0.8483333587646484, 0.8500000238418579, 0.8489999771118164, 0.8560000061988831, 0.856333315372467, 0.8573333621025085, 0.8606666922569275, 0.8663333058357239, 0.8706666827201843, 0.8726666569709778, 0.8713333606719971, 0.8726666569709778, 0.8713333606719971, 0.8669999837875366, 0.871999979019165]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [5, 3, 0, 2, 4, 1, 0, 5, 0, 5, 2, 8, 4, 1], [2, 1, 1, 0, 0, 0, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8382856845855713, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.05280296696396, 1.157888266884687, 0.8185385390043479, 0.7144508410312591, 0.646277795496429, 0.5925601827800707, 0.5583852234612272, 0.529880905199391, 0.49432507117174684, 0.4701547908068113, 0.4578875965721587, 0.4412845063478782, 0.4249985377038427, 0.415434934943816, 0.40086387706596494, 0.3810794545383564, 0.3709684669648683, 0.3596363929772594, 0.3531877102357144, 0.3473053031420553, 0.3268455732862286, 0.3236972039811222, 0.31644936539887153, 0.307496387212819, 0.30668909267317335, 0.28713842336811235, 0.2832220924914615], "accuracy": [0.3055078685283661, 0.5938449501991272, 0.694360077381134, 0.7316074371337891, 0.7567031979560852, 0.7759873270988464, 0.7918372750282288, 0.8062343001365662, 0.8161405324935913, 0.822348415851593, 0.830669641494751, 0.8378021121025085, 0.8408400416374207, 0.8481045961380005, 0.8541803956031799, 0.8577466607093811, 0.8597279191017151, 0.8679170608520508, 0.8679170608520508, 0.8749174475669861, 0.8779553771018982, 0.8805969953536987, 0.885219931602478, 0.8840311765670776, 0.885219931602478, 0.8877294659614563, 0.8936732411384583], "val_loss": [1.0185913699013847, 0.6763291869844709, 0.5804479462759835, 0.521226303918021, 0.5069291080747332, 0.4645964929035732, 0.42959076166152954, 0.4153214693069458, 0.39001855679920744, 0.38057793038231985, 0.3700301391737802, 0.3659628118787493, 0.3542041523115976, 0.3502179299082075, 0.3412462132317679, 0.32992773396628244, 0.32531669310161043, 0.3188985756465367, 0.3156790477888925, 0.31085861580712454, 0.30497749362673077, 0.30533761637551443, 0.30598385844911846, 0.30346653291157316, 0.3006624834878104, 0.29548862150737215, 0.2968874658857073], "val_accuracy": [0.6116666793823242, 0.7120000123977661, 0.7416666746139526, 0.7689999938011169, 0.7713333368301392, 0.7913333177566528, 0.8023333549499512, 0.8109999895095825, 0.8226666450500488, 0.8333333134651184, 0.8360000252723694, 0.8376666903495789, 0.8426666855812073, 0.843999981880188, 0.8516666889190674, 0.8553333282470703, 0.8536666631698608, 0.8553333282470703, 0.8610000014305115, 0.8629999756813049, 0.8693333268165588, 0.8713333606719971, 0.8676666617393494, 0.8679999709129333, 0.8696666955947876, 0.8700000047683716, 0.8676666617393494]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1, 9, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [61, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 26, 26, 16, 10, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), alpha)))))))))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.051882579090132, 1.172993224452216, 0.825489740975702, 0.7205951032999437, 0.6484973853794245, 0.5929978290852491, 0.5543026856348862, 0.5239976511505758, 0.48964422174401334, 0.4683333779480385, 0.4549363781007337, 0.43741400673121444, 0.41702114647295435, 0.40238134280140403, 0.39499612649544247, 0.3743374411495465, 0.36200434014766036, 0.35293230743471815, 0.3496991255224782, 0.3469357388390526, 0.32884793961131575, 0.3278639861747274, 0.3150781641121727, 0.3136644762591474, 0.3153513148161304, 0.29586756665551384], "accuracy": [0.3053757846355438, 0.5893540978431702, 0.6917183995246887, 0.7281733155250549, 0.7549861073493958, 0.7745344042778015, 0.7942147850990295, 0.8087438941001892, 0.8187822103500366, 0.8267071843147278, 0.8293488025665283, 0.8383304476737976, 0.847840428352356, 0.8537842035293579, 0.8560295701026917, 0.8593316674232483, 0.86553955078125, 0.8687095642089844, 0.8677849769592285, 0.8732003569602966, 0.8792761564254761, 0.8779553771018982, 0.8833707571029663, 0.8809932470321655, 0.885219931602478, 0.8850878477096558], "val_loss": [1.020566463470459, 0.6758060795920235, 0.5801362310137067, 0.5246353660311017, 0.5071770804268974, 0.4620568922587803, 0.42688398701804026, 0.40875723532267977, 0.38478513274874004, 0.37698251008987427, 0.3673143982887268, 0.3578842111996242, 0.35043613399778095, 0.33888799803597586, 0.334497332572937, 0.3209780199187143, 0.31780567339488436, 0.31641379424503874, 0.31744236605507986, 0.30807903834751676, 0.30376915420804707, 0.30463723625455585, 0.3098500796726772, 0.3091603858130319, 0.3068815214293344, 0.30282942737851826], "val_accuracy": [0.612333357334137, 0.7093333601951599, 0.7436666488647461, 0.7649999856948853, 0.765333354473114, 0.7960000038146973, 0.8059999942779541, 0.8193333148956299, 0.8263333439826965, 0.8316666483879089, 0.8396666646003723, 0.840666651725769, 0.8483333587646484, 0.8566666841506958, 0.8523333072662354, 0.8576666712760925, 0.859000027179718, 0.8576666712760925, 0.8616666793823242, 0.8650000095367432, 0.8690000176429749, 0.8669999837875366, 0.8676666617393494, 0.8636666536331177, 0.8673333525657654, 0.8653333187103271]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 0, 2, 4, 1, 0, 5, 0, 5, 2, 8, 4, 1], [1, 1, 1, 0, 0, 0, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 5, 3, 3, 0], [3, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7234285473823547, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022756311698536, 2.300480285986398, 2.3001604961949003, 2.2935529558524133, 2.288738156889156, 2.2801785045500838, 2.2705641868895134, 2.26196598798812, 2.2477482152794486, 2.2302324317780466, 2.2104101379738665, 2.171620466642691, 2.139507859122594, 2.0710966708307113, 1.987786842642711, 1.898070678435706, 1.7763910322235938, 1.665535428205643, 1.6448601306059483, 1.5400019715002673, 1.46968853387063, 1.3600293728874155, 1.312604497515404, 1.2584575656508694, 1.183780625181081, 1.1392277008065963, 1.1044815220868724, 1.0568469595506034, 1.0472190398991053, 1.0200098138585492, 0.9943689904303016, 0.9618242829624751, 0.9558022292991435, 0.9311157860350946, 0.9343631356194854, 0.9044031401225967, 0.8946719063255749, 0.890721148346173, 0.8757568660854365, 0.8715514345900289, 0.8642292201810304, 133.00040155873558, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09074098616838455, 0.09813763201236725, 0.10830801725387573, 0.12138422578573227, 0.1438383311033249, 0.16880200803279877, 0.19191652536392212, 0.21159687638282776, 0.2339189052581787, 0.25320300459861755, 0.2747325301170349, 0.2786950170993805, 0.3066965937614441, 0.3245278000831604, 0.3501518964767456, 0.38409721851348877, 0.40985339879989624, 0.4235900044441223, 0.4756307005882263, 0.4931977391242981, 0.5255580544471741, 0.5396909117698669, 0.5589750409126282, 0.5754854083061218, 0.5908070206642151, 0.5980715751647949, 0.6091665625572205, 0.6232994198799133, 0.6186765432357788, 0.6302998065948486, 0.6431118845939636, 0.6452252268791199, 0.6568484902381897, 0.6573768258094788, 0.6695284843444824, 0.666358470916748, 0.6692643165588379, 0.6750759482383728, 0.6742834448814392, 0.6748117804527283, 0.6762647032737732, 0.23973055183887482, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9702681132725306, 1.9682279314313615, 1.964857510157994, 1.9600746291024345, 1.9537671634129115, 1.945852824619838, 1.9360948971339635, 1.9243251936776298, 1.9096668107169015, 1.8896423067365373, 1.8596876008169991, 1.8183745656694685, 1.764531135559082, 1.6790992532457625, 1.5517592770712716, 1.38564167703901, 1.1864497320992606, 1.054957696369716, 0.974062306540353, 0.8921798978533063, 0.8496179069791522, 0.8032639707837786, 0.7946303571973529, 0.7684651953833443, 0.7590199708938599, 0.7522694042750767, 0.7289849860327584, 0.7160918882914952, 0.7044830322265625, 0.6961554459163121, 0.6907613107136318, 0.6865415743419102, 0.6812348536082676, 0.6733861650739398, 0.6604479210717338, 0.6460339341844831, 0.6369926248277936, 0.6325405154909406, 0.6286936828068325, 0.6208589247294835, 0.6148776156561715, 6.072732652936663, NaN, NaN, NaN, NaN], "val_accuracy": [0.041999999433755875, 0.054666668176651, 0.07533333450555801, 0.11400000005960464, 0.17733334004878998, 0.2473333328962326, 0.2980000078678131, 0.3216666579246521, 0.34299999475479126, 0.37033334374427795, 0.3959999978542328, 0.41866666078567505, 0.42899999022483826, 0.4440000057220459, 0.4763333201408386, 0.5289999842643738, 0.5899999737739563, 0.606333315372467, 0.6146666407585144, 0.6159999966621399, 0.6456666588783264, 0.6786666512489319, 0.6743333339691162, 0.6846666932106018, 0.6746666431427002, 0.6819999814033508, 0.6986666917800903, 0.7020000219345093, 0.7049999833106995, 0.7046666741371155, 0.7043333053588867, 0.7073333263397217, 0.7123333215713501, 0.718999981880188, 0.7283333539962769, 0.734333336353302, 0.7360000014305115, 0.7353333234786987, 0.7329999804496765, 0.7333333492279053, 0.7416666746139526, 0.40933331847190857, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 1, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [205343.85457029406, 31032403.367586844, 529084746.8625016, 3768009443.292564, 16516102366.355831, 53934465708.92088], "accuracy": [0.10342095047235489, 0.10130762308835983, 0.09853387624025345, 0.09893012791872025, 0.10289261490106583, 0.10276053100824356], "val_loss": [1714995.892857143, 92149830.85714285, 988967021.7142857, 5392284818.285714, 20201027291.42857, 59594218349.71429], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [47, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 12, 10, 7, 3, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.464141470833918, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10.262694495064872, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 2, 7, 7, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 1, 2, 0, 2, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2430898.628016086, 3104446987.8515387, 190029332280.90768, 3395011010935.4624, 30271152117205.734, 176960977808325.44], "accuracy": [0.10328886657953262, 0.10130762308835983, 0.09853387624025345, 0.09893012791872025, 0.10289261490106583, 0.10276053100824356], "val_loss": [39124587.428571425, 15364787638.857143, 539578147986.2857, 6865431672539.429, 49760630659949.71, 252048986154130.28], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 0, 2, 6, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027998172942405, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 3, 0, 2, 4, 1, 0, 0, 3, 9, 2, 8, 4, 1], [1, 2, 2, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [61, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), grad)), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 0, 2, 1, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [61, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [0, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [35968969.102463275, 5469362027.45846, 93273024955.90015, 664154265019.7649, 2910626564867.7534, 9503322572903.062], "accuracy": [0.10328886657953262, 0.10130762308835983, 0.09853387624025345, 0.09893012791872025, 0.10289261490106583, 0.10276053100824356], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 0, 2, 1, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [61, 96, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0722857117652893, "mapping_values": [1, 16, 16, 10, 6, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3014585752024894, 2.2988350766446093, 2.3014425626441612, 2.3023606699849197, 2.302521811531771, 2.3026724211874576, 2.302892350848199, 2.3032607348556327, 2.3036550188801463, 2.3040819239260544], "accuracy": [0.09668471664190292, 0.09800554811954498, 0.09245806187391281, 0.08942015469074249, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9689263616289412, 1.9706366402762276, 1.9729157175336565, 1.9735339709690638, 1.9736806324550085, 1.9738562447684151, 1.9740851266043526, 1.974350929260254, 1.9746592385428292, 1.9751318522862025], "val_accuracy": [0.0729999989271164, 0.0860000029206276, 0.0676666647195816, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 1, 0, 2, 4, 1, 0, 0, 0, 5, 2, 8, 4, 1], [1, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [87, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.058571428060531616, "mapping_values": [1, 9, 9, 5, 4, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3021035526312414, 2.301089205935237, 2.30262425698152, 2.3003613029598893, 2.3009728271223375, 2.300375891997751, 2.3003823094600384, 2.3011542192271923, 2.301025576799962, 2.3003362592783554, 2.3011165584445297, 2.301408456757777, 2.30147231174671, 2.3018851610868203], "accuracy": [0.09509972482919693, 0.09034473448991776, 0.09126931428909302, 0.09047681838274002, 0.09192973375320435, 0.09470347315073013, 0.09509972482919693, 0.09668471664190292, 0.09576013684272766, 0.09906221181154251, 0.08796724677085876, 0.09219389408826828, 0.09959053993225098, 0.08770307898521423], "val_loss": [1.9705497877938407, 1.9702471324375697, 1.9700205666678292, 1.9701485633850098, 1.9702298300606864, 1.970498493739537, 1.9706769670758928, 1.9706367765154158, 1.970633098057338, 1.9708196095057897, 1.971109254019601, 1.971393312726702, 1.9715959003993444, 1.9717899050031389], "val_accuracy": [0.043666668236255646, 0.049666665494441986, 0.054999999701976776, 0.05666666850447655, 0.06199999898672104, 0.06433333456516266, 0.06400000303983688, 0.07100000232458115, 0.07199999690055847, 0.07199999690055847, 0.070333331823349, 0.0689999982714653, 0.06866666674613953, 0.0663333311676979]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 4, 2, 1, 1, 0, 0, 3, 5, 2, 8, 4, 1], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [61, 96, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302479892973068, 2.3020265498858525, 2.3044028598335458, 2.302075121081847, 2.3029360557670024, 2.3017326058838834], "accuracy": [0.09496764093637466, 0.08691058307886124, 0.08889182657003403, 0.08849557489156723, 0.0874389111995697, 0.09074098616838455], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]