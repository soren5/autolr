[{"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.847428560256958, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0613765043746906, 1.110311016123513, 0.7972100308196199, 0.7021391450012554, 0.6678682995384175, 0.6075571972885152, 0.5653274345549106, 0.5328342510275853, 0.49952878208523177, 0.47674562346980937, 0.4574190312294109, 0.43904516442954783, 0.42405050928015453, 0.4052197631985331, 0.40243028862254965, 0.3933500519100827, 0.38219552581115973, 0.3668759136372522, 0.3582435193913346, 0.35573670278687, 0.34448222598111894, 0.3393790900053806, 0.3174261819448737, 0.3076605085470988, 0.29730558363894716, 0.28888484583696467, 0.27899906584032774, 0.27534386913978887, 0.2713737224724787, 0.26802914669453554, 0.26145546898991756, 0.25092372752498754, 0.24775542761466726, 0.23400577420981145, 0.23562037922159523, 0.22940816913204046, 0.22503018857284607, 0.22060892516713904, 0.20898119731113785, 0.20285243948319048, 0.20268348935785357, 0.19787905422010915, 0.1928424871281988, 0.19325734938667938, 0.19062070404462936, 0.18565546407195413, 0.17903110792749924, 0.18650601716475196, 0.18243560183553678, 0.17360804488102774, 0.1593329981156407, 0.1615763893020057, 0.15595544030118091, 0.15268344579237705, 0.14741315674457442, 0.14357951694609639, 0.1519378178434727, 0.1489872179896903], "accuracy": [0.30445119738578796, 0.6020340919494629, 0.7080966830253601, 0.7339849472045898, 0.748249888420105, 0.7700436115264893, 0.7872143983840942, 0.802271842956543, 0.8128384351730347, 0.8228767514228821, 0.8317263126373291, 0.8425571322441101, 0.8474441766738892, 0.8515387773513794, 0.8525954484939575, 0.8555012345314026, 0.8602562546730042, 0.8647470474243164, 0.8652753829956055, 0.8693699836730957, 0.8741249442100525, 0.8762382864952087, 0.8805969953536987, 0.884691596031189, 0.8889182209968567, 0.8908994793891907, 0.894069492816925, 0.896446943283081, 0.8963148593902588, 0.8977677822113037, 0.898428201675415, 0.9035794734954834, 0.9060890078544617, 0.9113723635673523, 0.9124290347099304, 0.9104477763175964, 0.9121648669242859, 0.9137498140335083, 0.9206181764602661, 0.9199577569961548, 0.9194294214248657, 0.9227314591407776, 0.925901472568512, 0.925901472568512, 0.9252410531044006, 0.9269581437110901, 0.9293355941772461, 0.924448549747467, 0.9290714859962463, 0.9306564331054688, 0.9356756210327148, 0.9344868659973145, 0.9385814070701599, 0.9424118399620056, 0.9418835043907166, 0.9428080916404724, 0.9413551688194275, 0.9405626654624939], "val_loss": [0.94154463495527, 0.6554656709943499, 0.5577086721147809, 0.5241138253893171, 0.4975502831595285, 0.4634962592806135, 0.4377284731183733, 0.41631039551326204, 0.3908961755888803, 0.3833394391196115, 0.3687673125948225, 0.35755943400519236, 0.349614075251988, 0.3401267187935965, 0.35131445952824186, 0.33505130665642874, 0.3280800240380423, 0.3239305445126125, 0.3202945419720241, 0.3178227288382394, 0.3244364176477705, 0.3091870205742972, 0.3072636978966849, 0.298111583505358, 0.2956459862845285, 0.2977691463061741, 0.2968253919056484, 0.2938366447176252, 0.28845737661634174, 0.2956038883754185, 0.2821882111685617, 0.2966556293623788, 0.28888289417539326, 0.2963246873446873, 0.28421338966914583, 0.29056074789592196, 0.30000355413981844, 0.28800234624317717, 0.28629747458866667, 0.2982556564467294, 0.2946587971278599, 0.297497604574476, 0.28554214750017437, 0.2905234694480896, 0.29040334054401945, 0.3075135520526341, 0.31983780009405954, 0.29643531356539043, 0.30994013377598356, 0.3007303306034633, 0.31222660200936453, 0.30660824264798847, 0.31405445507594515, 0.31679881470543997, 0.31149900811059134, 0.31005761453083586, 0.31674669470105854, 0.34709541286740986], "val_accuracy": [0.6446666717529297, 0.7203333377838135, 0.7450000047683716, 0.7630000114440918, 0.7766666412353516, 0.7940000295639038, 0.8019999861717224, 0.8180000185966492, 0.828000009059906, 0.8289999961853027, 0.8399999737739563, 0.843999981880188, 0.8473333120346069, 0.8513333201408386, 0.8446666598320007, 0.8516666889190674, 0.8603333234786987, 0.859666645526886, 0.8573333621025085, 0.8576666712760925, 0.8529999852180481, 0.8606666922569275, 0.8616666793823242, 0.8693333268165588, 0.8686666488647461, 0.8656666874885559, 0.8683333396911621, 0.8696666955947876, 0.8730000257492065, 0.8706666827201843, 0.8736666440963745, 0.871666669845581, 0.875333309173584, 0.8726666569709778, 0.8766666650772095, 0.8790000081062317, 0.8773333430290222, 0.8806666731834412, 0.8786666393280029, 0.8803333044052124, 0.878000020980835, 0.8836666941642761, 0.8870000243186951, 0.8866666555404663, 0.8859999775886536, 0.8840000033378601, 0.8786666393280029, 0.887666642665863, 0.8813333511352539, 0.887666642665863, 0.8823333382606506, 0.8856666684150696, 0.8883333206176758, 0.8859999775886536, 0.8856666684150696, 0.8830000162124634, 0.8836666941642761, 0.8866666555404663]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 3, 2, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8408571481704712, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0594906435824027, 1.09368619570375, 0.7909339203212271, 0.6957972769204416, 0.6630777924792358, 0.6047266462003204, 0.5677241137188029, 0.5315835873653325, 0.5000664362810102, 0.47811404089051596, 0.4631188855809212, 0.4420130005318648, 0.42967328898832075, 0.4151932977217693, 0.4114083368559996, 0.39788345050392937, 0.3816827457137883, 0.37120114950030914, 0.36222876943160737, 0.35479043040135755, 0.35204952127425554, 0.3418310098108945, 0.3214307524752954, 0.3085527079940834, 0.3002822723457637, 0.29207196254236445, 0.2896774748765624, 0.2782049699938765, 0.2750867022389135, 0.268272514159669, 0.2673753945031706, 0.26004819369051574, 0.25041487393181133, 0.24295598927655507, 0.24270562972052223, 0.23528383583865697, 0.22559010863831613, 0.22617669941655963, 0.21928441305839783, 0.21003040962640587, 0.20165749169367495, 0.20400700368712435, 0.1983886652729058, 0.19665321949812808, 0.19837580532477186, 0.18235817485284875, 0.18191327647077346], "accuracy": [0.30484744906425476, 0.6058644652366638, 0.7091533541679382, 0.7384757399559021, 0.7539294958114624, 0.7736098170280457, 0.7905164361000061, 0.804649293422699, 0.8124422430992126, 0.8216879963874817, 0.8301413059234619, 0.8378021121025085, 0.8466516733169556, 0.8475762605667114, 0.852859616279602, 0.8535200357437134, 0.8631620407104492, 0.8617091774940491, 0.8650112152099609, 0.8692378997802734, 0.8735966086387634, 0.8750495314598083, 0.8784837126731873, 0.8879936337471008, 0.8862766027450562, 0.8887861371040344, 0.8923524022102356, 0.8994848728179932, 0.8975036144256592, 0.8969752788543701, 0.8988244533538818, 0.9009377956390381, 0.9050323367118835, 0.9045040011405945, 0.9059569239616394, 0.9124290347099304, 0.9145423173904419, 0.9103156924247742, 0.9140139818191528, 0.9177123308181763, 0.9222031235694885, 0.9203540086746216, 0.9214106202125549, 0.9233918786048889, 0.9237881302833557, 0.925901472568512, 0.9277506470680237], "val_loss": [0.9312035696847099, 0.6542739697865078, 0.5528150796890259, 0.5280652727399554, 0.5076339415141514, 0.45971737589154926, 0.4348602976117815, 0.4202903083392552, 0.39235986130578177, 0.38668533733912874, 0.3732038140296936, 0.35920108216149466, 0.3547229937144688, 0.34024148327963694, 0.34230544737407137, 0.3383119021143232, 0.33176531961985994, 0.32051926851272583, 0.3222359674317496, 0.31456054959978375, 0.31896077735083445, 0.307299656527383, 0.3031785232680185, 0.30396132809775217, 0.30172028711863924, 0.2947623133659363, 0.30210172278540476, 0.29047010626111713, 0.2880250556128366, 0.30288273096084595, 0.2860542706080845, 0.2976602145603725, 0.2894930498940604, 0.2930568541799273, 0.28234014340809416, 0.28845531599862234, 0.2982596073831831, 0.2863099915640695, 0.2913661684308733, 0.296721202986581, 0.30237346036093576, 0.28802318232400076, 0.2857203313282558, 0.29028297322137014, 0.2891355838094439, 0.3021912319319589, 0.31135134186063496], "val_accuracy": [0.6420000195503235, 0.7206666469573975, 0.7476666569709778, 0.7663333415985107, 0.7723333239555359, 0.7913333177566528, 0.8036666512489319, 0.812333345413208, 0.8276666402816772, 0.8233333230018616, 0.8426666855812073, 0.8416666388511658, 0.8413333296775818, 0.8510000109672546, 0.8460000157356262, 0.8550000190734863, 0.8556666374206543, 0.8579999804496765, 0.862333357334137, 0.8613333106040955, 0.8553333282470703, 0.8613333106040955, 0.862666666507721, 0.8633333444595337, 0.8686666488647461, 0.871666669845581, 0.8666666746139526, 0.8706666827201843, 0.8726666569709778, 0.8703333139419556, 0.875, 0.8693333268165588, 0.8726666569709778, 0.8773333430290222, 0.8776666522026062, 0.8776666522026062, 0.8756666779518127, 0.8786666393280029, 0.8796666860580444, 0.8763333559036255, 0.8793333172798157, 0.8866666555404663, 0.8859999775886536, 0.8830000162124634, 0.8863333463668823, 0.8826666474342346, 0.8776666522026062]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 3, 1, 3, 0], [89, 92, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 0], [0, 4, 5, 2, 9], [2, 2, 2], [6, 32, 85]], "fitness": -0.12228571623563766, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.1235671796346494, 2.256922528224457, 9982360216.961056, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.186104878783226, 0.1795007288455963, 0.15678246319293976, 0.10381719470024109, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.001863479614258, 1.8612464496067591, 6.9275156995952156e+25, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.210999995470047, 0.2123333364725113, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 3, 7, 0, 1, 5, 2, 8, 2, 1, 7, 3, 7, 2, 6], [0, 3, 1, 3, 0], [89, 92, 6], [0, 0, 1, 1, 0, 1, 1], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [50829398224.90618, 7630978963936.147, 130951693214437.19, 944934046978295.2, 4134428251719701.0, 1.346379931339284e+16], "accuracy": [0.09906221181154251, 0.10170386731624603, 0.09787346422672272, 0.09721305221319199, 0.09959053993225098, 0.10408136248588562], "val_loss": [423762938148.5714, 22844712943616.0, 245195292091538.28, 1336804851131538.2, 5008167936945591.0, 1.4770746558962542e+16], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 8, 4, 0, 1, 9, 3], [4, 1, 4, 5, 2], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [9, 3, 7, 6, 4, 9, 3, 3, 4, 9], [3, 2, 4, 3, 0], [36, 55, 1], [1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [9, 3, 7, 5, 1, 9, 1, 1, 4, 9], [3, 3, 3, 3, 0], [30, 61, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9, 3, 9], [0, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [1236723091.097698, 23556619254.667545, 109975110108.09035, 310491879053.6774, 663441053853.705, 1202714698666.1145], "accuracy": [0.09906221181154251, 0.10170386731624603, 0.09787346422672272, 0.09708096832036972, 0.09972262382507324, 0.10394927859306335], "val_loss": [4657283364.571428, 37247155053.71429, 125696353426.28572, 297935203766.8571, 581887346980.5714, 1005477279451.4286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 55, 6], [0, 1, 0], [0], [8], [3], [64], [0, 0, 1, 1, 1], [0, 4, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 1, 0, 1, 9], [3, 0, 3, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 1, 1, 1], [0, 4, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 5], [4, 3, 1, 3, 0], [89, 92, 6], [0, 0, 1, 1, 0, 1, 1], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 2, 2], [20, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [6, 3, 7, 0, 1, 5, 5, 5, 1, 5, 2], [3, 3, 4, 3, 3, 3, 3], [89, 92, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1, 0, 1, 0], [0, 7, 2, 2, 9, 3, 9], [2, 3, 2], [20, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 11, 7, 0, 1, 0, 0, 0, 0, 8, 5, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad)))))), grad)))), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.add(beta, sigma), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [6, 3, 1, 0, 1, 9], [3, 4, 1, 5, 0, 2], [20, 55, 6], [1, 1, 0], [0, 0, 0], [8, 3], [3], [64], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [1, 3, 5, 2, 9, 2, 8, 7, 0], [2, 0, 2, 0, 0], [6, 32, 85, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 14, 9, 5, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [164451366.6748912, 2.6784624904453196, 2.416852924345412, 2.359282998833375, 2.3405408006475867, 2.317195092587817, 2.307632298911048, 2.3049811698410725, 2.305967915909968], "accuracy": [0.09840179979801178, 0.10527011007070541, 0.10196803510189056, 0.0948355570435524, 0.10011887550354004, 0.10011887550354004, 0.0948355570435524, 0.09932637959718704, 0.10170386731624603], "val_loss": [2.3469435146876743, 2.192046982901437, 2.1158875056675504, 2.0127314840044295, 1.974968569619315, 1.9758452687944685, 1.9772508484976632, 1.9770686967032296, 1.9748564447675432], "val_accuracy": [0.09833333641290665, 0.1003333330154419, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 3, 7, 0, 1, 5, 2, 8, 2, 1, 7, 3, 7, 2, 6], [3, 0, 3, 5, 3, 2, 1, 3, 0, 1, 5, 1], [36, 55, 6, 11], [0, 0, 1, 1, 0, 1, 1], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 3, 7, 0, 1, 5, 2, 8, 2, 1, 7, 3, 7, 2, 6], [4, 3, 1, 3, 3], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [6, 8, 7, 0, 1, 9], [3, 0, 3, 5, 3, 2, 1, 3, 0, 1, 5, 1], [17, 55, 6, 11], [0, 0, 1, 1, 0, 1, 1], [1], [8], [1], [64], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 3, 7, 0, 1, 5, 2, 8, 2, 1, 7, 3, 7, 2, 6], [4, 0, 0, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1, 0, 0, 1], [4, 7, 5, 7, 9, 3, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.308426377134332, 2.3319685430480126, 2.3473703821557876, 2.385934250276984, 2.3967137618890577, 2.4002202910958754, 2.4164770375688738, 2.4098493133663834, 2.4694521194120926, 2.523060169517246, 2.543598164184423], "accuracy": [0.09866596013307571, 0.10130762308835983, 0.10421344637870789, 0.09813763201236725, 0.10276053100824356, 0.09840179979801178, 0.1018359512090683, 0.10421344637870789, 0.09813763201236725, 0.09945846349000931, 0.1010434553027153], "val_loss": [2.002852167401995, 2.0111745425633023, 2.0629737036568776, 2.0832862854003906, 2.119706153869629, 2.103634698050363, 2.0932794298444475, 2.1647827284676686, 2.2025131498064314, 2.2788592747279575, 2.229381697518485], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [9, 5, 7, 0, 1, 9], [4, 0, 4, 5, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302332584899824, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 5, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [20, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025360017042624, 2.302827140170475, 2.303080407179043, 2.3028064389128677, 2.3028596894867968, 2.3029818231592465, 2.303002010766683], "accuracy": [0.0952318087220192, 0.09668471664190292, 0.09166556596755981, 0.09417514503002167, 0.09787346422672272, 0.09285431355237961, 0.09153348207473755], "val_loss": [1.9736692564828056, 1.9736527715410506, 1.9736470494951521, 1.9736527715410506, 1.9736436435154505, 1.9736648968287878, 1.9736718450273787], "val_accuracy": [0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [5, 5, 0, 0, 1, 9], [4, 0, 4, 5, 0], [36, 55, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 0, 1, 0, 1, 0], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.0357142873108387, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3009100678952428, 2.3025917944859646, 2.3024711822710806, 2.3047918206460407, 2.304219957985788, 2.305091584410571], "accuracy": [0.09377889335155487, 0.09140139818191528, 0.09325055778026581, 0.08519349992275238, 0.08625016361474991, 0.08057060092687607], "val_loss": [1.971085480281285, 1.9713713782174247, 1.9718377249581474, 1.9725840432303292, 1.9734254564557756, 1.974215371268136], "val_accuracy": [0.03633333370089531, 0.032999999821186066, 0.029999999329447746, 0.026333333924412727, 0.02866666577756405, 0.03466666489839554]}}]