[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8500000238418579, "mapping_values": [1, 9, 9, 4, 5, 3, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0321496299638597, 1.1121025860522165, 0.7976180208892933, 0.7013864537366172, 0.6438548036412698, 0.5970935970564497, 0.5587740416114891, 0.5270233386464485, 0.5030996024474775, 0.4777895454496929, 0.46325031675525297, 0.4333553702532733, 0.41287451170029627, 0.4086277981900961, 0.38334220896984655, 0.37101031162987264, 0.3673736001356891, 0.3586742114184665, 0.3463061697541951, 0.344345233483227, 0.32261082695743204, 0.32049879105005125, 0.30938836366918343, 0.2983273075257058, 0.303379776912075, 0.29189536806032124, 0.2816238508224802, 0.26620691653531475, 0.2595682727654439, 0.25749794008111154, 0.24925747955432737, 0.23899689071316366, 0.2441429046670664, 0.2308247755893611, 0.21922655190459142, 0.21595317108394008, 0.2111744912580618, 0.20375393977797876, 0.19913915453129094, 0.20260405415879926, 0.2051196808312563, 0.18824731034727743, 0.1848459633220031, 0.18938420995776648, 0.18032073289089043, 0.18454449374945628, 0.16891261623866521, 0.1681583708858509, 0.17407820309709013, 0.16496368286718607, 0.16231912066278015, 0.15780789251883962, 0.15053858935022082, 0.14791008920016746], "accuracy": [0.3131686747074127, 0.6078457236289978, 0.7074362635612488, 0.7338528633117676, 0.7600052952766418, 0.7791573405265808, 0.7936864495277405, 0.8043851256370544, 0.8162726163864136, 0.8240655064582825, 0.8321225643157959, 0.8466516733169556, 0.8520671129226685, 0.8520671129226685, 0.8594637513160706, 0.8609166741371155, 0.8610487580299377, 0.8692378997802734, 0.8754457831382751, 0.8730682730674744, 0.8802007436752319, 0.8794082403182983, 0.8833707571029663, 0.8848236799240112, 0.8882578015327454, 0.8881257176399231, 0.8952582478523254, 0.901862382888794, 0.9026548862457275, 0.9037115573883057, 0.9025228023529053, 0.908730685710907, 0.904768168926239, 0.9108440279960632, 0.9158631563186646, 0.9194294214248657, 0.9173160791397095, 0.9241843819618225, 0.9247127175331116, 0.9257693886756897, 0.9183727502822876, 0.9251089692115784, 0.927882730960846, 0.9262977242469788, 0.9315810203552246, 0.9290714859962463, 0.935279369354248, 0.936732292175293, 0.9329018592834473, 0.9388455748558044, 0.9348831176757812, 0.9364681243896484, 0.9409589171409607, 0.9412230849266052], "val_loss": [0.9068500655038017, 0.6392360925674438, 0.5691688401358468, 0.5172617605754307, 0.4817111151559012, 0.4686851842062814, 0.43350655691964285, 0.4132910200527736, 0.3999798127583095, 0.39028011901038034, 0.3722694090434483, 0.35076322725840975, 0.33859217166900635, 0.3374372294970921, 0.32760630335126606, 0.3341475895472935, 0.31715222767421175, 0.31859202895845684, 0.31530727658952984, 0.306416962827955, 0.311961259160723, 0.3008458614349365, 0.30067586047308786, 0.2987115638596671, 0.31183615752628874, 0.3038888233048575, 0.2902576582772391, 0.29249565090451923, 0.28958126476832796, 0.2896793229239328, 0.2857992393629892, 0.29736621039254324, 0.289127128464835, 0.29206263167517527, 0.2921195455959865, 0.293106096131461, 0.3004887274333409, 0.28827108655657085, 0.2945936492511204, 0.2949470281600952, 0.3135957717895508, 0.3015609894480024, 0.3026548794337681, 0.297323967729296, 0.3002916489328657, 0.2981711540903364, 0.29969944272722515, 0.31550462756838116, 0.28956552914210726, 0.308668851852417, 0.29670231682913645, 0.3097474234444754, 0.3077821731567383, 0.3076910206249782], "val_accuracy": [0.6309999823570251, 0.7110000252723694, 0.7326666712760925, 0.768666684627533, 0.7746666669845581, 0.7913333177566528, 0.8033333420753479, 0.8180000185966492, 0.8163333535194397, 0.8216666579246521, 0.8389999866485596, 0.8479999899864197, 0.8506666421890259, 0.859333336353302, 0.8566666841506958, 0.8523333072662354, 0.8586666584014893, 0.859666645526886, 0.8640000224113464, 0.8656666874885559, 0.8633333444595337, 0.8656666874885559, 0.8653333187103271, 0.8693333268165588, 0.8619999885559082, 0.8700000047683716, 0.875333309173584, 0.8756666779518127, 0.8776666522026062, 0.8769999742507935, 0.8809999823570251, 0.875333309173584, 0.8776666522026062, 0.8766666650772095, 0.8743333220481873, 0.8823333382606506, 0.8786666393280029, 0.8806666731834412, 0.8833333253860474, 0.8820000290870667, 0.875333309173584, 0.8843333125114441, 0.8816666603088379, 0.8849999904632568, 0.8823333382606506, 0.8843333125114441, 0.8866666555404663, 0.8793333172798157, 0.8893333077430725, 0.8893333077430725, 0.8883333206176758, 0.8889999985694885, 0.887666642665863, 0.887666642665863]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8442857265472412, "mapping_values": [1, 5, 5, 2, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0321494365931976, 1.112197954562425, 0.7976108945796928, 0.701032873134351, 0.6438868220818277, 0.5963446467370878, 0.5619167156301988, 0.5268201020336768, 0.503019547127084, 0.47803744036822887, 0.4620734806845547, 0.43451682789261786, 0.411027768032662, 0.4079373825645056, 0.37964190318127505, 0.3686603400740625, 0.3698269693394221, 0.35657187949916735, 0.3481495707947675, 0.3478603693299274, 0.32481152162874977, 0.32382836964278094, 0.31656692068117986, 0.2994739434006129, 0.30114380830881415, 0.29576057332649425, 0.2839710493019118, 0.2758697070080008, 0.26264599032366454, 0.2616033270697253, 0.2508348520555359, 0.23978429226559764, 0.23560439577475514, 0.23147814073236375, 0.2162453530053925, 0.21694758491131294, 0.21149097461159425, 0.20812816031817447, 0.2004204809551525, 0.19762625183608507, 0.20126377841256723, 0.1896599286350639, 0.18519222721400405, 0.18168483487548232, 0.17534461149434372, 0.18491447305304579, 0.1678128787917295, 0.16613208367611676, 0.17257719887183123], "accuracy": [0.3131686747074127, 0.607449471950531, 0.707040011882782, 0.7331924438476562, 0.759080708026886, 0.7775723338127136, 0.7903843522071838, 0.8047813773155212, 0.8137630224227905, 0.8228767514228821, 0.8297450542449951, 0.8437458872795105, 0.8540483713150024, 0.8512746095657349, 0.860652506351471, 0.8651432991027832, 0.8619733452796936, 0.8689737319946289, 0.8745211958885193, 0.8730682730674744, 0.8823140859603882, 0.8803328275680542, 0.8804649114608765, 0.887597382068634, 0.8881257176399231, 0.8858803510665894, 0.8939374089241028, 0.8942015767097473, 0.9013340473175049, 0.9010698795318604, 0.9046360850334167, 0.9120327830314636, 0.9068815112113953, 0.908730685710907, 0.9179764986038208, 0.9192973375320435, 0.9189010858535767, 0.9204860925674438, 0.9262977242469788, 0.9237881302833557, 0.9204860925674438, 0.9261656403541565, 0.9265618920326233, 0.9298639297485352, 0.9306564331054688, 0.9313168525695801, 0.9360718727111816, 0.9344868659973145, 0.9332981109619141], "val_loss": [0.9068465573447091, 0.640105026108878, 0.5696174928120205, 0.5177050999232701, 0.4800350325448172, 0.4744101422173636, 0.43429812363215853, 0.4167460118021284, 0.4000093255724226, 0.3908259528023856, 0.3719639352389744, 0.3501576440674918, 0.341672991003309, 0.3371822578566415, 0.32599158797945293, 0.327921918460301, 0.31491099085126606, 0.32136609724589754, 0.31121338265282766, 0.30338999203273226, 0.3114136372293745, 0.2991495302745274, 0.2985917925834656, 0.3015419670513698, 0.31095319986343384, 0.29792386293411255, 0.2891292827469962, 0.29428872891834806, 0.29330423900059294, 0.29950069529669626, 0.2803997652871268, 0.29862728289195467, 0.2902043717248099, 0.28278160095214844, 0.2914203575679234, 0.287590103490012, 0.29911654336111887, 0.2860174093927656, 0.2934366209166391, 0.2889673284121922, 0.314590539251055, 0.29348710605076384, 0.29490022148404804, 0.29381433555058073, 0.3030863489423479, 0.30155405827931, 0.2989540270396641, 0.30849322250911165, 0.2927245157105582], "val_accuracy": [0.6309999823570251, 0.7086666822433472, 0.7319999933242798, 0.7683333158493042, 0.7773333191871643, 0.7860000133514404, 0.8013333082199097, 0.8173333406448364, 0.8149999976158142, 0.8190000057220459, 0.8376666903495789, 0.8493333458900452, 0.8493333458900452, 0.8543333411216736, 0.8569999933242798, 0.8566666841506958, 0.8586666584014893, 0.8606666922569275, 0.8656666874885559, 0.8686666488647461, 0.8643333315849304, 0.8650000095367432, 0.8610000014305115, 0.8690000176429749, 0.8650000095367432, 0.8726666569709778, 0.8713333606719971, 0.871999979019165, 0.8773333430290222, 0.8756666779518127, 0.8806666731834412, 0.8786666393280029, 0.8763333559036255, 0.8820000290870667, 0.878333330154419, 0.8820000290870667, 0.8803333044052124, 0.8856666684150696, 0.8830000162124634, 0.8870000243186951, 0.8796666860580444, 0.8836666941642761, 0.8830000162124634, 0.8880000114440918, 0.8816666603088379, 0.8836666941642761, 0.8870000243186951, 0.8859999775886536, 0.8856666684150696]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], [2, 3, 0, 4, 5, 4, 6, 0, 5, 4, 8, 6, 4, 1, 0, 2, 9, 1, 1, 2, 2, 9, 9, 2, 7, 4, 2, 1, 9, 7, 1, 1, 9, 9], [0, 2, 0, 2, 0, 2, 2, 2, 2, 1, 3, 0, 2, 1, 1, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 44, 76, 57, 60, 52, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7222856879234314, "mapping_values": [1, 51, 51, 34, 17, 10, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)))))))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0234345282545934, 1.189804538287318, 0.8782375443408423, 0.7795631942291144, 0.7042984916801387, 0.6270529957038694, 0.6138829916396775, 0.570495102848312, 0.541750244181217, 0.537051650479863, 0.5336008587092645, 0.508023104301108, 0.5103968630267204, 0.4920067816063429, 0.47773979576099124, 0.493322971683247, 0.5035359955278008, 0.516486719894277, 0.532320871742536, 0.5285815548753505], "accuracy": [0.30841368436813354, 0.5980715751647949, 0.6723021864891052, 0.7107383608818054, 0.7263241410255432, 0.7609298825263977, 0.769911527633667, 0.7832518815994263, 0.7848368883132935, 0.7969884872436523, 0.793422281742096, 0.8057059645652771, 0.8029322624206543, 0.8189142942428589, 0.8153480291366577, 0.8137630224227905, 0.8141592741012573, 0.8170651197433472, 0.8121780753135681, 0.7977809906005859], "val_loss": [0.9002987657274518, 0.6822443178721836, 0.612965498651777, 0.5363531282969883, 0.4846315213612148, 0.46680850642068045, 0.4412943720817566, 0.41345333201544626, 0.413734495639801, 0.417470599923815, 0.41448218481881277, 0.3935073869568961, 0.3974537764276777, 0.3926306026322501, 0.3815125141824995, 0.41658260992595125, 0.40848792450768606, 0.42185563700539724, 0.44123492922101704, 0.44306647777557373], "val_accuracy": [0.6600000262260437, 0.7049999833106995, 0.7253333330154419, 0.7483333349227905, 0.7763333320617676, 0.7836666703224182, 0.8013333082199097, 0.8019999861717224, 0.8173333406448364, 0.812333345413208, 0.824999988079071, 0.8180000185966492, 0.8333333134651184, 0.8306666612625122, 0.8389999866485596, 0.8233333230018616, 0.8323333263397217, 0.8293333053588867, 0.8230000138282776, 0.8360000252723694]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 2, 2, 1, 3, 0, 2, 0, 1, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 23, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7068571448326111, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0224585482756443, 1.1922682782504945, 0.8829561006974047, 0.7916646081742168, 0.7143034043880171, 0.6367155814356634, 0.6177711921707514, 0.5904075503191849, 0.5671625952395655, 0.5578054401065538, 0.5269717980904932, 0.5184131778108445, 0.5108759981955142, 0.4938213556331808, 0.4849824351074673, 0.49464932709967757, 0.49385662571534567, 0.5072795981468698, 0.5468261684164978, 0.5417641036782235], "accuracy": [0.308149516582489, 0.5971469879150391, 0.6736230254173279, 0.7074362635612488, 0.7213049530982971, 0.7537974119186401, 0.7651565074920654, 0.7733456492424011, 0.7907806038856506, 0.785101056098938, 0.7964601516723633, 0.7973847389221191, 0.8090080618858337, 0.8150838613510132, 0.8133667707443237, 0.8178576231002808, 0.8185180425643921, 0.8171972036361694, 0.8034605979919434, 0.8021397590637207], "val_loss": [0.895900045122419, 0.6853382928030831, 0.6136949232646397, 0.5291211094175067, 0.48309033257620676, 0.4736777884619577, 0.442736770425524, 0.4333752053124564, 0.4240838459559849, 0.41743447950908114, 0.4095396569796971, 0.3869739941188267, 0.3973940781184605, 0.39806478364127024, 0.40501199449811665, 0.4008207150868007, 0.41625501428331646, 0.4240456393786839, 0.4536169341632298, 0.45584994554519653], "val_accuracy": [0.6596666574478149, 0.6959999799728394, 0.7256666421890259, 0.7556666731834412, 0.778333306312561, 0.7786666750907898, 0.8053333163261414, 0.7919999957084656, 0.812666654586792, 0.8183333277702332, 0.8286666870117188, 0.8333333134651184, 0.8289999961853027, 0.8379999995231628, 0.8389999866485596, 0.8336666822433472, 0.82833331823349, 0.8206666707992554, 0.8326666951179504, 0.8336666822433472]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 0, 2, 4, 1, 1, 0, 5, 9, 2, 8, 4, 1], [2, 1, 1, 3, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [70, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.3531428575515747, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5264749768198818, 2.2528003503806744, 2.2434582089263024, 2.533176186314317, 2.457534167524405, 2.52595318265957, 2.5948732613792918, 2.732948591397061], "accuracy": [0.15202747285366058, 0.16972659528255463, 0.1830669641494751, 0.16061286628246307, 0.1740853190422058, 0.18993528187274933, 0.21859727799892426, 0.21899352967739105], "val_loss": [1.8340967042105538, 1.8445915494646346, 1.7440438951764787, 2.163500649588449, 2.117067405155727, 2.1536220823015486, 2.245013918195452, 2.550789083753313], "val_accuracy": [0.25200000405311584, 0.28833332657814026, 0.33666667342185974, 0.1993333399295807, 0.23266667127609253, 0.2759999930858612, 0.28333333134651184, 0.22166666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [4, 3, 9, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1, 0, 8, 4, 5, 6, 4, 6, 2, 2, 9, 5, 5, 8, 8, 8], [0, 2, 0, 2, 0, 2, 2, 2, 2, 1, 3, 0, 2, 0, 1, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 8, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [16, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11142857372760773, "mapping_values": [1, 16, 16, 10, 6, 4, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3021387379986025, 2.3014809443824373, 2.301003175310219, 2.302032759160949, 2.3025447442436797, 2.302584324184111, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09206181764602661, 0.09285431355237961, 0.09800554811954498, 0.09721305221319199, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9706213814871651, 1.970900535583496, 1.9727369717189245, 1.973602635519845, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0533333346247673, 0.09833333641290665, 0.09966666996479034, 0.10766666382551193, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 6, 0, 2, 4, 1, 0, 0, 3, 5, 2, 8, 4, 1], [0, 2, 0, 0, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [95, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [1, 4, 6], [64, 55], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 2, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 3, 3, 3, 0], [38, 84, 6], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), sigma))", "other_info": {"loss": [2.302400202058987, 2.303112738923846, 2.3027378189848746, 2.3014758734135596, 939.5197815641263, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.0882314071059227, 0.09470347315073013, 0.09391097724437714, 0.09298639744520187, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970994336264474, 1.970876693725586, 1.97025728225708, 1.9677705083574568, Infinity, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03799999877810478, 0.03799999877810478, 0.03733333200216293, 0.07100000232458115, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 1, 0, 5, 9, 2, 8, 4, 1], [2, 2, 1, 3, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [3, 4, 0], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 12, 10, 7, 3, 1, 5, 2, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 3, 0, 2, 4, 4, 6, 0, 5, 4, 8, 6, 4, 1, 4, 2, 9, 8, 2, 3, 7, 9, 9, 2, 7, 4, 2, 6, 9, 7, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 77, 76, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [1, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [0, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 3, 3, 1, 2, 0, 12, 10, 7, 3, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [36, 40, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [41, 84, 6], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [3, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, sigma))", "other_info": {"loss": [2.3022588329103564, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [3, 1, 6, 9, 5, 2, 0, 0, 0, 5, 2, 8, 4, 1, 1, 7, 5, 1, 2, 7, 1, 6, 5, 2, 5, 9], [0, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [98, 35, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [37053276.55313622, 5670952680.939374, 94304387216.99115, 656804064959.18, 2906174970288.539, 9610747451895.953], "accuracy": [0.10434553027153015, 0.09708096832036972, 0.09721305221319199, 0.10051512718200684, 0.09840179979801178, 0.0956280529499054], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [45, 35, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 9, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 44, 76, 57, 60, 52, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [23, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.314181350619329, 2.4120541230452264, 3.155557447719914, 9579161850.924585, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0676264688372612, 0.014925372786819935, 0.008321225643157959, 0.08757099509239197, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0143567493983676, 2.1943161828177318, 6.350032670157296, 1.0264198264453895e+27, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0063333334401249886, 0.00566666666418314, 0.039000000804662704, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 3, 0, 2, 4, 0, 0, 0, 3, 5, 2, 8, 4, 1, 3, 9, 1, 2, 9], [1, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [41, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302137948077636, 2.30258303305193, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [4, 3, 0, 2, 4, 1, 2, 0, 5, 0, 2, 8, 4, 1], [0, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 82, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [98, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 1, 6, 6, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364187764422359, 3.060710104874427, 4.8974078749904955, 7.976251165581228, 12.379728253774829, 17.953779274493694], "accuracy": [0.09126931428909302, 0.09774138033390045, 0.09774138033390045, 0.10196803510189056, 0.09893012791872025, 0.09628847241401672], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 2, 0], [87, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 19, 19, 12, 7, 3, 3, 3, 1, 2, 1, 5, 5, 2, 3, 1, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.square(grad))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3645447025430073, 3.194506910105171, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.09681680053472519, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0931926454816545, 3.240126269204276, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 8, 2, 4, 1, 1, 0, 5, 9, 2, 8, 4, 1], [2, 2, 1, 3, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [5, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.09514285624027252, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.681235537631652, 2.3086134425684635, 2.3042149556043707, 2.303267987428513, 2.303032094776323, 2.3031046541375475], "accuracy": [0.16272619366645813, 0.09906221181154251, 0.09760929644107819, 0.09866596013307571, 0.09298639744520187, 0.0952318087220192], "val_loss": [1.9824692181178503, 1.975836958203997, 1.9742209570748466, 1.973820413861956, 1.9737093789236886, 1.9737245695931571], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [5, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.09457142651081085, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.682359844135209, 2.308599254285434, 2.3042128500826937, 2.303267636460997, 2.3030320227563403, 2.3031047171196053], "accuracy": [0.16391493380069733, 0.09906221181154251, 0.09760929644107819, 0.09866596013307571, 0.09298639744520187, 0.0952318087220192], "val_loss": [1.9824440819876534, 1.975832734789167, 1.974219594682966, 1.9738198007856096, 1.9737089702061243, 1.9737245695931571], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 3, 0, 2, 4, 1, 1, 0, 5, 9, 2, 8, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 35, 76, 57, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [5, 4, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.06857142597436905, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.302075495069305, 2.301879705864409, 2.3013687259753177, 2.3005594219025873, 2.300701598323741, 2.3006551744695103, 2.3005379517915117, 2.300259879110606, 2.3000033929946007, 2.3000305457877888, 2.300316088959494, 2.2995346911657975, 2.300026519218881, 2.29979686163294], "accuracy": [0.09192973375320435, 0.09140139818191528, 0.09708096832036972, 0.09338264167308807, 0.08955223858356476, 0.09642054885625839, 0.09179764986038208, 0.09998679161071777, 0.09694888442754745, 0.1014397069811821, 0.1026284471154213, 0.09893012791872025, 0.09774138033390045, 0.10540219396352768], "val_loss": [1.9703963143484933, 1.9699365752083915, 1.9697237695966447, 1.9696592603410994, 1.9696446827479772, 1.9697094644818987, 1.9695733615330286, 1.9694814000810896, 1.9694580350603377, 1.9695745876857214, 1.9696739060538155, 1.9699206352233887, 1.970174993787493, 1.9703538758414132], "val_accuracy": [0.04500000178813934, 0.05299999937415123, 0.05766666680574417, 0.06066666543483734, 0.06433333456516266, 0.06700000166893005, 0.07466666400432587, 0.08100000023841858, 0.08299999684095383, 0.0820000022649765, 0.08033332973718643, 0.0793333351612091, 0.07766667008399963, 0.07866666465997696]}}]