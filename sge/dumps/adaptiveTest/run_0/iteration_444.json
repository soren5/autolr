[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 6], [3, 7, 6], [64, 55], [0, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0679273011110966, 1.7181539923964302, 1.2339632431781524, 0.8003235779906371, 0.6874095758489882, 0.6430206909754084, 0.6014193647872377, 0.5658503947335464, 0.5333999998738596, 0.5203695518229505, 0.5016255197846547, 0.49066920473968917, 0.4879680786740904, 0.4571357390836812, 0.43505810624919217, 0.4198456195997068, 0.4163327985089516, 0.3952972962241903, 0.39714656103209983, 0.3721040541296543, 0.3656137943181222, 0.36566249010049906, 0.3613805846570584, 0.34754309591175053, 0.338113807684017, 0.3385634290827201, 0.3228774969375617, 0.3162415117663069, 0.3179349706173258, 0.3097479730399687, 0.3015354604194224, 0.2914885141751581, 0.27967194722958716, 0.2922359445130962, 0.27627112639972234, 0.2705659099762639, 0.27230238528921463, 0.2581214451235614, 0.2515206353468524, 0.24376877953017062, 0.23509142488504933, 0.2421767535447098, 0.23856583817673396, 0.2325218154584664, 0.23178842275638023, 0.21862607369089423], "accuracy": [0.3217540681362152, 0.4241183400154114, 0.5845991373062134, 0.7003037929534912, 0.7434949278831482, 0.7647602558135986, 0.7730814814567566, 0.7911768555641174, 0.8016114234924316, 0.811649739742279, 0.8144234418869019, 0.8171972036361694, 0.8183859586715698, 0.8343679904937744, 0.8417646288871765, 0.8481045961380005, 0.8444063067436218, 0.8545766472816467, 0.8574824929237366, 0.8607845902442932, 0.8685774803161621, 0.8613129258155823, 0.8669924736022949, 0.8720116019248962, 0.8766345381736755, 0.8746532797813416, 0.8802007436752319, 0.8819178342819214, 0.8805969953536987, 0.8885219693183899, 0.8862766027450562, 0.8883898854255676, 0.8947299122810364, 0.8924844861030579, 0.8932769894599915, 0.9013340473175049, 0.8960506916046143, 0.9031832218170166, 0.9089948534965515, 0.9025228023529053, 0.9124290347099304, 0.906749427318573, 0.9078060984611511, 0.9113723635673523, 0.9099194407463074, 0.9174481630325317], "val_loss": [1.8573391778128487, 0.8555326291493007, 0.6326203346252441, 0.5282152380262103, 0.49709812232426237, 0.46487743513924734, 0.4497194460460118, 0.4210502164704459, 0.4105389543942043, 0.43233933619090487, 0.3895720754350935, 0.4395496164049421, 0.3721981389181955, 0.3602019803864615, 0.34822653021131245, 0.3658680830683027, 0.35366285698754446, 0.3454679421016148, 0.3302310960633414, 0.329979019505637, 0.32650996106011526, 0.3279441254479544, 0.3248033949307033, 0.32301342487335205, 0.33176223720823017, 0.3205510377883911, 0.31343936920166016, 0.31276058299200876, 0.3085280571665083, 0.3047070247786386, 0.30984856401171, 0.3024272492953709, 0.30718691859926495, 0.3033281990459987, 0.30933016538619995, 0.3178245084626334, 0.2994340317589896, 0.2941388487815857, 0.30861990792410715, 0.2997102907725743, 0.31017747947147917, 0.30003764799662996, 0.30986668382372173, 0.3001239129475185, 0.30419719219207764, 0.3118096249444144], "val_accuracy": [0.20733332633972168, 0.6863333582878113, 0.7123333215713501, 0.7570000290870667, 0.765333354473114, 0.7860000133514404, 0.7860000133514404, 0.8116666674613953, 0.8119999766349792, 0.8053333163261414, 0.8230000138282776, 0.7839999794960022, 0.8396666646003723, 0.8446666598320007, 0.8410000205039978, 0.8399999737739563, 0.8393333554267883, 0.8519999980926514, 0.8546666502952576, 0.8546666502952576, 0.859333336353302, 0.8586666584014893, 0.856333315372467, 0.8526666760444641, 0.856333315372467, 0.8606666922569275, 0.8610000014305115, 0.8646666407585144, 0.8656666874885559, 0.8673333525657654, 0.8666666746139526, 0.8673333525657654, 0.8673333525657654, 0.8643333315849304, 0.8693333268165588, 0.8640000224113464, 0.8736666440963745, 0.875333309173584, 0.8730000257492065, 0.8736666440963745, 0.8796666860580444, 0.878333330154419, 0.8726666569709778, 0.8786666393280029, 0.875, 0.8759999871253967]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 9], [5, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8302857279777527, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.069275518938094, 1.7271702910269477, 1.2603097206502936, 0.8222926732587178, 0.6846269949741209, 0.6227673974334446, 0.5827880674475424, 0.5533078840033663, 0.5150557055591104, 0.49361959426882657, 0.4922871356941942, 0.472896045595191, 0.4678771902368274, 0.4341379863325285, 0.42741600117899436, 0.41698293236929745, 0.42378162742133435, 0.39528892382245256, 0.3929787348439712, 0.3724299626241129, 0.3658064897262567, 0.3630900446410665, 0.35949900464107176, 0.3501748376479317, 0.3373425801227657, 0.32526578341162105, 0.31767368764216636, 0.31487904514430015, 0.313769678051729, 0.3103809659829969, 0.29588390840531154, 0.2903032111627173, 0.28039302580376435, 0.2920431181337729, 0.2809083602368918, 0.2743384935568982, 0.2665087957097051, 0.2553213053352057, 0.25274881862646176, 0.2550047010856455, 0.23705917472624272, 0.2411443620680062, 0.2284046961583828, 0.22624554813278192, 0.23799127972499176, 0.22063419031720544], "accuracy": [0.32122573256492615, 0.41909918189048767, 0.5886936783790588, 0.6897371411323547, 0.7415136694908142, 0.7718927264213562, 0.7771760821342468, 0.7952714562416077, 0.8127063512802124, 0.822348415851593, 0.8173292875289917, 0.8236692547798157, 0.8289526104927063, 0.8438779711723328, 0.8453308939933777, 0.8462554216384888, 0.8449346423149109, 0.8555012345314026, 0.8613129258155823, 0.8628978729248047, 0.8701624870300293, 0.8647470474243164, 0.8672566413879395, 0.8732003569602966, 0.8786157965660095, 0.8779553771018982, 0.8816536664962769, 0.8796724081039429, 0.8819178342819214, 0.885219931602478, 0.8856161832809448, 0.893541157245636, 0.8947299122810364, 0.889050304889679, 0.896446943283081, 0.8967111110687256, 0.9001452922821045, 0.8981640338897705, 0.9058248400688171, 0.902390718460083, 0.9122969508171082, 0.9085986018180847, 0.9124290347099304, 0.9116365313529968, 0.9083344340324402, 0.9166556596755981], "val_loss": [1.8589294978550501, 0.8604906456811088, 0.7000703811645508, 0.5336180584771293, 0.47990124566214426, 0.46876091616494314, 0.4301413297653198, 0.41680826459612164, 0.4007005606378828, 0.4418791787964957, 0.37317379883357454, 0.4130657741001674, 0.36143417017800467, 0.35257325002125334, 0.35912045410701204, 0.3732193112373352, 0.36466552530016216, 0.33477185453687397, 0.3367247155734471, 0.33647806303841726, 0.3222639390400478, 0.3265544090952192, 0.3333426203046526, 0.3219843677112034, 0.324377851826804, 0.3197163939476013, 0.32384252548217773, 0.3104270100593567, 0.3084691081728254, 0.3106076121330261, 0.3127549546105521, 0.3154140029634748, 0.30002646786826, 0.31219659532819477, 0.3280286703790937, 0.3072335890361241, 0.3022637792995998, 0.29921850136348177, 0.3016672730445862, 0.30309018918446134, 0.30174931458064486, 0.2974416272980826, 0.3077101537159511, 0.3062158737863813, 0.29940194743020193, 0.3057861924171448], "val_accuracy": [0.2083333283662796, 0.6896666884422302, 0.6483333110809326, 0.7630000114440918, 0.7749999761581421, 0.7886666655540466, 0.815666675567627, 0.8133333325386047, 0.8136666417121887, 0.8013333082199097, 0.8316666483879089, 0.796999990940094, 0.8423333168029785, 0.8506666421890259, 0.8370000123977661, 0.8360000252723694, 0.8393333554267883, 0.8539999723434448, 0.8493333458900452, 0.8546666502952576, 0.8569999933242798, 0.8543333411216736, 0.859000027179718, 0.8619999885559082, 0.8569999933242798, 0.862666666507721, 0.8560000061988831, 0.8643333315849304, 0.859000027179718, 0.8629999756813049, 0.8690000176429749, 0.862333357334137, 0.8740000128746033, 0.8616666793823242, 0.8663333058357239, 0.871666669845581, 0.8756666779518127, 0.874666690826416, 0.8736666440963745, 0.8690000176429749, 0.8776666522026062, 0.8736666440963745, 0.8706666827201843, 0.875, 0.8763333559036255, 0.8736666440963745]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8225714564323425, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.076527336033942, 1.853974094244121, 1.0550712065973207, 1.0161052909997697, 0.7520213959759032, 0.6751503261199102, 0.6287045998580231, 0.5941649024843335, 0.5580689510129556, 0.5283263333800163, 0.5200676285768654, 0.5027942216989938, 0.49516893536927065, 0.4538324158016276, 0.44545968018030335, 0.4240420752465371, 0.4266659186823556, 0.4085295302733108, 0.3997197155986464, 0.378147497456292, 0.36433250836613723, 0.3705108233604134, 0.3781867892734914, 0.3568918323275939, 0.3439111638897367, 0.3442534350164814, 0.31511876585776105, 0.32646893282702505, 0.31544730473093746, 0.31195973716218633, 0.3092926619366538, 0.29947854850695604, 0.28750144195373994, 0.29558751670014605, 0.2817196640371883, 0.27857706767929197, 0.26994335498272576, 0.27217311738520217, 0.26188723681357556], "accuracy": [0.31382909417152405, 0.36943599581718445, 0.6424514651298523, 0.6522256135940552, 0.7253995537757874, 0.7499669790267944, 0.7681944370269775, 0.7836481332778931, 0.7942147850990295, 0.804649293422699, 0.8084797263145447, 0.8181217908859253, 0.817989706993103, 0.8310658931732178, 0.842028796672821, 0.8475762605667114, 0.8455950617790222, 0.8519350290298462, 0.8518029451370239, 0.8589354157447815, 0.8623695969581604, 0.8619733452796936, 0.8627657890319824, 0.8697662353515625, 0.8771628737449646, 0.874389111995697, 0.8809932470321655, 0.8767666220664978, 0.8825782537460327, 0.8860124349594116, 0.8844274282455444, 0.887201189994812, 0.8919561505317688, 0.8883898854255676, 0.8922203183174133, 0.9010698795318604, 0.8920882344245911, 0.8930128216743469, 0.9010698795318604], "val_loss": [1.8957860129220145, 0.9249296188354492, 0.6668879474912371, 0.6418783153806414, 0.515488999230521, 0.48543807438441683, 0.47274346011025564, 0.44526403290884836, 0.4219944306782314, 0.44776553767068045, 0.40028194870267597, 0.4193564312798636, 0.3823120594024658, 0.358391489301409, 0.3637775778770447, 0.38084971053259714, 0.36632496970040457, 0.3455886585371835, 0.3256760154451643, 0.32198645387377056, 0.335070150239127, 0.32650398356573923, 0.3276880383491516, 0.3142919625554766, 0.3272068755967276, 0.3153169410569327, 0.3203201634543283, 0.3089199321610587, 0.3051403760910034, 0.3087448903492519, 0.3028368864740644, 0.30749309062957764, 0.30438166856765747, 0.29971693243299213, 0.33685933692114695, 0.3009265150342669, 0.3029389466558184, 0.29706708022526335, 0.30319225788116455], "val_accuracy": [0.18433333933353424, 0.668666660785675, 0.7266666889190674, 0.7260000109672546, 0.7673333287239075, 0.7763333320617676, 0.7886666655540466, 0.7923333048820496, 0.8119999766349792, 0.7946666479110718, 0.8143333196640015, 0.7956666946411133, 0.8320000171661377, 0.8450000286102295, 0.8413333296775818, 0.8360000252723694, 0.8320000171661377, 0.8516666889190674, 0.8560000061988831, 0.8546666502952576, 0.8536666631698608, 0.8546666502952576, 0.8546666502952576, 0.8616666793823242, 0.8543333411216736, 0.8603333234786987, 0.8586666584014893, 0.8636666536331177, 0.8616666793823242, 0.8579999804496765, 0.8659999966621399, 0.8686666488647461, 0.8646666407585144, 0.875, 0.8616666793823242, 0.8706666827201843, 0.8700000047683716, 0.871999979019165, 0.8736666440963745]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 7, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [1, 2], [3, 7], [10], [1, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7454285621643066, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.017911191566698, 1.6545764493935962, 1.2190170091896828, 1.0646099928206048, 0.9912310144558338, 0.9403686306464312, 0.9111418160213188, 0.8311147449149149, 0.8637216271048508, 0.8296488412319944, 0.7876400196194854, 0.7824013676735955, 0.7866415426542478, 0.75740698181076, 0.8016378914974527, 0.7612284693058534, 0.7740466773801271], "accuracy": [0.32162198424339294, 0.42147669196128845, 0.5683529376983643, 0.613789439201355, 0.6452252268791199, 0.6695284843444824, 0.6808875799179077, 0.7053229212760925, 0.6870955228805542, 0.7082287669181824, 0.720380425453186, 0.7201162576675415, 0.7235503792762756, 0.7297582626342773, 0.7187954187393188, 0.7334566116333008, 0.7255316376686096], "val_loss": [1.6832313537597656, 0.9847603525434222, 0.8776966844286237, 0.8093481234141758, 0.7971229553222656, 0.7930087702614921, 0.6608083077839443, 0.6291070835930961, 0.6120565789086478, 0.5985799176352364, 0.7074980735778809, 0.5886703899928502, 0.6223220995494297, 0.6141948359353202, 0.643630998475211, 0.6460735116686139, 0.6330827815192086], "val_accuracy": [0.27399998903274536, 0.6043333411216736, 0.6103333234786987, 0.6416666507720947, 0.6846666932106018, 0.7036666870117188, 0.7003333568572998, 0.7213333249092102, 0.7446666955947876, 0.7486666440963745, 0.7093333601951599, 0.753333330154419, 0.7316666841506958, 0.7303333282470703, 0.7353333234786987, 0.7099999785423279, 0.7316666841506958]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1], [2, 9], [5, 7], [10], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.23485714197158813, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.204081311690069, 2.4140779378785435, 2.5531809355179393, 2.7611378949505068, 3.1047981221520624, 3.671544993227625], "accuracy": [0.19244486093521118, 0.1266675442457199, 0.12376172095537186, 0.11887465417385101, 0.11174217611551285, 0.10976093262434006], "val_loss": [1.9077603476388114, 2.02493987764631, 2.142740385872977, 2.324453217642648, 2.635497570037842, 3.238589014325823], "val_accuracy": [0.16899999976158142, 0.13600000739097595, 0.13766667246818542, 0.10566666722297668, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [86, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [10], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.16114285588264465, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6.875839683405239, 2.698169940907674, NaN, NaN, NaN, NaN], "accuracy": [0.1508387327194214, 0.11042134463787079, 0.10751552134752274, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.064997809273856, 2.3432846750531877, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [94], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.16114285588264465, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [6.875867810467876, 2.698505403248862, NaN, NaN, NaN, NaN], "accuracy": [0.1508387327194214, 0.11002509295940399, 0.10685510188341141, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0651595251900807, 2.3430350848606656, NaN, NaN, NaN, NaN], "val_accuracy": [0.10466666519641876, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 2, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7], [94], [0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 7, 2, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [87314721588507.55, 2.364239893663734, 2.39210467117495, 2.4553471026938936, 2.69765885993238, 4.6815775744808885], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0199006625584195, 2.037725176130022, 2.0733000891549245, 2.170611245291574, 2.7571208817618236, 6.52972548348563], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [5, 7], [10], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7], [64], [1, 1, 0, 0, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0664377212524414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 5, 9, 0, 1, 9], [5, 0, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1], [2, 9], [3, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3754537871737034, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.2660182544163296, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 9], [5, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [29433131.1762192, 565592971.8008189, 2604193495.626998, 7295162115.34751, 15605550084.733852, 28543298629.11425], "accuracy": [0.09813763201236725, 0.10619468986988068, 0.10038304328918457, 0.09747721254825592, 0.09721305221319199, 0.10236428678035736], "val_loss": [110347177.14285715, 882368859.4285715, 2977527442.285714, 7057290532.571428, 13783145033.142857, 23816526116.57143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [9, 7, 4, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [1, 2], [3, 7], [94], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1224438076.3857028, 183846309819.2915, 3100800359739.2744, 22146327332203.152, 97519898501778.95, 320151619350198.5], "accuracy": [0.09787346422672272, 0.10606260597705841, 0.10038304328918457, 0.09747721254825592, 0.09708096832036972, 0.10236428678035736], "val_loss": [10050816292.571428, 541704678838.8571, 5814076946139.429, 31695955071561.145, 118720834081353.14, 350201614921142.9], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 0, 8, 0, 1, 9], [3, 0, 3, 3, 0], [76, 40, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 1], [2, 9], [3, 7], [94], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [94], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1224438076.3857028, 183846309819.2915, 3100800359739.2744, 22146327332203.152, 97519898501778.95, 320151619350198.5], "accuracy": [0.09787346422672272, 0.10606260597705841, 0.10038304328918457, 0.09747721254825592, 0.09708096832036972, 0.10236428678035736], "val_loss": [10050816292.571428, 541704678838.8571, 5814076946139.429, 31695955071561.145, 118720834081353.14, 350201614921142.9], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 8, 0, 1, 9], [3, 1, 3, 3, 0], [45, 59, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0], [2, 9], [6, 7], [64], [0, 1, 0, 1, 1], [6, 7, 8, 2, 9, 3, 9], [2, 0, 0], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [3, 1, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7], [94], [1, 1, 0, 1, 1], [6, 3, 5, 1, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 5, 2, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0], [8, 9], [3, 7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 2, 2, 2, 0, 1, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3695615856733463, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2772838728768483, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1], [2, 9], [3, 7], [94], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.362491527143455, 3.041247258018178, 4.918106115568174, 8.071870114557369, 12.393256816503756, 17.878691493779943], "accuracy": [0.09245806187391281, 0.10394927859306335, 0.09721305221319199, 0.09747721254825592, 0.09694888442754745, 0.10157178342342377], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [18, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 1], [2, 9], [3, 7], [94], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [6, 3, 5, 3, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 10, 7, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(beta), tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [2.302281889067098, 2.3021993781313874, 2.3026538987941336, 2.3037695484138703, 2.302092072734145, 2.3023141627109536], "accuracy": [0.08955223858356476, 0.09192973375320435, 0.09021265059709549, 0.0870426595211029, 0.08757099509239197, 0.09232597798109055], "val_loss": [1.970999104636056, 1.9709992408752441, 1.9709994452340263, 1.9709995814732142, 1.9709997177124023, 1.9710001264299666], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]