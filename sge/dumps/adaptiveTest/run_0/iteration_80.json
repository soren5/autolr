[{"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 9, 8, 0, 2, 0, 9, 5, 2], [3, 1, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.7811428308486938, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.502692670051243, 2.272317701279763, 2.3063382553843272, 2.2750876822790937, 2.4258696175112844, 2.3032286580936896, 2.3011832258657554, 2.230351985453489, 2.2729112074721867, 2.1010437178306294, 3.397228051800187, 2.178447230239161, 2.2169219789535237, 1.9152351324789088, 1.767981727645067, 1.4910188533563529, 1.495902279821196, 1.165341883697026, 1.1249517332592724, 0.9646462541545434, 0.9309246839549264, 0.8890777144764613, 0.8947541159629948, 0.831936407413591, 0.8087421076534888, 0.759574309883022, 0.7667498138476483, 0.7442343892627278, 0.7344822007446808, 0.707416973983481, 0.6942387132943189, 0.7016879063335313, 0.6659295025943781, 0.6535294911156335, 0.6691204860635233, 0.6460892175481839, 0.6169413036327667, 0.6180694222985604, 0.5955356528116271, 0.6219706466059092, 0.5763602438950504, 0.5919238363888758, 0.6261828219602451, 0.5782667719976163, 0.5569121434215888, 0.5531998018326619, 0.555188418324314, 0.5441131261455983, 0.5212568307218928, 0.5477212850152541, 0.5201969324495374, 0.5101978680547737, 0.528427456623811, 0.5249802719537435, 0.5025203402929491, 0.503182006061762, 0.4864146036478853, 0.49123613921138887, 0.50174126210088, 0.48592897002975055, 0.47448021093175047, 0.4768897687730662], "accuracy": [0.18082155287265778, 0.15321621298789978, 0.10038304328918457, 0.15810328722000122, 0.10910051316022873, 0.10302469879388809, 0.10553427785634995, 0.17395325005054474, 0.1500462293624878, 0.24778760969638824, 0.2172764539718628, 0.189274862408638, 0.20353981852531433, 0.3463214933872223, 0.3929467797279358, 0.48949941992759705, 0.47985735535621643, 0.5696737766265869, 0.5786554217338562, 0.633469820022583, 0.646149754524231, 0.6592260003089905, 0.6565843224525452, 0.6748117804527283, 0.6796988248825073, 0.7017567157745361, 0.7016246318817139, 0.7012283802032471, 0.7051908373832703, 0.7165499925613403, 0.726192057132721, 0.7214370369911194, 0.7317395210266113, 0.7427024245262146, 0.7341170310974121, 0.7407211661338806, 0.7539294958114624, 0.7510236501693726, 0.7601373791694641, 0.7498348951339722, 0.7687227725982666, 0.7647602558135986, 0.7511557340621948, 0.7693831920623779, 0.7755910754203796, 0.7750627398490906, 0.7796856164932251, 0.7802139520645142, 0.7913089394569397, 0.776251494884491, 0.7968564033508301, 0.7947431206703186, 0.7861577272415161, 0.7884030938148499, 0.7994980812072754, 0.8006868362426758, 0.8064984679222107, 0.8084797263145447, 0.7973847389221191, 0.8127063512802124, 0.804649293422699, 0.8103289008140564], "val_loss": [2.008126871926444, 1.989018440246582, 1.9723193304879325, 2.1129237583705356, 1.9743571962629045, 1.9732719148908342, 1.9683040891374861, 1.6085359028407507, 1.6297318594796317, 1.7643072264535087, 1.9933473723275321, 1.692509344645909, 1.5527777331215995, 1.4602086884634835, 1.1826139518192835, 1.2079037598201208, 0.8836329323904855, 0.7883848292487008, 0.7352287769317627, 0.668655276298523, 0.6557882172720773, 0.6426646028246198, 0.656331045286996, 0.5928399222237724, 0.5817285094942365, 0.5829077959060669, 0.5827563319887433, 0.5621823413031442, 0.5393157686505999, 0.5418976204735892, 0.5893952335630145, 0.5467062166758946, 0.5165426901408604, 0.5604311568396432, 0.5305971758706229, 0.5104421717779977, 0.5183055400848389, 0.5005109821047101, 0.49696290493011475, 0.5072321721485683, 0.5098839998245239, 0.566381437437875, 0.5095339502607074, 0.4861139569963728, 0.4940404381070818, 0.5078581912176949, 0.4697026184626988, 0.48037220750536236, 0.499563387462071, 0.484614406313215, 0.4642287152154105, 0.4844648667744228, 0.46168865476335796, 0.46643524510519846, 0.46012067794799805, 0.46917777402060373, 0.45485964843205046, 0.521718042237418, 0.4753401449748448, 0.47957314763750347, 0.46644571849278044, 0.4747061218534197], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.1003333330154419, 0.21699999272823334, 0.09933333098888397, 0.10166666656732559, 0.10533333569765091, 0.3063333332538605, 0.3073333203792572, 0.2083333283662796, 0.027666667476296425, 0.359333336353302, 0.4023333191871643, 0.46833333373069763, 0.5389999747276306, 0.5413333177566528, 0.6060000061988831, 0.6316666603088379, 0.6600000262260437, 0.6923333406448364, 0.6856666803359985, 0.7020000219345093, 0.6840000152587891, 0.7173333168029785, 0.7226666808128357, 0.718999981880188, 0.7253333330154419, 0.734666645526886, 0.7423333525657654, 0.7513333559036255, 0.7360000014305115, 0.7246666550636292, 0.7580000162124634, 0.7336666584014893, 0.7396666407585144, 0.7553333044052124, 0.762333333492279, 0.7696666717529297, 0.7716666460037231, 0.7599999904632568, 0.762333333492279, 0.7303333282470703, 0.7706666588783264, 0.7803333401679993, 0.7760000228881836, 0.7646666765213013, 0.7870000004768372, 0.7770000100135803, 0.7900000214576721, 0.7853333353996277, 0.7886666655540466, 0.7713333368301392, 0.7933333516120911, 0.7913333177566528, 0.7960000038146973, 0.8023333549499512, 0.8033333420753479, 0.7773333191871643, 0.7883333563804626, 0.7960000038146973, 0.7986666560173035, 0.7893333435058594]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.39828571677207947, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.503258551746359, 2.286426579081513, 2.28405833313604, 2.3027006166171184, 2.2848302096171764, 2.2734405416554906, 2.2557414898137376, 2.309511422292195, 2.3053269965726435, 2.3036616273670147], "accuracy": [0.1802932173013687, 0.1340641975402832, 0.12296922504901886, 0.1014397069811821, 0.13802668452262878, 0.1468762308359146, 0.16232994198799133, 0.15982036292552948, 0.09615638852119446, 0.09259014576673508], "val_loss": [2.0084326607840404, 1.587094443184989, 1.974050726209368, 1.9719130652291434, 1.7503965922764368, 1.9537452970232283, 1.9712480817522322, 1.978231498173305, 1.9740650313241142, 1.9737838336399622], "val_accuracy": [0.1003333330154419, 0.2933333218097687, 0.10000000149011612, 0.1003333330154419, 0.3226666748523712, 0.20633333921432495, 0.18666666746139526, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.26828572154045105, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5033565077090763, 2.293371239547417, 2.294352218317806, 2.2986877895758813, 2.273421028459927, 2.2782307400789716, 2.305398097237922, 2.296764227031103, 2.2855644200251577, 2.314449149005685, 2.3036121338302777, 2.3035120327301692, 2.303317368510786], "accuracy": [0.18055738508701324, 0.13115836679935455, 0.10857218503952026, 0.1208558976650238, 0.16061286628246307, 0.15955619513988495, 0.10236428678035736, 0.11478008329868317, 0.227314755320549, 0.10051512718200684, 0.1022322028875351, 0.09760929644107819, 0.09628847241401672], "val_loss": [2.0087742124285017, 1.6975832666669572, 1.9735619681222099, 1.9284331457955497, 1.9680557250976562, 1.9779673303876604, 1.973945140838623, 1.7550650324140276, 2.0015409333365306, 1.975029741014753, 1.9739770208086287, 1.9738096509660994, 1.9737601280212402], "val_accuracy": [0.1003333330154419, 0.19733333587646484, 0.10499999672174454, 0.20200000703334808, 0.1576666682958603, 0.10133333504199982, 0.09833333641290665, 0.28999999165534973, 0.08900000154972076, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2491428554058075, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5032616407643564, 2.2869092977561847, 2.368776109319054, 2.3132625443666774, 2.266445965484117, 2.3063841364906765, 2.303605868973516], "accuracy": [0.18042530119419098, 0.1348566859960556, 0.16536785662174225, 0.09840179979801178, 0.19244486093521118, 0.10091137140989304, 0.09708096832036972], "val_loss": [2.0088413783482144, 1.5150763647896903, 2.008581978934152, 1.9698750632149833, 1.981274127960205, 1.9743425505501884, 1.9737498419625419], "val_accuracy": [0.1003333330154419, 0.29100000858306885, 0.10000000149011612, 0.125, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.23228570818901062, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.5014186048110902, 2.2767782268932293, 2.312323700214941, 2.2857323654292205, 2.2851359802954514, 2.304141343812964, 2.2994507057886273], "accuracy": [0.1806894689798355, 0.1410645842552185, 0.1138555034995079, 0.16061286628246307, 0.18478403985500336, 0.09628847241401672, 0.11821424216032028], "val_loss": [2.0045550210135326, 1.7475080830710275, 1.973010744367327, 1.6692251818520683, 1.9753878457205636, 1.9729482105800085, 1.9455183574131556], "val_accuracy": [0.1003333330154419, 0.31466665863990784, 0.10133333504199982, 0.2746666669845581, 0.12133333086967468, 0.1120000034570694, 0.19599999487400055]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [3, 2, 6, 2, 8, 6, 3, 0, 3, 5, 2, 8, 1, 6, 3, 9, 0, 9, 9], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 95, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.21400000154972076, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.503047250721984, 2.301577074589778, 2.3306495749073384, 2.298614368399672, 2.230415953810126, 2.3039341753562996, 2.303449790900677, 2.303353686138088, 2.3030108963068625], "accuracy": [0.18042530119419098, 0.15440496802330017, 0.09985470771789551, 0.12376172095537186, 0.19878484308719635, 0.09391097724437714, 0.09391097724437714, 0.09100515395402908, 0.09325055778026581], "val_loss": [2.0089101110185896, 2.0989792687552318, 1.973867416381836, 1.933361394064767, 1.9756268092564173, 1.9738175528390067, 1.9737096514020647, 1.9736601965767997, 1.9736858776637487], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.10000000149011612, 0.2939999997615814, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 2, 6, 2, 1, 6, 2, 0, 9, 5, 2, 1, 4, 9], [2, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.11742857098579407, "mapping_values": [1, 16, 16, 8, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.501863644721722, 2.2783680768328542, 2.363095105426533, 2.3037366632457266, 2.3021444684211145, 2.196289895248766, 2.507008036444798, 2.3073621026717945, 2.303353624825055, 2.3028758764424424], "accuracy": [0.18042530119419098, 0.1344604343175888, 0.10989301651716232, 0.09959053993225098, 0.109232597053051, 0.21437062323093414, 0.177255317568779, 0.09879804402589798, 0.10315678268671036, 0.10196803510189056], "val_loss": [2.011277403150286, 1.97755765914917, 1.9753411156790597, 1.973543575831822, 1.9690803119114466, 1.9676060676574707, 1.9805364608764648, 1.9745232037135534, 1.9735932350158691, 1.9720676285879952], "val_accuracy": [0.1003333330154419, 0.13833333551883698, 0.10133333504199982, 0.10066666454076767, 0.17599999904632568, 0.10499999672174454, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [0, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1337357422.5474906, 26907185886.15295, 134783738649.12323, 400467694769.5871, 923689594818.8657, 1866098641163.5303], "accuracy": [0.0952318087220192, 0.1014397069811821, 0.09932637959718704, 0.09840179979801178, 0.1010434553027153, 0.09866596013307571], "val_loss": [5345501915.428572, 49493182756.57143, 189990792630.85715, 507150523245.7143, 1112105662171.4285, 2156692766720.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 1, 9, 8, 6, 2, 0, 3, 5, 2], [2, 2, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [7], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [288503854.09127593, 5429362202.171444, 25107679034.801216, 68528079434.45674, 146358710643.67508, 274395657128.49136], "accuracy": [0.09668471664190292, 0.09919429570436478, 0.09985470771789551, 0.10157178342342377, 0.10328886657953262, 0.09945846349000931], "val_loss": [1046452845.7142857, 8367505993.142858, 28235688228.57143, 66923553938.28571, 130703687680.0, 225848585654.85715], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [4], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [18, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [1283752341.6472132, 24166809139.598995, 111768523293.55276, 305071420419.38135, 651571764076.1686, 1221594843182.7976], "accuracy": [0.09668471664190292, 0.09919429570436478, 0.09985470771789551, 0.10157178342342377, 0.10328886657953262, 0.09945846349000931], "val_loss": [4657283364.571428, 37247155053.71429, 125696353426.28572, 297935203766.8571, 581887346980.5714, 1005477279451.4286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1337357423.4720712, 26907186697.670586, 134783738649.12323, 400467694769.5871, 923689560194.1133, 1866098606538.778], "accuracy": [0.0952318087220192, 0.1014397069811821, 0.09932637959718704, 0.09840179979801178, 0.1010434553027153, 0.09866596013307571], "val_loss": [5345501915.428572, 49493182756.57143, 189990778587.42856, 507150523245.7143, 1112105662171.4285, 2156692841618.2856], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [1], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 2, 2, 2, 2, 0, 2, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 4, 3, 2], [41, 55], [0, 1, 0], [1], [8], [1], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), grad)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 2, 5, 2, 8, 6, 2, 0, 3, 5, 2, 9, 6], [3, 2, 1, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [59, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3031246807943355, 2.302891303802982, 2.3029687387312503, 2.3010160043144805, 2.3022796760665396, 2.304353493552056], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.09192973375320435, 0.09074098616838455, 0.08677849918603897, 0.08453308790922165], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [3, 2, 2, 2, 8, 6, 6, 0, 3, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [1, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 18, 18, 10, 8, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.multiply(grad, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(alpha))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3031246807943355, 2.302891303802982, 2.3029687387312503, 2.3010160043144805, 2.3022796760665396, 2.304353493552056], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.09192973375320435, 0.09074098616838455, 0.08677849918603897, 0.08453308790922165], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [3, 2, 6, 4, 5, 6, 2, 0, 3, 9, 2, 8, 4, 4, 5, 9], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 25, 25, 16, 9, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), grad)), grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.square(alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3031246807943355, 2.302891303802982, 2.3029687387312503, 2.3010160043144805, 2.3022796760665396, 2.304353493552056], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.09192973375320435, 0.09074098616838455, 0.08677849918603897, 0.08453308790922165], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 2, 6, 9, 8, 0, 2, 0, 9, 5, 2], [3, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [2, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [2], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031246807943355, 2.302891303802982, 2.3029687387312503, 2.3010160043144805, 2.3022796760665396, 2.304353493552056], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.09192973375320435, 0.09074098616838455, 0.08677849918603897, 0.08453308790922165], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2], [2, 2, 1, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 25, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [1, 1, 0], [0], [8], [4], [], [0, 1, 0, 1, 1], [3, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3031246807943355, 2.302891303802982, 2.3029687387312503, 2.3010160043144805, 2.3022796760665396, 2.304353493552056], "accuracy": [0.09087307006120682, 0.09206181764602661, 0.09192973375320435, 0.09074098616838455, 0.08677849918603897, 0.08453308790922165], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 2, 6, 2, 8, 6, 2, 0, 3, 5, 2, 7, 4, 9], [3, 2, 1, 0, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 25, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [5, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.502103842890352, 2.304049338426541, 2.273284692679886, 2.292076930960707, 3.134610154766999, 2.311177466413553, 2.2994154739405075, 2.2051910337219622, 2.306369426464282, 2.3035480123012766, 2.303054320199725, 2.302899545225658], "accuracy": [0.18095363676548004, 0.12798838317394257, 0.1546691358089447, 0.1430458277463913, 0.1570466309785843, 0.11834631860256195, 0.11279883980751038, 0.22995641827583313, 0.09853387624025345, 0.09021265059709549, 0.10051512718200684, 0.09642054885625839], "val_loss": [2.0115359851292203, 1.9727990967886788, 1.975386619567871, 1.975114413670131, 1.9148951939174108, 1.973991530282157, 1.929591247013637, 1.980757713317871, 1.9742647579738073, 1.9737756592886788, 1.9736951419285365, 1.973776408604213], "val_accuracy": [0.1003333330154419, 0.11266666650772095, 0.10133333504199982, 0.18433333933353424, 0.23100000619888306, 0.10133333504199982, 0.27166667580604553, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.1003333330154419, 0.09833333641290665]}}]