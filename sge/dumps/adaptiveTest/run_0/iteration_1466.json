[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8611428737640381, "mapping_values": [1, 10, 10, 6, 4, 2, 5, 5, 2, 3, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9526461936132924, 1.0071628670477675, 0.7613197171834513, 0.6839124143808557, 0.6539979375915568, 0.6198929222803767, 0.5880458651201804, 0.5751711495359418, 0.5491045064985036, 0.5352109624347225, 0.5147704549705536, 0.5046460741365496, 0.49075697479530206, 0.48182837251564453, 0.4562359543296057, 0.4464946240954285, 0.44372780775948284, 0.4143640550923401, 0.4112097241142879, 0.40574009752135, 0.39421248182864976, 0.3901844902864269, 0.3792448087320226, 0.37579027272533544, 0.37355725010388313, 0.3681145705417509, 0.3489514379540077, 0.3490563821814646, 0.3368982811881693, 0.3303328321366152, 0.32887781257595383, 0.32478418817546595, 0.3170404648972918, 0.31067463154128955, 0.31072163804647174, 0.3004911296505576, 0.2885983674879859, 0.28474893275977536, 0.28294739879794706, 0.2805668519370198, 0.2675730959535543, 0.2688298565309124, 0.2604157755820821, 0.2697978801754692, 0.2580646545919114, 0.25547149311738826, 0.250395721706102, 0.24476747488372472], "accuracy": [0.33905693888664246, 0.6419231295585632, 0.7141724824905396, 0.7453441023826599, 0.7535332441329956, 0.7675340175628662, 0.7800818681716919, 0.7918372750282288, 0.7950072884559631, 0.8009510040283203, 0.8092722296714783, 0.8164047002792358, 0.8215559124946594, 0.8238013386726379, 0.8379341959953308, 0.8364813327789307, 0.8405758738517761, 0.8506141901016235, 0.847840428352356, 0.8521991968154907, 0.8539162874221802, 0.8588033318519592, 0.8654074668884277, 0.8621054291725159, 0.860652506351471, 0.8661999702453613, 0.8706908226013184, 0.8709549307823181, 0.8728041052818298, 0.8780874609947205, 0.8813894987106323, 0.8786157965660095, 0.8816536664962769, 0.8838990926742554, 0.883238673210144, 0.8898428082466125, 0.8952582478523254, 0.894069492816925, 0.8948619961738586, 0.8953903317451477, 0.8997490406036377, 0.8990886211395264, 0.9046360850334167, 0.8961827754974365, 0.9058248400688171, 0.90423983335495, 0.9050323367118835, 0.9051644206047058], "val_loss": [0.8190200328826904, 0.5972800084522792, 0.5465838398252215, 0.508429731641497, 0.4915856974465506, 0.4736381598881313, 0.45338920184544157, 0.45310994556971956, 0.43233624526432585, 0.4150794914790562, 0.4136938452720642, 0.40304274218423025, 0.39124858379364014, 0.38853355816432406, 0.3712988921574184, 0.38045031683785574, 0.3595132146562849, 0.35932867016111103, 0.3456065910203116, 0.3433906010219029, 0.334751410143716, 0.33314283405031475, 0.335573537009103, 0.32775573219571796, 0.32605150767735075, 0.3222553474562509, 0.31977158784866333, 0.30994715860911776, 0.3072213615689959, 0.3162925754274641, 0.31022459268569946, 0.3057662674358913, 0.2993213278906686, 0.3097437194415501, 0.2976224592753819, 0.3013091768537249, 0.2961088504110064, 0.30070416416440693, 0.2969974023955209, 0.2930581825120108, 0.29363687549318584, 0.3035241109984262, 0.29599991866520475, 0.28976586886814665, 0.29359833683286396, 0.2936437129974365, 0.3000349317278181, 0.2966177293232509], "val_accuracy": [0.6566666960716248, 0.7286666631698608, 0.7546666860580444, 0.7710000276565552, 0.7770000100135803, 0.7903333306312561, 0.7973333597183228, 0.7940000295639038, 0.8076666593551636, 0.8109999895095825, 0.8159999847412109, 0.8106666803359985, 0.8223333358764648, 0.828000009059906, 0.8373333215713501, 0.82833331823349, 0.8413333296775818, 0.8403333425521851, 0.8506666421890259, 0.8506666421890259, 0.8516666889190674, 0.8566666841506958, 0.8516666889190674, 0.8543333411216736, 0.8556666374206543, 0.8560000061988831, 0.8573333621025085, 0.8663333058357239, 0.8629999756813049, 0.856333315372467, 0.8576666712760925, 0.8659999966621399, 0.8676666617393494, 0.8586666584014893, 0.8709999918937683, 0.8673333525657654, 0.8706666827201843, 0.8676666617393494, 0.871666669845581, 0.8669999837875366, 0.8700000047683716, 0.8673333525657654, 0.8820000290870667, 0.8740000128746033, 0.8763333559036255, 0.8743333220481873, 0.8730000257492065, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 1, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [10, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8471428751945496, "mapping_values": [1, 11, 11, 7, 4, 3, 5, 5, 2, 3, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9526465792681766, 1.006528529933793, 0.7648467444835039, 0.6842309147721788, 0.6561527995700456, 0.62386404448465, 0.589826582004334, 0.57185339909566, 0.5516564932442328, 0.5325085737087691, 0.5127539125494655, 0.49904113027397917, 0.4917130969723596, 0.4820288252781694, 0.4542561389191937, 0.4444239692027621, 0.4425980212618851, 0.41619899179705255, 0.41042776404827214, 0.40644033812355485, 0.39452898699956057, 0.3913739422891496, 0.37765790503794383, 0.3783837454768692, 0.37167376340057523, 0.36611415228319677, 0.34767180425757666, 0.35062117502831386, 0.33680968114712834, 0.3284454703756123, 0.3268526698682979, 0.3252828137324455, 0.31592260013560675, 0.30625559577159656, 0.3099731584668175, 0.29901833343168904, 0.2850231084101204, 0.28316595883118145, 0.28236182560112655, 0.2816260280138025, 0.26857240643908775, 0.27127664407419727, 0.25995198659782853, 0.26732965099293526, 0.25142656120846474, 0.25049042030175, 0.24601873425389673, 0.24584532236937975], "accuracy": [0.33905693888664246, 0.6432439684867859, 0.7140403985977173, 0.7456082701683044, 0.7561748623847961, 0.7660810947418213, 0.7808743715286255, 0.7885351777076721, 0.796328067779541, 0.7996301651000977, 0.8137630224227905, 0.819442629814148, 0.8193105459213257, 0.8222163319587708, 0.8339717388153076, 0.8368775844573975, 0.842028796672821, 0.8510104417800903, 0.8477083444595337, 0.8524633646011353, 0.8508783578872681, 0.8570862412452698, 0.8634262084960938, 0.8565579056739807, 0.863558292388916, 0.8671245574951172, 0.8713511824607849, 0.8702945709228516, 0.873860776424408, 0.8784837126731873, 0.8798044919967651, 0.8790120482444763, 0.883238673210144, 0.8829745054244995, 0.8869370222091675, 0.8887861371040344, 0.8943336606025696, 0.8931449055671692, 0.8945978283882141, 0.894069492816925, 0.89988112449646, 0.8989565372467041, 0.9014661312103271, 0.897899866104126, 0.9082023501396179, 0.9034473896026611, 0.9060890078544617, 0.9059569239616394], "val_loss": [0.8190784624644688, 0.6027200903211322, 0.546586411339896, 0.5127154418400356, 0.49619598048073904, 0.4769787447793143, 0.45160954339163645, 0.4546559027263096, 0.4385581186839512, 0.41495905603681293, 0.409127482346126, 0.4042436480522156, 0.38959154912403654, 0.38968731675829205, 0.369917026587895, 0.37638072456632343, 0.357806886945452, 0.3584908332143511, 0.3468901089259556, 0.3457776648657663, 0.3379085489681789, 0.3329072764941624, 0.335054201739175, 0.3293705838067191, 0.33064797094890047, 0.32464789492743357, 0.31755941254752024, 0.31200155190059115, 0.30790174858910696, 0.3156926546777998, 0.315991963659014, 0.30776473454066683, 0.3025615726198469, 0.30802360602787565, 0.3022711617606027, 0.30344005141939434, 0.30120058570589336, 0.3036163108689444, 0.30356391838618685, 0.29402296032224384, 0.2935439773968288, 0.30137481008257183, 0.3005731361252921, 0.2925228646823338, 0.2988716278757368, 0.2979575480733599, 0.3020821639469692, 0.2950140919004168], "val_accuracy": [0.6566666960716248, 0.7246666550636292, 0.7593333125114441, 0.7689999938011169, 0.7770000100135803, 0.781333327293396, 0.7993333339691162, 0.796999990940094, 0.8016666769981384, 0.8090000152587891, 0.8226666450500488, 0.8109999895095825, 0.8256666660308838, 0.8299999833106995, 0.8396666646003723, 0.8286666870117188, 0.8450000286102295, 0.8423333168029785, 0.8506666421890259, 0.847000002861023, 0.8523333072662354, 0.8556666374206543, 0.8526666760444641, 0.8523333072662354, 0.8516666889190674, 0.8560000061988831, 0.8613333106040955, 0.8629999756813049, 0.8656666874885559, 0.8573333621025085, 0.8539999723434448, 0.8666666746139526, 0.8629999756813049, 0.8613333106040955, 0.8673333525657654, 0.8659999966621399, 0.8663333058357239, 0.8693333268165588, 0.8650000095367432, 0.8693333268165588, 0.8736666440963745, 0.8669999837875366, 0.8763333559036255, 0.8700000047683716, 0.874666690826416, 0.8743333220481873, 0.8686666488647461, 0.8743333220481873]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 5, 4, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 8, 4, 9, 8, 2, 2, 1], [1, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8451428413391113, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9911046332655455, 1.074042897505641, 0.810434058782935, 0.7167476162525012, 0.6892732171775516, 0.6604277883790283, 0.6314621021592968, 0.6121432451508411, 0.5911535658242444, 0.5709669765243913, 0.5605125563444794, 0.5423729112985631, 0.5345304821303114, 0.5255291220014752, 0.5078326180358809, 0.5003210119740712, 0.4974696242404636, 0.47500468818676267, 0.4719732837701565, 0.4613633578550452, 0.4493940858249856, 0.4501255529707197, 0.44737840984019117, 0.43349122397258155, 0.4286524261725719, 0.432015144223503, 0.4151690443981404, 0.41463889931297226, 0.3995840846271941, 0.3943857381671663, 0.3908064932461664, 0.3843518430491354, 0.3796190518658033, 0.3765274835040682, 0.3736677011321202, 0.36736363424852997, 0.3566444757678773, 0.3547181887728049, 0.3563483417301823, 0.3513676182051628, 0.3372433714705404, 0.335047480586403, 0.33006544821156236, 0.3436008374240058, 0.3289293163740057], "accuracy": [0.33166027069091797, 0.6166952848434448, 0.7058512568473816, 0.7339849472045898, 0.7404569983482361, 0.7567031979560852, 0.7635715007781982, 0.7724210619926453, 0.776251494884491, 0.7872143983840942, 0.7926297783851624, 0.7955356240272522, 0.8049134612083435, 0.8042530417442322, 0.8132346868515015, 0.8170651197433472, 0.8198388814926147, 0.8289526104927063, 0.8277638554573059, 0.8343679904937744, 0.8356888294219971, 0.8360850811004639, 0.8392550349235535, 0.8403117060661316, 0.8424250483512878, 0.8433496356010437, 0.845859169960022, 0.8474441766738892, 0.850350022315979, 0.8598600029945374, 0.8602562546730042, 0.858671247959137, 0.8638224601745605, 0.8588033318519592, 0.8628978729248047, 0.86553955078125, 0.8692378997802734, 0.8693699836730957, 0.8684453964233398, 0.8713511824607849, 0.878351628780365, 0.8716153502464294, 0.8786157965660095, 0.8734645247459412, 0.878879964351654], "val_loss": [0.882760899407523, 0.6394448620932442, 0.5693890026637486, 0.5442595481872559, 0.5197125673294067, 0.4973106213978359, 0.48677953651973177, 0.48655220440455843, 0.4645500864301409, 0.44656727995191303, 0.44297865458897184, 0.4279060789516994, 0.42882577010563444, 0.4164803113256182, 0.41075949157987324, 0.40961389030729023, 0.39672848156520296, 0.3952011295727321, 0.376064053603581, 0.3782511438642229, 0.37290885618754793, 0.3763608847345625, 0.36607841082981657, 0.36205703020095825, 0.368400582245418, 0.36551893608910696, 0.35079749141420635, 0.3451925345829555, 0.3413586361067636, 0.34661056314195904, 0.3407579319817679, 0.3302138532911028, 0.339488080569676, 0.32853985684258596, 0.32197790486471994, 0.3264744111469814, 0.3240457262311663, 0.32657606261117117, 0.3192628877503531, 0.31546808992113384, 0.3182188017027719, 0.3182454790387835, 0.32015736613954815, 0.31507237468447, 0.31742422921316965], "val_accuracy": [0.6660000085830688, 0.7166666388511658, 0.7473333477973938, 0.7523333430290222, 0.7683333158493042, 0.7776666879653931, 0.7826666831970215, 0.7796666622161865, 0.7896666526794434, 0.7923333048820496, 0.8036666512489319, 0.7996666431427002, 0.8019999861717224, 0.8196666836738586, 0.8216666579246521, 0.812333345413208, 0.8223333358764648, 0.8196666836738586, 0.8349999785423279, 0.831333339214325, 0.8346666693687439, 0.8316666483879089, 0.8393333554267883, 0.8379999995231628, 0.8353333473205566, 0.8379999995231628, 0.846666693687439, 0.8523333072662354, 0.8479999899864197, 0.8450000286102295, 0.847000002861023, 0.8576666712760925, 0.8483333587646484, 0.8533333539962769, 0.8643333315849304, 0.8553333282470703, 0.8503333330154419, 0.8546666502952576, 0.859333336353302, 0.8646666407585144, 0.8569999933242798, 0.856333315372467, 0.8633333444595337, 0.8619999885559082, 0.862666666507721]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.828000009059906, "mapping_values": [1, 3, 3, 2, 1, 0, 10, 10, 6, 4, 2, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9318099365793655, 0.9867101384900296, 0.7476146846651448, 0.6609364568817144, 0.623865712399118, 0.57424816029057, 0.5309170003753564, 0.514540801258009, 0.4877660835085292, 0.4748774484447469, 0.4460598375968583, 0.43148813871911584, 0.42650500279234355, 0.41428854408879495, 0.39425416736948554, 0.3940393895426478, 0.38357103403926823, 0.36036896242709315, 0.3561164470884731, 0.3436166219085577, 0.33485689093612836, 0.3365018530930227, 0.3257101527207941, 0.31522387612560376, 0.31733456650792397, 0.3084919025255248], "accuracy": [0.3413023352622986, 0.6522256135940552, 0.722229540348053, 0.7515519857406616, 0.7714964747428894, 0.7865539789199829, 0.8010830879211426, 0.8050455451011658, 0.822348415851593, 0.8252542614936829, 0.8355567455291748, 0.8403117060661316, 0.8412362933158875, 0.8450667262077332, 0.8573504090309143, 0.8557654023170471, 0.8610487580299377, 0.8672566413879395, 0.8654074668884277, 0.8753136992454529, 0.8734645247459412, 0.8714832663536072, 0.8802007436752319, 0.8815215826034546, 0.8850878477096558, 0.8853520154953003], "val_loss": [0.8016754048211234, 0.6020188501902989, 0.5397924184799194, 0.503361736025129, 0.47155565874917166, 0.4403501408440726, 0.41479853221348356, 0.41634809970855713, 0.3924963559423174, 0.3846176947866167, 0.3653757997921535, 0.36148867436817717, 0.3482635021209717, 0.34150248765945435, 0.3418606860297067, 0.32963877064841135, 0.3285765562738691, 0.3319660595485142, 0.3149346283503941, 0.3113521082060678, 0.30782835824148996, 0.30103702204568045, 0.3054749625069754, 0.31914110694612774, 0.3003612927028111, 0.298015866960798], "val_accuracy": [0.6510000228881836, 0.7336666584014893, 0.7573333382606506, 0.7736666798591614, 0.7903333306312561, 0.8066666722297668, 0.8196666836738586, 0.8143333196640015, 0.8226666450500488, 0.8320000171661377, 0.8386666774749756, 0.8386666774749756, 0.8456666469573975, 0.8443333506584167, 0.8463333249092102, 0.8510000109672546, 0.8539999723434448, 0.8516666889190674, 0.8653333187103271, 0.862666666507721, 0.8679999709129333, 0.8656666874885559, 0.8633333444595337, 0.8560000061988831, 0.8666666746139526, 0.8656666874885559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [9, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [14, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [8, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7262856960296631, "mapping_values": [1, 9, 9, 5, 4, 1, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2993937584513358, 2.2883719802453864, 2.2648237994507303, 2.230337569301375, 2.181486912438772, 2.1061309414013203, 1.9922310016442126, 1.8303860588127896, 1.6217884344274278, 1.4654637960914638, 1.3926320064494544, 1.3636435287629514, 1.3516349051811472, 1.2705105892687016, 1.127871586394395, 0.9980341858159061, 0.9300041576307904, 0.9077538252034286, 0.9114726769327409, 0.9063390994572668, 0.8771655766435854, 0.8329060708511271, 0.8120039711381466, 0.8205238957887533], "accuracy": [0.09668471664190292, 0.11861048638820648, 0.19323734939098358, 0.26918503642082214, 0.33126401901245117, 0.3731343150138855, 0.39862632751464844, 0.42966583371162415, 0.4637432396411896, 0.49385812878608704, 0.511821448802948, 0.5394267439842224, 0.5583146214485168, 0.5778629183769226, 0.6207898855209351, 0.6445648074150085, 0.6535464525222778, 0.655527651309967, 0.6724342703819275, 0.6892088055610657, 0.6889446377754211, 0.694360077381134, 0.6963412761688232, 0.6944921612739563], "val_loss": [1.964301245553153, 1.9462928771972656, 1.9183957917349679, 1.879967485155378, 1.8232195036751884, 1.732757295880999, 1.5916571276528495, 1.3940638133457728, 1.1776156766074044, 1.0050047125135149, 0.8838271413530622, 0.8171044247491019, 0.7752218246459961, 0.7400252819061279, 0.714114887373788, 0.6598508528300694, 0.6699176175253732, 0.6858003990990775, 0.6960565873554775, 0.6767540488924298, 0.6361885751996722, 0.6061312300818307, 0.594447204044887, 0.5874209063393729], "val_accuracy": [0.08033332973718643, 0.2566666603088379, 0.3610000014305115, 0.39633333683013916, 0.4266666769981384, 0.4663333296775818, 0.4946666657924652, 0.5419999957084656, 0.5809999704360962, 0.6359999775886536, 0.6693333387374878, 0.6756666898727417, 0.6936666369438171, 0.7036666870117188, 0.7096666693687439, 0.718666672706604, 0.7133333086967468, 0.718666672706604, 0.7360000014305115, 0.7300000190734863, 0.7326666712760925, 0.7306666374206543, 0.734000027179718, 0.7356666922569275]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 5, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 2, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [10, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 3, 2, 2, 8, 9], [0, 4, 3, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [0, 8, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [1, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), grad)))))), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 9, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 5, 5, 1, 2, 9], [0, 3, 0, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [2, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [0, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 4, 3, 2, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.0062352784982744, 10.231584279890845, 26.936946910212715, 54.25477702481289, 94.78626578727403, 152.46794953331766], "accuracy": [0.09932637959718704, 0.09747721254825592, 0.09602430462837219, 0.1072513535618782, 0.10566636174917221, 0.09998679161071777], "val_loss": [3.8182405744280135, 11.442135402134486, 25.38975034441267, 46.96089717320034, 77.68674795968192, 119.32506888253349], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [3, 3, 5, 1, 2, 9], [0, 0, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 6, 4, 3, 3, 2, 1, 1, 0, 3, 3, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019578731480435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 4, 1, 0, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 2, 4, 1, 2, 4], [0, 4, 2, 3, 0], [40, 44, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [2, 5, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3021034876652493, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 3, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 1, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [14, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [8, 0, 4, 9, 8, 2, 2, 1], [0, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [9, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019578731480435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 3, 2, 3, 0], [80, 19, 6, 99], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [2, 5, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.014420617377352e+27, 7.8916324936183155, 15.073166559149072, 22.26919049766983, 29.474948865421666, 36.670770896314046], "accuracy": [0.09298639744520187, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.281198910304478, 10.375376565115792, 16.543526240757533, 22.721269880022323, 28.890111650739396, 35.058258056640625], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 0, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 1, 6, 6, 4, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1867383577.406483, 6.543554508355756e+29, 5.88418905625742, 11.65036904696917, 18.367982820292443, 25.407825565199573], "accuracy": [0.054814424365758896, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.213177721628496e+30, 3.4517152650015697, 7.741955075945173, 13.296591894967216, 19.26999010358538, 25.37694604056222], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 5, 1, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 3, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 10, 10, 6, 4, 2, 4, 3, 2, 1, 0, 3, 3, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019578731480435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 5, 5, 2, 3, 1, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019578731480435, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 8, 5, 1, 2, 9], [3, 3, 2, 3, 0], [91, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [8, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 4, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 0, 0, 0, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [24, 51, 14, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [3, 3, 3, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 4, 5, 5, 2, 3, 0, 4, 3, 2, 1, 0, 6, 4, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [789.4584181569492, 4.794301560242824, 10.371483167432412, 22.863094030543248, 50.86768570419914, 111.43165240516406], "accuracy": [0.10500594228506088, 0.09998679161071777, 0.09787346422672272, 0.10645885765552521, 0.1006472036242485, 0.09998679161071777], "val_loss": [2.991793087550572, 6.280633926391602, 13.864130292619977, 30.88122776576451, 67.59435599190849, 146.74484252929688], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [0, 5, 9, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 0, 3, 0], [66, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 1, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019483313663147, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 2, 4, 3, 2, 8, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [6, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [4, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.07885714620351791, "mapping_values": [1, 11, 11, 7, 4, 3, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.744612845563724e+21, 6.739896067615292e+21, 6.78123004164391e+21, 6.450428611208798e+21, 6.701973050480986e+21, 6.669967767346629e+21], "accuracy": [0.10394927859306335, 0.10170386731624603, 0.10196803510189056, 0.10527011007070541, 0.10157178342342377, 0.10500594228506088], "val_loss": [5.413320800914115e+21, 5.413320800914115e+21, 5.413320800914115e+21, 5.413320800914115e+21, 5.413320800914115e+21, 5.413320800914115e+21], "val_accuracy": [0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928, 0.0806666687130928]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [2, 5, 4, 2, 1, 0, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 0, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [0, 4, 2, 3, 0], [40, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [1, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 11, 11, 7, 4, 3, 5, 5, 2, 3, 1, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3012557263702464, 2.3024923640188053, 2.3026287012474334, 2.301569113216821, 2.3026643779063347, 2.3014846556631645], "accuracy": [0.09100515395402908, 0.08506141602993011, 0.09008057415485382, 0.09430722147226334, 0.09311848133802414, 0.0940430611371994], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [5, 5, 0, 1, 1, 6, 9, 8, 9, 0, 2, 0, 2, 0, 9, 5, 7, 5, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 2, 2, 2, 1, 0, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [6, 51, 29, 0, 4, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [3, 2, 5, 1, 2, 9], [1, 4, 2, 3, 0], [76, 19, 6, 99], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1], [8, 0, 4, 9, 8, 2, 2, 1], [3, 5, 0, 6], [16, 55], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 6, 6, 4, 2, 1, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3012557263702464, 2.3024923640188053, 2.3026287012474334, 2.301569113216821, 2.3026643779063347, 2.3014846556631645], "accuracy": [0.09100515395402908, 0.08506141602993011, 0.09008057415485382, 0.09430722147226334, 0.09311848133802414, 0.0940430611371994], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]