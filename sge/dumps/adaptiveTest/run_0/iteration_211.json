[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8528571724891663, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9461802158058437, 0.99919981712269, 0.7478200288071467, 0.6582093382902023, 0.6225203747652336, 0.5715930579817448, 0.5333582794488366, 0.5076463002302644, 0.4753173934730005, 0.4554947296767864, 0.4346246088831227, 0.42258283505350325, 0.4013494367628459, 0.3883728800968109, 0.3767223277222353, 0.36408080481235866, 0.35087000178607414, 0.35044954424095887, 0.33414893799595874, 0.3269388437223882, 0.31673137944183327, 0.3114281701547217, 0.3134813652519127, 0.2933307608451511, 0.28607944470858926, 0.28002373613402387, 0.2728406120214196, 0.2645031560693104, 0.25365219479459955, 0.24594015256210072, 0.24150342024147328, 0.23516701840099452, 0.2384860024157296, 0.22935485618816093, 0.22238118960723238, 0.20645175610889518, 0.21019130323454688, 0.2126607908851923, 0.1972355246780067, 0.19274212390857523, 0.1875132653852889], "accuracy": [0.342491090297699, 0.6338660717010498, 0.7231541275978088, 0.754589855670929, 0.7683265209197998, 0.7872143983840942, 0.8064984679222107, 0.8119139075279236, 0.8272355198860168, 0.8330471515655518, 0.8482366800308228, 0.8473120927810669, 0.8551049828529358, 0.8561616539955139, 0.8594637513160706, 0.8663320541381836, 0.8710870146751404, 0.8710870146751404, 0.8771628737449646, 0.8798044919967651, 0.8803328275680542, 0.8849557638168335, 0.8845595121383667, 0.8885219693183899, 0.8905032277107239, 0.894069492816925, 0.8982961177825928, 0.9021265506744385, 0.9021265506744385, 0.9058248400688171, 0.9084665179252625, 0.9097873568534851, 0.909259021282196, 0.91124027967453, 0.9174481630325317, 0.9224672913551331, 0.9187690019607544, 0.9173160791397095, 0.9222031235694885, 0.925901472568512, 0.9297318458557129], "val_loss": [0.932584115437099, 0.5958114181246076, 0.5374982697623116, 0.5055907624108451, 0.4783127818788801, 0.43714665515082224, 0.44490056378500803, 0.40297114849090576, 0.37645492383411955, 0.36809841224125456, 0.348091185092926, 0.3450128436088562, 0.34257523502622333, 0.33477383852005005, 0.3273650237492153, 0.3200386251722063, 0.31526763098580496, 0.3103322557040623, 0.30799743958881926, 0.298698399748121, 0.3037821480206081, 0.3120110034942627, 0.29846315724509104, 0.29626079968043734, 0.3016601800918579, 0.29920769589287893, 0.29674467018672396, 0.3044898339680263, 0.294702410697937, 0.29352366072790964, 0.2959103839738028, 0.296380238873618, 0.29676571062632967, 0.2827062351363046, 0.2905360460281372, 0.2959988032068525, 0.29511633941105436, 0.3078305295535496, 0.3010501606123788, 0.29118557487215313, 0.29277265071868896], "val_accuracy": [0.6290000081062317, 0.7363333106040955, 0.762333333492279, 0.7646666765213013, 0.7850000262260437, 0.8023333549499512, 0.7983333468437195, 0.8236666917800903, 0.8399999737739563, 0.8420000076293945, 0.8473333120346069, 0.8526666760444641, 0.8486666679382324, 0.8553333282470703, 0.8546666502952576, 0.8600000143051147, 0.8629999756813049, 0.8610000014305115, 0.8650000095367432, 0.8643333315849304, 0.8633333444595337, 0.8553333282470703, 0.8650000095367432, 0.8690000176429749, 0.8679999709129333, 0.8666666746139526, 0.8693333268165588, 0.8690000176429749, 0.8766666650772095, 0.8756666779518127, 0.8756666779518127, 0.8703333139419556, 0.8769999742507935, 0.8820000290870667, 0.878333330154419, 0.8836666941642761, 0.8826666474342346, 0.8796666860580444, 0.8836666941642761, 0.8823333382606506, 0.8830000162124634]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8485714197158813, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.946321094654901, 0.9989857298586866, 0.7468437192194718, 0.6584658420333112, 0.6226157631935177, 0.5729560784738708, 0.5330088334060884, 0.5104239227009362, 0.47620095898131687, 0.45692734340587865, 0.43665094504566115, 0.42708831902319305, 0.3981401135955803, 0.39581978645826676, 0.381623298701294, 0.3641064134272035, 0.3534342510596935, 0.34515847285599077, 0.33010376884149695, 0.32731162402702596, 0.3175244803371021, 0.3060646319567268, 0.3168174946596279, 0.2883993949337154, 0.28564113518659856, 0.2824076588056847, 0.27684855847279344, 0.2650899494391832, 0.25174411527075397, 0.24450540885461114, 0.24538274016071382, 0.24266746588245186, 0.2383745015002103, 0.2327654125640547, 0.21645622490545416, 0.20508847434751235, 0.2084671253002142, 0.20807786072919146, 0.20114011013701513, 0.19944801137368945, 0.1964884460338465], "accuracy": [0.3419627547264099, 0.6330735683441162, 0.7232862114906311, 0.7540615797042847, 0.7643640041351318, 0.7845727205276489, 0.8012151718139648, 0.8112534880638123, 0.8260467648506165, 0.8300092220306396, 0.847840428352356, 0.8461233377456665, 0.856689989566803, 0.8569541573524475, 0.859199583530426, 0.8642187118530273, 0.8676528930664062, 0.8742570281028748, 0.8799365758895874, 0.8766345381736755, 0.8799365758895874, 0.887201189994812, 0.880729079246521, 0.8914278149604797, 0.8934090733528137, 0.8930128216743469, 0.8980319499969482, 0.9001452922821045, 0.9068815112113953, 0.9089948534965515, 0.9055606722831726, 0.9060890078544617, 0.9125610589981079, 0.9119006991386414, 0.9177123308181763, 0.9243164658546448, 0.9182406663894653, 0.9204860925674438, 0.9185048341751099, 0.9273543953895569, 0.9229956269264221], "val_loss": [0.9316961765289307, 0.5950673818588257, 0.538945095879691, 0.5065787860325405, 0.47920894622802734, 0.4383040836879185, 0.4398094756262643, 0.40464129618235994, 0.3771824325834002, 0.36847003017153057, 0.3510491507393973, 0.3516347408294678, 0.34432714326041086, 0.3419838718005589, 0.3238457441329956, 0.31588819197246004, 0.317593446799687, 0.3041847433362688, 0.30490449496677946, 0.30085826771599905, 0.30450356006622314, 0.3180784838540213, 0.30073457956314087, 0.29326365675245014, 0.3022635919707162, 0.2981308102607727, 0.2984738690512521, 0.29722065585000174, 0.2977773802621024, 0.295228157724653, 0.29582027878080097, 0.3085416981152126, 0.30674781118120464, 0.2878344314438956, 0.292873672076634, 0.29377514123916626, 0.3005084736006601, 0.3142915368080139, 0.3074567828859602, 0.295918984072549, 0.2935157758849008], "val_accuracy": [0.6290000081062317, 0.7393333315849304, 0.7630000114440918, 0.7590000033378601, 0.7823333144187927, 0.8006666898727417, 0.8016666769981384, 0.8226666450500488, 0.8376666903495789, 0.8426666855812073, 0.8493333458900452, 0.8479999899864197, 0.8500000238418579, 0.8483333587646484, 0.8600000143051147, 0.8613333106040955, 0.8600000143051147, 0.8636666536331177, 0.8656666874885559, 0.859666645526886, 0.8646666407585144, 0.8586666584014893, 0.8640000224113464, 0.8709999918937683, 0.8646666407585144, 0.8693333268165588, 0.8696666955947876, 0.8726666569709778, 0.8713333606719971, 0.871666669845581, 0.8723333477973938, 0.8676666617393494, 0.874666690826416, 0.8790000081062317, 0.8733333349227905, 0.8826666474342346, 0.8756666779518127, 0.8793333172798157, 0.8769999742507935, 0.8816666603088379, 0.8793333172798157]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 1, 0, 2, 9, 9], [4, 0, 3, 5, 0], [65, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.264616974498208, 2.2818919933703534, 2.2420265932660044, 2.9446016970311866, 2.3098329914212936, 2.304570118386779], "accuracy": [0.18082155287265778, 0.17500990629196167, 0.15612204372882843, 0.11755382269620895, 0.10381719470024109, 0.09509972482919693], "val_loss": [1.709275143487113, 1.9797708647591727, 4.385252271379743, 1.9857155254908971, 1.9752976553780692, 1.9739336286272322], "val_accuracy": [0.28999999165534973, 0.1003333330154419, 0.2669999897480011, 0.09833333641290665, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 3, 0, 0, 1, 9], [4, 0, 4, 5, 0], [36, 36, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1891428530216217, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [3444550.608590919, 472020683.49227315, 9516341817.955885, 73680355788.94202, 334745181659.41406, 1081838505328.8347, 2760925110794.617, 6089186794268.099, 12316472547680.469, 23282612186239.543, 39608869050999.63, 65431120798586.51, 101965398526264.97, 156185645220627.72, 227648488132439.75, 330899306824171.25, 453239299589361.94, 626429375714382.0, 840368890096339.0, 1093414692212009.4, 1427539321809690.5, 1818425431970329.2, 2345630373691632.0, 2927926858383641.5, 3629302632119259.5, 4543542437606598.0, 5496090811040939.0, 6682747269090876.0, 7951542442725530.0, 9574163894946546.0, 1.1334591472974494e+16, 1.361616437408465e+16, 1.5994111308019286e+16], "accuracy": [0.13261127471923828, 0.08836349099874496, 0.09760929644107819, 0.09985470771789551, 0.10289261490106583, 0.10289261490106583, 0.10302469879388809, 0.10170386731624603, 0.10342095047235489, 0.10474177449941635, 0.10381719470024109, 0.10394927859306335, 0.10579843819141388, 0.10447761416435242, 0.10685510188341141, 0.1026284471154213, 0.10355303436517715, 0.11213842034339905, 0.11319508403539658, 0.11266675591468811, 0.11240258812904358, 0.11398758739233017, 0.10606260597705841, 0.11042134463787079, 0.11491216719150543, 0.11134592443704605, 0.1142517477273941, 0.109232597053051, 0.11345925182104111, 0.10962884873151779, 0.1154404953122139, 0.10751552134752274, 0.10857218503952026], "val_loss": [28409485.714285713, 1582355382.857143, 21100315209.142857, 121680995474.28572, 456181649993.1429, 1307930151204.5715, 3068782144950.857, 6410998607286.857, 12312178065408.0, 21970372526080.0, 36723703227538.29, 58608863674368.0, 89681359423780.58, 133102124625334.86, 191803906513773.72, 270225038489307.44, 371928531468288.0, 501544595076827.44, 666585175050532.6, 870211971299035.4, 1121294014592731.4, 1428254330191872.0, 1801189293293568.0, 2249330667665115.5, 2777351646160018.5, 3407356239619218.5, 4144126970822656.0, 5001115754037248.0, 5991785394339840.0, 7137858455788398.0, 8445760823024494.0, 9957862961989924.0, 1.1675141210786084e+16], "val_accuracy": [0.04800000041723251, 0.09566666930913925, 0.10066666454076767, 0.10266666859388351, 0.10300000011920929, 0.10333333164453506, 0.10333333164453506, 0.10466666519641876, 0.10766666382551193, 0.10999999940395355, 0.11766666918992996, 0.12966667115688324, 0.14233332872390747, 0.15133333206176758, 0.15833333134651184, 0.16300000250339508, 0.1666666716337204, 0.17299999296665192, 0.1770000010728836, 0.17933332920074463, 0.18299999833106995, 0.18466666340827942, 0.18466666340827942, 0.18533332645893097, 0.18533332645893097, 0.18666666746139526, 0.18700000643730164, 0.18733333051204681, 0.18733333051204681, 0.18700000643730164, 0.18700000643730164, 0.18700000643730164, 0.18733333051204681]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 9, 8, 0, 5, 9], [4, 5, 4, 5, 1], [67, 49, 6], [1, 1, 0], [0], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08149518072605133, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 12, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11028926074504852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 7, 6, 4, 9, 6], [4, 0, 1, 5, 0, 1], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1261149.545467556, 400.7146471411781, 100663.93199740375, 26787456.288138952, 6904655792.302206, 1757981385354.2961], "accuracy": [0.09536388516426086, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14.773399353027344, 3328.4501953125, 850613.625, 217754093.7142857, 55745047990.85714, 14270732285659.428], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2038613170624.512, 114562278298723.69, 288390351016780.5, 462239856261532.0, 635889423547455.1, 809362261709763.5], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [36764469465673.14, 185586644156416.0, 334408742151314.3, 483230921635547.44, 632053216163547.4, 780875501104566.9], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 7, 0, 1, 9], [1, 0, 4, 5, 1], [79, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [3, 3, 1, 8, 1, 9], [4, 0, 4, 5, 0], [36, 36, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 3, 9, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 8, 3, 1, 6, 1, 4, 0, 0, 8, 8, 5, 1, 3, 5, 4, 3, 0], [3, 3, 4, 0, 1, 0, 3, 2, 5, 4, 1, 3], [36, 36, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 19, 12, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.negative(alpha))), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.35537327086968, 3.0522748649301406, 4.908482492938411, 8.010693810099797, 12.365360577943193, 17.9312099453764], "accuracy": [0.09457138925790787, 0.09866596013307571, 0.09972262382507324, 0.10157178342342377, 0.09747721254825592, 0.10460969805717468], "val_loss": [2.0900931358337402, 2.7702110154288158, 4.282189914158413, 6.584570612226214, 9.649605887276786, 13.519934790475029], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 3, 4, 0, 1, 9], [4, 0, 4, 5, 0], [36, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.06885714083909988, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.pow(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3006380704951055, 2.3017973167045067, 2.3003556934314364, 2.301334867041581, 2.301084848332635, 2.3002475368946675, 2.2994864050580874, 2.3012198010896725, 2.30061174849824, 2.2997740339436126, 2.2988060251313303, 2.2992924721233754, 2.299461591072118, 2.29964952553268, 2.3008277577148406], "accuracy": [0.09153348207473755, 0.0878351628780365, 0.1002509593963623, 0.09219389408826828, 0.09325055778026581, 0.09945846349000931, 0.09932637959718704, 0.1010434553027153, 0.10051512718200684, 0.10342095047235489, 0.10077928751707077, 0.1006472036242485, 0.09826971590518951, 0.10117553919553757, 0.0936468094587326], "val_loss": [1.970456804547991, 1.9698595319475447, 1.9696548325674874, 1.969489370073591, 1.9695048332214355, 1.9696504729134696, 1.9696648461478097, 1.9695540836879186, 1.969489915030343, 1.9695209094456263, 1.9695865767342704, 1.9698027883257185, 1.9700233595711845, 1.9702635492597307, 1.9704715864998954], "val_accuracy": [0.04633333161473274, 0.05299999937415123, 0.0573333315551281, 0.061666667461395264, 0.0663333311676979, 0.0689999982714653, 0.07466666400432587, 0.07800000160932541, 0.0820000022649765, 0.08399999886751175, 0.08100000023841858, 0.0806666687130928, 0.07666666805744171, 0.07433333247900009, 0.07333333045244217]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 7, 0, 5, 9], [4, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.05428571254014969, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.300918058176964, 2.302894002111785, 2.301981810612717, 2.3033994110489346, 2.303089556015714, 2.3021016745377745, 2.301281555091637, 2.303196775662885, 2.30291013118692, 2.301703814203083, 2.300913060613674, 2.301732270945301, 2.3015513359327295, 2.3007250120611142, 2.3025554009337923, 2.301691362965203, 2.301405876886733, 2.3011131092006534, 2.300342782644973, 2.3015524355994557, 2.302100652716872, 2.3002208725903186, 2.301701740392872, 2.300971750570027, 2.30066828226385, 2.301530999309745, 2.300395812876173, 2.300853850992364, 2.299806523112069, 2.2993280921928982, 2.3013321663079687, 2.3020015266734877, 2.3015165486119726, 2.3020314315936474, 2.3019744698334645, 2.299470361449605, 2.300512268684638, 2.3007412948124695, 2.300792908608685, 2.301034264702445, 2.299731618834367, 2.3014945388076455, 2.301650266196387, 2.3006696460458342, 2.300234835082671, 2.300528926053272, 2.300836798600265, 2.3001328952843725, 2.299686198504751, 2.3008429232904577, 2.300739210767674, 2.299972010987735, 2.300976701495103], "accuracy": [0.08968432247638702, 0.08598599582910538, 0.09800554811954498, 0.08809932321310043, 0.08889182657003403, 0.09338264167308807, 0.09232597798109055, 0.09113723784685135, 0.09536388516426086, 0.09602430462837219, 0.08928807079792023, 0.09140139818191528, 0.09179764986038208, 0.09285431355237961, 0.09113723784685135, 0.0940430611371994, 0.09536388516426086, 0.09192973375320435, 0.09866596013307571, 0.09100515395402908, 0.08717474341392517, 0.09721305221319199, 0.09272222965955734, 0.09126931428909302, 0.09655263274908066, 0.09721305221319199, 0.09325055778026581, 0.09179764986038208, 0.09509972482919693, 0.09470347315073013, 0.0936468094587326, 0.09047681838274002, 0.09351472556591034, 0.09325055778026581, 0.09074098616838455, 0.09285431355237961, 0.09298639744520187, 0.09430722147226334, 0.09430722147226334, 0.09351472556591034, 0.0956280529499054, 0.0940430611371994, 0.09021265059709549, 0.09457138925790787, 0.09959053993225098, 0.09338264167308807, 0.09192973375320435, 0.09219389408826828, 0.09681680053472519, 0.09509972482919693, 0.09430722147226334, 0.1002509593963623, 0.09747721254825592], "val_loss": [1.9709570067269462, 1.9708982876368932, 1.970846312386649, 1.970792634146554, 1.970740522657122, 1.9706967898777552, 1.97066102709089, 1.9706189973013741, 1.970573902130127, 1.9705302374703544, 1.9704902512686593, 1.9704488345554896, 1.9704016276768275, 1.9703741073608398, 1.9703363009861536, 1.9703011512756348, 1.9702702930995397, 1.97024324962071, 1.970207827431815, 1.9701739719935827, 1.9701427732195174, 1.9701169558933802, 1.970085688999721, 1.9700476782662528, 1.97002226965768, 1.9699927057538713, 1.9699671609061105, 1.9699441364833288, 1.9699280602591378, 1.969911779676165, 1.969895567212786, 1.9698666845049178, 1.969850744519915, 1.9698234966823034, 1.9698010172162737, 1.9697881426130022, 1.9697685241699219, 1.9697541509355818, 1.9697459084647042, 1.9697291510445731, 1.9697134154183524, 1.9696968623570033, 1.9696784019470215, 1.9696681158883231, 1.9696505410330636, 1.9696429797581263, 1.9696238381522042, 1.9696051733834403, 1.9695954322814941, 1.9695803097316198, 1.969576290675572, 1.969576154436384, 1.9695705005100794], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.0416666679084301, 0.04266666620969772, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.044333335012197495, 0.04466666653752327, 0.044333335012197495, 0.044333335012197495, 0.04500000178813934, 0.04533333331346512, 0.045666664838790894, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04833333194255829, 0.04866666719317436, 0.04933333396911621, 0.04933333396911621, 0.050333332270383835, 0.050333332270383835, 0.052000001072883606, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.05400000140070915, 0.05400000140070915, 0.05433333292603493, 0.054666668176651, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.055666666477918625, 0.055666666477918625, 0.0560000017285347, 0.0560000017285347, 0.05666666850447655, 0.056333333253860474, 0.05700000002980232, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.057999998331069946, 0.057999998331069946, 0.057999998331069946, 0.057999998331069946]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 3, 8, 0, 5, 9], [5, 2, 4, 5, 0], [36, 49, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.300938466662476, 2.302984874167573, 2.3021457877062756, 2.3036421434581085, 2.3033906758784175, 2.3024630722919586], "accuracy": [0.08981640636920929, 0.08545766770839691, 0.09681680053472519, 0.08849557489156723, 0.08757099509239197, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 3, 0, 0, 8, 9], [2, 0, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.300938466662476, 2.302984874167573, 2.3021457877062756, 2.3036421434581085, 2.3033906758784175, 2.3024630722919586], "accuracy": [0.08981640636920929, 0.08545766770839691, 0.09681680053472519, 0.08849557489156723, 0.08757099509239197, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 0, 1, 9], [4, 0, 4, 5, 0], [99, 56, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.300938466662476, 2.302984874167573, 2.3021457877062756, 2.3036421434581085, 2.3033906758784175, 2.3024630722919586], "accuracy": [0.08981640636920929, 0.08545766770839691, 0.09681680053472519, 0.08849557489156723, 0.08757099509239197, 0.09245806187391281], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 0, 1, 9], [4, 4, 4, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.030571429058909416, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301001109435747, 2.3036466310871684, 2.304024015703001, 2.307919978056255, 2.3112626178720292, 2.315784890276015, 2.3228270115082084, 2.3395186542850586, 2.3736006266657292, 2.47282663088874, NaN, NaN, NaN, NaN], "accuracy": [0.08968432247638702, 0.08374059200286865, 0.09245806187391281, 0.08426892012357712, 0.07726852595806122, 0.08017434924840927, 0.07991018146276474, 0.07779685407876968, 0.08519349992275238, 0.08915598690509796, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9712261472429549, 1.9719147682189941, 1.9732633318219865, 1.9753315789358956, 1.9783357211521693, 1.9825219426836287, 1.9883124487740653, 1.999093873160226, 2.0284973553248813, 2.237795829772949, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.028999999165534973, 0.02500000037252903, 0.023000000044703484, 0.026333333924412727, 0.0430000014603138, 0.07533333450555801, 0.09366666525602341, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]