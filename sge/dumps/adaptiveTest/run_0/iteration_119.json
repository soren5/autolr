[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.767714262008667, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.296310969882905, 2.2803288666233015, 2.2619441588793165, 2.2431755512145846, 2.2198020017472997, 2.1916383578714016, 2.159197550471181, 2.1138546149082913, 2.0601213544256827, 2.002988378715994, 1.9257626864636468, 1.8451564137363445, 1.7530648743456003, 1.6599466128513687, 1.585079665307466, 1.4991869330799827, 1.430874703472411, 1.371027246316379, 1.3231215877398177, 1.2910323340454122, 1.2296681014412287, 1.189087431019229, 1.169466670320617, 1.1379587962532622, 1.0989127298938821, 1.0746112208655483, 1.069568748534584, 1.040250790038869, 1.0268013457486092, 1.0180929368276952, 0.9880920779734964, 0.9778339427460013, 0.9645195233823444, 0.9475518925755866, 0.9501348927886715, 0.9356513495978079, 0.9259262561577658, 0.9061688649545744, 0.9033516371144658, 0.906735771029239, 0.886988334093017, 0.8773206561595189, 0.8671753423451086, 0.8588480343829371, 0.8530056814885395, 0.8430870310143237, 0.8372027106005455, 0.8301879804620276, 0.8345719378905573, 0.8284726976608289, 0.8269855501534932, 0.8189401482987823, 0.8126050604254169, 0.8065023533640725, 0.8031195262010308, 0.8036521519526294, 0.7943930825017557, 0.788823166299474, 0.7914324355100234, 0.7803618151041589, 0.7845795758805648, 0.7742079945209555, 0.7736275653482633, 0.7593800789250863, 0.7595304132074712, 0.7534177156880925, 0.7513009953209123, 0.7446525258363561, 0.7501371689303172, 0.7491272349068517, 0.7402615225184406, 0.7396231934599448, 0.7367416231497766, 0.7321947185181671, 0.7266909052289283, 0.7346254471916297, 0.7170441550128983, 0.7190303230455696, 0.7204574357406763, 0.7144687040103126, 0.7140661514572196, 0.7168334803765776, 0.7047514025529834, 0.7087481068566553, 0.701005424821476, 0.7057604714627783], "accuracy": [0.10645885765552521, 0.1516312211751938, 0.19891692698001862, 0.23695680499076843, 0.2790912687778473, 0.31739532947540283, 0.3385286033153534, 0.37445515394210815, 0.39307886362075806, 0.41143837571144104, 0.42530709505081177, 0.44406285881996155, 0.46770572662353516, 0.48474442958831787, 0.4982168674468994, 0.5169726610183716, 0.5300488471984863, 0.5437855124473572, 0.5531634092330933, 0.5531634092330933, 0.5802403688430786, 0.591731607913971, 0.5989961624145508, 0.6046757102012634, 0.6140536069869995, 0.6225069165229797, 0.6267336010932922, 0.6370360851287842, 0.6358473300933838, 0.6431118845939636, 0.6469422578811646, 0.6581693291664124, 0.6565843224525452, 0.6618676781654358, 0.6625280380249023, 0.6618676781654358, 0.6716417670249939, 0.6754721999168396, 0.6839255094528198, 0.6704530715942383, 0.687491774559021, 0.6861709356307983, 0.6884163022041321, 0.6923788189888, 0.6911900639533997, 0.6972658634185791, 0.7037379741668701, 0.7008321285247803, 0.6959450244903564, 0.7049266695976257, 0.707040011882782, 0.7046625018119812, 0.7066437602043152, 0.7084929347038269, 0.71100252866745, 0.7055870890617371, 0.7150970697402954, 0.7148329019546509, 0.7147008180618286, 0.7098137736320496, 0.7173424959182739, 0.7215691208839417, 0.7191916704177856, 0.7252674698829651, 0.7269845604896545, 0.7224937081336975, 0.72672039270401, 0.7296261787414551, 0.7268524765968323, 0.7260599732398987, 0.7246070504188538, 0.7288337349891663, 0.7284374833106995, 0.7347774505615234, 0.7347774505615234, 0.7345132827758789, 0.735569953918457, 0.7353057861328125, 0.7362303733825684, 0.7383436560630798, 0.7357020378112793, 0.7387399077415466, 0.7413815855979919, 0.7452120184898376, 0.7453441023826599, 0.741909921169281], "val_loss": [1.9558837073189872, 1.9393598692757743, 1.9217243875776018, 1.9013670512608118, 1.877138410295759, 1.8473894255501884, 1.8103651319231306, 1.7642357008797782, 1.7078124455043249, 1.6414949212755476, 1.5642147404806954, 1.47867294720241, 1.3894688401903426, 1.3000740664345878, 1.2163105010986328, 1.140054498400007, 1.074032919747489, 1.0174450533730643, 0.9695511886051723, 0.9296578679765973, 0.8938367366790771, 0.8625468526567731, 0.8362200600760323, 0.8126326118196759, 0.7909906591687884, 0.7718289920261928, 0.7559335742677961, 0.7417463745389666, 0.7290465150560651, 0.7157733270100185, 0.7053861447743007, 0.6952878066471645, 0.6844092096601214, 0.6763205868857247, 0.6674096754619053, 0.6606478520802089, 0.6534419911248344, 0.6461064985820225, 0.6393270833151681, 0.6348721810749599, 0.6276206118719918, 0.6218949215752738, 0.6159486089433942, 0.6106225763048444, 0.6066193240029472, 0.601577707699367, 0.5970521484102521, 0.5931673390524728, 0.5899807214736938, 0.5856198072433472, 0.5842374222619193, 0.5798275300434658, 0.5768494435719081, 0.572561366217477, 0.5693771498543876, 0.5672018868582589, 0.5629683051790509, 0.56172662121909, 0.5592198031289237, 0.55558899470738, 0.5548114606312343, 0.5513551916394915, 0.5490392787115914, 0.5462587901524135, 0.5429650715419224, 0.5410516602652413, 0.539273704801287, 0.5371338129043579, 0.5353846549987793, 0.5331953934260777, 0.5313620056424823, 0.5301520654133388, 0.5283325740269252, 0.5263524225779942, 0.5243045602525983, 0.5223062379019601, 0.5211260999952044, 0.5197018725531442, 0.5183670180184501, 0.5171033314296177, 0.5157628570284162, 0.5135399103164673, 0.5118463379996163, 0.510833603995187, 0.5087182351521083, 0.5078461510794503], "val_accuracy": [0.15966667234897614, 0.29600000381469727, 0.3566666543483734, 0.38966667652130127, 0.4230000078678131, 0.4490000009536743, 0.4749999940395355, 0.4893333315849304, 0.515333354473114, 0.5350000262260437, 0.5523333549499512, 0.5630000233650208, 0.581333339214325, 0.5920000076293945, 0.6073333621025085, 0.6243333220481873, 0.6480000019073486, 0.6576666831970215, 0.6696666479110718, 0.6769999861717224, 0.6856666803359985, 0.6899999976158142, 0.6919999718666077, 0.6949999928474426, 0.6996666789054871, 0.706333339214325, 0.7103333473205566, 0.7139999866485596, 0.7126666903495789, 0.718999981880188, 0.7193333506584167, 0.718666672706604, 0.7286666631698608, 0.7260000109672546, 0.7310000061988831, 0.734333336353302, 0.7369999885559082, 0.737666666507721, 0.7406666874885559, 0.7419999837875366, 0.7459999918937683, 0.7459999918937683, 0.7486666440963745, 0.7486666440963745, 0.7509999871253967, 0.753000020980835, 0.7523333430290222, 0.7566666603088379, 0.753000020980835, 0.7616666555404663, 0.7580000162124634, 0.7606666684150696, 0.7590000033378601, 0.7613333463668823, 0.7649999856948853, 0.7609999775886536, 0.7680000066757202, 0.762666642665863, 0.7673333287239075, 0.7689999938011169, 0.7666666507720947, 0.7706666588783264, 0.768666684627533, 0.7699999809265137, 0.7716666460037231, 0.7726666927337646, 0.7723333239555359, 0.7723333239555359, 0.7733333110809326, 0.7753333449363708, 0.7766666412353516, 0.7760000228881836, 0.777999997138977, 0.778333306312561, 0.7760000228881836, 0.778333306312561, 0.7763333320617676, 0.7789999842643738, 0.7796666622161865, 0.7770000100135803, 0.7823333144187927, 0.7776666879653931, 0.7793333530426025, 0.7816666960716248, 0.7803333401679993, 0.7796666622161865]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7514285445213318, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.29455172525909, 2.2780713047160606, 2.2592238609297337, 2.2396003235096567, 2.2149195718003174, 2.184926056669782, 2.1498613868643344, 2.1009928328627843, 2.043252195144893, 1.9821904927291387, 1.9007614903745398, 1.816759341255297, 1.7233835790985848, 1.630439427802434, 1.5569627943008708, 1.4739145325190985, 1.4087493205823132, 1.3516601236378907, 1.306362250650784, 1.276335148731983, 1.2167039539489324, 1.1779737731390436, 1.1587683867469771, 1.1285380411614139, 1.0903757674866317, 1.066681861562531, 1.0627553734749757, 1.0341096965470853, 1.0206509143795084, 1.0123961923176257, 0.9830378649524804, 0.9725806391580843, 0.9597745787717915, 0.9429709258379954, 0.9463444143915536, 0.9318421110107348, 0.9223794097740416, 0.9036492113943633, 0.9004694041385785, 0.903909850673212, 0.8845329663505045, 0.8752594429819008, 0.8645068039715865, 0.8564552059892839, 0.8507078732513339, 0.8408809548686477, 0.8353380784776154, 0.8287890277140648, 0.8327053472224543, 0.8265918106797223, 0.8256544476376706, 0.8174488546589755, 0.8116327044025718, 0.8052855788708804, 0.8015865836287093, 0.8024826624909601, 0.7931294179611422, 0.7874535778021973, 0.7904957584921616, 0.7796564248763591, 0.7835501109871961, 0.7727684418223931], "accuracy": [0.11134592443704605, 0.15757495164871216, 0.20353981852531433, 0.24342887103557587, 0.28463876247406006, 0.3229427933692932, 0.34605732560157776, 0.38105931878089905, 0.39730551838874817, 0.4169858694076538, 0.43243956565856934, 0.44868576526641846, 0.4741777777671814, 0.49108439683914185, 0.5050851702690125, 0.5222559571266174, 0.5366530418395996, 0.5462950468063354, 0.557390034198761, 0.55791836977005, 0.5819574594497681, 0.5952978730201721, 0.602562427520752, 0.6089023947715759, 0.6169594526290894, 0.6244881749153137, 0.6300356388092041, 0.6400739550590515, 0.6394135355949402, 0.644300639629364, 0.6490556001663208, 0.6606789231300354, 0.6609430909156799, 0.6643772125244141, 0.6645092964172363, 0.6641130447387695, 0.6719059348106384, 0.6756042838096619, 0.6843217611312866, 0.6695284843444824, 0.6873596906661987, 0.6872276067733765, 0.6877558827400208, 0.6933034062385559, 0.691850483417511, 0.6980583667755127, 0.7042662501335144, 0.7017567157745361, 0.6977941989898682, 0.7053229212760925, 0.7073041796684265, 0.7049266695976257, 0.7061154246330261, 0.7082287669181824, 0.711530864238739, 0.7061154246330261, 0.7162858247756958, 0.7140403985977173, 0.7148329019546509, 0.7084929347038269, 0.7182670831680298, 0.7217012047767639], "val_loss": [1.9538211822509766, 1.936945983341762, 1.9186107771737235, 1.8972085544041224, 1.871342658996582, 1.839451585497175, 1.7996247836521693, 1.749702044895717, 1.6891132082257951, 1.6184357234409876, 1.5371498720986503, 1.4497647626059396, 1.359095675604684, 1.2711216381617956, 1.1894098690577917, 1.1161842686789376, 1.0540545327322823, 1.0006444454193115, 0.9543869495391846, 0.9170467512948173, 0.8830371924809047, 0.8528684377670288, 0.8283164160592216, 0.8055437462670463, 0.7841993570327759, 0.7664733273642403, 0.7510490417480469, 0.7377612250191825, 0.7251557792936053, 0.7113461664744786, 0.7030361550194877, 0.6949060474123273, 0.6816689627511161, 0.674601571900504, 0.6641508340835571, 0.6588592529296875, 0.6515534945896694, 0.6439391885484967, 0.6373386383056641, 0.6325392382485526, 0.6269919191087995, 0.6206907544817243, 0.614263789994376, 0.6090671505246844, 0.6054305349077497, 0.6012663500649589, 0.5954128844397408, 0.5916741234915597, 0.5902508667537144, 0.584728615624564, 0.5829164981842041, 0.5800946950912476, 0.5762440477098737, 0.5717027698244367, 0.5694504124777657, 0.5686347484588623, 0.56198103087289, 0.5611159120287214, 0.55942359992436, 0.5550687994275775, 0.5543763637542725, 0.551673139844622], "val_accuracy": [0.18400000035762787, 0.304666668176651, 0.3619999885559082, 0.40433332324028015, 0.42633333802223206, 0.4583333432674408, 0.48266667127609253, 0.49399998784065247, 0.5266666412353516, 0.5410000085830688, 0.5563333630561829, 0.5683333277702332, 0.5853333473205566, 0.5963333249092102, 0.6140000224113464, 0.6330000162124634, 0.652999997138977, 0.6596666574478149, 0.6703333258628845, 0.6796666383743286, 0.6880000233650208, 0.6916666626930237, 0.6963333487510681, 0.6959999799728394, 0.70333331823349, 0.7053333520889282, 0.7129999995231628, 0.715666651725769, 0.7126666903495789, 0.7206666469573975, 0.7193333506584167, 0.7146666646003723, 0.7303333282470703, 0.7246666550636292, 0.734000027179718, 0.7316666841506958, 0.7390000224113464, 0.7429999709129333, 0.737666666507721, 0.7453333139419556, 0.7440000176429749, 0.746999979019165, 0.749666690826416, 0.75, 0.7493333220481873, 0.7483333349227905, 0.7580000162124634, 0.7573333382606506, 0.7519999742507935, 0.762333333492279, 0.7630000114440918, 0.7590000033378601, 0.7549999952316284, 0.7580000162124634, 0.765333354473114, 0.7606666684150696, 0.7673333287239075, 0.7636666893959045, 0.7639999985694885, 0.765333354473114, 0.7649999856948853, 0.7673333287239075]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.37771427631378174, "mapping_values": [1, 4, 4, 2, 2, 0, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.262343486349549, 2.2931090404864207, 2.304892464242103, 2.301574757479878, 2.20447447960954, 2.445194428764739, 2.304195307690186, 2.302628415623802, 2.299866258161195, 2.274202025498791], "accuracy": [0.22652225196361542, 0.15717871487140656, 0.10685510188341141, 0.11200633645057678, 0.19878484308719635, 0.1550653874874115, 0.09998679161071777, 0.10408136248588562, 0.12574297189712524, 0.1698586642742157], "val_loss": [1.8373465538024902, 1.9768847056797572, 1.973581041608538, 1.9659991945539201, 1.6224222864423479, 1.9760279655456543, 1.9737872396196638, 1.9726243700299944, 1.9652252878461565, 1.9098228045872279], "val_accuracy": [0.3076666593551636, 0.10333333164453506, 0.1146666631102562, 0.23899999260902405, 0.36800000071525574, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.17666666209697723, 0.1756666600704193]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [58, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 34], [1, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.313142865896225, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2557032016667993, 2.325625734212077, 2.21295819706401, 2.2875045540940255, 2.3049089458593053, 2.3035821272255865, 2.30299343916057, 2.303035901569341], "accuracy": [0.21357811987400055, 0.13353586196899414, 0.18333113193511963, 0.16338661313056946, 0.09985470771789551, 0.09034473448991776, 0.09945846349000931, 0.0940430611371994], "val_loss": [2.1534035546439037, 1.645876339503697, 1.9108546801975794, 1.9775398118155343, 1.9743706158229284, 1.973825318472726, 1.973736354282924, 1.9736674172537667], "val_accuracy": [0.10066666454076767, 0.27033331990242004, 0.27266666293144226, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [9, 3, 7, 9, 1, 9], [3, 4, 4, 2], [26, 34], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023014087813043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 4, 1, 9], [4, 0, 3, 2, 4], [26, 34, 91], [0, 0, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 2, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 1, 0, 2], [22, 55, 30], [1, 1, 0], [0], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1290719657.470405, 26484489065.463478, 132441159695.95985, 401351475360.13947, 925805273779.413, 1840199943319.0776], "accuracy": [0.09430722147226334, 0.09681680053472519, 0.10157178342342377, 0.09932637959718704, 0.1006472036242485, 0.1018359512090683], "val_loss": [5311347565.714286, 48678284726.85714, 185694631643.42856, 495500619190.8571, 1082608582656.0, 2088418485394.2856], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [6, 6, 7, 7, 7, 9], [4, 0, 5, 5, 3, 1], [26, 55, 83], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 0, 1, 0, 1, 1], [7, 4, 5, 2, 9], [2, 1, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 11, 11, 5, 6, 1, 1, 1, 0, 1, 0, 8, 5, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [1], [8], [5], [], [0, 0, 1, 1, 1], [0, 4, 5, 2, 9], [1, 3, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, sigma))", "other_info": {"loss": [1236635174.5857136, 23701874464.83265, 110093770056.25888, 307572326592.60016, 659417981225.5565, 1210553549494.6592], "accuracy": [0.09325055778026581, 0.09985470771789551, 0.10130762308835983, 0.09879804402589798, 0.09906221181154251, 0.10342095047235489], "val_loss": [4657283364.571428, 37247155053.71429, 125696353426.28572, 297935203766.8571, 581887346980.5714, 1005477279451.4286], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 8, 7, 9, 1, 9], [4, 1, 4, 2], [26, 34], [0, 1, 0], [1], [8], [0], [91], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023014087813043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 6, 1, 9, 1, 9], [4, 0, 1, 5], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1314287892.1850877, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1640470176935196, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 5, 2, 5, 5, 2, 5, 0, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 4, 2], [26, 34], [0, 1, 0], [1], [8], [5], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 7, 9, 1, 9], [4, 0, 2, 2], [26, 55, 83], [0, 1, 0], [1], [8], [0], [45], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 6, 6, 4, 2, 2, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 1, 3, 9, 1, 9], [0, 0, 4, 2], [26, 55, 83], [1, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023014087813043, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [1, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 9, 9, 6, 2, 0, 1, 5, 2], [0, 2, 2, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [8, 3, 7, 9, 1, 9], [4, 0, 0, 2], [92, 55, 61], [1, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 5, 3, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55, 83], [1, 1, 0], [1], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.04399999976158142, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2973763722911125, 2.290523819683439, 2.454090223052892, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.12759213149547577, 0.10962884873151779, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9672194889613561, 2.02316038949149, 7.67314829145159, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.06266666948795319, 0.007666666526347399, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 5, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [5, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3023388190528324, 2.303405457987777, 2.3025063553254492, 2.3033198918869244, 2.303417115242348, 2.3023526702243986], "accuracy": [0.08994849026203156, 0.08968432247638702, 0.09100515395402908, 0.08585391938686371, 0.08955223858356476, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999036516462, 1.970998900277274, 1.97099883215768], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 5, 5, 2, 5, 0, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 55], [0, 1, 0], [0], [8], [5], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023388190528324, 2.303405489478806, 2.3025065172523194, 2.30332017977791, 2.3034175290974486, 2.302353039078819], "accuracy": [0.08994849026203156, 0.08968432247638702, 0.09100515395402908, 0.08585391938686371, 0.08955223858356476, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1], [1, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 91, 2], [0, 1, 0], [0], [8], [3], [], [0, 0, 0, 1, 0], [0, 5, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.square(beta)))", "other_info": {"loss": [2.3023389629983253, 2.3034058223704714, 2.3025069670701748, 2.3033207105592006, 2.303418370317301, 2.302354222039316], "accuracy": [0.08994849026203156, 0.08981640636920929, 0.09100515395402908, 0.08585391938686371, 0.08955223858356476, 0.09126931428909302], "val_loss": [1.9709994452340263, 1.9709995814732142, 1.9709996495928084, 1.9709998539515905, 1.9710000583103724, 1.9710003989083427], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478]}}]