[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 2, 2, 5, 8, 6, 3, 5, 5, 8, 2], [2, 2, 1, 1, 2, 2, 0, 1], [35, 60, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9557374450808047, 2.3038268897039322, 2.2763617090372095, 2.26754006116366, 1.927541371145111, 1.6826957744803206, 1.1909736135632307, 1.2952358815191665, 0.8950789951141311, 0.7604740870359504, 0.7765023690236165, 0.755884476609281, 0.6915437413354701, 0.6790733275050107, 0.6287732375233386, 0.6211584470118073, 0.5934659638629692, 0.5907211149089986, 0.5897224204667162, 0.5606464281876987, 0.5586893736898876, 0.5266570170809642, 0.5363018999498408, 0.49531661278504613, 0.554763847641453, 0.5299030111891293, 0.4900714425937674, 0.44938118530853377], "accuracy": [0.1740853190422058, 0.10619468986988068, 0.17778365314006805, 0.23537181317806244, 0.3171311616897583, 0.46889445185661316, 0.6189407110214233, 0.5868445634841919, 0.6847180128097534, 0.7285695672035217, 0.7232862114906311, 0.72672039270401, 0.7407211661338806, 0.7491744756698608, 0.7648923397064209, 0.7680623531341553, 0.7721568942070007, 0.7751948237419128, 0.7741381525993347, 0.7893276810646057, 0.7901201844215393, 0.7988376617431641, 0.7956677079200745, 0.8119139075279236, 0.7961959838867188, 0.7998943328857422, 0.8185180425643921, 0.8315942287445068], "val_loss": [1.9785950524466378, 1.96446807043893, 1.8285444123404366, 1.7104848793574743, 1.4063597066061837, 1.1714090960366386, 0.699651973588126, 0.6803853852408273, 0.5809640203203473, 0.5190856967653547, 0.5445569753646851, 0.5407257931573051, 0.5292354311261859, 0.4988806588309152, 0.48204348768506733, 0.46389404364994596, 0.5096121856144497, 0.4986776454108102, 0.44306365081242155, 0.43740691457475933, 0.4314994215965271, 0.43076981816973003, 0.4189544490405491, 0.5081146614892142, 0.43940424067633493, 0.4676505838121687, 0.44803241321018766, 0.4194651586668832], "val_accuracy": [0.09933333098888397, 0.1626666635274887, 0.437666654586792, 0.2953333258628845, 0.5733333230018616, 0.6363333463668823, 0.7260000109672546, 0.7160000205039978, 0.7429999709129333, 0.7720000147819519, 0.7620000243186951, 0.7580000162124634, 0.765999972820282, 0.7736666798591614, 0.7893333435058594, 0.79666668176651, 0.7670000195503235, 0.7726666927337646, 0.8009999990463257, 0.8090000152587891, 0.8130000233650208, 0.815666675567627, 0.8256666660308838, 0.7633333206176758, 0.7933333516120911, 0.8053333163261414, 0.8043333292007446, 0.8083333373069763]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 2, 1, 0, 8, 6, 5, 2, 5, 8, 0], [2, 2, 2, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.7348571419715881, "mapping_values": [1, 15, 15, 10, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.sqrt(alpha))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.95573763440487, 2.303874702690426, 2.2437882798459032, 1.9094511190063492, 2.225460827783618, 1.8117590032280744, 1.2089672803626856, 0.9803373261591415, 0.861554516895399, 0.855382249001357, 0.7977551837497148, 0.7969668705575832, 0.7298937542421817, 0.6751392572515944, 0.6708267232556432], "accuracy": [0.17395325005054474, 0.10645885765552521, 0.19891692698001862, 0.3681151866912842, 0.2082948088645935, 0.4325716495513916, 0.5937128663063049, 0.6604147553443909, 0.6915863156318665, 0.6977941989898682, 0.7187954187393188, 0.7177387475967407, 0.7273808121681213, 0.7473253011703491, 0.7543256878852844], "val_loss": [1.9786136490958077, 1.9645816939217704, 1.3348910808563232, 1.966630526951381, 1.48396931375776, 1.0254545552389962, 0.6882385185786656, 0.6256669759750366, 0.6447106088910785, 0.6294271264757428, 0.5611301149640765, 0.5367440666471209, 0.5566281250544957, 0.5750995193208966, 0.5872281449181693], "val_accuracy": [0.09933333098888397, 0.16633333265781403, 0.4309999942779541, 0.11933333426713943, 0.476666659116745, 0.6150000095367432, 0.718666672706604, 0.7239999771118164, 0.731333315372467, 0.7566666603088379, 0.749666690826416, 0.7476666569709778, 0.7563333511352539, 0.7366666793823242, 0.7486666440963745]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 8, 2, 5, 9, 6, 3, 4, 5, 8, 2, 3, 2, 4, 7, 5, 5, 5, 8, 7, 9], [1, 2, 0, 1, 2, 0, 0, 2, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [35, 36, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 3, 8, 2, 0, 9], [2, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.4414285719394684, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.955740108119656, 2.304134020542724, 2.1334859412879426, 2.190666931085835, 7.161582886251586, 2.306706382771367, 2.3041865327465, 2.303339008264034], "accuracy": [0.17434948682785034, 0.10672302544116974, 0.24118345975875854, 0.25082552433013916, 0.10830801725387573, 0.09813763201236725, 0.09853387624025345, 0.09351472556591034], "val_loss": [1.9786263874598913, 1.9660369328090124, 1.2109738418034144, 2.1536408833095004, 1.9795036315917969, 1.974431106022426, 1.973926339830671, 1.9737347875322615], "val_accuracy": [0.09933333098888397, 0.14033333957195282, 0.45233333110809326, 0.21833333373069763, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 2, 2, 5, 8, 6, 3, 4, 5, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [35, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.38999998569488525, "mapping_values": [1, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), alpha)), tf.math.sqrt(alpha))), tf.math.add(alpha, grad)))))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.955762439384405, 2.3039471972746037, 2.180578430488424, 2.263018226705412, 2.9543801580579476, 2.310231768680271, 2.304104603040708, 2.3025935893171514, 2.3015928814172146], "accuracy": [0.17421740293502808, 0.10659094154834747, 0.2056531459093094, 0.16312244534492493, 0.17355699837207794, 0.1014397069811821, 0.09232597798109055, 0.09826971590518951, 0.10157178342342377], "val_loss": [1.978663103921073, 1.9652201788766044, 1.996708529336112, 1.5933362415858678, 1.9876106807163783, 1.97563294001988, 1.9738150324140276, 1.9732372420174735, 1.972017560686384], "val_accuracy": [0.09933333098888397, 0.18833333253860474, 0.1003333330154419, 0.3970000147819519, 0.09833333641290665, 0.09966666996479034, 0.09833333641290665, 0.10199999809265137, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 2, 2, 5, 8, 6, 3, 4, 5, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [35, 60, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.3700000047683716, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.square(grad)))))))), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.955739532243212, 2.304020290975605, 2.1893668264493082, 2.228929875438964, 2.3630959761219885, 2.30693821733213, 2.3031196206268807, 2.3005417121037706, 2.275575012751952], "accuracy": [0.17395325005054474, 0.10606260597705841, 0.2071060687303543, 0.1706511676311493, 0.24514594674110413, 0.1006472036242485, 0.10011887550354004, 0.108440101146698, 0.160084530711174], "val_loss": [1.9786382402692522, 1.9652830532618932, 1.9483650071280343, 1.5363056659698486, 1.9812682696751185, 1.974475383758545, 1.9726779120309013, 1.967452049255371, 1.8054840905325753], "val_accuracy": [0.09933333098888397, 0.14000000059604645, 0.17800000309944153, 0.3970000147819519, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.1536666601896286, 0.30266666412353516]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 9, 2, 8, 5, 6, 4, 9, 8, 0], [1, 2, 1, 1, 2, 0, 0, 1], [32, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [0, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.2882857024669647, "mapping_values": [1, 8, 8, 6, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.2404662268178464, 2.8025524946267435, 2.3049170613493573, 2.303354221831979, 2.303068899664314, 2.3029721847315505], "accuracy": [0.23114515841007233, 0.16523577272891998, 0.09760929644107819, 0.09668471664190292, 0.0952318087220192, 0.09470347315073013], "val_loss": [1.7287073816571916, 1.976620878492083, 1.9743956157139368, 1.9739256586347307, 1.9736968449183874, 1.9736979348318917], "val_accuracy": [0.35733333230018616, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 1, 0, 5, 8, 6, 3, 4, 9, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [35, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.21285714209079742, "mapping_values": [1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, alpha))))))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9557365638988364, 2.303716917111023, 2.218676054498161, 2.2777070036779667, 4.215428759503468, 2.3036098315526528, 2.30313206449586, 2.3034069779967554, 2.303127323647437], "accuracy": [0.1740853190422058, 0.10659094154834747, 0.23603223264217377, 0.13789460062980652, 0.11398758739233017, 0.09919429570436478, 0.09879804402589798, 0.09272222965955734, 0.09417514503002167], "val_loss": [1.9785808835710799, 1.9637833322797502, 1.9757347106933594, 1.8949239594595773, 1.9751336915152413, 1.9737427575247628, 1.9736768177577428, 1.9737097195216589, 1.9736670085362025], "val_accuracy": [0.09933333098888397, 0.1446666717529297, 0.10000000149011612, 0.17599999904632568, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 1, 0, 1, 8, 6, 5, 4, 9, 8, 2], [2, 2, 2, 1, 2, 0, 0, 1], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [1, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1, 1], [1, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.13342857360839844, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [4.779015486408234, 2.867603520612675, 2.36250624422384, 3.632308661709404, 2.870834923722662, 2.525245397224119, 2.5334168851903054], "accuracy": [0.1806894689798355, 0.11200633645057678, 0.14212125539779663, 0.11319508403539658, 0.1154404953122139, 0.10117553919553757, 0.09972262382507324], "val_loss": [2.799830641065325, 2.1432629993983676, 2.0758609771728516, 2.187046800340925, 2.2187657356262207, 2.3532054083687917, 2.3031073978969028], "val_accuracy": [0.12300000339746475, 0.16300000250339508, 0.14366666972637177, 0.13866665959358215, 0.09833333641290665, 0.10066666454076767, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [4, 1, 0, 5, 8, 6, 3, 4, 9, 1, 2], [2, 2, 1, 1, 2, 2, 0, 1], [35, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 1, 0, 5, 9, 6, 3, 4, 9, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [35, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [1, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [8, 2, 5, 5, 8, 6, 3, 4, 5, 8, 2, 1, 8, 0, 4, 5, 8, 1, 3, 1, 7, 6, 3, 7, 3, 0, 7, 2, 9, 0, 8, 3, 6, 6, 7, 7, 8, 1, 3, 2, 1, 8, 4, 3, 6, 5, 4, 5, 5, 8, 1, 8, 7, 4, 1, 0, 5], [2, 2, 1, 1, 2, 0, 2, 1, 2, 1, 2, 3, 3, 3, 2, 3, 0, 2, 3, 3, 3, 0, 0, 1, 3, 1, 0, 0, 2, 1, 2, 0, 0, 3], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [2, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [6, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 91, 91, 57, 34, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))))))))), tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), grad), tf.math.add(alpha, grad)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.square(alpha)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, grad)))))), tf.math.pow(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))))))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 0, 1, 5, 8, 6, 5, 5, 9, 8], [2, 2, 1, 1, 2, 0, 0, 1], [35, 60, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [1, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [1, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 2, 1, 2, 8, 6, 5, 2, 5, 8, 0], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [1, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(alpha, tf.math.square(grad)))))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [8, 1, 8, 5, 8, 6, 3, 4, 4, 8, 2], [2, 2, 1, 1, 2, 0, 0, 1], [0, 39, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [4, 3, 3, 2], [41, 55], [0, 1, 0], [0], [8], [4], [], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [8, 5, 1, 5, 8, 6, 5, 5, 9, 8], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [1, 1, 3, 0], [41, 55], [1, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1, 1], [2, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), alpha)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 2, 0, 0, 8, 6, 5, 2, 5, 8, 0], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [35, 39, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(sigma), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1351001710.1336427, 26054909225.962223, 132244344572.85536, 400623865542.7542, 932104658362.9534, 1834973522852.9749], "accuracy": [0.09694888442754745, 0.10381719470024109, 0.09959053993225098, 0.10091137140989304, 0.09813763201236725, 0.1006472036242485], "val_loss": [5326246034.285714, 49000425764.57143, 188244609316.57144, 502462583369.1429, 1099524510281.1428, 2125596721152.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 1, 0, 5, 8, 6, 3, 4, 9, 8, 2], [2, 2, 1, 2, 2, 0, 0, 1], [35, 39, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [5, 0, 1, 5, 8, 6, 5, 5, 9, 8], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [35, 60, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [1, 1, 3, 0], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [8, 0, 1, 5, 8, 6, 5, 1, 9, 8], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 60, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [1, 1, 0], [1], [8], [4], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 12, 12, 9, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302791377509574, 2.302269747511995, 2.3025880325676633, 2.302419369955419, 2.302438196079716, 2.30295883143315], "accuracy": [0.0944393053650856, 0.09021265059709549, 0.09126931428909302, 0.08294808864593506, 0.08849557489156723, 0.09060890227556229], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 2, 1, 0, 8, 6, 5, 8, 5, 8, 0], [2, 2, 0, 1, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [35, 60, 84, 57], [1, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 1, 3, 0], [41, 55], [0, 1, 0], [0], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302791377509574, 2.302269747511995, 2.3025880325676633, 2.302419369955419, 2.302438196079716, 2.30295883143315], "accuracy": [0.0944393053650856, 0.09021265059709549, 0.09126931428909302, 0.08294808864593506, 0.08849557489156723, 0.09060890227556229], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]