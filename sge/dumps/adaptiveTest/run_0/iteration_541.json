[{"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.849142849445343, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.109163302094189, 1.9073023476762512, 1.2975153014833398, 0.8429897809230168, 0.7216858525853099, 0.6959246478895108, 0.6109679296205325, 0.5793567403369592, 0.5491380229082562, 0.5259003188230295, 0.5125784391283659, 0.4889474915766902, 0.4863032560031396, 0.46401489696577003, 0.4532347171967292, 0.43901279830834994, 0.4327992524697308, 0.4082800626455596, 0.4008694588232664, 0.39473852194405784, 0.3964962279004601, 0.3656690816294484, 0.3739762096522491, 0.36908379469911706, 0.3485994292264444, 0.3465905177586933, 0.3312217962386003, 0.3178625782923912, 0.3181786453876639, 0.32295734568467904, 0.3026924166051451, 0.30551524841553973, 0.31264688400324103, 0.2957667791257681, 0.2840937708410148, 0.28090952690471793, 0.2861521576830519, 0.27941975888716564, 0.2674874527154267, 0.2691835307166435, 0.2515137614693388, 0.25098717554157846, 0.25072406009361176, 0.23479668997408235, 0.24013513851167345, 0.23625377612366827, 0.24210208693373836, 0.22674515296825248, 0.22346846447951757, 0.21497963150423657, 0.22790108058415132, 0.21355281668670772, 0.2183701088478568, 0.21565842392689927, 0.2128678153884913, 0.1972845356009498, 0.1950091461066352, 0.20205298677852457, 0.1922572146510215, 0.18780704909398524], "accuracy": [0.32941487431526184, 0.3731343150138855, 0.5493329763412476, 0.6823405027389526, 0.7297582626342773, 0.7424382567405701, 0.7784969210624695, 0.7872143983840942, 0.7973847389221191, 0.8061022162437439, 0.8125742673873901, 0.8249900937080383, 0.8259146809577942, 0.8256505131721497, 0.8388587832450867, 0.8399154543876648, 0.8417646288871765, 0.852859616279602, 0.8524633646011353, 0.8568220734596252, 0.8564258217811584, 0.8692378997802734, 0.8640866279602051, 0.8636903762817383, 0.8747853636741638, 0.874389111995697, 0.8784837126731873, 0.8815215826034546, 0.8812574148178101, 0.8824461698532104, 0.8874653577804565, 0.886672854423523, 0.8853520154953003, 0.887201189994812, 0.8956544995307922, 0.8960506916046143, 0.8943336606025696, 0.895918607711792, 0.9002773761749268, 0.8982961177825928, 0.9046360850334167, 0.9080702662467957, 0.9055606722831726, 0.9109761118888855, 0.9046360850334167, 0.9116365313529968, 0.9066173434257507, 0.9153348207473755, 0.9149385690689087, 0.9190331697463989, 0.9140139818191528, 0.9187690019607544, 0.9169198274612427, 0.9216747879981995, 0.9158631563186646, 0.9248448014259338, 0.9286752343177795, 0.921938955783844, 0.9293355941772461, 0.9272223114967346], "val_loss": [1.9232566697256905, 1.4155121530805315, 0.696101256779262, 0.5678539446422032, 0.5497151953833443, 0.48590920652662006, 0.4508297783987863, 0.42738705021994455, 0.41405769756862093, 0.40690238986696514, 0.39988467523029875, 0.3849479470934187, 0.38549775736672537, 0.3791651555470058, 0.37323741401944843, 0.3583488804953439, 0.3528375370161874, 0.3550349644252232, 0.34517730985369, 0.3362285579953875, 0.3283289074897766, 0.3234908665929522, 0.3245429992675781, 0.3330929619925363, 0.319262044770377, 0.3160830480711801, 0.3286913973944528, 0.30838498047419954, 0.329119758946555, 0.3219321370124817, 0.3052383405821664, 0.32662912777491976, 0.2968311309814453, 0.3145278436797006, 0.30219065291540964, 0.2946782793317522, 0.3032517007419041, 0.29710884605135235, 0.30298530203955515, 0.2910030313900539, 0.31161166940416607, 0.2993312818663461, 0.29270683016095844, 0.2965864879744394, 0.2987106442451477, 0.3099690335137503, 0.2968503492219107, 0.31247663497924805, 0.3085437161581857, 0.3043154648372105, 0.307088954108102, 0.31286860363824026, 0.310098443712507, 0.3012149589402335, 0.31424425329480854, 0.30230897665023804, 0.301254859992436, 0.3232046365737915, 0.3002551964351109, 0.3081504617418562], "val_accuracy": [0.1379999965429306, 0.41333332657814026, 0.6940000057220459, 0.7416666746139526, 0.7526666522026062, 0.7723333239555359, 0.7839999794960022, 0.8086666464805603, 0.8090000152587891, 0.8163333535194397, 0.8220000267028809, 0.82833331823349, 0.8243333101272583, 0.8299999833106995, 0.8266666531562805, 0.8360000252723694, 0.8446666598320007, 0.8376666903495789, 0.846666693687439, 0.8510000109672546, 0.856333315372467, 0.8576666712760925, 0.8569999933242798, 0.8576666712760925, 0.8643333315849304, 0.8560000061988831, 0.8510000109672546, 0.8646666407585144, 0.8586666584014893, 0.8606666922569275, 0.8646666407585144, 0.8633333444595337, 0.8693333268165588, 0.8663333058357239, 0.8666666746139526, 0.871666669845581, 0.862666666507721, 0.8713333606719971, 0.871666669845581, 0.8723333477973938, 0.871666669845581, 0.8723333477973938, 0.8743333220481873, 0.8736666440963745, 0.875, 0.8763333559036255, 0.8730000257492065, 0.8756666779518127, 0.8769999742507935, 0.8736666440963745, 0.875333309173584, 0.8713333606719971, 0.8786666393280029, 0.8756666779518127, 0.8826666474342346, 0.878000020980835, 0.8793333172798157, 0.8706666827201843, 0.8826666474342346, 0.8813333511352539]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8479999899864197, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.109137815302389, 1.9066708045880618, 1.3015873611815743, 0.8532954247368483, 0.7195718089870694, 0.6727595964537446, 0.6141766539071577, 0.5827666376213655, 0.5508199898857467, 0.528400291446776, 0.5152099601360534, 0.4993478146369006, 0.48258339918647003, 0.46252477102905704, 0.4628896280727555, 0.4400495851335902, 0.4337908752432841, 0.4131147998702871, 0.40113463677026023, 0.40003143224765314, 0.39698183603841614, 0.3691737522751097, 0.39525762519202196, 0.37626079053942396, 0.35615723358799106, 0.34998321926447346, 0.3397798948496749, 0.31918105884565734, 0.3179436508792975, 0.3317027648387096, 0.30558071930363445, 0.3055639536373525, 0.3149735486549929, 0.2998426967781328, 0.28663030343127527, 0.29016518851848183, 0.28591629312085975, 0.2860836847669901, 0.26869577697483527, 0.2739066945020124, 0.25689149458906546, 0.2555942166364897, 0.2531111409021422, 0.24511100783828008, 0.24654209883048345, 0.24279894797384086, 0.24631937265419737, 0.2351536664704857, 0.23366300925059388, 0.21835461865287367, 0.22411215909562485, 0.22213096162859067, 0.22004731337998318, 0.22033924677226804], "accuracy": [0.32941487431526184, 0.3739268183708191, 0.5468233823776245, 0.6870955228805542, 0.7317395210266113, 0.748249888420105, 0.7718927264213562, 0.7874785661697388, 0.7942147850990295, 0.802800178527832, 0.8109893202781677, 0.819970965385437, 0.8256505131721497, 0.8260467648506165, 0.830669641494751, 0.8433496356010437, 0.8421608805656433, 0.8499537706375122, 0.8556333184242249, 0.8533879518508911, 0.8535200357437134, 0.8660678863525391, 0.8561616539955139, 0.8605204224586487, 0.8692378997802734, 0.8720116019248962, 0.8770307898521423, 0.8824461698532104, 0.8838990926742554, 0.8761062026023865, 0.891559898853302, 0.8856161832809448, 0.8883898854255676, 0.8879936337471008, 0.8932769894599915, 0.8907673954963684, 0.8985602855682373, 0.8943336606025696, 0.8989565372467041, 0.8967111110687256, 0.9043719172477722, 0.9051644206047058, 0.9013340473175049, 0.9059569239616394, 0.9046360850334167, 0.9095231890678406, 0.904768168926239, 0.9093911051750183, 0.9115044474601746, 0.9167877435684204, 0.9141460657119751, 0.9149385690689087, 0.9159952402114868, 0.9138818979263306], "val_loss": [1.9233509472438268, 1.4141054834638322, 0.7155459948948452, 0.5727225712367466, 0.5340002775192261, 0.4867722136633737, 0.45372399262019564, 0.42789615052086966, 0.41176662274769377, 0.41199473823819843, 0.4106448633330209, 0.39234972851616995, 0.38319804838725496, 0.37910192353384836, 0.38063502311706543, 0.3672588552747454, 0.361534093107496, 0.34495294094085693, 0.3628707698413304, 0.3352413432938712, 0.339211174419948, 0.3410095827920096, 0.33430384738104685, 0.33954319783619474, 0.3227795788219997, 0.3328750218663897, 0.3238995841571263, 0.3137452006340027, 0.3265411172594343, 0.3164730412619455, 0.30918656076703754, 0.31867999689919607, 0.30673210109983173, 0.30883435692105976, 0.3108914920261928, 0.30539544991084505, 0.3101326482636588, 0.31035404545920237, 0.30895540543964933, 0.3046412638255528, 0.324019764150892, 0.306688734463283, 0.29814142840249197, 0.29776121037346975, 0.30691281386784147, 0.317056553704398, 0.30281615257263184, 0.3195405602455139, 0.3165616733687265, 0.30732472453798565, 0.31032722336905344, 0.3279467395373753, 0.31598974977220806, 0.3083657111440386], "val_accuracy": [0.13699999451637268, 0.40966665744781494, 0.7096666693687439, 0.7316666841506958, 0.7613333463668823, 0.7670000195503235, 0.7756666541099548, 0.8043333292007446, 0.8203333616256714, 0.8106666803359985, 0.8116666674613953, 0.8193333148956299, 0.8259999752044678, 0.8289999961853027, 0.8246666789054871, 0.8323333263397217, 0.8433333039283752, 0.847000002861023, 0.8363333344459534, 0.8533333539962769, 0.8510000109672546, 0.8516666889190674, 0.8539999723434448, 0.8479999899864197, 0.8586666584014893, 0.8516666889190674, 0.8560000061988831, 0.8669999837875366, 0.859666645526886, 0.8650000095367432, 0.8633333444595337, 0.8619999885559082, 0.8683333396911621, 0.8663333058357239, 0.8629999756813049, 0.8706666827201843, 0.859333336353302, 0.8666666746139526, 0.8740000128746033, 0.8696666955947876, 0.8653333187103271, 0.8703333139419556, 0.8743333220481873, 0.875, 0.8756666779518127, 0.8740000128746033, 0.8706666827201843, 0.8706666827201843, 0.8763333559036255, 0.875333309173584, 0.875, 0.8659999966621399, 0.8690000176429749, 0.8730000257492065]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8379999995231628, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1321950981944795, 1.9374092011608546, 1.3151888388369328, 0.9724313527318103, 0.8118747674620557, 0.718854488312151, 0.6527326910833657, 0.6147518669530747, 0.5800429316024266, 0.5429912840630384, 0.5463431720657435, 0.530496815255195, 0.5206213233855422, 0.49790722264778725, 0.5094855667506825, 0.48907551077677824, 0.4902279645680846, 0.45273216650738235, 0.44807649188589, 0.4344059093328216, 0.4257496095462608, 0.4030393728837046, 0.428052530910959, 0.3908137635760508, 0.3923013750131592, 0.38512566968702194, 0.3679753031634289, 0.35404185162889895, 0.34391491498299687, 0.3522663384325642, 0.341515431613844, 0.3271355837004894, 0.3296901517815956, 0.32198040517030563, 0.31971147596214144, 0.3180032260012334, 0.29639831913177284, 0.3067194904791066, 0.2905882878853676, 0.2981393801506248, 0.2796298429249867], "accuracy": [0.31884822249412537, 0.36428478360176086, 0.5793157815933228, 0.6520935297012329, 0.6968696117401123, 0.7375511527061462, 0.7601373791694641, 0.778232753276825, 0.7884030938148499, 0.8029322624206543, 0.8010830879211426, 0.8047813773155212, 0.8082155585289001, 0.8177255392074585, 0.8181217908859253, 0.8189142942428589, 0.8181217908859253, 0.8362171649932861, 0.8368775844573975, 0.843481719493866, 0.8442742228507996, 0.8540483713150024, 0.8445383906364441, 0.8569541573524475, 0.852859616279602, 0.8570862412452698, 0.867520809173584, 0.8728041052818298, 0.8750495314598083, 0.8734645247459412, 0.8758420348167419, 0.8804649114608765, 0.8800686597824097, 0.8790120482444763, 0.8800686597824097, 0.8779553771018982, 0.8936732411384583, 0.885219931602478, 0.8922203183174133, 0.8854840993881226, 0.8967111110687256], "val_loss": [1.9378090585981096, 1.2892169271196638, 0.7943834406988961, 0.6754141024180821, 0.5820169108254569, 0.5090799501964024, 0.4834102392196655, 0.4448015178952898, 0.4276138629232134, 0.4278547763824463, 0.43609338998794556, 0.41627529689243864, 0.3994119337626866, 0.38755152906690327, 0.3948806013379778, 0.37299759047372, 0.3785960503986904, 0.36027840205601286, 0.35122110162462505, 0.3546331354549953, 0.3396997196333749, 0.3690389735358102, 0.33098844970975605, 0.3364263432366507, 0.3258313536643982, 0.3409434131213597, 0.32332039730889456, 0.3147440723010472, 0.32855190549577984, 0.3151119521686009, 0.3072232689176287, 0.3234020897320339, 0.3152480721473694, 0.3180290801184518, 0.3098101701055254, 0.3014598914555141, 0.31134581565856934, 0.30759585755211966, 0.31839856931141447, 0.3090331128665379, 0.3349637729781015], "val_accuracy": [0.10300000011920929, 0.49799999594688416, 0.6579999923706055, 0.7013333439826965, 0.7419999837875366, 0.7636666893959045, 0.7706666588783264, 0.8009999990463257, 0.8063333630561829, 0.8076666593551636, 0.800000011920929, 0.8133333325386047, 0.8159999847412109, 0.8270000219345093, 0.824999988079071, 0.8336666822433472, 0.8326666951179504, 0.8330000042915344, 0.8493333458900452, 0.8426666855812073, 0.8476666808128357, 0.8403333425521851, 0.8543333411216736, 0.8526666760444641, 0.8539999723434448, 0.8460000157356262, 0.859333336353302, 0.859666645526886, 0.8550000190734863, 0.8600000143051147, 0.8659999966621399, 0.8606666922569275, 0.8653333187103271, 0.862666666507721, 0.8653333187103271, 0.8706666827201843, 0.8653333187103271, 0.8706666827201843, 0.8679999709129333, 0.8656666874885559, 0.859666645526886]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [77, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2800000011920929, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.306779399665749, 2.270344060189405, 2.290163338727577, 2.493755524231852, 2.274862824776201, 2.2757248016254636], "accuracy": [0.18993528187274933, 0.2075023055076599, 0.1398758441209793, 0.17316074669361115, 0.175670325756073, 0.19759608805179596], "val_loss": [1.8159376553126745, 1.9726731436593192, 1.822697707584926, 1.9766379765101842, 1.974677358354841, 1.9894698006766183], "val_accuracy": [0.29600000381469727, 0.179666668176651, 0.2736666798591614, 0.1003333330154419, 0.17800000309944153, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.2005714327096939, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.184069139641573, 2.4698874494418837, 2.8795460144549534e+30, 3.0965015640379714, 2.929052404582052, 2.869196805404776, 2.9537437332147274], "accuracy": [0.17395325005054474, 0.13181878626346588, 0.10685510188341141, 0.10091137140989304, 0.09721305221319199, 0.09787346422672272, 0.10117553919553757], "val_loss": [2.078983783721924, 8.408236912318639, 2.723229340144566, 2.525808879307338, 2.253769738333566, 2.4942020007542203, 2.533500943865095], "val_accuracy": [0.10000000149011612, 0.11733333021402359, 0.09833333641290665, 0.1003333330154419, 0.10066666454076767, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 1, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.1948571354150772, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.1840764869709592, 2.4987577785826502, 413.16566667064245, NaN, NaN, NaN, NaN], "accuracy": [0.17395325005054474, 0.13538502156734467, 0.14212125539779663, 0.10527011007070541, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.078009673527309, 1.9095628602164132, 5106220763.428572, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.25033333897590637, 0.10199999809265137, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 1, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 20, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.19342857599258423, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.1840489254871995, 2.501846523773653, 1426432465.6697857, NaN, NaN, NaN, NaN], "accuracy": [0.17395325005054474, 0.1356491893529892, 0.12891295552253723, 0.10645885765552521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.076875959123884, 1.946847915649414, 3.8401859225712497e+27, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.23600000143051147, 0.19900000095367432, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 0, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.16914285719394684, "mapping_values": [1, 15, 15, 10, 5, 2, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.4428918872448304, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17051908373832703, 0.10659094154834747, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9831604957580566, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10400000214576721, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023597301666556, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 20, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3023597301666556, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 8, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.305623223138854, 2.3170010459075088, 41867098580.97312, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.08189142495393753, 0.08928807079792023, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.975290298461914, 1.9938460077558244, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.026000000536441803, 0.08733333647251129, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [9, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [64, 20, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023597301666556, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06617355346679688, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [5, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.07942856848239899, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.0289605485449815, 2.3252433487263966, 2.3068136729584428, 2.3040970554598696, 2.3039412778429367, 2.3033548089507203], "accuracy": [0.19059570133686066, 0.09959053993225098, 0.09668471664190292, 0.09866596013307571, 0.09747721254825592, 0.1010434553027153], "val_loss": [2.0330029215131487, 1.9776060921805245, 1.974306651524135, 1.9740169388907296, 1.9738819258553642, 1.9737377166748047], "val_accuracy": [0.1003333330154419, 0.09933333098888397, 0.1003333330154419, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 1, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 20, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07199999690055847, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3230713924570116e+25, 9.390842789211755e+26, 7.054529652978564e+27, 2.821153716557636e+28, 7.678486572651522e+28, 1.7139276778777747e+29], "accuracy": [0.07647603005170822, 0.0758156105875969, 0.07198520749807358, 0.07357019931077957, 0.06973979622125626, 0.07911768555641174], "val_loss": [1.2037553817182091e+26, 1.9260166640705473e+27, 9.750474150875395e+27, 3.0816330039764386e+28, 7.523521545683387e+28, 1.560078130875975e+29], "val_accuracy": [0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 9, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [8, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [45, 84, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3040902098455542, 2.3019448889559917, 2.303695323649588, 2.30206727540693, 2.302159332470131, 2.3013482651832065], "accuracy": [0.0874389111995697, 0.09377889335155487, 0.09100515395402908, 0.0866464152932167, 0.09153348207473755, 0.09311848133802414], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 1, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [51, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 2, 3, 3, 0], [45, 20, 6], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3040902098455542, 2.3019448889559917, 2.303695323649588, 2.30206727540693, 2.302159332470131, 2.3013482651832065], "accuracy": [0.0874389111995697, 0.09377889335155487, 0.09100515395402908, 0.0866464152932167, 0.09153348207473755, 0.09311848133802414], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [43, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [45, 17, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [7, 4, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3040902098455542, 2.3019448889559917, 2.303695323649588, 2.30206727540693, 2.302159332470131, 2.3013482651832065], "accuracy": [0.0874389111995697, 0.09377889335155487, 0.09100515395402908, 0.0866464152932167, 0.09153348207473755, 0.09311848133802414], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]