[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0399965440844343, 1.1118547545290578, 0.8021860706603066, 0.7139256170412899, 0.6397941593779958, 0.5967100955365813, 0.5515732351405636, 0.527625975544584, 0.4986718183282722, 0.47186348798362854, 0.4546463977722145, 0.44047192602330165, 0.4140244720870509, 0.40979914866922207, 0.3950886697565103, 0.3809155249372056, 0.3781068918766709, 0.36166738521437114, 0.3441697500952168, 0.3393080745508894, 0.328878532488427, 0.32350403214521284, 0.3166880819775787, 0.307674083428187, 0.2998899767199181, 0.29495020975384495, 0.2859728178918448, 0.27639817388113447, 0.26499775532702446, 0.2628496710052107, 0.25347607486858315, 0.2443440118564701, 0.24869555002269084, 0.24114281262672493, 0.2275490226380782, 0.22513345779051255, 0.22088207831755605, 0.21950814326709178, 0.2124302054239601, 0.2096951568993469, 0.19730048890103438, 0.194543342633396, 0.19260533128030674, 0.18616106985755615, 0.18318455454428056, 0.17169234306584608, 0.17279295471555065, 0.17565611742506756, 0.1808112356853586, 0.16896171751133818, 0.16231160210486117, 0.14975416891374263, 0.15022173523509255, 0.1507473332892792, 0.1531568978401522, 0.13941404765875048, 0.13291322015075321], "accuracy": [0.31105533242225647, 0.6214502453804016, 0.7053229212760925, 0.7326641082763672, 0.7559106945991516, 0.780610203742981, 0.7931581139564514, 0.8021397590637207, 0.8141592741012573, 0.828820526599884, 0.8304054737091064, 0.8364813327789307, 0.850350022315979, 0.8498216867446899, 0.8565579056739807, 0.8590674996376038, 0.8618412613868713, 0.8647470474243164, 0.8706908226013184, 0.8739928603172302, 0.8782195448875427, 0.8782195448875427, 0.8835028409957886, 0.8857482671737671, 0.8897107243537903, 0.889050304889679, 0.8931449055671692, 0.8981640338897705, 0.9006736278533936, 0.9022586345672607, 0.9059569239616394, 0.9089948534965515, 0.9076740145683289, 0.9085986018180847, 0.9125610589981079, 0.9140139818191528, 0.9148064851760864, 0.9140139818191528, 0.919561505317688, 0.9179764986038208, 0.9247127175331116, 0.9268260598182678, 0.9274864792823792, 0.9269581437110901, 0.9270902276039124, 0.9339585304260254, 0.9325056076049805, 0.9339585304260254, 0.9268260598182678, 0.9350152015686035, 0.9389776587486267, 0.941091001033783, 0.9414872527122498, 0.9432043433189392, 0.9420155882835388, 0.9480913877487183, 0.9472988843917847], "val_loss": [0.8986039161682129, 0.6284776244844709, 0.5729325498853411, 0.5226502248219081, 0.47438716888427734, 0.4542918545859201, 0.43240674904414583, 0.41393232345581055, 0.39212071895599365, 0.3760655096599034, 0.37385215929576326, 0.3514400976044791, 0.35128865923200336, 0.3344581552914211, 0.3408167447362627, 0.3380824497767857, 0.32523246322359356, 0.3238644003868103, 0.31329446179526194, 0.3061326657022749, 0.3014953477042062, 0.2992064527102879, 0.3056738717215402, 0.3131908008030483, 0.29862984589168, 0.2936274749892099, 0.2952276808874948, 0.29034399134772165, 0.29292087044034687, 0.2867581844329834, 0.3015308805874416, 0.28726112842559814, 0.2869462626320975, 0.2897882120949881, 0.2927732127053397, 0.2932994706290109, 0.2909089071410043, 0.28248779262815205, 0.29425385168620516, 0.2913589222090585, 0.2903905596051897, 0.2992632985115051, 0.29463301386151997, 0.3007120745522635, 0.28574189117976595, 0.29823338985443115, 0.2888338565826416, 0.31154097829546246, 0.29229668208530973, 0.29753242220197407, 0.3071346879005432, 0.305440936769758, 0.30285013573510305, 0.31355829749788555, 0.2996858188084194, 0.31385102442332674, 0.32122738872255596], "val_accuracy": [0.6723333597183228, 0.721666693687439, 0.7476666569709778, 0.7593333125114441, 0.7763333320617676, 0.7879999876022339, 0.7979999780654907, 0.8059999942779541, 0.8240000009536743, 0.82833331823349, 0.8286666870117188, 0.8456666469573975, 0.8416666388511658, 0.8536666631698608, 0.846666693687439, 0.8506666421890259, 0.8473333120346069, 0.8553333282470703, 0.856333315372467, 0.859000027179718, 0.8690000176429749, 0.8676666617393494, 0.8633333444595337, 0.8533333539962769, 0.8646666407585144, 0.8709999918937683, 0.8733333349227905, 0.8763333559036255, 0.8726666569709778, 0.8690000176429749, 0.8713333606719971, 0.875333309173584, 0.878000020980835, 0.8763333559036255, 0.8786666393280029, 0.875333309173584, 0.8799999952316284, 0.8830000162124634, 0.8806666731834412, 0.8806666731834412, 0.8853333592414856, 0.8813333511352539, 0.8843333125114441, 0.8870000243186951, 0.8859999775886536, 0.8846666812896729, 0.8880000114440918, 0.8790000081062317, 0.8840000033378601, 0.887333333492279, 0.8846666812896729, 0.8899999856948853, 0.8843333125114441, 0.8843333125114441, 0.8899999856948853, 0.8870000243186951, 0.8799999952316284]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0408496553430844, 1.0992623082304422, 0.7940603185244807, 0.7052810618417957, 0.631342229487606, 0.5904456946151037, 0.5456691193794766, 0.5250031986193745, 0.4979638843024018, 0.4794281296852227, 0.4572144079879133, 0.43676866040867807, 0.41026871604076104, 0.4069811137258542, 0.3929903020696271, 0.38012157479187186, 0.37709974861966933, 0.3623916395210303, 0.3493008077530388, 0.33583614362811903, 0.32381576657090533, 0.3230623091807093, 0.31716137774128245, 0.3047220143722647, 0.30401614015097034, 0.2942406880920117, 0.2802842498620771, 0.27166125801072194, 0.26064558234102675, 0.2610654510039034, 0.2558846427835037, 0.2469621418926458], "accuracy": [0.3109232485294342, 0.6206578016281128, 0.7069079279899597, 0.7333245277404785, 0.7619865536689758, 0.7796856164932251, 0.7951393723487854, 0.8020076751708984, 0.8145555257797241, 0.8269713521003723, 0.8325188159942627, 0.8391229510307312, 0.8525954484939575, 0.8494254350662231, 0.8581429123878479, 0.8644828796386719, 0.8610487580299377, 0.8669924736022949, 0.8702945709228516, 0.8774270415306091, 0.8819178342819214, 0.8811253309249878, 0.886672854423523, 0.886672854423523, 0.8899748921394348, 0.8934090733528137, 0.8938053250312805, 0.8988244533538818, 0.9034473896026611, 0.9009377956390381, 0.9054285883903503, 0.9031832218170166], "val_loss": [0.9048186370304653, 0.6313113144465855, 0.563113944871085, 0.5165392330714634, 0.47202677386147635, 0.44374057224818636, 0.4308019535882132, 0.41361175264631, 0.39401940788541523, 0.3782053419521877, 0.3717595764568874, 0.35034861734935213, 0.35430532693862915, 0.33957729169300627, 0.33860634905951364, 0.33886648075921194, 0.32716367074421476, 0.3255965624536787, 0.31397686685834614, 0.30967731135232107, 0.305415826184409, 0.3069132311003549, 0.30509034224918913, 0.31548331465039936, 0.3088158369064331, 0.2904416833605085, 0.28773746320179533, 0.29246707473482403, 0.2981062190873282, 0.2839862363679068, 0.2983630895614624, 0.3019459843635559], "val_accuracy": [0.6703333258628845, 0.7163333296775818, 0.7546666860580444, 0.7633333206176758, 0.7793333530426025, 0.7963333129882812, 0.8006666898727417, 0.8083333373069763, 0.8270000219345093, 0.8293333053588867, 0.8309999704360962, 0.8479999899864197, 0.8426666855812073, 0.8483333587646484, 0.8506666421890259, 0.8543333411216736, 0.8496666550636292, 0.8523333072662354, 0.8556666374206543, 0.8616666793823242, 0.8683333396911621, 0.8629999756813049, 0.8646666407585144, 0.8556666374206543, 0.8619999885559082, 0.8696666955947876, 0.8766666650772095, 0.8733333349227905, 0.8730000257492065, 0.874666690826416, 0.8740000128746033, 0.8690000176429749]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8322857022285461, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.039998558187655, 1.111804092360242, 0.8025274789171165, 0.7144185843846864, 0.6405436362588505, 0.5952888105161563, 0.5523533255920717, 0.5271580119993331, 0.5010876403178017, 0.47163183786582163, 0.454340581010755, 0.44002853986798435, 0.4143260893741729, 0.4080090885227855, 0.39742548815121725, 0.38126159899931666, 0.37519666668666807, 0.3636840890584731, 0.34448580776286275, 0.3371594734849112, 0.3277756304922609, 0.32059617354145237, 0.3153600661533541, 0.3052067330106847, 0.3013343691880976, 0.2981442030095594, 0.28714358252368, 0.27561684677298864, 0.2610471144863769, 0.2661738268270343, 0.25611444811747924, 0.24646463986471928], "accuracy": [0.31118741631507874, 0.6211860775947571, 0.705058753490448, 0.7333245277404785, 0.7559106945991516, 0.7794214487075806, 0.7917051911354065, 0.8012151718139648, 0.8115176558494568, 0.8297450542449951, 0.8319904804229736, 0.8384625315666199, 0.8492933511734009, 0.8521991968154907, 0.8589354157447815, 0.8618412613868713, 0.8644828796386719, 0.86553955078125, 0.8728041052818298, 0.8750495314598083, 0.8824461698532104, 0.8798044919967651, 0.8835028409957886, 0.8857482671737671, 0.8897107243537903, 0.8887861371040344, 0.8906353116035461, 0.8981640338897705, 0.9027869701385498, 0.8973715305328369, 0.9054285883903503, 0.9070135951042175], "val_loss": [0.8986195836748395, 0.6286294800894601, 0.572630763053894, 0.5227013145174298, 0.4756488629749843, 0.45413661003112793, 0.4367644190788269, 0.41715389490127563, 0.39091492550713675, 0.3790655221257891, 0.37553166491644724, 0.3518933653831482, 0.3520348753247942, 0.3392551967075893, 0.3386601720537458, 0.3371240666934422, 0.32787902866091045, 0.3212577870913914, 0.3121537225587027, 0.3090759515762329, 0.3049707327570234, 0.3008887597492763, 0.30410099029541016, 0.31097404445920673, 0.2989072288785662, 0.3008896453039987, 0.28883838653564453, 0.2961328370230539, 0.30013671091624666, 0.2872579438345773, 0.29567956924438477, 0.2903390441622053], "val_accuracy": [0.671999990940094, 0.722000002861023, 0.7480000257492065, 0.7576666474342346, 0.7760000228881836, 0.7850000262260437, 0.800000011920929, 0.8036666512489319, 0.8270000219345093, 0.828000009059906, 0.8289999961853027, 0.8410000205039978, 0.8429999947547913, 0.8493333458900452, 0.846666693687439, 0.8500000238418579, 0.8479999899864197, 0.856333315372467, 0.859000027179718, 0.8606666922569275, 0.8673333525657654, 0.862333357334137, 0.8676666617393494, 0.8603333234786987, 0.8656666874885559, 0.8659999966621399, 0.8776666522026062, 0.8740000128746033, 0.8733333349227905, 0.874666690826416, 0.875, 0.8759999871253967]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.831428587436676, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0400015773428053, 1.1116356488861947, 0.8019784455915971, 0.7149423312564583, 0.6401961246076561, 0.5967183692060709, 0.5533871183368934, 0.5299798393797456, 0.5006847440125747, 0.47250670216669577, 0.45125966112391036, 0.4353569520581054, 0.4106644789036695, 0.4106648551466726, 0.3965143568409338, 0.3798272568457446, 0.3752659247095055, 0.36059761578380756, 0.3453897307727158, 0.33605368490295323, 0.32636377790883986, 0.3211603137078838, 0.3106287300838629, 0.2991752300705215, 0.2984405943014051, 0.2934027469673051], "accuracy": [0.31105533242225647, 0.6211860775947571, 0.7046625018119812, 0.7312111854553223, 0.7559106945991516, 0.7796856164932251, 0.7923656105995178, 0.8030643463134766, 0.8145555257797241, 0.8261788487434387, 0.8323867321014404, 0.8412362933158875, 0.8496896028518677, 0.8494254350662231, 0.8573504090309143, 0.8582749962806702, 0.8602562546730042, 0.8673887252807617, 0.869502067565918, 0.8751816153526306, 0.8811253309249878, 0.8790120482444763, 0.8845595121383667, 0.8877294659614563, 0.8889182209968567, 0.8944657444953918], "val_loss": [0.8984899180276054, 0.6288939714431763, 0.5725821767534528, 0.523373910358974, 0.4737585783004761, 0.4566005638667515, 0.43568081515175955, 0.4156757252556937, 0.3901463917323521, 0.37616619893482756, 0.3724360636302403, 0.35149121284484863, 0.3539478863988604, 0.3407155786241804, 0.3388724752834865, 0.33486963169915335, 0.32387620210647583, 0.3234919565064566, 0.31076916626521517, 0.30735379457473755, 0.2991555077689035, 0.2992015480995178, 0.30576092004776, 0.3112585118838719, 0.2970867667879377, 0.2924863610948835], "val_accuracy": [0.6723333597183228, 0.7203333377838135, 0.7480000257492065, 0.7590000033378601, 0.7753333449363708, 0.7860000133514404, 0.7956666946411133, 0.8050000071525574, 0.8273333311080933, 0.828000009059906, 0.831333339214325, 0.843666672706604, 0.8386666774749756, 0.8493333458900452, 0.8450000286102295, 0.8529999852180481, 0.8526666760444641, 0.8579999804496765, 0.8569999933242798, 0.8633333444595337, 0.8696666955947876, 0.8673333525657654, 0.8640000224113464, 0.8606666922569275, 0.8676666617393494, 0.8693333268165588]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [44, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7671428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.0554663452883566, 1.607093768112884, 1.2161763822397835, 1.0206579464836962, 0.897427702663345, 0.8461415857655292, 0.8443975783751673, 0.7377866207962858, 0.7434472760834856, 0.7014683344738595, 0.6825857592170674, 0.650142678865242, 0.6752710724078496, 0.6432815520062092], "accuracy": [0.29837536811828613, 0.4357416331768036, 0.5669000148773193, 0.6095628142356873, 0.6552634835243225, 0.6796988248825073, 0.6763967871665955, 0.7144366502761841, 0.7135120630264282, 0.7321357727050781, 0.7325320243835449, 0.7486461400985718, 0.743891179561615, 0.7512878179550171], "val_loss": [1.6061655112675257, 0.8794549192701068, 0.7971467801502773, 0.7079836300441197, 0.6510380506515503, 0.6099548169544765, 0.572872451373509, 0.5982574224472046, 0.5479139089584351, 0.5229724815913609, 0.5250693729945591, 0.5251234940120152, 0.5118015153067452, 0.522253257887704], "val_accuracy": [0.24533332884311676, 0.628000020980835, 0.6176666617393494, 0.6833333373069763, 0.7123333215713501, 0.7246666550636292, 0.7233333587646484, 0.7200000286102295, 0.7730000019073486, 0.765666663646698, 0.7549999952316284, 0.7723333239555359, 0.7549999952316284, 0.7639999985694885]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.12885713577270508, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [29740979.984318614, 281794490.8899749, 849962509.7788931, 1715074063.3512084, 2985230450.0520406, 4710488041.548012, 6814088596.676793], "accuracy": [0.10236428678035736, 0.10447761416435242, 0.09615638852119446, 0.1026284471154213, 0.09813763201236725, 0.09998679161071777, 0.10051512718200684], "val_loss": [86076118.85714285, 357098038.85714287, 825207259.4285715, 1511441408.0, 2445352082.285714, 3649671387.428571, 5150704932.571428], "val_accuracy": [0.10700000077486038, 0.11866666376590729, 0.11233333498239517, 0.10300000011920929, 0.10166666656732559, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.1282857209444046, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.4948560696834776, 2.3971397976251154, 17.436261048925992, 1.6068900694714095e+24, NaN, NaN, NaN, NaN], "accuracy": [0.18980319797992706, 0.1162329912185669, 0.09972262382507324, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9878925595964705, 1.9988350187029158, 2.1095702988760814, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 0, 1, 0], [0, 7, 5, 6, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 7, 5, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.divide_no_nan(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [3, 2, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.46484903683988, 14.506805124913917, 40.55812495036006, 84.37980785881287, 151.2909441277682, 249.6082497434121], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.09721305221319199, 0.09906221181154251, 0.10091137140989304, 0.09509972482919693], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 0, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 7, 5, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [4.313796003843264, 131677500447.8551, 2.30321022459954, 2.304036299345626, 2.3047161341626743, 2.305101968230919], "accuracy": [0.09536388516426086, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10157178342342377], "val_loss": [16.9803466796875, 1.9739704813276018, 1.9746552876063757, 1.9753978593008858, 1.9759158406938826, 1.9761509214128767], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [7, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [36, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [2.3043720522860274, 2.304255250706066, 2.303976191316755, 2.3054535301401473, 2.305435543031331, 2.307224938772169, 2.3066487682021575], "accuracy": [0.09034473448991776, 0.09496764093637466, 0.09457138925790787, 0.09747721254825592, 0.09945846349000931, 0.09932637959718704, 0.09549596905708313], "val_loss": [1.973698547908238, 1.9739649636404855, 1.9752917289733887, 1.9743810381208147, 1.975233691079276, 1.977134840829032, 1.9784447806222099], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030882436270885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 10, 4, 3, 1, 1, 0, 1, 1, 5, 3, 2, 1, 0, 2, 1, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.46484903683988, 14.506805124913917, 40.55812495036006, 84.37980785881287, 151.2909441277682, 249.6082497434121], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.09721305221319199, 0.09906221181154251, 0.10091137140989304, 0.09509972482919693], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 9, 6, 3, 4, 3, 3, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.07400000095367432, "mapping_values": [1, 33, 33, 20, 13, 6, 5, 5, 2, 3, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302999049255861, 2.3016144740913744, 2.3013010856387575, 2.300943840102686, 2.299329900470754, 2.3003743963313377, 2.3007512794210454, 2.299223118296956, 2.3003347104865766, 2.300302745801205, 2.2992664549596684, 2.2999139935852844, 2.300454188268639, 2.299854828271852, 2.2997786063150314, 2.299085539849427, 2.300718776428027], "accuracy": [0.08717474341392517, 0.09747721254825592, 0.09021265059709549, 0.09496764093637466, 0.09826971590518951, 0.09430722147226334, 0.09536388516426086, 0.10117553919553757, 0.09549596905708313, 0.10342095047235489, 0.10421344637870789, 0.09840179979801178, 0.1018359512090683, 0.09972262382507324, 0.09893012791872025, 0.10328886657953262, 0.10342095047235489], "val_loss": [1.9707237652369909, 1.9702386174883162, 1.969813006264823, 1.9695249966212682, 1.9693729536873954, 1.9693145751953125, 1.969353471483503, 1.9694743156433105, 1.9694958414350237, 1.969444683619908, 1.9694108281816756, 1.9694805145263672, 1.9696309225899833, 1.9698171615600586, 1.9700990404401506, 1.970385960170201, 1.9706125259399414], "val_accuracy": [0.041333332657814026, 0.04600000008940697, 0.054666668176651, 0.06066666543483734, 0.06466666609048843, 0.06966666877269745, 0.07366666942834854, 0.07800000160932541, 0.0806666687130928, 0.0846666693687439, 0.08966666460037231, 0.09033333510160446, 0.08933333307504654, 0.08799999952316284, 0.08399999886751175, 0.08133333176374435, 0.07900000363588333]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [61, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.06971428543329239, "mapping_values": [1, 14, 14, 10, 4, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302685365480376, 2.3010817303113997, 2.3009822565440756, 2.3009078160347545, 2.299595978344751, 2.300659071452834, 2.301148328735781, 2.299642143153779, 2.300503828270151, 2.3004353600974254, 2.299468965893172, 2.3003475076848994, 2.300866098577761, 2.3002365765050734, 2.300338779631355], "accuracy": [0.0882314071059227, 0.09866596013307571, 0.09192973375320435, 0.0956280529499054, 0.09787346422672272, 0.09338264167308807, 0.09338264167308807, 0.10011887550354004, 0.09430722147226334, 0.1022322028875351, 0.10210011899471283, 0.09681680053472519, 0.10077928751707077, 0.09694888442754745, 0.09602430462837219], "val_loss": [1.9703238351004464, 1.9700076239449638, 1.9698020390101842, 1.9697656631469727, 1.9698388917105538, 1.9697778565543038, 1.9698306492396764, 1.9698315347943987, 1.9697094644818987, 1.9697075571332658, 1.9697918891906738, 1.9700041498456682, 1.9701132774353027, 1.970301968710763, 1.970571858542306], "val_accuracy": [0.04600000008940697, 0.054999999701976776, 0.05900000035762787, 0.06233333423733711, 0.06266666948795319, 0.06833333522081375, 0.07100000232458115, 0.07433333247900009, 0.07766667008399963, 0.0833333358168602, 0.08299999684095383, 0.08033332973718643, 0.07966666668653488, 0.07666666805744171, 0.07266666740179062]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [40, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.03999999910593033, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [3.3763551811862693, 2.3390747843606206, 2.2839369653254105, 2.3421411841159108, 2.2918922824315455, 2.4055959492815546, 2.3104237008324673, 2.306262669325851, 2.302022784220119, 2.205440296961127, 2.099514459480368, 1.8873649091453537, 2.0447160544853324, 1.7885164074090967, 1.751486914363504, 1.7168379432851801, 10.926576153571657, 2.6832787720691953, 56852791419.76808, 121.84233200850818, 2.4803706552878095], "accuracy": [0.1736890822649002, 0.16431118547916412, 0.13512085378170013, 0.10619468986988068, 0.13010171055793762, 0.11728965491056442, 0.09615638852119446, 0.09906221181154251, 0.09932637959718704, 0.1670849323272705, 0.244485542178154, 0.3520010709762573, 0.3358869254589081, 0.3669264316558838, 0.39202219247817993, 0.39202219247817993, 0.3152819871902466, 0.1014397069811821, 0.11094967275857925, 0.09708096832036972, 0.09998679161071777], "val_loss": [1.974134853907994, 1.9909445898873466, 2.3130952290126254, 1.9731104033333915, 1.8443880762372697, 1.976250512259347, 1.9748144149780273, 1.97450133732387, 1.94063138961792, 1.7566652979169572, 1.5600775650569372, 1.3468247481754847, 1.5008226122174944, 1.3056327274867467, 1.277729102543422, 1.2515066691807337, 2.1208436829703197, 1.994331223624093, 741.4779401506696, 2.1543222836085727, 2.0860280990600586], "val_accuracy": [0.1003333330154419, 0.10333333164453506, 0.1456666737794876, 0.10000000149011612, 0.20533333718776703, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.1469999998807907, 0.27399998903274536, 0.4036666750907898, 0.4583333432674408, 0.3656666576862335, 0.43433332443237305, 0.43799999356269836, 0.4763333201408386, 0.10000000149011612, 0.1003333330154419, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 14, 14, 10, 4, 3, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3031094048741534, 2.302239979672284, 2.3026039816085864, 2.302839936266612, 2.301530544579289, 2.30337399574177], "accuracy": [0.0870426595211029, 0.0956280529499054, 0.08545766770839691, 0.08981640636920929, 0.09232597798109055, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 14, 14, 10, 4, 3, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031094048741534, 2.302239979672284, 2.3026039816085864, 2.302839936266612, 2.301530544579289, 2.30337399574177], "accuracy": [0.0870426595211029, 0.0956280529499054, 0.08545766770839691, 0.08981640636920929, 0.09232597798109055, 0.08889182657003403], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [1, 5, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035428572446107864, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3032073075540502, 2.3029823385414243, 2.3047613475332485, 2.307312651301545, 2.309288918239849, 2.3152321769954693], "accuracy": [0.08651433140039444, 0.09391097724437714, 0.07951393723487854, 0.080042265355587, 0.07528728246688843, 0.0672302171587944], "val_loss": [1.9713406562805176, 1.9723427636282784, 1.9740904399326868, 1.9767303466796875, 1.9802544457571847, 1.9844279289245605], "val_accuracy": [0.03466666489839554, 0.030666666105389595, 0.024000000208616257, 0.019999999552965164, 0.01600000075995922, 0.023333333432674408]}}]