[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [8, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [43, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [1, 4, 7, 2, 8, 5, 0, 4], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8517143130302429, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 12, 9, 7, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9207603816642203, 1.2674426325339652, 0.7875395386903324, 0.6733922018445541, 0.6139657788540567, 0.5664335053909598, 0.5349942551879772, 0.5151105418086855, 0.48348207047681263, 0.46564895526733946, 0.4426641899124506, 0.4289887287613266, 0.41103308184854487, 0.39553764512856654, 0.3782099720989598, 0.3750300691104474, 0.3628251743732332, 0.34818248095104265, 0.35078353730127904, 0.3384340743323548, 0.3393595346039659, 0.323078383339426, 0.3121157483047797, 0.31391883334542275], "accuracy": [0.3572843670845032, 0.5806366205215454, 0.707568347454071, 0.7453441023826599, 0.7662131786346436, 0.7880068421363831, 0.8016114234924316, 0.8131026029586792, 0.819970965385437, 0.828820526599884, 0.8366134166717529, 0.8473120927810669, 0.8514066934585571, 0.8578787446022034, 0.8581429123878479, 0.8617091774940491, 0.8689737319946289, 0.8702945709228516, 0.870030403137207, 0.8737286925315857, 0.8774270415306091, 0.8754457831382751, 0.8837670087814331, 0.882710337638855], "val_loss": [1.3578101566859655, 0.7163699013846261, 0.5463775226048061, 0.5052204132080078, 0.44965129239218576, 0.4403906890324184, 0.41786870786121916, 0.40923716340746197, 0.38474398851394653, 0.37338841812951223, 0.36668758732931955, 0.3591702325003488, 0.3398915869849069, 0.3295521225248064, 0.33878328119005474, 0.33548050267355783, 0.3216190423284258, 0.3243070500237601, 0.31672697407858713, 0.3117396150316511, 0.313313501221793, 0.31233997855867657, 0.32477924653462004, 0.33697751590183805], "val_accuracy": [0.5173333287239075, 0.6826666593551636, 0.7419999837875366, 0.7649999856948853, 0.7963333129882812, 0.8029999732971191, 0.8136666417121887, 0.8133333325386047, 0.8289999961853027, 0.8353333473205566, 0.8349999785423279, 0.843666672706604, 0.8519999980926514, 0.8550000190734863, 0.8486666679382324, 0.8526666760444641, 0.8550000190734863, 0.8583333492279053, 0.862333357334137, 0.859666645526886, 0.862333357334137, 0.8539999723434448, 0.8573333621025085, 0.8619999885559082]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8377143144607544, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0308268676423253, 1.0874466231990059, 0.7743112793089676, 0.6907092353151679, 0.641654812223671, 0.5916393921517299, 0.5572604366958638, 0.530251216760889, 0.5008215875697095, 0.4830915209655323, 0.46623709614423947, 0.4427479649689125, 0.4274579972135015, 0.40679540552750965, 0.3979651675035673, 0.3887564476061302, 0.37273633714286547, 0.35885492879260156, 0.35624042527708066, 0.3555123562219829, 0.33549236830482865, 0.3282345178624532, 0.3236818025652538, 0.3074651632161267, 0.3103243706917892, 0.2958185144222455, 0.2945896946813893, 0.2916996728797646, 0.2861662912819096, 0.26937636182749386, 0.27484117422546644, 0.2601311251810434, 0.2610413110558509, 0.24247767814925758, 0.24159516802734435, 0.2439763743576514, 0.2368413796711119, 0.23683244466443087], "accuracy": [0.3105269968509674, 0.6165632009506226, 0.7113987803459167, 0.7403249144554138, 0.7601373791694641, 0.7790252566337585, 0.7874785661697388, 0.8068947196006775, 0.8138951063156128, 0.8162726163864136, 0.828292191028595, 0.8392550349235535, 0.8409721255302429, 0.8511425256729126, 0.8570862412452698, 0.8569541573524475, 0.8601241707801819, 0.8709549307823181, 0.8692378997802734, 0.8663320541381836, 0.876370370388031, 0.8802007436752319, 0.8796724081039429, 0.8849557638168335, 0.8817857503890991, 0.887597382068634, 0.8877294659614563, 0.8905032277107239, 0.8934090733528137, 0.9008057117462158, 0.8918240666389465, 0.9010698795318604, 0.9017302989959717, 0.9078060984611511, 0.9080702662467957, 0.9099194407463074, 0.9078060984611511, 0.904768168926239], "val_loss": [0.9416623115539551, 0.6322478566850934, 0.5585497447422573, 0.5099178722926548, 0.48172608443668913, 0.44993952342442106, 0.4320747767175947, 0.4158339330128261, 0.4070768526622227, 0.37993675470352173, 0.3788348947252546, 0.35841866050447735, 0.36109165634427753, 0.3512612410954067, 0.34165482010160175, 0.32939843620572773, 0.3306675979069301, 0.32247980151857647, 0.3155101111957005, 0.32105941431862967, 0.3143114447593689, 0.3091281567301069, 0.3096874015671866, 0.31374279090336393, 0.31173369714191984, 0.30393591097423006, 0.30421234028679983, 0.3043492691857474, 0.2998214704649789, 0.3031340667179653, 0.297702499798366, 0.3077910287039621, 0.2891205038343157, 0.29714806590761456, 0.30397097553525654, 0.30107773201806204, 0.31533906289509367, 0.31336717094693867], "val_accuracy": [0.6159999966621399, 0.7289999723434448, 0.7509999871253967, 0.7673333287239075, 0.7743333578109741, 0.7956666946411133, 0.8116666674613953, 0.812666654586792, 0.8186666369438171, 0.8333333134651184, 0.8346666693687439, 0.847000002861023, 0.843666672706604, 0.847000002861023, 0.8443333506584167, 0.8560000061988831, 0.8513333201408386, 0.8569999933242798, 0.859666645526886, 0.862333357334137, 0.862333357334137, 0.8633333444595337, 0.8653333187103271, 0.8619999885559082, 0.8616666793823242, 0.8700000047683716, 0.8700000047683716, 0.8606666922569275, 0.8709999918937683, 0.8763333559036255, 0.871999979019165, 0.8743333220481873, 0.8799999952316284, 0.875, 0.8736666440963745, 0.875, 0.8730000257492065, 0.874666690826416]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [9, 5, 7, 8, 8, 5, 0, 9], [2, 3, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8320000171661377, "mapping_values": [1, 16, 16, 10, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0308266020627337, 1.0873910484769325, 0.774649222537023, 0.6918599434406562, 0.6421008065880219, 0.5929282833603725, 0.5585506460008809, 0.5311602512213375, 0.5024881046036561, 0.4851162152645563, 0.46713117433419366, 0.44460859441281686, 0.4296373904121393, 0.40713512011412634, 0.4014895600948855, 0.3892583762925488, 0.3754832386899665, 0.3587986248721379, 0.36243368134742965, 0.3574098971982469, 0.3370381987775085, 0.32566185520545854, 0.3237770333533841, 0.3114564706030271, 0.3128879775208662, 0.2966166385696108, 0.2910669050464194, 0.2905874424142262, 0.28153863849184535, 0.2698777456364501, 0.2725737256073854, 0.25874285161566063, 0.24687726698248, 0.23487208644081936, 0.23852019775631783, 0.23986061033107003, 0.2328143035868738, 0.23197930946546602], "accuracy": [0.3105269968509674, 0.6166952848434448, 0.7099458575248718, 0.7397965788841248, 0.7581561207771301, 0.780610203742981, 0.7861577272415161, 0.8057059645652771, 0.8117818236351013, 0.8168009519577026, 0.8278959393501282, 0.8391229510307312, 0.8429533839225769, 0.8485008478164673, 0.8552370667457581, 0.8558974862098694, 0.8595958352088928, 0.8691058158874512, 0.8654074668884277, 0.8663320541381836, 0.8747853636741638, 0.8779553771018982, 0.8768987059593201, 0.8795403242111206, 0.8809932470321655, 0.8901069760322571, 0.8879936337471008, 0.8919561505317688, 0.8957865834236145, 0.898428201675415, 0.8971073627471924, 0.9035794734954834, 0.9063531756401062, 0.9104477763175964, 0.9128252267837524, 0.9080702662467957, 0.9091269373893738, 0.9089948534965515], "val_loss": [0.9416476317814418, 0.6323546341487339, 0.5582740477153233, 0.510127067565918, 0.481413653918675, 0.45039139475141254, 0.4337866646902902, 0.41626811027526855, 0.40961417981556486, 0.3822957958493914, 0.3785485199519566, 0.35989439487457275, 0.3602480888366699, 0.35749523980276926, 0.3382925476346697, 0.33108999899455477, 0.3305725029536656, 0.32522750752312796, 0.3149328657558986, 0.31668365001678467, 0.31172206572123934, 0.3100207533155169, 0.3078710777418954, 0.317100533417293, 0.31269372361046927, 0.298555782863072, 0.31038925477436613, 0.2946436660630362, 0.3059601443154471, 0.29922464064189364, 0.29319646528788973, 0.2995116540363857, 0.28724285534449984, 0.29964556864329744, 0.3094566549573626, 0.31078680072511944, 0.31798051936285837, 0.3233705588749477], "val_accuracy": [0.6159999966621399, 0.7293333411216736, 0.7519999742507935, 0.7696666717529297, 0.777999997138977, 0.7953333258628845, 0.8086666464805603, 0.8140000104904175, 0.8146666884422302, 0.8320000171661377, 0.8339999914169312, 0.8446666598320007, 0.8410000205039978, 0.8429999947547913, 0.8506666421890259, 0.8529999852180481, 0.8523333072662354, 0.8529999852180481, 0.8579999804496765, 0.8616666793823242, 0.8669999837875366, 0.8653333187103271, 0.8663333058357239, 0.859666645526886, 0.8616666793823242, 0.8700000047683716, 0.8663333058357239, 0.8690000176429749, 0.8679999709129333, 0.874666690826416, 0.878000020980835, 0.8759999871253967, 0.8833333253860474, 0.878333330154419, 0.8740000128746033, 0.8723333477973938, 0.8686666488647461, 0.8679999709129333]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 4, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8288571238517761, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0308267752633924, 1.0868856723219444, 0.7724832837151152, 0.6891882906358759, 0.6421343267648889, 0.5951217461287338, 0.5574364898982946, 0.5298038925618827, 0.5014712570908992, 0.4826733162295722, 0.465682971498765, 0.4433437465456231, 0.42664887699720616, 0.4091297035613442, 0.40053728412186795, 0.38909903754017783, 0.3737784404528533, 0.3595983340023468, 0.3571924932518529, 0.3542828099122373, 0.3396292577101932, 0.326982507565081, 0.3254022700336899, 0.31234511923969477, 0.3079162173109945, 0.29238430170602864], "accuracy": [0.3105269968509674, 0.6169594526290894, 0.7136441469192505, 0.7400607466697693, 0.7597411274909973, 0.7788931727409363, 0.7874785661697388, 0.8072909712791443, 0.8149517774581909, 0.8186501264572144, 0.8304054737091064, 0.8383304476737976, 0.8442742228507996, 0.8494254350662231, 0.8580108284950256, 0.8576145768165588, 0.8607845902442932, 0.8667283058166504, 0.8684453964233398, 0.8688416481018066, 0.8761062026023865, 0.8798044919967651, 0.8782195448875427, 0.882710337638855, 0.8856161832809448, 0.891559898853302], "val_loss": [0.9416506290435791, 0.633163332939148, 0.5549067599432809, 0.5101183141980853, 0.4810493162700108, 0.45103883743286133, 0.43451172964913504, 0.4150572844914028, 0.40861708777291433, 0.3818423237119402, 0.37662566559655325, 0.3580849085535322, 0.3644578201430185, 0.35329476424625944, 0.34236524786267963, 0.3298498477254595, 0.3309680904660906, 0.32201740571430754, 0.31546402829033987, 0.31724137919289724, 0.31135358129228863, 0.31100337845938547, 0.30409324169158936, 0.3095279932022095, 0.30336741890226093, 0.30020058155059814], "val_accuracy": [0.6159999966621399, 0.7293333411216736, 0.753000020980835, 0.7743333578109741, 0.7773333191871643, 0.7973333597183228, 0.8083333373069763, 0.8133333325386047, 0.8143333196640015, 0.8339999914169312, 0.8353333473205566, 0.8476666808128357, 0.8399999737739563, 0.8453333377838135, 0.8476666808128357, 0.8566666841506958, 0.8496666550636292, 0.8553333282470703, 0.8613333106040955, 0.8629999756813049, 0.8666666746139526, 0.862666666507721, 0.8663333058357239, 0.8633333444595337, 0.8659999966621399, 0.8666666746139526]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7102857232093811, "mapping_values": [1, 19, 19, 12, 7, 2, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.069539809790679, 1.1339915301333392, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.31264033913612366, 0.6037511825561523, 0.6053361296653748, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [0.9673996312277657, 0.8207856076104301, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.6499999761581421, 0.7086666822433472, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 1, 2, 3, 2, 0, 0, 0, 4, 5, 2, 8, 4, 1], [0, 1, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7068571448326111, "mapping_values": [1, 16, 16, 9, 7, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.036739747947186, 1.1528336128318126, 0.8761099539948114, 0.7955694434554932, 0.6963307214309165, 0.6584544210008201, 0.6397856038165618, 0.6016871616698968, 0.5756391460601727, 0.5646319423904665, 0.5541400510747403, 0.5084213659850252, 0.511495970975863, 0.5158729262166822, 0.5018002743324851, 0.49273725415516867, 0.49277916956476925, 0.4872818683998507, 0.5377233228773536], "accuracy": [0.31501781940460205, 0.6013736724853516, 0.6777176260948181, 0.7140403985977173, 0.7359662055969238, 0.7495707273483276, 0.7614582180976868, 0.7668735980987549, 0.7810064554214478, 0.7866860628128052, 0.7845727205276489, 0.8098005652427673, 0.8113855719566345, 0.802800178527832, 0.8115176558494568, 0.8140271902084351, 0.8090080618858337, 0.8165367841720581, 0.8045172095298767], "val_loss": [0.8478784390858242, 0.6640227351869855, 0.6326279299599784, 0.5251049825123378, 0.4926491805485317, 0.48830645424979074, 0.46127826826913015, 0.43917986324855257, 0.4340444122041975, 0.4224154438291277, 0.410576479775565, 0.4081450956208365, 0.4203656656401498, 0.39178528104509625, 0.41562420129776, 0.41422918013163973, 0.4514103446687971, 0.4098955988883972, 0.4247711045401437], "val_accuracy": [0.6650000214576721, 0.7046666741371155, 0.7379999756813049, 0.7506666779518127, 0.7713333368301392, 0.781333327293396, 0.7860000133514404, 0.8029999732971191, 0.8019999861717224, 0.8056666851043701, 0.8226666450500488, 0.8296666741371155, 0.8176666498184204, 0.8383333086967468, 0.8256666660308838, 0.8180000185966492, 0.8216666579246521, 0.8326666951179504, 0.8296666741371155]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 6, 0, 6, 0, 5, 2, 8, 4, 1], [0, 1, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.7031428813934326, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0374577195180517, 1.1521666222606841, 0.8705204463260143, 0.7925655782624258, 0.7105868860337209, 0.6637874009933266, 0.6451414220951268, 0.6127045948224187, 0.5685618654800806, 0.5649855025944189, 0.5364550924682189, 0.5213331423257997, 0.5032651249632749, 0.5027777635071807, 0.5113163436046445, 0.5062414030310123, 0.5227341293312413, 0.49804644835166895], "accuracy": [0.3147536516189575, 0.602562427520752, 0.6791704893112183, 0.7127195596694946, 0.7346453666687012, 0.7500990629196167, 0.7584202885627747, 0.7675340175628662, 0.7876105904579163, 0.7909126877784729, 0.7898560166358948, 0.7967243194580078, 0.8124422430992126, 0.81112140417099, 0.8068947196006775, 0.807158887386322, 0.8042530417442322, 0.8150838613510132], "val_loss": [0.8557512249265399, 0.6497361830302647, 0.6271838460649762, 0.5467470373426165, 0.4989503451756069, 0.48493359770093647, 0.452840975352696, 0.42507974590573994, 0.42369909797395977, 0.4160455124718802, 0.42199898617608206, 0.419978712286268, 0.3989734479359218, 0.417834426675524, 0.40204135860715595, 0.4360277397292001, 0.4172922202519008, 0.4391923631940569], "val_accuracy": [0.6660000085830688, 0.7106666564941406, 0.737333357334137, 0.7329999804496765, 0.765999972820282, 0.7873333096504211, 0.7950000166893005, 0.8086666464805603, 0.812666654586792, 0.8119999766349792, 0.8169999718666077, 0.8253333568572998, 0.8346666693687439, 0.8286666870117188, 0.8320000171661377, 0.8199999928474426, 0.8346666693687439, 0.831333339214325]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [3, 8, 6, 3, 2, 1, 0, 3, 0, 5, 2, 8, 4, 1, 6, 6, 6, 3, 6, 5, 7, 4, 6, 8, 0, 2, 0, 1, 4, 9, 6, 2, 5, 0, 8, 9], [0, 1, 0, 1, 0, 2, 1, 0, 2, 1, 3, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 2, 3, 0, 1, 9], [5, 3, 3, 3, 0], [5, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.6980000138282776, "mapping_values": [1, 4, 4, 2, 2, 1, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, grad)))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30270397970154, 2.299148225356024, 2.295219837005317, 2.2906382513745367, 2.2819387315995248, 2.2718236905204905, 2.261133648164835, 2.2501255306097274, 2.2324987137401107, 2.21630993750369, 2.1959537304371985, 2.1710984348510753, 2.141113524014341, 2.109358465887253, 2.0694039424082007, 2.0247833755242746, 1.969089810055607, 1.9000095467699076, 1.8239369331774788, 1.7509870841880721, 1.66877285109346, 1.5970484804341885, 1.5244587520802924, 1.468351466119439, 1.4204732320878988, 1.3913730729792995, 1.3844834830640975, 1.3710331037264647, 1.394346339717407, 1.3695933900693813, 1.3806907449809709, 1.3468095576994612, 1.3053134604688208, 1.2405730112904902, 1.1794849405860572, 1.1394295708661728, 1.0924321261725767, 1.036606167726639, 0.9968977660519367, 0.9463549781201491, 0.9284354455246507, 0.9089106971624584, 0.912550929743364, 0.9102002168296902, 0.9170521031029394, 0.9144563071794829], "accuracy": [0.09681680053472519, 0.09734513610601425, 0.1026284471154213, 0.12098798155784607, 0.1426495909690857, 0.16880200803279877, 0.20301149785518646, 0.22599393129348755, 0.2705058753490448, 0.29441288113594055, 0.31026285886764526, 0.3381323516368866, 0.36124685406684875, 0.3743230700492859, 0.38264429569244385, 0.38621053099632263, 0.4027208983898163, 0.4127592146396637, 0.4333641529083252, 0.43309998512268066, 0.45766741037368774, 0.4675736427307129, 0.47787609696388245, 0.4904239773750305, 0.50785893201828, 0.518161416053772, 0.5229163765907288, 0.533350944519043, 0.5264826416969299, 0.5400871634483337, 0.54655921459198, 0.5583146214485168, 0.5692775249481201, 0.594241201877594, 0.6103553175926208, 0.6186765432357788, 0.6325452327728271, 0.64667809009552, 0.6465460062026978, 0.6540747880935669, 0.6527539491653442, 0.6598864197731018, 0.6573768258094788, 0.6535464525222778, 0.6543388962745667, 0.6584334969520569], "val_loss": [1.9698972702026367, 1.9668339320591517, 1.9618793215070451, 1.9551024436950684, 1.9466210774012975, 1.9365224838256836, 1.9248923574175154, 1.9117250442504883, 1.896812847682408, 1.879718235560826, 1.8596552440098353, 1.835695675441197, 1.8066620145525252, 1.7715026310511999, 1.7289413724626814, 1.6777305943625314, 1.6170152936662947, 1.5462569849831718, 1.4663264070238387, 1.3797308376857214, 1.2903539793831962, 1.20351208959307, 1.1238978249686105, 1.0536087240491594, 0.9929684570857457, 0.9411106109619141, 0.8961164951324463, 0.858628341129848, 0.8326636723109654, 0.8200773852212089, 0.8099648782185146, 0.786366513797215, 0.7570728744779315, 0.742351600102016, 0.7407790763037545, 0.7378504276275635, 0.724245582308088, 0.7002016135624477, 0.6759999990463257, 0.6636055367333549, 0.6650468792234149, 0.6721484661102295, 0.679242662021092, 0.6857253994260516, 0.6916686126164028, 0.6965224742889404], "val_accuracy": [0.043666668236255646, 0.061666667461395264, 0.09833333641290665, 0.16699999570846558, 0.2473333328962326, 0.30799999833106995, 0.3466666638851166, 0.36399999260902405, 0.3816666603088379, 0.39366665482521057, 0.4076666533946991, 0.4203333258628845, 0.43799999356269836, 0.45233333110809326, 0.4663333296775818, 0.47833332419395447, 0.4880000054836273, 0.5040000081062317, 0.5220000147819519, 0.5400000214576721, 0.5553333163261414, 0.5726666450500488, 0.5893333554267883, 0.6203333139419556, 0.6460000276565552, 0.659333348274231, 0.671999990940094, 0.6769999861717224, 0.6786666512489319, 0.67166668176651, 0.6660000085830688, 0.6816666722297668, 0.6963333487510681, 0.70333331823349, 0.7046666741371155, 0.7089999914169312, 0.7096666693687439, 0.706333339214325, 0.7126666903495789, 0.718999981880188, 0.7256666421890259, 0.7136666774749756, 0.7056666612625122, 0.7053333520889282, 0.7106666564941406, 0.7126666903495789]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 1, 0, 1, 0, 2, 1, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 3, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.15371428430080414, "mapping_values": [1, 15, 15, 9, 6, 3, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4561485231765086, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20776647329330444, 0.10962884873151779, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [511.0284423828125, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.15399999916553497, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 8, 6, 3, 2, 6, 0, 6, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [4, 4, 0], [64, 55], [1, 0, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302676561407488, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 1, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2, 1], [25, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(beta), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))", "other_info": {"loss": [2.302620701014547, 2.3024558748598696, 2.3026508529818273, 2.303369482069629, 2.305755958297643, 2.317203310896078, 2.3687378408225173], "accuracy": [0.10315678268671036, 0.10249637067317963, 0.09998679161071777, 0.1022322028875351, 0.10276053100824356, 0.10315678268671036, 0.09998679161071777], "val_loss": [1.9736430304391044, 1.9737061773027693, 1.9739365577697754, 1.9748973846435547, 1.9797019277300154, 2.0019190652029857, 2.099897657121931], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 8, 6, 3, 2, 1, 0, 3, 0, 5, 2, 8, 4, 1, 6, 6, 6, 3, 6, 5, 7, 4, 6, 8, 0, 2, 0, 1, 4, 9, 6, 2, 5, 0, 8, 9], [1, 1, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 0, 0, 1, 1], [0, 0, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 30, 20, 5, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.pow(grad, grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad)))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.544520473184209, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03737947344779968, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [132.78022112165178, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 1, 0, 1, 0, 2, 1, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302312461754523, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [5, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302676561407488, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10170386731624603, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 1, 6, 3, 2, 0, 0, 0, 4, 5, 2, 8, 4, 1, 7, 8, 2, 9, 5, 5, 3, 9], [0, 0, 0, 1, 0, 1, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 22, 11, 6, 6, 6, 4, 2, 1, 12, 10, 8, 2, 1, 2, 1, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(grad))))))))))), tf.math.add(alpha, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.square(alpha)))))))))), grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.8068553034987573e+34, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.058512747287750244, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [3, 8, 6, 3, 2, 1, 0, 3, 0, 1, 2, 8, 9, 1, 6, 6, 6, 3, 6, 5, 7, 2, 6, 8, 1, 2, 0, 1, 4, 9, 6, 2, 2, 0, 8, 9], [0, 1, 0, 1, 0, 2, 1, 0, 2, 1, 3, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 45, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [75, 55], [0, 0, 0, 1, 1, 1], [1, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 6, 6, 4, 2, 2, 10, 8, 5, 3, 1, 6, 3, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.303004345574541, 3.6931999472579182, 7478.859906725769, 15600021.823982961, 134694206.9982829, 272490988.06287146], "accuracy": [0.10315678268671036, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9813295091901506, 31.906292506626674, 120725.15178571429, 66575115.428571425, 184728274.2857143, 302881435.4285714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 3, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 0, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [5, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08321225643157959, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 4, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [88, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030110104618418, 2.3014965947939343, 2.301645057044875, 2.303074905570346, 2.302163432916992, 2.301895547646888], "accuracy": [0.09589222073554993, 0.09285431355237961, 0.08651433140039444, 0.08902391046285629, 0.09166556596755981, 0.09192973375320435], "val_loss": [1.9709971291678292, 1.9709950174604143, 1.9709929057529993, 1.9709907940455846, 1.9709888185773576, 1.9709868431091309], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 0, 0, 2, 2, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [21, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 2, 9, 0, 1, 9], [3, 3, 3, 3, 0], [95, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0, 4], [64, 55], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.03228571265935898, "mapping_values": [1, 15, 15, 9, 6, 2, 6, 6, 4, 2, 1, 11, 10, 6, 4, 1, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035022311474527, 2.3034916233629077, 2.3054840061501145, 2.3096165110989015, 2.310892941189354, 2.3149861233534517], "accuracy": [0.09457138925790787, 0.08902391046285629, 0.08321225643157959, 0.07713644206523895, 0.07872143387794495, 0.07938185334205627], "val_loss": [1.9719879286629813, 1.973442895071847, 1.9749455451965332, 1.9771478516714913, 1.9793338775634766, 1.982126099722726], "val_accuracy": [0.029333332553505898, 0.0273333340883255, 0.023666666820645332, 0.023000000044703484, 0.02566666714847088, 0.02866666577756405]}}]