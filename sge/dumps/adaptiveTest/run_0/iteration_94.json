[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 8, 2, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [94, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1], [1, 9, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.5137143135070801, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3093159275284187, 2.31670007128143, 2.3524889352692906, 2.300335404139468, 2.2755127865105194, 2.291168814085856, 2.4401675934615845, 2.4092255525144335, 2.259190330856811, 2.528516838657952, 2.0813767332458193, 1.858702256742202, 1.8651911048778311, 1.9491367637205748, 1.7907800286311546, 1.9349229993160137, 1.6946975711849719, 1.4653630339946604], "accuracy": [0.2075023055076599, 0.12310130894184113, 0.19310526549816132, 0.12891295552253723, 0.13181878626346588, 0.12891295552253723, 0.1690661758184433, 0.1554616242647171, 0.14278165996074677, 0.20842689275741577, 0.2755250334739685, 0.3797384798526764, 0.38528597354888916, 0.33126401901245117, 0.3987584114074707, 0.3630960285663605, 0.4053625762462616, 0.5102364420890808], "val_loss": [1.7783566883632116, 1.9534821510314941, 1.9777976444789342, 1.942821638924735, 1.9740249088832311, 1.5553654943193709, 1.9319137164524622, 1.9733048166547502, 3.994384765625, 1.572127103805542, 1.3327421801430839, 1.5628687994820731, 1.0251712117876326, 1.3959989547729492, 1.3155285630907332, 1.7955102920532227, 0.9778321811131069, 0.9648942947387695], "val_accuracy": [0.2409999966621399, 0.1446666717529297, 0.09833333641290665, 0.1666666716337204, 0.10133333504199982, 0.27799999713897705, 0.15266667306423187, 0.11566666513681412, 0.10266666859388351, 0.3843333423137665, 0.512333333492279, 0.37700000405311584, 0.6399999856948853, 0.49033331871032715, 0.550000011920929, 0.23333333432674408, 0.6026666760444641, 0.625]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 2, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [6, 4, 8, 2, 0, 9, 4, 4, 7, 9, 1, 9], [3, 3, 3, 2, 0], [59, 55, 66], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.36742857098579407, "mapping_values": [1, 8, 8, 5, 3, 2, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3094231746987486, 2.3155214601677203, 2.445653040584493, 2.231894590174124, 2.3480751301240548, 2.3069532774128003, 2.3052409018948725, 2.303578428667235], "accuracy": [0.20723815262317657, 0.12310130894184113, 0.18636904656887054, 0.17831197381019592, 0.12957337498664856, 0.12693171203136444, 0.09879804402589798, 0.0936468094587326], "val_loss": [1.764387811933245, 1.9619605200631278, 1.878565992627825, 2.052004405430385, 1.9482489313398088, 1.9759159769330705, 1.974161011832101, 1.9737961632864816], "val_accuracy": [0.25, 0.11733333021402359, 0.38233333826065063, 0.3596666753292084, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [65, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 4, 8, 2, 0, 9, 2, 7, 2, 6, 5, 6, 3, 5, 1, 4, 7, 8, 3, 0, 3, 2, 1, 3, 0, 2, 5, 8, 1, 5, 0, 4], [3, 3, 3, 2, 3, 5, 3, 1, 2, 4, 2, 3, 2, 5, 3, 3, 3, 2, 5], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.34457144141197205, "mapping_values": [1, 1, 1, 0, 1, 0, 49, 49, 30, 19, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.square(grad))), tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha)))))), tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), beta))), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, grad))))))), beta)))))), tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.309286245564743, 2.3213716470617363, 2.1778995535392895, 2.3174348450639166, 2.3148908395304924, 2.3035651549466643, 2.303570698847813, 2.3033002454213274], "accuracy": [0.2075023055076599, 0.12455421686172485, 0.20974771678447723, 0.23206974565982819, 0.09760929644107819, 0.10091137140989304, 0.09470347315073013, 0.09840179979801178], "val_loss": [1.7924344880240304, 1.9524576323372977, 1.9095792089189803, 2.0184880665370395, 1.9739807673863001, 1.9736518859863281, 1.9736478669302804, 1.973728861127581], "val_accuracy": [0.24199999868869781, 0.09966666996479034, 0.3076666593551636, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 3, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 1, 0, 2], [17, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.23999999463558197, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3092861530126094, 2.3225403844152916, 2.451502409656491, 2.3046655776462597, 2.302471520862622, 2.26988897360138], "accuracy": [0.20763438940048218, 0.12191256135702133, 0.17434948682785034, 0.09589222073554993, 0.11253467202186584, 0.1632545292377472], "val_loss": [1.793447426387242, 1.9591356686183385, 1.9759009906223841, 1.9733544758387975, 1.9706947462899345, 1.8806947299412318], "val_accuracy": [0.2423333376646042, 0.12166666984558105, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.18266665935516357]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [65, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 4, 8, 0, 0, 9], [0, 3, 3, 2], [17, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2394285649061203, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3092191552504917, 2.320184586779033, 2.2614399798242975, 2.2534370731605184, 2.3144454751992822, 2.2781068024429363], "accuracy": [0.2078985571861267, 0.12693171203136444, 0.16272619366645813, 0.1710474193096161, 0.16114120185375214, 0.14317791163921356], "val_loss": [1.7882712909153529, 1.9585634640284948, 1.973639624459403, 1.8590925761631556, 1.9709792818341936, 1.9761462211608887], "val_accuracy": [0.24066667258739471, 0.0989999994635582, 0.1469999998807907, 0.13966666162014008, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1], [6, 4, 8, 2, 0, 9, 4, 4, 7, 9, 1, 9], [3, 3, 3, 2, 3], [59, 55, 19], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2394285649061203, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.309288758013494, 2.3202945573880074, 2.4776427530735363, 2.304234768248127, 2.303627730266151, 2.303174546680997], "accuracy": [0.20763438940048218, 0.12349755316972733, 0.15136705338954926, 0.09602430462837219, 0.09325055778026581, 0.09655263274908066], "val_loss": [1.7889746938432967, 1.949993474142892, 1.9750490188598633, 1.9740234102521623, 1.9737329483032227, 1.9736424854823522], "val_accuracy": [0.24199999868869781, 0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1], [1, 9, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.23885715007781982, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.309259037977165, 2.314604525930767, 2.3104504334408578, 2.304349935286238, 2.3036569873528663, 2.3031039881337794], "accuracy": [0.2078985571861267, 0.12402588874101639, 0.15995244681835175, 0.0936468094587326, 0.09840179979801178, 0.09536388516426086], "val_loss": [1.772561890738351, 1.9511372702462333, 1.9747789246695382, 1.9738176890781947, 1.9737143516540527, 1.9736524990626745], "val_accuracy": [0.24133333563804626, 0.14733333885669708, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1], [1, 9, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.23714286088943481, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3092862022960694, 2.3213027789529446, 2.250849935719051, 2.304029300244036, 2.302437232044851, 2.3141463302964502], "accuracy": [0.20763438940048218, 0.12112006545066833, 0.17580240964889526, 0.09602430462837219, 0.10236428678035736, 0.216880202293396], "val_loss": [1.7893484660557337, 1.9573757989065987, 1.9742992264883858, 1.9734203474862235, 1.968801770891462, 2.001462255205427], "val_accuracy": [0.2433333396911621, 0.11266666650772095, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1], [1, 9, 8, 1, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.2345714271068573, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3095238898739194, 2.3136494509878727, 2.332736491842072, 2.303151113828569, 2.2630909366567358, 2.301569930251563], "accuracy": [0.20737022161483765, 0.1298375427722931, 0.15915995836257935, 0.10210011899471283, 0.1562541276216507, 0.18161405622959137], "val_loss": [1.7802649225507463, 1.9572655814034599, 1.9742960929870605, 1.9725230761936732, 1.9772428103855677, 1.9779843602861678], "val_accuracy": [0.2383333295583725, 0.1589999943971634, 0.0833333358168602, 0.11100000143051147, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [5, 6, 0, 2, 7, 6, 9, 8, 3, 5, 2], [2, 0, 2, 3, 1, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 73, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1], [1, 9, 8, 6, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [4], [], [1, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08109892904758453, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 2, 0, 2, 4, 6, 9, 0, 3, 5, 2], [0, 2, 1, 0, 2, 0, 0, 2, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1], [9, 8, 8, 6, 0, 9], [3, 3, 3, 2], [1, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [9, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019150865391307, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [2, 6, 3, 4, 1, 6, 2, 0, 3, 5, 2], [2, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 79, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 1, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [3, 3, 3, 2, 3], [59, 55, 19], [0, 1, 0], [1], [8], [7], [], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 4, 5, 2, 9, 3, 7, 3, 6, 3, 6, 6, 9, 4, 4, 6, 4, 9, 2], [3, 0, 2, 0, 1, 0, 0, 0, 3, 0, 2, 0], [77, 32, 48, 74, 32, 24, 7, 61, 48, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 31, 19, 12, 10], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(tf.math.square(tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.pow(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1], [6, 4, 8, 2, 0, 9], [0, 1, 0, 2], [17, 55], [0, 1, 0], [1], [8], [0], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3021189182693647, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [56, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 4, 8, 2, 0, 9], [3, 3, 3, 2], [41, 55], [0, 1, 0], [1], [8], [7], [35], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 6, 6, 3, 3, 2, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364187891110768, 3.024365532021906, 4.892673294038159, 8.026562923768477, 12.451595665142284, 17.877391479869072], "accuracy": [0.09430722147226334, 0.09866596013307571, 0.09853387624025345, 0.0936468094587326, 0.10434553027153015, 0.09509972482919693], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1], [6, 4, 8, 2, 0, 9], [0, 1, 0, 2], [17, 55], [0, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364187891110768, 3.024365532021906, 4.892673294038159, 8.026562923768477, 12.451595665142284, 17.877391479869072], "accuracy": [0.09430722147226334, 0.09866596013307571, 0.09853387624025345, 0.0936468094587326, 0.10434553027153015, 0.09509972482919693], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [65, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 7, 8, 2, 0, 2, 4, 5, 3, 2], [3, 3, 3, 2, 4, 5, 4, 0], [17, 55], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), beta))), tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364187891110768, 3.024365532021906, 4.892673294038159, 8.026562923768477, 12.451595665142284, 17.877391479869072], "accuracy": [0.09430722147226334, 0.09866596013307571, 0.09853387624025345, 0.0936468094587326, 0.10434553027153015, 0.09509972482919693], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [93, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 4, 8, 2, 0, 9], [0, 1, 0, 2], [69, 55, 19], [0, 1, 0], [1], [8], [6], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0, 2], [6, 32]], "fitness": -0.09828571230173111, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.364187891110768, 3.024365532021906, 4.892673294038159, 8.026562923768477, 12.451595665142284, 17.877391479869072], "accuracy": [0.09430722147226334, 0.09866596013307571, 0.09853387624025345, 0.0936468094587326, 0.10434553027153015, 0.09509972482919693], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1], [4, 9, 8, 1, 0, 9], [3, 3, 3, 2], [41, 75], [0, 1, 0], [0], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 6, 1, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3038447923538095, 2.3027111865494465, 2.302118917072706, 2.3025762473020603, 2.3038645556511232, 2.3031399028648587], "accuracy": [0.08519349992275238, 0.08691058307886124, 0.08915598690509796, 0.08691058307886124, 0.08994849026203156, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [8, 6, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [1, 9, 8, 1, 0, 9], [3, 3, 3, 2, 3], [59, 55, 19], [1, 1, 0], [1], [8], [7], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 6, 1, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3038447923538095, 2.3027111865494465, 2.302118917072706, 2.3025762473020603, 2.3038645556511232, 2.3031399028648587], "accuracy": [0.08519349992275238, 0.08691058307886124, 0.08915598690509796, 0.08691058307886124, 0.08994849026203156, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [3, 2, 0, 2, 4, 6, 9, 0, 3, 5, 2], [2, 2, 3, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [80, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1], [2, 4, 8, 2, 0, 9], [3, 3, 3, 2, 3], [17, 55], [1, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 6, 6, 3, 3, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, grad))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3038447923538095, 2.3027111865494465, 2.302118917072706, 2.3025762473020603, 2.3038645556511232, 2.3031399028648587], "accuracy": [0.08519349992275238, 0.08691058307886124, 0.08915598690509796, 0.08691058307886124, 0.08994849026203156, 0.08968432247638702], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]