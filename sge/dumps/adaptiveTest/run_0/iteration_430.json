[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.86709837840454, 1.1485855154877151, 0.7645952109222351, 0.6636156852549849, 0.6345388088495881, 0.5601835655671668, 0.5203126254508115, 0.498562766300799, 0.4919048351634369, 0.4598199389377967, 0.44133349239487674, 0.4357190257869046, 0.42406930682240634, 0.40115512698286515, 0.39782129091719565, 0.3674268401443777, 0.3671947919484757, 0.3529467458982257, 0.3498065032506773, 0.3318654498159925, 0.32555631678558816, 0.31920661952721996, 0.30593764296202786, 0.29235634156552603, 0.2848967562230697, 0.28359397621501814, 0.2710038284623407, 0.27335263582630687, 0.26976777900321813, 0.2645269632378841, 0.2448900348777863, 0.24907759731440354, 0.23808555091061942, 0.24208550819033062, 0.23038261122297948, 0.2346277629041149, 0.2171921003228559, 0.21943428599524256, 0.20809053414021628, 0.19987509674903756, 0.20330693829313104, 0.18735403556825936, 0.1906776133584718, 0.1807859477042963, 0.17934053842031944, 0.17251283379121307], "accuracy": [0.3829084634780884, 0.609430730342865, 0.713379979133606, 0.7494386434555054, 0.7666094303131104, 0.7897239327430725, 0.805177628993988, 0.8173292875289917, 0.8183859586715698, 0.8352925777435303, 0.8401796221733093, 0.8421608805656433, 0.8436138033866882, 0.8518029451370239, 0.8551049828529358, 0.8659358024597168, 0.8668603897094727, 0.8687095642089844, 0.8696341514587402, 0.8778232932090759, 0.8802007436752319, 0.8819178342819214, 0.8803328275680542, 0.8927486538887024, 0.8916919827461243, 0.8916919827461243, 0.897899866104126, 0.8967111110687256, 0.8988244533538818, 0.9029190540313721, 0.9072777628898621, 0.9066173434257507, 0.9099194407463074, 0.9068815112113953, 0.9141460657119751, 0.9117686152458191, 0.9177123308181763, 0.9154669046401978, 0.9210143685340881, 0.9215427041053772, 0.9208822846412659, 0.9277506470680237, 0.9290714859962463, 0.9310526847839355, 0.9318451881408691, 0.9348831176757812], "val_loss": [1.1059438501085554, 0.6506066833223615, 0.5480315174375262, 0.4940699168613979, 0.45385347093854633, 0.42362976925713675, 0.3966044272695269, 0.40097101245607647, 0.37082805803843905, 0.35059228965214323, 0.35714347873415264, 0.33799024139131817, 0.3498469420841762, 0.35992175340652466, 0.3178343006542751, 0.32093822956085205, 0.318480840751103, 0.32349856410707745, 0.31128003767558504, 0.33406704664230347, 0.3140943305832999, 0.31649147612707956, 0.2917459692273821, 0.3038638745035444, 0.30062663555145264, 0.3051947440419878, 0.295011614050184, 0.3037404162543161, 0.302207921232496, 0.28905424901417326, 0.304639322417123, 0.3096709166254316, 0.3231146591050284, 0.29408457449504305, 0.3208221197128296, 0.2992649929864066, 0.3294435739517212, 0.3074365258216858, 0.3019359452383859, 0.3003008280481611, 0.3013749378068106, 0.3064552460397993, 0.30988689831324984, 0.3073522618838719, 0.3267009173120771, 0.3155281288283212], "val_accuracy": [0.628333330154419, 0.7076666951179504, 0.7416666746139526, 0.7683333158493042, 0.7996666431427002, 0.8113333582878113, 0.8336666822433472, 0.8263333439826965, 0.8379999995231628, 0.8443333506584167, 0.8433333039283752, 0.847000002861023, 0.8443333506584167, 0.828000009059906, 0.8616666793823242, 0.862666666507721, 0.8569999933242798, 0.8529999852180481, 0.862666666507721, 0.8536666631698608, 0.8676666617393494, 0.8539999723434448, 0.8736666440963745, 0.8743333220481873, 0.8686666488647461, 0.8663333058357239, 0.8759999871253967, 0.8666666746139526, 0.8786666393280029, 0.8743333220481873, 0.875, 0.862333357334137, 0.8733333349227905, 0.8806666731834412, 0.8646666407585144, 0.8740000128746033, 0.871666669845581, 0.8836666941642761, 0.8806666731834412, 0.8816666603088379, 0.8856666684150696, 0.8790000081062317, 0.8840000033378601, 0.8813333511352539, 0.8806666731834412, 0.8853333592414856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [79, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 1, 0, 1, 1, 1], [1, 7, 8], [2, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.7645714282989502, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.540168344541516, 2.3953259460772696, 2.1087069444337683, 1.8640543550563888, 1.8132745043759995, 1.7515184107457862, 1.4470570638525866, 1.4818829251727597, 1.2120664823072587, 1.2865294502112434, 1.0904111424614773, 1.1498126396177435, 1.057262144745648, 0.9288586267642751, 0.929363004850469, 0.86080478490572, 0.7935687234262827, 0.732000548400899, 0.7271102938464982, 0.7149015046019422, 0.682837860900114, 0.6468516431070825, 0.6721774647264527, 0.6718354829471535, 0.6254060101814557, 0.6071022226432248, 0.6359163470130319, 0.578336750204537, 0.5935313390262091, 0.5492507061938159, 0.5503514328999306, 0.5520538769740123, 0.54320933589405, 0.5172283924754899, 0.50531334522189, 0.5174444951220368, 0.48284378259283695, 0.47718368675950934, 0.4691023310933524, 0.47191747083813207, 0.45280250133839517, 0.4542961968068418, 0.4507796218083157, 0.4766081922270949, 0.4274476621727571, 0.4378957541635118, 0.4251838055985589, 0.4219752728797347, 0.40821530822560675, 0.3957758580161407, 0.4005564374064631, 0.3845267927980442, 0.38110792938397936, 0.39168953437374376, 0.3707776673363499, 0.3687925721400481, 0.36260186219810575, 0.37557989852523854, 0.33594389819371434, 0.3610345717780799, 0.3463924008392938, 0.33835761333107084, 0.3455957037944993, 0.32553686495029444, 0.3342063459407195, 0.31945624494077096, 0.31642972553458115, 0.31259276250161044, 0.33134257622194047, 0.30237768409180055, 0.3270894285867621, 0.31151847743858924, 0.3027790215202468, 0.29162940599064646], "accuracy": [0.18597279489040375, 0.2110685557126999, 0.29982829093933105, 0.38145554065704346, 0.4115704596042633, 0.43309998512268066, 0.4947827160358429, 0.5064060091972351, 0.5608242154121399, 0.5437855124473572, 0.6110157370567322, 0.602562427520752, 0.627129852771759, 0.6612072587013245, 0.6586976647377014, 0.6760005354881287, 0.7153612375259399, 0.7218332886695862, 0.7169462442398071, 0.7294940948486328, 0.7392682433128357, 0.7508915662765503, 0.7407211661338806, 0.7433628439903259, 0.7600052952766418, 0.7700436115264893, 0.7586844563484192, 0.7816668748855591, 0.776251494884491, 0.7903843522071838, 0.7922335267066956, 0.7885351777076721, 0.7876105904579163, 0.8112534880638123, 0.8034605979919434, 0.8030643463134766, 0.8202351331710815, 0.8166688680648804, 0.8187822103500366, 0.8226125836372375, 0.828292191028595, 0.8297450542449951, 0.8319904804229736, 0.8170651197433472, 0.8411042094230652, 0.8347642421722412, 0.8379341959953308, 0.8387266993522644, 0.844010055065155, 0.8491612672805786, 0.8479725122451782, 0.8539162874221802, 0.8535200357437134, 0.8562937378883362, 0.8618412613868713, 0.856689989566803, 0.8599920868873596, 0.8541803956031799, 0.8721436858177185, 0.860652506351471, 0.8685774803161621, 0.8693699836730957, 0.869502067565918, 0.8725399374961853, 0.8735966086387634, 0.8765024542808533, 0.878351628780365, 0.8778232932090759, 0.8758420348167419, 0.8854840993881226, 0.8730682730674744, 0.8812574148178101, 0.8816536664962769, 0.886672854423523], "val_loss": [1.912203107561384, 1.6494132450648717, 1.7591652870178223, 1.5737807410103934, 1.783205577305385, 1.217153855732509, 0.8404338189533779, 0.9171937193189349, 0.9582828113010952, 0.9940132754189628, 0.8257110118865967, 0.8717239243643624, 0.6714986051831927, 0.6075974532536098, 0.7180959497179303, 0.5552550213677543, 0.5362225941249302, 0.5341419662748065, 0.5120235170636859, 0.5637350593294416, 0.4736610991614206, 0.47787904739379883, 0.5695407049996513, 0.47865610463278635, 0.4922561304909842, 0.5091642822538104, 0.48107429913112093, 0.49591188771384104, 0.44574504239218576, 0.43883947815213886, 0.4047736270087106, 0.4409288338252476, 0.42041938645499094, 0.42359399795532227, 0.409466164452689, 0.3988555244037083, 0.3901289701461792, 0.39145946502685547, 0.3979562095233372, 0.3683051126343863, 0.38310212748391287, 0.37547613041741507, 0.40751349925994873, 0.3610971910612924, 0.3667538506644113, 0.37228446347372873, 0.4277197888919285, 0.3628161549568176, 0.34198289258139475, 0.3463702116693769, 0.3471427389553615, 0.3676222562789917, 0.3463920099394662, 0.3348328300884792, 0.37024366004126413, 0.32859266655785696, 0.3455848693847656, 0.33307639190128874, 0.3403520498956953, 0.3430297204426357, 0.33825706584112986, 0.3523122157369341, 0.3489294563020979, 0.3486347624233791, 0.3545134833880833, 0.330822229385376, 0.3493620072092329, 0.3470765267099653, 0.33016098397118704, 0.36030737842832294, 0.350445032119751, 0.3515484503337315, 0.329138594014304, 0.3326623695237296], "val_accuracy": [0.2516666650772095, 0.4090000092983246, 0.3606666624546051, 0.38233333826065063, 0.38466668128967285, 0.5136666893959045, 0.6600000262260437, 0.5683333277702332, 0.5833333134651184, 0.6286666393280029, 0.6883333325386047, 0.6836666464805603, 0.7306666374206543, 0.7039999961853027, 0.6763333082199097, 0.7716666460037231, 0.7720000147819519, 0.7540000081062317, 0.7716666460037231, 0.7210000157356262, 0.7879999876022339, 0.784333348274231, 0.699999988079071, 0.7866666913032532, 0.793666660785675, 0.765999972820282, 0.7710000276565552, 0.7646666765213013, 0.8026666641235352, 0.812666654586792, 0.824999988079071, 0.8066666722297668, 0.8109999895095825, 0.8190000057220459, 0.8183333277702332, 0.8259999752044678, 0.8276666402816772, 0.8259999752044678, 0.8353333473205566, 0.8446666598320007, 0.8393333554267883, 0.8416666388511658, 0.8040000200271606, 0.8456666469573975, 0.8363333344459534, 0.8420000076293945, 0.7979999780654907, 0.8493333458900452, 0.856333315372467, 0.8546666502952576, 0.8529999852180481, 0.8516666889190674, 0.8543333411216736, 0.8579999804496765, 0.8266666531562805, 0.8606666922569275, 0.8556666374206543, 0.8600000143051147, 0.856333315372467, 0.8546666502952576, 0.8619999885559082, 0.8539999723434448, 0.8546666502952576, 0.8646666407585144, 0.8553333282470703, 0.859000027179718, 0.8529999852180481, 0.8500000238418579, 0.8676666617393494, 0.8556666374206543, 0.8629999756813049, 0.8629999756813049, 0.8659999966621399, 0.8616666793823242]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [79, 84, 6], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1], [8], [2, 7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.5625714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5401542092263973, 2.4208065470873232, 2.134544113009534, 2.0670092265524995, 1.8969797607363175, 1.6803231291908867, 1.6304391040746578, 1.6160768802218575, 1.5442224983305521, 1.6802864649733218], "accuracy": [0.18597279489040375, 0.21952186524868011, 0.2919033169746399, 0.30418702960014343, 0.37128517031669617, 0.47866860032081604, 0.452119916677475, 0.45344075560569763, 0.49465063214302063, 0.4554220139980316], "val_loss": [1.911668368748256, 1.685457672391619, 1.432969127382551, 1.4163975715637207, 1.1512926646641322, 1.759936945778983, 1.2407218047550745, 1.3783761773790633, 1.0624197551182337, 1.5543463570731026], "val_accuracy": [0.24966666102409363, 0.3840000033378601, 0.5049999952316284, 0.4819999933242798, 0.6026666760444641, 0.27033331990242004, 0.534333348274231, 0.562666654586792, 0.5400000214576721, 0.4286666810512543]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0], [8], [7], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.14571428298950195, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [8909952.153185343, 9660902.482829217, 7375323.17606657, 5648778.0231145155, 4241054.233786819, 2519502.325584467], "accuracy": [0.12561088800430298, 0.0956280529499054, 0.09259014576673508, 0.09655263274908066, 0.10210011899471283, 0.10210011899471283], "val_loss": [7919655.142857143, 6466544.571428572, 4792637.428571428, 3669015.785714286, 2657617.8571428573, 1463530.642857143], "val_accuracy": [0.12266666442155838, 0.10599999874830246, 0.09166666865348816, 0.09099999815225601, 0.09799999743700027, 0.09333333373069763]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [2, 41, 6], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 7, 8], [3, 5, 0, 1], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30065816315709, 2.3024345503633112, 2.302586087681724, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9733322688511439, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09533333033323288, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 63, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1], [1, 7, 8], [7, 0], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 5, 3, 2, 1, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301354527583668, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.718748304384545e+32, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06379606574773788, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [6, 9, 9, 0, 1, 9], [3, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1], [8], [0, 5, 4, 1], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1054809313.4651651, 19721114242.721966, 93447190542.87782, 265124546238.90952, 562584082431.7295, 1036267456943.9979], "accuracy": [0.10157178342342377, 0.10460969805717468, 0.09760929644107819, 0.10117553919553757, 0.09840179979801178, 0.10038304328918457], "val_loss": [3984043300.571429, 31862276096.0, 107523461705.14285, 254857351753.14285, 497754814171.4286, 860098321261.7142], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [3, 0, 3, 3, 0], [11, 84, 6], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1], [8], [4], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.598611800499333e+24, 7.2582699755919435, 14.416908525157803, 21.616214078793107, 28.811051118422682, 36.01050772343833], "accuracy": [0.07898560166358948, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.795748846871512, 9.812397820608956, 15.984380994524274, 22.151865822928293, 28.32324000767299, 34.49976566859654], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [78, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [8, 3, 9, 8, 1, 9], [4, 0, 3, 3, 0], [29, 84, 6], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1], [8], [7], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [39, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [79, 73, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [1, 1, 0], [1, 7, 8], [7, 7], [64], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [6, 4, 9, 0, 1, 9], [4, 3, 3, 3, 0], [68, 35, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [0, 1, 0, 1, 1], [4, 7, 5, 2, 9, 3, 9], [2, 0, 3], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [1, 1, 3, 3, 0], [79, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [1, 7, 8], [0], [64], [0, 0, 0, 0, 1, 0, 1, 1], [3, 7, 0, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3023448978920875, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [45, 84, 6], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0], [0, 1, 1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023448978920875, 2.3025851429508597, 2.3025851429508597, 2.3025851384791336, 2.3025850754970763, 2.3025851699701625], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.9736443247113908, 1.9736443247113908, 1.9736443247113908], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [86, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [7], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.142393933922599e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17817988991737366, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 1, 3, 3, 0], [79, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1], [1, 7, 8], [7, 2], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [78, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 3, 0, 1, 9], [3, 0, 3, 3, 0], [45, 44, 6], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3657107709059075, 3.012169132458142, 4.903682191342631, 8.08711097854838, 12.360197606387155, 17.93621120168202], "accuracy": [0.09774138033390045, 0.10381719470024109, 0.09576013684272766, 0.09919429570436478, 0.09787346422672272, 0.09972262382507324], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [4, 3, 3, 3, 0], [79, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1], [1, 7, 8], [2, 7], [64], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, beta))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [2.3019833332354507, 2.303467053023028, 2.303038432377362, 2.3034353888880355, 2.30276760808103, 2.3014379998460153], "accuracy": [0.08928807079792023, 0.08545766770839691, 0.08387266844511032, 0.08677849918603897, 0.08770307898521423, 0.10196803510189056], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 3, 0], [79, 84, 6], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3019833332354507, 2.303467053023028, 2.303038432377362, 2.3034353888880355, 2.30276760808103, 2.3014379998460153], "accuracy": [0.08928807079792023, 0.08545766770839691, 0.08387266844511032, 0.08677849918603897, 0.08770307898521423, 0.10196803510189056], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [81, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [4, 0, 3, 3, 0], [45, 84, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1], [1, 7, 8], [7, 7], [64], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [1, 0, 2], [91, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [2.3019833332354507, 2.303467053023028, 2.303038432377362, 2.3034353888880355, 2.30276760808103, 2.3014379998460153], "accuracy": [0.08928807079792023, 0.08545766770839691, 0.08387266844511032, 0.08677849918603897, 0.08770307898521423, 0.10196803510189056], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]