[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [5, 0, 0, 2], [36, 55, 6], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.8451428413391113, "mapping_values": [1, 4, 4, 2, 2, 2, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.063038274029762, 1.1075850778866154, 0.7897730234308235, 0.707438545472051, 0.6510577712627749, 0.6057835652796411, 0.5600130256644771, 0.5351138059977354, 0.4952467659744431, 0.49632603541782205, 0.4793572181589993, 0.4423459568248528, 0.4349156291241407, 0.4202577741020753, 0.4106686082041857, 0.38533935049238016, 0.38324423575791794, 0.3709209064931256, 0.3535939555016365, 0.3451469709702833, 0.34128880822789226, 0.3222354482453434, 0.32423362880649975, 0.30807165183710494, 0.30116803112157253, 0.2998683734923274, 0.29138654937298225, 0.27589091664103155, 0.27167555280231515, 0.2579790811497128, 0.27361160556102676, 0.2609195046578542, 0.25118820154907806, 0.2492648698099222, 0.24476403289656234, 0.24005923704889393, 0.22487288531791327, 0.2218447465544537, 0.2221475195977603, 0.20860310387751524, 0.20061006397500944, 0.21250244555668887, 0.21494715052344748, 0.19082662518297472, 0.18589382591406273, 0.18089251143270085, 0.17144706876577717, 0.16999099736145348, 0.1586396957723897, 0.15820598497193614, 0.15545300943126233], "accuracy": [0.3129045069217682, 0.6107515692710876, 0.7098137736320496, 0.7323999404907227, 0.7589486241340637, 0.7718927264213562, 0.7930260300636292, 0.7992339134216309, 0.8137630224227905, 0.8178576231002808, 0.8245938420295715, 0.8364813327789307, 0.8391229510307312, 0.8520671129226685, 0.8496896028518677, 0.8597279191017151, 0.8553691506385803, 0.8638224601745605, 0.8705587387084961, 0.872407853603363, 0.8725399374961853, 0.8809932470321655, 0.8784837126731873, 0.8854840993881226, 0.8897107243537903, 0.8903711438179016, 0.8874653577804565, 0.893541157245636, 0.9000132083892822, 0.9019944667816162, 0.8989565372467041, 0.8989565372467041, 0.9031832218170166, 0.9022586345672607, 0.9070135951042175, 0.9099194407463074, 0.9148064851760864, 0.9141460657119751, 0.9154669046401978, 0.9162594079971313, 0.9208822846412659, 0.9169198274612427, 0.9137498140335083, 0.9256373047828674, 0.9261656403541565, 0.9322414398193359, 0.9360718727111816, 0.9336943626403809, 0.9381851553916931, 0.9366002082824707, 0.9434685111045837], "val_loss": [0.9692659718649728, 0.6357908248901367, 0.5689833845411029, 0.5319232429776873, 0.4998782362256731, 0.46120146342686247, 0.4317636064120701, 0.4084057722772871, 0.3995081697191511, 0.39665039096559795, 0.3750071610723223, 0.3646916832242693, 0.35551099266324726, 0.3392751557486398, 0.331483747277941, 0.3422234995024545, 0.32829660177230835, 0.3193233779498509, 0.3140932491847447, 0.3078798736844744, 0.3077224152428763, 0.30773465973990305, 0.31654821974890573, 0.30844181776046753, 0.29831371137074064, 0.29538374287741526, 0.2991367833954947, 0.2976130076817104, 0.28646276678357807, 0.3014121396200998, 0.2934595261301313, 0.2977914128984724, 0.2965954286711557, 0.29810713870184763, 0.3036725435938154, 0.2807079723903111, 0.29350727796554565, 0.29834714957645964, 0.2872411608695984, 0.2994154095649719, 0.302901702267783, 0.3050656829561506, 0.2953279869897025, 0.29165694543293547, 0.29972011702401297, 0.29217911618096487, 0.30229577847889494, 0.30440471853528706, 0.30436606066567556, 0.31053443465914043, 0.3326954586165292], "val_accuracy": [0.6463333368301392, 0.7266666889190674, 0.7443333268165588, 0.7603333592414856, 0.7766666412353516, 0.7919999957084656, 0.8053333163261414, 0.8193333148956299, 0.8203333616256714, 0.8246666789054871, 0.8306666612625122, 0.8386666774749756, 0.8423333168029785, 0.8516666889190674, 0.8573333621025085, 0.8526666760444641, 0.8526666760444641, 0.8566666841506958, 0.8573333621025085, 0.8600000143051147, 0.862666666507721, 0.8629999756813049, 0.8569999933242798, 0.8693333268165588, 0.871666669845581, 0.8706666827201843, 0.8693333268165588, 0.8700000047683716, 0.8740000128746033, 0.8763333559036255, 0.8709999918937683, 0.8686666488647461, 0.8713333606719971, 0.878000020980835, 0.8706666827201843, 0.8806666731834412, 0.8813333511352539, 0.8793333172798157, 0.8830000162124634, 0.8833333253860474, 0.8726666569709778, 0.8726666569709778, 0.8790000081062317, 0.8813333511352539, 0.8846666812896729, 0.890333354473114, 0.8863333463668823, 0.8859999775886536, 0.8833333253860474, 0.8859999775886536, 0.8803333044052124]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7771428823471069, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.29409453475543, 2.27287886889383, 2.248383478828, 2.2207987214973843, 2.1886526864391542, 2.1443677618991366, 2.0888317711144517, 2.0167191318154982, 1.932076137520303, 1.8246876047649845, 1.719053619085223, 1.619818999593788, 1.521462247419225, 1.4363795419363472, 1.3621500539363982, 1.301126453256437, 1.2500207145153304, 1.209640881672291, 1.16519414320472, 1.1401860934710852, 1.1044371787189509, 1.0726214556284017, 1.0399292036999235, 1.0301398570432703, 1.004327347706558, 0.9933995392816635, 0.9702864121830207, 0.951179078856259, 0.9447071406630603, 0.9323214268986701, 0.9232169420428484, 0.9140739313221847, 0.9024380790543295, 0.8807814463475093, 0.8770767945686525, 0.8776998586422259, 0.845746618818692, 0.8458080658854715, 0.8407205375209854, 0.8453322810944691, 0.8280160283730598, 0.8285833905952765, 0.8242356546204466, 0.8122315053469973, 0.8052315306213191, 0.8025987940363014, 0.7870464220715867, 0.791602505416981, 0.7806866250931233, 0.7877352437039629, 0.7717692057501607, 0.7642400497458693, 0.7615734426384163, 0.7573398594228961, 0.7525725560401803, 0.7527787343244259, 0.7511312998265418, 0.735414767222807, 0.7412059867796157, 0.7531648829250666, 0.7311201999058671, 0.7308594513531484, 0.7177050436618478, 0.7295805029644864, 0.7236497500285717, 0.7183328118338136, 0.7193994488478054, 0.7186916095390768, 0.7193402923124971, 0.7122477195234882, 0.7098066453306414, 0.703969186449158, 0.6996235666557185, 0.6969709141206244, 0.6968805752158275, 0.6951679914241076, 0.6903824052239421, 0.6865603927419076, 0.6885800278733167, 0.6854298142173806, 0.6853796536612898, 0.6848956478144341, 0.6795126826472491, 0.6714087350572246], "accuracy": [0.10632677376270294, 0.16695284843444824, 0.22863557934761047, 0.27618545293807983, 0.3131686747074127, 0.3481706380844116, 0.38066306710243225, 0.40443798899650574, 0.42887333035469055, 0.45991283655166626, 0.469819039106369, 0.4881785809993744, 0.5112931132316589, 0.5340113639831543, 0.5449742674827576, 0.5589750409126282, 0.5798441171646118, 0.5864483118057251, 0.5933166146278381, 0.6000528335571289, 0.6128648519515991, 0.6231673359870911, 0.6362435817718506, 0.6333377361297607, 0.6522256135940552, 0.6464139223098755, 0.6524897813796997, 0.6647734642028809, 0.6671509742736816, 0.6684718132019043, 0.6738871932029724, 0.6736230254173279, 0.6804913282394409, 0.6863030195236206, 0.6847180128097534, 0.6814159154891968, 0.6923788189888, 0.6921146512031555, 0.6948884129524231, 0.6964733600616455, 0.7024171352386475, 0.7033417224884033, 0.7014925479888916, 0.7042662501335144, 0.7066437602043152, 0.7084929347038269, 0.7193237543106079, 0.7144366502761841, 0.7194558382034302, 0.7144366502761841, 0.7172104120254517, 0.7265883088111877, 0.7231541275978088, 0.7199841737747192, 0.7205125093460083, 0.7194558382034302, 0.726192057132721, 0.7317395210266113, 0.7251353859901428, 0.7273808121681213, 0.7345132827758789, 0.7409853339195251, 0.7405890822410583, 0.7298903465270996, 0.7386078238487244, 0.7362303733825684, 0.7440232634544373, 0.7397965788841248, 0.7349095344543457, 0.7387399077415466, 0.7391361594200134, 0.7427024245262146, 0.743891179561615, 0.7448157668113708, 0.7425703406333923, 0.7434949278831482, 0.7457403540611267, 0.746268630027771, 0.7485140562057495, 0.7531369924545288, 0.7458723783493042, 0.7474573850631714, 0.7504953145980835, 0.7557786107063293], "val_loss": [1.9507275308881487, 1.9301244871956962, 1.9061461857386999, 1.8766297612871443, 1.838998522077288, 1.790475572858538, 1.7288244111197335, 1.6514459337506975, 1.5595663615635462, 1.4548676695142473, 1.3471638815743583, 1.2438974721091134, 1.1508019651685442, 1.070765733718872, 1.0057852268218994, 0.9504756586892265, 0.9043144498552594, 0.8675537109375, 0.8360347407204765, 0.8082708631243024, 0.7845660448074341, 0.7626825400761196, 0.7439002990722656, 0.7279177733830043, 0.7141648020063128, 0.7019128118242536, 0.6901352064950126, 0.6768005916050502, 0.6666191135134015, 0.6571798494883946, 0.649114864213126, 0.6404875857489449, 0.6337379557745797, 0.6256334781646729, 0.6192949669701713, 0.6140465225492205, 0.6072572810309274, 0.6031279904501778, 0.597680960382734, 0.5922168493270874, 0.5885368926184518, 0.5831879377365112, 0.580215607370649, 0.5764147383826119, 0.5728810685021537, 0.5698812007904053, 0.5647331646510533, 0.5619937862668719, 0.5586996248790196, 0.5561419895717076, 0.551196779523577, 0.5481997728347778, 0.546106083052499, 0.544289197240557, 0.5415079934256417, 0.5395654610225132, 0.5371753147670201, 0.5329209906714303, 0.5309811149324689, 0.5303066628319877, 0.529506972857884, 0.5253580127443586, 0.522992662021092, 0.5204146930149623, 0.5179353271211896, 0.517065269606454, 0.5160690205437797, 0.5132454974310738, 0.5118501697267804, 0.5100501264844622, 0.5099057470049176, 0.509273818561009, 0.5052543027060372, 0.502463698387146, 0.5023338965007237, 0.5008330685751778, 0.49884882995060514, 0.49950179031917025, 0.49611280645642963, 0.4975989716393607, 0.4932061604091099, 0.4932135173252651, 0.49138530663081575, 0.4888054302760533], "val_accuracy": [0.2136666625738144, 0.3343333303928375, 0.3903333246707916, 0.42366665601730347, 0.45766666531562805, 0.48500001430511475, 0.5163333415985107, 0.5353333353996277, 0.5493333339691162, 0.5743333101272583, 0.5883333086967468, 0.5946666598320007, 0.6186666488647461, 0.6506666541099548, 0.6616666913032532, 0.6756666898727417, 0.6836666464805603, 0.6896666884422302, 0.6963333487510681, 0.6983333230018616, 0.699999988079071, 0.7026666402816772, 0.7136666774749756, 0.7160000205039978, 0.7163333296775818, 0.7203333377838135, 0.7263333201408386, 0.7336666584014893, 0.734000027179718, 0.7363333106040955, 0.7329999804496765, 0.7413333058357239, 0.7393333315849304, 0.7436666488647461, 0.7480000257492065, 0.7513333559036255, 0.7506666779518127, 0.7513333559036255, 0.7559999823570251, 0.762333333492279, 0.7593333125114441, 0.7546666860580444, 0.7586666941642761, 0.7633333206176758, 0.765666663646698, 0.7586666941642761, 0.7663333415985107, 0.7673333287239075, 0.765666663646698, 0.7696666717529297, 0.7713333368301392, 0.7726666927337646, 0.7723333239555359, 0.768666684627533, 0.7749999761581421, 0.7720000147819519, 0.7760000228881836, 0.7763333320617676, 0.7776666879653931, 0.7749999761581421, 0.7749999761581421, 0.7736666798591614, 0.7770000100135803, 0.7793333530426025, 0.7786666750907898, 0.7763333320617676, 0.7766666412353516, 0.7806666493415833, 0.7773333191871643, 0.781000018119812, 0.7789999842643738, 0.7796666622161865, 0.7820000052452087, 0.7870000004768372, 0.784333348274231, 0.7856666445732117, 0.7839999794960022, 0.7839999794960022, 0.7910000085830688, 0.7833333611488342, 0.7876666784286499, 0.7896666526794434, 0.7900000214576721, 0.7876666784286499]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 2, 2], [26, 55, 83], [0, 1, 0], [1], [8], [5], [68], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7662857174873352, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.293231022687022, 2.269793833346021, 2.2421853406286636, 2.209759272321057, 2.170102615555469, 2.114213907014834, 2.042456603116363, 1.9496471612618158, 1.8421018991519462, 1.7143460862971316, 1.5987955072631201, 1.4991399935759007, 1.4063529477001668, 1.33176096662507, 1.2684192213762107, 1.2156475284836155, 1.1726626033056147, 1.138291738808289, 1.099638079072758, 1.0780439242679272, 1.0484834301504775, 1.0182313650763817, 0.9887182395282816, 0.981709519602194, 0.9595992841961173, 0.9502513974082311, 0.9292146897649783, 0.911308386393227, 0.9071982279193557, 0.8955392347917643, 0.8874799199407253, 0.8800192202685326, 0.8694388342413841, 0.8488514451791015, 0.8468712726289318, 0.8480232866558935, 0.8178856845907232, 0.8174610797597779, 0.813878728382623, 0.8192810262781581, 0.8027147281092738, 0.8028607386734035, 0.7989542546871867, 0.7877750629762129, 0.7813886584166161, 0.7784946777360503, 0.7638453656357073, 0.7691247733419345, 0.7586915713921042, 0.7655117436643164, 0.7492883931518215, 0.7429584051954622, 0.7401688307771719, 0.7366160357538515, 0.731792154880232, 0.7327118919210946, 0.7308044946267699, 0.7149787570948078, 0.7209434739712947, 0.7331392624280267, 0.7112726241590293, 0.7112154389857427], "accuracy": [0.10910051316022873, 0.17553824186325073, 0.2425042986869812, 0.2922995686531067, 0.33020737767219543, 0.36903974413871765, 0.39941883087158203, 0.4241183400154114, 0.447761207818985, 0.4842160940170288, 0.49425438046455383, 0.5131422281265259, 0.535860538482666, 0.5517104864120483, 0.5688812732696533, 0.5793157815933228, 0.5964865684509277, 0.6070532202720642, 0.6168273687362671, 0.6189407110214233, 0.6316206455230713, 0.6404702067375183, 0.6507726907730103, 0.650640606880188, 0.6664905548095703, 0.6602826714515686, 0.6668868064880371, 0.6758684515953064, 0.6775855422019958, 0.6781138777732849, 0.6860388517379761, 0.6824725866317749, 0.6901333928108215, 0.695813000202179, 0.6946242451667786, 0.6919825673103333, 0.7017567157745361, 0.7009642124176025, 0.7049266695976257, 0.7034738063812256, 0.7100779414176941, 0.7087571024894714, 0.7098137736320496, 0.7125874757766724, 0.7147008180618286, 0.7148329019546509, 0.7271166443824768, 0.7194558382034302, 0.7265883088111877, 0.722757875919342, 0.722757875919342, 0.7314753532409668, 0.7318716049194336, 0.7263241410255432, 0.7279091477394104, 0.7248712182044983, 0.7329282760620117, 0.7366266250610352, 0.7321357727050781, 0.7317395210266113, 0.7416457533836365, 0.7461365461349487], "val_loss": [1.9487077168055944, 1.9256463050842285, 1.8979242869785853, 1.8623723983764648, 1.8154004641941615, 1.753380366734096, 1.6729884488242013, 1.5727934496743339, 1.4579859461103166, 1.3361457756587438, 1.2208306448800224, 1.1211525712694441, 1.0377098492213659, 0.9699273450034005, 0.9176468167986188, 0.8730217729296003, 0.836043153490339, 0.8064882244382586, 0.7812685796192714, 0.7588209765298026, 0.7397233758653913, 0.7206806455339704, 0.705068724496024, 0.6917206389563424, 0.6804601124354771, 0.6699833018439156, 0.6608438491821289, 0.648020761353629, 0.6393041440418789, 0.631117446081979, 0.6241320371627808, 0.6162038190024239, 0.6109875781195504, 0.6035253320421491, 0.5978286436625889, 0.5936697210584369, 0.5873238699776786, 0.583879828453064, 0.5789862530572074, 0.5741573912756783, 0.5712955508913312, 0.5665242842265538, 0.5640061923435756, 0.5600453274590629, 0.5569416284561157, 0.5547427449907575, 0.5493682282311576, 0.5467646632875715, 0.5436652728489467, 0.5419055734361921, 0.5368704114641462, 0.5338586398533413, 0.532096096447536, 0.5307170152664185, 0.5279785224369594, 0.5259947095598493, 0.5241128546851022, 0.5195490292140416, 0.5182702541351318, 0.5178175142833165, 0.5175870656967163, 0.5129715033939907], "val_accuracy": [0.2370000034570694, 0.3486666679382324, 0.4026666581630707, 0.4359999895095825, 0.476666659116745, 0.49933332204818726, 0.5339999794960022, 0.5493333339691162, 0.5663333535194397, 0.5920000076293945, 0.6046666502952576, 0.6186666488647461, 0.6566666960716248, 0.67166668176651, 0.6773333549499512, 0.6896666884422302, 0.6940000057220459, 0.7020000219345093, 0.7043333053588867, 0.7059999704360962, 0.7099999785423279, 0.7139999866485596, 0.7243333458900452, 0.7243333458900452, 0.7263333201408386, 0.7306666374206543, 0.7300000190734863, 0.7433333396911621, 0.7426666617393494, 0.7446666955947876, 0.7403333187103271, 0.7486666440963745, 0.7480000257492065, 0.753333330154419, 0.753000020980835, 0.7540000081062317, 0.7563333511352539, 0.7543333172798157, 0.7606666684150696, 0.7689999938011169, 0.7670000195503235, 0.7586666941642761, 0.7620000243186951, 0.7666666507720947, 0.7713333368301392, 0.7636666893959045, 0.7699999809265137, 0.7713333368301392, 0.7703333497047424, 0.7743333578109741, 0.7763333320617676, 0.7770000100135803, 0.7766666412353516, 0.7716666460037231, 0.7789999842643738, 0.7756666541099548, 0.7796666622161865, 0.778333306312561, 0.777999997138977, 0.7776666879653931, 0.7766666412353516, 0.777999997138977]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 0, 6, 2, 0, 2, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [38, 13, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 7, 9, 1, 9], [3, 0, 0, 2], [26, 55, 83], [0, 1, 0], [0], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.7662857174873352, "mapping_values": [1, 15, 15, 9, 6, 3, 5, 5, 2, 3, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2951837878390355, 2.277730917744806, 2.2579777198555195, 2.2371556433263375, 2.2148209506525984, 2.1848334905541003, 2.149131122313754, 2.1031380817323644, 2.049322559785975, 1.9776171936319331, 1.9007620109055006, 1.8199320357819873, 1.730839725451431, 1.642547867081153, 1.555401101135669, 1.4811539938263747, 1.4150249896473368, 1.3598150881352977, 1.303435683612574, 1.270216111588267, 1.2241687559259566, 1.186671144989708, 1.1487385116910198, 1.1322182218050048, 1.0990776083551583, 1.0843572169247084, 1.0571911577787287, 1.036144260417957, 1.0257854987255193, 1.010244853775877, 0.9989449973308556, 0.9869889599331272, 0.9720420381176064, 0.9474250179130042, 0.941518393009724, 0.9397573607346763, 0.9057836147772401, 0.906581149888848, 0.8973388309885624, 0.9020706241267185, 0.8829432360846621, 0.8824589795849626, 0.8772921437569078, 0.8643356149836837, 0.8554556675165746, 0.8531126139847641, 0.8353509743058403, 0.839018869984183, 0.8272709893811853, 0.833823492829007, 0.8187217298767681, 0.8089269792572257, 0.8058742888064164, 0.800217120536582, 0.7955197333470784, 0.7947188881583234, 0.7929499462107154, 0.776808689133744, 0.7837737948666821, 0.7942673017351681, 0.7723602717657446, 0.7719910488845398, 0.7574719596516896, 0.7698987856076268, 0.7646587779099647, 0.7581647076721378, 0.758490307086085, 0.7576928873339884, 0.758133133514887, 0.7502263051454874, 0.7483653731554601, 0.7414694135183703, 0.7373048992614232, 0.7340327915482754, 0.7331539239582369, 0.7318410273823898, 0.7267150068563352, 0.7239381128676328, 0.724106013672526, 0.7206352648166948, 0.7187703089817341], "accuracy": [0.10408136248588562, 0.15295206010341644, 0.20591731369495392, 0.24607053399085999, 0.284110426902771, 0.3156782388687134, 0.34724608063697815, 0.3719455897808075, 0.39043718576431274, 0.42570334672927856, 0.43059042096138, 0.45185577869415283, 0.47127196192741394, 0.4920089840888977, 0.5045568346977234, 0.5205389261245728, 0.5379738211631775, 0.5462950468063354, 0.5572579503059387, 0.5606921315193176, 0.5805045366287231, 0.5872408151626587, 0.599128246307373, 0.6073173880577087, 0.6193369626998901, 0.6140536069869995, 0.6272619366645813, 0.637432336807251, 0.639809787273407, 0.6436402201652527, 0.6470743417739868, 0.6473385095596313, 0.6543388962745667, 0.6670188903808594, 0.6671509742736816, 0.6650376319885254, 0.6767930388450623, 0.6695284843444824, 0.6774534583091736, 0.6762647032737732, 0.6837934255599976, 0.6880200505256653, 0.6828688383102417, 0.6884163022041321, 0.6896050572395325, 0.6901333928108215, 0.7040021419525146, 0.6993792057037354, 0.7041342258453369, 0.6995112895965576, 0.7049266695976257, 0.7135120630264282, 0.7094175219535828, 0.7104741930961609, 0.7058512568473816, 0.7042662501335144, 0.713908314704895, 0.7195879220962524, 0.7117950320243835, 0.713908314704895, 0.7230220437049866, 0.7257958054542542, 0.7272487282752991, 0.7168141603469849, 0.7248712182044983, 0.7250033020973206, 0.7289658188819885, 0.7231541275978088, 0.7231541275978088, 0.7260599732398987, 0.7280412316322327, 0.7292299270629883, 0.7305507659912109, 0.7358341217041016, 0.7309470176696777, 0.7316074371337891, 0.7300224304199219, 0.7346453666687012, 0.7368907928466797, 0.7401928305625916, 0.7343811988830566], "val_loss": [1.95382445199149, 1.9371868542262487, 1.918584210532052, 1.8970156397138322, 1.8710550580705916, 1.8391097613743372, 1.7998624529157365, 1.7510005405970983, 1.6926985127585275, 1.621642998286656, 1.5403812612806047, 1.453608683177403, 1.3642359461103166, 1.2758060182843889, 1.1954429830823625, 1.1220026016235352, 1.058077096939087, 1.0051134995051794, 0.9599566459655762, 0.9205065795353481, 0.8865412984575544, 0.8560171297618321, 0.8300784655979702, 0.8083885908126831, 0.7880844048091343, 0.7710860456739154, 0.7554533311298915, 0.7395696469715664, 0.7262533562523978, 0.7136104617800031, 0.7034675053187779, 0.6920372928891864, 0.6836895261492048, 0.6739086764199393, 0.6657424654279437, 0.6589376074927193, 0.6507999556405204, 0.6453854186194283, 0.6382122210093907, 0.632187945502145, 0.6265798807144165, 0.6204630136489868, 0.6161547558648246, 0.6116232361112323, 0.60732672895704, 0.6029457535062518, 0.5978876011712211, 0.5938872439520699, 0.590169872556414, 0.5865269899368286, 0.5815491676330566, 0.5780213049479893, 0.575441871370588, 0.572640027318682, 0.5696505648749215, 0.5674337829862323, 0.5645556109292167, 0.5601704120635986, 0.5577549082892281, 0.556495223726545, 0.5559721503938947, 0.5515226296016148, 0.5491785492215838, 0.5468629087720599, 0.543611833027431, 0.5419906718390328, 0.5411125251225063, 0.5375969580241612, 0.536496468952724, 0.5348408222198486, 0.5341896329607282, 0.5331742933818272, 0.5290740047182355, 0.5258880853652954, 0.5258759941373553, 0.523962140083313, 0.5222686358860561, 0.5232236044747489, 0.5187976360321045, 0.5191621439797538, 0.5150723116738456], "val_accuracy": [0.18533332645893097, 0.3070000112056732, 0.36633333563804626, 0.3996666669845581, 0.4386666715145111, 0.4556666612625122, 0.48633334040641785, 0.5043333172798157, 0.5236666798591614, 0.5446666479110718, 0.5523333549499512, 0.5643333196640015, 0.5846666693687439, 0.5983333587646484, 0.606333315372467, 0.6383333206176758, 0.6576666831970215, 0.6703333258628845, 0.6766666769981384, 0.6790000200271606, 0.6826666593551636, 0.6866666674613953, 0.6953333616256714, 0.6990000009536743, 0.7016666531562805, 0.7026666402816772, 0.706333339214325, 0.7153333425521851, 0.7163333296775818, 0.7196666598320007, 0.7166666388511658, 0.7256666421890259, 0.7246666550636292, 0.7279999852180481, 0.7329999804496765, 0.734000027179718, 0.7336666584014893, 0.7350000143051147, 0.7429999709129333, 0.7483333349227905, 0.7490000128746033, 0.746666669845581, 0.7493333220481873, 0.753000020980835, 0.7490000128746033, 0.7513333559036255, 0.7556666731834412, 0.7576666474342346, 0.7549999952316284, 0.7630000114440918, 0.7633333206176758, 0.765333354473114, 0.7663333415985107, 0.7583333253860474, 0.765999972820282, 0.7639999985694885, 0.7676666378974915, 0.765666663646698, 0.7710000276565552, 0.7703333497047424, 0.7646666765213013, 0.7643333077430725, 0.7696666717529297, 0.7720000147819519, 0.7730000019073486, 0.7706666588783264, 0.768666684627533, 0.7733333110809326, 0.7726666927337646, 0.7756666541099548, 0.7753333449363708, 0.7693333625793457, 0.7753333449363708, 0.7796666622161865, 0.7763333320617676, 0.7799999713897705, 0.7799999713897705, 0.777999997138977, 0.7793333530426025, 0.7763333320617676, 0.7796666622161865]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 71, 83], [1, 1, 0], [1], [8], [0], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.27085715532302856, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.5679176024725536, 2.435816574688711, 2.4112443307040943, 2.591115302633946, 2.4751137564163703, 2.479099041057411, 2.448876531604983, 2.411347482686565], "accuracy": [0.18134988844394684, 0.13300752639770508, 0.137630432844162, 0.10355303436517715, 0.09906221181154251, 0.10513802617788315, 0.10130762308835983, 0.09549596905708313], "val_loss": [2.020083563668387, 2.0037779126848494, 1.9474764551435197, 2.215292453765869, 2.075042111533029, 2.0173797607421875, 2.168572493961879, 2.1537980352129256], "val_accuracy": [0.09866666793823242, 0.11733333021402359, 0.1720000058412552, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 0, 2, 4, 6, 2, 0, 3, 5, 2], [0, 2, 1, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0], [6, 3, 7, 9, 1, 9], [1, 0, 0, 4], [26, 55, 83, 48], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 3, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 1, 1, 2], [26, 55, 83], [0, 1, 0], [1], [8], [0], [11], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1], [4, 3, 7, 9, 1, 9], [4, 0, 0, 4], [26, 55, 83, 7], [0, 1, 0], [1], [8], [3], [57], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 5, 8, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [17, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 4, 2], [26, 57, 83], [1, 1, 0], [1], [8], [0], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 9, 9, 6, 3, 3, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(alpha))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1187037943.1021578, 23873721552.96579, 110399327202.65012, 301645948112.4248, 647118844286.4954, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09496764093637466, 0.1002509593963623, 0.10381719470024109, 0.09919429570436478], "val_loss": [4737607094.857142, 38557851648.0, 132353682870.85715, 319016065901.7143, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 0, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 2, 9, 1, 9], [5, 0, 0, 2], [76, 23, 83], [0, 1, 0], [1], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 3, 2, 9, 4, 9], [4, 0, 0, 2], [26, 55, 83], [0, 1, 0], [1], [8], [3], [], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11469249046.475557, 428499502592.4734, 1863167922453.539, 14148648495560.885, 42050238774512.62, 59156406411477.16, 87032343388418.61, 152792843065159.78, 240245873606885.38], "accuracy": [0.09853387624025345, 0.09694888442754745, 0.09985470771789551, 0.09338264167308807, 0.1026284471154213, 0.09959053993225098, 0.09893012791872025, 0.09708096832036972, 0.09417514503002167], "val_loss": [109320032841.14285, 601750278729.1428, 4491711311286.857, 27784510139830.855, 41067287300388.57, 52430593963739.43, 91039333651017.14, 144541554311168.0, 202496309086500.56], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 3, 7, 2, 1, 9, 2], [5, 0, 0, 2, 4, 0], [26, 55, 83, 78], [0, 1, 0], [1], [8], [3], [29], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1183239304.034135, 23897342457.30498, 110761088389.66371, 302789278928.1543, 649611773756.4242, 1199739197270.9338], "accuracy": [0.10408136248588562, 0.10077928751707077, 0.09338264167308807, 0.09800554811954498, 0.1072513535618782, 0.09694888442754745], "val_loss": [4621729353.142858, 36994043318.85714, 124877588772.57143, 296031336155.4286, 578219746450.2858, 999197507584.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 3, 7, 2, 1, 9, 3, 6, 1, 1, 7, 8], [4, 0, 0, 2, 1, 2, 0, 4, 1, 1], [58, 55, 93, 8], [0, 1, 0], [1], [8], [0], [29], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 22, 22, 12, 10, 4, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), alpha), beta))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha)))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 3, 7, 9, 1, 9], [5, 4, 0, 2], [26, 57, 83], [0, 1, 0], [1], [8], [0], [40], [0, 1, 0, 1, 1], [4, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 3, 1, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 1, 0, 4], [36, 55, 6], [0, 1, 0], [1], [8], [3], [57], [0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 4, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 7, 2, 9, 6, 2, 0, 3, 5, 2], [2, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 7, 9, 1, 9], [5, 0, 3, 2], [26, 57, 83], [0, 1, 0], [0], [8], [3], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 3, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302275160693883, 2.6498783723379975, 21.995504462660705, 98.29091326353682, 239.5398461499691, 450.6528745809204], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9859038080487932, 5.288508142743792, 48.76116725376674, 146.01304408482142, 301.0676792689732, 519.4116734095982], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 3, 8, 9, 1, 9], [4, 5, 0, 2], [55, 55, 83], [0, 1, 0], [1], [8], [0], [97], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [394349556814.5155, 6.3224632804431225e+19, 8.617519335294167e+27, Infinity, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [27916548028123.43, 5.736143486646503e+21, 1.4518105879223387e+30, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [6, 3, 7, 9, 1, 9], [0, 2, 5, 0], [26, 55, 83], [0, 1, 0], [1], [8], [0], [74], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.035999998450279236, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302969226149394, 2.3028328513834597, 2.3015380576144686, 2.301382681193243, 2.303209172358303, 2.3028417335540987], "accuracy": [0.08413683623075485, 0.08691058307886124, 0.09351472556591034, 0.09272222965955734, 0.08968432247638702, 0.0886276587843895], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 3, 7, 9, 1, 9], [4, 0, 3, 4], [8, 55, 83], [0, 1, 0], [1], [8], [2], [], [0, 1, 0, 1, 1], [0, 4, 5, 2, 9], [2, 0, 2], [6, 32]], "fitness": -0.02914285659790039, "mapping_values": [1, 15, 15, 10, 5, 3, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30354232398227, 2.3071266952963585, 2.313770191717645, 2.325793128712082, 2.3449645690189898, 2.3685524230934862], "accuracy": [0.08294808864593506, 0.07819310575723648, 0.07000396400690079, 0.04834235832095146, 0.03156782314181328, 0.021001188084483147], "val_loss": [1.973031861441476, 1.9787536348615373, 1.9883372443062919, 2.002306733812605, 2.021444320678711, 2.047365188598633], "val_accuracy": [0.0273333340883255, 0.014666666276752949, 0.009333333000540733, 0.007666666526347399, 0.006666666828095913, 0.0063333334401249886]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 5, 2, 5, 5, 2, 5, 0, 5, 2], [0, 3, 0, 3, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 3, 7, 9, 1, 9], [4, 0, 0, 2], [26, 78, 51], [0, 1, 0], [0], [8], [5], [67], [1, 0, 0, 1, 1], [0, 4, 5, 2, 9], [2, 1, 2], [6, 32]], "fitness": -0.0071428571827709675, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 3, 4, 2, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3105787366152346, 2.330277729248563, 2.3534996173542724, 2.384891978627765, 2.4303701248907097, 2.4996951800988665], "accuracy": [0.06987188011407852, 0.047285694628953934, 0.03156782314181328, 0.018095364794135094, 0.013208295218646526, 0.010038304142653942], "val_loss": [1.9886821338108607, 2.008774076189314, 2.0338616371154785, 2.066784586225237, 2.1145428930010115, 2.1963020733424594], "val_accuracy": [0.009333333000540733, 0.007000000216066837, 0.006000000052154064, 0.005333333276212215, 0.00566666666418314, 0.007666666526347399]}}]