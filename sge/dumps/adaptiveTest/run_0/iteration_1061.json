[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8465714454650879, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0400743668877044, 1.113274160345957, 0.795473571828863, 0.7038079886750743, 0.6338340576771087, 0.5864585119074109, 0.5518307895739758, 0.5285035795374097, 0.515202881582598, 0.48854203757010334, 0.4668554269902191, 0.44659517691466377, 0.4244278690298834, 0.4134234049222284, 0.4102267709272476, 0.3921528600383633, 0.3749292338009382, 0.36089093522420257, 0.34677274538746067, 0.34957168702089775, 0.3517405554453427, 0.3371379418482382, 0.3258431396070583, 0.31469737261970676, 0.3011527947226315, 0.2906739347331544, 0.2906233322044106, 0.2803502450128194, 0.2699651071668191, 0.265950154953503, 0.264652328141818, 0.2621071654193673, 0.25929045883451296, 0.24368583921034576, 0.23966296769215084, 0.2289748596375125, 0.22249654444996644, 0.22051534656764432, 0.2179887837595896, 0.2109452111885422, 0.20708363474383723, 0.19741360912658693, 0.18861164485049395, 0.18958593410956562, 0.18220232889841514, 0.18121256974623298, 0.18574203173513693, 0.1804420777248779, 0.17390524720857486, 0.17200612775039648, 0.16437146091434415, 0.15476387811610884, 0.1592984672932498, 0.1546922481850453, 0.14428575804771732, 0.13996774204426657], "accuracy": [0.3156782388687134, 0.6073173880577087, 0.7041342258453369, 0.7368907928466797, 0.7567031979560852, 0.7741381525993347, 0.7931581139564514, 0.806630551815033, 0.8104609847068787, 0.8128384351730347, 0.8274996876716614, 0.8374059200286865, 0.8454629778862, 0.8481045961380005, 0.8510104417800903, 0.8577466607093811, 0.86118084192276, 0.8693699836730957, 0.8726720213890076, 0.8712190985679626, 0.8687095642089844, 0.8767666220664978, 0.8792761564254761, 0.8780874609947205, 0.8840311765670776, 0.8939374089241028, 0.8914278149604797, 0.8949940800666809, 0.9002773761749268, 0.8981640338897705, 0.9002773761749268, 0.9026548862457275, 0.9012019634246826, 0.9062210917472839, 0.9111081957817078, 0.9133535623550415, 0.9138818979263306, 0.9148064851760864, 0.9153348207473755, 0.9187690019607544, 0.921938955783844, 0.9253731369972229, 0.9297318458557129, 0.9277506470680237, 0.9303922653198242, 0.9303922653198242, 0.9269581437110901, 0.9317131042480469, 0.9340906143188477, 0.9323735237121582, 0.936732292175293, 0.9401664137840271, 0.9371285438537598, 0.9381851553916931, 0.9429401755332947, 0.9453176856040955], "val_loss": [0.9561796528952462, 0.6505755186080933, 0.5637158666338239, 0.5204373257500785, 0.4819158485957554, 0.456623945917402, 0.4348630734852382, 0.4132910115378244, 0.4038171257291521, 0.389212361403874, 0.37482004506247385, 0.35797098704746794, 0.3539162703922817, 0.34960960490362986, 0.34819588490894865, 0.34112703800201416, 0.3229145663125174, 0.3213948607444763, 0.31406274863651823, 0.3238736731665475, 0.30946819271360126, 0.3199261341776167, 0.3050784724099295, 0.29547962972096037, 0.3057698522295271, 0.2974139537130083, 0.29154921429497854, 0.2904666151319231, 0.2916456035205296, 0.2881463084902082, 0.2834234322820391, 0.28687054770333426, 0.2999107837677002, 0.2903817296028137, 0.29614241634096417, 0.2817264028957912, 0.2937784790992737, 0.29333304507391794, 0.2993093303271702, 0.29431634289877756, 0.2933982951300485, 0.309169556413378, 0.29398404700415476, 0.294910158429827, 0.3084912385259356, 0.31482705899647306, 0.30860425744737896, 0.3046191079275949, 0.3009564791406904, 0.31254082918167114, 0.3077786309378488, 0.32131822620119366, 0.32531570536749704, 0.30705727849687847, 0.31208527088165283, 0.3190637741770063], "val_accuracy": [0.5920000076293945, 0.7129999995231628, 0.7456666827201843, 0.7616666555404663, 0.7696666717529297, 0.7896666526794434, 0.8029999732971191, 0.8180000185966492, 0.8199999928474426, 0.8193333148956299, 0.82833331823349, 0.840666651725769, 0.847000002861023, 0.847000002861023, 0.8446666598320007, 0.8483333587646484, 0.859666645526886, 0.8573333621025085, 0.8583333492279053, 0.8519999980926514, 0.8629999756813049, 0.8576666712760925, 0.8606666922569275, 0.8686666488647461, 0.8703333139419556, 0.8659999966621399, 0.8690000176429749, 0.8690000176429749, 0.871666669845581, 0.8769999742507935, 0.878333330154419, 0.8773333430290222, 0.8733333349227905, 0.878333330154419, 0.878333330154419, 0.8813333511352539, 0.8796666860580444, 0.8796666860580444, 0.8766666650772095, 0.8820000290870667, 0.8813333511352539, 0.8820000290870667, 0.8820000290870667, 0.8840000033378601, 0.8809999823570251, 0.8806666731834412, 0.8846666812896729, 0.8846666812896729, 0.8856666684150696, 0.8849999904632568, 0.8923333287239075, 0.8846666812896729, 0.8816666603088379, 0.8853333592414856, 0.887333333492279, 0.8853333592414856]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 0, 1, 0, 4, 9, 1, 2, 2, 2, 4, 0, 0, 3, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 98, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.843999981880188, "mapping_values": [1, 18, 18, 11, 7, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040962694280451, 1.1085284174771877, 0.7919086657180101, 0.7010236286121888, 0.6313092710477108, 0.585380495082685, 0.5500262902948473, 0.5267016559567639, 0.5125980686360441, 0.48855665920118, 0.4613000495346262, 0.44413711032406405, 0.42729447660996, 0.4104922039594475, 0.41116126712838247, 0.39234517796747187, 0.3712996386218899, 0.3601160281999724, 0.34547665508951353, 0.34850173287970465, 0.34488602036325106, 0.33394594023083146, 0.32460514567137994, 0.31381584775367544, 0.3015609645667156, 0.29600351691450727, 0.28854929342356184, 0.28240146679948147, 0.2683967438946783, 0.2650543653835883, 0.2521303460078705, 0.2517927481065006, 0.24745315173597793, 0.23733743031688448, 0.24086392540674106, 0.23860518145027446, 0.22968318438438645, 0.22055665779233435, 0.21696270301026785], "accuracy": [0.3147536516189575, 0.6086382269859314, 0.7043983340263367, 0.7363624572753906, 0.759080708026886, 0.7774402499198914, 0.7938185334205627, 0.8105930685997009, 0.8120459914207458, 0.8168009519577026, 0.8319904804229736, 0.8384625315666199, 0.8400475382804871, 0.8477083444595337, 0.8520671129226685, 0.858671247959137, 0.8621054291725159, 0.8685774803161621, 0.8728041052818298, 0.8665962219238281, 0.8710870146751404, 0.8767666220664978, 0.878351628780365, 0.8816536664962769, 0.8837670087814331, 0.8882578015327454, 0.894069492816925, 0.8930128216743469, 0.9014661312103271, 0.9015982151031494, 0.9051644206047058, 0.904768168926239, 0.9055606722831726, 0.9088627696037292, 0.9124290347099304, 0.9072777628898621, 0.9152027368545532, 0.9138818979263306, 0.9141460657119751], "val_loss": [0.9605366843087333, 0.6486561979566302, 0.5590787104197911, 0.5191707270486015, 0.4812335627419608, 0.4548255205154419, 0.43569651671818327, 0.4136815752301897, 0.40215120145252775, 0.3874134761946542, 0.36835386071886334, 0.35942197697503225, 0.34963699749537874, 0.3449298398835318, 0.3440179399081639, 0.33645004885537283, 0.3213296021733965, 0.3197970390319824, 0.3107374736240932, 0.3167597310883658, 0.3103123051779611, 0.319173915045602, 0.3054336905479431, 0.3002358760152544, 0.3075196657861982, 0.29994882004601614, 0.29788947105407715, 0.2998940008027213, 0.2936771512031555, 0.2889575106757028, 0.2894047328404018, 0.28719923325947355, 0.3002810137612479, 0.2900405781609671, 0.3053203650883266, 0.30152611221585957, 0.28809189796447754, 0.2950253742081778, 0.2953106675829206], "val_accuracy": [0.593666672706604, 0.7176666855812073, 0.7540000081062317, 0.7696666717529297, 0.7736666798591614, 0.7953333258628845, 0.8063333630561829, 0.8166666626930237, 0.8226666450500488, 0.8233333230018616, 0.8349999785423279, 0.8376666903495789, 0.847000002861023, 0.8523333072662354, 0.8476666808128357, 0.8546666502952576, 0.859666645526886, 0.8560000061988831, 0.8600000143051147, 0.8546666502952576, 0.8650000095367432, 0.8619999885559082, 0.8610000014305115, 0.8673333525657654, 0.8709999918937683, 0.8679999709129333, 0.8700000047683716, 0.871666669845581, 0.8686666488647461, 0.8769999742507935, 0.8790000081062317, 0.8763333559036255, 0.8776666522026062, 0.8809999823570251, 0.8743333220481873, 0.8736666440963745, 0.8799999952316284, 0.878000020980835, 0.878000020980835]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 0, 4, 9, 3, 2, 2, 2, 4, 0, 0, 1, 9, 4, 7, 6, 1, 8, 4, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 2, 1, 2, 2, 0, 1, 1, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 11, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8402857184410095, "mapping_values": [1, 50, 50, 31, 19, 6, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), alpha), tf.math.sqrt(grad))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), alpha)), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0409608306886025, 1.1083034689494757, 0.7925280755726007, 0.7021881729510041, 0.6314446191509969, 0.5857458809945939, 0.5525862948060933, 0.525997592272807, 0.5114902562201378, 0.48636763508545644, 0.461603845504958, 0.44173385326290143, 0.427572892007732, 0.4064562703049682, 0.4046883248279848, 0.39029453497804656, 0.3725573287908002, 0.3576571463145096, 0.34630969369479175, 0.34606812795738046, 0.3417216807922683, 0.3324842914897595, 0.3197872416730003, 0.3062153236819706, 0.2977733164651755, 0.2913829614544242, 0.2875293111737378, 0.27934325017303663, 0.2679072409895795, 0.26019180845260115, 0.2545566386227689, 0.25227597886466424, 0.2498786209037732, 0.23908676020678055, 0.24124828804288762], "accuracy": [0.3147536516189575, 0.6085061430931091, 0.7030775547027588, 0.7337207794189453, 0.7622507214546204, 0.7769119143486023, 0.7932901978492737, 0.8090080618858337, 0.8142913579940796, 0.8142913579940796, 0.8297450542449951, 0.8376700282096863, 0.8408400416374207, 0.8519350290298462, 0.8540483713150024, 0.8588033318519592, 0.8659358024597168, 0.8688416481018066, 0.8706908226013184, 0.870030403137207, 0.870030403137207, 0.8786157965660095, 0.878879964351654, 0.8817857503890991, 0.889050304889679, 0.8910315632820129, 0.8943336606025696, 0.8957865834236145, 0.9026548862457275, 0.9022586345672607, 0.9014661312103271, 0.9045040011405945, 0.9060890078544617, 0.9062210917472839, 0.9104477763175964], "val_loss": [0.9605838911873954, 0.6478860037667411, 0.5586064372743879, 0.5220707654953003, 0.481264523097447, 0.4534956557410104, 0.4358434166227068, 0.4162160498755319, 0.40196400029318674, 0.38745707273483276, 0.37114632981164114, 0.35971565757478985, 0.34529032026018414, 0.34144679989133564, 0.34094936507088797, 0.33619494097573416, 0.32202448163713726, 0.3205308999334063, 0.3171382887022836, 0.3222288319042751, 0.31141839708600727, 0.31685361691883634, 0.3026554414204189, 0.2958525674683707, 0.30430216448647635, 0.3026158724512373, 0.29212528467178345, 0.3000760419028146, 0.2939101457595825, 0.28762751817703247, 0.29016771486827303, 0.2853963715689523, 0.2985589759690421, 0.2950417058808463, 0.296647242137364], "val_accuracy": [0.5929999947547913, 0.7170000076293945, 0.753333330154419, 0.7636666893959045, 0.7696666717529297, 0.7950000166893005, 0.8053333163261414, 0.8149999976158142, 0.8233333230018616, 0.8233333230018616, 0.831333339214325, 0.8389999866485596, 0.8536666631698608, 0.8516666889190674, 0.8463333249092102, 0.8519999980926514, 0.8603333234786987, 0.8560000061988831, 0.8616666793823242, 0.8533333539962769, 0.8633333444595337, 0.8686666488647461, 0.8616666793823242, 0.8686666488647461, 0.8693333268165588, 0.8646666407585144, 0.8693333268165588, 0.8676666617393494, 0.8703333139419556, 0.8793333172798157, 0.878000020980835, 0.8766666650772095, 0.874666690826416, 0.8773333430290222, 0.878333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 4, 9, 2, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [42, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8371428847312927, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.8325930104011936, 1.4699868321528982, 0.9404191356986317, 0.7256979443031516, 0.6433847777957787, 0.5920251526962953, 0.5513514528625976, 0.5253974487437958, 0.500534320244495, 0.4868627115483801, 0.4524951516172716, 0.43790114092049015, 0.42287183307448806, 0.41242945183222524, 0.412907229607777, 0.39371545714961065, 0.3787307354673623, 0.37858151069264984, 0.3632250670838145, 0.3459590277998061, 0.3405933192440421, 0.3311880798175146, 0.32637116727874954, 0.31690362682746875, 0.30791340850017107, 0.29603074192843337, 0.28975075677779244, 0.289542915550725, 0.27467831159154454, 0.2640551057442572, 0.27031302844544347, 0.2631661232908751, 0.25825261346786216], "accuracy": [0.38581427931785583, 0.5363888740539551, 0.6539427042007446, 0.7271166443824768, 0.7573636174201965, 0.7737419009208679, 0.7985734939575195, 0.8043851256370544, 0.8191784620285034, 0.8198388814926147, 0.8388587832450867, 0.8405758738517761, 0.8485008478164673, 0.8496896028518677, 0.8500858545303345, 0.86118084192276, 0.859199583530426, 0.8627657890319824, 0.8679170608520508, 0.8689737319946289, 0.8716153502464294, 0.8772949576377869, 0.8792761564254761, 0.8825782537460327, 0.8840311765670776, 0.8901069760322571, 0.8893144726753235, 0.8942015767097473, 0.8976356983184814, 0.8992207050323486, 0.9000132083892822, 0.9022586345672607, 0.8986923694610596], "val_loss": [1.4080824170793806, 0.8744332790374756, 0.5846625225884574, 0.5146486759185791, 0.47530530180249897, 0.44570304666246685, 0.4220395088195801, 0.4008311629295349, 0.38820196049554007, 0.37363338470458984, 0.3597412279673985, 0.34866281918116976, 0.356351946081434, 0.3578545195715768, 0.3330102562904358, 0.3315056392124721, 0.32794928550720215, 0.328823447227478, 0.32764673233032227, 0.32000785214560373, 0.31224182673863005, 0.3225157516343253, 0.31120147023882183, 0.31334719487598967, 0.3092460887772696, 0.30817143406186787, 0.3075907400676182, 0.29108478341783794, 0.29971398626055035, 0.3045845031738281, 0.29028700079236713, 0.298083416053227, 0.307867808001382], "val_accuracy": [0.6029999852180481, 0.6223333477973938, 0.7329999804496765, 0.7573333382606506, 0.7910000085830688, 0.79666668176651, 0.8043333292007446, 0.8263333439826965, 0.8289999961853027, 0.8333333134651184, 0.8433333039283752, 0.8526666760444641, 0.8479999899864197, 0.8413333296775818, 0.8533333539962769, 0.8523333072662354, 0.8610000014305115, 0.8523333072662354, 0.856333315372467, 0.856333315372467, 0.8633333444595337, 0.8669999837875366, 0.8650000095367432, 0.8629999756813049, 0.8696666955947876, 0.8659999966621399, 0.8683333396911621, 0.875333309173584, 0.8730000257492065, 0.8723333477973938, 0.875, 0.871666669845581, 0.8733333349227905]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 1, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8334285616874695, "mapping_values": [1, 32, 32, 20, 12, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), tf.math.subtract(alpha, alpha))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040075518451646, 1.1134147335745797, 0.7957559959243837, 0.7033893798462325, 0.6348161333272675, 0.5881643375983847, 0.5535431749564688, 0.5293955599485435, 0.5168162916141525, 0.4881294005070821, 0.46395314479815786, 0.444082629273612, 0.42390019321532973, 0.4121111078922696, 0.40621648180313147, 0.3912159992231118, 0.3735605480373024, 0.36486840814159155, 0.34794354933584526, 0.3505949068338706, 0.34707477497875006, 0.333730396416209, 0.3254171411012693, 0.30982480286024566, 0.3024082329798809, 0.29358855510636594, 0.28874756475134833, 0.27993788917649454, 0.2726239843446313], "accuracy": [0.3156782388687134, 0.607449471950531, 0.705058753490448, 0.7366266250610352, 0.7586844563484192, 0.7740060687065125, 0.7915731072425842, 0.8062343001365662, 0.8099326491355896, 0.8144234418869019, 0.828292191028595, 0.8379341959953308, 0.8467837572097778, 0.8506141901016235, 0.8553691506385803, 0.8561616539955139, 0.8632941246032715, 0.8663320541381836, 0.8714832663536072, 0.8706908226013184, 0.8726720213890076, 0.8739928603172302, 0.8768987059593201, 0.8844274282455444, 0.8864086866378784, 0.8899748921394348, 0.891559898853302, 0.8936732411384583, 0.8986923694610596], "val_loss": [0.9561241694859096, 0.650930370603289, 0.5637841905866351, 0.5223217180797032, 0.48380671228681293, 0.4579110997063773, 0.4358406833239964, 0.413853074823107, 0.40397110155650545, 0.3876584597996303, 0.37145585673195974, 0.3572484425136021, 0.3502486433301653, 0.35079623971666607, 0.3501413123948233, 0.3364098923546927, 0.32302218675613403, 0.322573184967041, 0.31771548305238995, 0.31839113576071604, 0.30868841069085257, 0.31056733642305645, 0.30072371448789326, 0.2947948319571359, 0.30665583269936697, 0.30036698068891254, 0.2922518253326416, 0.2986810122217451, 0.2912541287285941], "val_accuracy": [0.5903333425521851, 0.7133333086967468, 0.7453333139419556, 0.762666642665863, 0.7663333415985107, 0.7883333563804626, 0.7996666431427002, 0.8143333196640015, 0.8190000057220459, 0.8240000009536743, 0.8306666612625122, 0.8433333039283752, 0.8496666550636292, 0.8453333377838135, 0.8423333168029785, 0.8519999980926514, 0.8633333444595337, 0.8553333282470703, 0.8600000143051147, 0.859666645526886, 0.8659999966621399, 0.8673333525657654, 0.8663333058357239, 0.8686666488647461, 0.8683333396911621, 0.8679999709129333, 0.8686666488647461, 0.8656666874885559, 0.8683333396911621]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.8317142724990845, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040073152861307, 1.1133230699445467, 0.7944881838499485, 0.7034451428452944, 0.6336320581815309, 0.5882213632223738, 0.5514296879700351, 0.5303426659921251, 0.5165389077522656, 0.48925669835920993, 0.4638708693011877, 0.4471855804416655, 0.4235062126974152, 0.41105675776054235, 0.40957015595337215, 0.3927439318128691, 0.37452662108029827, 0.36193547532180864, 0.3457828006763594, 0.34924151635346334, 0.34625579870419493, 0.331673348305043, 0.32805562085479306, 0.3092324003024171, 0.2982090208052077, 0.28953434623164775, 0.2835885958704006, 0.27802545781290494, 0.2670191996180386], "accuracy": [0.3156782388687134, 0.6085061430931091, 0.7046625018119812, 0.735569953918457, 0.7584202885627747, 0.7754589915275574, 0.7942147850990295, 0.8055738806724548, 0.8088759779930115, 0.8181217908859253, 0.8290846943855286, 0.8401796221733093, 0.8474441766738892, 0.850350022315979, 0.8519350290298462, 0.8569541573524475, 0.8621054291725159, 0.8696341514587402, 0.8696341514587402, 0.8720116019248962, 0.8706908226013184, 0.8772949576377869, 0.8784837126731873, 0.8840311765670776, 0.8858803510665894, 0.8953903317451477, 0.8934090733528137, 0.8968431949615479, 0.89988112449646], "val_loss": [0.9561645984649658, 0.6497551202774048, 0.56160421030862, 0.5181741544178554, 0.4825200353349958, 0.4586947815758841, 0.43634425742285593, 0.414377110345023, 0.4077372636113848, 0.39181787627083914, 0.37232530968529837, 0.3575241139956883, 0.3490285447665623, 0.35018119641712736, 0.3505671279770987, 0.3360544272831508, 0.32269645588738577, 0.316566492830004, 0.3164717810494559, 0.31715364115578787, 0.30572618756975445, 0.3130673510687692, 0.30421566111700876, 0.2963223968233381, 0.30361394371305195, 0.30016205992017475, 0.290862466607775, 0.29347002506256104, 0.2934934326580593], "val_accuracy": [0.5920000076293945, 0.7146666646003723, 0.7486666440963745, 0.765999972820282, 0.7683333158493042, 0.7853333353996277, 0.8036666512489319, 0.8149999976158142, 0.8153333067893982, 0.8193333148956299, 0.8286666870117188, 0.8450000286102295, 0.8479999899864197, 0.8460000157356262, 0.8399999737739563, 0.8506666421890259, 0.8606666922569275, 0.859333336353302, 0.8583333492279053, 0.8610000014305115, 0.8669999837875366, 0.8693333268165588, 0.8613333106040955, 0.871666669845581, 0.8696666955947876, 0.8669999837875366, 0.8706666827201843, 0.8709999918937683, 0.8703333139419556]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 4, 9, 2, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.829714298248291, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040074245442552, 1.1132897772746173, 0.7953561654243297, 0.7035989000844194, 0.6349279018299313, 0.588375049866485, 0.5528134354007022, 0.5298244123209453, 0.516470249539054, 0.4895033065779271, 0.4659405354897045, 0.44694966570639166, 0.42326527032098277, 0.4117168549100374, 0.4087964206197872, 0.3931859428927316, 0.3758797101758144, 0.363313421372803, 0.34336353648907125, 0.35034459248320965, 0.347959521778539, 0.33471086894862795, 0.32690472733374554, 0.3115993935229551, 0.2968923048202498, 0.2919105645128922, 0.28639710891468806, 0.28045699847860894, 0.26951505161311096], "accuracy": [0.3156782388687134, 0.607449471950531, 0.7043983340263367, 0.7380794882774353, 0.7555144429206848, 0.7751948237419128, 0.7921014428138733, 0.8059701323509216, 0.8092722296714783, 0.8127063512802124, 0.8293488025665283, 0.8354246616363525, 0.8465195894241333, 0.8511425256729126, 0.8527275323867798, 0.8576145768165588, 0.8618412613868713, 0.8652753829956055, 0.8737286925315857, 0.8705587387084961, 0.8692378997802734, 0.8786157965660095, 0.8766345381736755, 0.8820499181747437, 0.8877294659614563, 0.8910315632820129, 0.8949940800666809, 0.8965790271759033, 0.8967111110687256], "val_loss": [0.9561746120452881, 0.6505307810647147, 0.5644276482718331, 0.5206518513815743, 0.48149830954415457, 0.45612541266850065, 0.4384952783584595, 0.41490628889628817, 0.4052741016660418, 0.39219811984470915, 0.37224998644420076, 0.35503279311316355, 0.35085546118872507, 0.3477157694952829, 0.34988869939531597, 0.3400109921182905, 0.3237359779221671, 0.32152397292000906, 0.31750997475215365, 0.3156329223087856, 0.3116974064282009, 0.31819876602717806, 0.30153656005859375, 0.2900272692952837, 0.30859205552509855, 0.29985616888318745, 0.2922083054270063, 0.2956716758864267, 0.2915127617972238], "val_accuracy": [0.5920000076293945, 0.7133333086967468, 0.7446666955947876, 0.7643333077430725, 0.7710000276565552, 0.7900000214576721, 0.800000011920929, 0.8203333616256714, 0.8203333616256714, 0.8183333277702332, 0.8316666483879089, 0.8423333168029785, 0.8476666808128357, 0.8479999899864197, 0.8456666469573975, 0.8516666889190674, 0.859333336353302, 0.8553333282470703, 0.859333336353302, 0.8646666407585144, 0.8640000224113464, 0.8636666536331177, 0.8636666536331177, 0.871666669845581, 0.8706666827201843, 0.8659999966621399, 0.8690000176429749, 0.8709999918937683, 0.8713333606719971]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.7962856888771057, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.218294622718288, 1.7097892016940004, 1.2881215544046742, 1.0676794947020334, 0.9623267775781088, 0.9156801288531929, 0.8197618437370746, 0.7912678151098556, 0.779933698621991, 0.7484355206660245, 0.727082858673255, 0.7269281836595864, 0.7041732734456716, 0.7021128646906388, 0.6805081350881158, 0.6691736333783685, 0.6395594250681913, 0.6431910346574976, 0.638855696866037, 0.6270341800897035, 0.6007521100693596, 0.6105091087869476, 0.6072908717690678, 0.5961638099607806, 0.5939361753559478], "accuracy": [0.251750111579895, 0.4675736427307129, 0.5493329763412476, 0.6193369626998901, 0.6572447419166565, 0.6672830581665039, 0.7034738063812256, 0.7086250185966492, 0.7100779414176941, 0.724210798740387, 0.7256637215614319, 0.726192057132721, 0.7354378700256348, 0.7391361594200134, 0.7490423917770386, 0.7511557340621948, 0.7617223858833313, 0.7606657147407532, 0.7601373791694641, 0.767401933670044, 0.7749306559562683, 0.7712323069572449, 0.7746664881706238, 0.7758552432060242, 0.7736098170280457], "val_loss": [1.6926402023860387, 1.046180043901716, 0.8437836170196533, 0.710128801209586, 0.7477274281638009, 0.6230923277991158, 0.5890439408166068, 0.6066597018923078, 0.5908571311405727, 0.5387475149972099, 0.5336406571524483, 0.5414176668439593, 0.5301362957273211, 0.5347740309579032, 0.49461707047053743, 0.48938735893794466, 0.5049739905766079, 0.49301086153302875, 0.4827655383518764, 0.46324210507529123, 0.4602778468813215, 0.45344747815813335, 0.46901462759290424, 0.46296719142368864, 0.46388414927891325], "val_accuracy": [0.5180000066757202, 0.6316666603088379, 0.6240000128746033, 0.7143333554267883, 0.6416666507720947, 0.734666645526886, 0.7516666650772095, 0.7253333330154419, 0.7360000014305115, 0.7723333239555359, 0.768666684627533, 0.7599999904632568, 0.7643333077430725, 0.765999972820282, 0.7876666784286499, 0.778333306312561, 0.7633333206176758, 0.7733333110809326, 0.7943333387374878, 0.8073333501815796, 0.7960000038146973, 0.8023333549499512, 0.7913333177566528, 0.7956666946411133, 0.7886666655540466]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.668571412563324, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301966990367722, 2.302963903598687, 2.3008225302985315, 2.2999766380905617, 2.2967823041097883, 2.2953620186224906, 2.292145024453172, 2.29197566799909, 2.287919230575118, 2.287309031901563, 2.2867272779091614, 2.28252516188374, 2.2803894138575513, 2.2785952883531326, 2.2789668378387824, 2.277606139361284, 2.274187821186828, 2.2721690944535085, 2.268769025487702, 2.2665254164995408, 2.2612841479798127, 2.258947841180487, 2.2537585139951655, 2.249967398943918, 2.244664790245835, 2.2397293232026088, 2.2329537035562046, 2.221657454676207, 2.2136668783247573, 2.196284525020641, 2.1785225207858225, 2.155273157513263, 2.1298995951714375, 2.094206594756377, 2.043861018384783, 1.9824461907191662, 1.8911790017202434, 1.7829577517531505, 1.660019869219279, 1.5128149699856184, 1.3913001735622006, 1.2613896845417125, 1.1999698090058875, 1.2612831744031663, NaN, NaN, NaN], "accuracy": [0.09074098616838455, 0.09153348207473755, 0.09021265059709549, 0.09945846349000931, 0.09800554811954498, 0.108440101146698, 0.12151630967855453, 0.12178047746419907, 0.12296922504901886, 0.1270637959241867, 0.13472460210323334, 0.14014001190662384, 0.13855500519275665, 0.14370624721050262, 0.14251750707626343, 0.14357416331768036, 0.15070664882659912, 0.14898955821990967, 0.15400871634483337, 0.15836745500564575, 0.15229164063930511, 0.1666886806488037, 0.1624620258808136, 0.17276449501514435, 0.175670325756073, 0.1795007288455963, 0.1888786107301712, 0.20036983489990234, 0.2028794139623642, 0.21503104269504547, 0.22599393129348755, 0.24382512271404266, 0.24976885318756104, 0.26482629776000977, 0.2917712330818176, 0.3135649263858795, 0.3477744162082672, 0.37485140562057495, 0.4115704596042633, 0.4422137141227722, 0.4909523129463196, 0.5287280678749084, 0.564258337020874, 0.5612204670906067, 0.21859727799892426, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9706358909606934, 1.969698360988072, 1.9683316775730677, 1.9667273930140905, 1.9649180684770857, 1.963024071284703, 1.9611272130693709, 1.9592341014317103, 1.9573266165597099, 1.9554788725716727, 1.95361362184797, 1.951651164463588, 1.9495864595685686, 1.9473680087498255, 1.9450411115373885, 1.9426230021885462, 1.9400456973484583, 1.9372241156441825, 1.9341274670192175, 1.9306723730904716, 1.9266963686261858, 1.921992642538888, 1.9163998195103236, 1.909848349434989, 1.9023693629673548, 1.8942087037222726, 1.8848932129996163, 1.8736532756260462, 1.8595589229038783, 1.8417702402387346, 1.8192411831447057, 1.7907051358904158, 1.7542040007455009, 1.7057899066380091, 1.6403448922293526, 1.5493324143545968, 1.4222548348563058, 1.2599806444985526, 1.0969634056091309, 0.9634105818612235, 0.8522570133209229, 0.7977392162595477, 1.1669180052621024, 0.8062598875590733, NaN, NaN, NaN], "val_accuracy": [0.0403333343565464, 0.04633333161473274, 0.052666667848825455, 0.06466666609048843, 0.07733333110809326, 0.09433333575725555, 0.1080000028014183, 0.12099999934434891, 0.1313333362340927, 0.14033333957195282, 0.14733333885669708, 0.15433333814144135, 0.16466666758060455, 0.17466667294502258, 0.1913333386182785, 0.2070000022649765, 0.2163333296775818, 0.22233332693576813, 0.23000000417232513, 0.24066667258739471, 0.257666677236557, 0.27300000190734863, 0.2916666567325592, 0.30300000309944153, 0.31833332777023315, 0.32633334398269653, 0.33799999952316284, 0.37700000405311584, 0.4216666519641876, 0.43166667222976685, 0.4359999895095825, 0.43666666746139526, 0.4346666634082794, 0.44466665387153625, 0.4556666612625122, 0.4860000014305115, 0.5386666655540466, 0.5910000205039978, 0.6056666374206543, 0.5866666436195374, 0.6333333253860474, 0.6666666865348816, 0.6016666889190674, 0.6503333449363708, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 2, 4, 9, 2, 2, 2, 5, 4, 2, 6, 1, 9, 5, 7, 6, 6, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [71, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.6174286007881165, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.030346157922091, 1.153778536736044, 0.85978179781145, 0.8049447412393852, 0.7066017043132351, 0.6507418724398146, 0.6217548024810269, 0.5929526005753626, 0.5917953915442332, 0.5439153503842594, 0.5435647488648094, 0.5380319604359094, 0.547334629672787, 0.561982101681462, 0.5351741062557188, 0.5309703801412309, 0.532140335914182, 0.5352242561284782, 0.5394913231093634, 0.5557391308380896, 0.5666900501275154, 0.5752864362242168], "accuracy": [0.3140932619571686, 0.6001849174499512, 0.6756042838096619, 0.7049266695976257, 0.735569953918457, 0.7607977986335754, 0.7626469135284424, 0.7734777331352234, 0.7761194109916687, 0.7951393723487854, 0.7893276810646057, 0.8009510040283203, 0.7935543656349182, 0.7927618622779846, 0.800818920135498, 0.8033285140991211, 0.7979130744934082, 0.8004226684570312, 0.789988100528717, 0.7835160493850708, 0.7827235460281372, 0.791969358921051], "val_loss": [0.9316323484693255, 0.6516508374895368, 0.6143772431782314, 0.5290046078818185, 0.4707829441343035, 0.46677991322108675, 0.4616392339978899, 0.4428093263081142, 0.4380195140838623, 0.41958870206560406, 0.4168239235877991, 0.41656146730695454, 0.4084188938140869, 0.43596257482256207, 0.397073575428554, 0.42548716919762747, 0.43777466671807425, 0.44267451763153076, 0.44577894040516447, 0.45476484298706055, 0.4298899258886065, 0.45710253715515137], "val_accuracy": [0.609666645526886, 0.7193333506584167, 0.734000027179718, 0.749666690826416, 0.7796666622161865, 0.7860000133514404, 0.7889999747276306, 0.793666660785675, 0.8013333082199097, 0.8086666464805603, 0.815666675567627, 0.8166666626930237, 0.8236666917800903, 0.8256666660308838, 0.8233333230018616, 0.8066666722297668, 0.8270000219345093, 0.8113333582878113, 0.8133333325386047, 0.8113333582878113, 0.8190000057220459, 0.7983333468437195]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 4, 1, 0, 4, 9, 1, 2, 4, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [0, 0, 2, 2, 2, 0, 1, 2, 0, 2, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.11257142573595047, "mapping_values": [1, 36, 36, 24, 12, 7, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), grad))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.2110373116298213e+24, 7.12799445901522e+25, 6.0018262029905e+26, 2.4349528836475785e+27, 7.261695191877659e+27, 1.5784657337576638e+28], "accuracy": [0.108440101146698, 0.11966715008020401, 0.11517632752656937, 0.11755382269620895, 0.12032756209373474, 0.12415797263383865], "val_loss": [8.589979361841577e+24, 1.789035706830714e+26, 9.780132720587139e+26, 3.369235191543165e+27, 8.665331676133528e+27, 1.8584455026587863e+28], "val_accuracy": [0.11033333092927933, 0.09799999743700027, 0.09433333575725555, 0.09099999815225601, 0.09099999815225601, 0.09066666662693024]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 4, 9, 2, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 17, 10, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(grad))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)))), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), alpha)))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302445952603531, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 2, 9, 8, 2, 2, 2, 4, 0, 9, 1, 9, 5, 7, 6, 1, 9, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 0, 2, 2, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 81, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 20, 9, 6, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), grad), alpha)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [36786804.72183332, 5477535401.573372, 93760450834.29295, 666318381308.1115, 2945691915385.322, 9622824650967.594], "accuracy": [0.09602430462837219, 0.10038304328918457, 0.10077928751707077, 0.09694888442754745, 0.10368511080741882, 0.10289261490106583], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 4, 9, 2, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [48, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3963367908.2604055, 591070619468.6547, 10120289503224.697, 71927503228030.47, 317992722878581.4, 1038876585663041.5], "accuracy": [0.09602430462837219, 0.10038304328918457, 0.1006472036242485, 0.09694888442754745, 0.10368511080741882, 0.10276053100824356], "val_loss": [32527732150.857143, 1753325614811.4285, 18818064262290.285, 102591781854061.72, 384289543215981.7, 1133560249450496.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 20, 10, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.negative(grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, alpha), grad), tf.math.sqrt(grad))), alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302445952603531, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 7, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [8, 9, 1, 0, 8, 9, 1, 2, 1, 9, 4, 0, 0, 1, 0, 5, 7, 6, 2, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 0, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [36786804.72183332, 5477535401.573372, 93760450834.29295, 666318381308.1115, 2945691915385.322, 9622824650967.594], "accuracy": [0.09602430462837219, 0.10038304328918457, 0.10077928751707077, 0.09694888442754745, 0.10368511080741882, 0.10289261490106583], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [9, 9, 1, 6, 4, 9, 2, 2, 2, 5, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [1, 2, 2, 2, 0, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 13, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302445952603531, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 3, 8, 4, 9, 2, 2, 2, 2, 4, 0, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [3, 1, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [52, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 8, 7, 1, 8, 2, 2, 1], [4, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [2, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.06771428883075714, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3017929786263425, 2.302626847213112, 2.301299874336334, 2.301324803138595, 2.300060717248016, 2.3004852421389845, 2.2997181365487127, 2.301001390493179, 2.299326391110504, 2.2997107533825356, 2.3005640898177875, 2.299147840819071, 2.299446712190827, 2.300161657017204, 2.3006356688003025], "accuracy": [0.09140139818191528, 0.09232597798109055, 0.08994849026203156, 0.09774138033390045, 0.0948355570435524, 0.09602430462837219, 0.09853387624025345, 0.10157178342342377, 0.09496764093637466, 0.10091137140989304, 0.09734513610601425, 0.1014397069811821, 0.09945846349000931, 0.09879804402589798, 0.09509972482919693], "val_loss": [1.9705089160374232, 1.9700406619480677, 1.9698875291006905, 1.9696925027029855, 1.9698658670697893, 1.9699407986232214, 1.9699669565473283, 1.9697935240609306, 1.9697869164603097, 1.9698759487697057, 1.969972814832415, 1.9701610973903112, 1.9703747885567802, 1.9705884797232491, 1.9707491738455636], "val_accuracy": [0.04333333298563957, 0.05433333292603493, 0.05999999865889549, 0.06566666811704636, 0.06733333319425583, 0.06933332979679108, 0.07400000095367432, 0.07766667008399963, 0.0793333351612091, 0.07999999821186066, 0.07833333313465118, 0.07800000160932541, 0.07433333247900009, 0.07333333045244217, 0.070333331823349]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [6, 4, 6, 0, 4, 9, 1, 0, 2, 5, 4, 3, 0, 1, 9, 5, 7, 6, 1, 8, 9, 8, 1, 6, 5, 0, 3, 3, 3, 5, 1, 8, 8, 1, 0, 3, 9], [2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 2, 2, 1, 2, 3, 3, 2, 2], [96, 41, 17, 0, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [5, 8, 7, 1, 8, 2, 2, 1], [3, 0, 0, 6], [29, 55], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 7, 9, 2, 2, 9, 0, 7, 6, 7, 3, 6, 1, 3, 4, 2, 2, 4, 9, 8, 0, 7, 7, 3, 4, 2, 2, 2, 7, 0, 3, 1, 0, 2, 6, 2, 8, 7, 4, 0, 9, 0, 3, 2, 9, 4, 5, 1, 7, 3, 3, 7, 1, 2, 5, 2, 4, 4, 4, 4, 2, 8, 8, 4, 6, 2, 8, 8], [3, 0, 0, 1, 3, 2, 1, 3, 2, 2, 1, 0, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 2, 2, 3, 1, 3, 1, 1, 1, 2, 0, 0, 1, 1, 1, 3, 2, 3, 1, 1, 2, 0, 0, 1, 3, 0], [11, 32, 85, 18, 26, 46]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3020702645983664, 2.3037240890668698, 2.3027597846702705, 2.3035192555440274, 2.30207274098989, 2.302323428788725], "accuracy": [0.09074098616838455, 0.08836349099874496, 0.08545766770839691, 0.09325055778026581, 0.08902391046285629, 0.09153348207473755], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]