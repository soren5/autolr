[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [6], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.6648571491241455, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1018097718724675, 2.5618678370581454, 2.507181579505196, 2.296483939208249, 2.1815256026946575, 2.066485278531781, 1.9167701570727271, 1.8955353943899464, 1.8361593308686235, 1.7342665140040878, 1.6346679995986118, 1.4512338745690072, 1.6138711915181818, 1.3984731989388044, 1.46610186742738, 1.8597120230995574, 1.22131802081243, 1.1246772452730307, 1.0402858836413722, 0.9809449126124933, 1.0278014801339292, 0.9431829398350079, 0.9476370140782217, 0.9018726772982384, 0.8449339321607202, 0.8427872590699987, 0.7943930028530711, 0.7797850741371424, 0.8147397648940201, 0.7537202772652043, 0.7433339019870997, 0.7462865491710744, 0.6915486815772147, 0.6858426692652397, 0.6735321549439648, 0.6686354725667278, 0.6456219248169559, 0.6282736870512247, 0.6420150874722604, 0.6233428358055455], "accuracy": [0.19521859288215637, 0.12323339283466339, 0.14449875056743622, 0.11874257028102875, 0.22639016807079315, 0.30722492933273315, 0.34341567754745483, 0.368511438369751, 0.3921542763710022, 0.4227975308895111, 0.4447232782840729, 0.5233126282691956, 0.4352133274078369, 0.5202747583389282, 0.5062739253044128, 0.4451195299625397, 0.5803724527359009, 0.5967507362365723, 0.6275261044502258, 0.6519614458084106, 0.635451078414917, 0.6593580842018127, 0.6519614458084106, 0.6736230254173279, 0.6917183995246887, 0.6876237988471985, 0.709021270275116, 0.7173424959182739, 0.7067758440971375, 0.7180029153823853, 0.7238145470619202, 0.713379979133606, 0.7392682433128357, 0.7376832365989685, 0.7503632307052612, 0.7490423917770386, 0.7561748623847961, 0.7601373791694641, 0.7655527591705322, 0.7648923397064209], "val_loss": [3.2540180342538014, 1.9754365512302943, 1.977593081338065, 1.9263301576886858, 1.8677569798060827, 1.716461113521031, 1.137624944959368, 1.7379210335867745, 1.4883172852652413, 1.1447480065482003, 1.1456653731209892, 1.453291416168213, 1.0778507845742362, 0.8910876001630511, 1.4049340316227503, 0.8820168972015381, 0.8584035805293492, 0.7424087183816093, 0.6724167381014142, 0.7113282339913505, 0.7733925240380424, 0.7248385804040092, 0.676466839654105, 0.5978067772729057, 0.6635128089359829, 0.582244838987078, 0.5787175212587629, 0.6156219584601266, 0.5286381244659424, 0.5705501352037702, 0.7038179976599557, 0.543600150517055, 0.4833905185971941, 0.4628540277481079, 0.4665336438587734, 0.4967641660145351, 0.44679161480494906, 0.46545820576804026, 0.4584694078990391, 0.43623776946749004], "val_accuracy": [0.20133332908153534, 0.10066666454076767, 0.10266666859388351, 0.16466666758060455, 0.2523333430290222, 0.3059999942779541, 0.5146666765213013, 0.2723333239555359, 0.43666666746139526, 0.5690000057220459, 0.5846666693687439, 0.42100000381469727, 0.581333339214325, 0.596666693687439, 0.40966665744781494, 0.6370000243186951, 0.6539999842643738, 0.6703333258628845, 0.7123333215713501, 0.6936666369438171, 0.6603333353996277, 0.6623333096504211, 0.7163333296775818, 0.7639999985694885, 0.6813333630561829, 0.7443333268165588, 0.7670000195503235, 0.7440000176429749, 0.7823333144187927, 0.7426666617393494, 0.6526666879653931, 0.7613333463668823, 0.79666668176651, 0.7896666526794434, 0.8046666383743286, 0.7860000133514404, 0.8029999732971191, 0.7946666479110718, 0.79666668176651, 0.8019999861717224]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [2, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.2882857024669647, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, grad)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1018170193438013, 2.5565214354553243, 2.247564884429406, 2.299669616651604, 2.3144700257942867, 2.2624741124596657, 2.3051167067566944, 2.3034308039831872, 2.3030023316602666, 2.303271895118787], "accuracy": [0.19535067677497864, 0.12296922504901886, 0.13815876841545105, 0.16378284990787506, 0.12442214041948318, 0.23312640190124512, 0.09576013684272766, 0.09959053993225098, 0.10117553919553757, 0.0952318087220192], "val_loss": [3.260148593357631, 1.9735933712550573, 1.9406553677150182, 1.9865174293518066, 1.8989387920924596, 1.9767374992370605, 1.9740300859723772, 1.9736640112740653, 1.9736191204616003, 1.9736362865992956], "val_accuracy": [0.20133332908153534, 0.10066666454076767, 0.12433333694934845, 0.0989999994635582, 0.3293333351612091, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [3, 2, 3], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.22057142853736877, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.103504902210218, 2.6071175853133184, 2.2586838472568127, 2.306872314827994, 2.303805144140828, 2.3035530476223096], "accuracy": [0.1958790123462677, 0.14700831472873688, 0.15255580842494965, 0.09615638852119446, 0.09787346422672272, 0.09338264167308807], "val_loss": [3.528008665357317, 1.9738250459943498, 1.9799316270010812, 1.9744746344430106, 1.9738107408796037, 1.9737855366298132], "val_accuracy": [0.2096666693687439, 0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 3, 1, 5], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.21199999749660492, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1016787108397517, 3.2812331213124155, 3.622038300546594, 2.308915093495877, 2.297931168041902, 2.305184113524294], "accuracy": [0.19574692845344543, 0.136045441031456, 0.1010434553027153, 0.09998679161071777, 0.14000792801380157, 0.10077928751707077], "val_loss": [3.0867233957563127, 3.4437402316502164, 1.9835292271205358, 1.9733383996146066, 1.9775776181902205, 1.9743444578988212], "val_accuracy": [0.20533333718776703, 0.09833333641290665, 0.10066666454076767, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [2, 5, 3], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.20228570699691772, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.101594642294774, 2.526594977636442, 2.3030888540177, 2.596044807890072, 2.3090792135901976, 2.3039257155748296], "accuracy": [0.19521859288215637, 0.12019548565149307, 0.10738343745470047, 0.20803064107894897, 0.09853387624025345, 0.09998679161071777], "val_loss": [3.111127035958426, 1.977013179234096, 1.9656600952148438, 1.9851162774222237, 1.975196020943778, 1.9739678927830286], "val_accuracy": [0.20033332705497742, 0.10066666454076767, 0.12466666847467422, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [86, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 0, 8, 2, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.16771428287029266, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.101786970446658, 2.5417763950361505, 2.3004755245743334, 2.270955914755728, 2.319281871213952, 2.3038633216751596, 2.303160152856023, 2.3029744103600116], "accuracy": [0.19561484456062317, 0.14093250036239624, 0.11438383162021637, 0.2448817789554596, 0.09325055778026581, 0.09708096832036972, 0.09470347315073013, 0.09602430462837219], "val_loss": [3.154125826699393, 1.9799130303519112, 1.9266534532819475, 2.0307895796639577, 1.9750711577279227, 1.9739982741219657, 1.9737012726919991, 1.9736595153808594], "val_accuracy": [0.2043333351612091, 0.1003333330154419, 0.23266667127609253, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 5], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.11999999731779099, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1011580058281623, 2.490426023418027, 2.2922322349210758, 2.212079304997569, 2.307279189501173, 2.305465501864132, 2.303510620074108, 2.3031962569741493, 2.3030930984415448], "accuracy": [0.1950865089893341, 0.11861048638820648, 0.12930920720100403, 0.20235107839107513, 0.160084530711174, 0.10368511080741882, 0.10381719470024109, 0.09536388516426086, 0.0956280529499054], "val_loss": [2.88601439339774, 1.9729064532688685, 1.9603437696184431, 1.7540525708879744, 1.9779669216700964, 1.9743574006216866, 1.973806721823556, 1.973662989480155, 1.9736557688031877], "val_accuracy": [0.20100000500679016, 0.10966666787862778, 0.09933333098888397, 0.38866665959358215, 0.1003333330154419, 0.09833333641290665, 0.10000000149011612, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [73, 83, 84, 57], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 8, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [3, 5, 0, 3, 1], [41, 55], [0, 0], [0, 1], [5], [0], [35], [0, 0, 1, 1], [0, 1, 5, 2, 9], [0, 0], [6, 63]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 13, 13, 8, 5, 2, 2, 2, 1, 1, 1, 4, 2, 2, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020821682387465, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [88, 83, 84, 57], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 0, 0], [3, 5, 3], [41, 55], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1], [2, 4, 5, 1, 6], [4, 5], [], [0, 1], [0, 4, 5, 2, 9], [3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 5, 3, 0, 10, 7, 5, 2, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, grad))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 5], [41, 55], [0], [1], [], [4], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [37, 83, 84, 57], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9], [5, 0, 1], [41, 55], [0], [1], [], [4], [], [1, 1], [0, 4, 5, 2, 9], [3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [24, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 5], [2, 5, 3], [41, 55], [1], [1], [], [4], [], [0, 1], [9, 4, 5, 2, 9], [3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3016217380954984, 2.3025853948790904, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09430722147226334, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [2, 5, 3], [76, 55], [0], [1], [], [1], [], [0, 1], [0, 4, 5, 2, 9], [3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 6, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 5], [41, 55], [0], [1], [], [4], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [0], [1], [2, 6, 2, 3, 2, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 5], [], [0, 1, 1], [0], [6], [4], [], [0, 0, 0, 0, 1, 1, 0], [0, 4, 5, 2, 9], [3, 0], [6, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [349578869.7533717, 6880134945.373663, 32461843460.733852, 90720092690.19151, 193705152250.6913, 356973997203.01996], "accuracy": [0.10289261490106583, 0.10157178342342377, 0.09549596905708313, 0.09919429570436478, 0.10130762308835983, 0.1006472036242485], "val_loss": [1366353993.142857, 10925896557.714285, 36869324800.0, 87387031844.57143, 170669675081.14285, 294908826185.1429], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 4, 1, 6, 4, 8], [1, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9], [2, 5, 3], [41, 55], [0], [1], [], [5], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [3, 0, 1, 2, 2, 0, 0, 1], [8, 83, 84, 57], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [4], [], [0, 1, 1], [4, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 1, 4, 5, 8, 6, 5], [3, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [3, 2, 2, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [2, 5, 3, 0], [54, 55, 89], [0], [1], [], [5], [6], [0, 1], [0, 4, 5, 2, 9], [0, 0], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 10, 10, 6, 4, 1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), beta)), tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3556947590668345, 3.0299517284562607, 4.941874094202125, 8.064781622533328, 12.380049024543364, 18.01705018142904], "accuracy": [0.09628847241401672, 0.09760929644107819, 0.0948355570435524, 0.10038304328918457, 0.1006472036242485, 0.1002509593963623], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [1, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 4, 2, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 5], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [1], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(alpha)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302060187721076, 2.3032814632270155, 2.301907589029028, 2.301625262099077, 2.303986231160595, 2.302864983884524], "accuracy": [0.09430722147226334, 0.08942015469074249, 0.08532558381557465, 0.09166556596755981, 0.08809932321310043, 0.08955223858356476], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1], [1, 2, 6, 6, 4, 8, 1, 6, 3, 5, 8, 0, 3, 0, 8, 4, 8, 8, 4, 6], [5], [41, 55], [1], [1], [], [4], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302060187721076, 2.3032814632270155, 2.301907589029028, 2.301625262099077, 2.303986231160595, 2.302864983884524], "accuracy": [0.09430722147226334, 0.08942015469074249, 0.08532558381557465, 0.09166556596755981, 0.08809932321310043, 0.08955223858356476], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]