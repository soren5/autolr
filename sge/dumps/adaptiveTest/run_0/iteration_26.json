[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [6], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.7897142767906189, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8844673005959236, 2.2997082152056136, 2.2837714500525497, 2.3017152952968387, 2.2753295638321602, 2.285183245149098, 2.3027053684244194, 2.3277908356245467, 1.9600999506315646, 1.8893174800921928, 1.44729332239904, 1.2732127958111807, 0.9916732492637105, 0.9120483667292159, 0.8363422223243416, 0.7816576453688721, 0.7540123721139621, 0.7055273925103941, 0.6962774151178667, 0.6594562273550783, 0.6398133720231802, 0.6151490156456244, 0.6372043254384591, 0.6179866680395428, 0.6247049934907187, 0.586299769567571, 0.5681825703428941, 0.5517811977143742, 0.55415324969708, 0.561687883239113, 0.522614022468642, 0.5465637253590736, 0.5079261551931817, 0.5017464362186227, 0.49432324418821955, 0.482315431063469, 0.48746897622090696, 0.474848181824123, 0.47682734023326456, 0.4653860838492596, 0.4453114496403524, 0.4387502661706781, 0.43086890071106937, 0.4265330554259341, 0.429842157197619, 0.4215650377398264, 0.4204253196133725, 0.42088637521962574], "accuracy": [0.177255317568779, 0.10474177449941635, 0.15559370815753937, 0.11266675591468811, 0.16378284990787506, 0.14793290197849274, 0.11187426000833511, 0.16114120185375214, 0.30920618772506714, 0.3265090584754944, 0.5234447121620178, 0.5860520601272583, 0.6563201546669006, 0.689869225025177, 0.6930392384529114, 0.7157574892044067, 0.7265883088111877, 0.7409853339195251, 0.7401928305625916, 0.7530049085617065, 0.7633073329925537, 0.7695152759552002, 0.7563069462776184, 0.7724210619926453, 0.7687227725982666, 0.7757231593132019, 0.780610203742981, 0.7905164361000061, 0.7864218950271606, 0.7957997918128967, 0.7997622489929199, 0.7984414100646973, 0.807158887386322, 0.8086118102073669, 0.8142913579940796, 0.8181217908859253, 0.8137630224227905, 0.819970965385437, 0.8170651197433472, 0.8211596608161926, 0.8286884427070618, 0.8333113193511963, 0.8333113193511963, 0.8370096683502197, 0.8400475382804871, 0.8381983637809753, 0.8370096683502197, 0.8422929644584656], "val_loss": [1.9744580813816615, 1.9433391434805733, 1.9770679473876953, 1.9395112310137068, 1.9715520313807897, 1.9770324570792062, 1.9542668206351144, 1.8738081114632743, 1.974839755467006, 1.2336176804133825, 0.7903895207813808, 0.6976567847388131, 0.6587644304547992, 0.6134154966899327, 0.6446614776338849, 0.5530985253197807, 0.545296481677464, 0.5365850755146572, 0.5006883995873588, 0.49341751847948345, 0.47591367789677214, 0.4772375822067261, 0.46626879487718853, 0.5170608248029437, 0.48296252318790983, 0.46351214817592074, 0.443221424307142, 0.5044582401003156, 0.43975373676845003, 0.4222568188394819, 0.4064183235168457, 0.46229730333600727, 0.4139412896973746, 0.4085754837308611, 0.41281648193086895, 0.4352051956312997, 0.42226219177246094, 0.4459582396915981, 0.38950395584106445, 0.43184792143957956, 0.3944142631122044, 0.39112759487969534, 0.3692928467478071, 0.44243665252413067, 0.3886546151978629, 0.3946914161954607, 0.38347225529806955, 0.40352334295000347], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.22633333504199982, 0.10433333367109299, 0.10000000149011612, 0.3816666603088379, 0.26233333349227905, 0.109333336353302, 0.5526666641235352, 0.6726666688919067, 0.6936666369438171, 0.7223333120346069, 0.7136666774749756, 0.6956666707992554, 0.746666669845581, 0.7486666440963745, 0.7553333044052124, 0.7736666798591614, 0.7883333563804626, 0.7929999828338623, 0.7833333611488342, 0.7923333048820496, 0.7689999938011169, 0.7883333563804626, 0.8006666898727417, 0.8086666464805603, 0.7620000243186951, 0.8130000233650208, 0.8163333535194397, 0.8196666836738586, 0.7923333048820496, 0.8169999718666077, 0.828000009059906, 0.8253333568572998, 0.8016666769981384, 0.8233333230018616, 0.8019999861717224, 0.8303333520889282, 0.8083333373069763, 0.8326666951179504, 0.8220000267028809, 0.8463333249092102, 0.8086666464805603, 0.8246666789054871, 0.8316666483879089, 0.8410000205039978, 0.8333333134651184]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1], [2, 3, 8, 2, 9, 9], [2, 3, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.12285714596509933, "mapping_values": [1, 2, 2, 2, 0, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8844470341664423, 2.3017270319088023, 2.265103811569627, 2.303927158651225, 2.3031602662237267, 2.3032136174114926, 2.303170002084666], "accuracy": [0.17804782092571259, 0.09853387624025345, 0.16431118547916412, 0.09470347315073013, 0.10077928751707077, 0.09298639744520187, 0.09879804402589798], "val_loss": [1.9744630541120256, 1.9601836885724748, 1.9751364162990026, 1.973982334136963, 1.9737920079912459, 1.97373594556536, 1.9737027713230677], "val_accuracy": [0.09933333098888397, 0.11800000071525574, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 5, 6, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 0], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.11428571492433548, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8844470341664423, 2.301897224544172, 2.2628194963958803, 2.3040617246984287, 2.303292046354085, 2.303181959354268, 2.303033662903594], "accuracy": [0.17804782092571259, 0.09959053993225098, 0.16140536963939667, 0.09430722147226334, 0.09985470771789551, 0.09351472556591034, 0.09642054885625839], "val_loss": [1.9744627135140556, 1.9610141345432825, 1.9753469739641463, 1.9740612166268485, 1.9738201413835799, 1.9737209592546736, 1.9737044743129186], "val_accuracy": [0.09933333098888397, 0.11566666513681412, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [86, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 0, 8, 2, 9], [3, 5, 5, 3, 1], [41, 55], [0], [1], [], [5], [], [0, 1], [0, 1, 5, 2, 9], [2, 0], [6]], "fitness": -0.10857142508029938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8843639414969564, 2.302233925553487, 2.2832935985683087, 2.3049085036307875, 2.303464272743077, 2.303346659355884, 2.3031076066104443], "accuracy": [0.1784440577030182, 0.09734513610601425, 0.15281997621059418, 0.1018359512090683, 0.09628847241401672, 0.09338264167308807, 0.09721305221319199], "val_loss": [1.9748214312962122, 1.9624592236110143, 1.9768776212419783, 1.974372318812779, 1.9738828114100866, 1.9737439836774553, 1.9736884662083216], "val_accuracy": [0.09933333098888397, 0.1120000034570694, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [7, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [5, 5, 3, 4], [41, 55], [0], [1], [], [5], [], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 4, 5, 2, 9, 9, 8, 8], [3, 0], [6, 47, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 10, 8, 2, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [6], [0, 0, 0, 0, 1, 1, 0], [0, 4, 5, 2, 9], [3, 0], [6, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.9563862624146643e+32, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1], [2, 2, 8, 2, 9], [1, 5, 3, 1], [41, 55], [0], [1], [], [4], [], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [0, 4, 5, 2, 9, 8, 7, 4, 2, 2, 1, 5, 8, 4, 5, 8], [3, 0, 2, 1, 3, 0, 0, 0], [6, 19, 90, 62, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 24, 16, 8, 5], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.add(tf.math.pow(tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(beta, alpha), tf.math.square(tf.math.sqrt(sigma)))), tf.math.pow(tf.math.square(tf.math.sqrt(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 5, 3, 1], [41, 55], [0], [1], [], [5], [6], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8854390168155364, 2.299389976536231, 2.3010933382825103, 2.3043290227553186, 2.303213607113926, 2.3032669185915045, 2.302966142547853], "accuracy": [0.17804782092571259, 0.108440101146698, 0.1526878923177719, 0.09470347315073013, 0.09919429570436478, 0.09311848133802414, 0.09774138033390045], "val_loss": [1.974562440599714, 1.9474163055419922, 1.9761619567871094, 1.9739675521850586, 1.9737345831734794, 1.9737674849373954, 1.9736721856253487], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [57, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 1, 9], [3, 2, 3], [41, 55], [0], [1], [], [4], [6], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8844074471090386, 2.301882022218524, 2.324527389920383, 2.305601432449105, 2.30365829202619, 2.3033962858792356, 2.303104425134786], "accuracy": [0.17831197381019592, 0.09800554811954498, 0.1460837423801422, 0.09747721254825592, 0.09840179979801178, 0.09219389408826828, 0.09615638852119446], "val_loss": [1.9747192519051688, 1.96668883732387, 1.9779492105756487, 1.9744182314191545, 1.9738945960998535, 1.9737684386117118, 1.9736977304731096], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 7, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [2, 1, 3, 1], [41, 55], [0], [1], [], [5], [], [1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(alpha, tf.math.add(beta, grad)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 5, 6, 3, 0, 7], [3, 2, 3, 2, 1, 1], [41, 55], [0], [1], [], [5], [], [1, 1], [0, 4, 5, 2, 9], [3], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [23, 83, 84, 57], [0, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [2, 3, 3], [41, 55], [0], [1], [], [4], [], [0, 1, 1], [4, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 3, 1, 5], [41, 55], [0], [1], [], [5], [], [0, 0, 1, 0, 1], [5, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(sigma, tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [0, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9, 9], [5, 5, 5, 3, 1, 5], [41, 55], [0], [1], [], [0], [6], [0, 1], [0, 4, 5, 2, 9], [0, 0], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.36857347135074, 3.027768713529509, 4.88798641292505, 8.04670437971646, 12.487550582427232, 18.14467375194392], "accuracy": [0.09470347315073013, 0.1026284471154213, 0.10460969805717468, 0.09457138925790787, 0.10394927859306335, 0.09853387624025345], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 3, 1, 5, 3, 1, 4, 5, 5, 0, 2, 5], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.05542857199907303, "mapping_values": [1, 12, 12, 7, 5, 1, 32, 32, 18, 14, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [4.19775423161531, 2.3118386576912893, 2.30478671437572, 2.304446149007787, 2.3032750649427647, 2.3034370440880005, 2.303273329220239, 2.302755968209507, 2.3031212189540478, 2.3028861541380232, 2.302946015970031, 2.3029387273084314, 2.3029976291994076, 2.302854316833863, 2.30288025961576], "accuracy": [0.18438778817653656, 0.1018359512090683, 0.10302469879388809, 0.09998679161071777, 0.09853387624025345, 0.09906221181154251, 0.09245806187391281, 0.09893012791872025, 0.0956280529499054, 0.10236428678035736, 0.09826971590518951, 0.10566636174917221, 0.09774138033390045, 0.09681680053472519, 0.09615638852119446], "val_loss": [1.9887095178876604, 1.9764151573181152, 1.9743160520281111, 1.9738202095031738, 1.9737516811915807, 1.9737308365958077, 1.9736544745309013, 1.9736735480172294, 1.9737413270132882, 1.9737417357308524, 1.9736490930829729, 1.973674978528704, 1.9736072676522392, 1.9735851969037737, 1.973402636391776], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.10066666454076767, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 6, 2, 3, 2, 1, 6, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 3, 1, 5], [41, 55], [0, 1], [0], [5], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303060352306293, 2.303241923217209, 2.3022227561264432, 2.302685258127459, 2.3026947805107136, 2.303740412252706], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08942015469074249, 0.09113723784685135, 0.0936468094587326, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [3, 0, 3], [41, 55], [1], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 10, 10, 6, 4, 1, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303060352306293, 2.303241923217209, 2.3022227561264432, 2.302685258127459, 2.3026947805107136, 2.303740412252706], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08942015469074249, 0.09113723784685135, 0.0936468094587326, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 8, 2, 9], [2, 5, 2, 1], [41, 55], [0, 1], [0], [0], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 4, 4, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303060352306293, 2.303241923217209, 2.3022227561264432, 2.302685258127459, 2.3026947805107136, 2.303740412252706], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08942015469074249, 0.09113723784685135, 0.0936468094587326, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 4, 0, 5, 8, 6, 5], [2, 2, 0, 1, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1], [1, 3, 8, 2, 9], [2, 5, 3], [41, 55], [1], [1], [], [5], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 7, 7, 5, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303060352306293, 2.303241923217209, 2.3022227561264432, 2.302685258127459, 2.3026947805107136, 2.303740412252706], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08942015469074249, 0.09113723784685135, 0.0936468094587326, 0.09179764986038208], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], [2, 0, 8, 2, 9], [2, 3, 3], [41, 55], [1], [1], [], [4], [6], [0, 1, 0, 0, 1, 1], [7, 1, 5, 2, 9], [3, 0, 3], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), sigma))", "other_info": {"loss": [2.3030579997060037, 2.303235374027948, 2.302213822090079, 2.302672028084945, 2.3026738312612545, 2.303714645631624], "accuracy": [0.08994849026203156, 0.09153348207473755, 0.08942015469074249, 0.09113723784685135, 0.09417514503002167, 0.09166556596755981], "val_loss": [1.9709972654070174, 1.9709949493408203, 1.9709929738725935, 1.9709909302847726, 1.9709888185773576, 1.9709869112287248], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]