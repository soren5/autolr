[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8485714197158813, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0329312718760115, 1.0942074162864635, 0.7820092900129058, 0.6975516393404784, 0.6476966308533413, 0.5983762212039583, 0.5548926851516701, 0.5265854866103789, 0.49264388167626666, 0.4739885639599553, 0.4491021690304411, 0.43647445114202754, 0.42539595244441286, 0.4019250389709606, 0.39479857272617475, 0.3835901757981468, 0.3683415600975129, 0.36811757028268205, 0.3626934688372493, 0.3395184070883552, 0.32778962681385126, 0.32565913289261844, 0.3096674531166816, 0.30477218323411437, 0.3020406076621858, 0.30530841721204827, 0.2795546867466086, 0.27398929057371946, 0.2679540907481658, 0.26076275601111165, 0.25567573039302766, 0.24545726395986966, 0.24577904104588133, 0.2444897358719195, 0.22783622873685994, 0.22864876434417558], "accuracy": [0.3210936486721039, 0.6116761565208435, 0.7054550051689148, 0.7353057861328125, 0.7560427784919739, 0.7728173136711121, 0.793422281742096, 0.804649293422699, 0.819970965385437, 0.8284242749214172, 0.8404437899589539, 0.8396512866020203, 0.8466516733169556, 0.852331280708313, 0.8553691506385803, 0.8632941246032715, 0.8623695969581604, 0.8664641380310059, 0.8642187118530273, 0.8741249442100525, 0.8782195448875427, 0.8775591254234314, 0.8862766027450562, 0.8861445188522339, 0.8864086866378784, 0.8820499181747437, 0.8920882344245911, 0.8957865834236145, 0.8976356983184814, 0.8993527889251709, 0.9059569239616394, 0.9058248400688171, 0.908730685710907, 0.9093911051750183, 0.91124027967453, 0.9137498140335083], "val_loss": [0.8930344581604004, 0.6250014305114746, 0.553901127406529, 0.5341787678854806, 0.50702474798475, 0.4670112814222063, 0.44341208253587994, 0.405352098601205, 0.3878215551376343, 0.3798698442322867, 0.3675555331366403, 0.3548417091369629, 0.34282091685703825, 0.3433421850204468, 0.33564867292131695, 0.333487800189427, 0.3255558950560434, 0.31869059801101685, 0.30584268059049335, 0.3155352899006435, 0.3119525568825858, 0.3037070035934448, 0.3023918867111206, 0.29866663047245573, 0.30620371443884714, 0.2988049302782331, 0.2936534455844334, 0.2869770612035479, 0.2948648248400007, 0.2968186395508902, 0.29131851877485004, 0.29089134080069406, 0.31336504220962524, 0.30662258182253155, 0.31626120635441374, 0.30069784607206074], "val_accuracy": [0.6083333492279053, 0.7233333587646484, 0.746666669845581, 0.753000020980835, 0.7576666474342346, 0.7870000004768372, 0.8003333210945129, 0.8199999928474426, 0.8299999833106995, 0.8323333263397217, 0.8363333344459534, 0.8450000286102295, 0.8503333330154419, 0.846666693687439, 0.8486666679382324, 0.8539999723434448, 0.8556666374206543, 0.8603333234786987, 0.862666666507721, 0.856333315372467, 0.8636666536331177, 0.8650000095367432, 0.8619999885559082, 0.8690000176429749, 0.8646666407585144, 0.8683333396911621, 0.8686666488647461, 0.8763333559036255, 0.8726666569709778, 0.8743333220481873, 0.8766666650772095, 0.875, 0.8700000047683716, 0.8676666617393494, 0.8726666569709778, 0.8766666650772095]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 6, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 29, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.838857114315033, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0329346863852833, 1.0949931086613407, 0.7844139643002652, 0.6988561841097207, 0.6481764071716088, 0.5990103412266531, 0.5535516551677435, 0.5259724783308518, 0.4900264762663775, 0.47323228022236913, 0.45113408517891057, 0.4392710946664645, 0.4245731052650421, 0.4022542801964253, 0.3958151294310898, 0.3836817667783763, 0.3667800975135604, 0.35887999477765625, 0.3558084021359702, 0.3341780213309222, 0.3293888925514075, 0.32163528093666904, 0.3064566048703819, 0.3005386045808569, 0.29338611578739804, 0.3010783566814199, 0.27985097921566954, 0.2677472202871706, 0.25943475415709466, 0.2583681629035042, 0.2601309000280602, 0.24821509858400215, 0.2393325586848649, 0.2395650607314423, 0.23037298845026108, 0.22727708840500865, 0.22031174397991318, 0.2130985456198875, 0.21403929973991712, 0.2023705019316795, 0.2024521407154746, 0.19261536238735472], "accuracy": [0.3210936486721039, 0.6116761565208435, 0.7061154246330261, 0.733588695526123, 0.7560427784919739, 0.7738739848136902, 0.7950072884559631, 0.8063663840293884, 0.8197067975997925, 0.8264430165290833, 0.8407079577445984, 0.839519202709198, 0.8462554216384888, 0.8514066934585571, 0.8520671129226685, 0.8598600029945374, 0.8634262084960938, 0.8681812286376953, 0.8691058158874512, 0.8762382864952087, 0.8784837126731873, 0.8779553771018982, 0.8848236799240112, 0.8853520154953003, 0.8893144726753235, 0.8869370222091675, 0.8920882344245911, 0.8972394466400146, 0.9033153057098389, 0.9033153057098389, 0.8990886211395264, 0.9066173434257507, 0.9100515246391296, 0.9121648669242859, 0.9100515246391296, 0.9148064851760864, 0.9170519113540649, 0.9178444147109985, 0.9177123308181763, 0.9227314591407776, 0.921938955783844, 0.927882730960846], "val_loss": [0.893002952848162, 0.626973169190543, 0.5535011972699847, 0.5336345434188843, 0.5043023484093803, 0.4621162584849766, 0.4414607116154262, 0.40307783229010447, 0.388183057308197, 0.3807774100984846, 0.3637689862932478, 0.35511352334703716, 0.3435889312199184, 0.33908664328711374, 0.33533218077250887, 0.3297022751399449, 0.32286156926836285, 0.31457299845559256, 0.3067757146699088, 0.3115133047103882, 0.3026567782674517, 0.29996172870908466, 0.30730739661625456, 0.2998504042625427, 0.3004175339426313, 0.29698101963315693, 0.29149947847638813, 0.282135614327022, 0.2951799886567252, 0.29052841663360596, 0.29324833835874287, 0.2928441422326224, 0.30300658089773996, 0.3048675571169172, 0.29777480023247854, 0.29433490548815044, 0.2856103181838989, 0.29177416222436087, 0.2900323952947344, 0.2958895904677255, 0.28979761259896414, 0.28895353419440134], "val_accuracy": [0.6079999804496765, 0.7236666679382324, 0.746666669845581, 0.753000020980835, 0.7576666474342346, 0.7886666655540466, 0.8023333549499512, 0.8220000267028809, 0.828000009059906, 0.8309999704360962, 0.8356666564941406, 0.843999981880188, 0.8523333072662354, 0.8493333458900452, 0.847000002861023, 0.8569999933242798, 0.8566666841506958, 0.8613333106040955, 0.8646666407585144, 0.856333315372467, 0.8616666793823242, 0.8659999966621399, 0.8629999756813049, 0.8666666746139526, 0.8636666536331177, 0.8679999709129333, 0.8703333139419556, 0.8756666779518127, 0.8766666650772095, 0.878000020980835, 0.8726666569709778, 0.8776666522026062, 0.8723333477973938, 0.8740000128746033, 0.8809999823570251, 0.878000020980835, 0.8830000162124634, 0.8826666474342346, 0.8809999823570251, 0.8766666650772095, 0.8790000081062317, 0.8826666474342346]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 8, 3, 9, 8, 0, 5, 9, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [67, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [17, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.7862856984138489, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2997366646104216, 2.2767420102261657, 2.234681861464531, 2.164285067034404, 2.0294314384964305, 1.7963271291264453, 1.5468729305827875, 1.3907839781446638, 1.3593409710776898, 1.1927003572330719, 1.028686639875579, 0.9549775428586805, 0.9313636205420281, 0.8975175760834996, 0.8508514079671604, 0.8272057591317872, 0.8349015356417047, 0.8332394721044794, 0.7986168193858078, 0.7902987526077494, 0.7652581212794887, 0.7507535795163421, 0.7380153103480014, 0.7300710935303564, 0.7238820268729611, 0.7069790694361208, 0.6993897515847903, 0.6864456136339077, 0.6771140589674371, 0.662309840874602, 0.6651599776113447, 0.6533199400792206, 0.6379606024448378, 0.6276308087435979, 0.6166727743553778, 0.6156718987893309, 0.600238266756128, 0.5970614831429651, 0.5904733863615041, 0.579000630831879, 0.5689736187040783, 0.5567150678947664, 0.5602026038465246, 0.5498733205518797, 0.5368663232639214, 0.5389498131795724, 0.530752143351598, 0.5254130252970208, 0.5246884759233581, 0.5174279971334361, 0.5127541766411058, 0.5164308964363761, 0.508756585054079, 0.49813540372566983, 0.4929825604206, 0.4889052536517181, 0.4918192292736695, 0.48624879256010906, 0.4737299332222241, 0.47447611492118813, 0.4686584981197002, 0.47009905864533935, 0.4595360838505633, 0.45036918173660107, 0.4423440945162639, 0.4562581399286648, 0.4400498400219774, 0.43597970335490793, 0.4248413414790441, 0.4292919520082538, 0.43229579002456325, 0.4238344580860123, 0.4179628001991721, 0.41090771109121604, 0.40195717645548024, 0.41069307373011227, 0.4058029572126998, 0.40201992231857003, 0.39465949625040575, 0.40565142018557887, 0.3937963254227221, 0.3943069303638789, 0.38668391681649605, 0.3821935513039716, 0.3856973287066008, 0.3808103818439017], "accuracy": [0.0940430611371994, 0.1628582775592804, 0.26324132084846497, 0.34460440278053284, 0.39770177006721497, 0.4294016659259796, 0.47153612971305847, 0.5127459764480591, 0.5395588278770447, 0.5967507362365723, 0.6349227428436279, 0.631488561630249, 0.6527539491653442, 0.6691322326660156, 0.6844538450241089, 0.6888125538825989, 0.6902654767036438, 0.6818121671676636, 0.7008321285247803, 0.7018887996673584, 0.711530864238739, 0.7168141603469849, 0.7154933214187622, 0.7136441469192505, 0.7186633348464966, 0.7327961921691895, 0.7391361594200134, 0.7437590956687927, 0.7403249144554138, 0.755118191242218, 0.752740740776062, 0.7490423917770386, 0.7567031979560852, 0.7611940503120422, 0.7685906887054443, 0.7709681391716003, 0.769911527633667, 0.7737419009208679, 0.778232753276825, 0.7802139520645142, 0.7808743715286255, 0.7909126877784729, 0.789459764957428, 0.7902522683143616, 0.8016114234924316, 0.7998943328857422, 0.8016114234924316, 0.8068947196006775, 0.8105930685997009, 0.8050455451011658, 0.8035926818847656, 0.8053097128868103, 0.8075551390647888, 0.8133667707443237, 0.811649739742279, 0.8141592741012573, 0.81548011302948, 0.8146876096725464, 0.8259146809577942, 0.822348415851593, 0.8290846943855286, 0.8284242749214172, 0.8318583965301514, 0.8308017253875732, 0.8362171649932861, 0.8296129703521729, 0.8404437899589539, 0.8376700282096863, 0.8407079577445984, 0.8387266993522644, 0.8372738361358643, 0.8424250483512878, 0.8430854678153992, 0.8450667262077332, 0.852859616279602, 0.8455950617790222, 0.8474441766738892, 0.8482366800308228, 0.8515387773513794, 0.8519350290298462, 0.8508783578872681, 0.8508783578872681, 0.8540483713150024, 0.860652506351471, 0.8544445633888245, 0.8603883385658264], "val_loss": [1.9587115560259138, 1.9265718460083008, 1.874523639678955, 1.781723976135254, 1.597212280545916, 1.2855540003095354, 0.9853849070412772, 0.850365434374128, 0.7691475323268345, 0.7464114257267543, 0.6811990908214024, 0.6955987896238055, 0.6898369789123535, 0.6418783324105399, 0.6134053979601178, 0.5977835825511387, 0.5914661543709892, 0.5781429665429252, 0.5644878830228534, 0.5662367003304618, 0.5500005994524274, 0.551692077091762, 0.5468878064836774, 0.5481150661196027, 0.5414825337273734, 0.5245241607938494, 0.5111020633152553, 0.5044357095445905, 0.49973927225385395, 0.4943746839250837, 0.4891366788319179, 0.48072770663670134, 0.4716652291161673, 0.4682532548904419, 0.4653178112847464, 0.45892010416303364, 0.45441356727055143, 0.45319959095546175, 0.44711921896253315, 0.43950454677854267, 0.4340710384505136, 0.4275554418563843, 0.4204892175538199, 0.4159062760216849, 0.412757796900613, 0.4102212871823992, 0.41057662452970234, 0.40991885321480886, 0.40390433583940777, 0.39704512698309763, 0.39515726055417744, 0.39472960574286325, 0.3911880595343454, 0.38912263086863924, 0.3926243952342442, 0.39286054032189505, 0.3904518485069275, 0.38490412064961027, 0.38161401237760273, 0.3827230078833444, 0.3798274653298514, 0.3773814014026097, 0.3763324362891061, 0.3784002832004002, 0.38072091341018677, 0.3801138997077942, 0.37664135864802767, 0.37338186161858694, 0.3706426875931876, 0.36733824014663696, 0.3643637384687151, 0.3626485126359122, 0.3612396887370518, 0.36083704233169556, 0.362022374357496, 0.3611480934279306, 0.3557315639087132, 0.35086054461342947, 0.3502144728388105, 0.3486422726086208, 0.34410845381872995, 0.3434986812727792, 0.34533182212284635, 0.3496792657034738, 0.3535199080194746, 0.3510527185031346], "val_accuracy": [0.12666666507720947, 0.3490000069141388, 0.41499999165534973, 0.45366665720939636, 0.4959999918937683, 0.5649999976158142, 0.6543333530426025, 0.6556666493415833, 0.6933333277702332, 0.7020000219345093, 0.7089999914169312, 0.6816666722297668, 0.718666672706604, 0.7226666808128357, 0.7260000109672546, 0.7286666631698608, 0.7329999804496765, 0.7316666841506958, 0.7486666440963745, 0.7390000224113464, 0.7486666440963745, 0.7573333382606506, 0.7630000114440918, 0.7633333206176758, 0.7596666812896729, 0.7649999856948853, 0.7716666460037231, 0.7753333449363708, 0.7746666669845581, 0.7753333449363708, 0.7803333401679993, 0.7853333353996277, 0.7883333563804626, 0.7906666398048401, 0.7913333177566528, 0.7940000295639038, 0.7973333597183228, 0.7979999780654907, 0.8026666641235352, 0.8066666722297668, 0.809333324432373, 0.8090000152587891, 0.8069999814033508, 0.8096666932106018, 0.8133333325386047, 0.8196666836738586, 0.8193333148956299, 0.8186666369438171, 0.8223333358764648, 0.8253333568572998, 0.8223333358764648, 0.8216666579246521, 0.8259999752044678, 0.8320000171661377, 0.8320000171661377, 0.8296666741371155, 0.8316666483879089, 0.8360000252723694, 0.8349999785423279, 0.8320000171661377, 0.8336666822433472, 0.8376666903495789, 0.8363333344459534, 0.8343333601951599, 0.8386666774749756, 0.840666651725769, 0.8426666855812073, 0.8460000157356262, 0.8446666598320007, 0.8473333120346069, 0.8456666469573975, 0.8486666679382324, 0.8473333120346069, 0.8489999771118164, 0.8476666808128357, 0.8460000157356262, 0.8519999980926514, 0.8560000061988831, 0.8569999933242798, 0.8550000190734863, 0.8600000143051147, 0.8553333282470703, 0.856333315372467, 0.8550000190734863, 0.8560000061988831, 0.859666645526886]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [51, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.45971429347991943, "mapping_values": [1, 11, 11, 9, 2, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0299283618924484, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2525425851345062, 0.15176330506801605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5775018419538225, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.39899998903274536, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.11400000005960464, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 2, 3, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.3022489977267124, 2.2981508389408596, 2.2998572166144586, 2.301338384778445, 2.3020188527541183, 2.302720559980135, 2.302944100843114], "accuracy": [0.09140139818191528, 0.11147800832986832, 0.09932637959718704, 0.08532558381557465, 0.09298639744520187, 0.08836349099874496, 0.09945846349000931], "val_loss": [1.9690183230808802, 1.9691950253077917, 1.971731458391462, 1.9727999142238073, 1.9735959597996302, 1.9738847187587194, 1.9740277699061803], "val_accuracy": [0.08233333379030228, 0.13966666162014008, 0.05999999865889549, 0.12033333629369736, 0.09333333373069763, 0.10100000351667404, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 38, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 1, 1, 0, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [44, 44, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302316870876449, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 11, 3, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.477619240926698, 14.590024440484733, 40.48102043100462, 84.76926222591982, 151.39027130082613, 248.99577198726405], "accuracy": [0.09285431355237961, 0.10276053100824356, 0.10051512718200684, 0.1002509593963623, 0.09589222073554993, 0.1026284471154213], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [50, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [32, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 11, 4, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.square(alpha)))", "other_info": {"loss": [2.302316870876449, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 1, 6, 0, 8, 3, 9, 8, 0, 5, 9, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [44, 44, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 3, 1, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [40.069273980538355, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03566239774227142, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [37630.15625, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 79, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3017044332537275, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [36846551.54206421, 5503234188.663056, 93580291539.2989, 659120597658.797, 2904454075431.088, 9666424299086.11], "accuracy": [0.09681680053472519, 0.10170386731624603, 0.10077928751707077, 0.09959053993225098, 0.09536388516426086, 0.10302469879388809], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 5, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 11, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 2, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 10, 3, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.square(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.477619240926698, 14.590024440484733, 40.48102043100462, 84.76926222591982, 151.39027130082613, 248.99577198726405], "accuracy": [0.09285431355237961, 0.10276053100824356, 0.10051512718200684, 0.1002509593963623, 0.09589222073554993, 0.1026284471154213], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 0, 1, 3, 9, 9, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [17, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [60, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 1, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.09000000357627869, "mapping_values": [1, 10, 10, 8, 2, 4, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025033921770937, 2.29970005773802, 2.3007768056711044, 2.3020036811952056, 2.3023794163109494, 2.3027114725509703, 2.3030939566980435], "accuracy": [0.09047681838274002, 0.10566636174917221, 0.09549596905708313, 0.07753269374370575, 0.08241976052522659, 0.0874389111995697, 0.09932637959718704], "val_loss": [1.9700198854718889, 1.9703728130885534, 1.9721476009913854, 1.9732287951878138, 1.9735710961478097, 1.9739193235124861, 1.9743505886622839], "val_accuracy": [0.0716666653752327, 0.12133333086967468, 0.07233333587646484, 0.07466666400432587, 0.0976666659116745, 0.10100000351667404, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.06771428883075714, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(alpha, beta))", "other_info": {"loss": [2.303105506253296, 2.3018493713121435, 2.3025632372558738, 2.302949824400582, 2.301477810048849, 2.302260981196851, 2.3026597601878347, 2.300725233789448, 2.301547628399435, 2.3016371760370236, 2.3012924772196315, 2.3024487192793575, 2.3008017613981946, 2.3022386466255433, 2.3016710890408567, 2.300315866128974, 2.3015034424236753, 2.301090077858843, 2.300166768703982, 2.3004899434031842, 2.3000136128726525, 2.3012917908411676, 2.30158501776092, 2.3009563755475773, 2.3007297348651776, 2.3003376857589783, 2.3007963808410126, 2.3007930017591485, 2.3012089352361467, 2.3016297226773434, 2.302300355532355, 2.3001717579536405, 2.3005050327390206, 2.3010569156011367, 2.300922380352159, 2.300819988185231, 2.3016268408073333, 2.3007498468941447, 2.301149287763572, 2.3006512578042932, 2.299895300919968, 2.3005800952276516, 2.300936415620279, 2.3003117478267, 2.300528874628422, 2.3004510264748737, 2.30029964859554, 2.3003388262380775, 2.300089827964429, 2.2999079299247054, 2.3001458701865705, 2.301330373051333, 2.3005485905317378, 2.3006879434672487, 2.301219407609268, 2.299416658318101, 2.300012441532345, 2.301054109718979, 2.301321311917177, 2.3013786525774185, 2.300297579477492, 2.300928144847964, 2.299586217479935, 2.3000740868587695, 2.300530192811397, 2.300870224311918, 2.3000749976108135, 2.3000847844557284, 2.301245666907495, 2.3016499408310778, 2.3004560623312544, 2.3012321469900616, 2.3010288204704024, 2.3004869888203885, 2.301707944912823, 2.2998442096858844, 2.299347838988913, 2.300583758295614, 2.3007380927101875, 2.3007167460754356, 2.300867424287092, 2.3002688224998056, 2.300335757279865, 2.299743629197844, 2.2989483200217347, 2.2996457059857964, 2.30049291634525, 2.3017244925037303, 2.3005869606813154, 2.300635229028085, 2.2997180197484868, 2.300784698928966, 2.3005453886184015, 2.2999930813831817, 2.2995672483863676, 2.300710455364539, 2.300101181141626, 2.2996560572759113, 2.299579889956026, 2.29980693605393], "accuracy": [0.08770307898521423, 0.09760929644107819, 0.08796724677085876, 0.08598599582910538, 0.0948355570435524, 0.09298639744520187, 0.0936468094587326, 0.09245806187391281, 0.09219389408826828, 0.09100515395402908, 0.08651433140039444, 0.0870426595211029, 0.09734513610601425, 0.09311848133802414, 0.08981640636920929, 0.09457138925790787, 0.09126931428909302, 0.09034473448991776, 0.0940430611371994, 0.09589222073554993, 0.09800554811954498, 0.09536388516426086, 0.09008057415485382, 0.09470347315073013, 0.0948355570435524, 0.0936468094587326, 0.09694888442754745, 0.09430722147226334, 0.09021265059709549, 0.0948355570435524, 0.09509972482919693, 0.09457138925790787, 0.09721305221319199, 0.09232597798109055, 0.09298639744520187, 0.09747721254825592, 0.09259014576673508, 0.09655263274908066, 0.09536388516426086, 0.09694888442754745, 0.09140139818191528, 0.09377889335155487, 0.09496764093637466, 0.09708096832036972, 0.09272222965955734, 0.0956280529499054, 0.09747721254825592, 0.09325055778026581, 0.09813763201236725, 0.1018359512090683, 0.09932637959718704, 0.1002509593963623, 0.09311848133802414, 0.09245806187391281, 0.0940430611371994, 0.09694888442754745, 0.0948355570435524, 0.09470347315073013, 0.09008057415485382, 0.08651433140039444, 0.09998679161071777, 0.09826971590518951, 0.10434553027153015, 0.09589222073554993, 0.09311848133802414, 0.09351472556591034, 0.09245806187391281, 0.10130762308835983, 0.09589222073554993, 0.09536388516426086, 0.09708096832036972, 0.09338264167308807, 0.09906221181154251, 0.09549596905708313, 0.09338264167308807, 0.0936468094587326, 0.09853387624025345, 0.09747721254825592, 0.09628847241401672, 0.09496764093637466, 0.09549596905708313, 0.09721305221319199, 0.09906221181154251, 0.09774138033390045, 0.1026284471154213, 0.09642054885625839, 0.1002509593963623, 0.09126931428909302, 0.09681680053472519, 0.09694888442754745, 0.09338264167308807, 0.09853387624025345, 0.0944393053650856, 0.09945846349000931, 0.09945846349000931, 0.09615638852119446, 0.09998679161071777, 0.10077928751707077, 0.10460969805717468, 0.09391097724437714], "val_loss": [1.9709462438310896, 1.970881121499198, 1.970818178994315, 1.9707441329956055, 1.9706710406712122, 1.9706078256879533, 1.9705322129385812, 1.9704903875078474, 1.9704509462629045, 1.9704147747584753, 1.970381259918213, 1.9703382083347865, 1.9703119822910853, 1.9702486310686385, 1.9701884814671107, 1.9701553072248186, 1.9701134136744909, 1.9700820105416434, 1.9700533321925573, 1.9700348717825753, 1.9700283323015486, 1.9700078964233398, 1.9699831690107072, 1.9699655260358537, 1.9699450901576452, 1.9699196815490723, 1.9698990413120814, 1.9698773111615862, 1.9698755400521415, 1.9698540142604284, 1.9698244503566198, 1.969803742000035, 1.96979706627982, 1.9697800363813127, 1.969766412462507, 1.9697581018720354, 1.9697471346173967, 1.9697397095816476, 1.9697366441999162, 1.9697376659938268, 1.9697481564113073, 1.9697417531694685, 1.969737938472203, 1.9697436605181013, 1.9697459084647042, 1.9697631427219935, 1.969771385192871, 1.9697788102286202, 1.9697918891906738, 1.9697940690176827, 1.9698004722595215, 1.9698176383972168, 1.9698420933314733, 1.969853333064488, 1.9698559897286552, 1.969867774418422, 1.9698672975812639, 1.9698897770472936, 1.969888346535819, 1.9698870522635323, 1.9698967933654785, 1.9699114390781947, 1.9699160030909948, 1.9699163436889648, 1.969921384538923, 1.9699243136814661, 1.9699315343584334, 1.9699305125645228, 1.9699247905186243, 1.9699127333504813, 1.9699059895106725, 1.9699047633579798, 1.9698967933654785, 1.9698949541364397, 1.969888482775007, 1.969886643545968, 1.9698792866298132, 1.9698636872427804, 1.969851289476667, 1.9698428426470076, 1.9698282650538854, 1.9698211806161063, 1.9698081697736467, 1.9698070798601424, 1.9698049000331335, 1.969801357814244, 1.969792434147426, 1.9697825568062919, 1.969770840236119, 1.969752652304513, 1.9697513580322266, 1.969740867614746, 1.969733374459403, 1.9697300365992956, 1.9697237014770508, 1.9697138241359167, 1.969714641571045, 1.9697131429399763, 1.9697042873927526, 1.9696989059448242], "val_accuracy": [0.03866666555404663, 0.03933333232998848, 0.04066666588187218, 0.04233333468437195, 0.043666668236255646, 0.04333333298563957, 0.04399999976158142, 0.044333335012197495, 0.04500000178813934, 0.04500000178813934, 0.04500000178813934, 0.045666664838790894, 0.04699999839067459, 0.04800000041723251, 0.04800000041723251, 0.04800000041723251, 0.04899999871850014, 0.05000000074505806, 0.05133333429694176, 0.05233333259820938, 0.05299999937415123, 0.05400000140070915, 0.05433333292603493, 0.05400000140070915, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.05533333495259285, 0.055666666477918625, 0.0560000017285347, 0.05700000002980232, 0.0573333315551281, 0.0573333315551281, 0.05766666680574417, 0.05766666680574417, 0.057999998331069946, 0.05833333358168602, 0.057999998331069946, 0.057999998331069946, 0.057999998331069946, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.05999999865889549, 0.05966666713356972, 0.05966666713356972, 0.059333331882953644, 0.05999999865889549, 0.06066666543483734, 0.061000000685453415, 0.061000000685453415, 0.06199999898672104, 0.06266666948795319, 0.06233333423733711, 0.06333333253860474, 0.06400000303983688, 0.06400000303983688, 0.06433333456516266, 0.06499999761581421, 0.06533333659172058, 0.06566666811704636, 0.06599999964237213, 0.06599999964237213, 0.0663333311676979, 0.0663333311676979, 0.06666667014360428, 0.0676666647195816, 0.06733333319425583, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.06866666674613953, 0.06866666674613953, 0.0689999982714653, 0.06966666877269745, 0.06966666877269745, 0.07066666334867477, 0.07066666334867477, 0.07066666334867477, 0.07199999690055847, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.0729999989271164, 0.07333333045244217, 0.07333333045244217, 0.0729999989271164, 0.07466666400432587, 0.07466666400432587, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07500000298023224, 0.07566666603088379, 0.07566666603088379, 0.07633333653211594, 0.07666666805744171, 0.07666666805744171]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 4, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031345424304437, 2.3019607691260346, 2.302770228071645, 2.30325845591286, 2.3018834908971257, 2.3027601622477056], "accuracy": [0.0874389111995697, 0.09774138033390045, 0.08691058307886124, 0.08426892012357712, 0.09298639744520187, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [3, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [6, 6, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031345739214726, 2.3019613943804114, 2.302772126382352, 2.3032623156108056, 2.301889725648464, 2.302770171261829], "accuracy": [0.0874389111995697, 0.09774138033390045, 0.08691058307886124, 0.08426892012357712, 0.09298639744520187, 0.09166556596755981], "val_loss": [1.9709994452340263, 1.9710001264299666, 1.971001284463065, 1.9710027830941337, 1.9710051672799247, 1.9710078920636858], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478, 0.03766666725277901, 0.03766666725277901]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 5, 6, 0, 4, 4, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 59, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [2, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3031345424304437, 2.3019607691260346, 2.302770228071645, 2.30325845591286, 2.3018834908971257, 2.3027601622477056], "accuracy": [0.0874389111995697, 0.09774138033390045, 0.08691058307886124, 0.08426892012357712, 0.09298639744520187, 0.09166556596755981], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [8, 9, 6, 0, 8, 3, 9, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 79, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [48, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 0, 1], [0, 5, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.03371428698301315, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3033380304360986, 2.3032799404153357, 2.3057845016086986, 2.30830727831531, 2.309170605342433, 2.31289144948552], "accuracy": [0.08651433140039444, 0.09430722147226334, 0.08426892012357712, 0.07700435817241669, 0.080042265355587, 0.07832518965005875], "val_loss": [1.971621036529541, 1.972764219556536, 1.9742653710501534, 1.9758515357971191, 1.9777490752083915, 1.9798857143947057], "val_accuracy": [0.03233333304524422, 0.02666666731238365, 0.023333333432674408, 0.01899999938905239, 0.01666666753590107, 0.01899999938905239]}}]