[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8494285941123962, "mapping_values": [1, 14, 14, 9, 5, 4, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033238777379318, 1.1330108900647107, 0.8196643797114636, 0.7208134441674268, 0.66602854439926, 0.6004700866578168, 0.5472009596162075, 0.5148072888932728, 0.4909456462482845, 0.4752034870876911, 0.45496430670297094, 0.4403957519485903, 0.4306376950418976, 0.40605636299435865, 0.39567550501929233, 0.38079808891929606, 0.3742740410406513, 0.3643877123679467, 0.3615705641135406, 0.3398878619088599, 0.3346413247156389, 0.32548170402427595, 0.3176778618292077, 0.3057689042989494, 0.29387373944173445, 0.2918431956211274, 0.2869892064819026, 0.2796961037734118, 0.2686009896138498, 0.25955245052314846, 0.26617271368411616, 0.25840179101980876, 0.24845933372932513, 0.23265012587971612, 0.23738338054604202, 0.2334932512248811, 0.22286454227897767, 0.22083844391110236, 0.21608257046890234, 0.21112969205553, 0.20269552374504907, 0.20751727085741142, 0.19664815035769811, 0.18596163296216137, 0.18311828573256153], "accuracy": [0.3085457682609558, 0.618280291557312, 0.6966054439544678, 0.7304186820983887, 0.7524765729904175, 0.7803460359573364, 0.7960638999938965, 0.8092722296714783, 0.8187822103500366, 0.8276317715644836, 0.8310658931732178, 0.8421608805656433, 0.8428213000297546, 0.8500858545303345, 0.8527275323867798, 0.856689989566803, 0.8659358024597168, 0.8661999702453613, 0.867520809173584, 0.8765024542808533, 0.8741249442100525, 0.8808611631393433, 0.8833707571029663, 0.8820499181747437, 0.8927486538887024, 0.8879936337471008, 0.8899748921394348, 0.8907673954963684, 0.9006736278533936, 0.9022586345672607, 0.8957865834236145, 0.900409460067749, 0.904768168926239, 0.9115044474601746, 0.91124027967453, 0.9121648669242859, 0.9153348207473755, 0.9137498140335083, 0.9153348207473755, 0.9220710396766663, 0.9212785363197327, 0.9179764986038208, 0.9274864792823792, 0.9280148148536682, 0.9299960136413574], "val_loss": [0.9415981428963798, 0.6535156284059797, 0.5854740142822266, 0.5285330840519497, 0.4922156844820295, 0.46214471544538227, 0.42704206705093384, 0.4059739794049944, 0.39622885840279715, 0.37756714650562834, 0.3651198829923357, 0.3592434014592852, 0.3456853713308062, 0.3343674199921744, 0.3353449361664908, 0.32920139176504953, 0.31826261963163105, 0.3256173474448068, 0.3162842733519418, 0.31464604820523945, 0.3128425564084734, 0.31773942708969116, 0.30554557698113577, 0.2936416608946664, 0.29760480778557913, 0.3009911690439497, 0.2980958478791373, 0.30350477354867117, 0.29764666727610994, 0.299403897353581, 0.2849619473729815, 0.2965812768254961, 0.2922981722014291, 0.30100397552762714, 0.29419500487191336, 0.2885588066918509, 0.30753733430589947, 0.29406639507838656, 0.29299273661204744, 0.2987334302493504, 0.30198940208980013, 0.2925998057637896, 0.2971771274294172, 0.31113059180123465, 0.30788035903658184], "val_accuracy": [0.6083333492279053, 0.7170000076293945, 0.7443333268165588, 0.7699999809265137, 0.7789999842643738, 0.7956666946411133, 0.8149999976158142, 0.8270000219345093, 0.824999988079071, 0.8333333134651184, 0.8373333215713501, 0.8383333086967468, 0.8456666469573975, 0.8513333201408386, 0.8516666889190674, 0.8539999723434448, 0.8579999804496765, 0.8510000109672546, 0.8603333234786987, 0.8613333106040955, 0.8603333234786987, 0.8656666874885559, 0.8666666746139526, 0.8673333525657654, 0.8633333444595337, 0.8666666746139526, 0.8706666827201843, 0.8690000176429749, 0.8663333058357239, 0.8709999918937683, 0.8756666779518127, 0.8726666569709778, 0.8743333220481873, 0.8766666650772095, 0.8740000128746033, 0.8806666731834412, 0.8773333430290222, 0.8799999952316284, 0.8813333511352539, 0.8833333253860474, 0.8759999871253967, 0.8816666603088379, 0.8830000162124634, 0.878333330154419, 0.8776666522026062]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033222404217219, 1.1328089386086972, 0.819288095927525, 0.7218724800500856, 0.6629005307928288, 0.598920380568476, 0.5451203811367065, 0.5175349919976434, 0.49065798481678086, 0.4756597374384949, 0.4533064486745515, 0.4395501644753698, 0.4291478862159083, 0.40522394186910965, 0.39590526581314406, 0.38198448013966474, 0.37253724613902656, 0.3629104434546384, 0.36017333755813113, 0.3420320454605535, 0.3333194141477059, 0.3263449752217412, 0.31917421033416743, 0.30476283964904827, 0.29198491780387253, 0.2900759362982343, 0.2838213893684178, 0.27800744507235936, 0.27420074373912723, 0.26808835597338065, 0.26217228724712144, 0.25117414489461287, 0.24304472790174103, 0.23100628444326868, 0.23583904550162446, 0.23337634770058685, 0.22965692300381457, 0.21723691141128287, 0.2109733600095121, 0.2048333557235283, 0.19751812025792467, 0.20545400638173142, 0.19568044667970771], "accuracy": [0.3085457682609558, 0.6166952848434448, 0.6952846646308899, 0.7305507659912109, 0.7547219395637512, 0.7791573405265808, 0.7965922355651855, 0.8079513907432556, 0.8195747137069702, 0.8297450542449951, 0.8309338092803955, 0.841500461101532, 0.842028796672821, 0.8506141901016235, 0.8532558679580688, 0.8557654023170471, 0.8646149635314941, 0.8676528930664062, 0.8663320541381836, 0.8775591254234314, 0.8774270415306091, 0.8812574148178101, 0.8811253309249878, 0.8858803510665894, 0.8897107243537903, 0.8906353116035461, 0.8927486538887024, 0.8926165699958801, 0.894069492816925, 0.9005415439605713, 0.9012019634246826, 0.9026548862457275, 0.9045040011405945, 0.9124290347099304, 0.9109761118888855, 0.910711944103241, 0.91124027967453, 0.9153348207473755, 0.9194294214248657, 0.9222031235694885, 0.9243164658546448, 0.9198256731033325, 0.9247127175331116], "val_loss": [0.9420940194811139, 0.6545190640858242, 0.5868670088904244, 0.5293420723506382, 0.4906543322971889, 0.46186111654554096, 0.4281820910317557, 0.4055041585649763, 0.3951205781527928, 0.37826052733830046, 0.36447344507489887, 0.3590801613671439, 0.34736084938049316, 0.3380885549954006, 0.3361781324659075, 0.3283523917198181, 0.3178784336362566, 0.32216095072882517, 0.31319476876940044, 0.31644431182316374, 0.31129753589630127, 0.3106520431382315, 0.2974296808242798, 0.2962966561317444, 0.29895007610321045, 0.3026647993496486, 0.2964343854359218, 0.30106329917907715, 0.2941255739756993, 0.28729140758514404, 0.2864152363368443, 0.29400345257350374, 0.29153389590127127, 0.30242074387414114, 0.2857239842414856, 0.29418054648808073, 0.29464623757771086, 0.2921346000262669, 0.28257844277790617, 0.2993665507861546, 0.2910134025982448, 0.2945578949792044, 0.2907096913882664], "val_accuracy": [0.6079999804496765, 0.7149999737739563, 0.7450000047683716, 0.7683333158493042, 0.7816666960716248, 0.7926666736602783, 0.8140000104904175, 0.8216666579246521, 0.8226666450500488, 0.8333333134651184, 0.8366666436195374, 0.8420000076293945, 0.8463333249092102, 0.8510000109672546, 0.8500000238418579, 0.856333315372467, 0.859000027179718, 0.8560000061988831, 0.8616666793823242, 0.8676666617393494, 0.8646666407585144, 0.8636666536331177, 0.8690000176429749, 0.8673333525657654, 0.8673333525657654, 0.8673333525657654, 0.8723333477973938, 0.8676666617393494, 0.8756666779518127, 0.8766666650772095, 0.878333330154419, 0.8786666393280029, 0.8776666522026062, 0.8799999952316284, 0.8790000081062317, 0.8840000033378601, 0.878333330154419, 0.887666642665863, 0.8823333382606506, 0.8826666474342346, 0.8833333253860474, 0.8820000290870667, 0.8870000243186951]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8451428413391113, "mapping_values": [1, 15, 15, 10, 5, 5, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.033238777379318, 1.1330069986552989, 0.8196779609498032, 0.7206673340365367, 0.6666597811899574, 0.6005962793191882, 0.546636700712852, 0.5145464090308367, 0.49003947598350645, 0.4737582302537529, 0.4530955586277845, 0.44118394068817596, 0.43378622811216294, 0.40959192874047107, 0.398474015851519, 0.38204462280079454, 0.37763448445914427, 0.361102191838354, 0.35834811972101144, 0.3441303872657474, 0.33757174414587593, 0.33180020369511587, 0.32113833989780244, 0.3124873964360771, 0.298183964645354, 0.2965719934979513, 0.29281560401748974, 0.28499751135445134, 0.2783977776832742, 0.26899663653072664, 0.2728345629687417, 0.26342379522125214, 0.25014788981095565, 0.2331240381747819, 0.23579893874186786, 0.23499795828143036, 0.2308839790896024, 0.2210255948984864, 0.21659294715324146, 0.20875884548445672, 0.19539228500140232], "accuracy": [0.3085457682609558, 0.6181482076644897, 0.6968696117401123, 0.7310791015625, 0.7524765729904175, 0.7802139520645142, 0.7952714562416077, 0.8103289008140564, 0.8175934553146362, 0.828292191028595, 0.8304054737091064, 0.8416325449943542, 0.8385946154594421, 0.8466516733169556, 0.8520671129226685, 0.8553691506385803, 0.8605204224586487, 0.8668603897094727, 0.8668603897094727, 0.8774270415306091, 0.8755778670310974, 0.8754457831382751, 0.8803328275680542, 0.8795403242111206, 0.8903711438179016, 0.8906353116035461, 0.8881257176399231, 0.8901069760322571, 0.8967111110687256, 0.9001452922821045, 0.8961827754974365, 0.8976356983184814, 0.9035794734954834, 0.9134856462478638, 0.9105798602104187, 0.9129573106765747, 0.9080702662467957, 0.9138818979263306, 0.9157310724258423, 0.9202219247817993, 0.9290714859962463], "val_loss": [0.9415981428963798, 0.6535440172467913, 0.585515924862453, 0.529059750693185, 0.4916844367980957, 0.46263132776532856, 0.42574596405029297, 0.40768625906535555, 0.3954095755304609, 0.375735878944397, 0.3653044274875096, 0.3645728145326887, 0.35047614574432373, 0.3335646561213902, 0.3367235916001456, 0.33311997992651804, 0.31786478417260305, 0.3241823485919407, 0.3146811979157584, 0.3144204446247646, 0.31549828393118723, 0.3093776788030352, 0.30229800939559937, 0.2966206244059971, 0.2985644425664629, 0.30194298710141865, 0.3067169870649065, 0.3094394973346165, 0.30040366309029715, 0.3019598552158901, 0.28802034684589933, 0.29081726925713675, 0.29085436037608553, 0.3000603062765939, 0.29485805545534405, 0.28705418961388723, 0.29887671981539043, 0.2881259492465428, 0.2841653823852539, 0.2945891533579145, 0.3010617664882115], "val_accuracy": [0.6083333492279053, 0.7170000076293945, 0.7440000176429749, 0.7689999938011169, 0.7803333401679993, 0.7946666479110718, 0.8140000104904175, 0.8230000138282776, 0.8266666531562805, 0.8356666564941406, 0.8383333086967468, 0.8376666903495789, 0.8453333377838135, 0.8536666631698608, 0.8510000109672546, 0.8539999723434448, 0.8603333234786987, 0.8573333621025085, 0.862333357334137, 0.8636666536331177, 0.8583333492279053, 0.8619999885559082, 0.8659999966621399, 0.8629999756813049, 0.8666666746139526, 0.8650000095367432, 0.8700000047683716, 0.8663333058357239, 0.8693333268165588, 0.8690000176429749, 0.8786666393280029, 0.875333309173584, 0.8803333044052124, 0.8756666779518127, 0.878333330154419, 0.8833333253860474, 0.8763333559036255, 0.8833333253860474, 0.8820000290870667, 0.8826666474342346, 0.875]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8445714116096497, "mapping_values": [1, 10, 10, 7, 3, 1, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0332388403141395, 1.1330012839231918, 0.8195887098238689, 0.7207375233750601, 0.6657826601396132, 0.6006733273486766, 0.5472511606225248, 0.5142631912826626, 0.4912192554498125, 0.47588676329160395, 0.45633504799233926, 0.4413314824484721, 0.4311762281089899, 0.40823601152619443, 0.39570390607356204, 0.3789182809271187, 0.3743329502021191, 0.3629209121354362, 0.3613731798407991, 0.34182980493264126, 0.33529220009917643, 0.3325072974301191, 0.3197634402968077, 0.30665484347898947, 0.2956570183533278, 0.2934136704848411, 0.2902039668823293, 0.27901357460165255, 0.26945843994656826, 0.25947172168837623, 0.26541421902634765, 0.2574894316066384, 0.24524868418157628, 0.23297616002731603, 0.23184657929406868, 0.2279275983745207, 0.22143028958157746, 0.22160771507447533, 0.21355380367459623, 0.21117146000641998, 0.20050711643032945, 0.2068394603368361, 0.19059845097997735, 0.17804409905415894, 0.18109749855894092, 0.17877740651987106, 0.17482428875235267, 0.17347519910212725], "accuracy": [0.3085457682609558, 0.6181482076644897, 0.69673752784729, 0.7305507659912109, 0.7530049085617065, 0.7804781198501587, 0.7961959838867188, 0.809140145778656, 0.817989706993103, 0.8277638554573059, 0.8298771381378174, 0.8417646288871765, 0.8421608805656433, 0.8495575189590454, 0.8551049828529358, 0.8594637513160706, 0.8615770936012268, 0.8687095642089844, 0.8665962219238281, 0.8757099509239197, 0.8779553771018982, 0.8761062026023865, 0.8824461698532104, 0.885219931602478, 0.8894465565681458, 0.8893144726753235, 0.8908994793891907, 0.8961827754974365, 0.8969752788543701, 0.9025228023529053, 0.8981640338897705, 0.9008057117462158, 0.9076740145683289, 0.9100515246391296, 0.9129573106765747, 0.9145423173904419, 0.9159952402114868, 0.9170519113540649, 0.9161273241043091, 0.9203540086746216, 0.9247127175331116, 0.9206181764602661, 0.9282789826393127, 0.9274864792823792, 0.9290714859962463, 0.9266939759254456, 0.9280148148536682, 0.9298639297485352], "val_loss": [0.941598721912929, 0.6535280772617885, 0.5855543443134853, 0.5285980701446533, 0.4918597766331264, 0.4615484986986433, 0.42787325382232666, 0.4068741798400879, 0.396986722946167, 0.37782678433826994, 0.36424719435828073, 0.3621953214917864, 0.3445755498749869, 0.3340293935367039, 0.33588625703539166, 0.3319765755108425, 0.3184468575886318, 0.32324340513774324, 0.32152414321899414, 0.3143273336546762, 0.315527081489563, 0.3197496363094875, 0.2997597370828901, 0.30104433638708933, 0.3015645912715367, 0.3027835062571934, 0.29990765026637484, 0.30185214962278095, 0.29661037240709576, 0.30272808245250155, 0.29062882491520475, 0.2987110359328134, 0.29241630860737394, 0.30452239513397217, 0.29253420659473967, 0.288615882396698, 0.29774164302008493, 0.29470109939575195, 0.28822125707353863, 0.2993241122790745, 0.2971409388950893, 0.2908837965556553, 0.28720444440841675, 0.30612037011555265, 0.2980102981839861, 0.30620249680110384, 0.3053799441882542, 0.3123346482004438], "val_accuracy": [0.6083333492279053, 0.7163333296775818, 0.7446666955947876, 0.7693333625793457, 0.7796666622161865, 0.7950000166893005, 0.8130000233650208, 0.8243333101272583, 0.8236666917800903, 0.8339999914169312, 0.8360000252723694, 0.8399999737739563, 0.8486666679382324, 0.8533333539962769, 0.8519999980926514, 0.8543333411216736, 0.8576666712760925, 0.8543333411216736, 0.8553333282470703, 0.8616666793823242, 0.8629999756813049, 0.859666645526886, 0.8643333315849304, 0.8633333444595337, 0.8619999885559082, 0.8640000224113464, 0.875333309173584, 0.8706666827201843, 0.8703333139419556, 0.8703333139419556, 0.8766666650772095, 0.8736666440963745, 0.8759999871253967, 0.8730000257492065, 0.875, 0.8820000290870667, 0.8773333430290222, 0.8846666812896729, 0.8803333044052124, 0.8793333172798157, 0.8773333430290222, 0.8853333592414856, 0.8859999775886536, 0.8776666522026062, 0.8843333125114441, 0.8826666474342346, 0.8853333592414856, 0.8759999871253967]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 1, 0, 0, 3, 9, 1, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [11, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7248571515083313, "mapping_values": [1, 9, 9, 7, 2, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027417956719924, 2.2954677772118885, 2.281369091166702, 2.2609323983210707, 2.2356881974726273, 2.2040862399101133, 2.158338249824019, 2.0869288608902212, 1.9900731640941574, 1.8471282402191496, 1.682902332955757, 1.5489863156799974, 1.458329645586902, 1.3969607806051443, 1.371824431035182, 1.2579817484241074, 1.1976578324116012, 1.0853391689568337, 0.9851574312347888, 0.9507436754838618, 0.9311217421380646, 0.9333367362911706, 0.9113021284566186, 0.887168313392228, 0.8702104099123407, 0.8437035426786783, 0.8493974065311424, 0.8499848160131528, 0.8477052019933873], "accuracy": [0.09311848133802414, 0.1072513535618782, 0.14542332291603088, 0.20235107839107513, 0.2627129852771759, 0.30379077792167664, 0.33562275767326355, 0.37339848279953003, 0.3863426148891449, 0.4131554663181305, 0.4333641529083252, 0.46030908823013306, 0.49068814516067505, 0.5131422281265259, 0.5332188606262207, 0.5696737766265869, 0.5992603302001953, 0.6116761565208435, 0.6330735683441162, 0.6358473300933838, 0.6432439684867859, 0.6454893946647644, 0.6637167930603027, 0.6778497099876404, 0.6808875799179077, 0.6795667409896851, 0.6826046705245972, 0.6802271604537964, 0.6802271604537964], "val_loss": [1.9672678538731165, 1.9571831566946847, 1.941206727709089, 1.9196793011256628, 1.8920278549194336, 1.85515901020595, 1.802077157156808, 1.7207209042140417, 1.5942245892116003, 1.4166560173034668, 1.2147388798849923, 1.035811288016183, 0.9070099762507847, 0.8515047856739589, 0.7957441295896258, 0.7723818165915353, 0.7615964582988194, 0.6980932780674526, 0.6924094813210624, 0.6998253890446254, 0.6943919147763934, 0.6902216332299369, 0.6692513227462769, 0.6366011926106044, 0.6198262316840035, 0.6129421676908221, 0.610297407422747, 0.6097128902162824, 0.5982640300478254], "val_accuracy": [0.059333331882953644, 0.1459999978542328, 0.29366666078567505, 0.3616666793823242, 0.38966667652130127, 0.4113333225250244, 0.43533334136009216, 0.4573333263397217, 0.48533332347869873, 0.512333333492279, 0.5740000009536743, 0.6296666860580444, 0.6679999828338623, 0.6476666927337646, 0.6846666932106018, 0.6916666626930237, 0.7003333568572998, 0.7049999833106995, 0.6976666450500488, 0.6816666722297668, 0.7129999995231628, 0.7200000286102295, 0.7250000238418579, 0.7306666374206543, 0.7273333072662354, 0.7269999980926514, 0.7269999980926514, 0.7210000157356262, 0.7306666374206543]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [9, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.723714292049408, "mapping_values": [1, 10, 10, 7, 3, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.039209460097376, 1.2792582075121286, 0.9696621244153043, 0.8186862169554708, 0.7365884834733448, 0.6827975314968155, 0.6311985518497452, 0.6006519676294025, 0.6023097952768519, 0.5772042493810113, 0.6097565270795987, 0.5936946851340236, 0.5730242908843332, 0.542675069538578, 0.5460924543150034, 0.5306647877572881, 0.5742261633109643], "accuracy": [0.3015453815460205, 0.5898824334144592, 0.6431118845939636, 0.693831741809845, 0.7170783281326294, 0.7434949278831482, 0.7589486241340637, 0.7680623531341553, 0.7681944370269775, 0.7766477465629578, 0.7671377658843994, 0.7646281719207764, 0.7836481332778931, 0.7901201844215393, 0.7890635132789612, 0.7897239327430725, 0.7887993454933167], "val_loss": [0.9679771491459438, 0.7979609285082135, 0.5882471459252494, 0.5334054572241647, 0.48837227480752127, 0.4841291052954538, 0.46786807264600483, 0.45630383491516113, 0.4365530439785549, 0.45972328526633127, 0.4265331540788923, 0.42541427271706717, 0.4355610949652536, 0.423883284841265, 0.4266735741070339, 0.4503696986607143, 0.45235112735203337], "val_accuracy": [0.6340000033378601, 0.6769999861717224, 0.7296666502952576, 0.7666666507720947, 0.7703333497047424, 0.7713333368301392, 0.7910000085830688, 0.7926666736602783, 0.8016666769981384, 0.7893333435058594, 0.8096666932106018, 0.8180000185966492, 0.815666675567627, 0.8163333535194397, 0.8143333196640015, 0.8153333067893982, 0.8016666769981384]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [39, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 5, 7, 1, 8, 2, 2, 1], [5, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.2914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.square(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4426207956211554, 2.479206367144259, 2.2989929634046877, 2.6288482107112845, 2.306496891662382, 2.303666992808503, 2.303087927394177, 2.3029994085370085], "accuracy": [0.20763438940048218, 0.15400871634483337, 0.11491216719150543, 0.17540615797042847, 0.09919429570436478, 0.09615638852119446, 0.09787346422672272, 0.09008057415485382], "val_loss": [1.967090334211077, 1.9749668666294642, 1.9305764607020788, 1.9791413715907507, 1.9749292646135603, 1.974015576498849, 1.9736889430454798, 1.9736470494951521], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.2639999985694885, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 9, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 25, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [75, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.25371429324150085, "mapping_values": [1, 10, 10, 8, 2, 3, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.4148944981771137, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.204860657453537, 0.19535067677497864, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9732326098850794, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 4, 2, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [68, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034124752596905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 3, 6, 0, 4, 6, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [2, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), grad)), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 4, 9, 6, 0, 4, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [64, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [9, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034124752596905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [5, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [105541.76566782729, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11451591551303864, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.547431350212082e+16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [49, 43, 6], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034124752596905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [178.59837658889322, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04437987133860588, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [9341358.0, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 0, 6, 6, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 6, 6, 2, 0, 4, 8, 0], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 32, 18, 6, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))))))))), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.sqrt(grad)))), grad), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad))))))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.177672384914219e+24, 1.0818305698627814e+27, 1.4933359091465441e+28, 7.176593446385292e+28, 2.2293391207712502e+29, 5.3422361371917705e+29], "accuracy": [0.09655263274908066, 0.10632677376270294, 0.10051512718200684, 0.09893012791872025, 0.10011887550354004, 0.09668471664190292], "val_loss": [2.494498387905352e+25, 4.6841262769948794e+27, 3.2992012654138036e+28, 1.1895384273611968e+29, 3.119470736048345e+29, 6.7948968810308e+29], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.0533333346247673]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 2, 2, 0, 4, 8, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5, 0, 1, 2, 2, 9, 7, 7, 2, 3, 0, 8, 2, 8], [2, 2, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 95, 85, 45, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [29, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 58, 58, 38, 20, 7, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))))))))))), lambda shape,  alpha, beta, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034124752596905, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 3, 0, 2, 3, 4, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 19, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [93, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [8, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 12, 5, 3, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [6, 0, 6, 0, 4, 3, 9, 1, 9, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.06771428883075714, "mapping_values": [1, 17, 17, 12, 5, 5, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))), tf.math.negative(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3036487942059374, 2.3025535932857566, 2.3013808944867415, 2.300727274408115, 2.30117368572156, 2.302949725928135, 2.3017267599207867, 2.3015579849800427, 2.3023860452669864, 2.302361094830389, 2.3026719803130544, 2.3029849644838434, 2.3029929076549855, 2.3028224246723306, 2.3025464427753004, 2.302500141610118, 2.3024235752674063, 2.3024870928614574, 2.302560347166705, 2.3026497576923544, 2.3027466693810656], "accuracy": [0.09113723784685135, 0.08849557489156723, 0.09549596905708313, 0.0936468094587326, 0.09615638852119446, 0.09008057415485382, 0.09272222965955734, 0.09879804402589798, 0.08796724677085876, 0.08928807079792023, 0.08228767663240433, 0.08796724677085876, 0.09311848133802414, 0.09760929644107819, 0.10117553919553757, 0.10315678268671036, 0.1006472036242485, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9706572123936243, 1.9703118460518974, 1.9704762186322893, 1.9712339809962682, 1.9716223989214217, 1.9719420160566057, 1.9721622467041016, 1.9726404462541853, 1.97310699735369, 1.9734729358128138, 1.973663330078125, 1.973777907235282, 1.9737116949898856, 1.9735911233084542, 1.9735513414655412, 1.973555224282401, 1.9735982758658273, 1.9736535208565849, 1.9737272943769182, 1.9738077436174666, 1.9738812446594238], "val_accuracy": [0.04266666620969772, 0.05000000074505806, 0.05833333358168602, 0.06400000303983688, 0.07433333247900009, 0.07566666603088379, 0.07666666805744171, 0.08033332973718643, 0.08133333176374435, 0.07466666400432587, 0.08133333176374435, 0.09166666865348816, 0.09799999743700027, 0.0989999994635582, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 3, 9, 1, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 90, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 5, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 15, 15, 10, 5, 4, 3, 3, 1, 2, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), alpha)))), tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3037895705044593, 2.3033041753757586, 2.302686722365825, 2.3012029324792174, 2.3019639655599318, 2.3043741598546212], "accuracy": [0.09060890227556229, 0.0870426595211029, 0.09259014576673508, 0.09034473448991776, 0.09232597798109055, 0.08360850811004639], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]