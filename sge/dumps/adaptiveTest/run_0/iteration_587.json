[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8454285860061646, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035924661633455, 1.0900311391933988, 0.7761603745534326, 0.6994923749982154, 0.6392069623974478, 0.5880678372297462, 0.5696126619239982, 0.5392554337952226, 0.5143181836293311, 0.47997589574088795, 0.4628466350165309, 0.4479890036395575, 0.4397028340812782, 0.4136684866959881, 0.4053525371188422, 0.39523012630061827, 0.3776119993804012, 0.37525915936188625, 0.3567739699723273, 0.3491783355992657, 0.34397933478321396, 0.3323914669114585, 0.3266722240806681, 0.3091257401327368, 0.311229170888186, 0.2867486735242721, 0.28693400613698883, 0.2827192871459739, 0.27218672404467487, 0.26515690544419646, 0.25455122877696185, 0.25500593347524875, 0.2524421671401744, 0.2549352888669856, 0.2379228594776756, 0.23414927070930633, 0.2341009386227257, 0.22241963939171708, 0.2201916057384718, 0.21297808176514463, 0.20064998248139582, 0.1985438992818585, 0.19825670015046687, 0.18665536763196955, 0.17705226828629678, 0.18254256252016862], "accuracy": [0.30880993604660034, 0.6194690465927124, 0.7182670831680298, 0.7376832365989685, 0.7556465268135071, 0.7852331399917603, 0.7848368883132935, 0.8025360107421875, 0.8080834746360779, 0.8204993009567261, 0.828292191028595, 0.8411042094230652, 0.8348963260650635, 0.8470479249954224, 0.8532558679580688, 0.8535200357437134, 0.8594637513160706, 0.8628978729248047, 0.8644828796386719, 0.8705587387084961, 0.8772949576377869, 0.8737286925315857, 0.8795403242111206, 0.8825782537460327, 0.885219931602478, 0.8924844861030579, 0.8949940800666809, 0.8947299122810364, 0.8910315632820129, 0.9009377956390381, 0.9022586345672607, 0.9049002528190613, 0.9056927561759949, 0.9027869701385498, 0.9072777628898621, 0.9089948534965515, 0.9103156924247742, 0.9169198274612427, 0.9138818979263306, 0.917580246925354, 0.9212785363197327, 0.9225993752479553, 0.9235239624977112, 0.9273543953895569, 0.9330339431762695, 0.9325056076049805], "val_loss": [0.9232489722115653, 0.60855690070561, 0.5631749970572335, 0.517910327230181, 0.4804301772798811, 0.45505707604544504, 0.43819373846054077, 0.44106641837528776, 0.4055220569883074, 0.3841390780040196, 0.37760924441473825, 0.3696706124714443, 0.3579760789871216, 0.35626431022371563, 0.3392808437347412, 0.3377447213445391, 0.335731531892504, 0.31962071997778757, 0.31794812849589754, 0.31408211163112093, 0.3062682407242911, 0.31643725293023245, 0.3093471186501639, 0.30132412910461426, 0.29243284463882446, 0.29514538390295847, 0.29072046279907227, 0.295817962714604, 0.28730704954692293, 0.29178606612341745, 0.29030805826187134, 0.2949890153748648, 0.3013098325048174, 0.2877578394753592, 0.2899498002869742, 0.298069885798863, 0.3012637751443045, 0.2938265800476074, 0.2819663201059614, 0.2870258944375174, 0.2875932455062866, 0.28968202216284616, 0.28769612312316895, 0.292210510798863, 0.2977092521531241, 0.28982512440000263], "val_accuracy": [0.6513333320617676, 0.7396666407585144, 0.7383333444595337, 0.765333354473114, 0.7870000004768372, 0.7950000166893005, 0.8033333420753479, 0.7976666688919067, 0.8103333115577698, 0.8286666870117188, 0.8336666822433472, 0.8383333086967468, 0.8460000157356262, 0.843666672706604, 0.8500000238418579, 0.8516666889190674, 0.8533333539962769, 0.8583333492279053, 0.862666666507721, 0.8643333315849304, 0.8613333106040955, 0.8643333315849304, 0.8636666536331177, 0.8669999837875366, 0.8740000128746033, 0.8733333349227905, 0.8683333396911621, 0.8703333139419556, 0.8743333220481873, 0.8763333559036255, 0.8733333349227905, 0.8776666522026062, 0.8690000176429749, 0.8809999823570251, 0.8793333172798157, 0.8759999871253967, 0.874666690826416, 0.8799999952316284, 0.8820000290870667, 0.8833333253860474, 0.8849999904632568, 0.8826666474342346, 0.8820000290870667, 0.8849999904632568, 0.8806666731834412, 0.8836666941642761]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035925516174013, 1.0899672249226033, 0.7765621944677403, 0.699686348209953, 0.6377163908626772, 0.5891117692828226, 0.5689581546486172, 0.538000807793952, 0.5113839868226339, 0.47879241871607064, 0.4620932078774044, 0.4457706871317394, 0.4385499738077084, 0.41183767883517186, 0.4061254756900345, 0.3944299270952099, 0.3766161242236456, 0.36994199929314836, 0.3515381879337932, 0.35187354034767204, 0.345288012561041, 0.33712289983160887, 0.3231706110170851, 0.31021708169350015, 0.3111067154207218, 0.296425676439511, 0.28961286099910294, 0.2813821592705361, 0.27200512779528957, 0.2597870014331376, 0.2582439877070204, 0.2563797171404648, 0.2500076873813244, 0.24098646509302543, 0.22613916508612333, 0.22769811476667276, 0.2302594461583222, 0.22226460012131835, 0.2162273940908879, 0.21317906382297716, 0.20157283945066928, 0.2033407632086838, 0.2021406222336076, 0.1946564898014919, 0.18794560058281296, 0.19113537005311573, 0.18815714879011386], "accuracy": [0.30880993604660034, 0.6192048788070679, 0.7181349992752075, 0.7371549606323242, 0.7569673657417297, 0.7853652238845825, 0.7858935594558716, 0.8001585006713867, 0.8083476424217224, 0.8212917447090149, 0.8300092220306396, 0.8384625315666199, 0.8364813327789307, 0.8507462739944458, 0.8518029451370239, 0.8537842035293579, 0.8578787446022034, 0.8640866279602051, 0.8671245574951172, 0.8681812286376953, 0.8794082403182983, 0.8701624870300293, 0.8795403242111206, 0.8849557638168335, 0.8858803510665894, 0.8893144726753235, 0.8922203183174133, 0.8944657444953918, 0.894069492816925, 0.9029190540313721, 0.901862382888794, 0.902390718460083, 0.9066173434257507, 0.9074098467826843, 0.9126931428909302, 0.9115044474601746, 0.9120327830314636, 0.9177123308181763, 0.9134856462478638, 0.9182406663894653, 0.9229956269264221, 0.920089840888977, 0.9228635430335999, 0.9255052208900452, 0.9256373047828674, 0.9285431504249573, 0.9269581437110901], "val_loss": [0.9232432842254639, 0.6084785802023751, 0.5643105166299003, 0.5186412164143154, 0.4800642558506557, 0.4551887171609061, 0.4371162823268345, 0.43920113359178814, 0.4033735820225307, 0.3859502247401646, 0.37526895318712505, 0.36952599457332064, 0.35690535817827496, 0.35490481342588154, 0.3400166204997471, 0.34137496777943205, 0.3352817978177752, 0.31714676107679096, 0.3123107041631426, 0.31646225282124113, 0.31121489831379484, 0.3137732318469456, 0.31712532894951956, 0.30133193731307983, 0.2975750480379377, 0.3012074742998396, 0.29329799754279, 0.29117885657719206, 0.2897756780896868, 0.3012135199138096, 0.29281177691050936, 0.29252309458596365, 0.2983271394457136, 0.2882464272635324, 0.2866632512637547, 0.29408284596034456, 0.29053477730069843, 0.2957785981042044, 0.28472916569028583, 0.28784801278795513, 0.28678726298468454, 0.2909943631717137, 0.29096026931490215, 0.3023583037512643, 0.2935042381286621, 0.2999374100140163, 0.2993421639714922], "val_accuracy": [0.6513333320617676, 0.7403333187103271, 0.7363333106040955, 0.7663333415985107, 0.7863333225250244, 0.79666668176651, 0.8033333420753479, 0.8003333210945129, 0.8116666674613953, 0.8289999961853027, 0.8379999995231628, 0.8403333425521851, 0.8450000286102295, 0.8446666598320007, 0.8526666760444641, 0.8493333458900452, 0.8526666760444641, 0.8583333492279053, 0.8656666874885559, 0.862666666507721, 0.859666645526886, 0.8669999837875366, 0.862333357334137, 0.8653333187103271, 0.8700000047683716, 0.8693333268165588, 0.871666669845581, 0.8703333139419556, 0.8709999918937683, 0.8696666955947876, 0.871666669845581, 0.878000020980835, 0.8709999918937683, 0.8793333172798157, 0.8793333172798157, 0.874666690826416, 0.8813333511352539, 0.878000020980835, 0.8776666522026062, 0.8809999823570251, 0.8833333253860474, 0.8836666941642761, 0.8773333430290222, 0.8813333511352539, 0.8796666860580444, 0.8823333382606506, 0.8790000081062317]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 2, 6, 3, 2, 0, 0, 6, 0, 5, 2, 8, 4, 1], [1, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [38, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.6411428451538086, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0238474604476004, 1.1722637054517426, 0.8719309300731406, 0.7731189561274389, 0.6748849874584509, 0.6383189758163607, 0.626099001194555, 0.5652547727061332, 0.5625992225240235, 0.5652713645734272, 0.5291077003361228, 0.515954682194341, 0.4839095074809884, 0.48676812564141053, 0.4828631383293199, 0.47599865817563913, 0.4891034260071374, 0.4617465803289709, 0.47358401542672895, 0.48964880908941627, 0.5039816862635247, 0.5425946428366089], "accuracy": [0.30180954933166504, 0.5995244979858398, 0.678642213344574, 0.7103421092033386, 0.7445515990257263, 0.7568352818489075, 0.7688548564910889, 0.7825914621353149, 0.7903843522071838, 0.7832518815994263, 0.7921014428138733, 0.8030643463134766, 0.819442629814148, 0.8074230551719666, 0.8157442808151245, 0.8228767514228821, 0.8198388814926147, 0.8286884427070618, 0.8244617581367493, 0.8094043135643005, 0.8166688680648804, 0.7984414100646973], "val_loss": [0.9150550365447998, 0.6669895138059344, 0.6011038507734027, 0.5162711994988578, 0.47539712701525005, 0.48117717674800325, 0.44702088832855225, 0.42279973200389315, 0.42553001642227173, 0.4243463022368295, 0.4201521192278181, 0.41073943035943167, 0.39826116391590666, 0.4026716010911124, 0.4000690920012338, 0.41019443954740253, 0.40186906712395803, 0.4311936582837786, 0.4159389053072248, 0.4355122447013855, 0.44344171455928255, 0.4490892376218523], "val_accuracy": [0.6179999709129333, 0.734000027179718, 0.7329999804496765, 0.7559999823570251, 0.784333348274231, 0.7753333449363708, 0.7929999828338623, 0.8056666851043701, 0.8119999766349792, 0.8073333501815796, 0.8296666741371155, 0.8296666741371155, 0.8303333520889282, 0.831333339214325, 0.831333339214325, 0.8370000123977661, 0.8383333086967468, 0.8276666402816772, 0.8263333439826965, 0.8216666579246521, 0.8286666870117188, 0.8176666498184204]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 2, 7, 2, 4, 1, 0, 0, 5, 0, 2, 9, 4, 1], [1, 0, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 75, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1191390555543724.8, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04715361073613167, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 4, 5, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09087307006120682, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 0, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1, 1], [7, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [8, 1, 2, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0], [1, 7, 9, 0, 1, 9], [0, 1, 3, 3, 0], [71, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0, 1], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023401112557087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 4, 4, 4, 1, 1, 7, 1, 8, 7, 6, 1, 5, 7, 1, 4, 8, 8, 2, 2, 2, 0, 9, 4, 5, 6, 2, 6, 0, 8, 9, 3, 0], [2, 2, 0, 0, 0, 2, 2, 1, 0, 2, 2, 0, 2, 2, 3, 0, 2, 1, 2, 0, 2, 2, 0, 0, 0, 2, 1, 2, 3, 3, 2, 2], [35, 82, 99, 57, 60, 59, 23, 22, 72, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [8, 4, 7, 6, 2, 5, 0, 9], [3, 4, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 15, 11, 4, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), tf.math.subtract(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, sigma))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302347797176637, 2.302585623850361, 2.3025856422411217, 2.302585512561065, 2.302585544146567, 2.3025856323529386], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736452102661133, 1.9736452783857072, 1.9736452102661133, 1.9736452102661133, 1.9736452102661133, 1.9736453465053014], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 6, 3, 2, 4, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [3, 1, 3, 3, 0], [37, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [4, 4, 6], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [34, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.303025235683848, 2.8558846504744, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09853387624025345, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9909958158220564, 2.7947776658194408, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 2, 7, 2, 4, 1, 0, 0, 5, 0, 2, 9, 4, 1], [0, 2, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 6, 2, 0, 1, 9], [3, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 6, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1646.935942472106, 28903.741651428973, 128660.88945895522, 359806.078651268, 770677.7907475894, 1417006.3256009775], "accuracy": [0.09602430462837219, 0.10038304328918457, 0.10249637067317963, 0.09866596013307571, 0.10077928751707077, 0.09787346422672272], "val_loss": [5789.605329241072, 44548.2890625, 148650.9017857143, 350460.22321428574, 682340.0, 1176653.9642857143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 9, 1, 3, 1, 9, 5, 0, 2, 2, 1, 0, 3, 0, 5, 8, 2, 5, 7, 2, 3, 8, 0, 1, 3], [0, 2, 0, 1, 0, 1, 2, 1, 2, 1, 3, 1, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 95, 41, 22, 72, 1, 89, 20, 57, 4], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 4, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha))))), tf.math.square(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 2, 7, 2, 8, 5, 0, 9], [4, 4, 0], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 12, 10, 8, 2, 1, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 1, 2, 3, 4, 0, 0, 0, 0, 5, 2, 8, 1, 1, 6, 6, 2, 7, 9, 5, 6, 0, 6, 5, 9, 8, 2, 3, 7, 1, 9, 3, 3, 8], [0, 1, 2, 2, 2, 2, 0, 1, 2, 1, 3, 0, 2, 1, 3, 2, 2, 1, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 91, 59, 41, 22, 72, 1, 89, 20, 57, 4], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 1, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), grad)), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [71, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [5.876286481344069e+17, 1.7263502555177285e+21, 2.2588579930277404e+29, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.09509972482919693, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.304606610393849e+17, 1.7575073137877643e+23, 1.8013924894324325e+31, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 1, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [71, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 3, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023401112557087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [7, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 5, 4, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302351176604902, 2.302663708879428, 2.302849254588, 2.3034399497967195, 2.303541738091679, 2.3053480028838464], "accuracy": [0.10077928751707077, 0.09866596013307571, 0.10130762308835983, 0.09853387624025345, 0.10196803510189056, 0.09906221181154251], "val_loss": [1.9737163271222795, 1.9738383974347795, 1.9739115578787667, 1.974447590964181, 1.975186552320208, 1.97725248336792], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [71, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [8.70493257585817, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20116232335567474, 0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [85.20440673828125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03099999949336052, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [4, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3020782610523294, 2.3027531722785146, 2.301145511579835, 2.3027512687717873, 2.3019736517280274, 2.3024392491082284], "accuracy": [0.09179764986038208, 0.09272222965955734, 0.09655263274908066, 0.09166556596755981, 0.09074098616838455, 0.09140139818191528], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [2, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3020782610523294, 2.3027531722785146, 2.301145511579835, 2.3027512687717873, 2.3019736517280274, 2.3024392491082284], "accuracy": [0.09179764986038208, 0.09272222965955734, 0.09655263274908066, 0.09166556596755981, 0.09074098616838455, 0.09140139818191528], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]