[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8471428751945496, "mapping_values": [1, 13, 13, 10, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0238069384530424, 1.1144896051776942, 0.7865646420815019, 0.7019170049222201, 0.6377521579323223, 0.5903343770482269, 0.5441097719180287, 0.5047913603440346, 0.48735066988149794, 0.46642433290137686, 0.4522895152424588, 0.4239996582990026, 0.4226176115610281, 0.41089486580609236, 0.39210146963163345, 0.3747001845547552, 0.36094046595971724, 0.35874250054894785, 0.341644187629215, 0.34211180142329084, 0.3306527544423621, 0.3090584959730008, 0.3061442125026245, 0.3039138109267364, 0.2949005341320431, 0.292508116834089, 0.28588086763440407, 0.2742347661427944, 0.2647715662574692, 0.2639752251971053, 0.25374654180275186, 0.24099771386171612, 0.24372607352254633, 0.246076367219772, 0.2356935649925235, 0.2271060662467356], "accuracy": [0.3144895136356354, 0.6168273687362671, 0.7071720957756042, 0.7362303733825684, 0.763967752456665, 0.7761194109916687, 0.7992339134216309, 0.8142913579940796, 0.8187822103500366, 0.8277638554573059, 0.8330471515655518, 0.8470479249954224, 0.8418967127799988, 0.8504821062088013, 0.859199583530426, 0.8615770936012268, 0.8677849769592285, 0.863558292388916, 0.8697662353515625, 0.8762382864952087, 0.8774270415306091, 0.8848236799240112, 0.8854840993881226, 0.8838990926742554, 0.8861445188522339, 0.8885219693183899, 0.8902390599250793, 0.8951261639595032, 0.9015982151031494, 0.9034473896026611, 0.9013340473175049, 0.9074098467826843, 0.9109761118888855, 0.9068815112113953, 0.9142781496047974, 0.9134856462478638], "val_loss": [0.9076967920575824, 0.6207355771745954, 0.567977888243539, 0.5104031222207206, 0.47768308435167584, 0.44645687511989046, 0.43118911130087717, 0.40425184794834684, 0.3923451474734715, 0.3775961995124817, 0.3646655934197562, 0.3534599798066275, 0.3555492418152945, 0.33664240155901226, 0.3339506047112601, 0.32346220527376446, 0.3280266523361206, 0.3154732074056353, 0.32689263990947176, 0.30721947976521086, 0.30754763739449636, 0.29774755239486694, 0.3003519262586321, 0.29478699820382254, 0.3052797998700823, 0.29938829796654837, 0.2952368940625872, 0.2886273946080889, 0.2956624712262835, 0.28772458008357454, 0.2921461803572519, 0.2898701173918588, 0.2938424604279654, 0.294628415788923, 0.29918746437345234, 0.3009736793381827], "val_accuracy": [0.6343333125114441, 0.7229999899864197, 0.7480000257492065, 0.768666684627533, 0.7836666703224182, 0.793666660785675, 0.8076666593551636, 0.8220000267028809, 0.8226666450500488, 0.8330000042915344, 0.8426666855812073, 0.8483333587646484, 0.8489999771118164, 0.8486666679382324, 0.8516666889190674, 0.8573333621025085, 0.8500000238418579, 0.8616666793823242, 0.8539999723434448, 0.8629999756813049, 0.8613333106040955, 0.8690000176429749, 0.8686666488647461, 0.8713333606719971, 0.8686666488647461, 0.8683333396911621, 0.8726666569709778, 0.8690000176429749, 0.8740000128746033, 0.878333330154419, 0.8809999823570251, 0.8759999871253967, 0.874666690826416, 0.8796666860580444, 0.8726666569709778, 0.8756666779518127]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 83, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 10, 10, 7, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0228176477988002, 1.1308729624578178, 0.7975639499976823, 0.7079932455688404, 0.6374544401556793, 0.5936812434639236, 0.5463824924964789, 0.5110200691681339, 0.4854634356945891, 0.4642957923844065, 0.4523311515195164, 0.4295287379349668, 0.42613955771272777, 0.4147976691838442, 0.3951941829402575, 0.3821072532807548, 0.35998966253476133, 0.3565045217945906, 0.3448271487784534, 0.34597029503011245, 0.33944736381941276, 0.3160702744573886, 0.32048367894226454, 0.31779242026382326, 0.3027659158200604, 0.2988847286481395, 0.29052410013073265, 0.2761817373056863, 0.27470294947574453, 0.2615920772559261, 0.25215640198033423, 0.2442624300753735, 0.24034258477825765, 0.2435394619882949, 0.2287777146237669, 0.22369073607099368, 0.22202307044507144, 0.2175028012897423, 0.20274981547930868, 0.20301752081951524, 0.193959535494803, 0.19980255030700794, 0.19579691153987525, 0.19298893584472596], "accuracy": [0.3140932619571686, 0.620261549949646, 0.7065116763114929, 0.7411174178123474, 0.7625148296356201, 0.7769119143486023, 0.7969884872436523, 0.8125742673873901, 0.8202351331710815, 0.8261788487434387, 0.8327829837799072, 0.8448025584220886, 0.8385946154594421, 0.8459912538528442, 0.8580108284950256, 0.8607845902442932, 0.8709549307823181, 0.8652753829956055, 0.8706908226013184, 0.8730682730674744, 0.874389111995697, 0.8795403242111206, 0.8821820020675659, 0.8815215826034546, 0.8864086866378784, 0.8887861371040344, 0.8905032277107239, 0.8945978283882141, 0.8953903317451477, 0.9026548862457275, 0.9101836085319519, 0.9076740145683289, 0.9111081957817078, 0.9072777628898621, 0.9159952402114868, 0.9171839952468872, 0.9161273241043091, 0.9187690019607544, 0.9231277108192444, 0.9228635430335999, 0.9257693886756897, 0.9249768853187561, 0.9235239624977112, 0.925901472568512], "val_loss": [0.902010338647025, 0.6237792287554059, 0.567317008972168, 0.5142649923052106, 0.4802589586802891, 0.4451399530683245, 0.42936969654900686, 0.40847364493778776, 0.39483615330287386, 0.37954711062567575, 0.3671515073095049, 0.35265052318573, 0.3654118946620396, 0.34261021443775724, 0.33932672228131977, 0.32441915784563335, 0.3223204186984471, 0.31639704533985685, 0.3200275642531259, 0.3120461957795279, 0.30910734619413105, 0.3018469980784825, 0.3104713899748666, 0.3073175208909171, 0.3095539467675345, 0.30254232031958445, 0.29475440297807964, 0.29207509756088257, 0.29806383166994366, 0.29227882623672485, 0.2887513978140695, 0.29920447724206106, 0.2935916611126491, 0.2902975082397461, 0.30460009404591154, 0.3012571249689375, 0.292791553906032, 0.28947378056389944, 0.29420994009290424, 0.2967882922717503, 0.3006083795002529, 0.2969498804637364, 0.29897820949554443, 0.3047781416348049], "val_accuracy": [0.6353333592414856, 0.7286666631698608, 0.753333330154419, 0.765999972820282, 0.7820000052452087, 0.79666668176651, 0.812666654586792, 0.8216666579246521, 0.8243333101272583, 0.8323333263397217, 0.8443333506584167, 0.846666693687439, 0.8426666855812073, 0.8460000157356262, 0.8500000238418579, 0.8553333282470703, 0.8546666502952576, 0.8610000014305115, 0.8616666793823242, 0.8603333234786987, 0.8656666874885559, 0.8673333525657654, 0.8669999837875366, 0.8629999756813049, 0.8673333525657654, 0.8683333396911621, 0.874666690826416, 0.8713333606719971, 0.8730000257492065, 0.8756666779518127, 0.8776666522026062, 0.874666690826416, 0.8766666650772095, 0.8803333044052124, 0.8809999823570251, 0.878000020980835, 0.8776666522026062, 0.8806666731834412, 0.8863333463668823, 0.8799999952316284, 0.8813333511352539, 0.8830000162124634, 0.8833333253860474, 0.8809999823570251]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8462857007980347, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.02380695415132, 1.1145111673527925, 0.7864737330867377, 0.7033096271073892, 0.6378092165195458, 0.5890779600498022, 0.5428352653625981, 0.5062959138208046, 0.48908440576426626, 0.46628871627408813, 0.4489602002414494, 0.42353820283147464, 0.42377284391208836, 0.40998598402596076, 0.39637769205443313, 0.3778201813640186, 0.36121279072878054, 0.3523757856606398, 0.3391531629372487, 0.33872843429538724, 0.3314198888075618, 0.311228067041026, 0.3116083970206556, 0.30609360612410247, 0.30129633679948603, 0.2962009062730499, 0.2820517230917198, 0.2733718778801758, 0.2698454151001148, 0.26079740307673077, 0.2459612262877239, 0.23895235184303065, 0.24306530784803249, 0.248247599223066, 0.23191412180374799, 0.22680347744562937, 0.22253299575078095, 0.21174171955286944, 0.2029691994241389, 0.20407494807940874, 0.19565015078858455, 0.1992295468743955, 0.19204146659936353], "accuracy": [0.3144895136356354, 0.6164311170578003, 0.7087571024894714, 0.735569953918457, 0.7618544697761536, 0.7814027070999146, 0.8024039268493652, 0.8113855719566345, 0.8186501264572144, 0.8257825970649719, 0.8362171649932861, 0.8492933511734009, 0.8396512866020203, 0.8470479249954224, 0.8568220734596252, 0.8605204224586487, 0.8677849769592285, 0.8669924736022949, 0.8728041052818298, 0.8762382864952087, 0.8775591254234314, 0.8850878477096558, 0.8869370222091675, 0.8845595121383667, 0.8878615498542786, 0.8894465565681458, 0.8924844861030579, 0.8975036144256592, 0.8965790271759033, 0.9056927561759949, 0.9088627696037292, 0.9085986018180847, 0.9097873568534851, 0.9063531756401062, 0.9146744012832642, 0.9133535623550415, 0.9171839952468872, 0.920089840888977, 0.9225993752479553, 0.919561505317688, 0.9261656403541565, 0.9223352074623108, 0.925901472568512], "val_loss": [0.9076987675258091, 0.6207364627293178, 0.5688594579696655, 0.5114379610334124, 0.47877962248665945, 0.4444338253566197, 0.43132370710372925, 0.4070924605642046, 0.39055932419640677, 0.3727496862411499, 0.3639525941440037, 0.35387476852961947, 0.3605705499649048, 0.3379767281668527, 0.3406023383140564, 0.3229491710662842, 0.3194074715886797, 0.31196435008730206, 0.31452410561697824, 0.30764007568359375, 0.30949680294309345, 0.29787731170654297, 0.3065835067204067, 0.3050109829221453, 0.30947443417140413, 0.30097668511526926, 0.29592813764299664, 0.29261394909449984, 0.30077236890792847, 0.2868261592728751, 0.2923366938318525, 0.29289220912115915, 0.2938658765384129, 0.2897287607192993, 0.29245060682296753, 0.29465408836092266, 0.28712384189878193, 0.2922725932938712, 0.2878774234226772, 0.2962327684674944, 0.2939612354551043, 0.28984871932438444, 0.29139991317476543], "val_accuracy": [0.6343333125114441, 0.7239999771118164, 0.7473333477973938, 0.7663333415985107, 0.781333327293396, 0.7956666946411133, 0.8046666383743286, 0.8220000267028809, 0.824999988079071, 0.8376666903495789, 0.8453333377838135, 0.8510000109672546, 0.8446666598320007, 0.8506666421890259, 0.8453333377838135, 0.8566666841506958, 0.8569999933242798, 0.8643333315849304, 0.8646666407585144, 0.8606666922569275, 0.8629999756813049, 0.8673333525657654, 0.8693333268165588, 0.8640000224113464, 0.8669999837875366, 0.871666669845581, 0.875333309173584, 0.8709999918937683, 0.8733333349227905, 0.8773333430290222, 0.8786666393280029, 0.8763333559036255, 0.8796666860580444, 0.8769999742507935, 0.8820000290870667, 0.8773333430290222, 0.8743333220481873, 0.8840000033378601, 0.8836666941642761, 0.8793333172798157, 0.8820000290870667, 0.8840000033378601, 0.8840000033378601]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 5, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7979999780654907, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.215567829901469, 1.6935106674126819, 1.2506091941254818, 1.0820655574998237, 0.9437423150663158, 0.8827578897851569, 0.8378091741074283, 0.7882573093641798, 0.7673763748582612, 0.7655628993290448, 0.7172725149165244, 0.7001510953323763, 0.6888574983591511, 0.6746622209205068, 0.6824759895366024, 0.6566571806321417, 0.6550151520023539, 0.6473641696465627, 0.6364566310994173, 0.6200580914510854, 0.6121485801483773, 0.604283319661457, 0.6139618605749246, 0.6057902206409058, 0.5989604254109654], "accuracy": [0.25676923990249634, 0.48091402649879456, 0.5548804402351379, 0.6079778075218201, 0.6642451286315918, 0.68101966381073, 0.693831741809845, 0.7128516435623169, 0.7132478952407837, 0.718399167060852, 0.7334566116333008, 0.7401928305625916, 0.7420420050621033, 0.7477215528488159, 0.7445515990257263, 0.7520803213119507, 0.7540615797042847, 0.7580240368843079, 0.7640998363494873, 0.7709681391716003, 0.772288978099823, 0.7714964747428894, 0.7671377658843994, 0.7754589915275574, 0.7703077793121338], "val_loss": [1.6879469326564245, 1.0520457199641637, 0.8847480501447406, 0.7236869164875576, 0.6717335326331002, 0.6344303573880877, 0.6009766033717564, 0.5782859666006905, 0.5948617628642491, 0.5490466185978481, 0.538786802973066, 0.5318513768059867, 0.52086227280753, 0.5206348044531686, 0.49463607583727154, 0.5108549424580165, 0.49707434858594624, 0.4917141539709909, 0.4660119499479021, 0.4697052070072719, 0.4769014630998884, 0.4707882744925363, 0.47577483313424246, 0.47177389689854216, 0.4565000193459647], "val_accuracy": [0.5339999794960022, 0.5669999718666077, 0.6110000014305115, 0.6700000166893005, 0.7080000042915344, 0.7096666693687439, 0.7303333282470703, 0.7379999756813049, 0.7356666922569275, 0.7649999856948853, 0.7523333430290222, 0.7593333125114441, 0.7829999923706055, 0.7666666507720947, 0.7866666913032532, 0.7693333625793457, 0.7839999794960022, 0.7863333225250244, 0.7943333387374878, 0.7976666688919067, 0.7763333320617676, 0.7870000004768372, 0.7696666717529297, 0.7853333353996277, 0.7956666946411133]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [9, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 1, 0, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.214780946118626, 1.6553518296453253, 1.1982305161374482, 1.0623442374515244, 0.9107396683956197, 0.8708176573490218, 0.8235911372913708, 0.7877555764456782, 0.7559459459323452, 0.7437426427241723, 0.7058980750637661, 0.7065280916558249, 0.707188238565082, 0.6698766258871078, 0.656208400232854, 0.6522098086639528, 0.6633880333405413, 0.6436352711768749, 0.637247974019812, 0.6123176724084727, 0.609463376919229, 0.6090747575718319, 0.6049728682878515, 0.6064978364341845, 0.5931551498334484, 0.6074020399582495, 0.5805565451098754], "accuracy": [0.25280675292015076, 0.4768194556236267, 0.577070415019989, 0.620261549949646, 0.6748117804527283, 0.6863030195236206, 0.7017567157745361, 0.7127195596694946, 0.7223616242408752, 0.7244749665260315, 0.7347774505615234, 0.7349095344543457, 0.7346453666687012, 0.7515519857406616, 0.7578919529914856, 0.7556465268135071, 0.752212405204773, 0.7572315335273743, 0.7638356685638428, 0.7692511081695557, 0.7744023203849792, 0.7734777331352234, 0.7769119143486023, 0.7701756954193115, 0.7779685854911804, 0.7700436115264893, 0.7812706232070923], "val_loss": [1.6705867903573173, 0.9634326526096889, 0.8227418320519584, 0.6714352199009487, 0.6358433621270316, 0.6104971170425415, 0.5931390694209507, 0.5854383196149554, 0.5533088615962437, 0.5370183331625802, 0.5225086041859218, 0.5492562225886753, 0.5099883420126778, 0.4890314681189401, 0.4949805055345808, 0.528366105897086, 0.48699474334716797, 0.4898080655506679, 0.4707643134253366, 0.4731999805995396, 0.48470193999154226, 0.45913522584097727, 0.45651289394923616, 0.4496992656162807, 0.4941830464771816, 0.45410498550959993, 0.48580912181309294], "val_accuracy": [0.4729999899864197, 0.6330000162124634, 0.6610000133514404, 0.7223333120346069, 0.7276666760444641, 0.731333315372467, 0.7419999837875366, 0.7386666536331177, 0.7406666874885559, 0.753333330154419, 0.7756666541099548, 0.7543333172798157, 0.7699999809265137, 0.7850000262260437, 0.7773333191871643, 0.7689999938011169, 0.7856666445732117, 0.778333306312561, 0.7900000214576721, 0.7839999794960022, 0.781000018119812, 0.8023333549499512, 0.7983333468437195, 0.8013333082199097, 0.7760000228881836, 0.7866666913032532, 0.7689999938011169]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [54, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7528571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 9, 7, 4, 3, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2523257882603565, 2.332856393304436, 2.1187665408959147, 2.268803672830836, 2.0742823938100945, 1.7398352553548122, 1.6926512996266467, 1.7507240523468186, 1.5947933960993843, 1.4000487013925036, 1.4640068698001811, 1.183460636602464, 1.14296812300102, 1.0229757504692452, 1.0127969611007555, 1.006301474191761, 0.8545580673305948, 0.8338165374290926, 0.8517597384928964, 0.8428769530700166, 0.7367682600018213, 0.7666887609540762, 0.8327372230401427, 0.7702850305393246, 0.6972420803229287, 0.668836060776104, 0.6487040161425175, 0.6411727376743755], "accuracy": [0.22163519263267517, 0.21172896027565002, 0.24699510633945465, 0.22123894095420837, 0.26482629776000977, 0.37881389260292053, 0.42609959840774536, 0.4161933660507202, 0.4348170757293701, 0.46810197830200195, 0.5218597054481506, 0.5803724527359009, 0.5736362338066101, 0.6172236204147339, 0.6585655808448792, 0.6379606127738953, 0.6716417670249939, 0.6723021864891052, 0.6754721999168396, 0.6812838315963745, 0.7098137736320496, 0.7078325152397156, 0.71100252866745, 0.7275128960609436, 0.7378153204917908, 0.7408532500267029, 0.7450799345970154, 0.7397965788841248], "val_loss": [2.2062320709228516, 1.737217630658831, 1.826507636478969, 1.8796063831874303, 1.3649627140590124, 0.9431492941720145, 1.5243025847843714, 0.8245759350912911, 0.8744380474090576, 1.0931895119803292, 0.9061812332698277, 0.8366192408970424, 0.7923799412591117, 0.7565287181309291, 0.7233085462025234, 0.6583127975463867, 0.5937209980828422, 0.6260488033294678, 0.7909137862069267, 0.563198447227478, 0.6509471109935215, 0.6218569619315011, 0.5343894788197109, 0.5709444965635028, 0.5828578472137451, 0.5124559572764805, 0.5166163614818028, 0.5513663121632167], "val_accuracy": [0.3186666667461395, 0.36000001430511475, 0.3636666536331177, 0.22466666996479034, 0.4309999942779541, 0.5899999737739563, 0.41466665267944336, 0.6393333077430725, 0.6140000224113464, 0.5366666913032532, 0.653333306312561, 0.6393333077430725, 0.6449999809265137, 0.6943333148956299, 0.7046666741371155, 0.7246666550636292, 0.7283333539962769, 0.7126666903495789, 0.6456666588783264, 0.75, 0.7256666421890259, 0.7283333539962769, 0.7666666507720947, 0.7563333511352539, 0.753000020980835, 0.762666642665863, 0.7296666502952576, 0.7200000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 3, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.6854285597801208, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.032585584429261, 1.1567201001249552, 0.8636457297496823, 0.7802213386947043, 0.6826281781918369, 0.6377370790200163, 0.6068109251079526, 0.5864464628178414, 0.5656502739770017, 0.554921607500558, 0.534711268339899, 0.5284471688426764, 0.5373890341831913, 0.5137130583573357, 0.5555700037725345, 0.5210502489745861, 0.5332367382249843, 0.5177024172840653, 0.557410129600465, 0.5665501899896218, 0.6052399740998834], "accuracy": [0.3148857355117798, 0.5923920273780823, 0.6775855422019958, 0.7074362635612488, 0.7425703406333923, 0.7588165402412415, 0.7729493975639343, 0.7725531458854675, 0.7815347909927368, 0.7891955971717834, 0.7930260300636292, 0.7997622489929199, 0.7959318161010742, 0.8061022162437439, 0.7992339134216309, 0.7979130744934082, 0.7998943328857422, 0.8079513907432556, 0.7976489067077637, 0.7878747582435608, 0.7778365015983582], "val_loss": [0.8998152528490339, 0.6443546158926827, 0.6024806669780186, 0.5141536167689732, 0.48879352637699675, 0.4902705465044294, 0.44186042036329, 0.43496224709919523, 0.43441284554345266, 0.4275674649647304, 0.4295536194528852, 0.4182827046939305, 0.4080130968775068, 0.4263726472854614, 0.41360959836414884, 0.42502589736665997, 0.45642828941345215, 0.44457259348460604, 0.4528322560446603, 0.4900796924318586, 0.4709815979003906], "val_accuracy": [0.6296666860580444, 0.7256666421890259, 0.7326666712760925, 0.7706666588783264, 0.778333306312561, 0.7793333530426025, 0.8009999990463257, 0.8013333082199097, 0.8083333373069763, 0.8183333277702332, 0.8166666626930237, 0.8246666789054871, 0.8259999752044678, 0.8236666917800903, 0.8226666450500488, 0.8339999914169312, 0.8163333535194397, 0.828000009059906, 0.8046666383743286, 0.8076666593551636, 0.8149999976158142]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1, 0, 0, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3024691403297903, 2.3025372657856495, 2.302514279098118, 2.3025498043796437, 2.302565060460478, 2.302694234141364], "accuracy": [0.10698718577623367, 0.10711926966905594, 0.10421344637870789, 0.09998679161071777, 0.1002509593963623, 0.09998679161071777], "val_loss": [1.9736358097621374, 1.9736436435154505, 1.973665373665946, 1.9736926896231515, 1.9737871715000697, 1.9739789962768555], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [8, 23, 6], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3025386936833687, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [8, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 1, 1], [0, 7, 1, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.897074617714127, 8.688667064581596, 22.1135501216636, 44.07734591396273, 77.64711435378707, 122.74747121697797], "accuracy": [0.09826971590518951, 0.10408136248588562, 0.10157178342342377, 0.10777968913316727, 0.09681680053472519, 0.09906221181154251], "val_loss": [3.4182221548897878, 9.633332116263253, 20.92405809674944, 38.21571568080357, 62.59836033412388, 95.34442356654576], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [6, 26, 6], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1], [7, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.4831301116389115, 58.91487074622609, 594.2657881849997, 3612.415563524675, 15538.79124341649, 49756.59694166061], "accuracy": [0.09628847241401672, 0.10342095047235489, 0.10170386731624603, 0.1080438494682312, 0.09721305221319199, 0.09932637959718704], "val_loss": [8.019631249564034, 128.7595476422991, 1017.5706612723214, 5117.728794642857, 18601.012834821428, 54063.75892857143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5628826935808.139, 195845.8242471272, 333313.09455488046, 471224.91303576145, 610973.0436699247, 749544.9072530048], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [118108.70982142857, 236217.41964285713, 354326.1785714286, 472434.96428571426, 590543.7678571428, 708652.5892857143], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [53, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [8, 2, 7, 1, 8, 2, 2, 1], [4, 3, 0, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [37540036.60907873, 5520444549.224145, 92675102295.57628, 650770385254.4203, 2935781379235.2505, 9594742304025.191], "accuracy": [0.09906221181154251, 0.10342095047235489, 0.1018359512090683, 0.10777968913316727, 0.09694888442754745, 0.09932637959718704], "val_loss": [301306459.4285714, 16235740598.857143, 174265832009.14285, 950074755364.5714, 3558809497014.857, 10497717061924.572], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [4, 43, 6], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [301.37117056568866, 1.4076554207646416e+16, 3.890234841111314, 3.9106731310874525, 4.555317521740842, 4.463062407995307, 4.6092699021553685, 4.311747935438326, 3.5316763076610918, 4.066595648069108], "accuracy": [0.09074098616838455, 0.09879804402589798, 0.10051512718200684, 0.09879804402589798, 0.10289261490106583, 0.1014397069811821, 0.1018359512090683, 0.10038304328918457, 0.09681680053472519, 0.09959053993225098], "val_loss": [7.560050765186429e+16, 3.7594169889177596, 3.8159920828683034, 3.3713243348257884, 3.97559997013637, 4.329525675092425, 4.276086534772601, 3.227060181753976, 3.0628730228969028, 4.384696006774902], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.09833333641290665, 0.10133333504199982, 0.10066666454076767, 0.09833333641290665, 0.10133333504199982, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [5, 3, 3, 3, 0], [8, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 0, 1, 1, 0], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 2, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1282434123.008088, 23849194658.97979, 109419684308.51617, 301829566891.9403, 661812878863.3512, 1209078322379.5557], "accuracy": [0.09906221181154251, 0.10342095047235489, 0.1018359512090683, 0.107647605240345, 0.09708096832036972, 0.09932637959718704], "val_loss": [4657898057.142858, 37252031634.28571, 125713228946.28572, 297971510710.8571, 581956983661.7142, 1005595394048.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [29, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [5, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [5, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 43, 6], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3021557934453316, 2.3022967901180733, 2.302409431481201, 2.3029854204109586, 2.3058325172714538, 2.3192613904565285], "accuracy": [0.10738343745470047, 0.10276053100824356, 0.10421344637870789, 0.10302469879388809, 0.09998679161071777, 0.10130762308835983], "val_loss": [1.9736467088971819, 1.9736944607325964, 1.9739693914140974, 1.9751436369759696, 1.9805198396955217, 2.006479127066476], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 3, 0, 8, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 4, 3, 3, 0], [38, 43, 6], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09914285689592361, "mapping_values": [1, 9, 9, 6, 3, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.371455846004766, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1446920803615024, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [10, 43, 6], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.36921786836834, 3.035019256057457, 4.888208363333619, 7.947946583353974, 12.473648557762475, 18.860003166919245], "accuracy": [0.09285431355237961, 0.10421344637870789, 0.10157178342342377, 0.109232597053051, 0.09721305221319199, 0.09945846349000931], "val_loss": [2.0900934764317105, 2.7702150344848633, 4.282817023141043, 6.5981757300240655, 9.797979354858398, 15.236742837088448], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 4, 3, 3, 0], [57, 26, 6], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301730055236514, 2.3011831275507633, 2.302236606479242, 2.3018763627453, 2.3030839599024397, 2.3014229530230677], "accuracy": [0.09060890227556229, 0.09377889335155487, 0.08572183549404144, 0.0952318087220192, 0.08928807079792023, 0.09100515395402908], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]