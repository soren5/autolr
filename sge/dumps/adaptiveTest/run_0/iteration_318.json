[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8468571305274963, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0590164261156496, 1.5030917714001433, 0.8809851378088284, 0.7369372160553445, 0.658220532618777, 0.598411580771818, 0.5739512513688747, 0.5424070108552509, 0.5346869800336734, 0.4907913091805916, 0.4795292986421821, 0.45791449165457604, 0.4563521736286351, 0.4350585134124491, 0.41751064941741695, 0.4159883280487549, 0.39869720268054265, 0.3907881471160034, 0.37258022508727023, 0.3775807930226213, 0.36280973508940273, 0.3462334209429416, 0.3518077939406299, 0.3291589116706919, 0.33768390025193146, 0.3252115490815706, 0.3277006782537218, 0.30969144685582367, 0.29890697487136547, 0.2868218165599061, 0.28807338364072965, 0.29663900223075595, 0.28693578182556656, 0.2605117474879571, 0.25562122766690687, 0.2667918713211525, 0.2672510272468385, 0.25049131589480017, 0.24509346285169906, 0.24458592510919341, 0.23325343375523422, 0.23548033759893444, 0.23034675928697987, 0.22276528556160152, 0.22919671928106344, 0.2056684921056587, 0.20754260835418015, 0.20588863913519445, 0.2042941347467208, 0.1992675120217878, 0.18997151549969996], "accuracy": [0.3399814963340759, 0.50350022315979, 0.6824725866317749, 0.7276449799537659, 0.7530049085617065, 0.7753269076347351, 0.7847048044204712, 0.8034605979919434, 0.8072909712791443, 0.8182538747787476, 0.8226125836372375, 0.8301413059234619, 0.8364813327789307, 0.8437458872795105, 0.8514066934585571, 0.8475762605667114, 0.8574824929237366, 0.8578787446022034, 0.8656716346740723, 0.8627657890319824, 0.8673887252807617, 0.8735966086387634, 0.8721436858177185, 0.8774270415306091, 0.8701624870300293, 0.8813894987106323, 0.8758420348167419, 0.889578640460968, 0.8877294659614563, 0.8924844861030579, 0.8926165699958801, 0.8903711438179016, 0.8918240666389465, 0.9045040011405945, 0.9026548862457275, 0.8996169567108154, 0.8976356983184814, 0.9095231890678406, 0.9043719172477722, 0.9075419306755066, 0.9108440279960632, 0.9121648669242859, 0.9121648669242859, 0.9145423173904419, 0.9125610589981079, 0.9225993752479553, 0.921938955783844, 0.9232597947120667, 0.9204860925674438, 0.921938955783844, 0.9277506470680237], "val_loss": [1.7959801810128349, 0.7591977800641742, 0.6093708617346627, 0.5254276650292533, 0.47299502577100483, 0.4563701663698469, 0.4253357308251517, 0.44287736075265066, 0.4164695569447109, 0.39096438033240183, 0.3691834126199995, 0.36393554721559795, 0.36999657324382235, 0.34344325746808735, 0.34736583062580656, 0.3393228990691049, 0.3411898357527597, 0.3258782369749887, 0.3400144747325352, 0.323378895010267, 0.3160296763692583, 0.3257299321038382, 0.30967317308698383, 0.3047700524330139, 0.3156764677592686, 0.3214509742600577, 0.306006840297154, 0.29916542768478394, 0.3100341813904898, 0.3162469608443124, 0.30131983757019043, 0.31079048769814627, 0.30164101294108797, 0.30309079374585834, 0.2928729312760489, 0.31066931997026714, 0.2933984569140843, 0.29687786953789846, 0.3098054528236389, 0.29774315868105206, 0.3011045455932617, 0.3017392839704241, 0.30892964771815706, 0.3148018036569868, 0.29979091031210764, 0.29398059844970703, 0.29357971463884625, 0.29897506747926983, 0.29619201592036654, 0.30609175988606047, 0.30607491731643677], "val_accuracy": [0.4359999895095825, 0.6776666641235352, 0.7020000219345093, 0.7513333559036255, 0.778333306312561, 0.7856666445732117, 0.8143333196640015, 0.8056666851043701, 0.8136666417121887, 0.8186666369438171, 0.8416666388511658, 0.8456666469573975, 0.8383333086967468, 0.8526666760444641, 0.8550000190734863, 0.8450000286102295, 0.8510000109672546, 0.8583333492279053, 0.8403333425521851, 0.8486666679382324, 0.8583333492279053, 0.8533333539962769, 0.8616666793823242, 0.8646666407585144, 0.8656666874885559, 0.8579999804496765, 0.8633333444595337, 0.8669999837875366, 0.8706666827201843, 0.8643333315849304, 0.8693333268165588, 0.8613333106040955, 0.8709999918937683, 0.8653333187103271, 0.875333309173584, 0.8636666536331177, 0.8769999742507935, 0.8773333430290222, 0.8706666827201843, 0.8823333382606506, 0.878333330154419, 0.8796666860580444, 0.8769999742507935, 0.875, 0.8826666474342346, 0.8859999775886536, 0.878000020980835, 0.8790000081062317, 0.8826666474342346, 0.8840000033378601, 0.8820000290870667]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [14, 84, 6], [1, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.7094285488128662, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(grad, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3038932817676017, 2.289416150331277, 2.2651669180482967, 2.2325693587931847, 2.184718906005549, 2.1148824612100157, 2.005085155145446, 1.851188622051935, 1.6586445987878018, 1.5177808899558878, 1.4172939388523045, 1.3655776070282521, 1.3259901138202876, 1.300131243139037, 1.2318377775239624, 1.0947243591671874, 1.0058792856595835, 0.9359559395278307, 0.9158001666874571, 0.9281589072362512, 0.922453049143717, 0.8752444727293898, 0.8426009055929192, 0.8318587448760393, 0.8212790736165171, 0.8083448944043301, 0.7916195562896381, 0.7830638312676232, 0.7704775180358141, 0.7729512885844687, 0.742938184089444, 0.7309672000496032, 0.7117516308995349, 0.7155027625551628, 0.7038148914928434, 0.6940113658193962, 0.687472601458696, 0.6884903332041145], "accuracy": [0.0874389111995697, 0.13578127324581146, 0.18914277851581573, 0.2690529525279999, 0.3353586196899414, 0.37088891863822937, 0.4073438048362732, 0.42808082699775696, 0.45106327533721924, 0.4710077941417694, 0.5155197381973267, 0.5371813774108887, 0.5576542019844055, 0.5694096088409424, 0.5840708017349243, 0.6230352520942688, 0.6456214785575867, 0.669792652130127, 0.6676793098449707, 0.6643772125244141, 0.6664905548095703, 0.6824725866317749, 0.6985867023468018, 0.6973979473114014, 0.6984546184539795, 0.7124554514884949, 0.7150970697402954, 0.707568347454071, 0.705058753490448, 0.698718786239624, 0.717870831489563, 0.724210798740387, 0.7320036888122559, 0.7313432693481445, 0.7362303733825684, 0.7360982894897461, 0.7382115721702576, 0.7386078238487244], "val_loss": [1.9642276763916016, 1.946261269705636, 1.919060230255127, 1.8826048714773995, 1.8294527871268136, 1.746143204825265, 1.6165680885314941, 1.4338105406079973, 1.235421589442662, 1.077526228768485, 0.953988858631679, 0.8598851816994804, 0.7996343885149274, 0.7580053295407977, 0.7065444162913731, 0.7148742846080235, 0.6902001585279193, 0.6824602740151542, 0.7075034720557076, 0.7138746636254447, 0.6891635656356812, 0.6492210456303188, 0.6150271381650653, 0.5983427252088275, 0.5935580730438232, 0.5855704716273716, 0.5720207691192627, 0.5661763634000506, 0.5698413678577968, 0.5621245077678135, 0.5468418257577079, 0.5368272066116333, 0.5348414182662964, 0.5329986980983189, 0.5281224591391427, 0.5232608318328857, 0.5219535827636719, 0.5224789381027222], "val_accuracy": [0.07999999821186066, 0.25833332538604736, 0.36266666650772095, 0.398333340883255, 0.4286666810512543, 0.4676666557788849, 0.49166667461395264, 0.5213333368301392, 0.5506666898727417, 0.5996666550636292, 0.656333327293396, 0.6729999780654907, 0.6779999732971191, 0.6940000057220459, 0.7143333554267883, 0.7110000252723694, 0.7133333086967468, 0.7210000157356262, 0.7179999947547913, 0.7149999737739563, 0.737666666507721, 0.7350000143051147, 0.7350000143051147, 0.7386666536331177, 0.7440000176429749, 0.7433333396911621, 0.746999979019165, 0.7480000257492065, 0.7409999966621399, 0.7409999966621399, 0.7526666522026062, 0.7646666765213013, 0.765333354473114, 0.7649999856948853, 0.762333333492279, 0.7616666555404663, 0.7556666731834412, 0.7523333430290222]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1], [6, 3, 6, 0, 1, 9], [3, 3, 1, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.2525714337825775, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.596807226670527, 2.390460549155404, 477.4119283071268, 32.58100991068956, 3.083732201013551, 2.6850567905421996], "accuracy": [0.20723815262317657, 0.15242372453212738, 0.16457535326480865, 0.09932637959718704, 0.09972262382507324, 0.09668471664190292], "val_loss": [2.371129717145647, 1.9050718716212682, 36.87343270438058, 2.5741495404924666, 2.470956938607352, 2.696627344403948], "val_accuracy": [0.195333331823349, 0.18966667354106903, 0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 9, 7, 0, 1, 9], [3, 0, 3, 5, 0], [31, 43, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.15942856669425964, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9292977920580662e+21, 7.719079442458265e+22, 5.6511109959461674e+23, 2.261305671820281e+24, 6.200701845873458e+24, 1.3858637587011506e+25], "accuracy": [0.12323339283466339, 0.1302337795495987, 0.12917712330818176, 0.13512085378170013, 0.13168670237064362, 0.13168670237064362], "val_loss": [1.1650125115378612e+22, 1.882682163270751e+23, 9.592070981178202e+23, 3.0416915360614283e+24, 7.440635866772742e+24, 1.5444101330196868e+25], "val_accuracy": [0.15800000727176666, 0.15800000727176666, 0.15800000727176666, 0.1576666682958603, 0.1576666682958603, 0.15800000727176666]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 2, 1, 0], [3, 5, 3, 5, 0], [36, 84, 6], [0, 1, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.15628571808338165, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [9.203835897563227e+22, 3.603167207870541e+24, 1.3125532708550569e+29, NaN, NaN, NaN], "accuracy": [0.12508255243301392, 0.13353586196899414, 0.11927089840173721, 0.11451591551303864, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.595345675791023e+23, 8.978147609261765e+24, 9.283779345374815e+30, NaN, NaN, NaN], "val_accuracy": [0.156333327293396, 0.156333327293396, 0.14100000262260437, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 1, 5, 0], [14, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [6, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.11428571492433548, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, alpha), grad)))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [19114736.85442268, 53370570.14027209, 43078787.406155065, 30014606.054418176, 24242232.636903975, 18675447.690397568, 14626393.899881124, 12200903.0054154, 10581566.957997622, 9853226.746664906, 7729028.5406155065, 7820544.63485669, 7629189.116431119, 5196965.595694096, 4971556.091731608, 3831964.4081693306, 3037080.185807687, 2055824.2584863293, 1245958.514611676, 625618.5865875958, 37175.95138854134, 7334.432669137116, 4635.264811799857, 4372.382171884803, 4386.247110814497], "accuracy": [0.07898560166358948, 0.07172103971242905, 0.08189142495393753, 0.09351472556591034, 0.09126931428909302, 0.09681680053472519, 0.10196803510189056, 0.10408136248588562, 0.10606260597705841, 0.10619468986988068, 0.10606260597705841, 0.10777968913316727, 0.10606260597705841, 0.109232597053051, 0.1080438494682312, 0.107647605240345, 0.10936468094587326, 0.10777968913316727, 0.10619468986988068, 0.10685510188341141, 0.10593052208423615, 0.09800554811954498, 0.10487385839223862, 0.09602430462837219, 0.09734513610601425], "val_loss": [37168390.85714286, 37791235.428571425, 26042289.14285714, 20615841.14285714, 14960444.285714285, 11244249.714285715, 9111004.0, 8071099.428571428, 7416202.285714285, 6774819.0, 6209659.142857143, 5721110.571428572, 4969207.285714285, 4302388.285714285, 3632774.0714285714, 2887623.8571428573, 2129878.8571428573, 1421627.857142857, 747625.4642857143, 103997.91294642857, 6730.166294642857, 4300.540736607143, 3848.109933035714, 3710.226004464286, 3689.009347098214], "val_accuracy": [0.05766666680574417, 0.03633333370089531, 0.07199999690055847, 0.07266666740179062, 0.0806666687130928, 0.09099999815225601, 0.09933333098888397, 0.10566666722297668, 0.10633333027362823, 0.10766666382551193, 0.109333336353302, 0.1120000034570694, 0.1106666699051857, 0.10966666787862778, 0.11033333092927933, 0.1106666699051857, 0.11233333498239517, 0.1133333370089531, 0.11299999803304672, 0.12533333897590637, 0.10199999809265137, 0.0989999994635582, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 1, 5, 0], [45, 84, 6], [0, 0, 0], [0, 1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), grad)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6.870318433690805, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05864482745528221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.203711441584996, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [6, 1, 7, 2, 1, 0, 4, 1, 2, 8, 7, 8, 1, 2, 4], [3, 5, 3, 5, 0, 5, 5, 4, 4, 1, 5, 4, 2], [45, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 15, 13, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, grad), grad))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), grad)))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 3, 7, 2, 1, 9], [3, 3, 3, 3, 3], [14, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 8, 7, 0, 1, 9], [3, 0, 3, 3, 0], [45, 3, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 9, 2, 1, 0], [0, 0, 3, 5, 3], [14, 84, 6], [1, 1, 0], [1], [9, 3, 7, 5], [3], [64], [1, 0, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5.255506673084038, 31.476430075941085, 96.85242581169099, 217.2550421359438, 409.1753924219537, 690.7783104691601], "accuracy": [0.09615638852119446, 0.09787346422672272, 0.10117553919553757, 0.09760929644107819, 0.09959053993225098, 0.09919429570436478], "val_loss": [9.755162647792272, 38.7991452898298, 96.9301997593471, 194.830814906529, 344.71604701450894, 559.9768415178571], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 3, 9], [3, 0, 3, 5, 0], [14, 84, 6], [0, 1, 0], [0, 1], [7], [3], [64], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.8895365224988496e+31, 593.530266262584, 1008.4347427200884, 1419.871946081651, 1826.4998837824842, 2228.2329911279985], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [361.3140956333705, 718.9897112165179, 1072.9046107700892, 1423.068882533482, 1769.489536830357, 2112.164132254464], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 6, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 11, 6], [0, 0, 0], [0, 0, 1], [8, 0], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 3, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [2, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 2, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16299036145210266, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 0, 0], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.math.negative(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2857187.4352900395, 1051.535523234861, 1098.2604671060574, 1148.5348808863978, 1194.9007077240406, 1228.6226825182544, 1278.3800715853463], "accuracy": [0.09430722147226334, 0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [880.5643484933036, 922.8355189732143, 965.2438616071429, 1007.3714076450893, 1042.354945591518, 1072.51904296875, 1123.616664341518], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 9, 2, 1, 0], [3, 5, 3, 5, 0], [14, 84, 6], [0, 1, 0], [0, 1], [8], [3], [64], [0, 0, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.367327874850887, 3.036101024542282, 4.895655676988232, 8.054339650095793, 12.362764518620898, 17.84104526047662], "accuracy": [0.09192973375320435, 0.09681680053472519, 0.09893012791872025, 0.09747721254825592, 0.09945846349000931, 0.09998679161071777], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 9, 2, 1, 0], [3, 5, 3, 5, 0], [45, 84, 6], [0, 0, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.367327874850887, 3.036101024542282, 4.895655676988232, 8.054339650095793, 12.362764518620898, 17.84104526047662], "accuracy": [0.09192973375320435, 0.09681680053472519, 0.09893012791872025, 0.09747721254825592, 0.09945846349000931, 0.09998679161071777], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 2, 9], [3, 0, 3, 5, 0], [14, 84, 6], [0, 1, 0], [0], [9, 3, 7, 5], [3], [64], [0, 1, 0, 1, 1], [0, 8, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 1, 0, 1, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.367327874850887, 3.036101024542282, 4.895655676988232, 8.054339650095793, 12.362764518620898, 17.84104526047662], "accuracy": [0.09192973375320435, 0.09681680053472519, 0.09893012791872025, 0.09747721254825592, 0.09945846349000931, 0.09998679161071777], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [2, 1, 3, 5, 3], [45, 84, 6], [0, 1, 0], [0], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(alpha, tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.305787728714858, 2.3036241625530245, 2.3027177408402544, 2.303349378007892, 2.3028305807543186, 2.302989487886712], "accuracy": [0.08228767663240433, 0.09391097724437714, 0.08849557489156723, 0.0882314071059227, 0.08691058307886124, 0.09034473448991776], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 9, 2, 1, 0], [2, 0, 1, 5, 0], [14, 84, 6], [1, 1, 0], [0, 1], [2], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.305787728714858, 2.3036241625530245, 2.3027177408402544, 2.303349378007892, 2.3028305807543186, 2.302989487886712], "accuracy": [0.08228767663240433, 0.09391097724437714, 0.08849557489156723, 0.0882314071059227, 0.08691058307886124, 0.09034473448991776], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]