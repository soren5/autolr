[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8539999723434448, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.113728322813996, 2.0775788265086437, 1.3940585708621314, 0.8936391777255989, 0.7231398216091867, 0.6824346423038891, 0.6329942676589915, 0.6170189242163953, 0.5785427674436613, 0.5754048331475702, 0.5438685232716591, 0.5281464137956687, 0.5021139242747961, 0.4964416726406114, 0.47875578526524093, 0.4721943099170297, 0.4469643956666074, 0.44875202378057105, 0.44058074253724316, 0.42093151125610623, 0.4166456596088636, 0.4009875237485122, 0.3959187632184286, 0.3972691558788576, 0.3898997855633635, 0.3813988712123356, 0.37448932610529917, 0.3696120233071904, 0.36696277412173456, 0.34946290678068503, 0.3461357013873137, 0.33671778164535326, 0.3265776307496885, 0.31587452633647617, 0.31455626091810973, 0.3239351676172033, 0.3094900747638857, 0.3122416128729313, 0.30519987872846377, 0.31276463781680414, 0.2927078163390776, 0.29846923699814804, 0.283480769052576, 0.28680623862107574, 0.27706855259567065, 0.2675065046422092, 0.27158413639063567, 0.2589479214983562, 0.26201834265408874], "accuracy": [0.33099988102912903, 0.2958658039569855, 0.5674283504486084, 0.6852463483810425, 0.7296261787414551, 0.7454761862754822, 0.7687227725982666, 0.7728173136711121, 0.7884030938148499, 0.7897239327430725, 0.7992339134216309, 0.802271842956543, 0.819442629814148, 0.81548011302948, 0.8285563588142395, 0.829216718673706, 0.8428213000297546, 0.8412362933158875, 0.8360850811004639, 0.8470479249954224, 0.845859169960022, 0.852331280708313, 0.8540483713150024, 0.8510104417800903, 0.8588033318519592, 0.8576145768165588, 0.8615770936012268, 0.863029956817627, 0.8638224601745605, 0.8721436858177185, 0.8714832663536072, 0.876370370388031, 0.8775591254234314, 0.8800686597824097, 0.8798044919967651, 0.8772949576377869, 0.8794082403182983, 0.8838990926742554, 0.8879936337471008, 0.887201189994812, 0.8886540532112122, 0.8840311765670776, 0.8906353116035461, 0.8898428082466125, 0.8942015767097473, 0.898428201675415, 0.8960506916046143, 0.9005415439605713, 0.9030511379241943], "val_loss": [1.944648197719029, 1.2085366589682442, 0.8010108981813703, 0.5528274093355451, 0.5133886677878243, 0.49453490121023996, 0.4812561443873814, 0.4388462219919477, 0.4556871312005179, 0.42892799207142424, 0.4131425619125366, 0.4014757445880345, 0.3833440967968532, 0.37525542293276104, 0.3659971696989877, 0.36723930495125906, 0.37988942861557007, 0.36029601097106934, 0.3539818014417376, 0.34828739506857737, 0.3367658427783421, 0.3453648771558489, 0.3313816360064915, 0.3244809763772147, 0.33077800273895264, 0.33112829072134836, 0.33150469405310495, 0.32107757670538767, 0.3231573019708906, 0.31173919779913767, 0.31286148514066425, 0.3119619999613081, 0.3123487319265093, 0.3042580655642918, 0.3054036923817226, 0.3090252620833261, 0.3074422138077872, 0.3045029044151306, 0.30116803305489676, 0.3002789446285793, 0.29516203914369854, 0.3039355192865644, 0.30354701621191843, 0.2995813318661281, 0.2868038926805769, 0.2952285919870649, 0.3003892643111093, 0.29758037839617046, 0.3172874791281564], "val_accuracy": [0.15666666626930237, 0.5586666464805603, 0.6806666851043701, 0.7523333430290222, 0.7699999809265137, 0.7739999890327454, 0.7799999713897705, 0.8016666769981384, 0.7950000166893005, 0.7979999780654907, 0.812666654586792, 0.8173333406448364, 0.8236666917800903, 0.8286666870117188, 0.8326666951179504, 0.8396666646003723, 0.8183333277702332, 0.8473333120346069, 0.8376666903495789, 0.8420000076293945, 0.8489999771118164, 0.8486666679382324, 0.8496666550636292, 0.8510000109672546, 0.8489999771118164, 0.8486666679382324, 0.8523333072662354, 0.8560000061988831, 0.8476666808128357, 0.8583333492279053, 0.8579999804496765, 0.8640000224113464, 0.859666645526886, 0.8646666407585144, 0.8576666712760925, 0.862666666507721, 0.8629999756813049, 0.862333357334137, 0.8709999918937683, 0.8740000128746033, 0.874666690826416, 0.8743333220481873, 0.8763333559036255, 0.8773333430290222, 0.874666690826416, 0.871666669845581, 0.8700000047683716, 0.8703333139419556, 0.8610000014305115]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3, 2], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8437142968177795, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1123739118038185, 2.06425987929401, 1.364442671814363, 1.039098078391146, 0.7746922771424634, 0.7033114725682776, 0.6371536971854811, 0.6333740346498808, 0.5842720767164022, 0.5684158693545877, 0.5505451377529935, 0.5286803185396568, 0.5115226229908381, 0.49962858473305155, 0.47528521595551054, 0.4707175795121231, 0.45412596918100284, 0.4633567583929389, 0.4492772903779022, 0.4344107882024873, 0.41111635452468775, 0.41586114183361533, 0.3990502599412739, 0.3957809460256015, 0.38644368181123456, 0.38221040140557455, 0.3731457929821566, 0.3691398709079514, 0.36418364555718263, 0.35963321397364684, 0.35078136506585744, 0.3449978019937375, 0.332457639647985, 0.3157393103971016, 0.3215039140473362], "accuracy": [0.3257165551185608, 0.3135649263858795, 0.5691454410552979, 0.6458855867385864, 0.7049266695976257, 0.7341170310974121, 0.759609043598175, 0.7667415142059326, 0.7844406366348267, 0.7903843522071838, 0.7979130744934082, 0.8095363974571228, 0.8168009519577026, 0.8165367841720581, 0.8310658931732178, 0.8247259259223938, 0.8342359066009521, 0.8327829837799072, 0.8304054737091064, 0.8433496356010437, 0.8486329317092896, 0.8486329317092896, 0.8494254350662231, 0.8539162874221802, 0.8594637513160706, 0.8593316674232483, 0.8597279191017151, 0.8639545440673828, 0.8673887252807617, 0.8647470474243164, 0.8709549307823181, 0.8683133125305176, 0.8759741187095642, 0.8837670087814331, 0.8800686597824097], "val_loss": [1.9574676241193498, 1.4785477433885847, 0.7212038380759103, 0.6002955607005528, 0.5374395166124616, 0.49572685786655973, 0.5095087289810181, 0.4528621435165405, 0.4489983490535191, 0.4224147541182382, 0.4264259934425354, 0.40686185019356863, 0.3931669848305838, 0.37972704001835417, 0.37087367262159077, 0.3740550535065787, 0.3675215244293213, 0.37754335573741366, 0.35930462394441876, 0.34118516956056866, 0.3494450535093035, 0.3378769074167524, 0.3481803706714085, 0.32686662673950195, 0.33754682540893555, 0.3303858893258231, 0.32004954133714947, 0.32058978932244436, 0.323069657598223, 0.31726607254573275, 0.33578059503010343, 0.3200261081968035, 0.3178271395819528, 0.3183307307107108, 0.32095823117664884], "val_accuracy": [0.19099999964237213, 0.5566666722297668, 0.7070000171661377, 0.7386666536331177, 0.7599999904632568, 0.7739999890327454, 0.753333330154419, 0.7986666560173035, 0.796999990940094, 0.8019999861717224, 0.8026666641235352, 0.8143333196640015, 0.8216666579246521, 0.8306666612625122, 0.8299999833106995, 0.8363333344459534, 0.8293333053588867, 0.8393333554267883, 0.8356666564941406, 0.8506666421890259, 0.8386666774749756, 0.8473333120346069, 0.8370000123977661, 0.8543333411216736, 0.8503333330154419, 0.8556666374206543, 0.8583333492279053, 0.8566666841506958, 0.8519999980926514, 0.8633333444595337, 0.8473333120346069, 0.8556666374206543, 0.8613333106040955, 0.8610000014305115, 0.8603333234786987]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 2, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.32028570771217346, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, grad))))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.08464647303042, 2.258361252622361, 241538274.83739537, NaN, NaN, NaN], "accuracy": [0.3411702513694763, 0.25624093413352966, 0.10421344637870789, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.6869206087929862, 19.45003346034459, 7.586561069231551e+20, NaN, NaN, NaN], "val_accuracy": [0.33500000834465027, 0.22499999403953552, 0.10100000351667404, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [1, 3, 8, 0, 2, 9], [3, 3, 3, 5, 3], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1], [0, 8, 9, 2, 1, 7, 9], [3], [64], [0, 1, 0, 1, 1], [0, 7, 1, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.268466664185661, 2.3639214377062525, 2.318327607952325, 2.3433430673518374, 2.340606256451479, 2.338171842091623, 2.3346251802768188], "accuracy": [0.201294407248497, 0.09866596013307571, 0.11834631860256195, 0.10117553919553757, 0.10276053100824356, 0.1014397069811821, 0.1014397069811821], "val_loss": [2.014586925506592, 1.9449811662946428, 1.9983081136431013, 1.9837132862636022, 2.0033841133117676, 2.028380734579904, 2.0212889398847307], "val_accuracy": [0.09933333098888397, 0.16866666078567505, 0.1003333330154419, 0.10133333504199982, 0.10066666454076767, 0.1003333330154419, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1], [0, 3, 9, 0, 2, 9], [1, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [0, 8, 9, 2, 1, 7, 9], [3], [64], [0, 1, 0, 1, 1], [0, 7, 1, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.13828571140766144, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.961724683514455, 1.356583322059713, 0.9664881085958998, 0.8377402147533808, 0.7628708903847149, 0.7309486341120591, 0.7959917822628603, 0.8035880017116825, 0.8399811956341146, 0.9634506140229504, 1.0929866609257195, 2.9101885531194585, 11.911678274404323], "accuracy": [0.35147273540496826, 0.5070664286613464, 0.6561880707740784, 0.6905296444892883, 0.7157574892044067, 0.7272487282752991, 0.7186633348464966, 0.7150970697402954, 0.722757875919342, 0.6671509742736816, 0.637828528881073, 0.533350944519043, 0.1698586642742157], "val_loss": [1.2920846598488944, 0.7844635929380145, 0.6528769390923637, 0.5299070732934135, 0.5086653573172433, 0.5370521545410156, 0.5673069953918457, 0.5430468150547573, 0.610393830708095, 0.6733018159866333, 0.7007675170898438, 16.29968752179827, 3.091693469456264], "val_accuracy": [0.4606666564941406, 0.6346666812896729, 0.7153333425521851, 0.7536666393280029, 0.7620000243186951, 0.7566666603088379, 0.7540000081062317, 0.7820000052452087, 0.734666645526886, 0.7390000224113464, 0.6930000185966492, 0.4050000011920929, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 2, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.12800000607967377, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.301691283513337, 2.3000482807794285, 2.3023359129977123, 2.3028395141608615, 2.305215916219814, 2.3373873324174417], "accuracy": [0.09879804402589798, 0.09034473448991776, 0.09602430462837219, 0.09457138925790787, 0.10077928751707077, 0.09536388516426086], "val_loss": [1.9689667565482003, 1.9729198728288924, 1.9734980719430106, 1.9743692534310477, 1.9801558767046248, 2.0926081112452914], "val_accuracy": [0.11800000071525574, 0.09200000017881393, 0.08633333444595337, 0.10000000149011612, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 5, 9], [3, 0, 3, 5, 0], [45, 28, 6], [0, 0, 0, 0, 0, 1], [1], [1, 4, 0], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [31415789206.525513, 7088813083302.699, 3.448820030626756e+16, 2.6728266423159308e+20, 9.265989053194932e+23, 5.35301310827764e+27, 2.1569224257856477e+31, Infinity], "accuracy": [0.09681680053472519, 0.109232597053051, 0.10077928751707077, 0.10249637067317963, 0.09747721254825592, 0.09417514503002167, 0.09734513610601425, 0.09813763201236725], "val_loss": [31021119195.42857, 133069294010368.0, 7.255935027902266e+17, 3.9082804537345683e+21, 1.6901947843748278e+25, 7.9546029049969e+28, 3.6724268293836176e+32, Infinity], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030559574183127, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 7, 0, 1, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.435854212955615e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08360850811004639, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 7, 1, 1, 4, 1, 3, 4, 5, 6, 7, 3, 1, 4, 2, 0, 7, 4, 6, 6, 7, 4, 8, 0, 3, 2, 8, 1, 8, 5, 7, 9, 4], [3, 0, 3, 3, 0, 4, 4, 4, 5, 0, 5, 5, 1, 0, 3, 2, 3, 0, 1, 4, 1, 2, 3, 3, 0, 3], [21, 35, 6, 83, 3, 85, 75], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1], [1, 4, 0], [3, 2], [64], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 60, 60, 34, 26, 7, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(grad, grad), grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.subtract(beta, grad)), tf.math.sqrt(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))))), alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))), tf.math.add(beta, beta))), tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), grad))))), tf.math.pow(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 3, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [5, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 4, 0], [1, 2, 1], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3798780.5879271035, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [3, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [53, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 9, 2, 9], [3, 3, 3, 5, 3], [45, 84, 6], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0], [2, 4, 0, 3, 5, 9, 2], [1, 2, 1], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 11, 8, 7, 1, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, alpha))))), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3062234867077303, 2.326033782052043, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.07845727354288101, 0.09272222965955734, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.976956503731864, 2.0133753504071916, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.025333333760499954, 0.0963333323597908, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9, 0, 4, 2, 9, 6, 7, 0, 1], [3, 0, 0, 5, 0, 4, 0, 4], [45, 84, 6, 97, 66, 21], [0, 0, 0, 0, 0, 1], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 14, 8, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 2, 9], [3, 0, 3, 5, 0], [45, 84, 6], [0, 0, 0], [0, 1], [8], [4], [64], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 2, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), grad)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3799074.421575132, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 2, 9], [3, 0, 3, 3, 0], [45, 40, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09457142651081085, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(grad, grad))))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3080162003748548, 2.3092616066374028, 2.3037973400340688, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.06921146810054779, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9826888356889998, 1.97495664869036, 1.981086186000279, NaN, NaN, NaN, NaN], "val_accuracy": [0.061666667461395264, 0.10499999672174454, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 1, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 7, 9, 1, 9], [3, 0, 2, 2, 0], [45, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [8], [3, 2], [64], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07285714149475098, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3035809346603253, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.236685003553118, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1146666631102562, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 9, 0, 1, 7], [3, 0, 3, 5, 0], [45, 82, 6], [0, 1, 0], [0, 1], [4], [3], [64], [0, 0, 0, 1, 1], [0, 3, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 3, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304199863906707, 2.302640461981525, 2.3042054580360465, 2.302900634720782, 2.3029097894462756, 2.3029064685598324], "accuracy": [0.08942015469074249, 0.08968432247638702, 0.09074098616838455, 0.09100515395402908, 0.08902391046285629, 0.0870426595211029], "val_loss": [1.9709992408752441, 1.9709991727556502, 1.970999104636056, 1.9709991727556502, 1.9709992408752441, 1.970999308994838], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 1, 0, 1, 9, 5, 6, 6, 6, 7, 1, 7, 9, 5, 0, 6], [3, 0, 3, 5, 0, 4, 0, 2, 2, 3], [45, 84, 6, 52, 3], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0], [1], [0, 8, 6, 2, 1, 7, 9], [4, 2], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3041998324156783, 2.302640430490496, 2.3042054265450176, 2.3029005852483757, 2.302909739973869, 2.3029064685598324], "accuracy": [0.08942015469074249, 0.08968432247638702, 0.09074098616838455, 0.09100515395402908, 0.08902391046285629, 0.0870426595211029], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 2, 9, 6, 4, 9], [3, 0, 0, 5, 0, 4, 0], [45, 84, 6, 97, 66], [0, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3041998324156783, 2.302640430490496, 2.3042054265450176, 2.3029005852483757, 2.302909739973869, 2.3029064685598324], "accuracy": [0.08942015469074249, 0.08968432247638702, 0.09074098616838455, 0.09100515395402908, 0.08902391046285629, 0.0870426595211029], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [1, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 9, 1, 9], [1, 0, 3, 5, 0], [45, 84, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3041998324156783, 2.302640430490496, 2.3042054265450176, 2.3029005852483757, 2.302909739973869, 2.3029064685598324], "accuracy": [0.08942015469074249, 0.08968432247638702, 0.09074098616838455, 0.09100515395402908, 0.08902391046285629, 0.0870426595211029], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]