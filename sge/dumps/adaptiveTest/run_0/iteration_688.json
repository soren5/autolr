[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 5, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.842285692691803, "mapping_values": [1, 17, 17, 12, 5, 3, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))))), tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.041535354750173, 1.086213677125663, 0.7879881985183437, 0.6953919463075148, 0.6432427449422253, 0.5903423387518396, 0.555175416371322, 0.5223371433410284, 0.5040207878237372, 0.4783710905384819, 0.467197737004448, 0.4486374953608424, 0.4379938640976784, 0.4190401516499505, 0.40383972168724536, 0.39061381803952694, 0.38449623982400283, 0.3699007441913762, 0.37314575423244567, 0.3579844281130526, 0.34511395563790825, 0.3262095896441309, 0.32539200632799853, 0.318271127162498, 0.3053271920217137, 0.30854683307104924, 0.2945867843001888, 0.2889203178671609, 0.272011724087257, 0.26140208538213755, 0.25292138763587896, 0.2562117517809307, 0.24853497131499694, 0.2391239526076261, 0.24524110413545536, 0.23336571901583983, 0.23050315825537038, 0.21962899375097264, 0.21738068378596745, 0.2087626969809577, 0.20255688499064414, 0.20237402287866021, 0.1937144131979938, 0.19179784514530537, 0.18593211351581268, 0.17530069711099386, 0.1849037778257867, 0.17156741078566598, 0.17468257260801234, 0.16716304128361478], "accuracy": [0.31620657444000244, 0.6209219098091125, 0.7030775547027588, 0.741909921169281, 0.7577598690986633, 0.7734777331352234, 0.793950617313385, 0.8038568496704102, 0.8142913579940796, 0.8245938420295715, 0.8240655064582825, 0.8401796221733093, 0.8407079577445984, 0.8421608805656433, 0.8506141901016235, 0.8544445633888245, 0.8588033318519592, 0.8667283058166504, 0.8560295701026917, 0.8643507957458496, 0.8704266548156738, 0.8808611631393433, 0.8800686597824097, 0.8823140859603882, 0.8850878477096558, 0.8861445188522339, 0.8910315632820129, 0.889578640460968, 0.8952582478523254, 0.8976356983184814, 0.9021265506744385, 0.9026548862457275, 0.9046360850334167, 0.9096552729606628, 0.9072777628898621, 0.9088627696037292, 0.9108440279960632, 0.9182406663894653, 0.9167877435684204, 0.9185048341751099, 0.9240522980690002, 0.9249768853187561, 0.9260335564613342, 0.927882730960846, 0.9285431504249573, 0.9314489364624023, 0.9290714859962463, 0.930788516998291, 0.9314489364624023, 0.9332981109619141], "val_loss": [0.9171344552721296, 0.625126872743879, 0.5576456785202026, 0.5217324325016567, 0.4835186685834612, 0.45465288843427387, 0.4348531791142055, 0.40731654848371235, 0.3988529784338815, 0.38151792117527555, 0.36792142050606863, 0.3699922391346523, 0.3518960731370108, 0.3465143271854946, 0.32960245438984465, 0.3386392167636326, 0.3313048226492746, 0.3353842496871948, 0.3259404812540327, 0.3123377561569214, 0.30732887983322144, 0.3148178202765329, 0.3051230311393738, 0.28853260619299753, 0.3093510525567191, 0.299560010433197, 0.2904194252831595, 0.2979180983134678, 0.29750960213797434, 0.2960988623755319, 0.2948744637625558, 0.2920736585344587, 0.30193536622183664, 0.29718615327562603, 0.29424300364085604, 0.2892779452460153, 0.291025596005576, 0.2889217053140913, 0.2930827225957598, 0.30223176309040617, 0.29311111995152067, 0.29861838476998465, 0.29432190316064016, 0.30588620049612864, 0.2867719275610788, 0.3081980603081839, 0.29755823952811106, 0.3021494150161743, 0.30786268200193134, 0.3012376938547407], "val_accuracy": [0.6433333158493042, 0.7273333072662354, 0.7523333430290222, 0.7573333382606506, 0.7683333158493042, 0.7910000085830688, 0.8053333163261414, 0.8230000138282776, 0.8169999718666077, 0.8259999752044678, 0.8370000123977661, 0.8343333601951599, 0.8450000286102295, 0.843666672706604, 0.8533333539962769, 0.8463333249092102, 0.8566666841506958, 0.8519999980926514, 0.8553333282470703, 0.8600000143051147, 0.859666645526886, 0.8606666922569275, 0.862666666507721, 0.8686666488647461, 0.8619999885559082, 0.8673333525657654, 0.8723333477973938, 0.8713333606719971, 0.8690000176429749, 0.8706666827201843, 0.8766666650772095, 0.8740000128746033, 0.875333309173584, 0.8706666827201843, 0.875, 0.878333330154419, 0.8820000290870667, 0.8806666731834412, 0.8823333382606506, 0.8799999952316284, 0.8809999823570251, 0.8809999823570251, 0.8830000162124634, 0.8816666603088379, 0.8896666765213013, 0.8809999823570251, 0.8856666684150696, 0.8886666893959045, 0.8863333463668823, 0.8889999985694885]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [69, 33, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [5, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8399999737739563, "mapping_values": [1, 17, 17, 10, 7, 4, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.041535442468434, 1.0862188282707002, 0.787926247114865, 0.6945784885287206, 0.6420751962096795, 0.5899078001782029, 0.55505842927771, 0.5200062964562774, 0.5044242201653202, 0.4768241960075569, 0.46367661708287117, 0.4495046295431296, 0.43874055112924526, 0.42142237381392844, 0.4085830853930428, 0.3968794978234935, 0.3902114579477929, 0.3692740654082519, 0.37429547330738294, 0.3588652555512053, 0.3442604210768488, 0.32892444010234984, 0.31670264502746903, 0.3196460207447699, 0.30312388867293333, 0.3031058951123925, 0.29475598941625875, 0.2881748043605916, 0.27108976629313825, 0.26104177105318144, 0.2534530739195516, 0.2570391695268906], "accuracy": [0.31620657444000244, 0.6210539937019348, 0.7022850513458252, 0.7433628439903259, 0.7600052952766418, 0.7732135653495789, 0.7922335267066956, 0.8054417967796326, 0.8131026029586792, 0.8245938420295715, 0.8249900937080383, 0.8348963260650635, 0.8399154543876648, 0.8401796221733093, 0.8502179384231567, 0.8555012345314026, 0.8564258217811584, 0.8640866279602051, 0.8552370667457581, 0.8659358024597168, 0.8697662353515625, 0.8779553771018982, 0.8857482671737671, 0.8812574148178101, 0.8858803510665894, 0.8879936337471008, 0.8910315632820129, 0.8903711438179016, 0.8961827754974365, 0.8986923694610596, 0.90423983335495, 0.9013340473175049], "val_loss": [0.9171355451856341, 0.6251125846590314, 0.5574681758880615, 0.520195722579956, 0.4832186188016619, 0.45440997396196636, 0.4345578466142927, 0.4093496458871024, 0.3964697888919285, 0.38232026781354633, 0.37010430438177927, 0.36679090772356304, 0.35368560893195017, 0.3465264524732317, 0.33411186933517456, 0.3439259188515799, 0.3325567841529846, 0.33906636919294086, 0.3229665075029646, 0.31604351316179546, 0.30675711802073885, 0.3122921075139727, 0.3077147603034973, 0.29204251936503817, 0.31265342235565186, 0.29543726784842356, 0.28807214328220915, 0.30102466685431345, 0.2957232083593096, 0.29888581378119333, 0.29809556688581196, 0.2873897297041757], "val_accuracy": [0.6433333158493042, 0.7276666760444641, 0.7526666522026062, 0.7576666474342346, 0.7710000276565552, 0.7926666736602783, 0.8100000023841858, 0.8186666369438171, 0.8216666579246521, 0.8276666402816772, 0.8316666483879089, 0.8379999995231628, 0.8386666774749756, 0.8403333425521851, 0.8543333411216736, 0.8423333168029785, 0.8519999980926514, 0.8523333072662354, 0.8543333411216736, 0.8633333444595337, 0.8610000014305115, 0.8640000224113464, 0.8629999756813049, 0.8659999966621399, 0.8583333492279053, 0.8723333477973938, 0.8740000128746033, 0.8679999709129333, 0.8679999709129333, 0.8703333139419556, 0.8736666440963745, 0.8736666440963745]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.8397142887115479, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.041535462638438, 1.0860378280716991, 0.7878518300584877, 0.695226119816689, 0.6440267468393125, 0.5890030719112521, 0.5552293067957196, 0.5215899223397042, 0.5050043369233884, 0.47889229498991576, 0.4669625309826502, 0.4506109231978895, 0.44112954254966635, 0.42093230310196195, 0.405507647350338, 0.39550935661142467, 0.38023717121016065, 0.3658157616613595, 0.37032086794733166, 0.35900486922849834, 0.3400727387952168, 0.3306326382368972, 0.325399829829295, 0.3180496997293811, 0.30330674161512333, 0.29961679471387775, 0.2915995005902487, 0.2892088441013613, 0.2735990045006407, 0.2588691995159951, 0.25221300453612866, 0.2554684641960826, 0.24795686655812307, 0.24790109712701858, 0.24391040241382914, 0.23710228159695002, 0.22092297044192102, 0.22156889620726025, 0.22872951724399837, 0.21321175749023843, 0.21387012315078294, 0.21341425422325647, 0.19604635492543881, 0.19764233620379973], "accuracy": [0.31620657444000244, 0.6210539937019348, 0.703209638595581, 0.7415136694908142, 0.7574957013130188, 0.7732135653495789, 0.791969358921051, 0.8050455451011658, 0.8128384351730347, 0.8207634687423706, 0.8249900937080383, 0.8384625315666199, 0.8397833704948425, 0.8408400416374207, 0.8495575189590454, 0.8549728989601135, 0.8605204224586487, 0.8669924736022949, 0.8580108284950256, 0.8692378997802734, 0.8757099509239197, 0.8762382864952087, 0.8809932470321655, 0.8824461698532104, 0.8878615498542786, 0.8914278149604797, 0.8899748921394348, 0.8923524022102356, 0.896446943283081, 0.9013340473175049, 0.9027869701385498, 0.9052965044975281, 0.9060890078544617, 0.9085986018180847, 0.906749427318573, 0.9108440279960632, 0.9134856462478638, 0.9133535623550415, 0.9125610589981079, 0.9177123308181763, 0.9187690019607544, 0.9215427041053772, 0.9249768853187561, 0.924448549747467], "val_loss": [0.9171186855861119, 0.625294532094683, 0.5568371329988752, 0.5211768661226545, 0.4839341810771397, 0.45463619913373676, 0.4370846748352051, 0.4111042959349496, 0.3981387274605887, 0.38373368978500366, 0.37282299995422363, 0.37106096744537354, 0.35255225215639385, 0.3495792065347944, 0.33332834924970356, 0.3356601766177586, 0.3318841542516436, 0.3335432580539158, 0.3276680793081011, 0.31281381845474243, 0.30596515110560824, 0.3155396154948643, 0.3116189241409302, 0.29079597336905344, 0.3048510806901114, 0.2963363698550633, 0.28694242238998413, 0.30338621139526367, 0.30359311614717754, 0.2988325698035104, 0.29662623575755526, 0.2885617273194449, 0.30183967522212435, 0.294784562928336, 0.2915513004575457, 0.2821013757160732, 0.2921293377876282, 0.28975410972322735, 0.29014467341559275, 0.2994883060455322, 0.29213825293949675, 0.28789812326431274, 0.3067280224391392, 0.29634183645248413], "val_accuracy": [0.6433333158493042, 0.7256666421890259, 0.7523333430290222, 0.7563333511352539, 0.7706666588783264, 0.7900000214576721, 0.8043333292007446, 0.8199999928474426, 0.8213333487510681, 0.8273333311080933, 0.8336666822433472, 0.8379999995231628, 0.843999981880188, 0.843666672706604, 0.8503333330154419, 0.8523333072662354, 0.8550000190734863, 0.8489999771118164, 0.8526666760444641, 0.8616666793823242, 0.8629999756813049, 0.8643333315849304, 0.8556666374206543, 0.8666666746139526, 0.8646666407585144, 0.875, 0.8743333220481873, 0.871999979019165, 0.8659999966621399, 0.8723333477973938, 0.878333330154419, 0.8726666569709778, 0.875, 0.8709999918937683, 0.8799999952316284, 0.8790000081062317, 0.8793333172798157, 0.8796666860580444, 0.8806666731834412, 0.8766666650772095, 0.8806666731834412, 0.8799999952316284, 0.878333330154419, 0.8806666731834412]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.834857165813446, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.square(tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0415375393458235, 1.08597213054267, 0.7882618651004626, 0.6947878674666612, 0.643692259775287, 0.5875159750651091, 0.5526858315318567, 0.5196583814601132, 0.503714150520222, 0.47638230524704267, 0.46754269477650634, 0.4522042591629122, 0.4407859605419291, 0.42125078538594357, 0.4036097186762092, 0.3934868607011217, 0.38792952193701824, 0.3641542473119311, 0.3666898499996655, 0.3489746827735027, 0.3392782398872151, 0.3227822308007516, 0.32038160422852546, 0.3127112752568405, 0.3029919195609747, 0.29963333159783545, 0.2851612271807213, 0.2901221490169261, 0.2763668546201436, 0.2613453189962339, 0.25288896882231715, 0.24848897807303044, 0.2419308036183952, 0.23823118607413105, 0.2417788984611475, 0.23615138277189054, 0.22315778508792228, 0.22047519127627593, 0.21553470131160876, 0.2022257580961518, 0.20283692394186556, 0.20523216618979534, 0.19195387358041], "accuracy": [0.31620657444000244, 0.6214502453804016, 0.7040021419525146, 0.7415136694908142, 0.7580240368843079, 0.7726852297782898, 0.7948752045631409, 0.807158887386322, 0.8124422430992126, 0.8247259259223938, 0.8240655064582825, 0.8347642421722412, 0.8397833704948425, 0.844010055065155, 0.8482366800308228, 0.8573504090309143, 0.8558974862098694, 0.8636903762817383, 0.8577466607093811, 0.8739928603172302, 0.8725399374961853, 0.8791441321372986, 0.8811253309249878, 0.8850878477096558, 0.8865407705307007, 0.8912957310676575, 0.8965790271759033, 0.8901069760322571, 0.8977677822113037, 0.9002773761749268, 0.9046360850334167, 0.9045040011405945, 0.9055606722831726, 0.9097873568534851, 0.904768168926239, 0.9089948534965515, 0.9145423173904419, 0.9133535623550415, 0.9179764986038208, 0.924448549747467, 0.924448549747467, 0.9224672913551331, 0.9282789826393127], "val_loss": [0.9172075135367257, 0.6258607591901507, 0.5578302485602242, 0.5193538325173515, 0.482669608933585, 0.45382206780569895, 0.43259622369493755, 0.4086060268538339, 0.3975731134414673, 0.3797474673816136, 0.36870975153786795, 0.3727791820253645, 0.35421208824430195, 0.346012498651232, 0.33339779717581614, 0.3354856712477548, 0.3288800631250654, 0.32601325852530344, 0.320913451058524, 0.31622772557394846, 0.3015365259987967, 0.3104440229279654, 0.3055093543870108, 0.2884100079536438, 0.3090380770819528, 0.28995944772447857, 0.28958609274455477, 0.30516816888536724, 0.29496770245688303, 0.2918486339705331, 0.29291021823883057, 0.2854211926460266, 0.2948854735919407, 0.2945476600102016, 0.2957896760531834, 0.27841040066310335, 0.28908554145268034, 0.28821167775562834, 0.2914660487856184, 0.2953511817114694, 0.29066855566842215, 0.2911871756826128, 0.29802546330860685], "val_accuracy": [0.6433333158493042, 0.7260000109672546, 0.7513333559036255, 0.7563333511352539, 0.7716666460037231, 0.7963333129882812, 0.8103333115577698, 0.8240000009536743, 0.8169999718666077, 0.828000009059906, 0.8366666436195374, 0.8336666822433472, 0.8453333377838135, 0.843666672706604, 0.8493333458900452, 0.8479999899864197, 0.8556666374206543, 0.8543333411216736, 0.8556666374206543, 0.862333357334137, 0.8643333315849304, 0.8603333234786987, 0.8629999756813049, 0.8663333058357239, 0.8610000014305115, 0.8759999871253967, 0.8706666827201843, 0.8693333268165588, 0.8679999709129333, 0.8736666440963745, 0.8786666393280029, 0.878000020980835, 0.8763333559036255, 0.8703333139419556, 0.8756666779518127, 0.8803333044052124, 0.8793333172798157, 0.8820000290870667, 0.8790000081062317, 0.8816666603088379, 0.8803333044052124, 0.8799999952316284, 0.8803333044052124]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [23, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 7, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2909788776461193, 2.2197376462399543, 2.021054966574757, 1.5972600536355253, 1.373142469261521, 1.1832768620674432, 0.9474497259867709, 0.9306532309008406, 0.8338682102394961, 0.8284406601052164, 0.8005629820342487, 0.7604113851304004, 0.7385527900874166, 0.7328255331952417, 0.7055874590891983, 0.6833255847037949, 0.6772564508659555, 0.6582478821836584, 0.6384791843548836, 0.6167625827071941, 0.5969514079050475, 0.5809134813489348, 0.5675480747503171, 0.5609092701931576, 0.5422726021372269, 0.5383594213239332, 0.5317579191185464, 0.5145108157916706, 0.5212216411426067, 0.5038287755741089, 0.4874078796099143, 0.48796867229966534, 0.48442379246770806, 0.46419693152303976, 0.4556804633474369, 0.44930351949197866, 0.4518400362422516, 0.44402323935041654, 0.4261864764996492, 0.4238502709242992, 0.41519147006905766, 0.40266095578331973, 0.394968956094833, 0.4009921707379237, 0.39361318051933125, 0.3928510758973163, 0.37832661029559084, 0.3796081437395076, 0.3749808543637885, 0.3684311960595647, 0.36221049459713356, 0.35311658025622417, 0.3479956366744701, 0.34760590270210834, 0.3406338708559126, 0.3369183878361069, 0.33129863561246814, 0.3254392739567916, 0.32405360207786305, 0.3169913541733738, 0.3063050736809104, 0.30931796151822377, 0.2987887430633489, 0.2969140048355175, 0.29379494604952916, 0.2972557579112201, 0.2885455580797524, 0.2868893949811674, 0.2857024969205628, 0.2703864181621152, 0.2695133972712764, 0.2650859931779339, 0.2646260784483542, 0.2640248239867014], "accuracy": [0.11742173880338669, 0.27763834595680237, 0.39122968912124634, 0.4667811393737793, 0.533879280090332, 0.5974111557006836, 0.6440364718437195, 0.6551313996315002, 0.6966054439544678, 0.6933034062385559, 0.7010962963104248, 0.7083608508110046, 0.7104741930961609, 0.7226257920265198, 0.7358341217041016, 0.7391361594200134, 0.7440232634544373, 0.7519482374191284, 0.7537974119186401, 0.7683265209197998, 0.7724210619926453, 0.7779685854911804, 0.7868181467056274, 0.7860256433486938, 0.793950617313385, 0.7961959838867188, 0.7964601516723633, 0.8068947196006775, 0.806630551815033, 0.8156121969223022, 0.817461371421814, 0.8185180425643921, 0.8220842480659485, 0.8272355198860168, 0.8325188159942627, 0.833179235458374, 0.8310658931732178, 0.8358209133148193, 0.8409721255302429, 0.8392550349235535, 0.8486329317092896, 0.8486329317092896, 0.854708731174469, 0.8512746095657349, 0.8516708612442017, 0.8518029451370239, 0.8548408150672913, 0.8557654023170471, 0.8582749962806702, 0.8628978729248047, 0.8668603897094727, 0.872407853603363, 0.8729361891746521, 0.8697662353515625, 0.8696341514587402, 0.8747853636741638, 0.874389111995697, 0.8774270415306091, 0.8786157965660095, 0.8833707571029663, 0.8835028409957886, 0.8838990926742554, 0.885219931602478, 0.891559898853302, 0.8899748921394348, 0.8858803510665894, 0.8903711438179016, 0.8920882344245911, 0.8901069760322571, 0.8968431949615479, 0.8994848728179932, 0.8980319499969482, 0.9010698795318604, 0.8969752788543701], "val_loss": [1.9319154194423132, 1.8187383243015833, 1.4755136285509383, 0.9560879979814801, 0.7812675748552594, 0.6951792410441807, 0.7136728252683368, 0.641251836504255, 0.5995426177978516, 0.5907341412135533, 0.5604946613311768, 0.5547620398657662, 0.5554773466927665, 0.5379331111907959, 0.5256084203720093, 0.5115847417286464, 0.4882481949669974, 0.4739082540784563, 0.4677105120250157, 0.457185012953622, 0.4494693619864328, 0.4404742547443935, 0.4413828338895525, 0.4321941818509783, 0.4215206333569118, 0.41762833084378925, 0.40873379366738455, 0.4090175543512617, 0.4028680409703936, 0.39754046712602886, 0.3919775230543954, 0.38876003878457205, 0.38468568665640696, 0.37824130058288574, 0.3763474566595895, 0.3733123796326773, 0.3692699500492641, 0.362746604851314, 0.358223489352635, 0.3579043575695583, 0.35344367367880686, 0.35072439908981323, 0.34620059388024466, 0.3413726772580828, 0.33942146812166485, 0.33520716428756714, 0.3343677265303476, 0.33061911378587994, 0.3338574937411717, 0.33179124764033724, 0.331021819795881, 0.32986386333193096, 0.3299510393823896, 0.3237542339733669, 0.32408136980874197, 0.32494086027145386, 0.3256588578224182, 0.3207028593335833, 0.3166856680597578, 0.31226861476898193, 0.3132340908050537, 0.31214923518044607, 0.31265013558523996, 0.31372114590236116, 0.31482391698019846, 0.31298357248306274, 0.3079995002065386, 0.30892411300114225, 0.3067410332815988, 0.3032189352171762, 0.3043122206415449, 0.31017180000032696, 0.31294040169034687, 0.31491157838276457], "val_accuracy": [0.3423333466053009, 0.42100000381469727, 0.5223333239555359, 0.656000018119812, 0.6803333163261414, 0.7039999961853027, 0.6833333373069763, 0.7266666889190674, 0.7323333621025085, 0.7379999756813049, 0.749666690826416, 0.7453333139419556, 0.7573333382606506, 0.7593333125114441, 0.7633333206176758, 0.7636666893959045, 0.7766666412353516, 0.7816666960716248, 0.7793333530426025, 0.7863333225250244, 0.7963333129882812, 0.8006666898727417, 0.7960000038146973, 0.8046666383743286, 0.8100000023841858, 0.8226666450500488, 0.8163333535194397, 0.8183333277702332, 0.8206666707992554, 0.8240000009536743, 0.8296666741371155, 0.8316666483879089, 0.8353333473205566, 0.8379999995231628, 0.8429999947547913, 0.8353333473205566, 0.8379999995231628, 0.8433333039283752, 0.8500000238418579, 0.8529999852180481, 0.8519999980926514, 0.8550000190734863, 0.8546666502952576, 0.8556666374206543, 0.8560000061988831, 0.8603333234786987, 0.859333336353302, 0.8610000014305115, 0.8579999804496765, 0.8583333492279053, 0.8610000014305115, 0.8633333444595337, 0.8610000014305115, 0.8613333106040955, 0.8629999756813049, 0.8633333444595337, 0.8656666874885559, 0.8690000176429749, 0.8709999918937683, 0.871999979019165, 0.8666666746139526, 0.8700000047683716, 0.8733333349227905, 0.8736666440963745, 0.8709999918937683, 0.8700000047683716, 0.874666690826416, 0.8743333220481873, 0.8756666779518127, 0.8726666569709778, 0.8726666569709778, 0.8743333220481873, 0.875, 0.875]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 3, 0, 3, 9, 1, 8, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.7891428470611572, "mapping_values": [1, 3, 3, 2, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.210994962656487, 1.6426117364614867, 1.1719064624979354, 1.0611125821560885, 0.9184956061542467, 0.8500076037797284, 0.8203908721170311, 0.7769922479001081, 0.7421171340912781, 0.7240636674420331, 0.7051495227437717, 0.7019635234069925, 0.6722886620054722, 0.6777227853409225, 0.6430617665979982, 0.6418143411779196, 0.6519696221076392, 0.6219360434446888, 0.6228698514093891, 0.610468222716733, 0.5972096003388306, 0.5936841099112026, 0.5900487925445462, 0.5860061417512764, 0.5783227954589775, 0.5701999434579585, 0.5653231310932596], "accuracy": [0.2572975754737854, 0.47787609696388245, 0.5999207496643066, 0.6229031682014465, 0.6723021864891052, 0.6947563290596008, 0.7025492191314697, 0.7161537408828735, 0.7224937081336975, 0.7327961921691895, 0.737947404384613, 0.7416457533836365, 0.7490423917770386, 0.7494386434555054, 0.7614582180976868, 0.7578919529914856, 0.7560427784919739, 0.7644960880279541, 0.7664773464202881, 0.7666094303131104, 0.7795535326004028, 0.7825914621353149, 0.778761088848114, 0.7832518815994263, 0.7845727205276489, 0.7885351777076721, 0.7844406366348267], "val_loss": [1.6595556054796492, 0.942357097353254, 0.7795918839318412, 0.7115398475102016, 0.6537729331425258, 0.6334849936621529, 0.5724577222551618, 0.5697882175445557, 0.5589256116322109, 0.5419861929757255, 0.5623491150992257, 0.5495609555925641, 0.5163345507213047, 0.492999758039202, 0.49337479046412874, 0.5086344991411481, 0.48200626032693045, 0.46271867411477224, 0.4724221910749163, 0.4650847741535732, 0.4512291806084769, 0.45516996724264963, 0.4526100158691406, 0.45975823061806814, 0.4570720536368234, 0.44653611523764475, 0.4637307269232614], "val_accuracy": [0.5543333292007446, 0.6586666703224182, 0.6816666722297668, 0.7009999752044678, 0.7066666483879089, 0.7206666469573975, 0.750333309173584, 0.7570000290870667, 0.7540000081062317, 0.7630000114440918, 0.7419999837875366, 0.7549999952316284, 0.7613333463668823, 0.7746666669845581, 0.7733333110809326, 0.7593333125114441, 0.7950000166893005, 0.7933333516120911, 0.781000018119812, 0.7876666784286499, 0.7996666431427002, 0.8016666769981384, 0.7879999876022339, 0.7876666784286499, 0.7863333225250244, 0.7963333129882812, 0.7839999794960022]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 4, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.35828572511672974, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 10, 6, 5, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.338142885555287, 2.252999081068098, 2.500335555869543, 2.306205924475875, 2.303350847914644, 2.3030297702030498], "accuracy": [0.21423853933811188, 0.15229164063930511, 0.2020869106054306, 0.09813763201236725, 0.09377889335155487, 0.09668471664190292], "val_loss": [1.7103309971945626, 2.244593620300293, 1.9791363988603865, 1.9743155070713587, 1.9737205505371094, 1.9733916010175432], "val_accuracy": [0.3736666738986969, 0.28866666555404663, 0.1003333330154419, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [2, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.13571429252624512, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301858390185339, 2.302245430234023, 2.302589574777817, 2.3035746273851476, 2.302840068938316, 2.302723691511022, 2.3024169124900045, 2.303828064602726, 2.3017569240750952, 2.3010787156437207, 2.3011393974706276, 2.3011543067722524, 2.3003543772009056, 2.30053198263551, 2.3005889408372067, 2.300071826873596, 2.3000262262578404, 2.2997530275379363, 2.29830630457617, 2.2975840025952055, 2.3001178704106717, 2.299823427433351, 2.2996310078945017, 2.2995920430998273, 2.2983430224544477, 2.299647790314011, 2.2988438515568044, 2.298657167982888, 2.298396468934067, 2.2982993067342212, 2.2975047696551565, 2.299277245959019, 2.2980988388127024, 2.297727419731403, 2.2983774104689596, 2.2978103756038597, 2.2977115574797558, 2.2978548586974763, 2.2963891430238705, 2.296537594851281, 2.2956693076092285, 2.2973319693421645, 2.29487139207812, 2.29591704854057, 2.2978827122605283, 2.2973767973570194, 2.2941012681042277, 2.297627874605408, 2.296893038281738, 2.296712122195275, 2.295602182025025, 2.2941927159104947, 2.295943972551434, 2.2936019566805137, 2.293652264165872, 2.2944103669748643, 2.2936984823521938, 2.2945703502501855, 2.2937592485435667, 2.2944237850188203, 2.2944002815949966, 2.294246161319419, 2.2955072483823065, 2.2931648426839404, 2.293024544639673, 2.2927362168107632, 2.2949218046490416, 2.2921412659044105, 2.2932347819600767, 2.2913456817486377, 2.295068040515737, 2.291919922170512, 2.2922942863243163, 2.2922765789818, 2.2893171528657636, 2.294127922929777, 2.292513444769762, 2.2913252207360895, 2.292929904776762, 2.2935279489838925, 2.293219743671198, 2.2913869645664517, 2.2903161117854514, 2.290973784413084, 2.2901036671013832, 2.2914952273224607, 2.291066142089646, 2.2910750921549434, 2.2894420093785284, 2.291505255829531, 2.2888158978472424, 2.290579498026743, 2.289188674160392, 2.288710008947967, 2.2891743849801065, 2.2905993452791398, 2.2914431964275686, 2.289073185504404, 2.2875095543025616, 2.2893461935776194], "accuracy": [0.09153348207473755, 0.09576013684272766, 0.09047681838274002, 0.08955223858356476, 0.0874389111995697, 0.09245806187391281, 0.09140139818191528, 0.08691058307886124, 0.08968432247638702, 0.09087307006120682, 0.09800554811954498, 0.09430722147226334, 0.09747721254825592, 0.0956280529499054, 0.09509972482919693, 0.0944393053650856, 0.08994849026203156, 0.09866596013307571, 0.10117553919553757, 0.10421344637870789, 0.09509972482919693, 0.09549596905708313, 0.09655263274908066, 0.10434553027153015, 0.10196803510189056, 0.09906221181154251, 0.10091137140989304, 0.10249637067317963, 0.10157178342342377, 0.10038304328918457, 0.10157178342342377, 0.09734513610601425, 0.10434553027153015, 0.10381719470024109, 0.1014397069811821, 0.1002509593963623, 0.09800554811954498, 0.10236428678035736, 0.10777968913316727, 0.10355303436517715, 0.10751552134752274, 0.10157178342342377, 0.10698718577623367, 0.10989301651716232, 0.09932637959718704, 0.10368511080741882, 0.10738343745470047, 0.10553427785634995, 0.10659094154834747, 0.10077928751707077, 0.10513802617788315, 0.1088363528251648, 0.10289261490106583, 0.10711926966905594, 0.10579843819141388, 0.109232597053051, 0.11306300014257431, 0.10632677376270294, 0.10645885765552521, 0.1080438494682312, 0.11174217611551285, 0.10949676483869553, 0.10593052208423615, 0.10777968913316727, 0.11253467202186584, 0.11411966383457184, 0.11187426000833511, 0.11081759631633759, 0.1162329912185669, 0.1212521493434906, 0.108440101146698, 0.11847840249538422, 0.11861048638820648, 0.11861048638820648, 0.12257297337055206, 0.11411966383457184, 0.11319508403539658, 0.11438383162021637, 0.11174217611551285, 0.11557257920503616, 0.11108175665140152, 0.11755382269620895, 0.12798838317394257, 0.11940298229455948, 0.12059172987937927, 0.12521463632583618, 0.11927089840173721, 0.11755382269620895, 0.13129045069217682, 0.11755382269620895, 0.12613920867443085, 0.11834631860256195, 0.12072381377220154, 0.11927089840173721, 0.11953506618738174, 0.12561088800430298, 0.11887465417385101, 0.12112006545066833, 0.12468630075454712, 0.11451591551303864], "val_loss": [1.9708659989493233, 1.970731462751116, 1.9705989701407296, 1.9704642295837402, 1.9703311238970076, 1.9701975413731165, 1.9700635501316615, 1.9699298313685827, 1.9697963169642858, 1.9696629387991769, 1.9695268358503069, 1.9693925040108817, 1.9692585127694267, 1.9691245896475655, 1.9689907346452986, 1.968857765197754, 1.9687256131853377, 1.9685945510864258, 1.968461172921317, 1.968327181679862, 1.9681939397539412, 1.968060084751674, 1.9679264341081892, 1.9677956444876534, 1.9676628793988908, 1.9675299780709403, 1.9673974173409599, 1.967264039175851, 1.9671307972499303, 1.9669977596827917, 1.9668660845075334, 1.9667344774518694, 1.9666037559509277, 1.9664711952209473, 1.9663389069693429, 1.9662072999136788, 1.9660756247384208, 1.9659441539219447, 1.9658125468662806, 1.9656805992126465, 1.9655494689941406, 1.9654168401445662, 1.9652834619794572, 1.9651519911629813, 1.9650205884660994, 1.9648893220084054, 1.9647577830723353, 1.9646269253322057, 1.9644947052001953, 1.9643627575465612, 1.9642308098929269, 1.9640991347176688, 1.963968276977539, 1.9638361930847168, 1.9637039048331124, 1.9635725021362305, 1.9634417125156947, 1.9633094923836845, 1.9631785665239607, 1.9630475044250488, 1.9629149436950684, 1.9627840178353446, 1.9626530238560267, 1.9625214168003626, 1.9623897416251046, 1.9622578620910645, 1.9621265275137765, 1.9619953972952706, 1.9618635177612305, 1.961731229509626, 1.9615997586931502, 1.9614694459097726, 1.9613385881696428, 1.9612080710274833, 1.9610763958522253, 1.9609461511884416, 1.9608156340462821, 1.9606852531433105, 1.960554736001151, 1.9604240826198034, 1.960294587271554, 1.960162912096296, 1.9600320543561662, 1.9599024227687292, 1.9597712925502233, 1.9596425465175085, 1.9595105307442802, 1.9593800136021204, 1.959249428340367, 1.9591185706002372, 1.9589857373918806, 1.9588540622166224, 1.9587228638785226, 1.9585919380187988, 1.958461012159075, 1.9583311080932617, 1.9581996372767858, 1.9580687114170618, 1.9579369000026159, 1.9578056335449219], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.04466666653752327, 0.04633333161473274, 0.04766666516661644, 0.04800000041723251, 0.04800000041723251, 0.04899999871850014, 0.050333332270383835, 0.05066666752099991, 0.05166666582226753, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.060333333909511566, 0.060333333909511566, 0.061000000685453415, 0.06199999898672104, 0.06266666948795319, 0.06366666406393051, 0.06466666609048843, 0.06599999964237213, 0.06566666811704636, 0.06733333319425583, 0.06966666877269745, 0.070333331823349, 0.07133333384990692, 0.07199999690055847, 0.0729999989271164, 0.07333333045244217, 0.07466666400432587, 0.07599999755620956, 0.07666666805744171, 0.07766667008399963, 0.07800000160932541, 0.07800000160932541, 0.07900000363588333, 0.07999999821186066, 0.08166666328907013, 0.08266666531562805, 0.08366666734218597, 0.08533333241939545, 0.08699999749660492, 0.08766666799783707, 0.08866667002439499, 0.08900000154972076, 0.09099999815225601, 0.09233333170413971, 0.09266666322946548, 0.09333333373069763, 0.09433333575725555, 0.0949999988079071, 0.09533333033323288, 0.09666666388511658, 0.09799999743700027, 0.1003333330154419, 0.10066666454076767, 0.10300000011920929, 0.10366666316986084, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.109333336353302, 0.11133333295583725, 0.11266666650772095, 0.1133333370089531, 0.1146666631102562, 0.11666666716337204, 0.11733333021402359, 0.11866666376590729, 0.11866666376590729, 0.11933333426713943, 0.12066666781902313, 0.12099999934434891, 0.12200000137090683, 0.12399999797344208, 0.12533333897590637, 0.12600000202655792, 0.1263333261013031, 0.12666666507720947, 0.1276666671037674, 0.12866666913032532, 0.12966667115688324, 0.1303333342075348, 0.13199999928474426, 0.13366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 4, 0, 2, 9, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [10, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 4, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 12, 5, 4, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.math.negative(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 2, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.4644203642655076, 14.544122379249066, 40.52174011994315, 84.99591222462512, 151.2978022430142, 247.19707355894795], "accuracy": [0.09694888442754745, 0.10038304328918457, 0.09959053993225098, 0.10698718577623367, 0.09655263274908066, 0.10130762308835983], "val_loss": [5.022316523960659, 16.82879420689174, 38.94046129499163, 73.97979082380023, 125.08245849609375, 195.65036010742188], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 4, 0, 2, 0, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1], [3, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [42.12523347398372, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.036983225494623184, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [36649.73883928572, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 3, 6, 0, 9, 0, 2, 3, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 2, 13, 13, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [3, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027938220321764, 2.30296050820447, 2.3028993547994068, 2.3030264687150805, 2.3029643360964767, 2.3029246314515714, 2.3029768626923888, 2.3029151230818243], "accuracy": [0.09509972482919693, 0.09747721254825592, 0.09311848133802414, 0.09325055778026581, 0.09681680053472519, 0.09496764093637466, 0.09259014576673508, 0.09694888442754745], "val_loss": [1.973726681300572, 1.973639896937779, 1.9736270223345076, 1.973682267325265, 1.9736549513680595, 1.9736805643354143, 1.9736455508640833, 1.9736740248543876], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.10133333504199982, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 6, 0, 2, 0, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [41, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 2, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [42.12540681672969, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.036983225494623184, 0.10302469879388809, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [36649.791294642855, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 3, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [52, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0], [1, 3, 9, 0, 1, 9], [0, 0, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302341906244351, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 6, 2, 0, 2, 1, 2, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 28, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [3, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(alpha, beta))", "other_info": {"loss": [588139878961367.5, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.047285694628953934, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 1, 0, 9, 0, 2, 1, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 2, 0, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302222775682372, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 6, 0, 2, 1, 9, 2, 2, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 5, 3, 3, 0], [38, 43, 6], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.09771428257226944, "mapping_values": [1, 6, 6, 4, 2, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3018189978054755, 2.3017518345894925, 2.3012982554140344, 2.3012987012325294, 2.2997914849806453, 2.2994654506755903, 2.299802418099009, 2.3003068268495923, 2.300119057811404, 2.301120974872374, 2.3010543357615836], "accuracy": [0.09140139818191528, 0.09496764093637466, 0.09576013684272766, 0.09681680053472519, 0.10487385839223862, 0.10077928751707077, 0.10606260597705841, 0.09813763201236725, 0.09840179979801178, 0.09496764093637466, 0.0956280529499054], "val_loss": [1.9707377297537667, 1.9700771740504675, 1.969320229121617, 1.969036374773298, 1.9689181191580636, 1.9693522453308105, 1.9701612336294991, 1.9708126613071986, 1.9713919503348214, 1.9719922883169991, 1.972597258431571], "val_accuracy": [0.04266666620969772, 0.05166666582226753, 0.06833333522081375, 0.09233333170413971, 0.109333336353302, 0.11566666513681412, 0.10966666787862778, 0.10466666519641876, 0.09133332967758179, 0.08266666531562805, 0.08966666460037231]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 2, 6, 0, 4, 0, 8, 1, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 43, 6], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.07199999690055847, "mapping_values": [1, 13, 13, 8, 5, 1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(alpha)))), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301828168843322, 2.301942278885051, 2.3021043514641693, 2.303347003426865, 2.3026094343117154, 2.3024103821008874, 2.3022383493187406, 2.302465930039841, 2.301944294657296, 2.3027820892936095, 2.302644294691659, 2.302992025874688, 2.3030502913634634, 2.302899223702254, 2.302573588136606, 2.3025252725532925, 2.302559180927944, 2.3025570301221676, 2.3025579002192935], "accuracy": [0.09126931428909302, 0.0944393053650856, 0.09245806187391281, 0.08942015469074249, 0.0936468094587326, 0.08757099509239197, 0.09734513610601425, 0.08955223858356476, 0.09206181764602661, 0.08651433140039444, 0.08308017253875732, 0.08189142495393753, 0.07898560166358948, 0.09655263274908066, 0.10421344637870789, 0.11266675591468811, 0.10857218503952026, 0.10579843819141388, 0.1018359512090683], "val_loss": [1.970794745853969, 1.970531667981829, 1.9707119124276298, 1.9715431077139718, 1.9718103408813477, 1.9720749855041504, 1.9722541400364466, 1.9724958964756556, 1.9729681696210588, 1.9734512056623186, 1.9737256595066615, 1.9737742287772042, 1.97370788029262, 1.9735852650233678, 1.97354337147304, 1.9735814503261022, 1.9736127172197615, 1.973641804286412, 1.9736918721880232], "val_accuracy": [0.04233333468437195, 0.04933333396911621, 0.05700000002980232, 0.06433333456516266, 0.0729999989271164, 0.07833333313465118, 0.07866666465997696, 0.07433333247900009, 0.07433333247900009, 0.07500000298023224, 0.0806666687130928, 0.0963333323597908, 0.10633333027362823, 0.10833333432674408, 0.10499999672174454, 0.1003333330154419, 0.09866666793823242, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [4, 2, 6, 0, 4, 0, 8, 1, 3, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 2, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [3, 5, 3, 3, 0], [38, 43, 6], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [4, 3, 7, 1, 8, 2, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.061714284121990204, "mapping_values": [1, 17, 17, 10, 7, 2, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(alpha))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30118860283296, 2.300708344678333, 2.301913880936584, 2.3031370253091192, 2.30237908269499, 2.302604738936338, 2.302858205440573, 2.303240001036302, 2.3039512024296114, 2.305420478604898, 2.3088775650070263], "accuracy": [0.09232597798109055, 0.10236428678035736, 0.09166556596755981, 0.07396645098924637, 0.0866464152932167, 0.09298639744520187, 0.11966715008020401, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9702284676688058, 1.971658161708287, 1.9731636047363281, 1.973423957824707, 1.9735705511910575, 1.973839351109096, 1.9740845816476005, 1.9745417322431291, 1.9754366193498885, 1.97726651600429, 1.982534340449742], "val_accuracy": [0.06733333319425583, 0.10333333164453506, 0.08666666597127914, 0.09933333098888397, 0.09933333098888397, 0.14300000667572021, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 3, 6, 0, 4, 3, 9, 1, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 1, 2, 2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [92, 64, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 1, 3, 3, 0], [38, 43, 6], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 3, 7, 1, 8, 2, 2, 1], [1, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 1, 2], [12, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 5, 3, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), alpha))", "other_info": {"loss": [2.3019154993550273, 2.3024459457069955, 2.302928215288105, 2.304059547786589, 2.303463365549519, 2.3034928675419652], "accuracy": [0.09153348207473755, 0.09536388516426086, 0.08994849026203156, 0.0886276587843895, 0.08625016361474991, 0.09126931428909302], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]