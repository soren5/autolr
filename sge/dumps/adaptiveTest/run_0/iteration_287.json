[{"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8502857089042664, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9524261811626364, 1.0255476359000941, 0.7666706061948954, 0.6723934333038809, 0.6121854396181934, 0.5720206789447017, 0.5328845206134906, 0.5012772944640836, 0.4832449366568952, 0.4594717174748766, 0.43854763020204435, 0.4159272688766591, 0.42049857106080946, 0.4018417259784281, 0.38704273420758867, 0.3737076000451821, 0.37206582859081755, 0.3576816967166316, 0.34603026341988885, 0.3327833625579381, 0.32325433410547666, 0.3123009184041059, 0.30185207130965336, 0.29635145833164456, 0.2954559687846341, 0.283444070584581, 0.2740816881730336, 0.27580163040260014, 0.26386328137797954, 0.25168240929457647, 0.24351714935442553, 0.2334916006147334, 0.2313599420233866, 0.22374416979084147, 0.22142494567995294], "accuracy": [0.3431515097618103, 0.6338660717010498, 0.709021270275116, 0.7449478507041931, 0.772288978099823, 0.7887993454933167, 0.8005547523498535, 0.8131026029586792, 0.8253863453865051, 0.8327829837799072, 0.8384625315666199, 0.8492933511734009, 0.845859169960022, 0.8548408150672913, 0.8560295701026917, 0.8627657890319824, 0.8627657890319824, 0.8642187118530273, 0.8747853636741638, 0.8713511824607849, 0.8798044919967651, 0.884691596031189, 0.8887861371040344, 0.8889182209968567, 0.8850878477096558, 0.8960506916046143, 0.8953903317451477, 0.8957865834236145, 0.9013340473175049, 0.9014661312103271, 0.9051644206047058, 0.9103156924247742, 0.9101836085319519, 0.9165235757827759, 0.9171839952468872], "val_loss": [0.8361399173736572, 0.6208417415618896, 0.5352213553019932, 0.4884019579206194, 0.4632091692515782, 0.43622073105403353, 0.42052353279931204, 0.39775719812938143, 0.38797461135046823, 0.37312499965940205, 0.36010403292519705, 0.3547945533479963, 0.3492331675120762, 0.33438446692058016, 0.32588585785457064, 0.3268578222819737, 0.3352493473461696, 0.31425195932388306, 0.313997106892722, 0.3082882506506784, 0.30242860317230225, 0.30012559039252146, 0.30873584747314453, 0.3097924419811794, 0.30316793067114695, 0.2946797864777701, 0.3096274733543396, 0.29139290537152973, 0.29271181992122103, 0.29470237663814, 0.2922118476458958, 0.2975629482950483, 0.29389900820595877, 0.3010863321168082, 0.2951802441052028], "val_accuracy": [0.6470000147819519, 0.7306666374206543, 0.7606666684150696, 0.7763333320617676, 0.7910000085830688, 0.8003333210945129, 0.8050000071525574, 0.8270000219345093, 0.8263333439826965, 0.8356666564941406, 0.8396666646003723, 0.843666672706604, 0.843666672706604, 0.8579999804496765, 0.8586666584014893, 0.8550000190734863, 0.8519999980926514, 0.8619999885559082, 0.8586666584014893, 0.8690000176429749, 0.8659999966621399, 0.8679999709129333, 0.8606666922569275, 0.8603333234786987, 0.8713333606719971, 0.8690000176429749, 0.8656666874885559, 0.8646666407585144, 0.8756666779518127, 0.8786666393280029, 0.8723333477973938, 0.8733333349227905, 0.8776666522026062, 0.8723333477973938, 0.8763333559036255]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 9, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.847428560256958, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.950936675858992, 1.0172845047258068, 0.7632633823335069, 0.6687346704805123, 0.612830095373959, 0.572965230971374, 0.5339146635677553, 0.5052919962922297, 0.4856527373854038, 0.4663792601421824, 0.44076229697441494, 0.42606320619787824, 0.42762512542536674, 0.4094115581140542, 0.38935780386253355, 0.3762644629877761, 0.3678583506784576, 0.35633963055582946, 0.34618345699715275, 0.3318816874761308, 0.3199300437775963, 0.3124852628440842, 0.30551807069665077], "accuracy": [0.34262317419052124, 0.639809787273407, 0.7160216569900513, 0.7474573850631714, 0.7726852297782898, 0.7862898111343384, 0.8038568496704102, 0.8120459914207458, 0.8235371708869934, 0.8284242749214172, 0.837141752243042, 0.8430854678153992, 0.8422929644584656, 0.8531237840652466, 0.8535200357437134, 0.8617091774940491, 0.8658037185668945, 0.8667283058166504, 0.8713511824607849, 0.8754457831382751, 0.8772949576377869, 0.8815215826034546, 0.8879936337471008], "val_loss": [0.8505949463163104, 0.6244949953896659, 0.5329242263521466, 0.4871336391993931, 0.46699350220816477, 0.440449731690543, 0.4214767132486616, 0.3965305004801069, 0.3996767146246774, 0.37424283368246897, 0.36017733812332153, 0.35993111985070364, 0.35617213589804514, 0.340480591569628, 0.33022964000701904, 0.33111870288848877, 0.3318097931998117, 0.31159948451178415, 0.3125298874718802, 0.31356278487614225, 0.3017638070242746, 0.3017163702419826, 0.3116082378796169], "val_accuracy": [0.6496666669845581, 0.7350000143051147, 0.7570000290870667, 0.7749999761581421, 0.7900000214576721, 0.79666668176651, 0.8063333630561829, 0.8293333053588867, 0.8180000185966492, 0.8336666822433472, 0.8416666388511658, 0.846666693687439, 0.8379999995231628, 0.8539999723434448, 0.8513333201408386, 0.8529999852180481, 0.8553333282470703, 0.8676666617393494, 0.8636666536331177, 0.8659999966621399, 0.8629999756813049, 0.8669999837875366, 0.8633333444595337]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 3, 7, 0, 1, 9], [4, 0, 0, 2, 0], [36, 57, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.28771427273750305, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.973282682676798, 2.300066939528907, 2.5063440093054448, 2.3040929866614928, 2.303114057012348, 2.303050854832442, 2.3029783805914685], "accuracy": [0.15995244681835175, 0.12230881303548813, 0.1484612375497818, 0.09840179979801178, 0.09602430462837219, 0.09536388516426086, 0.09589222073554993], "val_loss": [1.986166136605399, 1.878605910709926, 1.975733688899449, 1.9740236827305384, 1.9737341063363212, 1.9736794063023158, 1.9736405781337194], "val_accuracy": [0.09966666996479034, 0.28833332657814026, 0.10066666454076767, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 7, 2, 1, 9, 7, 0], [4, 0, 3, 5, 0, 1], [36, 49, 6], [1, 1, 0], [1], [8], [4], [64], [0, 1, 0, 1, 1], [0, 7, 6, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10971428453922272, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.negative(tf.math.add(beta, grad)))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [63330441473.098595, 2949093375054.3115, 23124753195048.035, 90034949938038.98, 249197118014788.2, 554139294176857.75, 1132005378182554.0, 2017049978145187.0, 3273896666646226.5, 5087222155417840.0, 7742053504209390.0, 1.1094810840511e+16, 1.5706158654655112e+16, 2.1201038894615596e+16, 2.757023217213433e+16, 3.731369516964464e+16, 4.752537397105014e+16, 5.937478854064232e+16, 7.411352813495318e+16, 9.358454778524989e+16, 1.1316696291112914e+17, 1.378270477765679e+17, 1.627105400772677e+17, 1.987008853925855e+17], "accuracy": [0.09325055778026581, 0.09760929644107819, 0.09708096832036972, 0.10170386731624603, 0.09615638852119446, 0.10091137140989304, 0.1010434553027153, 0.10038304328918457, 0.09906221181154251, 0.10170386731624603, 0.09721305221319199, 0.09998679161071777, 0.09985470771789551, 0.10170386731624603, 0.09853387624025345, 0.09932637959718704, 0.09589222073554993, 0.09721305221319199, 0.10355303436517715, 0.09774138033390045, 0.09787346422672272, 0.09642054885625839, 0.10394927859306335, 0.09681680053472519], "val_loss": [348650583771.4286, 6216741814272.0, 32517183017545.145, 104247223311213.72, 256396701017234.28, 533873964351488.0, 991472415707721.1, 1693753869261677.8, 2715092030324736.0, 4139584275948690.5, 6061085151835867.0, 8583082892029367.0, 1.1818764303597568e+16, 1.5890991221009846e+16, 2.0932234240926868e+16, 2.7084560144082068e+16, 3.4499973958748452e+16, 4.333988301017673e+16, 5.377484351752485e+16, 6.598531528096856e+16, 8.016114689919269e+16, 9.650173038821376e+16, 1.152161668444043e+17, 1.3652281976789402e+17], "val_accuracy": [0.09966666996479034, 0.0976666659116745, 0.0989999994635582, 0.10100000351667404, 0.10199999809265137, 0.10266666859388351, 0.10300000011920929, 0.10333333164453506, 0.10366666316986084, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10400000214576721, 0.10433333367109299, 0.10433333367109299, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246, 0.10599999874830246]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 0, 2, 8, 1, 2], [4, 2, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [24084394044.525352, 781583211140.6155, 5380346685267.146, 20439127441280.32, 55910249343893.83, 123258793617838.92], "accuracy": [0.1010434553027153, 0.0948355570435524, 0.09655263274908066, 0.10368511080741882, 0.1006472036242485, 0.1006472036242485], "val_loss": [123754264283.42857, 1953681262884.5715, 9846127142034.285, 31048168786212.57, 75697705676214.86, 156823545371501.72], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0], [6, 3, 7, 0, 1, 9], [3, 0, 3, 5, 0], [30, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [6.752103627680661, 213249.83160399584, 17613353.366001848, 38829786.25148594, 16739286.628186502, 53095462.05151235, 101041785.49517897, 149159428.38938054], "accuracy": [0.09391097724437714, 0.10091137140989304, 0.09840179979801178, 0.09998679161071777, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [142.93162318638392, 2332602.4285714286, 43974856.0, 17816314.85714286, 27875705.14285714, 69088582.85714285, 110301465.14285715, 151514336.0], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 6, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0], [0, 0, 5, 2, 4, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [1, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 1, 7, 0, 1, 9], [3, 0, 3, 5, 1], [36, 88, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.3616779368380534e+28, 2.48626619127198e+30, 9.08344442738646e+32, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09760929644107819, 0.09998679161071777, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.76298947291311e+28, 2.2438423799091742e+31, 9.976025754989678e+33, NaN, NaN, NaN, NaN], "val_accuracy": [0.09233333170413971, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [9, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019969396272497, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 0, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [0, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [4, 9, 2, 0, 1, 9], [4, 3, 1, 5, 2], [66, 55, 6], [1, 1, 0], [1], [8], [3], [64], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [1, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [85.24804008477841, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04253070801496506, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5424988.285714285, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 2, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [0, 0, 2], [6, 32, 85]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.356731777067717, 3.054309041130702, 4.8684803997725545, 8.00659363985597, 12.383216013446727, 17.760141130073777], "accuracy": [0.09087307006120682, 0.1010434553027153, 0.10302469879388809, 0.10077928751707077, 0.09932637959718704, 0.10011887550354004], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0], [2, 0, 4, 8, 1, 9], [3, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.06257142871618271, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.220901798972081, 3.1316113349799672, 2.3563711129915226, 2.3463436758607967, 2.357430149015891, 2.331582571741864], "accuracy": [0.17633073031902313, 0.10579843819141388, 0.10130762308835983, 0.09932637959718704, 0.10421344637870789, 0.09668471664190292], "val_loss": [2.0141493252345493, 1.992013795035226, 2.016688142504011, 1.985353878566197, 1.9821784155709403, 2.021146161215646], "val_accuracy": [0.14933332800865173, 0.1003333330154419, 0.0989999994635582, 0.10599999874830246, 0.11433333158493042, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 3, 2, 0, 9, 9], [3, 0, 3, 3, 0], [67, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.06142857298254967, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2207183235152335, 3.085885236480878, 2.390714846267015, 2.3486852939055503, 2.3593030077607136, 2.3592898821109607], "accuracy": [0.17633073031902313, 0.10540219396352768, 0.09866596013307571, 0.09972262382507324, 0.10210011899471283, 0.10249637067317963], "val_loss": [2.014293806893485, 1.9928085463387626, 1.9958481788635254, 2.002067906515939, 2.0023233549935475, 2.0221384593418668], "val_accuracy": [0.14433333277702332, 0.1003333330154419, 0.09933333098888397, 0.10400000214576721, 0.10766666382551193, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0], [0, 0, 5, 2, 4, 9], [4, 0, 3, 5, 0], [96, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.06028571352362633, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.22065792432031, 2.9731776314388885, 2.357714109007614, 2.351708011730488, 2.344699383758204, 2.3494153163845923], "accuracy": [0.17699114978313446, 0.10857218503952026, 0.10130762308835983, 0.09945846349000931, 0.10236428678035736, 0.09787346422672272], "val_loss": [2.0145948273794994, 1.995539665222168, 2.022554397583008, 2.01054893221174, 1.9985744612557548, 2.0013880729675293], "val_accuracy": [0.14266666769981384, 0.1003333330154419, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 3, 7, 0, 1, 9], [4, 0, 3, 5, 0], [36, 49, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 0, 2], [6, 32, 85]], "fitness": -0.057428572326898575, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2198141619450915, 3.05362465123081, 2.3511359537313834, 2.333552686088924, 2.3461917597367985, 2.3444537373581706], "accuracy": [0.17712323367595673, 0.10962884873151779, 0.09866596013307571, 0.1022322028875351, 0.10566636174917221, 0.10381719470024109], "val_loss": [2.014141491481236, 1.9943013872419084, 2.005427769252232, 1.999030658176967, 1.9795560836791992, 1.9958573068891252], "val_accuracy": [0.1586666703224182, 0.1003333330154419, 0.10133333504199982, 0.10633333027362823, 0.11100000143051147, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 2, 9, 6, 2, 0, 3, 5, 2], [2, 2, 0, 2, 2, 0, 0, 1, 2, 1, 3, 2, 2, 0, 3, 2, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [70, 82, 84, 57, 93, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [6, 6, 7, 0, 1, 9], [3, 0, 3, 5, 0], [36, 29, 6], [1, 1, 0], [1], [8], [3], [64], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.302369821309382, 2.302189822745534, 2.3021113370246167, 2.3019540137650076, 2.3021943596580545, 2.3009393303984145], "accuracy": [0.09166556596755981, 0.08875974267721176, 0.09298639744520187, 0.09734513610601425, 0.0936468094587326, 0.09192973375320435], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]