[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [2, 3, 8, 2, 9], [2, 5, 3], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3], [6]], "fitness": -0.34371429681777954, "mapping_values": [1, 2, 2, 2, 0, 1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.234929950308759, 2.3037338121109605, 2.3027603399830725, 2.555024864934675, 2.2966909080747726, 2.225190706477268, 2.2932237767272574, 2.329830667991774, 2.3041683609428, 2.3033999740770383, 2.3028663761973807, 2.303063539796738], "accuracy": [0.1950865089893341, 0.09853387624025345, 0.10210011899471283, 0.15678246319293976, 0.1298375427722931, 0.15400871634483337, 0.109232597053051, 0.14370624721050262, 0.09602430462837219, 0.09866596013307571, 0.1010434553027153, 0.09840179979801178], "val_loss": [1.9756321225847517, 1.9738424164908273, 1.971069608415876, 1.971702711922782, 1.925140653337751, 1.9742349897112166, 1.7562311717442103, 1.9750657762799944, 1.9740828105381556, 1.9738080842154366, 1.9737399646214075, 1.9737498419625419], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.17900000512599945, 0.18000000715255737, 0.1223333328962326, 0.3216666579246521, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [0], [1], [], [5], [], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.3368571400642395, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.242091344820274, 2.303885069411145, 2.3031890367425554, 2.298091305402827, 2.284357891453098, 2.2019401216834464, 2.3221876805783768, 2.304933593226241, 2.304103099910921], "accuracy": [0.1946902722120285, 0.09747721254825592, 0.10051512718200684, 0.11887465417385101, 0.16853784024715424, 0.18518029153347015, 0.1578391194343567, 0.0944393053650856, 0.09496764093637466], "val_loss": [1.9757875033787318, 1.9739586966378349, 1.9728632654462541, 1.9299936975751604, 1.9764330046517509, 1.9555751936776298, 1.9759445190429688, 1.9740495681762695, 1.9740986142839705], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.15666666626930237, 0.10066666454076767, 0.10999999940395355, 0.10133333504199982, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.3091428577899933, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2350329535276097, 2.3038569589127893, 2.303025818267881, 2.2833883104826938, 2.4502110294205495, 2.3034175858127917, 2.2975664923550383, 2.3354128610976006, 2.303948654868363], "accuracy": [0.19442610442638397, 0.09655263274908066, 0.09906221181154251, 0.14198917150497437, 0.11081759631633759, 0.09945846349000931, 0.10936468094587326, 0.15968827903270721, 0.09628847241401672], "val_loss": [1.97589111328125, 1.9739007268633162, 1.9723433085850306, 2.411573886871338, 1.975318159375872, 1.9728518894740514, 1.9383553777422224, 1.9748224530901228, 1.9739928926740373], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.3006666600704193, 0.10066666454076767, 0.10066666454076767, 0.28566667437553406, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.2874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.232803276265066, 2.303649949265383, 2.301671446086141, 2.251126124449158, 2.2528768744309344, 2.242020952640161, 2.303595179784662, 2.3031536419913436], "accuracy": [0.1946902722120285, 0.09774138033390045, 0.10408136248588562, 0.14172500371932983, 0.14912164211273193, 0.17131158709526062, 0.0944393053650856, 0.1006472036242485], "val_loss": [1.9755857331412179, 1.973811081477574, 1.960996423448835, 1.9727982793535506, 1.8461546216692244, 1.9745943205697196, 1.973747389657157, 1.9736948013305664], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.27933332324028015, 0.10566666722297668, 0.1850000023841858, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 4, 1, 6, 4, 8], [3, 0, 1, 2, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [3, 2, 8, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [5, 1, 0, 4], [46, 55, 6], [0], [1], [], [4], [6], [0, 1], [0, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.27142858505249023, "mapping_values": [1, 13, 13, 6, 7, 3, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.232907665939442, 2.3036176230315095, 2.3021511553206446, 2.2768728940588625, 2.2994230889436387, 2.303924450044855, 2.303287584201267, 2.3030776017062684], "accuracy": [0.19482234120368958, 0.09853387624025345, 0.10579843819141388, 0.14132875204086304, 0.14093250036239624, 0.09893012791872025, 0.1018359512090683, 0.09760929644107819], "val_loss": [1.9755860737391882, 1.9738751138959612, 1.9659513064793177, 1.930692400251116, 1.9749918665204729, 1.973876953125, 1.9736667360578264, 1.973672866821289], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.16966666281223297, 0.14900000393390656, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [45, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 0, 5, 3, 1], [41, 55, 61], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.2694285809993744, "mapping_values": [1, 1, 1, 1, 0, 1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), grad))), tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.240866483966231, 2.30386651423566, 2.3031678667409845, 2.2954927960784914, 3.130434545779729, 2.3490172022951907, 2.3048008056033984, 2.3031862416303297, 2.3030859349567847, 2.3029639542992437], "accuracy": [0.19495442509651184, 0.09655263274908066, 0.09998679161071777, 0.12495046854019165, 0.1472724825143814, 0.12759213149547577, 0.09747721254825592, 0.09734513610601425, 0.09008057415485382, 0.09417514503002167], "val_loss": [1.975773538861956, 1.9739509310041154, 1.972781045096261, 1.8685430799211775, 1.8568613188607352, 1.9768942424229212, 1.9742140088762556, 1.9737673486982072, 1.973780836377825, 1.9737367630004883], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.13966666162014008, 0.19733333587646484, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0], [3], [41, 55], [0], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.21142856776714325, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8068947507374324, 2.31960865768223, 2.3036082348000373, 2.3025161002872956, 2.2259699444272627, 2.3812254257111456, 2.3038563929560194, 2.3033408147469014, 2.3031286326980136, 2.3031919290675873], "accuracy": [0.22837141156196594, 0.10276053100824356, 0.10328886657953262, 0.10289261490106583, 0.16880200803279877, 0.11900673806667328, 0.10328886657953262, 0.09959053993225098, 0.09628847241401672, 0.09549596905708313], "val_loss": [2.0378767422267368, 1.9745920726231165, 1.973400456564767, 1.9703465870448522, 1.9156755719866072, 1.9751840318952287, 1.9739552225385393, 1.9737490926470076, 1.9736801556178503, 1.9736586979457311], "val_accuracy": [0.10133333504199982, 0.1003333330154419, 0.10000000149011612, 0.17133332788944244, 0.1783333271741867, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 2, 4, 6, 9, 8, 1, 6, 3, 5, 6, 0, 3, 9, 8, 4, 8, 8, 5, 6, 9], [1, 3, 1, 1, 2, 0, 2, 2, 4, 4, 0, 3, 5, 2], [22, 86, 33, 13], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.2014285773038864, "mapping_values": [1, 2, 2, 1, 1, 0, 30, 30, 21, 9, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))))), tf.math.square(beta)), tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.8084810702178173, 2.32412534861627, 2.3039300413085106, 2.3030254406904453, 2.3025458984843588, 2.277390497267097, 2.297961636336567, 2.26168879730795, 2.304763607266494, 2.304463808924814, 2.3021440416861836, 2.2615744520597265, 2.5060859088333385, 2.3059581448420587, 2.303507322963392, 2.3029066185830938, 2.302989523912449], "accuracy": [0.22863557934761047, 0.10117553919553757, 0.09932637959718704, 0.09536388516426086, 0.1088363528251648, 0.1674811840057373, 0.11755382269620895, 0.16589617729187012, 0.09893012791872025, 0.09668471664190292, 0.10315678268671036, 0.17078325152397156, 0.14634791016578674, 0.09708096832036972, 0.09985470771789551, 0.09998679161071777, 0.09853387624025345], "val_loss": [2.0487595966884067, 1.9748007910592216, 1.9737917355128698, 1.9734214373997279, 1.9719651767185755, 1.9764525549752372, 1.974137851170131, 1.9768813678196497, 1.974280561719622, 1.9736512047903878, 1.9699784006391252, 1.839259079524449, 1.979393414088658, 1.9745497022356306, 1.9738762719290597, 1.9737961632864816, 1.9736966405596053], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.10133333504199982, 0.17000000178813934, 0.10133333504199982, 0.10133333504199982, 0.1459999978542328, 0.10700000077486038, 0.2226666659116745, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [1, 0, 1, 1, 2, 0, 0, 1], [18, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0], [5], [], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.19571428000926971, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.2330082441916193, 2.3037070795025696, 2.3027307706313156, 2.331967902898379, 2.235099872625137, 2.30917253454584, 2.303733007357719, 2.303012544767747, 2.3034121891007118], "accuracy": [0.1942940205335617, 0.09972262382507324, 0.10276053100824356, 0.15400871634483337, 0.1608770340681076, 0.10117553919553757, 0.09430722147226334, 0.09602430462837219, 0.09100515395402908], "val_loss": [1.9756103924342565, 1.9738997050694056, 1.9708403178623743, 1.9826279367719377, 1.9844714573451452, 1.9750494956970215, 1.973855767931257, 1.973703248160226, 1.9737966401236398], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [0], [1], [], [4], [], [0], [1], [], [4], [], [1, 1], [0, 1, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 4, 1, 6, 4, 8], [3, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 5, 5, 6, 6, 4, 7, 8, 6, 5, 8, 9, 5, 1, 1, 6, 4, 0], [1, 3, 1, 1, 2, 0, 2, 2, 4, 4, 0, 3, 5, 2], [42, 42, 66], [0], [1], [], [5], [6], [0, 1], [0, 4, 5, 2, 9], [2], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 19, 11, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(grad, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), beta)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [3, 0, 1, 2, 2, 0, 0, 1], [18, 83, 84, 57], [0], [1], [1, 2, 6, 6, 4, 8, 1, 6, 3, 5, 8, 0, 3, 0, 8, 4, 8, 8, 4, 6], [5], [42, 42], [0], [1], [], [1], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [44, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 5, 5, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1], [48, 55], [0, 0, 1], [0, 1], [2], [4], [], [0, 1, 0, 0, 0, 0, 1, 1], [6, 4, 5, 2, 9], [3, 0, 3], [6, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 7, 4, 1, 3, 2, 1, 1, 0, 8, 5, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.square(grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.square(tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09074098616838455, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 4, 1, 6, 4, 8], [2, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 2, 6, 6, 2, 9, 1, 6, 3, 5, 8, 2, 4, 0, 8, 4, 8, 2, 4, 6, 9, 6, 5], [1, 3, 1, 1, 2, 1, 2, 2, 3, 4, 0, 3, 5, 2], [42, 42, 28], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [8, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 6, 7, 3, 37, 37, 23, 14, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(alpha), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0], [1], [], [2], [], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [7, 1, 5, 2, 9], [3, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 4, 1, 6, 4, 8], [2, 2, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [1, 2, 6, 6, 4, 8, 5, 3, 3, 5, 8, 0, 3, 0, 8, 2, 2, 8, 4, 2], [1, 3, 1, 1, 2, 0, 2, 3, 4, 4, 0, 3, 5, 2], [42, 42], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 20, 13, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), tf.math.multiply(tf.math.add(beta, tf.math.multiply(alpha, tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.366963767860512, 3.0423353116714784, 4.907127413436674, 7.97539568444946, 12.268464542540578, 17.785973444716838], "accuracy": [0.08955223858356476, 0.1018359512090683, 0.09787346422672272, 0.09932637959718704, 0.09774138033390045, 0.10091137140989304], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 4, 1, 8, 5], [2, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 3, 3, 9, 1, 9, 0, 3, 2, 2, 0, 2, 3, 3, 9, 9, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1, 2, 0, 0, 0, 0], [41, 55, 0, 10, 15, 73, 85], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [0, 4, 5, 2, 9], [0, 0], [6]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.366963767860512, 3.0423353116714784, 4.907127413436674, 7.97539568444946, 12.268464542540578, 17.785973444716838], "accuracy": [0.08955223858356476, 0.1018359512090683, 0.09787346422672272, 0.09932637959718704, 0.09774138033390045, 0.10091137140989304], "val_loss": [2.0900934764317105, 2.7702065195356096, 4.2821036747523715, 6.584317479814802, 9.648905072893415, 13.518445696149554], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 5, 8, 6, 5], [2, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0], [1], [], [2], [], [0], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [5, 1, 5, 2, 9], [3], []], "fitness": -0.07028571516275406, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3028809108817265, 2.301605633520384, 2.301709568149394, 2.3011470767154574, 2.2997869765045245, 2.2995543994167935, 2.2995833433252266, 2.2998680720759452, 2.3003437048912425, 2.2988795635801313, 2.2996966812699116, 2.2995663205661856, 2.3000357374302887, 2.300270083652527, 2.2999414652881214, 2.300390038681131], "accuracy": [0.08902391046285629, 0.09074098616838455, 0.08809932321310043, 0.08625016361474991, 0.09932637959718704, 0.09694888442754745, 0.09959053993225098, 0.09496764093637466, 0.0952318087220192, 0.10130762308835983, 0.10077928751707077, 0.10038304328918457, 0.09945846349000931, 0.09985470771789551, 0.09655263274908066, 0.09470347315073013], "val_loss": [1.9704842567443848, 1.9699668203081404, 1.969648974282401, 1.96958099092756, 1.9696228844778878, 1.9697991098676408, 1.9698420933314733, 1.9697267668587821, 1.9696790831429618, 1.969717298235212, 1.96982056753976, 1.9699875967843192, 1.970207759312221, 1.9703965187072754, 1.970527103969029, 1.970677307673863], "val_accuracy": [0.04633333161473274, 0.0533333346247673, 0.05766666680574417, 0.061000000685453415, 0.06533333659172058, 0.06866666674613953, 0.07266666740179062, 0.07400000095367432, 0.07633333653211594, 0.08399999886751175, 0.08566666394472122, 0.08399999886751175, 0.07966666668653488, 0.07466666400432587, 0.07500000298023224, 0.07433333247900009]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [3, 7, 4, 1, 6, 4, 8], [3, 0, 1, 2, 2, 0, 0, 1], [13, 87, 84], [0], [1], [8, 3, 5, 5], [3], [], [1], [1], [], [4], [], [0, 1], [0, 1, 5, 2, 9], [3], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303188520006264, 2.3027574704575455, 2.3035451212673768, 2.3031857419936665, 2.3020747019677446, 2.3015754254045993], "accuracy": [0.08849557489156723, 0.08942015469074249, 0.08558975160121918, 0.08308017253875732, 0.09285431355237961, 0.09060890227556229], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [5, 9, 4, 1, 8, 5], [2, 0, 1, 1, 2, 0, 0, 1], [75, 83, 84, 57], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [3, 2, 2, 3, 9, 1, 9, 0, 3, 2, 2, 8, 7, 3, 3, 9, 4, 0, 6, 2, 3, 0, 0, 5, 8, 8, 9], [4, 5, 5, 4, 1], [39, 55], [1], [1], [], [4], [], [0, 1], [0, 4, 5, 2, 9], [3, 0], [6]], "fitness": -0.035999998450279236, "mapping_values": [1, 2, 2, 2, 0, 1, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303188520006264, 2.3027574704575455, 2.3035451212673768, 2.3031857419936665, 2.3020747019677446, 2.3015754254045993], "accuracy": [0.08849557489156723, 0.08942015469074249, 0.08558975160121918, 0.08308017253875732, 0.09285431355237961, 0.09060890227556229], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]