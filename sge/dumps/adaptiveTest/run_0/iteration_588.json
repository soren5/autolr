[{"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8494285941123962, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 10, 8, 5, 3, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0328688615695154, 1.1512269804175692, 0.7992396521184107, 0.7147478286883991, 0.6514561130952967, 0.598874124813357, 0.5536629106264388, 0.5193729245069083, 0.49682407493462827, 0.46874650252367667, 0.4563344331496837, 0.4401735259384102, 0.41928697395649067, 0.40162036792792033, 0.39091076839160704, 0.385254492868821, 0.3688452462116489, 0.3537309180082599, 0.35440371917412344, 0.33640861175063735, 0.32678400615202896, 0.3297499922666221, 0.3133408373073895, 0.3048794568411631, 0.3028748775155175, 0.2973941598137246, 0.2859488061595161, 0.2776342244030793, 0.2694732142737072, 0.256003452245239, 0.2592878744287608, 0.2563690692875222, 0.2498395081957365, 0.24318223976739378, 0.22684341921010873, 0.2287182292217403, 0.22301106146849095, 0.21978696729245362, 0.20672028132394132, 0.21319303829176173, 0.1980050010310188, 0.19689409021081988, 0.18465975144827104, 0.1775947865352119, 0.17908672522937996, 0.16684358319499631, 0.1710369866388097, 0.168222857269912, 0.16671341663936756, 0.1594463011052835, 0.15377872611521856, 0.15182554436641646, 0.15875300139546977, 0.14300391425971168, 0.1353338160680632, 0.13276472169497008, 0.1332079316953768], "accuracy": [0.3127724230289459, 0.6013736724853516, 0.709549605846405, 0.7317395210266113, 0.7588165402412415, 0.7825914621353149, 0.7943468689918518, 0.8078193068504333, 0.8156121969223022, 0.8245938420295715, 0.8362171649932861, 0.8378021121025085, 0.8457271456718445, 0.8536521196365356, 0.8568220734596252, 0.8601241707801819, 0.8622375130653381, 0.869502067565918, 0.868049144744873, 0.8765024542808533, 0.8776912093162537, 0.8787478804588318, 0.8854840993881226, 0.8853520154953003, 0.8858803510665894, 0.8885219693183899, 0.8943336606025696, 0.896446943283081, 0.8989565372467041, 0.9013340473175049, 0.9039757251739502, 0.9046360850334167, 0.9050323367118835, 0.9045040011405945, 0.9149385690689087, 0.9128252267837524, 0.9153348207473755, 0.9144102334976196, 0.9207502603530884, 0.9196935892105103, 0.9233918786048889, 0.927882730960846, 0.9282789826393127, 0.9309206008911133, 0.9311847686767578, 0.9363360404968262, 0.9344868659973145, 0.9363360404968262, 0.9358077049255371, 0.9368643760681152, 0.9412230849266052, 0.9412230849266052, 0.9373927116394043, 0.9463742971420288, 0.9494122266769409, 0.9484876394271851, 0.9478272199630737], "val_loss": [0.9316422598702567, 0.6360619749341693, 0.5678895711898804, 0.5172139917101178, 0.4850818599973406, 0.46349942684173584, 0.4297128404889788, 0.41743361949920654, 0.38787730251039776, 0.3759132964270456, 0.36283490487507414, 0.349937983921596, 0.3472733071872166, 0.3358545558793204, 0.3387633647237505, 0.3421612467084612, 0.323554379599435, 0.3246679050581796, 0.3151748265538897, 0.3137784855706351, 0.308145957333701, 0.30205256598336355, 0.3083389827183315, 0.30673979009900776, 0.2971802694456918, 0.30073905842644827, 0.30378367219652447, 0.29624785695757183, 0.2898616109575544, 0.292704028742654, 0.29124841519764494, 0.293205337865012, 0.2955495033945356, 0.289056624685015, 0.2927813444818769, 0.286189786025456, 0.2946613771574838, 0.30501125540052143, 0.30391802958079744, 0.2846693822315761, 0.2857029012271336, 0.28721801723752705, 0.30062254837581087, 0.2923423392432077, 0.3040773017065866, 0.3101276755332947, 0.3036061269896371, 0.3145800914083208, 0.306516204561506, 0.3171303016798837, 0.3074102827480861, 0.31404503754207064, 0.306324873651777, 0.3162676436560495, 0.3159395967211042, 0.32332137652805876, 0.3294692805835179], "val_accuracy": [0.5913333296775818, 0.737666666507721, 0.7523333430290222, 0.7646666765213013, 0.7776666879653931, 0.7950000166893005, 0.8023333549499512, 0.8109999895095825, 0.8306666612625122, 0.8383333086967468, 0.8460000157356262, 0.8500000238418579, 0.8443333506584167, 0.8543333411216736, 0.847000002861023, 0.8483333587646484, 0.8553333282470703, 0.8529999852180481, 0.8583333492279053, 0.8606666922569275, 0.8659999966621399, 0.8650000095367432, 0.859333336353302, 0.8656666874885559, 0.871666669845581, 0.8679999709129333, 0.8679999709129333, 0.8703333139419556, 0.875333309173584, 0.8733333349227905, 0.8773333430290222, 0.8776666522026062, 0.874666690826416, 0.8796666860580444, 0.878000020980835, 0.8790000081062317, 0.8776666522026062, 0.8773333430290222, 0.8803333044052124, 0.8880000114440918, 0.8863333463668823, 0.8886666893959045, 0.8816666603088379, 0.8856666684150696, 0.8826666474342346, 0.8816666603088379, 0.8913333415985107, 0.8856666684150696, 0.8866666555404663, 0.8880000114440918, 0.8856666684150696, 0.8916666507720947, 0.8806666731834412, 0.8856666684150696, 0.8856666684150696, 0.887333333492279, 0.8886666893959045]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8434285521507263, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 9, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0328694775497844, 1.1515146105706084, 0.7995957006253681, 0.7146726168299459, 0.6521143649216766, 0.5990726534071033, 0.5543058431694898, 0.5198539913983913, 0.4974718901853142, 0.4689201972212506, 0.4580971863779646, 0.43881891107105736, 0.4167930525268121, 0.4006962110857371, 0.39052449660593447, 0.3879137635073563, 0.3653817740705082, 0.3541111410049919, 0.35373291644075716, 0.33997676875124894, 0.32501023655097716, 0.32667273321187634, 0.3113549985567246, 0.3009030236197721, 0.30028297768182693, 0.29136180010107704, 0.2862363140486361, 0.27428531637281206, 0.2678359750633179, 0.2561322830006305, 0.26271319128755, 0.2645541719591392, 0.2533476673624598, 0.2430766308233644, 0.23698719753573175, 0.22656486437006113, 0.22596797502949378, 0.222791834970932, 0.20920816675003698], "accuracy": [0.3127724230289459, 0.601109504699707, 0.7096816897392273, 0.7316074371337891, 0.7567031979560852, 0.7816668748855591, 0.7918372750282288, 0.8078193068504333, 0.8171972036361694, 0.8259146809577942, 0.8327829837799072, 0.8407079577445984, 0.8459912538528442, 0.8540483713150024, 0.8588033318519592, 0.8590674996376038, 0.8651432991027832, 0.8691058158874512, 0.8656716346740723, 0.8714832663536072, 0.8776912093162537, 0.8821820020675659, 0.8849557638168335, 0.8882578015327454, 0.887597382068634, 0.8898428082466125, 0.8898428082466125, 0.8975036144256592, 0.901862382888794, 0.9033153057098389, 0.902390718460083, 0.9014661312103271, 0.9029190540313721, 0.9072777628898621, 0.9101836085319519, 0.9128252267837524, 0.9142781496047974, 0.9120327830314636, 0.9198256731033325], "val_loss": [0.931652443749564, 0.6359374523162842, 0.5673828295298985, 0.5164280618940081, 0.48380889211382183, 0.4640959160668509, 0.43058996541159494, 0.42067848784582956, 0.3902837974684579, 0.3797159790992737, 0.36294745547430857, 0.34846883160727365, 0.34472992590495516, 0.33565473556518555, 0.33692610263824463, 0.33420815638133455, 0.32488823788506643, 0.3215575303350176, 0.31979325839451384, 0.31120993409837994, 0.3063355769429888, 0.30996228967394146, 0.308595027242388, 0.3109461580004011, 0.29517671040126253, 0.2966199006353106, 0.2998106905392238, 0.29291430541447233, 0.2903524807521275, 0.2945054258619036, 0.29589246000562397, 0.29474559852055143, 0.301578232220241, 0.2884230102811541, 0.2891185198511396, 0.28481799364089966, 0.29985097476414274, 0.2996215990611485, 0.30875303064073834], "val_accuracy": [0.5910000205039978, 0.737333357334137, 0.753333330154419, 0.765666663646698, 0.7826666831970215, 0.7956666946411133, 0.8016666769981384, 0.8113333582878113, 0.8323333263397217, 0.8386666774749756, 0.8456666469573975, 0.8519999980926514, 0.8479999899864197, 0.8529999852180481, 0.8450000286102295, 0.8546666502952576, 0.8586666584014893, 0.8560000061988831, 0.862666666507721, 0.8610000014305115, 0.8656666874885559, 0.8653333187103271, 0.8583333492279053, 0.8629999756813049, 0.871666669845581, 0.8700000047683716, 0.8700000047683716, 0.8740000128746033, 0.8736666440963745, 0.871666669845581, 0.8723333477973938, 0.8759999871253967, 0.8683333396911621, 0.8833333253860474, 0.8826666474342346, 0.8820000290870667, 0.8773333430290222, 0.8756666779518127, 0.8769999742507935]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 2, 6, 5, 2, 0, 0, 6, 0, 5, 2, 8, 4, 1], [0, 1, 0, 1, 0, 2, 1, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 16, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.744857132434845, "mapping_values": [1, 19, 19, 12, 7, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))), tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0349473347989497, 1.2409090314795077, 0.9223576167697022, 0.8195127693338637, 0.7215062552801512, 0.6826998855475311, 0.6580144815897787, 0.6517368283695029, 0.6181670745932871, 0.6191757453462593, 0.622334508674807, 0.6108974034775833, 0.6098822544059104, 0.5838128576118398, 0.5688799685097295, 0.5841801788718426, 0.5801723246104555, 0.612139335397905], "accuracy": [0.3039228618144989, 0.5915995240211487, 0.6664905548095703, 0.7059833407402039, 0.7185312509536743, 0.750231146812439, 0.7523444890975952, 0.7567031979560852, 0.7607977986335754, 0.7671377658843994, 0.7651565074920654, 0.7637035846710205, 0.7696473598480225, 0.7839123010635376, 0.7931581139564514, 0.7794214487075806, 0.7827235460281372, 0.7754589915275574], "val_loss": [0.9436486789158413, 0.7269268717084613, 0.6300168378012521, 0.5604024955204555, 0.5203334774289813, 0.49630093574523926, 0.5096827064241681, 0.479608348437718, 0.4707702568599156, 0.45725532940455843, 0.4527928829193115, 0.4774594988141741, 0.4414512259619577, 0.43364895241601126, 0.45733942304338726, 0.4391568728855678, 0.4532168592725481, 0.48657400267464773], "val_accuracy": [0.6169999837875366, 0.7026666402816772, 0.7446666955947876, 0.7459999918937683, 0.7756666541099548, 0.7873333096504211, 0.7773333191871643, 0.7763333320617676, 0.7903333306312561, 0.7953333258628845, 0.8080000281333923, 0.7963333129882812, 0.8159999847412109, 0.8133333325386047, 0.815666675567627, 0.8149999976158142, 0.8040000200271606, 0.7993333339691162]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [3, 8, 6, 3, 2, 6, 0, 6, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 2, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.728857159614563, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0349488772925226, 1.2409186035713515, 0.9223070234166569, 0.819153945735102, 0.7213386648350923, 0.6827881174112087, 0.6566078014157121, 0.6476443995495419, 0.6139202453141923, 0.6019834799694741, 0.6014250175213817, 0.6222975768622249, 0.5827926381105728, 0.5668096712803592, 0.5665810332479667, 0.5905430467452166, 0.645648454945904, 0.6219919594271686], "accuracy": [0.3039228618144989, 0.591731607913971, 0.6653017997741699, 0.7063795924186707, 0.718399167060852, 0.7477215528488159, 0.7519482374191284, 0.7574957013130188, 0.7668735980987549, 0.7734777331352234, 0.7709681391716003, 0.7672698497772217, 0.7751948237419128, 0.7726852297782898, 0.7877426743507385, 0.7713643908500671, 0.780610203742981, 0.7676661014556885], "val_loss": [0.9436628137316022, 0.7269799539021083, 0.6296536922454834, 0.5596740075520107, 0.5196361882346017, 0.4955821377890451, 0.4942133256367275, 0.47777397292000906, 0.4481081281389509, 0.4599509409495762, 0.4472024951662336, 0.45038035937717985, 0.4158650040626526, 0.46860519477299284, 0.48340979644230436, 0.4802010570253645, 0.48241266182490755, 0.48867692266191753], "val_accuracy": [0.6169999837875366, 0.7023333311080933, 0.7456666827201843, 0.746666669845581, 0.7736666798591614, 0.7896666526794434, 0.7760000228881836, 0.7776666879653931, 0.8003333210945129, 0.8016666769981384, 0.8053333163261414, 0.8096666932106018, 0.8253333568572998, 0.8086666464805603, 0.79666668176651, 0.7979999780654907, 0.8090000152587891, 0.7946666479110718]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 4, 5, 2, 8, 4, 1], [1, 1, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [38, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.7137143015861511, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0349474112906587, 1.2408899609218451, 0.9220865007089886, 0.8181091965213192, 0.7211904597635109, 0.6823417200482894, 0.6594520770657915, 0.6502004991889614, 0.6170780732804569, 0.5950112542487596, 0.5825263564660014, 0.577405343115873, 0.5489888174139261, 0.5510631300210795, 0.5456789675531701, 0.5317386134646084, 0.5471518044033385, 0.5835081174735459, 0.5654784350063917, 0.5865877661029849, 0.6015953981503205, 0.5975127717318426, 0.6159639088563663], "accuracy": [0.3039228618144989, 0.5913353562355042, 0.6666226387023926, 0.7066437602043152, 0.7201162576675415, 0.7490423917770386, 0.7526086568832397, 0.7574957013130188, 0.7648923397064209, 0.774270236492157, 0.7765156626701355, 0.7754589915275574, 0.7881389260292053, 0.7890635132789612, 0.7987055778503418, 0.8043851256370544, 0.8005547523498535, 0.7897239327430725, 0.7924976944923401, 0.7775723338127136, 0.7753269076347351, 0.7808743715286255, 0.7775723338127136], "val_loss": [0.9436484745570591, 0.7269234486988613, 0.6291977337428502, 0.5601358754294259, 0.5193561485835484, 0.4958068813596453, 0.50844407081604, 0.4753216675349644, 0.46016979217529297, 0.45093049321855816, 0.4234753591673715, 0.4145817075456892, 0.41430738994053434, 0.41233461243765696, 0.41894012689590454, 0.4324012739317758, 0.43093916348048616, 0.42786972863333567, 0.4703746352876936, 0.4753742388316563, 0.4418506281716483, 0.4855404240744455, 0.4598839282989502], "val_accuracy": [0.6169999837875366, 0.7023333311080933, 0.7456666827201843, 0.7463333606719971, 0.7753333449363708, 0.7876666784286499, 0.778333306312561, 0.7799999713897705, 0.796999990940094, 0.8059999942779541, 0.812666654586792, 0.8173333406448364, 0.8143333196640015, 0.824999988079071, 0.8273333311080933, 0.815666675567627, 0.8143333196640015, 0.8289999961853027, 0.8090000152587891, 0.7953333258628845, 0.8166666626930237, 0.8130000233650208, 0.8080000281333923]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.682285726070404, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0349480431581517, 1.240871830103719, 0.9222571021372757, 0.8190722507162023, 0.7207626013975605, 0.6820254223127218, 0.6555871612297278, 0.6454557960043809, 0.6100982080802091, 0.5990135371960574, 0.5915487517439505, 0.601765075356276, 0.5609973648031862, 0.5554559781070808, 0.5594599879476073, 0.5636802432543692, 0.5513411436523696, 0.5683381911659946, 0.5625958274840804, 0.5818708056881443, 0.611462132585299], "accuracy": [0.3039228618144989, 0.5919957756996155, 0.6656980514526367, 0.7063795924186707, 0.7193237543106079, 0.7491744756698608, 0.7531369924545288, 0.7557786107063293, 0.7677981853485107, 0.77677983045578, 0.7695152759552002, 0.7771760821342468, 0.7910447716712952, 0.7877426743507385, 0.7873464822769165, 0.7921014428138733, 0.7959318161010742, 0.7880068421363831, 0.7895918488502502, 0.7887993454933167, 0.7825914621353149], "val_loss": [0.9436495644705636, 0.7268229722976685, 0.6298177071980068, 0.5588416882923671, 0.5185904673167637, 0.49477738993508474, 0.491813063621521, 0.4829385450908116, 0.4598531041826521, 0.46241579736982075, 0.4334416815212795, 0.46296720845358713, 0.44963267871311735, 0.4451492258480617, 0.4636328901563372, 0.4368218183517456, 0.43871853181294035, 0.4569904123033796, 0.4562020812715803, 0.4793953725269863, 0.4729452133178711], "val_accuracy": [0.6169999837875366, 0.7023333311080933, 0.7456666827201843, 0.746666669845581, 0.7763333320617676, 0.7900000214576721, 0.777999997138977, 0.7733333110809326, 0.7876666784286499, 0.7946666479110718, 0.8056666851043701, 0.7990000247955322, 0.8059999942779541, 0.8136666417121887, 0.8173333406448364, 0.8183333277702332, 0.8033333420753479, 0.8146666884422302, 0.8023333549499512, 0.7896666526794434, 0.8183333277702332]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 2, 6, 3, 3, 0, 0, 6, 0, 5, 2, 8, 4, 1], [2, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [20, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [36, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [38, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [74, 32, 85]], "fitness": -0.6299999952316284, "mapping_values": [1, 9, 9, 4, 5, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad)), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1296987949565827, 1.2775200065400039, 0.9168288152782499, 0.8351807703258276, 0.7516818862108743, 0.6914898817250442, 0.6441399332885304, 0.6090000017900761, 0.5835071509075895, 0.5577067506862843, 0.550631255434961, 0.5159153633145388, 0.5130195795600094, 0.4858766489332189, 0.4741107789579872, 0.46096484844301355, 0.46217378235496254, 0.430095119998912, 0.4442549989231668, 0.4678929536341991, 0.4542656985051628, 0.47666824194638957, 0.46408638354967047, 0.4575642818520334, 0.45538368846730565], "accuracy": [0.2748646140098572, 0.5596354603767395, 0.6732267737388611, 0.6864351034164429, 0.7246070504188538, 0.7327961921691895, 0.7497028112411499, 0.7689869403839111, 0.7732135653495789, 0.7853652238845825, 0.7923656105995178, 0.8004226684570312, 0.8075551390647888, 0.8148196935653687, 0.8204993009567261, 0.8261788487434387, 0.8358209133148193, 0.8341038227081299, 0.8348963260650635, 0.8301413059234619, 0.8322546482086182, 0.8259146809577942, 0.8244617581367493, 0.82683926820755, 0.8257825970649719], "val_loss": [1.1194424629211426, 0.7584008319037301, 0.611639278275626, 0.6114852598735264, 0.5246315002441406, 0.48934388160705566, 0.4703320094517299, 0.45933406693594797, 0.4360172322818211, 0.4225995881216867, 0.4037254878452846, 0.414411119052342, 0.39690692935671124, 0.40056476422718595, 0.40533764021737234, 0.40142531054360525, 0.3912087764058794, 0.3901931813785008, 0.4014414208275931, 0.39271795749664307, 0.40566286870411467, 0.39227343457085745, 0.4129803010395595, 0.4239811386380877, 0.39901491573878695], "val_accuracy": [0.6003333330154419, 0.7016666531562805, 0.7353333234786987, 0.7580000162124634, 0.7633333206176758, 0.7766666412353516, 0.7889999747276306, 0.7910000085830688, 0.8036666512489319, 0.8103333115577698, 0.8240000009536743, 0.8246666789054871, 0.8270000219345093, 0.8289999961853027, 0.8386666774749756, 0.8423333168029785, 0.8433333039283752, 0.8386666774749756, 0.8443333506584167, 0.8453333377838135, 0.831333339214325, 0.8416666388511658, 0.8353333473205566, 0.8420000076293945, 0.8366666436195374]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 2, 1, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.595714271068573, "mapping_values": [1, 15, 15, 9, 6, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03494786558024, 1.2408638159517977, 0.9223535959242892, 0.8189796110610952, 0.7217104397492716, 0.6827439290106398, 0.6583656614892093, 0.6460380860449474, 0.6081772704937549, 0.5992023023899599, 0.5902635944265936, 0.6245382265360632, 0.5720709952396755, 0.5494606747264796, 0.5712160931728173, 0.5637456586867622, 0.5731370201625403, 0.5787230067170607, 0.5863353624839541, 0.5642596236498381], "accuracy": [0.3039228618144989, 0.5914674401283264, 0.6646413803100586, 0.7061154246330261, 0.7190595865249634, 0.7483819723129272, 0.7540615797042847, 0.7580240368843079, 0.7700436115264893, 0.774270236492157, 0.7783648371696472, 0.7605336308479309, 0.7795535326004028, 0.7878747582435608, 0.7907806038856506, 0.7955356240272522, 0.7897239327430725, 0.7895918488502502, 0.7829877138137817, 0.7921014428138733], "val_loss": [0.9436524254935128, 0.7269763435636248, 0.629652908870152, 0.5595989227294922, 0.5203682865415301, 0.49545141628810335, 0.49562387807028635, 0.47910356521606445, 0.45274708952222553, 0.4583259310041155, 0.44976610796792166, 0.44631099700927734, 0.42135237795966013, 0.4201681784221104, 0.4316122531890869, 0.4552945154053824, 0.4589894839695522, 0.44533915179116385, 0.463550797530583, 0.4585144519805908], "val_accuracy": [0.6169999837875366, 0.7026666402816772, 0.7446666955947876, 0.7476666569709778, 0.7736666798591614, 0.7886666655540466, 0.7713333368301392, 0.7756666541099548, 0.7903333306312561, 0.793666660785675, 0.7956666946411133, 0.8086666464805603, 0.8196666836738586, 0.8136666417121887, 0.8226666450500488, 0.8153333067893982, 0.8080000281333923, 0.812333345413208, 0.8199999928474426, 0.7990000247955322]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [8, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 2, 3, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 0, 3, 3, 0], [71, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 3, 9, 5, 4, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1054396609.6118884, 6950061570.502179, 16691859331.026285, 32837500187.354908, 57178824754.8551, 92432222495.00673], "accuracy": [0.09708096832036972, 0.09734513610601425, 0.09800554811954498, 0.10328886657953262, 0.09840179979801178, 0.09985470771789551], "val_loss": [2547096941.714286, 7177887744.0, 15408102253.714285, 28267937206.857143, 46787362816.0, 71997149769.14285], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 3, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [71, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [4, 4, 0], [64, 55], [0, 1, 0, 1, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 9, 6, 4, 2, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [407035247988.859, 60371688223284.27, 1019781967700984.0, 7157892011091841.0, 3.1354840413226748e+16, 1.0452106710543166e+17], "accuracy": [0.09694888442754745, 0.09734513610601425, 0.09800554811954498, 0.10315678268671036, 0.09800554811954498, 0.09972262382507324], "val_loss": [3264341718747.4287, 175987919533787.44, 1889067123568054.8, 1.029565569736938e+16, 3.857352219217101e+16, 1.1383139821443013e+17], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [33, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [6, 2, 5, 2, 4, 1, 0, 0, 5, 0, 2, 9, 4, 1], [1, 0, 0, 2, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 75, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 4, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [423.9550421647644, 2.6705116565606556e+28, 4.187792902971539, 8.507614031191972, 14.373895981213861, 20.94148903915895], "accuracy": [0.04966318979859352, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [11682160347.428572, 2.63863890511649, 5.470983913966587, 10.11433356148856, 15.56406239100865, 21.39539282662528], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [1, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [57, 84, 6], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [5, 4, 0], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0, 1, 4], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 11, 11, 6, 5, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3032618169503647, 2.302585869984242, 2.3025857066402757, 2.302585709317013, 2.302585838020848, 2.302585674141534], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736427579607283, 1.9736425536019462, 1.9736426898411341, 1.9736426898411341, 1.9736426898411341, 1.9736425536019462], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 9, 1, 3, 1, 9, 5, 0, 2, 2, 1, 0, 3, 0, 5, 8, 2, 5, 7, 2, 3, 8, 0, 1, 3], [0, 2, 0, 1, 0, 1, 2, 1, 2, 1, 3, 1, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 76, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09885714203119278, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3737949483571916, 4.42843773859115, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.09747721254825592, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.10984012058803, 10.705237797328405, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 6, 3, 2, 9, 0, 0, 0, 5, 4, 4, 4, 1, 1, 7, 1, 8, 7, 6, 1, 5, 7, 1, 4, 8, 8, 2, 2, 2, 0, 9, 4, 5, 6, 2, 6, 0, 8, 9, 3, 0], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 0, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [6, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [8, 4, 7, 0, 2, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [1, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.09771428257226944, "mapping_values": [1, 21, 21, 13, 8, 4, 3, 3, 1, 2, 1, 10, 7, 6, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.negative(tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)))), sigma)), tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.370028673838851, 3.048893210311938, 4.896946865916173, 7.948141778606575, 12.245885071548503, 17.97501636203317], "accuracy": [0.09047681838274002, 0.09708096832036972, 0.09893012791872025, 0.10328886657953262, 0.09879804402589798, 0.09932637959718704], "val_loss": [2.0873659678867886, 2.759801047188895, 4.262666838509696, 6.55609621320452, 9.611326490129743, 13.47050394330706], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [97, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [4, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.07028571516275406, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023761075800437, 2.2997059063778544, 2.3003440609917964, 2.3019857684681995, 2.3023800254419196, 2.302691931863739, 2.303045985217202, 2.303542280556141, 2.304587486035568, 2.307156389163643, 2.3132963906095294], "accuracy": [0.09338264167308807, 0.09840179979801178, 0.09219389408826828, 0.0750231146812439, 0.07621186226606369, 0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.969787665775844, 1.9704574857439314, 1.9723143577575684, 1.9731552941458566, 1.973623275756836, 1.9738277707781111, 1.9741309029715401, 1.9747234072004045, 1.9760001046316964, 1.9790477071489607, 1.989077023097447], "val_accuracy": [0.06199999898672104, 0.09133332967758179, 0.0676666647195816, 0.08033332973718643, 0.09366666525602341, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [0, 2, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033381604940475, 2.302714178669549, 2.303407934946139, 2.301881406726366, 2.3019399282372057, 2.302916068253563], "accuracy": [0.09285431355237961, 0.0882314071059227, 0.09192973375320435, 0.08902391046285629, 0.0870426595211029, 0.09576013684272766], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 6, 3, 2, 0, 0, 0, 0, 5, 2, 8, 4, 1], [3, 3, 0, 1, 0, 2, 2, 1, 2, 1, 3, 0, 2, 0, 3, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [27, 82, 13, 57, 60, 59, 23, 22, 72, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 7, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 4, 7, 2, 8, 5, 0, 9], [2, 4, 0], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [3, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3033381604940475, 2.302714178669549, 2.303407934946139, 2.301881406726366, 2.3019399282372057, 2.302916068253563], "accuracy": [0.09285431355237961, 0.0882314071059227, 0.09192973375320435, 0.08902391046285629, 0.0870426595211029, 0.09576013684272766], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}]