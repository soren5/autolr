[{"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.8514285683631897, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0612649835096044, 1.0921114406423829, 0.7962470165711069, 0.7142230220490349, 0.6492745976926093, 0.6200464917463696, 0.6002459511812321, 0.5797129456692399, 0.5490807246743035, 0.5317004195506373, 0.5154803215142616, 0.495029989329343, 0.49176823880300546, 0.47547077006825117, 0.4482518989514555, 0.44638416386000185, 0.4387311235772872, 0.4223868434518288, 0.4237199548984704, 0.41393713418282635, 0.399904600975772, 0.38971763860280284, 0.384531407580006, 0.3799087986844075, 0.37012689410577343, 0.36484211475432526, 0.34997915518581435, 0.34401410197726706, 0.34365828685426064, 0.33890506747203214, 0.32290403785612354, 0.32262948832853894, 0.3163840649008609], "accuracy": [0.30603620409965515, 0.607449471950531, 0.7005679607391357, 0.733060359954834, 0.7613261342048645, 0.7684586048126221, 0.7769119143486023, 0.7844406366348267, 0.7976489067077637, 0.8059701323509216, 0.8128384351730347, 0.8206313848495483, 0.8219521641731262, 0.8278959393501282, 0.8378021121025085, 0.8363492488861084, 0.8409721255302429, 0.8401796221733093, 0.8446704745292664, 0.8514066934585571, 0.858671247959137, 0.8582749962806702, 0.8595958352088928, 0.8540483713150024, 0.8661999702453613, 0.8664641380310059, 0.8712190985679626, 0.8750495314598083, 0.8706908226013184, 0.8747853636741638, 0.8838990926742554, 0.882710337638855, 0.8841632604598999], "val_loss": [0.9606170654296875, 0.6319565262113299, 0.5604678903307233, 0.5160388605935233, 0.4937835080283029, 0.4849479709352766, 0.4612362044198172, 0.45331384454454693, 0.4353386163711548, 0.4128175037247794, 0.39880343845912386, 0.4014872227396284, 0.3900766372680664, 0.3778344563075474, 0.37125278370721, 0.3679636461394174, 0.3576288989612034, 0.3524373599461147, 0.34852445125579834, 0.335201586995806, 0.3408773030553545, 0.3347909705979483, 0.32919929708753315, 0.3220494900430952, 0.3202936904770987, 0.3175824795450483, 0.31173363753727507, 0.31390730823789326, 0.3119134988103594, 0.3063745754105704, 0.3079461966242109, 0.3145799381392343, 0.3130326952253069], "val_accuracy": [0.6010000109672546, 0.715666651725769, 0.753333330154419, 0.765999972820282, 0.7823333144187927, 0.784333348274231, 0.7906666398048401, 0.7900000214576721, 0.7976666688919067, 0.8136666417121887, 0.8216666579246521, 0.8169999718666077, 0.8253333568572998, 0.8330000042915344, 0.8349999785423279, 0.8353333473205566, 0.847000002861023, 0.8476666808128357, 0.8489999771118164, 0.8566666841506958, 0.8573333621025085, 0.8543333411216736, 0.8586666584014893, 0.8576666712760925, 0.859666645526886, 0.862333357334137, 0.8603333234786987, 0.8669999837875366, 0.8640000224113464, 0.8656666874885559, 0.8650000095367432, 0.8636666536331177, 0.8619999885559082]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.850857138633728, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0391473974203467, 1.0915568974024081, 0.80735496721405, 0.7232894922260122, 0.6421895395448226, 0.5952305783763805, 0.559324833758204, 0.5331716608960221, 0.504303642259912, 0.48381635206581153, 0.4635379197118525, 0.4386603835000338, 0.42632501836403125, 0.4138792351551532, 0.39340140844427474, 0.3781169154947586, 0.3716854879829657, 0.3581684157951019, 0.35603014899833785, 0.3440104094691296, 0.33873465645818696, 0.32459577248474675, 0.3110269137999291, 0.3015030859058654, 0.2894295386673831, 0.28877607105650904, 0.2776213041260069, 0.2674172976666973, 0.26226111485414566, 0.25756877624930297, 0.24772633224028984, 0.25694580815644896, 0.2502545266969565, 0.2373413614758474, 0.22989047303837146, 0.23321349393335772, 0.21754046957711062, 0.21639463794765187, 0.2115136068990879], "accuracy": [0.30960243940353394, 0.6120724081993103, 0.696209192276001, 0.7318716049194336, 0.7614582180976868, 0.7733456492424011, 0.7882710099220276, 0.8038568496704102, 0.8120459914207458, 0.8185180425643921, 0.8298771381378174, 0.8387266993522644, 0.8455950617790222, 0.8495575189590454, 0.8582749962806702, 0.858671247959137, 0.8613129258155823, 0.8663320541381836, 0.8688416481018066, 0.8732003569602966, 0.8796724081039429, 0.8821820020675659, 0.885219931602478, 0.8874653577804565, 0.8920882344245911, 0.8947299122810364, 0.8943336606025696, 0.9001452922821045, 0.9014661312103271, 0.9051644206047058, 0.9030511379241943, 0.8996169567108154, 0.9064852595329285, 0.9104477763175964, 0.9113723635673523, 0.9115044474601746, 0.9161273241043091, 0.9208822846412659, 0.9208822846412659], "val_loss": [0.9054416588374546, 0.6391997167042324, 0.5659572737557548, 0.5215519836970738, 0.4881139653069632, 0.4641193151473999, 0.43905276911599295, 0.42723879643848967, 0.4036236064774649, 0.3834539992468698, 0.36806717940739225, 0.3601423757416861, 0.35262020996638704, 0.3437997358185904, 0.3374917762620108, 0.32569559131349834, 0.32191058567592074, 0.3111058473587036, 0.32096742732184275, 0.30856301954814364, 0.3074924179485866, 0.30950794901166645, 0.29941050495420185, 0.3002257687704904, 0.29325147186006817, 0.2911518727030073, 0.2934225797653198, 0.29506335088184904, 0.29304581029074533, 0.2865435481071472, 0.28945514133998324, 0.28314307757786344, 0.2969555939946856, 0.2819737706865583, 0.3039052401270185, 0.30600883279527935, 0.2872841443334307, 0.3070581981113979, 0.2905090536390032], "val_accuracy": [0.6236666440963745, 0.7200000286102295, 0.7523333430290222, 0.7673333287239075, 0.7756666541099548, 0.7933333516120911, 0.8076666593551636, 0.8063333630561829, 0.8193333148956299, 0.831333339214325, 0.8376666903495789, 0.8396666646003723, 0.8519999980926514, 0.8483333587646484, 0.8586666584014893, 0.8560000061988831, 0.8619999885559082, 0.8643333315849304, 0.8550000190734863, 0.8656666874885559, 0.8693333268165588, 0.8613333106040955, 0.8693333268165588, 0.8676666617393494, 0.8736666440963745, 0.871666669845581, 0.8676666617393494, 0.874666690826416, 0.8776666522026062, 0.878000020980835, 0.8809999823570251, 0.8790000081062317, 0.8740000128746033, 0.8826666474342346, 0.8759999871253967, 0.871999979019165, 0.8790000081062317, 0.875, 0.8809999823570251]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [36, 83, 24], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.5619999766349792, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1058401169321557, 1.3751689445829158, 1.0609776766513395, 0.9769560340656628, 0.9498566629911505, 17879414551.999004, NaN, NaN, NaN, NaN], "accuracy": [0.2852991819381714, 0.5643904209136963, 0.59661865234375, 0.6543388962745667, 0.6584334969520569, 0.6478668451309204, 0.10408136248588562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.0763219084058488, 0.8550466809953962, 0.7101565940039498, 0.636063643864223, 0.6424450533730643, 9.303296416510362e+30, NaN, NaN, NaN, NaN], "val_accuracy": [0.6439999938011169, 0.6076666712760925, 0.7046666741371155, 0.7113333344459534, 0.7206666469573975, 0.1420000046491623, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [6, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.5277143120765686, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.300727084139319, 2.3011788172791774, 2.2998973370354174, 2.297000536404077, 2.2959978800912055, 2.2943680980784658, 2.292579925134276, 2.292513128631324, 2.2904345748320925, 2.2882292089901894, 2.2859303202721675, 2.284531506092604, 2.2816902494323474, 2.281547944496305, 2.279831200794789, 2.277689640185994, 2.277286748466648, 2.2759405101027395, 2.273227616890688, 2.273022693933324, 2.270801506715129, 2.269027627611897, 2.2669161812126393, 2.2652767552927644, 2.262994455135478, 2.2628645539803354, 2.259480025396371, 2.258347616534522, 2.25792074442823, 2.254761946687861, 2.2545477252169652, 2.2531821847418594, 2.2496297045500997, 2.2482697217377217, 2.2460613846227777, 2.2453703936679, 2.241737567044803, 2.239621549187367, 2.2382950633823313, 2.237280844823323, 2.2332267469623543, 2.2322533049083986, 2.2311505178938513, 2.2260946281487524, 2.225954244008012, 2.2236298451948286, 2.2212460876188227, 2.2184928706167493, 2.215656820494249, 2.214109602479603, 2.2109564537889277, 2.207464741174146, 2.2075495225185606, 2.2059511432652745, 2.2036921475085096, 2.197541620312208, 2.1945353185716416, 2.1936691782304782, 2.1905993135172883, 2.188216662787963, 2.185753018486659, 2.1809000248418364, 2.17905436811068, 2.1762189317483314, 2.1740595352191496, 2.169394337222435, 2.1666023018274796, 2.1602269702851418, 2.160803030982954, 2.1538564056657985, 2.1521757713099197, 2.1473912264078585, 2.145575985286875, 2.1422471701272205, 2.1402734521987528, 2.135708018631558, 2.1283878640507536, 2.125877664703593, 2.1196578776186104, 2.1175735143228938, 2.1132651121073773, 2.1099950954536517, 2.1059979846086705, 2.0982913804674634, 2.0947921206497355, 2.0896179322096744, 2.0861547456173737, 2.083588000663976, 2.077097831070305, 2.0733159464804753, 2.065865280101989, 2.060835110213794, 2.0531095964655726, 2.052883510907029, 2.046428911280654, 2.037850848498865, 2.029516100395373, 2.029525705159159, 2.02059031361051, 2.016995244447534], "accuracy": [0.09179764986038208, 0.09192973375320435, 0.1010434553027153, 0.10249637067317963, 0.1072513535618782, 0.11332716792821884, 0.11253467202186584, 0.1146479994058609, 0.12362963706254959, 0.12336547672748566, 0.13868708908557892, 0.1294412910938263, 0.148064985871315, 0.14621582627296448, 0.15942411124706268, 0.1566503793001175, 0.15572579205036163, 0.16232994198799133, 0.1674811840057373, 0.16853784024715424, 0.17250032722949982, 0.18280279636383057, 0.18095363676548004, 0.1830669641494751, 0.19865275919437408, 0.19218069314956665, 0.20459648966789246, 0.20618148148059845, 0.20301149785518646, 0.21872936189174652, 0.20803064107894897, 0.21872936189174652, 0.2238806039094925, 0.22995641827583313, 0.23339056968688965, 0.23325848579406738, 0.24078720808029175, 0.2452780306339264, 0.2502971887588501, 0.2483159452676773, 0.2595430016517639, 0.2587504982948303, 0.2639017403125763, 0.26839256286621094, 0.27327960729599, 0.2716946303844452, 0.2782987654209137, 0.2868841588497162, 0.28926166892051697, 0.2880729138851166, 0.28939375281333923, 0.29837536811828613, 0.29718664288520813, 0.2953374683856964, 0.2946770489215851, 0.30563995242118835, 0.31462156772613525, 0.3143574297428131, 0.31118741631507874, 0.31541407108306885, 0.31937655806541443, 0.32743361592292786, 0.32360321283340454, 0.3267732262611389, 0.3288865387439728, 0.3381323516368866, 0.3362831771373749, 0.34724608063697815, 0.33958524465560913, 0.35081231594085693, 0.3465856611728668, 0.34962356090545654, 0.35226520895957947, 0.3509443998336792, 0.3547748029232025, 0.35041606426239014, 0.3583410382270813, 0.36903974413871765, 0.36388853192329407, 0.3629639446735382, 0.36903974413871765, 0.37102100253105164, 0.36507725715637207, 0.38766345381736755, 0.38449347019195557, 0.3831726312637329, 0.3813234567642212, 0.37828555703163147, 0.38422930240631104, 0.3895126283168793, 0.3881917893886566, 0.3963809311389923, 0.39307886362075806, 0.3929467797279358, 0.3965130150318146, 0.4035134017467499, 0.40681546926498413, 0.4023246467113495, 0.40866464376449585, 0.40404173731803894], "val_loss": [1.9694788796561105, 1.967979976109096, 1.9664878164018904, 1.9650038991655623, 1.9635058811732702, 1.9620137214660645, 1.9605464254106795, 1.9590841020856584, 1.9576294762747628, 1.9561470576695033, 1.9546634810311454, 1.953178542000907, 1.9516991887773787, 1.950197764805385, 1.9487061500549316, 1.9472062928336007, 1.9457178115844727, 1.9441934994288854, 1.9426638739449638, 1.9411365645272392, 1.9396117755344935, 1.9380571501595634, 1.9364846774509974, 1.9348900658743722, 1.933293342590332, 1.9316870825631278, 1.9300494875226701, 1.928396565573556, 1.926732403891427, 1.9250471932547433, 1.923358985355922, 1.9216490473066057, 1.9198987143380302, 1.9181591442653112, 1.9163571766444616, 1.9145475115094865, 1.9127113478524345, 1.9108471870422363, 1.9089696066720145, 1.9070420946393694, 1.9050654683794295, 1.9030865260532923, 1.901082924434117, 1.898993832724435, 1.8969080788748605, 1.894801344190325, 1.892650740487235, 1.8904659407479423, 1.8882107734680176, 1.8859430040631975, 1.88361998966762, 1.881242138998849, 1.8788533891950334, 1.876434053693499, 1.8739562034606934, 1.8713900021144323, 1.8687758445739746, 1.8661207471575056, 1.863405432019915, 1.8606632777622767, 1.8578776632036482, 1.8549819673810686, 1.8520878383091517, 1.8491059030805315, 1.8460829598563058, 1.8429818834577287, 1.839836869921003, 1.83656644821167, 1.8332980700901575, 1.829909324645996, 1.826493263244629, 1.8229982512337821, 1.8194572584969657, 1.815865925380162, 1.8122032710484095, 1.80849027633667, 1.804642813546317, 1.800748007638114, 1.7967788151332311, 1.7927159581865584, 1.7886150905064173, 1.7844739641462053, 1.7802070208958216, 1.7758429391043526, 1.7714160510471888, 1.7668702261788505, 1.7622706549508231, 1.757655143737793, 1.7529106821332658, 1.748105798448835, 1.7431930133274622, 1.7381906509399414, 1.733088152749198, 1.7279601097106934, 1.722734042576381, 1.7173765046255929, 1.7118821144104004, 1.7063721929277693, 1.700723375592913, 1.6950546673366003], "val_accuracy": [0.04766666516661644, 0.05533333495259285, 0.06266666948795319, 0.07333333045244217, 0.08500000089406967, 0.09600000083446503, 0.1120000034570694, 0.12399999797344208, 0.13466666638851166, 0.1536666601896286, 0.1666666716337204, 0.18566666543483734, 0.19766665995121002, 0.20866666734218597, 0.22766666114330292, 0.24133333563804626, 0.2529999911785126, 0.2653333246707916, 0.27566665410995483, 0.2853333353996277, 0.2956666648387909, 0.3036666810512543, 0.30933332443237305, 0.3160000145435333, 0.3233333230018616, 0.3296666741371155, 0.33500000834465027, 0.34066668152809143, 0.3466666638851166, 0.3503333330154419, 0.35366666316986084, 0.35733333230018616, 0.36399999260902405, 0.3683333396911621, 0.3700000047683716, 0.37466666102409363, 0.3779999911785126, 0.3816666603088379, 0.38466668128967285, 0.3866666555404663, 0.3876666724681854, 0.38999998569488525, 0.39500001072883606, 0.39800000190734863, 0.4020000100135803, 0.40433332324028015, 0.4090000092983246, 0.41366666555404663, 0.4156666696071625, 0.4166666567325592, 0.4183333218097687, 0.42133334279060364, 0.42399999499320984, 0.4259999990463257, 0.4283333420753479, 0.43166667222976685, 0.43533334136009216, 0.43700000643730164, 0.43833333253860474, 0.43933331966400146, 0.4423333406448364, 0.4466666579246521, 0.4480000138282776, 0.45233333110809326, 0.45399999618530273, 0.45533332228660583, 0.4566666781902313, 0.4586666524410248, 0.4586666524410248, 0.4606666564941406, 0.4620000123977661, 0.4646666646003723, 0.46666666865348816, 0.47099998593330383, 0.47466665506362915, 0.47733333706855774, 0.4776666760444641, 0.47966668009757996, 0.4806666672229767, 0.48633334040641785, 0.4873333275318146, 0.4886666536331177, 0.49033331871032715, 0.49166667461395264, 0.4936666786670685, 0.49399998784065247, 0.4959999918937683, 0.500333309173584, 0.5016666650772095, 0.5056666731834412, 0.5076666474342346, 0.5109999775886536, 0.5130000114440918, 0.515333354473114, 0.5180000066757202, 0.5206666588783264, 0.5226666927337646, 0.5246666669845581, 0.5260000228881836, 0.5273333191871643]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.3162856996059418, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2677004701976906, 2.27605088647362, 2.3689913192303615, 2.4451128237629454, 2.3049440955473304, 2.2993270914709845], "accuracy": [0.2176727056503296, 0.13498876988887787, 0.16351869702339172, 0.1604807823896408, 0.10210011899471283, 0.11398758739233017], "val_loss": [1.6477624007633753, 1.9471001625061035, 1.836636747632708, 1.9780197824750627, 1.9731881277901786, 1.958470072065081], "val_accuracy": [0.3163333237171173, 0.2199999988079071, 0.3136666715145111, 0.10100000351667404, 0.1276666671037674, 0.1379999965429306]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [3, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [85, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [1, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1, 1], [2, 9, 5, 2, 9, 3, 9], [2, 0, 2], [39, 32, 85]], "fitness": -0.31142857670783997, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 11, 7, 6, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2563930184786676, 2.2715496222388083, 2.423606742563627, NaN, NaN, NaN], "accuracy": [0.2160876989364624, 0.14542332291603088, 0.16933034360408783, 0.11042134463787079, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.6378842762538366, 1.9253250530787878, 1.9830270494733537, NaN, NaN, NaN], "val_accuracy": [0.32199999690055847, 0.22866666316986084, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.29514285922050476, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4439698351435672, 3.2930219127139586, 2.3055502591808916, 2.3034416093109558, 2.3031463908040686, 2.302849847973456], "accuracy": [0.20776647329330444, 0.12534672021865845, 0.09285431355237961, 0.09800554811954498, 0.09615638852119446, 0.09800554811954498], "val_loss": [5.735440799168178, 1.9776409012930733, 1.9744088990347726, 1.9739219120570592, 1.9736719812665666, 1.973679542541504], "val_accuracy": [0.2906666696071625, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 3, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [87, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.17399999499320984, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2818903264872166, 2.3168251143785406, 2.3103771692474266, 2.2570804449954855, 2.2960929127102276, 2.3284339291339915, 2.315883325563682, 2.313268705586464, 2.302359734827328, 2.297324352607027, 2.309751759430736, 2.311144085734071, 2.308880709827127, 2.3061557898447735], "accuracy": [0.19455818831920624, 0.10157178342342377, 0.09879804402589798, 0.15242372453212738, 0.17078325152397156, 0.11570466309785843, 0.10249637067317963, 0.09866596013307571, 0.09866596013307571, 0.1530841439962387, 0.1274600476026535, 0.09655263274908066, 0.1018359512090683, 0.09972262382507324], "val_loss": [2.0017010143824985, 1.9889954839433943, 1.9758768762860979, 1.8946662630353654, 1.9801617349897112, 1.9869264193943568, 1.9826436723981584, 1.980217661176409, 1.8225853102547782, 1.9781059537615096, 1.979381765638079, 1.978822912488665, 1.9784231185913086, 1.9772061620439803], "val_accuracy": [0.10633333027362823, 0.1080000028014183, 0.12533333897590637, 0.20266667008399963, 0.13633333146572113, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.27000001072883606, 0.23999999463558197, 0.10000000149011612, 0.10333333164453506, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [70, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [5, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.11400000005960464, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 6, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.2999652650740168, 2.301821662891243, 2.3025500699119985, 2.3027358679581846, 2.3040262019046938, 2.3164011773935886], "accuracy": [0.09787346422672272, 0.08677849918603897, 0.0758156105875969, 0.09470347315073013, 0.09681680053472519, 0.09457138925790787], "val_loss": [1.9702726772853307, 1.9730785914829798, 1.973618711744036, 1.973940099988665, 1.9765730585370744, 2.0201804297310963], "val_accuracy": [0.1146666631102562, 0.06466666609048843, 0.08633333444595337, 0.10233332961797714, 0.09866666793823242, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [0, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302157526270683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 1, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6824.0329275041795, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04649319872260094, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.206503718203275e+16, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [7, 3, 5, 1, 8, 5, 2, 1], [0, 7, 0, 6], [64, 55], [1, 0, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [0, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [6, 3, 7, 1, 7, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [2, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 10, 7, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [4890675.02669262, 36808585.28993033, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22947565.714285713, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [1, 3, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [2, 7, 0, 6], [64, 55], [0, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [36192727.1344447, 5534579642.479989, 94811658402.03302, 666187457138.4916, 2958197735027.9795, 9478157511755.605], "accuracy": [0.10077928751707077, 0.1010434553027153, 0.09259014576673508, 0.1018359512090683, 0.09919429570436478, 0.10738343745470047], "val_loss": [301650011.4285714, 16245566902.857143, 174337055597.7143, 950371390025.1428, 3559643414528.0, 10499840578121.143], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [7, 3, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [8, 3, 9, 0, 1, 9], [0, 3, 3, 3, 0], [46, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 3, 2], [60, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 3, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, sigma))", "other_info": {"loss": [2.3025639470951544, 2.3030252027127407, 2.302885816365248, 2.3029049145405427, 2.3029313625330152, 2.3028903269512684, 2.303064909750964, 2.302987348291742], "accuracy": [0.09760929644107819, 0.09734513610601425, 0.09589222073554993, 0.09945846349000931, 0.09628847241401672, 0.09615638852119446, 0.0886276587843895, 0.09245806187391281], "val_loss": [1.9736642156328474, 1.9736548832484655, 1.973658561706543, 1.9736627851213728, 1.973705768585205, 1.9736945288521903, 1.9736864226205009, 1.9737320627485002], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [5, 7, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [3, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [0, 3, 3, 3, 0], [70, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 7, 8, 2, 9, 3, 9], [2, 0, 2], [6, 55, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3021763579059096, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 2, 8, 0, 0, 3, 9, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [1, 3, 3, 3, 0], [36, 57, 24], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1, 1], [2, 9, 5, 2, 9, 3, 9], [2, 0, 2], [39, 32, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 10, 3, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [62, 82, 13, 17, 60, 59, 23, 22, 72, 1], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 1, 4, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [1, 1, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [2, 0, 2], [6, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3013846770631576, 2.303429321794934, 2.3037171734165067, 2.3024007776835025, 2.303044863443774, 2.303012807875293], "accuracy": [0.08994849026203156, 0.08770307898521423, 0.08994849026203156, 0.08875974267721176, 0.09087307006120682, 0.0944393053650856], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0], [3, 3, 0, 0, 1, 9], [1, 3, 2, 3, 0], [38, 84, 6], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 7, 1, 7, 7, 2, 1, 4], [4, 7, 0, 6, 3], [64, 55], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [2, 7, 5, 2, 6, 3, 9], [2, 3, 2], [26, 32, 85]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 19, 14, 9, 5, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))))))), sigma)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3013846770631576, 2.303429321794934, 2.3037171734165067, 2.3024007776835025, 2.303044863443774, 2.303012807875293], "accuracy": [0.08994849026203156, 0.08770307898521423, 0.08994849026203156, 0.08875974267721176, 0.09087307006120682, 0.0944393053650856], "val_loss": [1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056, 1.970999104636056], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 9, 6, 8, 8, 0, 0, 3, 0, 5, 2, 0, 4, 1, 5, 5, 7, 6, 2, 8, 1, 8, 1, 6, 5], [2, 0, 0, 1, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 1, 2, 3, 3, 2, 2], [14, 82, 13, 17, 60, 59, 23, 22, 72, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [3, 3, 9, 0, 1, 9], [2, 3, 3, 3, 0], [38, 84, 6], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 3, 7, 1, 8, 5, 2, 1], [4, 7, 0, 6], [64, 55], [0, 0, 0, 1, 1], [0, 7, 5, 2, 9, 3, 9], [1, 2, 2], [6, 32, 85]], "fitness": -0.009714285843074322, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(alpha), beta))", "other_info": {"loss": [2.3080888582085257, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0168497221810475, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}]