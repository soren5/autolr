[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.140218722806111, 1.4212842552716376, 1.1237458051896414, 0.9240760399822577, 0.868383321582901, 0.8019322735553782, 0.7927920299514157, 0.7612321735089718, 0.7229155589482095, 0.6970521378605326, 0.6968016578395054, 0.6493625793521903, 0.6459440617765402, 0.6492455947227513, 0.6309156328569613, 0.5979060085773027, 0.5970735819726147, 0.6099394602845484, 0.5870731969188941, 0.578513533164324, 0.5669593167358528, 0.5703435363298426], "accuracy": [0.2922995686531067, 0.5149914026260376, 0.6029586791992188, 0.6629242897033691, 0.678642213344574, 0.6966054439544678, 0.703209638595581, 0.7160216569900513, 0.7271166443824768, 0.7349095344543457, 0.7312111854553223, 0.7508915662765503, 0.7572315335273743, 0.7458723783493042, 0.7553823590278625, 0.7733456492424011, 0.7734777331352234, 0.7684586048126221, 0.776251494884491, 0.7824593782424927, 0.7836481332778931, 0.7849689722061157], "val_loss": [1.3458731855664934, 1.106349297932216, 0.7746035201208932, 0.6254501683371407, 0.591415354183742, 0.5792677913393293, 0.5560715879712786, 0.5257245983396258, 0.5327610799244472, 0.5139071260179792, 0.4878687858581543, 0.47182130813598633, 0.49789631366729736, 0.465990458215986, 0.4554488318307059, 0.4684790883745466, 0.437568153653826, 0.46209520953042166, 0.4380689689091274, 0.4434239864349365, 0.4509916475840977, 0.453860878944397], "val_accuracy": [0.5553333163261414, 0.5823333263397217, 0.67166668176651, 0.7319999933242798, 0.7413333058357239, 0.7416666746139526, 0.7369999885559082, 0.7613333463668823, 0.7570000290870667, 0.75, 0.7823333144187927, 0.7893333435058594, 0.7666666507720947, 0.7776666879653931, 0.8050000071525574, 0.7866666913032532, 0.8146666884422302, 0.7956666946411133, 0.7956666946411133, 0.8029999732971191, 0.7883333563804626, 0.7950000166893005]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 4, 6, 1], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 4, 5, 2, 0, 2, 2, 6, 7], [5, 1, 0, 3, 4, 2, 0, 4, 2, 4, 1], [83, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7897142767906189, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.255409561080892, 2.059183066783407, 1.6238729183495304, 1.2717863746275755, 1.0869947757703313, 0.9983473467222216, 0.9401487878300746, 0.8881284237033923, 0.8593505146229161, 0.8130402149950682, 0.8000434984022112, 0.7853676852233941, 0.7710530032901842, 0.748653573776359, 0.7445967710328345, 0.737202697835657, 0.7137754847581093, 0.6997986956515632, 0.6928481694619417, 0.6855189989208624, 0.6698763702035722, 0.6661671757965733, 0.6627738793544041, 0.6669598034171066, 0.6487559685696386, 0.6547440446252915, 0.6341272002717586, 0.6227756791252738, 0.6257264165200609, 0.6290097377004562, 0.6206715088463132, 0.6094509344516004, 0.609109250498706, 0.6110139419657443, 0.5988404895603979], "accuracy": [0.20882314443588257, 0.38687095046043396, 0.4888390004634857, 0.5641262531280518, 0.6186765432357788, 0.6518293619155884, 0.6651697158813477, 0.6861709356307983, 0.6880200505256653, 0.7049266695976257, 0.7107383608818054, 0.7147008180618286, 0.7213049530982971, 0.7292299270629883, 0.7236824631690979, 0.7301545143127441, 0.7429665923118591, 0.7469290494918823, 0.7436270117759705, 0.7479857206344604, 0.7512878179550171, 0.7561748623847961, 0.757099449634552, 0.7474573850631714, 0.7602694630622864, 0.7540615797042847, 0.7738739848136902, 0.7688548564910889, 0.7709681391716003, 0.7695152759552002, 0.76542067527771, 0.7763835787773132, 0.7737419009208679, 0.7711002230644226, 0.7733456492424011], "val_loss": [1.8504980632237025, 1.511920486177717, 1.0489955970219202, 0.8212087835584369, 0.7254629305430821, 0.6741860253470284, 0.6308695248195103, 0.6073990549360003, 0.5780221905027118, 0.5718991415841239, 0.5583071878978184, 0.5538518939699445, 0.5238545281546456, 0.5216017961502075, 0.5446912731443133, 0.5234969854354858, 0.4908179385321481, 0.4964839390345982, 0.48249941212790354, 0.4801439217158726, 0.47642689091818674, 0.4646452154432024, 0.4618797302246094, 0.46712800434657503, 0.45175157274518696, 0.4567176784787859, 0.4457324913569859, 0.4540478842599051, 0.4484591654368809, 0.44099446705409456, 0.43714652742658344, 0.4267697163990566, 0.44547295570373535, 0.43211398805890766, 0.43190445218767437], "val_accuracy": [0.46666666865348816, 0.5659999847412109, 0.6639999747276306, 0.6866666674613953, 0.722000002861023, 0.7329999804496765, 0.7283333539962769, 0.7486666440963745, 0.750333309173584, 0.7409999966621399, 0.7580000162124634, 0.7423333525657654, 0.7726666927337646, 0.7649999856948853, 0.75, 0.7633333206176758, 0.781000018119812, 0.7836666703224182, 0.7960000038146973, 0.7986666560173035, 0.8009999990463257, 0.7933333516120911, 0.8059999942779541, 0.8023333549499512, 0.8046666383743286, 0.8073333501815796, 0.8119999766349792, 0.7943333387374878, 0.8096666932106018, 0.8230000138282776, 0.8176666498184204, 0.8193333148956299, 0.8046666383743286, 0.8196666836738586, 0.8036666512489319]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7894285917282104, "mapping_values": [1, 5, 5, 2, 3, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2554092868885043, 2.0591990791842796, 1.623952134804026, 1.2718093533793682, 1.0869814080175486, 0.9987060918689578, 0.9396800335057266, 0.8883565954323757, 0.8590293364864314, 0.8131790867870227, 0.8004819040348218, 0.7853866299980148, 0.7711573060808118, 0.749045324355478, 0.7436323648572298, 0.73850672893111, 0.7141226752480464, 0.70030464201461, 0.6921376927244413, 0.6853262296032833, 0.6691315102145783, 0.6665566812070479, 0.6629205912237454, 0.666765616263192, 0.649077130826772, 0.6544677813086827, 0.6339067337834493, 0.6233296056764316, 0.6257476090534629, 0.6286799325966297, 0.619815780683169, 0.6088709053409381, 0.6083363528658512, 0.6110122860336127, 0.598813053371569], "accuracy": [0.20882314443588257, 0.3867388665676117, 0.48870691657066345, 0.5641262531280518, 0.618280291557312, 0.6514331102371216, 0.6654338836669922, 0.6860388517379761, 0.6888125538825989, 0.705058753490448, 0.7104741930961609, 0.7143045663833618, 0.7230220437049866, 0.728701651096344, 0.7252674698829651, 0.7316074371337891, 0.7427024245262146, 0.7452120184898376, 0.7429665923118591, 0.7473253011703491, 0.750759482383728, 0.7563069462776184, 0.7597411274909973, 0.7466648817062378, 0.7606657147407532, 0.7535332441329956, 0.7740060687065125, 0.769911527633667, 0.7700436115264893, 0.7700436115264893, 0.7663452625274658, 0.7729493975639343, 0.7753269076347351, 0.7701756954193115, 0.7750627398490906], "val_loss": [1.8504926817757743, 1.5120111533573695, 1.0491300310407365, 0.8211814505713326, 0.7256603922162738, 0.6734190838677543, 0.6308783973966327, 0.6081244775227138, 0.5782173871994019, 0.5725641080311367, 0.5585160596030099, 0.5535550968987601, 0.5242985486984253, 0.5234320334025792, 0.5512520245143345, 0.5237246922084263, 0.4905437741960798, 0.49490904808044434, 0.48273398194994244, 0.48019843442099436, 0.47644933632441927, 0.4658398798533848, 0.46069652693612234, 0.4664349726268223, 0.45137843063899447, 0.4566084487097604, 0.44673081806727816, 0.4537426914487566, 0.4476109061922346, 0.4404501829828535, 0.4377225126538958, 0.4272980008806501, 0.44479894638061523, 0.43242318289620535, 0.4336733732904707], "val_accuracy": [0.46666666865348816, 0.565666675567627, 0.6643333435058594, 0.6869999766349792, 0.7200000286102295, 0.731333315372467, 0.7279999852180481, 0.746999979019165, 0.7513333559036255, 0.7409999966621399, 0.7586666941642761, 0.7426666617393494, 0.7730000019073486, 0.762666642665863, 0.7453333139419556, 0.7633333206176758, 0.7820000052452087, 0.7866666913032532, 0.7973333597183228, 0.7979999780654907, 0.7993333339691162, 0.7929999828338623, 0.8066666722297668, 0.8019999861717224, 0.8040000200271606, 0.8059999942779541, 0.8119999766349792, 0.79666668176651, 0.8109999895095825, 0.8240000009536743, 0.8166666626930237, 0.8180000185966492, 0.8063333630561829, 0.8176666498184204, 0.8016666769981384]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 4, 6, 1], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 2, 3, 1, 2, 0, 4, 2, 4, 1], [83, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7888571619987488, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(grad, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2554092868885043, 2.0592057493935645, 1.6239210721161923, 1.2718885393977841, 1.0871750708064698, 0.9988723803174305, 0.9398141774707987, 0.8880954412358422, 0.8594445200045788, 0.8133215440372985, 0.8002486999055981, 0.7854840394260546, 0.7712374159830311, 0.7483666986994629, 0.7454245963967031, 0.7378628337860359, 0.7142450477248405, 0.6998878340711053, 0.6925907593125508, 0.68554314189599, 0.669508711261331, 0.6668093297869191, 0.6630954791321463, 0.6680665625604452, 0.6492851275132395, 0.6545975501621404, 0.6336383636774656, 0.6222490435184473, 0.6259305482574536, 0.6292783057196832, 0.6197329015307312, 0.6090230286050513, 0.6074707178848452, 0.6119018990948467, 0.5996535603853028], "accuracy": [0.20882314443588257, 0.38687095046043396, 0.48870691657066345, 0.5641262531280518, 0.6180161237716675, 0.650640606880188, 0.6660943031311035, 0.6853784322738647, 0.6864351034164429, 0.7045304179191589, 0.7124554514884949, 0.7132478952407837, 0.7202483415603638, 0.7316074371337891, 0.7236824631690979, 0.7313432693481445, 0.7433628439903259, 0.7456082701683044, 0.7436270117759705, 0.7485140562057495, 0.7504953145980835, 0.7557786107063293, 0.759080708026886, 0.7471932172775269, 0.7611940503120422, 0.7534011602401733, 0.7758552432060242, 0.7700436115264893, 0.7701756954193115, 0.7696473598480225, 0.7664773464202881, 0.7745344042778015, 0.7757231593132019, 0.769911527633667, 0.7736098170280457], "val_loss": [1.8504932948521204, 1.5120152745928084, 1.0491383075714111, 0.8213949714388166, 0.7255450146538871, 0.6733886003494263, 0.6303234440939767, 0.6068005561828613, 0.5784098250525338, 0.5719333376203265, 0.5576798064368111, 0.5534487622124808, 0.5253715685435704, 0.5218135969979423, 0.5456056424549648, 0.5229850155966622, 0.490895220211574, 0.4946176154272897, 0.4825176511492048, 0.4802857296807425, 0.476956980569022, 0.46487975120544434, 0.46259140968322754, 0.4679852042879377, 0.45186422552381245, 0.45602325030735563, 0.44530280998774935, 0.4536691904067993, 0.4484013829912458, 0.43967766421181814, 0.4376213124820164, 0.42716837780816214, 0.4471722160066877, 0.4321313670703343, 0.43154433795384], "val_accuracy": [0.46666666865348816, 0.5643333196640015, 0.6629999876022339, 0.6863333582878113, 0.722000002861023, 0.7316666841506958, 0.7279999852180481, 0.746999979019165, 0.750333309173584, 0.7406666874885559, 0.7583333253860474, 0.7433333396911621, 0.7723333239555359, 0.765333354473114, 0.7486666440963745, 0.7613333463668823, 0.7829999923706055, 0.7886666655540466, 0.7983333468437195, 0.7993333339691162, 0.7996666431427002, 0.793666660785675, 0.8033333420753479, 0.8003333210945129, 0.8050000071525574, 0.8080000281333923, 0.8130000233650208, 0.7973333597183228, 0.812333345413208, 0.8240000009536743, 0.815666675567627, 0.8193333148956299, 0.8050000071525574, 0.8173333406448364, 0.8050000071525574]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 0, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7885714173316956, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2554092868885043, 2.059191144484224, 1.623919466955472, 1.2718883488928054, 1.0871190454162831, 0.9984724847175473, 0.9399815446602088, 0.8882982710475037, 0.8591360166607878, 0.8134091027723627, 0.799771349522353, 0.7855935760650338, 0.77110216223474, 0.7485336570644643, 0.745156821951402, 0.7378789917856805, 0.7146319692885288, 0.6998712901174117, 0.6929801266191186, 0.6854799475337315, 0.6698891525932386, 0.6662895893927783, 0.6627116258259951, 0.6658307641268312, 0.6491484292950754, 0.653648332227821, 0.6330897545282316, 0.622336088264812, 0.6255029531879952, 0.6285851716507128, 0.6196829110419415, 0.6092053789819126, 0.609019753160163, 0.610797851699108, 0.6003002069173095], "accuracy": [0.20882314443588257, 0.38687095046043396, 0.4885748326778412, 0.5639941692352295, 0.6181482076644897, 0.6513010263442993, 0.6653017997741699, 0.6852463483810425, 0.687491774559021, 0.7049266695976257, 0.7116629481315613, 0.7147008180618286, 0.7215691208839417, 0.7296261787414551, 0.724210798740387, 0.7309470176696777, 0.7433628439903259, 0.7469290494918823, 0.743891179561615, 0.7497028112411499, 0.7498348951339722, 0.7564390301704407, 0.7585523724555969, 0.7466648817062378, 0.761590301990509, 0.7544577717781067, 0.7744023203849792, 0.7689869403839111, 0.7709681391716003, 0.7700436115264893, 0.765949010848999, 0.7740060687065125, 0.7754589915275574, 0.7708360552787781, 0.7745344042778015], "val_loss": [1.8504926136561803, 1.5119764804840088, 1.0491598333631242, 0.8213321992329189, 0.7257382529122489, 0.6737896033695766, 0.6312949487141201, 0.6069885151726859, 0.5781276226043701, 0.5718661887305123, 0.5576566457748413, 0.5536506175994873, 0.5246833733149937, 0.5231037310191563, 0.5460847956793649, 0.524823648588998, 0.4898520367486136, 0.49622161047799246, 0.48303588799067904, 0.48074494089399067, 0.4762511764253889, 0.46509679726191927, 0.4610237904957363, 0.46800300053187777, 0.4520727055413382, 0.4560791254043579, 0.4462332384926932, 0.45378594739096506, 0.44925546646118164, 0.4402210456984384, 0.43743022850581575, 0.42667122398103985, 0.4444000039781843, 0.4328015446662903, 0.4324606657028198], "val_accuracy": [0.46666666865348816, 0.5653333067893982, 0.6639999747276306, 0.6869999766349792, 0.7206666469573975, 0.7323333621025085, 0.7276666760444641, 0.7480000257492065, 0.7509999871253967, 0.7409999966621399, 0.7586666941642761, 0.7436666488647461, 0.7723333239555359, 0.7646666765213013, 0.7493333220481873, 0.7616666555404663, 0.7833333611488342, 0.7846666574478149, 0.79666668176651, 0.7993333339691162, 0.8009999990463257, 0.7933333516120911, 0.8046666383743286, 0.8009999990463257, 0.8026666641235352, 0.8066666722297668, 0.8113333582878113, 0.7950000166893005, 0.8090000152587891, 0.8246666789054871, 0.8166666626930237, 0.8203333616256714, 0.8083333373069763, 0.8183333277702332, 0.8040000200271606]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 4, 6, 1], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 5, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [21, 63, 56, 12]], "fitness": -0.7342857122421265, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad))), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.293066590422133, 2.246065238022518, 2.1356579417550035, 1.877427930561716, 1.5106106361677114, 1.3854138716384168, 1.3275596976295958, 1.0489686136437193, 0.9296832385316359, 0.9301288301178556, 0.8598501301633683, 0.8115331505220705, 0.8262628989370193, 0.8217730014835287, 0.7872448419504288, 0.7515546891195206, 0.757265973061209, 0.7390655152959248, 0.7113918649553544, 0.7154165821666841, 0.7006939049599082, 0.6853958038983958, 0.6703937200034976, 0.6574199979866753, 0.6345077476418328, 0.6379722213433356, 0.6237862988422733, 0.6116368542053223], "accuracy": [0.11702549457550049, 0.2343151569366455, 0.3568881154060364, 0.42570334672927856, 0.4830273389816284, 0.5324263572692871, 0.5639941692352295, 0.6382247805595398, 0.6539427042007446, 0.6653017997741699, 0.6939638257026672, 0.7016246318817139, 0.6988508701324463, 0.7020208835601807, 0.7046625018119812, 0.7113987803459167, 0.7187954187393188, 0.7346453666687012, 0.7374191284179688, 0.7329282760620117, 0.7383436560630798, 0.7358341217041016, 0.7475894689559937, 0.7504953145980835, 0.7578919529914856, 0.7611940503120422, 0.7677981853485107, 0.7651565074920654], "val_loss": [1.9435663223266602, 1.8727152688162667, 1.7068575790950231, 1.3306883403233118, 0.9436497688293457, 0.7820226975849697, 0.710768563406808, 0.6400013821465629, 0.6960109642573765, 0.6664100885391235, 0.5809539215905326, 0.5695991686412266, 0.5650827373777118, 0.5566860267094204, 0.5407087462288993, 0.5454579080854144, 0.5599593264716012, 0.5343910796301705, 0.5188034091676984, 0.5099209036145892, 0.49096756322043283, 0.4709695747920445, 0.46278081621442524, 0.4499275173459734, 0.4576718126024519, 0.4512264387948172, 0.4399670362472534, 0.43145803042820524], "val_accuracy": [0.2736666798591614, 0.42633333802223206, 0.476666659116745, 0.5609999895095825, 0.6683333516120911, 0.671999990940094, 0.7096666693687439, 0.7329999804496765, 0.7120000123977661, 0.7283333539962769, 0.7483333349227905, 0.7446666955947876, 0.750333309173584, 0.7513333559036255, 0.7563333511352539, 0.7633333206176758, 0.7723333239555359, 0.7699999809265137, 0.7646666765213013, 0.7726666927337646, 0.7793333530426025, 0.7973333597183228, 0.8086666464805603, 0.8040000200271606, 0.7916666865348816, 0.800000011920929, 0.8056666851043701, 0.8073333501815796]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 0, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.599142849445343, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.1239307833983836, 1.282893293364614, 0.8882599280353204, 0.8182887523213019, 0.752257661292928, 0.700101326682139, 0.6496897098205944, 0.6270312750816597, 0.5892628171991569, 0.5848468201129885, 0.5467803031383268, 0.5434945144311327, 0.5284388428902063, 0.5145260480101775, 0.5045522849171814, 0.5139982605717359, 0.4934384912004434, 0.47057630296286307, 0.45853371962092065, 0.46633281359079254, 0.4730692295240232, 0.45407254396176466, 0.4408732332794059, 0.46208413532775044, 0.43642867113762623, 0.4448590044450325, 0.42823644951350026, 0.43406520141681043, 0.4355876299730618, 0.4611543703348472, 0.43656408783230943], "accuracy": [0.2887333333492279, 0.5647866725921631, 0.6733588576316833, 0.6907938122749329, 0.7275128960609436, 0.7425703406333923, 0.7532690763473511, 0.7637035846710205, 0.7751948237419128, 0.7827235460281372, 0.7902522683143616, 0.7866860628128052, 0.8030643463134766, 0.7987055778503418, 0.8080834746360779, 0.8082155585289001, 0.8158763647079468, 0.8310658931732178, 0.8236692547798157, 0.826310932636261, 0.8256505131721497, 0.833179235458374, 0.8397833704948425, 0.8212917447090149, 0.830669641494751, 0.8342359066009521, 0.8323867321014404, 0.8347642421722412, 0.8359529972076416, 0.8256505131721497, 0.8388587832450867], "val_loss": [1.105325664792742, 0.6905101026807513, 0.5738336529050555, 0.5939721209662301, 0.5023688759122577, 0.4750779867172241, 0.45452957493918283, 0.4330203448023115, 0.40664332253592356, 0.40522658824920654, 0.41483789682388306, 0.4017706683703831, 0.3720760004861014, 0.37022909096309115, 0.36451584100723267, 0.36024843794958933, 0.3432145289012364, 0.3449028304644993, 0.3495372874396188, 0.3377681459699358, 0.33634367159434725, 0.3487002168382917, 0.3452251638684954, 0.355358932699476, 0.33717974594661165, 0.3384174960000174, 0.3606151342391968, 0.35885460887636456, 0.3657688668795994, 0.39919196707861765, 0.3784087130001613], "val_accuracy": [0.5843333601951599, 0.7356666922569275, 0.7369999885559082, 0.7429999709129333, 0.7676666378974915, 0.7876666784286499, 0.7990000247955322, 0.8066666722297668, 0.8190000057220459, 0.8270000219345093, 0.8149999976158142, 0.82833331823349, 0.8379999995231628, 0.8489999771118164, 0.8403333425521851, 0.8486666679382324, 0.859666645526886, 0.862666666507721, 0.8586666584014893, 0.8600000143051147, 0.8633333444595337, 0.8686666488647461, 0.8613333106040955, 0.8576666712760925, 0.8673333525657654, 0.8706666827201843, 0.862333357334137, 0.8586666584014893, 0.8493333458900452, 0.8606666922569275, 0.8606666922569275]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 8, 2, 5, 2, 0, 2, 2, 6, 7], [3, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 15, 10, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 0, 2, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 1, 2, 5, 4, 4, 0, 2, 5, 3, 4, 3, 0, 8, 5, 7, 4, 3, 6, 8, 8, 3, 7, 1, 0, 6, 4, 6, 2, 4, 8, 0, 8, 3, 2, 4, 5, 9, 2, 5, 7], [1, 5, 3, 3, 1, 0, 0, 4, 2, 4, 1, 2, 1, 2, 5, 3, 4, 0, 3, 3, 3, 2, 5, 4, 3, 3, 4], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [57, 85, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 13, 8, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, grad)), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.300726043486781, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 2, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [3875.7730162450116, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5078.149693080357, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 2, 3, 1, 2, 0, 4, 2, 4, 1], [40, 81], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 3, 1, 0, 2, 2, 2, 0, 0, 2, 1, 1, 1], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3031456011665212, 2.304804843603549, 2.3088583866870636, 2.3713017226115762, 3.6340676686704247, 5.685244821617238], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9745235443115234, 1.9757393428257533, 1.9851908002580916, 2.3699001584734236, 4.691500391278948, 7.247151783534458], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [1, 1, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 7, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 0, 3, 2, 5, 0, 0, 4, 0, 8, 3, 4, 2, 3, 2, 0, 7, 5, 0, 4, 4, 6, 3, 9, 5, 3, 9, 9], [1, 1, 0, 0, 3, 3, 2, 2, 1, 2, 2, 0, 2, 3, 3], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [8522568896.110034, 8312054.061935175, 142957106667991.22, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09998679161071777, 0.09998679161071777, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 621673289.1428572, 1.0466784681094582e+16, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1], [2, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 3, 3, 1, 0, 0, 4, 2, 4, 1, 2, 1, 2, 5, 3, 4, 0, 3, 3, 3, 2, 5, 4, 3, 3, 4], [83, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3029491083575686, 2.553273359042243, 16.953151467076037, 82.5807848582572, 205.4542408042407, 387.02412729158755], "accuracy": [0.10711926966905594, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.983856201171875, 3.997902052743094, 39.5990960257394, 124.46882847377232, 258.71116420200894, 441.94032505580356], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [8, 2, 5, 6, 7, 0, 7, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 2, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [99], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.add(grad, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1], [5, 2, 5, 6, 7, 0, 7, 2, 5, 2, 2, 9, 4, 0], [0, 0, 2, 0], [39, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 0, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 1, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 1], [2, 7, 5, 6, 7, 0, 7, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 1, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.317962847932486, 7.5818483556109455e+28, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12349755316972733, 0.08387266844511032, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.372179576328823, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [4, 2, 5, 6, 7, 0, 7, 2, 5, 2, 2, 9, 4, 0], [0, 2, 2, 0], [96, 34, 93], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 2, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [86], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 9, 1, 6, 9, 5, 2, 1, 4, 0, 8, 5, 7, 7, 4, 0, 6, 2, 0, 2, 2, 1, 4, 1, 2, 0, 5, 1, 6, 5, 2, 7, 2], [1, 1, 0, 0, 3, 0, 2, 3, 1, 0, 0, 2, 0, 2, 3, 0, 3, 2, 2, 0, 2], [16, 63, 56, 12, 62, 76, 36, 47, 98, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 9, 9, 4, 5, 1, 1, 1, 1, 0, 1, 54, 33, 21, 10], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, beta), grad), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.subtract(alpha, tf.math.pow(alpha, tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), beta), tf.math.pow(sigma, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), beta)), tf.math.square(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))), tf.math.divide_no_nan(sigma, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(sigma, beta), tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1], [0, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [77, 12, 93], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 4, 1, 2, 5, 4, 4, 0, 2, 5, 3, 4, 3, 0, 8, 5, 7, 4, 3, 6, 8, 8, 3, 7, 1, 0, 6, 4, 6, 2, 4, 8, 0, 8, 3, 2, 4, 5, 9, 2, 5, 7], [1, 5, 3, 2, 2, 0, 0, 4, 2, 4, 1, 2, 1, 2, 5, 3, 4, 0, 3, 3, 3, 2, 5, 4, 3, 3, 4], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 6, 2, 5, 6, 0, 4, 0, 8], [3, 3, 0, 3, 3, 0, 2], [27, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 8, 7, 2, 1, 1, 1, 0, 1, 16, 10, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.pow(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))), tf.math.pow(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(sigma)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), sigma)), tf.math.negative(sigma)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 4, 6, 1], [2, 1, 3, 0, 3], [96, 12, 93], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 1, 2, 5, 2, 0, 6, 2, 6, 7, 8, 2, 1, 5, 4, 6, 6, 3, 1, 8, 5], [5, 5, 0, 3, 5, 2, 0, 4, 2, 4, 1, 0, 3, 2, 1, 1, 2], [83, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.8818048622157546, 610.9756149535858, 2511.7060472062394, 8119.218314539031, 21317.29750910134, 45348.22477060907, 84292.57986684388], "accuracy": [0.10408136248588562, 0.10487385839223862, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15.929338727678571, 1229.4707728794642, 4166.921037946428, 12295.980747767857, 28621.450334821428, 56213.130580357145, 98253.08705357143], "val_accuracy": [0.09733333438634872, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 2, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]