[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8222857117652893, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.008771687986167, 1.413942708299617, 1.0649651012809884, 0.8447118466792563, 0.7784573051592835, 0.7520849049177939, 0.692615693987888, 0.6750773043208008, 0.6870324112294829, 0.6307435984294082, 0.5919803429698554, 0.6049598912757543, 0.5781041532066031, 0.5482632206761999, 0.5475710388408314, 0.5305626859061549, 0.5487870623241594, 0.49391908311273885, 0.49278666311881136, 0.5011554360586529, 0.46150940462204887, 0.4547812497697691, 0.4416777337617752, 0.475642552351073, 0.43932469370830896, 0.44247716317685715, 0.4395429865834641], "accuracy": [0.3249240517616272, 0.5095760226249695, 0.6091665625572205, 0.6820763349533081, 0.700700044631958, 0.7074362635612488, 0.737022876739502, 0.733588695526123, 0.7420420050621033, 0.752212405204773, 0.7737419009208679, 0.7627789974212646, 0.778232753276825, 0.7862898111343384, 0.7905164361000061, 0.7954035401344299, 0.7901201844215393, 0.8195747137069702, 0.8119139075279236, 0.8070268034934998, 0.828292191028595, 0.826310932636261, 0.8409721255302429, 0.8216879963874817, 0.8309338092803955, 0.8319904804229736, 0.8341038227081299], "val_loss": [1.5311928476606096, 1.0424154826572962, 0.7344628742762974, 0.6015366997037616, 0.7040622064045498, 0.5324148620877948, 0.5039302962166923, 0.5517408336911883, 0.4685923882893154, 0.4682595729827881, 0.4952751908983503, 0.511761120387486, 0.4622478485107422, 0.41769654410226004, 0.41164630651474, 0.3944703255380903, 0.3829028180667332, 0.4078305789402553, 0.3744697741099766, 0.36784253801618305, 0.38428700821740286, 0.35148302146366667, 0.3762090376445225, 0.3671413319451468, 0.38315337896347046, 0.34622769696371897, 0.3486810156277248], "val_accuracy": [0.5093333125114441, 0.5616666674613953, 0.656000018119812, 0.734666645526886, 0.6850000023841858, 0.7649999856948853, 0.7683333158493042, 0.7429999709129333, 0.7860000133514404, 0.7896666526794434, 0.7519999742507935, 0.7699999809265137, 0.7826666831970215, 0.8143333196640015, 0.8196666836738586, 0.8333333134651184, 0.8446666598320007, 0.8196666836738586, 0.843999981880188, 0.8429999947547913, 0.8333333134651184, 0.8583333492279053, 0.8456666469573975, 0.8463333249092102, 0.824999988079071, 0.8523333072662354, 0.8553333282470703]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [2, 1, 1, 0, 0, 0, 2, 2], [27, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8199999928474426, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0073992058333623, 1.3955454312106481, 1.1000466050882507, 0.8612344409055588, 0.7881820756352069, 0.728303896099144, 0.6966540641662483, 0.689320022655815, 0.6670867738360349, 0.6306078840382205, 0.5943565726626614, 0.6065288274878005, 0.5791041087701163, 0.5659018852817479, 0.5396266318409907, 0.5327972824689089, 0.5486901730846152, 0.5037761700073049, 0.4935941069062517, 0.5060145047638064, 0.45941295359333384, 0.4652566154123439, 0.4683251778652104, 0.461878139006542, 0.44105307958412954, 0.4433898321114133, 0.43555359881095224, 0.42260060376416203, 0.42352078055362374, 0.41287779605714575, 0.4303627264946837, 0.39813775939712154, 0.3810978237514435, 0.39848670246515766, 0.3772435912862666, 0.380989086712986, 0.35621297083132775], "accuracy": [0.32584863901138306, 0.5211992859840393, 0.6028265953063965, 0.6709813475608826, 0.6968696117401123, 0.7161537408828735, 0.7367587089538574, 0.7288337349891663, 0.7424382567405701, 0.7486461400985718, 0.7712323069572449, 0.7607977986335754, 0.7757231593132019, 0.7837802171707153, 0.7924976944923401, 0.7960638999938965, 0.7895918488502502, 0.8124422430992126, 0.8105930685997009, 0.8042530417442322, 0.8245938420295715, 0.8227446675300598, 0.8251221776008606, 0.8271034359931946, 0.8345000743865967, 0.8296129703521729, 0.8355567455291748, 0.8425571322441101, 0.8399154543876648, 0.8421608805656433, 0.835160493850708, 0.8516708612442017, 0.8595958352088928, 0.8540483713150024, 0.8615770936012268, 0.8576145768165588, 0.8671245574951172], "val_loss": [1.4983233383723669, 1.1488798686436243, 0.6550765378134591, 0.6915839229311261, 0.6062728847776141, 0.5309408732822963, 0.5717425686972482, 0.5228653635297503, 0.4773061616080148, 0.47851269585745676, 0.5106129986899239, 0.5221844570977348, 0.4701631580080305, 0.407803407737187, 0.41718206235340666, 0.38724454811641146, 0.385019132069179, 0.3984859160014561, 0.39195217405046734, 0.3644269108772278, 0.37136646679469515, 0.3647336023194449, 0.36651475940431866, 0.3699671370642526, 0.37203550338745117, 0.34411780323301044, 0.34461671113967896, 0.3672264984675816, 0.34647850479398457, 0.4321222220148359, 0.35724559000560213, 0.322656444140843, 0.3409378869192941, 0.3405446835926601, 0.3182295135089329, 0.3389756424086435, 0.32432700054986136], "val_accuracy": [0.5143333077430725, 0.5266666412353516, 0.7020000219345093, 0.7103333473205566, 0.7153333425521851, 0.768666684627533, 0.7386666536331177, 0.7663333415985107, 0.7730000019073486, 0.7786666750907898, 0.7450000047683716, 0.7620000243186951, 0.7743333578109741, 0.828000009059906, 0.8186666369438171, 0.8433333039283752, 0.8443333506584167, 0.8303333520889282, 0.8293333053588867, 0.8463333249092102, 0.8496666550636292, 0.8416666388511658, 0.8483333587646484, 0.8456666469573975, 0.8386666774749756, 0.8576666712760925, 0.859333336353302, 0.8373333215713501, 0.8486666679382324, 0.7860000133514404, 0.8489999771118164, 0.8656666874885559, 0.859000027179718, 0.8610000014305115, 0.8613333106040955, 0.8583333492279053, 0.8566666841506958]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 2, 9, 4, 3, 5, 7, 0, 3, 7, 8, 9], [3, 1, 3, 0, 2, 0, 2, 2, 1, 2, 0], [27, 12, 93, 18, 15], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 7, 6, 6], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8157142996788025, "mapping_values": [1, 32, 32, 21, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, grad)), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, grad)))))))))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), grad)))))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0072609756475015, 1.398257380494856, 1.062228422635078, 0.8400702321250693, 0.7821199484804224, 0.7261153830434542, 0.69903679023786, 0.6801233355631493, 0.6852459554438578, 0.6238043811012332, 0.5988027486094489, 0.6010010395351103, 0.5795128479877467, 0.5635312696914663, 0.5445505690423489, 0.5299825686284847, 0.5540912141416996, 0.5016392625995268, 0.4950548978553173, 0.4979433521161919, 0.4600020266283048, 0.4585385404880477, 0.45445307969984017, 0.4611407123764886, 0.43643663967479224, 0.44512338018955855, 0.4348570314286297, 0.4174416580960389, 0.43702107051879724, 0.415585390073024, 0.41489052424152467, 0.3970613630102012, 0.3917973433007276, 0.38991395963606595, 0.3810482828049628, 0.3688022975459658, 0.3569402811179591, 0.35342856516943255], "accuracy": [0.3259807229042053, 0.5194822549819946, 0.6075815558433533, 0.6796988248825073, 0.7021529674530029, 0.7152291536331177, 0.7347774505615234, 0.7312111854553223, 0.7416457533836365, 0.7543256878852844, 0.7688548564910889, 0.7627789974212646, 0.78113853931427, 0.7833839654922485, 0.7885351777076721, 0.7961959838867188, 0.785629391670227, 0.8178576231002808, 0.8132346868515015, 0.8083476424217224, 0.8269713521003723, 0.8234050869941711, 0.8313300609588623, 0.8274996876716614, 0.8367455005645752, 0.8304054737091064, 0.8381983637809753, 0.8459912538528442, 0.8352925777435303, 0.8444063067436218, 0.8461233377456665, 0.8469158411026001, 0.8560295701026917, 0.8536521196365356, 0.8561616539955139, 0.8618412613868713, 0.8677849769592285, 0.8688416481018066], "val_loss": [1.4950756345476424, 1.038229261125837, 0.6846376998083932, 0.6455049174172538, 0.6165122645241874, 0.535705430167062, 0.5266377585274833, 0.5300178527832031, 0.46819441659109934, 0.4668012857437134, 0.4914719717843192, 0.5246216569628034, 0.4658377340861729, 0.40520658663340975, 0.42017278500965666, 0.39115363359451294, 0.3814638682774135, 0.38714746066502165, 0.3805054596492222, 0.36541993277413504, 0.3868455971990313, 0.35277531828199116, 0.37601910318647114, 0.36823733363832745, 0.374479557786669, 0.35096081665584017, 0.34591024262564524, 0.3704493727002825, 0.3450014165469578, 0.3631205473627363, 0.3301458103316171, 0.3244711756706238, 0.32845743213381084, 0.3417671407972063, 0.3320917401994978, 0.3423580016408648, 0.3227553197315761, 0.3649638720921108], "val_accuracy": [0.5146666765213013, 0.5770000219345093, 0.675000011920929, 0.7139999866485596, 0.7149999737739563, 0.762666642665863, 0.7599999904632568, 0.7606666684150696, 0.7873333096504211, 0.7786666750907898, 0.753333330154419, 0.7636666893959045, 0.781333327293396, 0.8263333439826965, 0.8149999976158142, 0.8356666564941406, 0.8453333377838135, 0.8396666646003723, 0.8373333215713501, 0.843666672706604, 0.8360000252723694, 0.8576666712760925, 0.843666672706604, 0.8463333249092102, 0.831333339214325, 0.8476666808128357, 0.8586666584014893, 0.8363333344459534, 0.8516666889190674, 0.8353333473205566, 0.8633333444595337, 0.8566666841506958, 0.8650000095367432, 0.859000027179718, 0.8526666760444641, 0.8566666841506958, 0.8569999933242798, 0.8496666550636292]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 3, 6, 5, 2, 2, 4, 8, 7, 9, 1, 4], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 3, 3, 1], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8108571171760559, "mapping_values": [1, 9, 9, 5, 4, 2, 38, 38, 22, 16, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(tf.math.pow(grad, tf.math.add(beta, grad)), tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0073982767220486, 1.397178577000612, 1.0965402132610462, 0.8572064857472833, 0.8179181718303543, 0.7180653100063489, 0.7023958811639023, 0.6898190062894104, 0.6623104556582119, 0.6289836157031142, 0.600777039588041, 0.6006308612712008, 0.5751686468887732, 0.5599153722282004, 0.5464448775629153, 0.533922434742771, 0.5504193531405641, 0.5048698433449145, 0.5002072209522095, 0.4996649751006935, 0.4485975847331178, 0.4702837917239769, 0.46746279229782106, 0.46473517553397864, 0.4379631653713465, 0.45112109684578855, 0.4398416340185777, 0.4244136735629632, 0.4227368697718921, 0.4089323411591222, 0.435466088733464, 0.3999421599361292, 0.381909846432882, 0.39254556565378573, 0.37508977395574006, 0.3696097214310759, 0.3588903605221537], "accuracy": [0.3261128067970276, 0.522520124912262, 0.6044115424156189, 0.6843217611312866, 0.6856426000595093, 0.7189275026321411, 0.7342491149902344, 0.7259278893470764, 0.7461365461349487, 0.750759482383728, 0.7688548564910889, 0.763439416885376, 0.7819310426712036, 0.7828556299209595, 0.7876105904579163, 0.7930260300636292, 0.7893276810646057, 0.8133667707443237, 0.8068947196006775, 0.8063663840293884, 0.834632158279419, 0.8234050869941711, 0.8276317715644836, 0.8249900937080383, 0.835160493850708, 0.8289526104927063, 0.8350284099578857, 0.8408400416374207, 0.8397833704948425, 0.8462554216384888, 0.8330471515655518, 0.847840428352356, 0.8594637513160706, 0.8529917001724243, 0.8548408150672913, 0.8595958352088928, 0.8687095642089844], "val_loss": [1.4957922186170305, 1.16387254851205, 0.6280050277709961, 0.754633971623012, 0.5516179629734584, 0.5819859504699707, 0.592515196119036, 0.504359245300293, 0.47271486691066195, 0.4797090973172869, 0.47506328991481234, 0.512638773236956, 0.456195592880249, 0.4083412119320461, 0.4082690477371216, 0.39199231352124897, 0.3907311388424465, 0.39447219031197683, 0.39187014954430716, 0.3657580784388951, 0.3810913988522121, 0.36016517877578735, 0.37954916272844585, 0.36885652371815275, 0.3730560285704477, 0.3552885821887425, 0.3440918241228376, 0.37369522026606966, 0.3559489335332598, 0.4419755595070975, 0.35072727714266094, 0.32279821804591585, 0.3309715560504368, 0.34155939306531635, 0.3231170518057687, 0.3386590140206473, 0.32519759450639996], "val_accuracy": [0.512666642665863, 0.5243333578109741, 0.7093333601951599, 0.6636666655540466, 0.7666666507720947, 0.7400000095367432, 0.7243333458900452, 0.777999997138977, 0.7706666588783264, 0.7786666750907898, 0.7703333497047424, 0.7649999856948853, 0.7873333096504211, 0.8270000219345093, 0.8223333358764648, 0.840666651725769, 0.8309999704360962, 0.8360000252723694, 0.8333333134651184, 0.8483333587646484, 0.840666651725769, 0.847000002861023, 0.843666672706604, 0.8486666679382324, 0.8373333215713501, 0.8453333377838135, 0.8586666584014893, 0.8316666483879089, 0.8450000286102295, 0.7796666622161865, 0.8483333587646484, 0.8663333058357239, 0.8600000143051147, 0.859000027179718, 0.859000027179718, 0.8579999804496765, 0.8553333282470703]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 3, 4, 0, 6, 5, 4, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [3, 3, 1, 0, 0, 0, 2, 2, 0, 0, 3, 2, 3, 3, 3, 0, 0], [91, 12, 93, 29, 80, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [37, 63, 57, 12]], "fitness": -0.7968571186065674, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2338879106224585, 1.8214321833056166, 1.300211930051377, 1.0973152912618809, 0.9473816760227807, 0.9073885895115997, 0.8571298923695234, 0.8035018329591389, 0.7874457217431134, 0.7665686544536238, 0.7627036014662568, 0.7320430833807459, 0.7263294429811173, 0.6900200703124864, 0.6864596963826266, 0.6802276312604226, 0.6676764301320959, 0.6594295075320454, 0.6471133072850821, 0.6409757203980837, 0.6428527228820593, 0.6307700058299442, 0.6174032784031052, 0.6024052215967165, 0.6060040109681258, 0.6076160892755632, 0.5861784572362616, 0.5867612241927139, 0.5849008220786102, 0.5737650487023322, 0.5795573631077394, 0.5712673409094412, 0.5846285617756192, 0.5669933658360395], "accuracy": [0.23180557787418365, 0.4501386880874634, 0.5473517179489136, 0.6129969358444214, 0.6634526252746582, 0.6713775992393494, 0.6886804699897766, 0.7080966830253601, 0.7150970697402954, 0.7172104120254517, 0.7168141603469849, 0.7280412316322327, 0.7323999404907227, 0.7436270117759705, 0.7450799345970154, 0.7557786107063293, 0.7531369924545288, 0.7555144429206848, 0.7564390301704407, 0.7617223858833313, 0.7644960880279541, 0.7631752490997314, 0.7687227725982666, 0.7732135653495789, 0.7820631265640259, 0.7759873270988464, 0.7819310426712036, 0.7825914621353149, 0.7872143983840942, 0.7862898111343384, 0.7810064554214478, 0.7885351777076721, 0.7821952104568481, 0.7901201844215393], "val_loss": [1.7574800763811385, 1.1083629471915108, 0.8864987237112862, 0.7045199189867292, 0.6612414462225777, 0.6067395380565098, 0.5847713095801217, 0.574425458908081, 0.5410751615251813, 0.5423635925565448, 0.5472760030201503, 0.5087740080697196, 0.5033322061811175, 0.4901879004069737, 0.49908076013837543, 0.4716646500996181, 0.471691506249564, 0.4920726333345686, 0.45340326854160856, 0.5062704937798637, 0.455022999218532, 0.44611431871141705, 0.4366953117506845, 0.4429241418838501, 0.46587654522487093, 0.43577122688293457, 0.42641334874289377, 0.4364046539579119, 0.42249115875789095, 0.41638702154159546, 0.43940133707863943, 0.4159971645900181, 0.41689694779259817, 0.42462640149252756], "val_accuracy": [0.5189999938011169, 0.6499999761581421, 0.6416666507720947, 0.7243333458900452, 0.7099999785423279, 0.7450000047683716, 0.7526666522026062, 0.7403333187103271, 0.7606666684150696, 0.7440000176429749, 0.7450000047683716, 0.781000018119812, 0.765333354473114, 0.7863333225250244, 0.7806666493415833, 0.7946666479110718, 0.7879999876022339, 0.7673333287239075, 0.8006666898727417, 0.7739999890327454, 0.7943333387374878, 0.8173333406448364, 0.8166666626930237, 0.8013333082199097, 0.7816666960716248, 0.8053333163261414, 0.8176666498184204, 0.8183333277702332, 0.8226666450500488, 0.8180000185966492, 0.7953333258628845, 0.8199999928474426, 0.8196666836738586, 0.8116666674613953]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 2, 5, 7, 1, 0, 2, 5, 2, 8, 3, 4, 0, 6, 5, 4, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 3, 2, 3, 3, 3, 0, 0], [91, 12, 93, 29, 80, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [38, 63, 57, 12]], "fitness": -0.7931428551673889, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2136335770656497, 1.6600344919525416, 1.211488727612534, 1.054329551529056, 0.9017439391067897, 0.8810105624688284, 0.8289554244759313, 0.761861090615378, 0.7659434155623643, 0.7568570269790104, 0.7410208687270873, 0.7095048252491667, 0.7060348184321928, 0.6683410556797243, 0.6637536206611978, 0.6603907559762274, 0.6484957526325629, 0.6450423193551043, 0.6362920459062196, 0.62855442602243, 0.6202424526246091, 0.6125667705874103, 0.598146930157847, 0.5907480475956407, 0.5919433269581349, 0.5910502769345258, 0.5681905543106642], "accuracy": [0.2491084337234497, 0.4859331548213959, 0.5692775249481201, 0.6217144131660461, 0.6740192770957947, 0.6787742972373962, 0.6992471218109131, 0.7220974564552307, 0.7202483415603638, 0.7213049530982971, 0.7213049530982971, 0.7362303733825684, 0.7366266250610352, 0.7534011602401733, 0.7523444890975952, 0.76106196641922, 0.7580240368843079, 0.7604015469551086, 0.7565711140632629, 0.7644960880279541, 0.7714964747428894, 0.769911527633667, 0.7749306559562683, 0.7769119143486023, 0.783119797706604, 0.7816668748855591, 0.7869502305984497], "val_loss": [1.6676936149597168, 0.9667409828730992, 0.8790234497615269, 0.6672144787652152, 0.6641533034188407, 0.5988515445164272, 0.5652765376227242, 0.5568490028381348, 0.5360439164297921, 0.553339992250715, 0.5510244539805821, 0.5005044937133789, 0.4919639996119908, 0.48979309626988005, 0.4837257351194109, 0.4622166837964739, 0.4649202653339931, 0.499632682119097, 0.445110559463501, 0.47171410492488314, 0.45001981939588276, 0.4361765384674072, 0.4279893807002476, 0.4502096005848476, 0.46887029920305523, 0.4265220846448626, 0.41931961263929096], "val_accuracy": [0.5516666769981384, 0.6573333144187927, 0.6380000114440918, 0.7263333201408386, 0.6986666917800903, 0.731333315372467, 0.7516666650772095, 0.7483333349227905, 0.753000020980835, 0.7300000190734863, 0.7423333525657654, 0.7723333239555359, 0.7776666879653931, 0.7839999794960022, 0.7866666913032532, 0.7983333468437195, 0.7926666736602783, 0.7639999985694885, 0.8090000152587891, 0.8003333210945129, 0.7956666946411133, 0.8206666707992554, 0.8206666707992554, 0.7963333129882812, 0.7806666493415833, 0.8113333582878113, 0.8190000057220459]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 3, 0, 0, 0, 2, 2], [96, 20, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 5, 1, 2, 8, 2, 2, 1, 5, 6, 7, 7, 2, 4, 4, 0, 2, 4, 5], [3, 4, 1, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3, 5, 0], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [7, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 8, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.3804086477150928, 2.3042034944759275, 2.19760647983347, 1.8761388429828907, 1.7155689292217935, 1.9422537168538834, 1.5562334362353, 1.5751866424529308, 1.2645709069334772, 1.1738126677387284, 1.0841035530740686, 1.0145905224985026, 1.0087100161128055, 0.9391892761240042, 0.8050598902252639, 0.8081356570736733, 0.7823353247430898, 0.7201286225885117, 0.6970401558783454, 0.7053571375306603, 0.6533134871344163, 0.6130362292873451, 0.6483937913495095, 0.6111314683904612, 0.5763868841323807, 0.5688772985349793, 0.5475890770084145, 0.5331933016806011, 0.534737367703064, 0.5391598978865778, 0.5107098461346872], "accuracy": [0.1546691358089447, 0.09840179979801178, 0.1884823739528656, 0.3961167633533478, 0.4600449204444885, 0.34367984533309937, 0.4810461103916168, 0.4850085973739624, 0.5559371113777161, 0.5884295105934143, 0.6127327680587769, 0.637432336807251, 0.6472064256668091, 0.6630563735961914, 0.7107383608818054, 0.7042662501335144, 0.7087571024894714, 0.7305507659912109, 0.7396644949913025, 0.7339849472045898, 0.7564390301704407, 0.7666094303131104, 0.7537974119186401, 0.7728173136711121, 0.7843085527420044, 0.7804781198501587, 0.789988100528717, 0.7972526550292969, 0.7926297783851624, 0.7938185334205627, 0.7980451583862305], "val_loss": [1.9794624192374093, 1.9642913000924247, 1.5714396408626012, 1.2955142770494734, 1.9152532305036272, 1.5453198977879115, 1.199719054358346, 1.1282006331852503, 0.7795920542308262, 0.7635486466544015, 0.8208941732134137, 0.7305149180548531, 0.8344275781086513, 0.6481435128620693, 0.55364990234375, 0.64661591393607, 0.5288601773125785, 0.5208434888294765, 0.5564809015819004, 0.5504520790917533, 0.47985213143484934, 0.4845036438533238, 0.46310438428606304, 0.47059827191489084, 0.49358127798352924, 0.4408132348741804, 0.4415304831096104, 0.43345846448625835, 0.4689476660319737, 0.4191521406173706, 0.4254271217754909], "val_accuracy": [0.10100000351667404, 0.10966666787862778, 0.44333332777023315, 0.5246666669845581, 0.2526666522026062, 0.4233333468437195, 0.5249999761581421, 0.5433333516120911, 0.6729999780654907, 0.6923333406448364, 0.6293333172798157, 0.690666675567627, 0.6866666674613953, 0.7233333587646484, 0.7616666555404663, 0.7173333168029785, 0.7696666717529297, 0.7713333368301392, 0.7580000162124634, 0.7363333106040955, 0.7926666736602783, 0.7943333387374878, 0.7906666398048401, 0.7933333516120911, 0.7730000019073486, 0.8276666402816772, 0.8136666417121887, 0.8153333067893982, 0.7993333339691162, 0.8213333487510681, 0.8209999799728394]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [2, 2, 2, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 0, 3, 0, 0, 0, 2, 2], [27, 54, 55, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0282286330929615, 1.3177001952274743, 1.1038047649510516, 0.8646581676878303, 0.7980396657997134, 0.7602471074549718, 0.7483785752260674, 0.6871411972561722, 0.6882395134342503, 0.6639140523608964, 0.6392002948885187, 0.584771248241221, 0.5865925025741547, 0.5940086977545769, 0.5847899837894462, 0.5485709364687242, 0.5318116696440486, 0.5288311043089218], "accuracy": [0.31620657444000244, 0.5267468094825745, 0.5995244979858398, 0.6756042838096619, 0.6979262828826904, 0.7084929347038269, 0.7087571024894714, 0.7420420050621033, 0.7396644949913025, 0.7518161535263062, 0.7635715007781982, 0.7829877138137817, 0.7740060687065125, 0.7726852297782898, 0.7829877138137817, 0.7921014428138733, 0.7943468689918518, 0.7992339134216309], "val_loss": [1.3007559776306152, 1.0028226034981864, 0.7409992558615548, 0.6060896430696759, 0.6245701653616769, 0.5619923557553973, 0.5071182761873517, 0.5403470652444022, 0.5428787129265922, 0.49695195470537457, 0.46393559660230366, 0.4246968456677028, 0.4183527060917446, 0.48856370789664133, 0.4334461433546884, 0.41192173957824707, 0.4210714442389352, 0.4545290470123291], "val_accuracy": [0.45133334398269653, 0.5740000009536743, 0.653333306312561, 0.7129999995231628, 0.7009999752044678, 0.7329999804496765, 0.781000018119812, 0.7646666765213013, 0.7483333349227905, 0.7739999890327454, 0.7876666784286499, 0.8116666674613953, 0.8220000267028809, 0.7710000276565552, 0.800000011920929, 0.8216666579246521, 0.8003333210945129, 0.7996666431427002]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.7814285755157471, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.square(alpha))), tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0282257412560405, 1.318154028661499, 1.0644443860033233, 0.9041510982173955, 0.799471209621102, 0.7594348892103081, 0.7291406334714017, 0.6989269650623294, 0.674140427366397, 0.6662545923181513, 0.637600891570594, 0.5894059898862435, 0.5825553371244654, 0.5796001596835626, 0.5679962659367103, 0.5462373654761444, 0.5365311297380283, 0.5286562346102083], "accuracy": [0.31620657444000244, 0.5256901383399963, 0.6136573553085327, 0.6664905548095703, 0.6952846646308899, 0.7111346125602722, 0.7209087014198303, 0.7375511527061462, 0.739928662776947, 0.7497028112411499, 0.7605336308479309, 0.7779685854911804, 0.7784969210624695, 0.7791573405265808, 0.785629391670227, 0.7924976944923401, 0.7993659973144531, 0.8061022162437439], "val_loss": [1.300988299506051, 1.0151639665876115, 0.7744415487561908, 0.62655052116939, 0.6180256094251361, 0.5196410928453717, 0.5603534664426532, 0.48025970799582346, 0.5423821040562221, 0.48810945238385883, 0.4666680949074881, 0.44664420400347027, 0.43420301164899555, 0.43213043894086567, 0.4101570929799761, 0.44058983666556223, 0.4459820474897112, 0.44595299448285786], "val_accuracy": [0.4506666660308838, 0.5743333101272583, 0.6679999828338623, 0.7123333215713501, 0.7253333330154419, 0.7540000081062317, 0.7620000243186951, 0.7836666703224182, 0.750333309173584, 0.7833333611488342, 0.7873333096504211, 0.7973333597183228, 0.8096666932106018, 0.8096666932106018, 0.8090000152587891, 0.8003333210945129, 0.7919999957084656, 0.8013333082199097]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [5, 2, 3, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 0, 1, 0, 0, 2, 2], [27, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [0, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1057006.4092972989, 2.437471667332436, 2.387082282877428, 2.3586424944218454, 2.3847338887190603, 2.3651581039801566, 2.427448435387733, 2.378766787664655, 2.36524731812775, 2.368941432717076, 2.382881722981195], "accuracy": [0.09985470771789551, 0.09774138033390045, 0.10170386731624603, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.0948355570435524, 0.09998679161071777, 0.09919429570436478, 0.09642054885625839, 0.09972262382507324], "val_loss": [2.061004093715123, 2.080773285457066, 2.0088819095066617, 2.085282189505441, 1.9851933888026647, 2.081228119986398, 2.066171509878976, 1.9954102379935128, 2.0741669791085378, 2.0124880245753696, 2.0682409150259837], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10100000351667404, 0.10066666454076767, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 8, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.268701919097101e+27, 2.451386195415708, 2.772470801057061, 3.871847988859758, 5.9301331869253096, 8.276440218848764], "accuracy": [0.068022720515728, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0589848245893205, 2.2089499746050154, 2.780557428087507, 4.295364243643625, 6.278843607221331, 8.32218769618443], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [2, 2, 5, 3, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 0, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [1, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0672302171587944, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [4, 2, 5, 5, 7, 1, 0, 2, 5, 6, 8, 3, 9, 0, 6, 5, 9, 0, 8, 7, 4, 7, 9, 3, 1, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 3, 2, 3, 3, 3, 0, 0], [91, 12, 93, 29, 80, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 0, 3, 1, 1, 2, 2, 0, 4], [1, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 2, 4], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 34, 34, 19, 15, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), tf.math.negative(tf.math.add(beta, grad)))))), tf.math.pow(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 3, 4, 0, 6, 5, 4, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 3, 2, 3, 3, 3, 0, 0], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 6, 6, 6, 8, 0, 4], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 30, 30, 17, 13, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.square(alpha))), tf.math.add(alpha, tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 5, 6, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [3, 3, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 0, 1, 2, 5, 2, 2, 1, 5, 6, 7, 8, 5, 1, 5, 2, 1, 5, 7, 1, 5, 0], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [2, 7], [71], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 7, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 0, 0, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020728468942195, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [3, 3, 1, 0, 0, 0, 2, 2], [72, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, grad)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303318631017622, 2.3028129981477674, 2.3023718235719755, 2.3042121261984145, 2.3020237036951783, 2.3023245252433657], "accuracy": [0.08849557489156723, 0.09259014576673508, 0.09166556596755981, 0.08902391046285629, 0.0952318087220192, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 3, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 3, 2, 9, 3, 9], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 26, 26, 16, 10, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3033182171625217, 2.302808481893362, 2.3023664617204647, 2.304219292454385, 2.302052931463745, 2.302387663748412, 2.3019714513553713], "accuracy": [0.08849557489156723, 0.09259014576673508, 0.09166556596755981, 0.08889182657003403, 0.0948355570435524, 0.08955223858356476, 0.09206181764602661], "val_loss": [1.9703845977783203, 1.970381396157401, 1.9703927040100098, 1.9704134123665946, 1.9704512187412806, 1.9704887526375907, 1.9705348696027483], "val_accuracy": [0.03633333370089531, 0.036666665226221085, 0.03633333370089531, 0.03566666692495346, 0.03500000014901161, 0.03466666489839554, 0.03400000184774399]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 3, 0, 0, 0, 2, 2], [27, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.035428572446107864, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), tf.math.square(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3034907199482735, 2.303502980602447, 2.3036026285466518, 2.306036112976427, 2.304270747189414, 2.3056152776058845], "accuracy": [0.0882314071059227, 0.09113723784685135, 0.08981640636920929, 0.08638224750757217, 0.08915598690509796, 0.08109892904758453], "val_loss": [1.9706854139055525, 1.9711206299918038, 1.971449647630964, 1.9719147000994002, 1.9725374494280135, 1.9733840397426061], "val_accuracy": [0.03400000184774399, 0.03033333271741867, 0.02866666577756405, 0.02800000086426735, 0.028333334252238274, 0.029333332553505898]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 5, 9, 2, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 3, 0, 0, 0, 0, 2, 2], [95, 70, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.03257142752408981, "mapping_values": [1, 6, 6, 3, 3, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037878140293455, 2.3049267548233714, 2.306363320574233, 2.310641551014612, 2.3104124852395755, 2.3147717802956937], "accuracy": [0.08730682730674744, 0.08889182657003403, 0.08440100401639938, 0.08017434924840927, 0.08109892904758453, 0.07185312360525131], "val_loss": [1.971254553113665, 1.9726488930838448, 1.9740427562168665, 1.9758850506373815, 1.9778647422790527, 1.9802511078970773], "val_accuracy": [0.02866666577756405, 0.02666666731238365, 0.021666666492819786, 0.020999999716877937, 0.01966666616499424, 0.02500000037252903]}}]