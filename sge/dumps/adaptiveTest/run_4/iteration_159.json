[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2751701848381907, 2.17834984779106, 1.9774068801504763, 1.6561472735243103, 1.3741720238570854, 1.1993122111694483, 1.0968586981587831, 1.0121669794322476, 0.9625247243121158, 0.9127515947672323, 0.8849513900120969, 0.8623499445250131, 0.829699005071025, 0.8191481507717264, 0.7982413971255625, 0.7906453941696907, 0.7699107915308686, 0.7664222390014639, 0.7533594263763539, 0.7363960880802418, 0.7297609100220871, 0.7251387508774257, 0.7062926659841012, 0.7090258420639507, 0.6938767966152166, 0.6946914883384836, 0.6906618868213493, 0.6827405043061477, 0.6729123969245596, 0.6717293269645899, 0.668340628102408, 0.6561980499268334, 0.6453366435403916, 0.6485823505054832, 0.6547771614650615, 0.6400450853907185, 0.6373107222329198, 0.6316333232208124, 0.6261160921316735, 0.6268786423635552, 0.623181588480328, 0.6219192759204362, 0.6246535178771376, 0.6081845794277042, 0.612558342202496, 0.6090165382803958, 0.6098270799190676, 0.590983465756754, 0.5974904063465636, 0.602919491755098, 0.5898433661715954, 0.5842044744839868], "accuracy": [0.1670849323272705, 0.3205653131008148, 0.41949543356895447, 0.48249900341033936, 0.54220050573349, 0.5849953889846802, 0.6126006841659546, 0.6449610590934753, 0.6528860330581665, 0.6777176260948181, 0.6919825673103333, 0.6913221478462219, 0.7025492191314697, 0.7071720957756042, 0.7189275026321411, 0.7099458575248718, 0.720380425453186, 0.7201162576675415, 0.7279091477394104, 0.7253995537757874, 0.7372870445251465, 0.735569953918457, 0.7421740889549255, 0.7441553473472595, 0.743891179561615, 0.7515519857406616, 0.744419515132904, 0.7504953145980835, 0.7534011602401733, 0.7497028112411499, 0.7614582180976868, 0.759080708026886, 0.7651565074920654, 0.7586844563484192, 0.7604015469551086, 0.7644960880279541, 0.7627789974212646, 0.7692511081695557, 0.7701756954193115, 0.7696473598480225, 0.7683265209197998, 0.7658169269561768, 0.7721568942070007, 0.7771760821342468, 0.7753269076347351, 0.7724210619926453, 0.7734777331352234, 0.7836481332778931, 0.7754589915275574, 0.7860256433486938, 0.7825914621353149, 0.7852331399917603], "val_loss": [1.9008198465619768, 1.7673185893467493, 1.4868921552385603, 1.1471572262900216, 0.9264976978302002, 0.809981209891183, 0.7370980296816144, 0.6853028535842896, 0.6509561538696289, 0.6215240103857858, 0.6153966699327741, 0.5875686236790248, 0.5848188400268555, 0.570710267339434, 0.5519402367728097, 0.5415012155260358, 0.5349060467311314, 0.529464840888977, 0.5168424844741821, 0.50862603528159, 0.5010609115873065, 0.5034990651266915, 0.49889511721474783, 0.49211977209363666, 0.4842724289212908, 0.48422084535871235, 0.48497467381613596, 0.47169171060834614, 0.48551336356571745, 0.46963466916765484, 0.46482511929103304, 0.45307527269635883, 0.45559743472508024, 0.4585298810686384, 0.45218368938991, 0.44718691280909945, 0.4464860643659319, 0.4419679471424648, 0.4407824618475778, 0.4425022772380284, 0.43908762080328806, 0.4394849879401071, 0.4315946272441319, 0.4352786796433585, 0.4287256513323103, 0.4271384222166879, 0.4258168339729309, 0.42207906927381245, 0.4190885509763445, 0.42130811725343975, 0.41948396818978445, 0.42118509326662334], "val_accuracy": [0.4099999964237213, 0.515666663646698, 0.6043333411216736, 0.6349999904632568, 0.6786666512489319, 0.684333324432373, 0.7123333215713501, 0.7260000109672546, 0.7463333606719971, 0.7480000257492065, 0.7446666955947876, 0.75, 0.7563333511352539, 0.7409999966621399, 0.7663333415985107, 0.7643333077430725, 0.7646666765213013, 0.7590000033378601, 0.778333306312561, 0.781333327293396, 0.7823333144187927, 0.7876666784286499, 0.7870000004768372, 0.7876666784286499, 0.7926666736602783, 0.7910000085830688, 0.7913333177566528, 0.8006666898727417, 0.7900000214576721, 0.79666668176651, 0.8106666803359985, 0.8063333630561829, 0.8113333582878113, 0.8056666851043701, 0.8106666803359985, 0.8196666836738586, 0.8080000281333923, 0.8193333148956299, 0.8106666803359985, 0.8063333630561829, 0.8233333230018616, 0.8203333616256714, 0.8183333277702332, 0.8153333067893982, 0.8246666789054871, 0.8259999752044678, 0.8306666612625122, 0.8270000219345093, 0.828000009059906, 0.8223333358764648, 0.8243333101272583, 0.8209999799728394]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [55, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2693741194969785, 2.139037459706901, 1.8417099465027682, 1.467963766412429, 1.229150621048007, 1.0934748971907848, 1.0107637699238297, 0.9422278660100449, 0.9043334102145654, 0.8612858737149589, 0.8406134451133165, 0.8223751788330809, 0.7916674988853335, 0.7875529252511321, 0.767987353722055, 0.7599190567793422, 0.7398793896144297, 0.7343966602302892, 0.7261222012841927, 0.7067608912355471, 0.702152627247546, 0.6971458791663004, 0.6816282281392538, 0.6873274171561802, 0.6680655390390269, 0.6703443936211416, 0.6678934132796174, 0.6614049077427634, 0.6483860840776641, 0.64949260125181, 0.6460772856603508, 0.6336997150351359, 0.622948378879538, 0.6265419867800495, 0.6318298306967116, 0.618255218415921, 0.6146364734629756, 0.6089524152476978, 0.604367896747186, 0.6052974958414131, 0.6019440520204935], "accuracy": [0.18121780455112457, 0.3494914770126343, 0.4496103525161743, 0.5148593187332153, 0.5779950022697449, 0.6180161237716675, 0.6416589617729187, 0.6690001487731934, 0.6728305220603943, 0.6966054439544678, 0.7040021419525146, 0.7065116763114929, 0.7140403985977173, 0.7152291536331177, 0.7268524765968323, 0.722757875919342, 0.7329282760620117, 0.7309470176696777, 0.7390040755271912, 0.7342491149902344, 0.7467969655990601, 0.7490423917770386, 0.7500990629196167, 0.750759482383728, 0.7557786107063293, 0.7573636174201965, 0.7539294958114624, 0.7588165402412415, 0.763967752456665, 0.7582882046699524, 0.7677981853485107, 0.7662131786346436, 0.7738739848136902, 0.7644960880279541, 0.7681944370269775, 0.772288978099823, 0.767930269241333, 0.7741381525993347, 0.7775723338127136, 0.7777044177055359, 0.7755910754203796], "val_loss": [1.884035246712821, 1.685342516217913, 1.2927162987845284, 0.9755242211478097, 0.8134958062853131, 0.734097923551287, 0.6810111829212734, 0.6412671804428101, 0.6142508472715106, 0.5887643269130162, 0.5878546578543526, 0.5588805675506592, 0.5690768616540092, 0.5567720787865775, 0.5318274668284825, 0.5227315425872803, 0.5158039501735142, 0.5141734055110386, 0.4988355466297695, 0.48877947671072824, 0.48337132590157644, 0.48692684514181955, 0.4874577692576817, 0.476600067956107, 0.46998614924294607, 0.4749444041933332, 0.483552200453622, 0.45681469781058176, 0.4713439771107265, 0.4546093259538923, 0.4515775442123413, 0.44007631710597445, 0.4433393818991525, 0.451143741607666, 0.43758279936654226, 0.4351822222982134, 0.433905976159232, 0.42925682238170076, 0.4282522201538086, 0.4343419245311192, 0.42684548241751535], "val_accuracy": [0.43299999833106995, 0.5550000071525574, 0.6196666955947876, 0.6646666526794434, 0.6949999928474426, 0.6963333487510681, 0.7239999771118164, 0.7366666793823242, 0.753333330154419, 0.7570000290870667, 0.7513333559036255, 0.7663333415985107, 0.7553333044052124, 0.7423333525657654, 0.7749999761581421, 0.7673333287239075, 0.7683333158493042, 0.7636666893959045, 0.7856666445732117, 0.7876666784286499, 0.7919999957084656, 0.7953333258628845, 0.7860000133514404, 0.7986666560173035, 0.796999990940094, 0.7946666479110718, 0.7903333306312561, 0.8103333115577698, 0.7946666479110718, 0.8046666383743286, 0.8183333277702332, 0.8140000104904175, 0.8186666369438171, 0.8113333582878113, 0.8213333487510681, 0.8253333568572998, 0.8163333535194397, 0.8230000138282776, 0.8159999847412109, 0.8059999942779541, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7888571619987488, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.26698630641181, 2.140072093553484, 1.8436977174130602, 1.471020403618133, 1.2320852822883333, 1.1170447053312231, 1.0096421717589699, 0.9511307631076177, 0.9056470373350443, 0.8759045506811665, 0.8344838551447739, 0.834760778300782, 0.8042987710087134, 0.7853264449342147, 0.76831742125637, 0.7509495939372033, 0.7270625266243422, 0.7357316737350708, 0.7259061806363484, 0.7112918193030745, 0.7098948809653698, 0.6931133990857139, 0.6954494518469101, 0.6787837349885113, 0.6830279853806567, 0.6753251797267081, 0.661198878088301, 0.6612713765773665, 0.6536429370351834, 0.6532276907869066, 0.6546430784823667, 0.6280561603055639, 0.6303496240640534, 0.6267147599084109], "accuracy": [0.17884030938148499, 0.34301942586898804, 0.452119916677475, 0.5279355645179749, 0.5799762010574341, 0.6070532202720642, 0.643772304058075, 0.6613393425941467, 0.6804913282394409, 0.687491774559021, 0.6999075412750244, 0.6960771083831787, 0.7100779414176941, 0.7113987803459167, 0.7213049530982971, 0.7207766771316528, 0.7359662055969238, 0.7253995537757874, 0.7354378700256348, 0.7395324110984802, 0.7391361594200134, 0.743891179561615, 0.7458723783493042, 0.7475894689559937, 0.7512878179550171, 0.7540615797042847, 0.7565711140632629, 0.7605336308479309, 0.7598732113838196, 0.7552502751350403, 0.7569673657417297, 0.7684586048126221, 0.7652885913848877, 0.7647602558135986], "val_loss": [1.882743971688407, 1.6851258277893066, 1.3019629887172155, 0.9853455339159284, 0.8318594523838588, 0.7411520481109619, 0.6848504543304443, 0.6538308177675519, 0.6237062556403024, 0.6008580582482475, 0.5877576385225568, 0.5676379203796387, 0.5539675440107074, 0.5526566675731114, 0.533468348639352, 0.5234642539705548, 0.5292548792702811, 0.512736405645098, 0.5002315214702061, 0.49142588887895855, 0.49049605642046246, 0.48995351791381836, 0.48850209372384207, 0.4797968012945993, 0.46584956986563547, 0.4660621200289045, 0.4662896394729614, 0.4513592379433768, 0.45329621859959196, 0.48338297435215544, 0.4469242436545236, 0.4567213569368635, 0.4529726505279541, 0.4460915667670114], "val_accuracy": [0.3916666805744171, 0.5299999713897705, 0.6256666779518127, 0.6613333225250244, 0.6779999732971191, 0.7103333473205566, 0.7166666388511658, 0.7276666760444641, 0.7293333411216736, 0.7416666746139526, 0.7353333234786987, 0.762333333492279, 0.7590000033378601, 0.7509999871253967, 0.7676666378974915, 0.7639999985694885, 0.7540000081062317, 0.7796666622161865, 0.7829999923706055, 0.7910000085830688, 0.7943333387374878, 0.7789999842643738, 0.7829999923706055, 0.793666660785675, 0.8056666851043701, 0.7993333339691162, 0.812333345413208, 0.8113333582878113, 0.8143333196640015, 0.7643333077430725, 0.8109999895095825, 0.8023333549499512, 0.8109999895095825, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.4928571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.277270225438743, 2.211187178385398, 2.181985871729802, 2.1177599658394186, 2.125120075481789, 1.805763627670035, 2.2318488643028007, 2.3075301378882713, 2.2732029218778256, 2.3117999871802795, 2.615686167028082], "accuracy": [0.2118610441684723, 0.1694624274969101, 0.24501386284828186, 0.2833179235458374, 0.2483159452676773, 0.39849424362182617, 0.22586184740066528, 0.09774138033390045, 0.1414608359336853, 0.1888786107301712, 0.16536785662174225], "val_loss": [1.501589332308088, 1.932863507952009, 1.8714760371616908, 1.952993937901088, 1.7629995346069336, 1.4127819538116455, 1.9820199012756348, 1.971597535269601, 1.813239506312779, 1.9943748201642717, 2.09346764428275], "val_accuracy": [0.4246666729450226, 0.18566666543483734, 0.273333340883255, 0.15933333337306976, 0.3016666769981384, 0.5336666703224182, 0.10366666316986084, 0.17299999296665192, 0.2879999876022339, 0.09666666388511658, 0.054666668176651]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [0, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3377421612059988, 2.5351435149964594, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.047549862414598465, 0.009509972296655178, 0.07885351777076721, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.060732841491699, 2.6264587129865373, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.009333333000540733, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 3, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [71, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [92406380.67758358, 1.3048607644013398e+19, 1.7913088007681382e+30, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09853387624025345, 0.1014397069811821, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.305667332240514, 3243524.1428571427, 1266985804946.2856, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 0, 3], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, alpha)))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1296174164732612.5, 6691445917241552.0, 8.684710968077723e+17, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.10276053100824356, 0.10130762308835983, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3375091601637376.0, 3.752966229634955e+16, 9.409177564394105e+18, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.10333333164453506, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 6, 6, 2, 5, 7, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [54, 51, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [2.302772073697861, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [9, 2, 5, 6, 7, 3, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 0, 0, 0, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [59, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [8, 33, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 15, 10, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [1, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [3, 51, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 12, 8, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(beta)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 1, 1, 2], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [3, 7, 6, 6, 1, 5, 0, 0, 4, 0, 8, 2, 4, 2], [1, 1, 0, 3, 3, 0, 2, 1, 3, 3], [3, 51, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 24, 14, 10, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(sigma))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.pow(beta, tf.math.add(alpha, sigma)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [88, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [3, 51, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3106101375167176, 2.3494588438199573, 2.4532549318903865, 2.6579412867947023, 2.967600513742175, 3.389757800206154, 3.9698220535024378, 4.618454686717713, 5.455134143446415, 6.375169800823989], "accuracy": [0.08625016361474991, 0.09232597798109055, 0.09787346422672272, 0.09298639744520187, 0.09985470771789551, 0.09879804402589798, 0.10117553919553757, 0.09919429570436478, 0.09668471664190292, 0.10328886657953262], "val_loss": [1.9782352447509766, 2.008395331246512, 2.07833160672869, 2.201643466949463, 2.39266790662493, 2.66221741267613, 3.0160976818629672, 3.4550839832850864, 3.9764953340802873, 4.576926503862653], "val_accuracy": [0.07966666668653488, 0.09533333033323288, 0.09799999743700027, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 3, 5, 3, 3, 7, 8, 9, 7, 3, 3, 7, 8, 7, 6], [3, 1, 1, 0, 3, 2, 0, 1, 1, 0, 2, 3, 1, 2, 3, 0, 0], [96, 12, 93, 92, 2, 22, 36], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [69, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 45, 28, 17, 7, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.441738422378935, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03671905770897865, 0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.3168913977486745, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.008999999612569809, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 1, 3], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [9, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))), alpha))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 1, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))))))), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3037076956875304, 2.3018579384780216, 2.30263188420317, 2.302355338963126, 2.303156792637285, 2.3018800650825746], "accuracy": [0.09034473448991776, 0.09272222965955734, 0.09325055778026581, 0.08849557489156723, 0.0886276587843895, 0.09391097724437714], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]