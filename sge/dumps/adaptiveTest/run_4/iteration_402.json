[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.108082474277886, 1.5298226198830767, 1.1695644162854089, 0.8937242014722077, 0.829797733288242, 0.7852689054002536, 0.7618738267289775, 0.7309213758869068, 0.6823642384484775, 0.6604155689781022, 0.644248564993433, 0.6367813899784418, 0.6236205357743796, 0.6217663410459102, 0.5732145033114464, 0.5842831690691529, 0.5818373238516049, 0.5366048917573881, 0.5436279418335898], "accuracy": [0.2899220585823059, 0.5143309831619263, 0.5951657891273499, 0.6684718132019043, 0.6923788189888, 0.71100252866745, 0.7137762308120728, 0.7253995537757874, 0.7437590956687927, 0.7460044622421265, 0.7506273984909058, 0.7623828053474426, 0.7680623531341553, 0.7692511081695557, 0.7880068421363831, 0.7796856164932251, 0.7814027070999146, 0.7973847389221191, 0.7979130744934082], "val_loss": [1.66196642603193, 0.83791070325034, 0.7168859243392944, 0.6007806403296334, 0.5586174726486206, 0.5530772038868496, 0.5259950842176165, 0.520419750894819, 0.4822333369936262, 0.4742661714553833, 0.538752589906965, 0.4526249170303345, 0.49900470461164204, 0.43740331275122507, 0.4352609259741647, 0.4726306200027466, 0.4118208629744394, 0.42414093017578125, 0.4482895987374442], "val_accuracy": [0.4363333284854889, 0.6646666526794434, 0.6826666593551636, 0.7289999723434448, 0.7543333172798157, 0.7306666374206543, 0.7583333253860474, 0.7720000147819519, 0.778333306312561, 0.7919999957084656, 0.7586666941642761, 0.8076666593551636, 0.762333333492279, 0.8116666674613953, 0.8056666851043701, 0.7703333497047424, 0.8063333630561829, 0.7973333597183228, 0.7979999780654907]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 9, 1, 8, 8, 8, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 77, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 4, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12, 31]], "fitness": -0.11428571492433548, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30116795659018, 2.301613782957765, 2.302542064073709, 2.302582182794152, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09325055778026581, 0.10157178342342377, 0.10077928751707077, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972266605922154, 1.9735723223005022, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.1133333370089531, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [8, 8, 1, 4, 5, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 1, 0, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 18, 54, 4], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [0, 2, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [5, 0, 1, 2, 2, 2, 2, 1, 5, 0, 4, 2, 8, 3, 3, 5, 6, 9, 9, 6, 3, 2, 5, 2, 2, 5], [5, 4, 1, 3, 2, 2, 1, 1, 2, 4, 1, 3, 3, 4, 4], [78, 0, 54, 4], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 41, 41, 26, 15, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), tf.math.negative(tf.math.add(beta, tf.math.pow(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(beta, grad)), tf.math.add(alpha, tf.math.add(beta, grad))))))))))), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 0, 7, 2, 1, 3, 3, 5, 6, 9, 9, 6, 3, 2, 5, 9, 2, 5], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(beta)))), beta)))), tf.math.add(beta, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 6, 1, 2, 5, 6, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 4], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 4, 1, 2, 3, 9, 9, 2, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [65, 9, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 3, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3011673460421136, 2.3017444080286777, 2.3025539715874856, 2.302584481639255, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.10579843819141388, 0.10038304328918457, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724161965506417, 1.9736033848353796, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10266666859388351, 0.11633333563804626, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 3, 1, 8, 8, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 4], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [80, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025733023240282, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 3, 1, 8, 8, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(alpha), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 6, 1, 5, 2, 1, 9, 1, 5, 0, 7, 2, 7, 8, 9, 4, 8, 8, 0, 0], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [7, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 20, 9, 2, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024642766663552, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 1, 8, 8, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 4, 2, 1, 0, 0, 9, 0, 8], [3, 2, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 8, 2, 4, 1, 0, 7, 7, 4, 2, 9, 8], [3, 3, 4, 0, 2, 2, 1, 4, 2, 4, 1, 3, 3, 1, 5, 0], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 3, 3, 0, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025733023240282, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [2, 3, 1, 2, 5, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 3, 0, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [98, 95, 54, 4], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1243060151.9575348, 23390022642.880466, 110364360091.57469, 300366680211.6962, 661144851466.9554, 1195179460882.0225], "accuracy": [0.10038304328918457, 0.1010434553027153, 0.0956280529499054, 0.09985470771789551, 0.10566636174917221, 0.09866596013307571], "val_loss": [4637684004.571428, 37090374217.14286, 125167501312.0, 296680610669.7143, 579432799085.7142, 1001237212598.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 8, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 62, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.30243113279941, 2.302464117447714, 2.3043837526833078, 2.315544443706149, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.1006472036242485, 0.09998679161071777, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739204815455846, 1.974881989615304, 1.9789997509547643, 2.0134032794407437, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [3, 0, 1, 2, 4, 1, 2, 1, 5, 0, 4, 2, 7, 8, 9, 9], [5, 3, 1, 2, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 70, 4], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [0, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 2, 2, 1, 4, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 16, 9, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.pow(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, beta))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024074936492522, 2.301713046900364, 2.302407062505577, 2.303313612197888, 2.302697683133312, 2.3019144158746903], "accuracy": [0.0886276587843895, 0.09325055778026581, 0.09047681838274002, 0.09074098616838455, 0.09047681838274002, 0.09708096832036972], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [3, 0, 1, 2, 2, 1, 9, 1, 5, 0, 7, 2, 7, 8, 9, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [30, 95, 54, 4], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 2, 2, 1, 4, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [5, 99, 57, 12, 29]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 15, 8, 2, 1, 0, 0, 0, 0, 16, 9, 7, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.negative(sigma), tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3024074936492522, 2.301713046900364, 2.302407062505577, 2.303313612197888, 2.302697683133312, 2.3019144158746903], "accuracy": [0.0886276587843895, 0.09325055778026581, 0.09047681838274002, 0.09074098616838455, 0.09047681838274002, 0.09708096832036972], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 0, 7, 1, 8, 3, 9, 5, 6, 9, 9, 6, 3, 1, 5, 9, 2, 5], [5, 4, 1, 3, 2, 3, 3, 4, 2, 4, 1, 3, 3, 4], [78, 95, 54, 4], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024074936492522, 2.301713046900364, 2.302407062505577, 2.303313612197888, 2.302697683133312, 2.3019144158746903], "accuracy": [0.0886276587843895, 0.09325055778026581, 0.09047681838274002, 0.09074098616838455, 0.09047681838274002, 0.09708096832036972], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [3, 0, 1, 7, 8, 9, 9, 1, 5, 0, 7, 2, 7, 8, 9], [5, 1, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 7, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3024074936492522, 2.301713046900364, 2.302407062505577, 2.303313612197888, 2.302697683133312, 2.3019144158746903], "accuracy": [0.0886276587843895, 0.09325055778026581, 0.09047681838274002, 0.09074098616838455, 0.09047681838274002, 0.09708096832036972], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [5, 0, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 8, 0, 3, 5, 0, 8, 2, 2, 5, 5, 2], [5, 4, 1, 3, 3, 3, 1, 4, 2, 4, 1, 3, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 19, 10, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))))))))), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.3024074936492522, 2.301713046900364, 2.302407062505577, 2.303313612197888, 2.302697683133312, 2.3019144158746903], "accuracy": [0.0886276587843895, 0.09325055778026581, 0.09047681838274002, 0.09074098616838455, 0.09047681838274002, 0.09708096832036972], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]