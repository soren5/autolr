[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 4, 0, 6, 4, 0, 2, 4], [0, 3, 0, 1, 5], [30, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7900000214576721, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.272512847185922, 2.175160319908121, 1.9675309958632408, 1.6414618706108006, 1.3739885824262947, 1.194938417801122, 1.0907190092219936, 1.0184245375106207, 0.9657884678111934, 0.9236468278720883, 0.8894045256888153, 0.8616220851096306, 0.8410805341369519, 0.8193368025191976, 0.7995959466883944, 0.7954463676029523, 0.7760055188127497, 0.7631081699726683, 0.7479867674513673, 0.7483626197531018, 0.7320833958891074, 0.7183950107489059, 0.7205013474768116, 0.7033980186305829, 0.7013383355469452, 0.6999685831624818, 0.6858062304368407, 0.6906496091384016, 0.6765334048307079, 0.6727014160301109, 0.6759982609383545, 0.6644019831000003, 0.6582541239811146, 0.6460398957084088, 0.6493964964419844, 0.6484542348680558, 0.6362018245495605, 0.6401605894300743, 0.6334115503376281, 0.6284603218770283, 0.6218677283655997, 0.6274587468558677, 0.6111089354729089, 0.6135976445232447], "accuracy": [0.16972659528255463, 0.3241315484046936, 0.4208162724971771, 0.4934619069099426, 0.5462950468063354, 0.588297426700592, 0.6166952848434448, 0.6400739550590515, 0.6535464525222778, 0.6700568199157715, 0.6802271604537964, 0.6902654767036438, 0.6966054439544678, 0.7040021419525146, 0.7112666964530945, 0.7098137736320496, 0.7172104120254517, 0.720380425453186, 0.7263241410255432, 0.7236824631690979, 0.7374191284179688, 0.735569953918457, 0.7395324110984802, 0.7449478507041931, 0.7432307600975037, 0.7397965788841248, 0.7479857206344604, 0.7403249144554138, 0.754589855670929, 0.7526086568832397, 0.7519482374191284, 0.759080708026886, 0.7627789974212646, 0.76542067527771, 0.7640998363494873, 0.7584202885627747, 0.7606657147407532, 0.7614582180976868, 0.7676661014556885, 0.7644960880279541, 0.7688548564910889, 0.7677981853485107, 0.7728173136711121, 0.7750627398490906], "val_loss": [1.8979266030447823, 1.7594787733895438, 1.4752648557935442, 1.140277556010655, 0.9307997567313058, 0.8100791147777012, 0.7402728455407279, 0.6887561764035907, 0.6575467927115304, 0.6305028200149536, 0.61797525201525, 0.5947522435869489, 0.5839242253984723, 0.5660193477358136, 0.5669311114719936, 0.5531474862779889, 0.5374618598393032, 0.5275632313319615, 0.5228496960231236, 0.5229843514306205, 0.5059372697557721, 0.5061356340135846, 0.49720421859196257, 0.49103353704724995, 0.4875889505658831, 0.48796885354178293, 0.4801024539130075, 0.47229831559317453, 0.470878005027771, 0.47351557867867605, 0.4730615956442697, 0.4590357371738979, 0.45865964889526367, 0.4543286902563913, 0.44861417157309397, 0.4491497448512486, 0.4580892494746617, 0.4450456585202898, 0.44089765208108084, 0.4407005310058594, 0.44039920398167204, 0.43681407826287405, 0.4346980367388044, 0.433033355644771], "val_accuracy": [0.40299999713897705, 0.492333322763443, 0.5663333535194397, 0.6159999966621399, 0.671999990940094, 0.6953333616256714, 0.6986666917800903, 0.7146666646003723, 0.718999981880188, 0.7426666617393494, 0.731333315372467, 0.7549999952316284, 0.7513333559036255, 0.7613333463668823, 0.749666690826416, 0.7603333592414856, 0.7720000147819519, 0.7739999890327454, 0.7823333144187927, 0.7696666717529297, 0.7829999923706055, 0.7806666493415833, 0.7879999876022339, 0.7956666946411133, 0.79666668176651, 0.7956666946411133, 0.7956666946411133, 0.8009999990463257, 0.8019999861717224, 0.7956666946411133, 0.7956666946411133, 0.8116666674613953, 0.8130000233650208, 0.8173333406448364, 0.8163333535194397, 0.8059999942779541, 0.8029999732971191, 0.8143333196640015, 0.8240000009536743, 0.8176666498184204, 0.8063333630561829, 0.8190000057220459, 0.8159999847412109, 0.8196666836738586]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2725128696390255, 2.1751661628795698, 1.9675483214557603, 1.6414723001403768, 1.3740005809176536, 1.1949725168854444, 1.0907062994663852, 1.0184271488412024, 0.9657331432695985, 0.9234686796896021, 0.8892992687987424, 0.8613873868727996, 0.8410427185522645, 0.819152380190096, 0.7995747150903711, 0.7955286537478267, 0.7758867948708076, 0.7632472518097849, 0.7478441745298665, 0.7484362451328876, 0.7324755285016423, 0.7187786181179949, 0.7209222664560356, 0.7034333261044081, 0.7018475390822109, 0.7000266247106786, 0.6857666127465388, 0.6912647041788254, 0.6768659326803761, 0.6729498087548939, 0.6767178771911816, 0.6640567261985957, 0.6587417318505728, 0.6461474511050561, 0.6502708956046175, 0.6488460384387035, 0.6357959293654692, 0.6402504055286836, 0.6337446188961336, 0.6287107940410437, 0.6217035929666392, 0.6274943811593353, 0.6108782588923848, 0.6136513968988448], "accuracy": [0.16972659528255463, 0.32426363229751587, 0.4209483563899994, 0.4934619069099426, 0.5464271306991577, 0.5889578461647034, 0.6168273687362671, 0.6391493678092957, 0.6528860330581665, 0.670320987701416, 0.6798309087753296, 0.6905296444892883, 0.69673752784729, 0.7037379741668701, 0.7113987803459167, 0.7102100253105164, 0.7161537408828735, 0.7199841737747192, 0.7263241410255432, 0.722229540348053, 0.735569953918457, 0.7362303733825684, 0.7408532500267029, 0.7427024245262146, 0.7434949278831482, 0.7405890822410583, 0.7493065595626831, 0.7390040755271912, 0.7548540234565735, 0.7514199018478394, 0.7520803213119507, 0.7586844563484192, 0.7621186375617981, 0.76542067527771, 0.7627789974212646, 0.7588165402412415, 0.7614582180976868, 0.7602694630622864, 0.7671377658843994, 0.7651565074920654, 0.7687227725982666, 0.767401933670044, 0.774270236492157, 0.7749306559562683], "val_loss": [1.8979312351771764, 1.759493623461042, 1.4752871309007918, 1.1402879101889474, 0.9308467933109829, 0.8101251976830619, 0.7402042491095406, 0.6887495177132743, 0.6576145206178937, 0.6306682995387486, 0.6177965743201119, 0.5947766985212054, 0.5839482205254691, 0.5656439406531197, 0.5675641979490008, 0.5526486124311175, 0.5374099697385516, 0.5272708790642875, 0.5228187016078404, 0.5226072583879743, 0.5057634285518101, 0.5074512107031686, 0.4969672816140311, 0.4909306253705706, 0.4889624459402902, 0.48893536840166363, 0.48040170328957693, 0.4721242870603289, 0.47075343132019043, 0.47527595928737093, 0.4721492188317435, 0.4593395846230643, 0.45847775254930767, 0.4542698178972517, 0.44898544039045063, 0.449222343308585, 0.457844751221793, 0.4449451480593, 0.44047883578709196, 0.4408322743007115, 0.44081362656184603, 0.4365383897508894, 0.4353611809866769, 0.43280476331710815], "val_accuracy": [0.40299999713897705, 0.49300000071525574, 0.5659999847412109, 0.6169999837875366, 0.671999990940094, 0.6959999799728394, 0.6990000009536743, 0.7143333554267883, 0.7193333506584167, 0.7416666746139526, 0.7316666841506958, 0.7556666731834412, 0.7506666779518127, 0.7616666555404663, 0.7490000128746033, 0.7593333125114441, 0.7716666460037231, 0.7730000019073486, 0.7829999923706055, 0.7699999809265137, 0.7823333144187927, 0.7789999842643738, 0.7879999876022339, 0.7960000038146973, 0.7946666479110718, 0.7943333387374878, 0.7946666479110718, 0.7993333339691162, 0.8019999861717224, 0.7926666736602783, 0.7973333597183228, 0.8116666674613953, 0.812666654586792, 0.8166666626930237, 0.8163333535194397, 0.8040000200271606, 0.8006666898727417, 0.815666675567627, 0.8243333101272583, 0.8169999718666077, 0.8069999814033508, 0.8199999928474426, 0.8116666674613953, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7831428647041321, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2751687962097846, 2.1783639202185943, 1.9796719739087867, 1.6546311304789996, 1.3742348956331176, 1.1967916749865546, 1.105761927352873, 1.013274262641415, 0.9707297985390932, 0.926700494592027, 0.8803588183658975, 0.8698802621231386, 0.8320169531122852, 0.811100488837369, 0.8173611413659421, 0.7859361209747829, 0.7821562902928343, 0.7637967269544383, 0.748959241998572, 0.7428922318606062, 0.7290223058912937, 0.7126198388235586, 0.7057114804520064, 0.7053120862129201, 0.7008164165640677, 0.6946879920785012, 0.6837355462378357, 0.6823822569853405, 0.6760288287053066, 0.6666750097003957, 0.6564405069941968, 0.6635930792231365, 0.6608488989890354, 0.6450247568555748, 0.6446546419831063, 0.6414497152547542, 0.641773516129446, 0.642713662466715, 0.6305809446282438, 0.6308627735511927], "accuracy": [0.1612732857465744, 0.3271694481372833, 0.4201558530330658, 0.4931977391242981, 0.5357284545898438, 0.590278685092926, 0.6095628142356873, 0.6407343745231628, 0.6523576974868774, 0.666358470916748, 0.6856426000595093, 0.6894729733467102, 0.7030775547027588, 0.7116629481315613, 0.7037379741668701, 0.7157574892044067, 0.7129837274551392, 0.7231541275978088, 0.7238145470619202, 0.7292299270629883, 0.7360982894897461, 0.7382115721702576, 0.7395324110984802, 0.7405890822410583, 0.746268630027771, 0.7464007139205933, 0.7461365461349487, 0.7473253011703491, 0.752740740776062, 0.7524765729904175, 0.7535332441329956, 0.7568352818489075, 0.7556465268135071, 0.765949010848999, 0.7573636174201965, 0.7614582180976868, 0.7692511081695557, 0.7627789974212646, 0.7703077793121338, 0.7726852297782898], "val_loss": [1.9009089469909668, 1.765669822692871, 1.4864437920706612, 1.1490459782736642, 0.9243687902178083, 0.808380263192313, 0.7449979271207537, 0.6868963411876133, 0.6607188837868827, 0.6272360767636981, 0.607626097542899, 0.5912374939237323, 0.5768449817384992, 0.5646931103297642, 0.561262709753854, 0.5419921023505074, 0.5352563347135272, 0.5254748378481183, 0.5177203416824341, 0.5109228236334664, 0.5064043658120292, 0.5039021798542568, 0.49253497804914204, 0.49943396023341585, 0.4879436322620937, 0.4863490547452654, 0.4816566024507795, 0.4730569464819772, 0.468404940196446, 0.46715177808489117, 0.464639459337507, 0.4704817363194057, 0.4596336909702846, 0.4612928969519479, 0.4531724623271397, 0.45424883706229074, 0.4502436774117606, 0.4443611076899937, 0.44306981563568115, 0.44744917324611116], "val_accuracy": [0.4113333225250244, 0.5046666860580444, 0.5709999799728394, 0.621666669845581, 0.6646666526794434, 0.6933333277702332, 0.7023333311080933, 0.7210000157356262, 0.7289999723434448, 0.7429999709129333, 0.753000020980835, 0.7553333044052124, 0.7556666731834412, 0.7646666765213013, 0.7563333511352539, 0.7710000276565552, 0.7753333449363708, 0.7730000019073486, 0.7806666493415833, 0.7789999842643738, 0.7756666541099548, 0.7760000228881836, 0.7846666574478149, 0.7866666913032532, 0.784333348274231, 0.781000018119812, 0.784333348274231, 0.7990000247955322, 0.8066666722297668, 0.7963333129882812, 0.8036666512489319, 0.7963333129882812, 0.8080000281333923, 0.8003333210945129, 0.815666675567627, 0.809333324432373, 0.8119999766349792, 0.8153333067893982, 0.8143333196640015, 0.8066666722297668]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [3.4661721472421436e+20, 4.4723433823212765e+20, 4.0211551175638116e+20, 4.328645886324972e+20, 4.651916604357156e+20, 4.2080685469425926e+20], "accuracy": [0.10540219396352768, 0.10593052208423615, 0.09919429570436478, 0.10315678268671036, 0.10196803510189056, 0.10381719470024109], "val_loss": [4.0514271668369844e+20, 4.0514271668369844e+20, 4.0514271668369844e+20, 4.0514271668369844e+20, 4.0514271668369844e+20, 4.0514271668369844e+20], "val_accuracy": [0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3394514610581254, 2.5436206363085443, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04649319872260094, 0.013076212257146835, 0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0631931849888394, 2.764306272779192, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.02199999988079071, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1], [8, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 0, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 8, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 7, 1, 4, 5, 9, 7, 2, 2], [3, 1, 1, 0, 3, 0, 0, 1, 0, 0, 3, 0, 1], [96, 12, 93, 25, 9, 55, 67, 27], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 22, 13, 8, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 13, 9, 4, 3], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))))))))))))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302503329258018, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 1, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302503329258018, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08440100401639938, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [53802.530466904274, 971125.8167514199, 4560481.359397702, 12602516.230088495, 26877674.616299037, 49229689.67375512], "accuracy": [0.09457138925790787, 0.10368511080741882, 0.09972262382507324, 0.1022322028875351, 0.10500594228506088, 0.09998679161071777], "val_loss": [193122.85267857142, 1530121.392857143, 5148282.142857143, 12184905.42857143, 23777294.85714286, 41062792.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3394515105305316, 2.5436166191554546, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04649319872260094, 0.013076212257146835, 0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0631938661847795, 2.764399460383824, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.02199999988079071, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1553726594946.3743, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [170092.09004353714, 3088910.346387531, 14529299.99154669, 40178715.86316206, 85722844.75392947, 157049366.99722627], "accuracy": [0.09470347315073013, 0.10368511080741882, 0.09972262382507324, 0.1022322028875351, 0.10500594228506088, 0.09998679161071777], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [84, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3029814788363376, 2.3028786609107006, 2.3029970462059914, 2.3029772545982423, 2.3029425861876103, 2.3030194088672964, 2.3030892714312867, 2.3030210890711387, 2.3030619490589084], "accuracy": [0.0956280529499054, 0.09655263274908066, 0.09457138925790787, 0.09694888442754745, 0.09840179979801178, 0.09470347315073013, 0.09232597798109055, 0.09298639744520187, 0.09192973375320435], "val_loss": [1.9736877168927873, 1.9737608092171806, 1.9737634658813477, 1.97374050957816, 1.9736619676862444, 1.9736980710710799, 1.9737939153398787, 1.9738104684012276, 1.973731858389718], "val_accuracy": [0.10100000351667404, 0.09666666388511658, 0.09666666388511658, 0.10366666316986084, 0.09666666388511658, 0.09666666388511658, 0.0963333323597908, 0.10066666454076767, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.437679672978101, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03803988918662071, 0.05494650825858116, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.0454134259905135, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.008999999612569809, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3394514430767477, 2.54362061842164, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04649319872260094, 0.013076212257146835, 0.08717474341392517, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.063192980630057, 2.764303139277867, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.02199999988079071, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.04457142949104309, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.304193792530826, 2.302368324509292, 2.3034363750296025, 2.301445204395077, 2.303741542497221, 2.3020658460291323, 2.3038145168157316, 2.301804012673453, 2.3023119381216963, 2.3028531608611775, 2.302404446199412, 2.3020549475509005, 2.301874150374562, 2.301338721543507, 2.3029726688746277, 2.302487171022191, 2.302303554139133, 2.301414049658966, 2.302840798805891, 2.301148648936562, 2.301949221554717, 2.3006084533084765, 2.3013445211518095, 2.30185429439915, 2.3023145613243963, 2.301680983301671, 2.302880769392534, 2.3009860180215025, 2.3015133290636602, 2.302040563362181, 2.3006226165561374, 2.3005350452955167, 2.3010423086763705, 2.300082383485219, 2.302966767455829, 2.3022847196382226, 2.302413556113172, 2.302702585058347, 2.3011171777785933, 2.30005925823716, 2.3011993772680293, 2.302103003333226], "accuracy": [0.08281600475311279, 0.08981640636920929, 0.09100515395402908, 0.09311848133802414, 0.08413683623075485, 0.09509972482919693, 0.08677849918603897, 0.09008057415485382, 0.09179764986038208, 0.08677849918603897, 0.08981640636920929, 0.08928807079792023, 0.09311848133802414, 0.08968432247638702, 0.08955223858356476, 0.0936468094587326, 0.08611807972192764, 0.08968432247638702, 0.08836349099874496, 0.09998679161071777, 0.0944393053650856, 0.0952318087220192, 0.09060890227556229, 0.08994849026203156, 0.08889182657003403, 0.09179764986038208, 0.09074098616838455, 0.09140139818191528, 0.0948355570435524, 0.09034473448991776, 0.09602430462837219, 0.09496764093637466, 0.0940430611371994, 0.0940430611371994, 0.0940430611371994, 0.0816272646188736, 0.09813763201236725, 0.08968432247638702, 0.09351472556591034, 0.0956280529499054, 0.08942015469074249, 0.09140139818191528], "val_loss": [1.9703540120806013, 1.970334529876709, 1.9703048297337122, 1.9702775818961007, 1.9702437945774622, 1.9702209063938685, 1.9701880046299525, 1.970165184565953, 1.9701364380972726, 1.970111642565046, 1.970085893358503, 1.9700609615870885, 1.9700288772583008, 1.9700053078787667, 1.9699789455958776, 1.9699529920305525, 1.9699298994881767, 1.9699064663478307, 1.9698735645839147, 1.9698544910975866, 1.9698328290666853, 1.9698183195931571, 1.9697996548243932, 1.969778060913086, 1.969756807599749, 1.9697364398411341, 1.969719682421003, 1.969703265598842, 1.9696869168962752, 1.9696614401681083, 1.9696430478777205, 1.969625404902867, 1.9696030616760254, 1.9695912769862585, 1.969562326158796, 1.9695420265197754, 1.9695205688476562, 1.9694925716945104, 1.969473430088588, 1.969456672668457, 1.9694414819989885, 1.9694253376552038], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.036666665226221085, 0.03866666555404663, 0.03866666555404663, 0.03933333232998848, 0.03933333232998848, 0.04066666588187218, 0.041333332657814026, 0.0416666679084301, 0.0416666679084301, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04500000178813934, 0.045666664838790894, 0.046666666865348816, 0.04699999839067459, 0.04699999839067459, 0.047333333641290665, 0.047333333641290665, 0.047333333641290665, 0.047333333641290665, 0.04766666516661644, 0.047333333641290665, 0.04766666516661644, 0.04833333194255829, 0.04833333194255829, 0.04866666719317436, 0.04933333396911621, 0.05000000074505806, 0.05000000074505806, 0.05000000074505806, 0.049666665494441986, 0.049666665494441986, 0.05000000074505806]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [98, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3042121401174493, 2.302417975501173, 2.3035310630737875, 2.301584056654721, 2.3039281699541236, 2.302274278850603], "accuracy": [0.08308017253875732, 0.08981640636920929, 0.09074098616838455, 0.09245806187391281, 0.08321225643157959, 0.09470347315073013], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 16, 10, 6, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3042121401174493, 2.302417975501173, 2.3035310630737875, 2.301584056654721, 2.3039281699541236, 2.302274278850603], "accuracy": [0.08308017253875732, 0.08981640636920929, 0.09074098616838455, 0.09245806187391281, 0.08321225643157959, 0.09470347315073013], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]