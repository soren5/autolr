[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.8011428713798523, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.164416104322884, 1.952819785988641, 1.8943939706385176, 1.407235882065284, 1.1341921470389154, 0.9186744929903046, 0.8364341888901989, 0.7697324387118045, 0.7125402751174884, 0.6594315298780427, 0.6576085683534552, 0.5892208873981561, 0.6054649393965681, 0.5689093238405816, 0.5700280543693761, 0.5313455055670385, 0.5220068756143068, 0.5091991768088308, 0.5365806342021523, 0.5033894747538952, 0.47365140785016496, 0.49521293356796187, 0.47544866633799415, 0.4627691625115925, 0.4527279065820787, 0.43858364399996386, 0.4554974329296813, 0.43086491204161514, 0.40889181076826875, 0.4223743918085016], "accuracy": [0.2670717239379883, 0.3629639446735382, 0.37102100253105164, 0.5287280678749084, 0.5975432395935059, 0.6571126580238342, 0.6763967871665955, 0.7069079279899597, 0.7268524765968323, 0.7432307600975037, 0.7391361594200134, 0.7724210619926453, 0.7662131786346436, 0.7839123010635376, 0.7825914621353149, 0.800290584564209, 0.8059701323509216, 0.8117818236351013, 0.8012151718139648, 0.8064984679222107, 0.8216879963874817, 0.8144234418869019, 0.8219521641731262, 0.8273676037788391, 0.8338396549224854, 0.843481719493866, 0.8239334225654602, 0.8383304476737976, 0.847840428352356, 0.842028796672821], "val_loss": [1.3187907763889857, 1.8459210395812988, 1.1225420066288538, 1.1246272836412703, 0.8089151382446289, 0.6846867288861956, 0.5415210212979998, 0.5794681480952671, 0.5542301961353847, 0.5025394133159092, 0.4655895573752267, 0.4769268376486642, 0.4972143513815744, 0.4703303064618792, 0.4163894312722342, 0.41055669103349957, 0.4308402453150068, 0.4709220102855137, 0.398661094052451, 0.3855749709265573, 0.3801664284297398, 0.36873693977083477, 0.38659616879054476, 0.3751882570130484, 0.33398679324558805, 0.41020320994513376, 0.3967715927532741, 0.3523744855608259, 0.3439366817474365, 0.33837768861225676], "val_accuracy": [0.46933332085609436, 0.42233332991600037, 0.5116666555404663, 0.5823333263397217, 0.6323333382606506, 0.7013333439826965, 0.7463333606719971, 0.7363333106040955, 0.7433333396911621, 0.765666663646698, 0.778333306312561, 0.7733333110809326, 0.7580000162124634, 0.7820000052452087, 0.8080000281333923, 0.8090000152587891, 0.8109999895095825, 0.7846666574478149, 0.8296666741371155, 0.8263333439826965, 0.8453333377838135, 0.8510000109672546, 0.8270000219345093, 0.8473333120346069, 0.8616666793823242, 0.8153333067893982, 0.8223333358764648, 0.8463333249092102, 0.8526666760444641, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023911267223767, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [34], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta)), sigma))", "other_info": {"loss": [567485740.7713863, 2.574624522266733, 2.43951552623708, 2.383340423385213, 2.354449373116, 2.338121122042296], "accuracy": [0.1018359512090683, 0.09615638852119446, 0.09840179979801178, 0.09734513610601425, 0.09787346422672272, 0.09496764093637466], "val_loss": [2.304490430014474, 2.128011635371617, 2.06204046521868, 2.0296353612627303, 2.011732373918806, 2.0008253370012556], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0], [0, 1, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 3, 2, 3, 0, 2], [25, 42, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.negative(alpha), alpha))", "other_info": {"loss": [177858.0608911556, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0940430611371994, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3347462186710827e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1], [1, 1, 0], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 12, 8, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [1, 1, 0], [8, 3, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [87], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [75, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07211729139089584, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 1], [1, 0, 0], [8, 9, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [129737317.16485406, 2573652267.923392, 11910928455.143045, 33113711163.308414, 70563761453.74931, 129110758668.47708], "accuracy": [0.09853387624025345, 0.09813763201236725, 0.10091137140989304, 0.1014397069811821, 0.10038304328918457, 0.09734513610601425], "val_loss": [496852096.0, 3972302116.571429, 13403680182.857143, 31768387584.0, 62043923602.28571, 107207643721.14285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [1, 1], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 2, 5, 0, 6, 4, 0, 8], [1, 1, 0, 1, 0, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 30, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2812.301711730796, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20340773463249207, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16996333.14285714, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0], [0, 1, 0], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 2, 3, 0, 2], [25, 42, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [29813.08014404328, 2.8319091815430115e+27, 2.3026762174309803, 2.3026783929887054, 2.3026788014588404, 2.302680170846228], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [168356497700.57144, 1.9737535885402135, 1.9737550871712821, 1.9737557002476283, 1.973757062639509, 1.9737582887922014], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 1, 3, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 0], [0, 0, 0, 1, 1], [8, 5, 2, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), beta)))", "other_info": {"loss": [787.1788476390483, 2782.9136406471857, 3757.393320188672, 4388.960850433604, 4857.63576637261, 5230.822976409263], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1900.8726981026787, 2942.8614676339284, 3567.013113839286, 4013.1575055803573, 4361.586356026785, 4647.436662946428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 0], [0, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.09942857176065445, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 3, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [20728031904319.496, 4.0719793238036624e+20, 5.801963359264997e+27, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09747721254825592, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1171962625785856.0, 2.2714582190701326e+22, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10266666859388351, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [34], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.04285714402794838, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.608093814449288, 2.3255448421671754, 2.3036419865698026, 2.3028910922147596, 2.3026835920630884, 2.302954902486432, 2.302449288448212, 2.3010974430121514, 2.2555446860938577, 2.3077090074672455, 2.304202208319329, 2.3032963000362923, 2.30324532424832], "accuracy": [0.23999471962451935, 0.10077928751707077, 0.10038304328918457, 0.10289261490106583, 0.10328886657953262, 0.10117553919553757, 0.1018359512090683, 0.10711926966905594, 0.15889579057693481, 0.10170386731624603, 0.09747721254825592, 0.09576013684272766, 0.08955223858356476], "val_loss": [2.0745983123779297, 1.974595614842006, 1.973774024418422, 1.9735705511910575, 1.973517622266497, 1.9732980046953474, 1.9725988933018275, 1.9686078344072615, 1.982018198285784, 1.9741652352469308, 1.9734972545078822, 1.973569733755929, 1.9734854016985213], "val_accuracy": [0.10000000149011612, 0.10066666454076767, 0.10100000351667404, 0.10366666316986084, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.1066666692495346, 0.09733333438634872, 0.10066666454076767, 0.10100000351667404, 0.10300000011920929, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 0], [96, 12, 93], [0, 1], [0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [65], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 1, 3, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 10, 10, 5, 5, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024711082356717, 2.303194831028874, 2.3021643516992487, 2.3038589852975107, 2.3021926414130496, 2.3030305372930204], "accuracy": [0.0874389111995697, 0.08796724677085876, 0.08955223858356476, 0.09760929644107819, 0.09232597798109055, 0.09245806187391281], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0, 0], [52, 67, 89, 40], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 1, 3, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024711082356717, 2.303194831028874, 2.3021643516992487, 2.3038589852975107, 2.3021926414130496, 2.3030305372930204], "accuracy": [0.0874389111995697, 0.08796724677085876, 0.08955223858356476, 0.09760929644107819, 0.09232597798109055, 0.09245806187391281], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0], [0, 1, 0, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [96, 99], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024711082356717, 2.303194831028874, 2.3021643516992487, 2.3038589852975107, 2.3021926414130496, 2.3030305372930204], "accuracy": [0.0874389111995697, 0.08796724677085876, 0.08955223858356476, 0.09760929644107819, 0.09232597798109055, 0.09245806187391281], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]