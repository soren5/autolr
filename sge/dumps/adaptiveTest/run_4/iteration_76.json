[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta)))), alpha), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.253407103715241, 2.200394743138521, 1.7471186959779714, 1.3180541170429103, 0.9800732931944641, 0.828549606429115, 0.7374859472401878, 0.7182719697096974, 0.7073748526068065, 0.6504367650177154, 0.6297051092936237, 0.6108487379344668, 0.5953993272504251, 0.587553018655098, 0.5444297618035233, 0.5571001055627656, 0.5198753732873496, 0.5228582020913448, 0.5030098764132106, 0.4774944265135023, 0.4928944207311637, 0.4897920404679078, 0.4869456898503221, 0.46672619811343224], "accuracy": [0.2635054886341095, 0.28041210770606995, 0.42570334672927856, 0.5332188606262207, 0.6487914323806763, 0.6791704893112183, 0.7172104120254517, 0.7185312509536743, 0.7240787148475647, 0.7405890822410583, 0.7530049085617065, 0.7751948237419128, 0.7765156626701355, 0.7724210619926453, 0.7913089394569397, 0.7835160493850708, 0.8075551390647888, 0.7938185334205627, 0.8125742673873901, 0.8189142942428589, 0.813498854637146, 0.816008448600769, 0.8125742673873901, 0.824329674243927], "val_loss": [1.8879975591387068, 1.585402250289917, 1.167785406112671, 1.0110487597329276, 0.5893657548086983, 0.5687292473656791, 0.5508451461791992, 0.5968918630055019, 0.510086110660008, 0.5048395395278931, 0.4603243725640433, 0.4956422873905727, 0.46978076866694857, 0.42103515352521625, 0.47921279498509, 0.3896847111838205, 0.4205908945628575, 0.38600962502615793, 0.3811600719179426, 0.3816191554069519, 0.43026462623051237, 0.4673420361110142, 0.3778074724333627, 0.3793614591870989], "val_accuracy": [0.3409999907016754, 0.46033334732055664, 0.5090000033378601, 0.606333315372467, 0.7286666631698608, 0.7273333072662354, 0.7283333539962769, 0.7110000252723694, 0.7570000290870667, 0.765999972820282, 0.7940000295639038, 0.7833333611488342, 0.7766666412353516, 0.8133333325386047, 0.7776666879653931, 0.8333333134651184, 0.8209999799728394, 0.8363333344459534, 0.8476666808128357, 0.8376666903495789, 0.7976666688919067, 0.7456666827201843, 0.8323333263397217, 0.8306666612625122]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 1, 2, 5, 0, 4, 6, 0, 8, 1, 4, 8, 4, 4, 4, 8], [3, 3, 0, 1, 3, 0, 0, 2, 2, 3, 2, 1], [40, 63, 56, 45]], "fitness": -0.41114285588264465, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(sigma), tf.math.negative(sigma))", "other_info": {"loss": [2.3022521865082894, 2.2855683268336824, 2.2458577617410467, 1.9733915781190665, 1.4943261664572833, 1.1020791208770817, 0.997393835222307, 0.9357050935259396, 0.8963044729167916, 0.8401060935182185, 0.8459111895496346, 1.3664982181498562, 0.8689875133427111, 0.8071507758405214, 0.7773847828262817, 0.7206463460846033, 0.7155969373821787, 0.6918251233141199, 0.7118394259511519, 0.7247908647821533, 0.7242165166924517, 0.7129894044924847, 0.710713855681119, 0.7308780172828198, 0.7716944095654148, 0.7742079826803286, 0.7272511723334086], "accuracy": [0.09496764093637466, 0.137630432844162, 0.19270901381969452, 0.31462156772613525, 0.5038964748382568, 0.5816932916641235, 0.6219785809516907, 0.6548672318458557, 0.6577730774879456, 0.6819442510604858, 0.6851142644882202, 0.6017699241638184, 0.6749438643455505, 0.7046625018119812, 0.709021270275116, 0.7285695672035217, 0.7259278893470764, 0.7432307600975037, 0.7313432693481445, 0.7364945411682129, 0.7338528633117676, 0.7375511527061462, 0.7430986762046814, 0.7346453666687012, 0.7160216569900513, 0.724210798740387, 0.7333245277404785], "val_loss": [1.963451862335205, 1.9407379286629813, 1.8415474891662598, 0.9995660441262382, 0.7545043740953717, 0.6614491088049752, 0.6381505387169975, 0.6109436750411987, 0.5784621409007481, 0.5433993850435529, 1.7106232983725411, 0.5911648103169033, 0.522458723613194, 0.5191177470343453, 0.5001398495265416, 0.49083423614501953, 0.49384610993521555, 0.4755078213555472, 0.48553432737077984, 0.4611989600317819, 0.4714008058820452, 0.4752410479954311, 0.4804728201457432, 0.5055430957249233, 0.5080665179661342, 0.4865447963987078, 0.4959557737622942], "val_accuracy": [0.09866666793823242, 0.2160000056028366, 0.4050000011920929, 0.5986666679382324, 0.7020000219345093, 0.718666672706604, 0.7276666760444641, 0.7310000061988831, 0.7403333187103271, 0.7543333172798157, 0.6389999985694885, 0.7300000190734863, 0.7706666588783264, 0.7593333125114441, 0.7753333449363708, 0.7816666960716248, 0.7833333611488342, 0.7906666398048401, 0.7906666398048401, 0.7923333048820496, 0.7873333096504211, 0.7983333468437195, 0.7886666655540466, 0.7836666703224182, 0.7860000133514404, 0.7956666946411133, 0.7919999957084656]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 5, 0, 8, 9], [1, 3, 0, 2, 3, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 9, 6, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.add(sigma, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [8666.757090734216, 2.408511340043422, 2.3292486590480035, 2.306371307927289, 2.3036050111893824, 2.30315092132391], "accuracy": [0.09787346422672272, 0.09298639744520187, 0.09708096832036972, 0.0940430611371994, 0.09628847241401672, 0.09549596905708313], "val_loss": [2.1104882104056224, 2.015960012163435, 1.979660987854004, 1.97428526197161, 1.973625659942627, 1.9737234796796526], "val_accuracy": [0.10300000011920929, 0.10066666454076767, 0.10066666454076767, 0.0963333323597908, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [9, 1, 0, 3, 2, 1, 0, 7, 6, 0, 8, 9], [1, 2, 3, 3, 1, 1, 0, 0, 1, 0, 3, 2, 0, 3, 1, 1, 3, 0, 1, 0, 3, 0, 3, 1], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302646298528804, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 2, 2, 5, 0, 4, 4, 0, 8, 1, 4, 8, 4, 4, 4, 8], [1, 2, 3, 2, 1, 0, 0], [30, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 16, 10, 6, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.pow(sigma, tf.math.pow(beta, tf.math.negative(alpha))))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8, 9], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 18, 12, 6, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta)))), tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.280652892052647, 161313616334228.5, 9.476483441009795e+27, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1581.7338169642858, 9.426877198248931e+16, 5.516656651909734e+30, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 6, 0, 2, 2, 5, 0, 0, 6, 0, 8, 1, 2, 2, 5], [1, 1, 3, 0, 1, 0, 0, 0, 3], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 24, 15, 9, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.divide_no_nan(alpha, sigma)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha)), tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 1], [0, 1, 0, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [8, 3], [1, 7], [35], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 9, 5, 0, 0, 6, 0, 8, 1, 2, 2], [0, 2, 1, 1, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(beta), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 1, 3, 2, 2, 4, 0, 7, 6, 0, 8, 4, 8, 3, 9, 4, 4, 5, 4, 9, 1, 0], [1, 3, 3, 2, 1, 0, 2, 2, 0, 1, 3, 2, 0], [40, 63, 56, 45, 46]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 34, 21, 13, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.negative(sigma), tf.math.add(sigma, beta)), alpha)), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.sqrt(beta), tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.pow(tf.math.square(tf.math.pow(alpha, sigma)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 1, 0, 3, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 3, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [35], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 2, 2, 5, 0, 4, 9, 0, 8, 1, 4, 8, 4, 4, 4, 8], [3, 2, 0, 1, 1, 0, 0, 2, 2, 3, 2, 1], [40, 29, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(sigma)), beta)", "other_info": {"loss": [2.3613518809503837, 15377.447403078555, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04385153949260712, 0.04345529153943062, 0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2259981291634694, 1287717612982.8572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.003666666569188237, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [3, 9, 0, 2, 2, 9, 0, 7, 4, 0, 8, 4, 0, 2, 0, 0], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [18.435882477413283, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.035926561802625656, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2597186.214285714, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 1, 0, 3, 2, 1, 0, 7, 6, 0, 8, 9], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302646298528804, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 8, 0, 7, 6, 0, 8], [1, 2, 3, 2, 2, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 11, 6, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(sigma)))), beta), beta)", "other_info": {"loss": [2.3580307183311664, 451749005416.45575, 999.1725788189515, 4215.853600305132, 11202.97306733238, 23419.331378574494], "accuracy": [0.08334434032440186, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [45.86411503383091, 309.53323800223217, 2063.6153738839284, 6527.70703125, 14967.050223214286, 28662.07254464286], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 1, 8, 2, 2, 5, 0, 7, 6, 0, 8, 3, 0, 9, 5, 1], [1, 3, 1, 3, 1, 0, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 24, 16, 8, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.add(alpha, sigma)))), alpha), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 0, 1, 9, 9, 2, 7, 4, 0, 8, 4, 0, 2, 0, 0], [3, 3, 1, 3, 1, 1, 0, 2, 0, 3, 3, 2, 1], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), sigma), tf.math.subtract(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303461228662777, 2.304181181601939, 2.302469136676831, 2.302896300232595, 2.3027352956717184, 2.3036277031523755], "accuracy": [0.09008057415485382, 0.08466517180204391, 0.0882314071059227, 0.08849557489156723, 0.09232597798109055, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 9, 5, 0, 0, 6, 0, 8, 1, 2, 2], [0, 2, 1, 1, 1, 0, 0, 0, 3, 3], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), beta), tf.math.square(alpha))", "other_info": {"loss": [2.303461228662777, 2.304181181601939, 2.302469136676831, 2.302896300232595, 2.3027352956717184, 2.3036277031523755], "accuracy": [0.09008057415485382, 0.08466517180204391, 0.0882314071059227, 0.08849557489156723, 0.09232597798109055, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 2, 2, 0, 0, 7, 6, 0, 8], [3, 2, 1, 1, 0, 1, 0, 2], [40, 63, 5, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 8, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.negative(beta)), tf.math.add(alpha, alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303461228662777, 2.304181181601939, 2.302469136676831, 2.302896300232595, 2.3027352956717184, 2.3036277031523755], "accuracy": [0.09008057415485382, 0.08466517180204391, 0.0882314071059227, 0.08849557489156723, 0.09232597798109055, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 9, 2, 5, 0, 7, 6, 0, 8], [3, 2, 3, 2, 1, 0, 0], [81, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.303461228662777, 2.304181181601939, 2.302469136676831, 2.302896300232595, 2.3027352956717184, 2.3036277031523755], "accuracy": [0.09008057415485382, 0.08466517180204391, 0.0882314071059227, 0.08849557489156723, 0.09232597798109055, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 2, 2, 5, 6, 7, 5, 0, 8, 9], [3, 3, 0, 2, 3, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 15, 9, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.divide_no_nan(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, sigma)), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.303461228662777, 2.304181181601939, 2.302469136676831, 2.302896300232595, 2.3027352956717184, 2.3036277031523755], "accuracy": [0.09008057415485382, 0.08466517180204391, 0.0882314071059227, 0.08849557489156723, 0.09232597798109055, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]