[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7562857270240784, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.2994573788006134, 2.275803343274448, 2.230658977290879, 2.1544246911026343, 2.0275416531661685, 1.8262273304812928, 1.582100340104799, 1.406531871333492, 1.3587966842768513, 1.3107017751036696, 1.3113434072719228, 1.1730624410564778, 1.0470283255758475, 0.9441078000175104, 0.8979062402426307, 0.8911909165871755, 0.9047783161702331, 0.8894114844267789, 0.8399215664105912, 0.8078759530862529, 0.7987270210759515, 0.7844452280346995, 0.7818550079442947, 0.7687266011673304, 0.7614519831101656, 0.742857984036282, 0.7270391444960889, 0.7099967982160921, 0.6962711498989579, 0.6884002152403758, 0.6900982485313804, 0.6893325189967213, 0.6747446096316619, 0.6672853058937943, 0.650834002263038, 0.6405705817151047], "accuracy": [0.10157178342342377, 0.160084530711174, 0.26958128809928894, 0.3611147701740265, 0.41011756658554077, 0.44049662351608276, 0.48091402649879456, 0.5130101442337036, 0.5394267439842224, 0.5691454410552979, 0.5779950022697449, 0.6262052655220032, 0.6449610590934753, 0.6600185036659241, 0.6671509742736816, 0.6807554960250854, 0.6896050572395325, 0.6975300312042236, 0.7022850513458252, 0.7034738063812256, 0.7117950320243835, 0.7106062769889832, 0.7202483415603638, 0.7185312509536743, 0.713908314704895, 0.7160216569900513, 0.7251353859901428, 0.7272487282752991, 0.7334566116333008, 0.7450799345970154, 0.7500990629196167, 0.7466648817062378, 0.7453441023826599, 0.7493065595626831, 0.754589855670929, 0.7563069462776184], "val_loss": [1.957469872065953, 1.923898765019008, 1.8705408232552665, 1.7784720829554967, 1.6136784553527832, 1.3684843608311243, 1.1124142919267928, 0.9330074105943952, 0.818692854472569, 0.76145487172263, 0.7087184361049107, 0.682911583355495, 0.6378290142331805, 0.625762905393328, 0.6451492990766253, 0.6757727861404419, 0.680939929825919, 0.6422169889722552, 0.5933289016996112, 0.5666561807904925, 0.5580231121608189, 0.5493591172354562, 0.5398307527814593, 0.5364760841642108, 0.5325234617505755, 0.5257567167282104, 0.5205083744866508, 0.5175126280103411, 0.5151973792484829, 0.5128537927355085, 0.507249014718192, 0.5000334467206683, 0.4920257840837751, 0.4814251491001674, 0.47157195636204313, 0.469646726335798], "val_accuracy": [0.14433333277702332, 0.3499999940395355, 0.40799999237060547, 0.45100000500679016, 0.512333333492279, 0.5863333344459534, 0.6306666731834412, 0.6676666736602783, 0.6793333292007446, 0.6923333406448364, 0.7110000252723694, 0.7163333296775818, 0.7250000238418579, 0.7266666889190674, 0.734333336353302, 0.7456666827201843, 0.7429999709129333, 0.7423333525657654, 0.7433333396911621, 0.746666669845581, 0.7549999952316284, 0.7620000243186951, 0.7620000243186951, 0.7576666474342346, 0.7649999856948853, 0.7663333415985107, 0.7693333625793457, 0.7716666460037231, 0.7746666669845581, 0.7833333611488342, 0.784333348274231, 0.7796666622161865, 0.7776666879653931, 0.7786666750907898, 0.7786666750907898, 0.7786666750907898]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 0, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7268571257591248, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.29967913661005, 2.277357025484068, 2.2347456376314194, 2.163140856531617, 2.0404608848308765, 1.829473645947534, 1.5646915136783697, 1.4010180713730152, 1.3906395365108257, 1.309258466714157, 1.1738383363912197, 0.9821398302769034, 0.9133396599003353, 0.9232812277424558, 0.9149385168804012, 0.8587001924895182, 0.8172998609024504, 0.8077275276325792, 0.8265469710289322, 0.8277983111775294, 0.8087236279541271, 0.7790690326829235, 0.7484463955889666, 0.7369102334632944, 0.7332443825446887, 0.7401116706864898, 0.7375641433302406, 0.720903729624075, 0.6994378671921979, 0.6964933657847722, 0.6940487403643524, 0.682063433944809, 0.6703178109651575, 0.6755308559258631, 0.6634112075414041, 0.6496690232220611, 0.6396642760074118, 0.6300990035143101, 0.630154363081802, 0.6122273089642916, 0.6082760897987728, 0.5953025613494317, 0.6001016869363595, 0.5856854961123433, 0.5724324582353985, 0.5637396138184547, 0.5613973511365962, 0.5633662317045108, 0.552516463796114, 0.561530116329954, 0.5525549176331005, 0.5432404713419057, 0.542334962955571, 0.5429374402650453, 0.5357237796127804, 0.5136104519097024, 0.52459534029242], "accuracy": [0.1006472036242485, 0.15400871634483337, 0.26324132084846497, 0.3533218801021576, 0.4011359214782715, 0.4321753978729248, 0.4773477613925934, 0.5155197381973267, 0.5383700728416443, 0.5727116465568542, 0.6159027814865112, 0.6536785364151001, 0.6509047746658325, 0.6629242897033691, 0.6723021864891052, 0.6881521344184875, 0.6955488324165344, 0.7041342258453369, 0.6992471218109131, 0.6944921612739563, 0.7061154246330261, 0.7062475085258484, 0.7160216569900513, 0.7173424959182739, 0.7180029153823853, 0.7253995537757874, 0.722757875919342, 0.7339849472045898, 0.7363624572753906, 0.7470611333847046, 0.7428345084190369, 0.7423061728477478, 0.746268630027771, 0.7449478507041931, 0.7483819723129272, 0.755118191242218, 0.7602694630622864, 0.7621186375617981, 0.7668735980987549, 0.7733456492424011, 0.7655527591705322, 0.78113853931427, 0.7703077793121338, 0.7798177003860474, 0.7795535326004028, 0.7889314293861389, 0.7877426743507385, 0.787082314491272, 0.7910447716712952, 0.7917051911354065, 0.7975168228149414, 0.7903843522071838, 0.7936864495277405, 0.7897239327430725, 0.7928939461708069, 0.8041210174560547, 0.8063663840293884], "val_loss": [1.9582332883562361, 1.9264860834394182, 1.8762620517185755, 1.7893353189740862, 1.6224493980407715, 1.347200666155134, 1.058196680886405, 0.8655706473759243, 0.783190199307033, 0.7133087260382516, 0.6838985170636859, 0.6374948876244682, 0.6651388917650495, 0.6845281805310931, 0.6519992351531982, 0.5928176811763218, 0.5657548393521991, 0.564343980380467, 0.5678862503596714, 0.5644247361591884, 0.5561036552701678, 0.5379872662680489, 0.5287575892039708, 0.5351766518184117, 0.5428903273173741, 0.5410605158124652, 0.526533705847604, 0.5135236127035958, 0.5054613181522915, 0.496863773890904, 0.48489487171173096, 0.47438674313681467, 0.4672022547040667, 0.459829432623727, 0.45185712405613493, 0.444902845791408, 0.4437931946345738, 0.44489584650312153, 0.4412749154227121, 0.4339261565889631, 0.42981062616620747, 0.4298725979668753, 0.42675358057022095, 0.41924069608960834, 0.41285201481410433, 0.4090813994407654, 0.4043022223881313, 0.40087999616350445, 0.4000545995576041, 0.3984997272491455, 0.3958745854241507, 0.3947872349194118, 0.39293258530753, 0.3895593796457563, 0.3877732072557722, 0.3885818123817444, 0.3884939210755484], "val_accuracy": [0.13833333551883698, 0.3449999988079071, 0.40166667103767395, 0.44600000977516174, 0.5019999742507935, 0.5806666612625122, 0.637333333492279, 0.6740000247955322, 0.6729999780654907, 0.7043333053588867, 0.7179999947547913, 0.7263333201408386, 0.7053333520889282, 0.7400000095367432, 0.7366666793823242, 0.7419999837875366, 0.746999979019165, 0.7443333268165588, 0.7433333396911621, 0.7463333606719971, 0.7559999823570251, 0.7559999823570251, 0.7670000195503235, 0.7736666798591614, 0.7756666541099548, 0.7666666507720947, 0.7683333158493042, 0.7696666717529297, 0.777999997138977, 0.7789999842643738, 0.7839999794960022, 0.7860000133514404, 0.7950000166893005, 0.8006666898727417, 0.8046666383743286, 0.8053333163261414, 0.8043333292007446, 0.8040000200271606, 0.8066666722297668, 0.8113333582878113, 0.8136666417121887, 0.8113333582878113, 0.8180000185966492, 0.8213333487510681, 0.8236666917800903, 0.8273333311080933, 0.8296666741371155, 0.8309999704360962, 0.8303333520889282, 0.8293333053588867, 0.8346666693687439, 0.8356666564941406, 0.8349999785423279, 0.8343333601951599, 0.8346666693687439, 0.8316666483879089, 0.8286666870117188]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [0, 7], [71], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [89, 63, 56, 12]], "fitness": -0.10342857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 6, 4, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [8.897291980788861e+24, 1.0128448914673263e+25, 1.005145533154866e+25, 1.0127348885022596e+25, 1.0623041827917677e+25, 1.0275741669083612e+25], "accuracy": [0.10857218503952026, 0.10830801725387573, 0.11702549457550049, 0.11187426000833511, 0.10817593336105347, 0.10989301651716232], "val_loss": [6.803007028745475e+24, 6.803008675776195e+24, 6.803008181666979e+24, 6.803008016963907e+24, 6.803008016963907e+24, 6.803007687557763e+24], "val_accuracy": [0.11933333426713943, 0.11933333426713943, 0.11933333426713943, 0.11933333426713943, 0.11933333426713943, 0.11933333426713943]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 9, 2, 5, 6, 0, 2, 2, 6, 4, 8, 8, 2, 7, 8, 1, 7, 3, 0], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 1, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.887358695420063e+24, 44.83033778641942, 143.78954213507313, 300.73775803335843, 514.6587532637, 786.6931504801422], "accuracy": [0.08057060092687607, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.09732164655413, 80.90512520926339, 195.2076416015625, 358.90211704799106, 572.2386300223214, 835.082257952009], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030723406575406, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 3, 7, 2, 5, 7, 0, 7, 4, 9], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 1, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [195.42826966605782, 22168.766014025558, 367460.2853321886, 2604821.7028794084, 11453116.739136178, 37441483.957205124], "accuracy": [0.09893012791872025, 0.0948355570435524, 0.10117553919553757, 0.10368511080741882, 0.1014397069811821, 0.09760929644107819], "val_loss": [1345.647739955357, 65073.970982142855, 687608.1428571428, 3729234.4285714286, 13935973.142857144, 41055409.14285714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [4, 5, 9, 2, 5, 6, 0, 2, 2, 6, 4, 8, 8, 2, 7, 8, 1, 7, 3, 0], [1, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 6, 2, 5, 9, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 15, 10, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))", "other_info": {"loss": [58952968.648035094, 75483975.16206577, 75750138.81495179, 76315781.59080702, 75786345.80583806, 76414039.21595562], "accuracy": [0.09391097724437714, 0.10355303436517715, 0.09747721254825592, 0.09747721254825592, 0.09628847241401672, 0.09509972482919693], "val_loss": [62091899.428571425, 62540790.85714286, 62785554.28571428, 62940541.71428572, 63061821.71428572, 63164100.571428575], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 4, 8, 9], [3, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45, 67, 37], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 24, 24, 15, 9, 4, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), beta)))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), beta)))), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3030723406575406, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 3, 5, 8, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 16, 10, 6, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030723406575406, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [4, 4, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 9, 2, 5, 6, 0, 2, 2, 6, 4, 8, 8, 2, 7, 8, 1, 7, 3, 0], [5, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.8873582385762493e+24, 44.83033778641942, 143.78954213507313, 300.73775170089044, 514.6587532637, 786.6931424184388], "accuracy": [0.08057060092687607, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.09732164655413, 80.90512520926339, 195.2076416015625, 358.90211704799106, 572.2386300223214, 835.082257952009], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 8, 0, 0, 4, 0, 8], [1, 1, 1, 0, 3, 0, 2], [34, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1.887365548077269e+24, 44.83033778641942, 143.78954213507313, 300.73775170089044, 514.6587532637, 786.6931424184388], "accuracy": [0.08057060092687607, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.09732164655413, 80.90512520926339, 195.2076416015625, 358.90211704799106, 572.2386300223214, 835.082257952009], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 3, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [26, 63, 56, 12]], "fitness": -0.09685714542865753, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.303095299160602, 2.302123363007644, 2.2997458225165093, 2.2974570460087116, 2.296971826536969, 2.298874473338744, 2.3005052620566926, 2.3012419864564855, 2.301848705339866], "accuracy": [0.09232597798109055, 0.09034473448991776, 0.09787346422672272, 0.10659094154834747, 0.11610091477632523, 0.10976093262434006, 0.09734513610601425, 0.08228767663240433, 0.0812310129404068], "val_loss": [1.9701645033700126, 1.9689664840698242, 1.9672592708042689, 1.9667572293962752, 1.9686798368181502, 1.9708664757864816, 1.9721531867980957, 1.9725207601274763, 1.9726956912449427], "val_accuracy": [0.03966666758060455, 0.05066666752099991, 0.09366666525602341, 0.12666666507720947, 0.11933333426713943, 0.07699999958276749, 0.0416666679084301, 0.044333335012197495, 0.06866666674613953]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 8, 8, 0, 4, 0, 8], [1, 1, 1, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.07085714489221573, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.300698950054182, 2.3005621475770948, 2.302202883838678, 2.3027253833980357, 2.3059342513388614, 2.348535229831938, 2.857482480555635, 5.140022559928667, 11.128003555376454], "accuracy": [0.09985470771789551, 0.08598599582910538, 0.08519349992275238, 0.09536388516426086, 0.10936468094587326, 0.09694888442754745, 0.09074098616838455, 0.10196803510189056, 0.09774138033390045], "val_loss": [1.9697375297546387, 1.972778047834124, 1.97367525100708, 1.9747629846845354, 1.983393737248012, 2.1308655738830566, 3.2338917595999583, 6.795941761561802, 14.46930912562779], "val_accuracy": [0.08633333444595337, 0.07633333653211594, 0.04800000041723251, 0.1146666631102562, 0.10599999874830246, 0.09666666388511658, 0.10000000149011612, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [7, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 3, 0, 3, 0, 2], [9, 0, 56, 12, 33, 7, 15]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 9, 6, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.square(alpha), sigma))))", "other_info": {"loss": [2.3031489276268764, 2.302979885516244, 2.302618839611325, 2.30234318049734, 2.3022100936467416, 2.303362754924564], "accuracy": [0.09219389408826828, 0.08875974267721176, 0.09060890227556229, 0.08836349099874496, 0.09602430462837219, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [7, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [51, 63, 56, 12, 33, 7, 15]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3031489276268764, 2.302979885516244, 2.302618839611325, 2.30234318049734, 2.3022100936467416, 2.303362754924564], "accuracy": [0.09219389408826828, 0.08875974267721176, 0.09060890227556229, 0.08836349099874496, 0.09602430462837219, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [96, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3031489276268764, 2.302979885516244, 2.302618839611325, 2.30234318049734, 2.3022100936467416, 2.303362754924564], "accuracy": [0.09219389408826828, 0.08875974267721176, 0.09060890227556229, 0.08836349099874496, 0.09602430462837219, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [7, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [9, 63, 56, 12, 33, 7, 15]], "fitness": -0.028285713866353035, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.303845927699871, 2.3083402047367017, 2.3175869937806537, 2.332727755222968, 2.353334173093682, 2.384705358382308], "accuracy": [0.09034473448991776, 0.07806102186441422, 0.0614185705780983, 0.04279487580060959, 0.02813366800546646, 0.014793289825320244], "val_loss": [1.9728532518659319, 1.9798200471060616, 1.991598265511649, 2.0085733277457103, 2.0316817419869557, 2.0624087878635953], "val_accuracy": [0.026333333924412727, 0.014333332888782024, 0.007333333138376474, 0.006666666828095913, 0.00566666666418314, 0.004999999888241291]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 6, 0, 2, 2, 6, 4, 8, 8, 2, 7, 8, 1, 7, 3, 0], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 3, 2, 0, 3, 0, 2], [9, 24, 56, 12, 33, 7, 15]], "fitness": -0.028285713866353035, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303845927699871, 2.3083401867553244, 2.3175869937806537, 2.332727755222968, 2.353334330548826, 2.384705358382308], "accuracy": [0.09034473448991776, 0.07806102186441422, 0.0614185705780983, 0.04279487580060959, 0.02813366800546646, 0.014793289825320244], "val_loss": [1.9728532518659319, 1.9798200471060616, 1.991598265511649, 2.0085733958653043, 2.031681878226144, 2.0624087878635953], "val_accuracy": [0.026333333924412727, 0.014333332888782024, 0.007333333138376474, 0.006666666828095913, 0.00566666666418314, 0.004999999888241291]}}]