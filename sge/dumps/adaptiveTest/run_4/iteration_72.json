[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.8014285564422607, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta)))), alpha), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.212541573429624, 1.8508912576518715, 1.4386815597289557, 1.0726007952540226, 0.9198570826884668, 0.8450783138198938, 0.7674573611558121, 0.7579273167397793, 0.6851217219259886, 0.6726374268342853, 0.6320553765226397, 0.6408845012324313, 0.5805699036436593, 0.5903673564690199, 0.5616922696127065, 0.548788699771057, 0.542392648600033, 0.5431562433106126, 0.512134409414511], "accuracy": [0.2712983787059784, 0.43230748176574707, 0.5017831325531006, 0.6089023947715759, 0.6608110070228577, 0.6787742972373962, 0.7038700580596924, 0.7148329019546509, 0.7359662055969238, 0.7440232634544373, 0.7582882046699524, 0.7503632307052612, 0.7770439982414246, 0.7697794437408447, 0.7802139520645142, 0.7845727205276489, 0.793950617313385, 0.789988100528717, 0.7985734939575195], "val_loss": [1.5096842902047294, 1.4728584289550781, 1.0957036018371582, 0.6353781223297119, 0.7030532700674874, 0.6062451601028442, 0.6340604509626117, 0.5539986065455845, 0.5189201491219657, 0.4837070533207485, 0.46580582005637033, 0.4355362057685852, 0.42425555842263357, 0.4240109069006784, 0.40836329971040997, 0.408227733203343, 0.41833339418683735, 0.42640392269407, 0.4137911115373884], "val_accuracy": [0.5376666784286499, 0.4976666569709778, 0.5513333082199097, 0.7120000123977661, 0.6806666851043701, 0.718666672706604, 0.7193333506584167, 0.7409999966621399, 0.7639999985694885, 0.7673333287239075, 0.778333306312561, 0.8019999861717224, 0.8106666803359985, 0.8270000219345093, 0.824999988079071, 0.815666675567627, 0.8166666626930237, 0.8006666898727417, 0.8076666593551636]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 14, 8, 6, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), sigma))), tf.math.add(beta, alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8396.636357979862, 2.405123238172419, 2.319745403569939, 2.3043419938471024, 2.3033343245088465, 2.3037232676548745, 2.3035663702484483], "accuracy": [0.09959053993225098, 0.0940430611371994, 0.09774138033390045, 0.09470347315073013, 0.09602430462837219, 0.09589222073554993, 0.09034473448991776], "val_loss": [2.123141288757324, 2.003988061632429, 1.9765563692365373, 1.9737523623875208, 1.9737044743129186, 1.973780700138637, 1.9738027027675085], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 2, 0, 8, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, sigma))", "other_info": {"loss": [2.3044423418998594, 2.317985177433738, 3.056144743561074e+17, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.07700435817241669, 0.08875974267721176, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974428381238665, 1.9984636987958635, 6.193409772178909e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017999999225139618, 0.0860000029206276, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [9], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 4, 5, 5, 0, 7, 6, 0, 8], [3, 2, 3, 1, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), tf.math.pow(tf.math.square(tf.math.square(tf.math.negative(beta))), tf.math.add(sigma, alpha))), alpha)", "other_info": {"loss": [2.287284853624992, 2.3031912617097046, 2.3030647549410665, 2.3029708697606606, 2.303021270679902, 2.3032782101092666, 2.3030414636408127], "accuracy": [0.12019548565149307, 0.08889182657003403, 0.09153348207473755, 0.09536388516426086, 0.09681680053472519, 0.09470347315073013, 0.09721305221319199], "val_loss": [1.9735798835754395, 1.9735971178327287, 1.973691122872489, 1.9736456189836775, 1.9736089706420898, 1.9736885343279158, 1.9736477306910925], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 4, 6, 5, 0, 7, 4, 0, 8, 9], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 12, 6, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.negative(tf.math.add(tf.math.pow(beta, sigma), beta))), tf.math.negative(alpha)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 5, 7, 6, 0, 8], [3, 2, 1, 1, 1, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 14, 8, 6, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.square(tf.math.square(beta)), tf.math.add(alpha, alpha)))), alpha), alpha)", "other_info": {"loss": [2.30730394557514, 2.8525956734186306, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.07436270266771317, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9813144547598702, 706102.7321428572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.015333333052694798, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 4, 2, 2, 6, 0, 8], [1, 2, 3, 1, 1, 1, 0, 2], [23, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [2, 1, 4, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.pow(alpha, beta), tf.math.add(tf.math.add(sigma, beta), tf.math.square(alpha))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 14, 8, 6, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta)))), alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028555068483505, 2.302584409713745, 2.302585368332153, 2.302584598659918, 2.3025849809295167, 2.3025857592617847], "accuracy": [0.09589222073554993, 0.10394927859306335, 0.09840179979801178, 0.09998679161071777, 0.1018359512090683, 0.09998679161071777], "val_loss": [1.9736440522330148, 1.9736449377877372, 1.973644597189767, 1.9736442565917969, 1.9736437116350447, 1.9736449377877372], "val_accuracy": [0.10133333504199982, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 5, 2, 2, 5, 0, 1, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.subtract(tf.math.divide_no_nan(sigma, beta), alpha)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [35273313293166.76, 2.318368070113928, 2.3183695510425397, 2.3183713215311617, 2.3183730125994084, 2.318374861784111], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.985321113041469, 1.9853223391941615, 1.985323701586042, 1.9853253364562988, 1.9853264944893974, 1.985327856881278], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 3, 2, 2, 3, 0, 3, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0, 2], [20, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 7, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(beta, tf.math.add(tf.math.add(tf.math.multiply(sigma, tf.math.negative(beta)), alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 2, 2, 5, 0, 4, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [60, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.pow(sigma, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [5, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 0, 2, 1, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), beta))", "other_info": {"loss": [2.302540653842457, 2.30417114670219, 2.3455653610388207, 2.937406692428045, 5.461774522476287, 12.313085779490613, 25.962067027527187, 49.32661447763097, 83.86722278204482, 133.0015631602535, 198.6921956560253, 284.7295498488334, 391.3205645410943, 522.3550953883316, 680.8738213870283, 869.6026515071387], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.10236428678035736, 0.1014397069811821, 0.10091137140989304, 0.09826971590518951, 0.09655263274908066, 0.09721305221319199, 0.0940430611371994, 0.09787346422672272, 0.10051512718200684, 0.09549596905708313, 0.10130762308835983, 0.1010434553027153, 0.09906221181154251], "val_loss": [1.9740256581987654, 1.9795925276620048, 2.147251469748361, 3.3673308236258372, 7.359526497977121, 16.31582478114537, 32.285323006766184, 57.19684273856027, 93.39370945521763, 142.86626761300224, 207.76966203962053, 290.03831263950894, 392.12840053013394, 516.0548095703125, 663.8043910435268, 837.4229910714286], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [4, 1, 0, 2, 2, 1, 0, 7, 6, 0, 8], [1, 3, 3, 1, 1, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.math.negative(sigma), tf.math.add(sigma, tf.math.add(alpha, tf.math.subtract(alpha, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 8, 4, 5, 5, 7, 6, 0, 8], [1, 2, 3, 1, 1, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.sqrt(alpha)), tf.math.pow(beta, tf.math.square(sigma))), tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 2, 2, 5, 0, 4, 6, 0, 8], [1, 2, 3, 2, 2, 0, 0], [40, 63, 56, 45]], "fitness": -0.04085714370012283, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 12, 7, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(beta), sigma))), tf.math.negative(beta)), beta)", "other_info": {"loss": [2.8345020141080073, 2.2748585667167402, 2.3073787351310244, 2.3037635665984753, 2.3043867331202383, 2.303344621445446], "accuracy": [0.15942411124706268, 0.146479994058609, 0.09985470771789551, 0.1018359512090683, 0.10077928751707077, 0.10117553919553757], "val_loss": [1.972273486001151, 1.9820867265973772, 1.9756354604448592, 1.9741482734680176, 1.9737986837114607, 1.9736522947038924], "val_accuracy": [0.10300000011920929, 0.10133333504199982, 0.09733333438634872, 0.09700000286102295, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 9, 7, 6, 0, 8], [1, 2, 3, 1, 1, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), sigma)", "other_info": {"loss": [2.303452255766484, 2.303462129148746, 2.3026074013453686, 2.30320227232749, 2.302184474970513, 2.3035349719292295], "accuracy": [0.0870426595211029, 0.09100515395402908, 0.09087307006120682, 0.08506141602993011, 0.09285431355237961, 0.08889182657003403], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8, 0, 5, 8, 1, 6, 6, 4, 5, 6, 3, 9, 5, 1, 8, 3], [1, 2, 0, 0, 1, 0, 0, 3, 1, 2, 2, 3, 3, 2], [40, 63, 56, 45, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 40, 26, 14, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, tf.math.square(alpha))), beta), tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.sqrt(beta), sigma))), tf.math.multiply(sigma, beta))))))))", "other_info": {"loss": [2.303452255766484, 2.303462129148746, 2.3026074013453686, 2.30320227232749, 2.302184474970513, 2.3035349719292295], "accuracy": [0.0870426595211029, 0.09100515395402908, 0.09087307006120682, 0.08506141602993011, 0.09285431355237961, 0.08889182657003403], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [35], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 3, 2, 2, 3, 0, 7, 6, 0, 8], [1, 1, 0, 2, 1, 1, 0, 3], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 8, 8, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta)), alpha)), alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.303452255766484, 2.303462129148746, 2.3026074013453686, 2.30320227232749, 2.302184474970513, 2.3035349719292295], "accuracy": [0.0870426595211029, 0.09100515395402908, 0.09087307006120682, 0.08506141602993011, 0.09285431355237961, 0.08889182657003403], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 5, 6, 6, 0, 8], [1, 2, 3, 0, 3, 2, 0], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 8, 6, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.square(beta)), tf.math.divide_no_nan(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), sigma), beta)", "other_info": {"loss": [2.303452255766484, 2.303462129148746, 2.3026074013453686, 2.30320227232749, 2.302184474970513, 2.3035349719292295], "accuracy": [0.0870426595211029, 0.09100515395402908, 0.09087307006120682, 0.08506141602993011, 0.09285431355237961, 0.08889182657003403], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]