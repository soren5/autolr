[{"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.080014781141955, 1.6928497475088864, 1.2804294203439677, 0.990812228489955, 0.914642767245822, 0.8447322601324784, 0.7622585402676899, 0.757972811230768, 0.7224494696938839, 0.7096414582966467, 0.6456879416099077, 0.6251274552233168, 0.6485780296450389, 0.6181950759201191, 0.593709919021555, 0.5784155672898051, 0.5583084704239513, 0.5595669297730493, 0.5234893039823476, 0.5409739145025239, 0.4980840604137735, 0.5196449615463777, 0.47879185032268257, 0.5043546869738731, 0.48054476539141716, 0.46789449552156986, 0.4718149183464403, 0.47313749989766046, 0.4508237811072376, 0.4405924165686596, 0.41989307389944586, 0.42453671090197587, 0.41282099853842374, 0.413599090435407, 0.40346836540299386, 0.4041175278950015, 0.4041010819374531, 0.38107315394714947, 0.40667662794847276, 0.41285511199052793, 0.372648953856132], "accuracy": [0.31264033913612366, 0.47430986166000366, 0.5639941692352295, 0.6326773166656494, 0.6659622192382812, 0.6804913282394409, 0.7193237543106079, 0.713908314704895, 0.7256637215614319, 0.733060359954834, 0.7561748623847961, 0.7614582180976868, 0.7543256878852844, 0.7568352818489075, 0.7708360552787781, 0.7758552432060242, 0.7858935594558716, 0.7852331399917603, 0.8075551390647888, 0.7910447716712952, 0.816008448600769, 0.8030643463134766, 0.8186501264572144, 0.8087438941001892, 0.8156121969223022, 0.8252542614936829, 0.8197067975997925, 0.8204993009567261, 0.8348963260650635, 0.8359529972076416, 0.8454629778862, 0.8400475382804871, 0.8462554216384888, 0.8466516733169556, 0.8549728989601135, 0.8514066934585571, 0.8474441766738892, 0.8610487580299377, 0.8491612672805786, 0.8495575189590454, 0.8593316674232483], "val_loss": [1.630451236452375, 1.0840352262769426, 0.9008099692208427, 0.7055865696498326, 0.6357274566377912, 0.689053109713963, 0.6034395013536725, 0.6371928453445435, 0.5669430664607457, 0.5520715713500977, 0.5186573948178973, 0.5956215858459473, 0.5283042192459106, 0.4765822376523699, 0.48533880710601807, 0.47534988607679096, 0.4233934538705008, 0.4317665100097656, 0.42770862579345703, 0.40932909079960417, 0.40778770617076326, 0.4009444032396589, 0.4252405422074454, 0.4149225779942104, 0.3893350533076695, 0.3885462965284075, 0.4103659391403198, 0.4042489784104483, 0.38025070088250296, 0.3757079073360988, 0.38098553248814176, 0.4258753316743033, 0.3653866308076041, 0.3621015633855547, 0.37489921706063406, 0.3594018391200474, 0.38111670528139385, 0.3661863037518093, 0.38536124570029123, 0.3639900003160749, 0.3521451950073242], "val_accuracy": [0.49300000071525574, 0.5233333110809326, 0.6193333268165588, 0.6886666417121887, 0.7103333473205566, 0.7116666436195374, 0.7246666550636292, 0.6963333487510681, 0.7300000190734863, 0.7379999756813049, 0.7526666522026062, 0.718999981880188, 0.7506666779518127, 0.781333327293396, 0.762333333492279, 0.7883333563804626, 0.8223333358764648, 0.8193333148956299, 0.8169999718666077, 0.8336666822433472, 0.8276666402816772, 0.8306666612625122, 0.8180000185966492, 0.8286666870117188, 0.8363333344459534, 0.8349999785423279, 0.8309999704360962, 0.82833331823349, 0.8420000076293945, 0.8476666808128357, 0.8429999947547913, 0.8100000023841858, 0.8513333201408386, 0.8510000109672546, 0.8399999737739563, 0.859333336353302, 0.8446666598320007, 0.8429999947547913, 0.8389999866485596, 0.8566666841506958, 0.8569999933242798]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.5571428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.074440502660653, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.31660282611846924, 0.2615242302417755, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1930243968963623, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5256666541099548, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 0, 1], [5, 3], [1, 1], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 4, 2, 2, 2, 2, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [41, 60]], "fitness": -0.4300000071525574, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.467187925210766, 2.240034448157338, 2.263232395460325, 2.241241691260841, 2.537184404360069, 2.3044069296711265, 2.303335565853711, 2.30334599470623, 2.3031159516700965], "accuracy": [0.23523972928524017, 0.21304979920387268, 0.2172764539718628, 0.15757495164871216, 0.12719587981700897, 0.09787346422672272, 0.09879804402589798, 0.09642054885625839, 0.09972262382507324], "val_loss": [1.9796242032732283, 1.6450307709830148, 1.9815143857683455, 3.1536503519330705, 1.975827421460833, 1.9741559709821428, 1.9738726615905762, 1.973797389439174, 1.9736905097961426], "val_accuracy": [0.15433333814144135, 0.29899999499320984, 0.1003333330154419, 0.4103333353996277, 0.0989999994635582, 0.0989999994635582, 0.09700000286102295, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [21], [0, 0, 0], [0, 1, 1], [5, 3], [4, 1], [], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 3, 0, 2, 2, 2, 0, 5], [1, 2, 1, 0, 3, 1], [41, 60]], "fitness": -0.14628571271896362, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 14, 8, 6, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.math.negative(beta), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), sigma), alpha)))", "other_info": {"loss": [2.3025790099785266, 2.3017595721242166, 2.3022076470457318, 2.3009717808329055, 2.301746598072276, 2.301325977502041, 2.302648471724702, 2.3004728327526816, 2.303543172445059, 2.300384641969051, 2.302398210219924, 2.300522108654919, 2.299726960177529, 2.3001932707665507, 2.300110814152865, 2.2992279708125665, 2.299526409686533, 2.2993196083837733, 2.29876424686516, 2.3002931266145272, 2.2979982238734764, 2.2979527568741562, 2.298600247003588, 2.2995005473957053, 2.299202075582123, 2.29842747619769, 2.29981537165029, 2.299199569746488, 2.2990263373450897, 2.299109725778318, 2.2979839604843435, 2.2965981534537923, 2.298025292144743, 2.2972725914957786, 2.298120222606868, 2.297090937606001, 2.296126708945326, 2.2962768123197423, 2.2959320199110125, 2.2963943392325703, 2.295802807181251, 2.294932661433151, 2.2946974925392762, 2.295691001747483, 2.295125220319803, 2.2948333684558238, 2.294245279161229, 2.294143095874295, 2.294757414298712, 2.2949635751054367, 2.2964558941797417, 2.2944858513173174, 2.2939794130644007, 2.293951953265173, 2.294311969822833, 2.2947734174727135, 2.2936832542983754, 2.29294260725007, 2.2942671985863035, 2.2936170675247225, 2.2936497853810303, 2.293775808006592, 2.292270347159127, 2.2924422918608665, 2.2919495308230724, 2.2941948351307695, 2.292924943239209, 2.29215558887457, 2.292733732514992, 2.291714653536124, 2.2923635553453954, 2.29160481119011, 2.2920912767618624, 2.2916243701421384, 2.29154055317899, 2.2903961802454766, 2.290867927508694, 2.2915334678864547, 2.289370233514101, 2.289841258058207, 2.290813999373789, 2.2907092963321856, 2.289750619728835, 2.2892075412545174, 2.289715388195626, 2.2889210191841816, 2.2898365839077828, 2.2890956866317627, 2.2891521543921765, 2.289841047603661, 2.2891484334122127, 2.2898850590246482, 2.288763653380193, 2.2892022393304345, 2.2876126218260935, 2.288200404870433, 2.2873044343688123, 2.288308970412684, 2.2868324033084435, 2.2877648715345598], "accuracy": [0.09430722147226334, 0.0936468094587326, 0.08889182657003403, 0.09074098616838455, 0.09351472556591034, 0.09959053993225098, 0.09192973375320435, 0.09866596013307571, 0.09285431355237961, 0.09866596013307571, 0.0948355570435524, 0.09721305221319199, 0.0940430611371994, 0.09457138925790787, 0.09615638852119446, 0.10196803510189056, 0.09536388516426086, 0.09668471664190292, 0.09972262382507324, 0.09840179979801178, 0.1018359512090683, 0.09813763201236725, 0.09853387624025345, 0.09840179979801178, 0.09800554811954498, 0.09813763201236725, 0.09840179979801178, 0.09985470771789551, 0.09932637959718704, 0.09972262382507324, 0.10606260597705841, 0.10698718577623367, 0.09760929644107819, 0.1010434553027153, 0.09655263274908066, 0.09932637959718704, 0.10962884873151779, 0.10738343745470047, 0.10553427785634995, 0.10276053100824356, 0.10157178342342377, 0.11174217611551285, 0.11028926074504852, 0.10606260597705841, 0.109232597053051, 0.10989301651716232, 0.108440101146698, 0.11345925182104111, 0.10527011007070541, 0.11055342853069305, 0.11517632752656937, 0.11068551242351532, 0.10910051316022873, 0.11094967275857925, 0.10751552134752274, 0.11121384054422379, 0.11055342853069305, 0.11940298229455948, 0.1088363528251648, 0.11570466309785843, 0.10870426893234253, 0.11174217611551285, 0.11979923397302628, 0.11372341960668564, 0.1150442510843277, 0.11345925182104111, 0.11081759631633759, 0.11887465417385101, 0.120459645986557, 0.11966715008020401, 0.11874257028102875, 0.11570466309785843, 0.11874257028102875, 0.11332716792821884, 0.11953506618738174, 0.12178047746419907, 0.11953506618738174, 0.11953506618738174, 0.12891295552253723, 0.1254788041114807, 0.12455421686172485, 0.1266675442457199, 0.11966715008020401, 0.12389380484819412, 0.1278562992811203, 0.12349755316972733, 0.12429005652666092, 0.12402588874101639, 0.120459645986557, 0.12402588874101639, 0.12191256135702133, 0.12429005652666092, 0.1306300312280655, 0.12442214041948318, 0.13115836679935455, 0.12957337498664856, 0.12838461995124817, 0.12732796370983124, 0.13419628143310547, 0.12574297189712524], "val_loss": [1.969334670475551, 1.9691813332693917, 1.969029426574707, 1.9688756806509835, 1.9687225478036063, 1.9685712541852678, 1.9684171676635742, 1.968263830457415, 1.9681101526532854, 1.9679574966430664, 1.9678041594369071, 1.9676523208618164, 1.967501435961042, 1.9673521178109306, 1.9672018459865026, 1.9670537539890833, 1.9669064113071986, 1.9667577062334334, 1.9666080474853516, 1.9664575713021415, 1.966308661869594, 1.966160842350551, 1.966012750353132, 1.9658654076712472, 1.9657181331089564, 1.9655703817095076, 1.9654237883431571, 1.9652771949768066, 1.965130124773298, 1.9649828502110072, 1.9648335320608956, 1.9646892547607422, 1.964540754045759, 1.9643960680280412, 1.9642512457711356, 1.9641049248831612, 1.9639607157026018, 1.9638148716517858, 1.9636710711887904, 1.9635261126926966, 1.9633827209472656, 1.9632370131356376, 1.963094915662493, 1.9629532269069128, 1.9628087452479772, 1.9626651491437639, 1.9625236647469657, 1.962381226675851, 1.9622388567243303, 1.9620960099356515, 1.9619555473327637, 1.9618152209690638, 1.961674690246582, 1.9615348407200404, 1.9613945143563407, 1.9612530980791365, 1.961115905216762, 1.9609779630388533, 1.9608386584690638, 1.960700375693185, 1.9605612754821777, 1.9604221752711706, 1.9602843693324499, 1.9601456097194128, 1.9600084849766322, 1.9598700659615653, 1.959730897630964, 1.9595943178449358, 1.95945862361363, 1.9593217032296317, 1.9591832842145647, 1.9590462957109724, 1.958909579685756, 1.958773408617292, 1.9586354664393835, 1.9584978648594447, 1.958360058920724, 1.9582251140049525, 1.9580895560128349, 1.9579567909240723, 1.957822527204241, 1.9576866967337472, 1.9575508662632533, 1.9574155126299178, 1.9572826794215612, 1.9571494374956404, 1.9570153781345911, 1.956881046295166, 1.956747123173305, 1.956613268171038, 1.956479208809989, 1.9563470567975725, 1.9562153816223145, 1.95608309337071, 1.9559522356305803, 1.9558182443891252, 1.955686024257115, 1.9555541447230749, 1.955423014504569, 1.9552925654820033], "val_accuracy": [0.039000000804662704, 0.03933333232998848, 0.03933333232998848, 0.0403333343565464, 0.041333332657814026, 0.0416666679084301, 0.04266666620969772, 0.043666668236255646, 0.045666664838790894, 0.046666666865348816, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.04933333396911621, 0.05000000074505806, 0.05066666752099991, 0.05166666582226753, 0.05299999937415123, 0.05400000140070915, 0.05533333495259285, 0.05533333495259285, 0.056333333253860474, 0.057999998331069946, 0.05833333358168602, 0.058666665107011795, 0.05999999865889549, 0.061666667461395264, 0.061666667461395264, 0.06266666948795319, 0.06333333253860474, 0.06400000303983688, 0.06433333456516266, 0.06566666811704636, 0.06666667014360428, 0.06733333319425583, 0.06866666674613953, 0.06933332979679108, 0.0716666653752327, 0.07333333045244217, 0.07466666400432587, 0.07566666603088379, 0.07666666805744171, 0.07800000160932541, 0.0793333351612091, 0.0820000022649765, 0.0833333358168602, 0.08633333444595337, 0.08799999952316284, 0.08933333307504654, 0.09033333510160446, 0.09166666865348816, 0.09233333170413971, 0.09200000017881393, 0.09266666322946548, 0.09366666525602341, 0.0949999988079071, 0.09799999743700027, 0.09933333098888397, 0.10100000351667404, 0.10199999809265137, 0.10300000011920929, 0.10433333367109299, 0.10700000077486038, 0.10866666585206985, 0.11033333092927933, 0.11100000143051147, 0.11299999803304672, 0.11400000005960464, 0.11633333563804626, 0.11733333021402359, 0.11766666918992996, 0.11866666376590729, 0.12033333629369736, 0.12200000137090683, 0.12333333492279053, 0.12433333694934845, 0.12533333897590637, 0.1276666671037674, 0.1289999932050705, 0.13066667318344116, 0.1326666623353958, 0.13366666436195374, 0.1353333294391632, 0.1379999965429306, 0.13899999856948853, 0.13966666162014008, 0.14033333957195282, 0.1420000046491623, 0.14300000667572021, 0.1446666717529297, 0.14633333683013916, 0.1483333259820938, 0.1496666669845581, 0.15133333206176758, 0.15166667103767395, 0.1536666601896286, 0.156333327293396, 0.15700000524520874, 0.15733332931995392, 0.15966667234897614]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [1, 0, 0], [0, 1, 1], [7, 3], [0, 1], [], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [4, 3, 2, 2, 2, 2, 0, 2], [1, 1, 0, 0, 3, 0, 1, 0], [41, 60, 2, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 16, 8, 8, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(sigma), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha))), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [1, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0], [7, 3, 4], [4, 7], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [9, 2, 0, 2, 2, 2, 0], [3, 2, 2, 0, 3, 1, 1, 3, 0, 2, 2], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023360760267684, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 0], [1, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 2, 2, 2, 0, 8, 1, 9, 3, 5, 4], [1, 2, 0, 0, 3, 0, 1, 2], [41, 60, 2, 97]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 13, 8, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.square(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), alpha))))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [7], [2, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 0], [0, 0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 3, 0, 2, 2, 2, 0], [0, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 2, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3203509776284585, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09470347315073013, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.311964307512556, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 3, 2, 2, 1, 2, 2, 2, 3, 2, 0, 3], [46, 70, 60, 3, 57], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0], [7, 3], [2, 0], [], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 2, 0, 2, 2, 2, 4, 3], [1, 2, 0, 0, 3, 0, 3, 0], [41, 60, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 0], [43], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 3, 2, 2, 2, 2, 0, 2], [1, 1, 0, 0, 3, 0, 1, 0], [41, 60, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08294808864593506, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 1], [0, 0, 1, 1], [7, 3, 4], [4, 1], [], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [7, 1, 4, 4, 5], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0, 1, 1], [0, 1, 1], [7, 9, 2, 6, 8, 0], [2, 0], [83], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 3, 8, 2, 2, 2, 0, 2], [1, 1, 0, 0, 3, 0, 1, 0], [41, 60, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 15, 8, 7, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.negative(sigma), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [2.319223778516452, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3438376017979214, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [0, 1], [85], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [1, 1, 1], [7, 3], [4, 7], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 2, 0, 2, 2, 2, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3023360760267684, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [8], [2], [30], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0, 0, 0], [0, 1, 1], [7, 9, 2, 6, 8, 0], [4, 1], [], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 3, 0, 2, 2, 2, 0, 1, 1, 1, 6, 9, 6], [1, 2, 1, 0, 3, 0, 2, 3, 3, 0], [41, 60, 38, 29, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 23, 13, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.math.negative(beta), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.subtract(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), beta)), tf.math.divide_no_nan(sigma, sigma))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.449644009419216, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0305111613124609, 0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.8291469982692172, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3], [], [0], [1], [5, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [35], [1, 0, 0, 0, 0], [0, 0, 1, 1, 0], [7, 3, 4], [4, 1], [], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 4], [], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 0, 2, 2, 2, 0, 9], [2, 3, 0, 0, 3], [41, 60, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 13, 8, 5, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), sigma))", "other_info": {"loss": [2.3022150245120323, 2.3025827767464464, 2.30258370768424, 2.3025852870852987, 2.3025849051935925, 2.3025848235688455], "accuracy": [0.10038304328918457, 0.09906221181154251, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973642349243164, 1.973642213003976, 1.9736452783857072, 1.9736418724060059, 1.9736418724060059, 1.9736418724060059], "val_accuracy": [0.10166666656732559, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0], [7, 3, 4], [4, 0], [7], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [3, 6, 6, 2, 2, 2, 0], [0, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 5, 3, 2, 1, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023360760267684, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0, 0, 0], [0, 1, 1], [7, 3], [4, 1], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 3, 0, 2, 2, 2, 0], [1, 3, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [5, 6, 1, 9, 5, 2, 6, 6, 3, 9, 6, 1, 6, 8, 1, 6, 4, 9, 1, 5, 6, 0, 2, 9, 3, 2, 2, 5, 8, 5, 5, 6], [3, 2, 3, 2, 1, 2, 2, 3, 1, 0, 0, 2, 0, 0, 0, 1, 1], [10, 35, 14, 31, 73, 6, 46, 8, 92], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0], [7, 3], [4, 1], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 2, 0, 2, 2, 2, 0, 3], [1, 2, 0, 0, 3, 2, 0], [41, 60, 83]], "fitness": -0.03685714304447174, "mapping_values": [1, 48, 48, 32, 16, 9, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.math.pow(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))))), grad))), alpha)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))))), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3026457587410794, 2.3019889218853513, 2.302598019443593, 2.3015231574137514, 2.3024652312854026, 2.3021968715084764], "accuracy": [0.09417514503002167, 0.09338264167308807, 0.08809932321310043, 0.08942015469074249, 0.09192973375320435, 0.09668471664190292], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0], [7, 3, 2], [4, 1], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [3, 3, 0, 2, 2, 2, 0, 0, 4, 0, 5, 8, 4, 5, 9, 3], [1, 2, 0, 0, 3, 0, 0, 3], [41, 60, 68, 24, 53]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 4, 3, 1, 0, 24, 16, 8, 5], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.pow(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3026457587410794, 2.3019889218853513, 2.302598019443593, 2.3015231574137514, 2.3024652312854026, 2.3021968715084764], "accuracy": [0.09417514503002167, 0.09338264167308807, 0.08809932321310043, 0.08942015469074249, 0.09192973375320435, 0.09668471664190292], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]