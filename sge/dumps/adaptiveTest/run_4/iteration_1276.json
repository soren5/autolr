[{"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 2, 9, 5, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8345714211463928, "mapping_values": [1, 11, 11, 8, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9937670560734004, 1.0463980649676794, 0.7773966792945801, 0.6886183839700225, 0.6223854812270756, 0.5692675120842188, 0.5460003103247534, 0.5246935361380496, 0.49452603614766444, 0.46736255391257203, 0.4435285347217519, 0.42787231837737955, 0.41988956434631297, 0.4109980601518697, 0.3905098005930478, 0.37377050759502295, 0.35006387616192675, 0.34667480744154794, 0.3416494346998623, 0.3337171784111411, 0.32155559018791596, 0.3058496697538517, 0.2987483209504616, 0.2966433070976941, 0.2946794627994799, 0.27307254583009594, 0.2733650356747644, 0.2575814923227991, 0.25485569004448194, 0.249988829207033, 0.247206059822931, 0.23473082212582397, 0.2394100757535454, 0.22725797308481696, 0.22278443206972087, 0.21563039935771988, 0.21845160302484765, 0.20684699719694738, 0.2057635689400537], "accuracy": [0.3345661163330078, 0.6252806782722473, 0.7021529674530029, 0.7362303733825684, 0.7598732113838196, 0.7828556299209595, 0.7815347909927368, 0.8041210174560547, 0.8096684813499451, 0.8219521641731262, 0.8314621448516846, 0.8359529972076416, 0.8417646288871765, 0.8473120927810669, 0.8556333184242249, 0.8556333184242249, 0.8650112152099609, 0.8689737319946289, 0.8676528930664062, 0.8742570281028748, 0.8792761564254761, 0.8845595121383667, 0.8853520154953003, 0.8865407705307007, 0.8886540532112122, 0.896446943283081, 0.9009377956390381, 0.8997490406036377, 0.9019944667816162, 0.9013340473175049, 0.9071456789970398, 0.9050323367118835, 0.9059569239616394, 0.9133535623550415, 0.9148064851760864, 0.91559898853302, 0.9178444147109985, 0.9187690019607544, 0.9198256731033325], "val_loss": [0.9013487611498151, 0.5846466166632516, 0.539516806602478, 0.4714887653078352, 0.4421761546816145, 0.41851223366601126, 0.40999012334006174, 0.4045100637844631, 0.3648547870772226, 0.35783502885273527, 0.35164791345596313, 0.3318073919841221, 0.3365047744342259, 0.3248877099582127, 0.3178251641137259, 0.31013130290167673, 0.3219729151044573, 0.31544155733925955, 0.3024308511189052, 0.3033101899283273, 0.30643280914851595, 0.29264149495533537, 0.2928438016346523, 0.2984828863825117, 0.2921795759882246, 0.2899583067212786, 0.283402681350708, 0.2899732163974217, 0.28462058305740356, 0.2962512714522226, 0.28617373534611296, 0.2916267599378313, 0.28435816935130526, 0.289935188634055, 0.29090079239436556, 0.28949688162122456, 0.2871548022542681, 0.2987615636416844, 0.285904015813555], "val_accuracy": [0.6136666536331177, 0.7326666712760925, 0.7573333382606506, 0.7903333306312561, 0.7956666946411133, 0.8143333196640015, 0.8149999976158142, 0.8266666531562805, 0.8510000109672546, 0.8463333249092102, 0.8463333249092102, 0.8700000047683716, 0.8523333072662354, 0.8663333058357239, 0.871999979019165, 0.8706666827201843, 0.8690000176429749, 0.8733333349227905, 0.8759999871253967, 0.8686666488647461, 0.8756666779518127, 0.8830000162124634, 0.8843333125114441, 0.8796666860580444, 0.8786666393280029, 0.8859999775886536, 0.8853333592414856, 0.8790000081062317, 0.8853333592414856, 0.8823333382606506, 0.8896666765213013, 0.8886666893959045, 0.8893333077430725, 0.890999972820282, 0.8899999856948853, 0.8880000114440918, 0.8830000162124634, 0.8893333077430725, 0.890666663646698]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 8, 1, 6, 1, 8, 1, 4, 8, 5, 4, 0, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [77, 81, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8320000171661377, "mapping_values": [1, 24, 24, 15, 9, 5, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad))))))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.993761392978708, 1.0469058854799418, 0.7769873226717117, 0.6868575365630596, 0.6203028428760801, 0.5676073786085308, 0.5402301622891958, 0.5220660232533995, 0.49402262464317237, 0.4713466005389244, 0.44161936278986247, 0.43187876586365487, 0.4246723361853611, 0.4105898013416928, 0.3941450474512906, 0.376177288927438, 0.3557312614244477, 0.35349216319550736, 0.3454719684056602, 0.3330606904956942], "accuracy": [0.3346982002258301, 0.6255448460578918, 0.7005679607391357, 0.7371549606323242, 0.7604015469551086, 0.7803460359573364, 0.7873464822769165, 0.8039889335632324, 0.8087438941001892, 0.8173292875289917, 0.8315942287445068, 0.835160493850708, 0.8405758738517761, 0.847840428352356, 0.8553691506385803, 0.8565579056739807, 0.8659358024597168, 0.8663320541381836, 0.86553955078125, 0.8733324408531189], "val_loss": [0.9011475018092564, 0.5863496916634696, 0.536829011780875, 0.4709366389683315, 0.4407706601279123, 0.41689950227737427, 0.40701588562556673, 0.406313351222447, 0.36790865659713745, 0.3558212433542524, 0.3539812224251883, 0.3349571909223284, 0.3424633400780814, 0.3316318988800049, 0.31803048508507864, 0.3195909006255014, 0.31957389627184185, 0.3158539959362575, 0.30371120997837614, 0.31267281089510235], "val_accuracy": [0.6136666536331177, 0.7293333411216736, 0.7590000033378601, 0.7896666526794434, 0.7950000166893005, 0.8176666498184204, 0.8186666369438171, 0.8236666917800903, 0.843999981880188, 0.8493333458900452, 0.8483333587646484, 0.8616666793823242, 0.8526666760444641, 0.8619999885559082, 0.8759999871253967, 0.8686666488647461, 0.8683333396911621, 0.8730000257492065, 0.8673333525657654, 0.8693333268165588]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 6, 1, 3, 1, 8, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 1, 1, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [66, 81, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [33], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8320000171661377, "mapping_values": [1, 14, 14, 8, 6, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9937613705256045, 1.0468412993716651, 0.7770714607252626, 0.6857470772159633, 0.6189951980748527, 0.5663019376675907, 0.542520000414684, 0.5235383822508239, 0.49332696904422524, 0.4688694782426187, 0.44410568707575965, 0.42805568656397375, 0.4161924790744028, 0.40911526799107495, 0.3919101374189631, 0.3769512209264342, 0.3519690367783758, 0.3453991569902415, 0.3377091048211312, 0.32905751263240324, 0.3218094901582899, 0.3048104649175191, 0.29994792409025683, 0.30080358138677704, 0.29379047243004036, 0.276573843558262, 0.26991164187721495, 0.2594327560788715, 0.25387257903424615, 0.25434285971891957, 0.2475443051404894, 0.23244938273054183, 0.24026728008621956, 0.22551963983068943, 0.21793811015165745, 0.21383899906331585, 0.21740748948897226, 0.1991189004148018, 0.20217378978180675, 0.19746536340625012, 0.18787424510393821, 0.1896459709293476, 0.18595723838712308, 0.17235957340966787, 0.17980337240763344, 0.1702879372112755, 0.16083681220273616, 0.15906406219262867, 0.15118009698129586, 0.14830978407229667], "accuracy": [0.3346982002258301, 0.6254127621650696, 0.7024171352386475, 0.7367587089538574, 0.7598732113838196, 0.7821952104568481, 0.7865539789199829, 0.8021397590637207, 0.8113855719566345, 0.819970965385437, 0.8315942287445068, 0.8362171649932861, 0.8416325449943542, 0.8446704745292664, 0.8535200357437134, 0.8556333184242249, 0.8651432991027832, 0.8687095642089844, 0.8716153502464294, 0.8750495314598083, 0.876370370388031, 0.8868049383163452, 0.8833707571029663, 0.8824461698532104, 0.8898428082466125, 0.8960506916046143, 0.902390718460083, 0.9008057117462158, 0.9021265506744385, 0.9014661312103271, 0.9055606722831726, 0.9093911051750183, 0.9052965044975281, 0.9133535623550415, 0.9124290347099304, 0.9166556596755981, 0.9157310724258423, 0.9211464524269104, 0.920089840888977, 0.9247127175331116, 0.9277506470680237, 0.9248448014259338, 0.9289394021034241, 0.9332981109619141, 0.9262977242469788, 0.9350152015686035, 0.9383172392845154, 0.9388455748558044, 0.9429401755332947, 0.9432043433189392], "val_loss": [0.901111330304827, 0.5861688852310181, 0.536344051361084, 0.471124461718968, 0.4401113986968994, 0.4173089861869812, 0.40879933323178974, 0.4079201987811497, 0.3681884067399161, 0.3573536532265799, 0.35378451006753103, 0.3307452712740217, 0.3357596567698887, 0.3358373131070818, 0.31800038473946707, 0.3158157638141087, 0.31535652705601286, 0.31153026648930143, 0.3026851330484663, 0.3061833551951817, 0.30794700554439, 0.290286796433585, 0.2903775913374765, 0.30402642488479614, 0.30092672790799824, 0.29198193550109863, 0.28671607800892424, 0.2922593951225281, 0.28769969940185547, 0.29330543109348844, 0.29066277401787893, 0.2962551712989807, 0.281640214579446, 0.29009893962315153, 0.29832025936671663, 0.2833934852055141, 0.2865527272224426, 0.2978982755116054, 0.2907516360282898, 0.28782355785369873, 0.2943207962172372, 0.30643575532095774, 0.3006994979722159, 0.28974342346191406, 0.30358930996486116, 0.3029898575374058, 0.30171256405966623, 0.30259885106767925, 0.31075841188430786, 0.30546505962099346], "val_accuracy": [0.6136666536331177, 0.7293333411216736, 0.7609999775886536, 0.7913333177566528, 0.79666668176651, 0.8159999847412109, 0.8173333406448364, 0.8253333568572998, 0.8460000157356262, 0.8450000286102295, 0.8506666421890259, 0.8673333525657654, 0.8543333411216736, 0.8566666841506958, 0.8726666569709778, 0.875, 0.8703333139419556, 0.8756666779518127, 0.871666669845581, 0.8686666488647461, 0.8723333477973938, 0.8843333125114441, 0.8803333044052124, 0.8736666440963745, 0.8759999871253967, 0.878333330154419, 0.8846666812896729, 0.875333309173584, 0.8840000033378601, 0.8830000162124634, 0.8880000114440918, 0.8843333125114441, 0.8866666555404663, 0.887666642665863, 0.890666663646698, 0.890666663646698, 0.8849999904632568, 0.8856666684150696, 0.8933333158493042, 0.8926666378974915, 0.8946666717529297, 0.8889999985694885, 0.8923333287239075, 0.8939999938011169, 0.8966666460037231, 0.893666684627533, 0.8930000066757202, 0.8926666378974915, 0.8966666460037231, 0.893666684627533]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 5, 1, 8, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [66, 81, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8317142724990845, "mapping_values": [1, 11, 11, 6, 5, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), grad))), tf.math.add(alpha, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9937613615349157, 1.0468187451031954, 0.7769360666293289, 0.6871021882953299, 0.6201831010653595, 0.5683676962051976, 0.5413445177614854, 0.5241538389735864, 0.49600345824908243, 0.47008435383464653, 0.44577560392054016, 0.43091575570110285, 0.4202585898299401, 0.41086811372837323, 0.39596119302217564, 0.3787429400635685, 0.355596135210887, 0.3499638796828883, 0.34233847246697835, 0.33735228152071023, 0.3256493316877945, 0.312250759229684, 0.3005138279747387, 0.30101035464677545, 0.29729187671007057, 0.2760483497649671, 0.27286536961089286, 0.2593343684331947, 0.26013365074974465, 0.25677210172059406, 0.24846843243818303, 0.23620258864119162, 0.2391169132250742, 0.22093365840262522, 0.2179739913270773, 0.21163825057186172, 0.21625499649527144, 0.19609210777276417], "accuracy": [0.3346982002258301, 0.6255448460578918, 0.7010962963104248, 0.7360982894897461, 0.7604015469551086, 0.7802139520645142, 0.7858935594558716, 0.8025360107421875, 0.8064984679222107, 0.8219521641731262, 0.8317263126373291, 0.8370096683502197, 0.8378021121025085, 0.8474441766738892, 0.8529917001724243, 0.8564258217811584, 0.8654074668884277, 0.8663320541381836, 0.8673887252807617, 0.8737286925315857, 0.8766345381736755, 0.8849557638168335, 0.8848236799240112, 0.8835028409957886, 0.8881257176399231, 0.8957865834236145, 0.8986923694610596, 0.9035794734954834, 0.901862382888794, 0.9006736278533936, 0.9068815112113953, 0.9072777628898621, 0.9097873568534851, 0.9162594079971313, 0.9158631563186646, 0.9171839952468872, 0.9162594079971313, 0.9227314591407776], "val_loss": [0.9011135101318359, 0.5862729549407959, 0.5364798477717808, 0.47018413884299143, 0.4412952661514282, 0.4171183024133955, 0.40983738218035015, 0.4066921387399946, 0.36557393414633615, 0.35643664428165983, 0.35776575974055697, 0.3361619370324271, 0.33770095450537546, 0.33426337582724436, 0.32141716139657156, 0.3156038522720337, 0.3187833343233381, 0.3167904019355774, 0.3085304243224008, 0.30718289954321726, 0.30545999322618755, 0.29297683920179096, 0.2970905048506601, 0.30297464983803885, 0.30160235507147654, 0.28624727044786724, 0.2821394460541861, 0.28957841226032804, 0.286711539540972, 0.2950192519596645, 0.2856044684137617, 0.28423987116132465, 0.2800157921654837, 0.29460631949560984, 0.2927724037851606, 0.28963226079940796, 0.28747513464518953, 0.30033756153924124], "val_accuracy": [0.6136666536331177, 0.7289999723434448, 0.7590000033378601, 0.7906666398048401, 0.79666668176651, 0.8149999976158142, 0.812666654586792, 0.828000009059906, 0.8536666631698608, 0.8500000238418579, 0.8500000238418579, 0.8619999885559082, 0.8526666760444641, 0.8569999933242798, 0.8723333477973938, 0.8693333268165588, 0.8679999709129333, 0.8726666569709778, 0.8683333396911621, 0.8663333058357239, 0.8733333349227905, 0.8806666731834412, 0.8809999823570251, 0.8756666779518127, 0.8759999871253967, 0.8856666684150696, 0.8859999775886536, 0.8769999742507935, 0.8859999775886536, 0.8863333463668823, 0.890666663646698, 0.8893333077430725, 0.8949999809265137, 0.890333354473114, 0.8899999856948853, 0.8899999856948853, 0.8886666893959045, 0.8899999856948853]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 9, 5, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 1, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [68, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [98], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8265714049339294, "mapping_values": [1, 9, 9, 7, 2, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9937613457894015, 1.04681955240721, 0.7769269987718382, 0.6870895856485831, 0.6202624775572633, 0.5680413745838685, 0.5415553178974288, 0.5239843192070294, 0.4953824142226611, 0.4678879073424787, 0.44058138348202525, 0.4312141015741882, 0.42054726743757953, 0.40756472407897637, 0.3910098437934803, 0.37673679396476667, 0.34973339376086177, 0.3460565474267649, 0.3396499237726393, 0.32816913860537955, 0.320024952424311, 0.3052578964773155, 0.295172330804426, 0.2971417007035646, 0.30000743524604045, 0.275821281501315, 0.26749352152282063, 0.2571036940465876, 0.24883905415482382, 0.2487060139640888, 0.24297290592460646, 0.23055796024073794, 0.23930137850793912, 0.21725516278100382, 0.22219670561869634, 0.2142118430821777, 0.21258774929987584, 0.1936021918602403, 0.19748372551417384, 0.19078070647436882, 0.18417048640869013, 0.18361814857206293, 0.17896375773156464, 0.169365508854586, 0.16628694188884535, 0.16492858905015037, 0.1559584904710583, 0.15789150185376236, 0.15417163838264478, 0.14125756631634728], "accuracy": [0.3346982002258301, 0.6255448460578918, 0.7010962963104248, 0.7362303733825684, 0.7600052952766418, 0.7817989587783813, 0.7853652238845825, 0.8038568496704102, 0.8070268034934998, 0.8215559124946594, 0.8308017253875732, 0.8348963260650635, 0.8403117060661316, 0.8477083444595337, 0.8532558679580688, 0.858671247959137, 0.870030403137207, 0.8693699836730957, 0.871879518032074, 0.8772949576377869, 0.8812574148178101, 0.886672854423523, 0.8868049383163452, 0.8861445188522339, 0.8894465565681458, 0.8952582478523254, 0.902390718460083, 0.9031832218170166, 0.9054285883903503, 0.901862382888794, 0.908730685710907, 0.910711944103241, 0.9062210917472839, 0.9153348207473755, 0.9128252267837524, 0.9173160791397095, 0.9171839952468872, 0.9252410531044006, 0.921938955783844, 0.9266939759254456, 0.9268260598182678, 0.9289394021034241, 0.9310526847839355, 0.9338264465332031, 0.934751033782959, 0.9377889037132263, 0.939638078212738, 0.937656819820404, 0.941091001033783, 0.9483555555343628], "val_loss": [0.9011135441916329, 0.5862727165222168, 0.5364916835512433, 0.4701837641852243, 0.4406333310263498, 0.4172890782356262, 0.4106044854436602, 0.40659343344824656, 0.36350799458367483, 0.35588295119149344, 0.35321653740746634, 0.3315965873854501, 0.33529289279665264, 0.33313017232077463, 0.320843015398298, 0.3113671966961452, 0.3148390054702759, 0.3160417250224522, 0.3043512872287205, 0.30948800700051443, 0.3068307638168335, 0.28934506859098164, 0.29336631298065186, 0.30199189696993145, 0.30181884765625, 0.2859271935054234, 0.2815220696585519, 0.28502234390803743, 0.284427353313991, 0.2913049800055368, 0.2870386668613979, 0.2866483586175101, 0.2805926629475185, 0.2914866123880659, 0.28688885484422955, 0.28198966809681486, 0.28683327777045114, 0.28956031799316406, 0.2896167125020708, 0.29233120168958393, 0.2845671091760908, 0.30601429087775095, 0.2893752455711365, 0.2918939931052072, 0.2991236788885934, 0.3051981585366385, 0.3051384857722691, 0.3013022712298802, 0.2987705043384007, 0.3281427706990923], "val_accuracy": [0.6136666536331177, 0.7289999723434448, 0.7590000033378601, 0.7916666865348816, 0.7953333258628845, 0.8140000104904175, 0.8140000104904175, 0.8243333101272583, 0.8546666502952576, 0.846666693687439, 0.8529999852180481, 0.8700000047683716, 0.8569999933242798, 0.8616666793823242, 0.8723333477973938, 0.8733333349227905, 0.8726666569709778, 0.874666690826416, 0.875333309173584, 0.8669999837875366, 0.874666690826416, 0.8820000290870667, 0.8843333125114441, 0.878000020980835, 0.8713333606719971, 0.8880000114440918, 0.8836666941642761, 0.8803333044052124, 0.8883333206176758, 0.8836666941642761, 0.8883333206176758, 0.8836666941642761, 0.890999972820282, 0.8943333625793457, 0.8933333158493042, 0.8899999856948853, 0.8889999985694885, 0.8920000195503235, 0.8946666717529297, 0.8960000276565552, 0.8939999938011169, 0.8920000195503235, 0.8933333158493042, 0.893666684627533, 0.8966666460037231, 0.890666663646698, 0.8926666378974915, 0.8920000195503235, 0.8926666378974915, 0.8926666378974915]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 2, 9, 5, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 1, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [66, 81, 76, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.824571430683136, "mapping_values": [1, 8, 8, 5, 3, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9937670560734004, 1.0464036680483437, 0.7773930247213232, 0.6889172654976352, 0.6223577334817532, 0.5695420702875817, 0.5467204705299938, 0.5253921011341026, 0.49593127465849585, 0.472956720686954, 0.4463079351522919, 0.4333147283684324, 0.42423287942157273, 0.41133739792864477, 0.39005582491404595, 0.3742222022016712, 0.34821476358165043, 0.34819597977735994, 0.3416518790020273, 0.3292048176470812, 0.3216925041589912, 0.30618892739776765, 0.29662662122967914, 0.2992761494177774, 0.2930380108412845, 0.2767336903514643, 0.2706738496480947, 0.2593151348779671, 0.25844049625755094, 0.2519670228845707, 0.25653472765168145, 0.24309916903337767, 0.24435076835511021, 0.22646709780619995, 0.23119244671075762, 0.21813344133331666, 0.2227936535660365, 0.20587222360782084, 0.20991012805945145], "accuracy": [0.3345661163330078, 0.6252806782722473, 0.7024171352386475, 0.737022876739502, 0.7600052952766418, 0.7828556299209595, 0.7854973077774048, 0.802271842956543, 0.8075551390647888, 0.8177255392074585, 0.8301413059234619, 0.8329150676727295, 0.8404437899589539, 0.8466516733169556, 0.8558974862098694, 0.8577466607093811, 0.8704266548156738, 0.8684453964233398, 0.868049144744873, 0.8745211958885193, 0.8796724081039429, 0.8893144726753235, 0.8854840993881226, 0.8860124349594116, 0.8889182209968567, 0.8926165699958801, 0.8996169567108154, 0.8986923694610596, 0.8976356983184814, 0.9029190540313721, 0.9035794734954834, 0.9037115573883057, 0.9064852595329285, 0.9132214784622192, 0.9083344340324402, 0.9140139818191528, 0.9145423173904419, 0.9202219247817993, 0.9182406663894653], "val_loss": [0.9013488633292062, 0.5846456118992397, 0.5397330863135201, 0.47173893451690674, 0.44179272651672363, 0.41955240283693584, 0.4101164255823408, 0.40815286125455585, 0.36704698630741667, 0.36389239345278057, 0.35769196919032503, 0.33538014548165457, 0.3420149173055376, 0.332182024206434, 0.31916011231286184, 0.31494395221982685, 0.321423385824476, 0.3185123716081892, 0.3030329261507307, 0.3074841584478106, 0.3041386774608067, 0.2869742086955479, 0.2907095381191799, 0.30328716550554546, 0.3001969967569624, 0.2884843179157802, 0.278962825025831, 0.29137920481818064, 0.28382171051842825, 0.291210447038923, 0.28090812478746685, 0.28569712809153963, 0.2853925824165344, 0.2843907134873526, 0.28690584216799053, 0.2901772005217416, 0.2866050090108599, 0.2948186312402998, 0.2903772507395063], "val_accuracy": [0.6136666536331177, 0.7316666841506958, 0.7566666603088379, 0.7893333435058594, 0.7986666560173035, 0.8153333067893982, 0.8159999847412109, 0.8203333616256714, 0.8496666550636292, 0.8413333296775818, 0.8450000286102295, 0.862666666507721, 0.8523333072662354, 0.8600000143051147, 0.8700000047683716, 0.8709999918937683, 0.8690000176429749, 0.8723333477973938, 0.874666690826416, 0.871666669845581, 0.8756666779518127, 0.8840000033378601, 0.8823333382606506, 0.8786666393280029, 0.8759999871253967, 0.8806666731834412, 0.8916666507720947, 0.8763333559036255, 0.8856666684150696, 0.887333333492279, 0.8926666378974915, 0.8859999775886536, 0.8856666684150696, 0.8946666717529297, 0.890333354473114, 0.8886666893959045, 0.8870000243186951, 0.890666663646698, 0.8840000033378601]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 6, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 1, 0, 1, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 11, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [58], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8220000267028809, "mapping_values": [1, 13, 13, 7, 6, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.993761312109746, 1.046855555635953, 0.7775486266261882, 0.6864280826726437, 0.6202812765441661, 0.5675538576290103, 0.5437748572845595, 0.5253437540125239, 0.49486607141136385, 0.469306652587812, 0.4426023403745774, 0.43266145121136423, 0.4207759819026353, 0.40549747786186846, 0.38445862592360946, 0.37013530920934623, 0.3545111277005487, 0.3504521239073112, 0.3436671706191332, 0.33622669365112856, 0.32652220705858925, 0.3092419917887984, 0.30099824322071433, 0.2985124130605502, 0.28964652641456295, 0.2720217811212627, 0.27366716815708586, 0.2583186977205023, 0.25389902551908533, 0.25144272280595936, 0.24731308693788812, 0.23439494870468264, 0.24163165770785022, 0.2220627802269507, 0.2219139127258328, 0.2144353498305312, 0.22092406180091995, 0.20074340541483057, 0.2044794648263779, 0.19738996534527978, 0.19300663706814183, 0.19245871051648006, 0.18809472081911893, 0.17723072307528034, 0.18063390345511074, 0.1698049073048618, 0.1561388902955634, 0.16462056491715388], "accuracy": [0.3346982002258301, 0.6252806782722473, 0.7017567157745361, 0.7390040755271912, 0.759609043598175, 0.7802139520645142, 0.7848368883132935, 0.8009510040283203, 0.8072909712791443, 0.8201030492782593, 0.8321225643157959, 0.8348963260650635, 0.8385946154594421, 0.8492933511734009, 0.8568220734596252, 0.8569541573524475, 0.8665962219238281, 0.8688416481018066, 0.8667283058166504, 0.8720116019248962, 0.8759741187095642, 0.8838990926742554, 0.8836349248886108, 0.8857482671737671, 0.8944657444953918, 0.8985602855682373, 0.8972394466400146, 0.9026548862457275, 0.9045040011405945, 0.9014661312103271, 0.9083344340324402, 0.9062210917472839, 0.9056927561759949, 0.9149385690689087, 0.9125610589981079, 0.9142781496047974, 0.9171839952468872, 0.9179764986038208, 0.9194294214248657, 0.9227314591407776, 0.9249768853187561, 0.9236560463905334, 0.9237881302833557, 0.9321093559265137, 0.9277506470680237, 0.9358077049255371, 0.939638078212738, 0.9344868659973145], "val_loss": [0.9011099338531494, 0.5860758679253715, 0.5374347652707782, 0.4714928184236799, 0.44086744104112896, 0.41872755118778776, 0.4087080274309431, 0.407791725226811, 0.36638117688042776, 0.35799485445022583, 0.35474384682519094, 0.3330112269946507, 0.3412128686904907, 0.32543380771364483, 0.31787231138774324, 0.31402564900262014, 0.31661332505089895, 0.31646119696753366, 0.3120378170694624, 0.3037819947515215, 0.30782766001565115, 0.29700930629457745, 0.29632400614874704, 0.29923888615199495, 0.2898821660450527, 0.29594618933541433, 0.2854893548148019, 0.2871348772730146, 0.28188256706510273, 0.2895728860582624, 0.2841900076184954, 0.2891133853367397, 0.28363008158547537, 0.28985893726348877, 0.29078238351004465, 0.28704324790409635, 0.29260208777018953, 0.2970929741859436, 0.2879005329949515, 0.29473194054194857, 0.29138594014304026, 0.30973561320986065, 0.2931732790810721, 0.30231658049992155, 0.3020598292350769, 0.3104718582970755, 0.3029226064682007, 0.302385721887861], "val_accuracy": [0.6136666536331177, 0.7286666631698608, 0.7606666684150696, 0.7896666526794434, 0.793666660785675, 0.8133333325386047, 0.8136666417121887, 0.8253333568572998, 0.8523333072662354, 0.8486666679382324, 0.8479999899864197, 0.8666666746139526, 0.8529999852180481, 0.8633333444595337, 0.8709999918937683, 0.871666669845581, 0.8713333606719971, 0.8726666569709778, 0.8700000047683716, 0.8713333606719971, 0.8756666779518127, 0.8806666731834412, 0.8799999952316284, 0.8803333044052124, 0.8799999952316284, 0.8843333125114441, 0.8833333253860474, 0.8813333511352539, 0.8870000243186951, 0.8866666555404663, 0.8916666507720947, 0.8826666474342346, 0.8889999985694885, 0.8859999775886536, 0.8886666893959045, 0.8926666378974915, 0.8843333125114441, 0.8896666765213013, 0.8933333158493042, 0.8913333415985107, 0.8856666684150696, 0.8843333125114441, 0.8956666588783264, 0.8896666765213013, 0.893666684627533, 0.8883333206176758, 0.8949999809265137, 0.890666663646698]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 3, 6, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 36, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [18, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.734000027179718, "mapping_values": [1, 11, 11, 7, 4, 4, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.298670379666132, 2.27040651669324, 2.218285030960297, 2.1280581639065264, 1.94668490610197, 1.6685308938044694, 1.444594017487192, 1.3731178537005242, 1.345158812376518, 1.1629200734167586, 0.9701918240756154, 0.8994444127426707, 0.9123407928242329, 0.8846372602764074, 0.8288328743267526, 0.7970302304130709, 0.8106127030199797, 0.8024221458974815, 0.7958370282303278, 0.7536712015278194, 0.7233016581787898, 0.7226398622418092, 0.714742322001774, 0.7109010609669094, 0.6980208727299749, 0.6875184002396233, 0.6626695866723968, 0.6603111702028188, 0.6648199174461144, 0.6479631978617432, 0.6374629196190421, 0.6315681609526728, 0.6253815185455299, 0.6025879542746674, 0.5952336044831755, 0.5970562300063584, 0.5872611621855556, 0.5695111731480865, 0.5635549730203407, 0.5600715284066634, 0.557546572764914, 0.5456505885623024, 0.5387879227918011, 0.539648403281848, 0.5283485041192463, 0.5264091228670401, 0.5173413098732305, 0.5267606969436146, 0.5118302735811873, 0.5114893395084164, 0.504721319962014, 0.49353247140896495, 0.4887037346147669, 0.48503961164827564, 0.48007252507316217, 0.46995828383083216, 0.47267784813785313, 0.4711740227848421, 0.4656806518184101, 0.4520603035222491, 0.44820380806844184, 0.43595580537604806, 0.4385514348615446, 0.43604229963954727, 0.4360279098847885, 0.42562180194226806, 0.4231278930578281, 0.42165732352237, 0.41471431143468696, 0.4197827396714346, 0.4167613014135977, 0.40820402023877606, 0.40258550560469675, 0.40299062141731606, 0.3978570186663549, 0.3919612679932143, 0.3947695318371817, 0.3919682967436076, 0.3887537989468701, 0.3785087030719001, 0.37755339855546916], "accuracy": [0.1022322028875351, 0.1760665625333786, 0.29362040758132935, 0.3611147701740265, 0.41368380188941956, 0.46387532353401184, 0.5038964748382568, 0.5322942733764648, 0.5584467053413391, 0.6123365759849548, 0.6519614458084106, 0.6656980514526367, 0.6765288710594177, 0.6903975605964661, 0.6917183995246887, 0.700171709060669, 0.6959450244903564, 0.7086250185966492, 0.7128516435623169, 0.7235503792762756, 0.726192057132721, 0.7246070504188538, 0.7337207794189453, 0.7378153204917908, 0.7380794882774353, 0.7390040755271912, 0.750231146812439, 0.7475894689559937, 0.7504953145980835, 0.7539294958114624, 0.7593448758125305, 0.7607977986335754, 0.7617223858833313, 0.7733456492424011, 0.7763835787773132, 0.7744023203849792, 0.7778365015983582, 0.7876105904579163, 0.7898560166358948, 0.7864218950271606, 0.7890635132789612, 0.7967243194580078, 0.7994980812072754, 0.7984414100646973, 0.7993659973144531, 0.8033285140991211, 0.8016114234924316, 0.7991018295288086, 0.8042530417442322, 0.8039889335632324, 0.8113855719566345, 0.8100647330284119, 0.8133667707443237, 0.8190463781356812, 0.8181217908859253, 0.8241975903511047, 0.8170651197433472, 0.817989706993103, 0.8224804997444153, 0.8278959393501282, 0.8310658931732178, 0.8362171649932861, 0.8387266993522644, 0.8416325449943542, 0.8378021121025085, 0.8370096683502197, 0.8364813327789307, 0.8408400416374207, 0.8467837572097778, 0.8438779711723328, 0.8424250483512878, 0.8474441766738892, 0.8449346423149109, 0.846387505531311, 0.8512746095657349, 0.8508783578872681, 0.847840428352356, 0.8553691506385803, 0.8537842035293579, 0.8577466607093811, 0.8537842035293579], "val_loss": [1.9556258746555872, 1.9170333998543876, 1.8529011181422643, 1.7278620856148856, 1.4871138163975306, 1.1572514602116175, 0.9096141542707171, 0.782051648412432, 0.7069288832800729, 0.6705068009240287, 0.6403214420591082, 0.6670764684677124, 0.6675642047609601, 0.614779898098537, 0.574475748198373, 0.5587918417794364, 0.5582362413406372, 0.557295390537807, 0.5504450798034668, 0.5324110303606305, 0.5232882840292794, 0.5237646954400199, 0.523182885987418, 0.5168737002781459, 0.5044278076716832, 0.49077257088252474, 0.4839008365358625, 0.4794915233339582, 0.46978637150355745, 0.4600222110748291, 0.4513763359614781, 0.44200390577316284, 0.4350122468812125, 0.4320893543107169, 0.43099625621523174, 0.4277752297265189, 0.4214055963924953, 0.41644568954195293, 0.4130807604108538, 0.406859142439706, 0.3993193507194519, 0.39583001817975727, 0.3937431914465768, 0.3892554896218436, 0.38258178744997295, 0.37964712721960886, 0.3802615063531058, 0.3797972542898996, 0.37571001052856445, 0.3719237872532436, 0.3710043089730399, 0.3697679213115147, 0.36510367904390606, 0.35959908791950773, 0.3555740373475211, 0.3525320717266628, 0.34785653012139456, 0.3435900296483721, 0.3418129767690386, 0.341335620198931, 0.34103710310799734, 0.3406318851879665, 0.3389220152582441, 0.33466821908950806, 0.33062336274555754, 0.32816401549748014, 0.32591978141239714, 0.32426760877881733, 0.3250968200819833, 0.3257290210042681, 0.32369768619537354, 0.320753242288317, 0.31711637122290476, 0.3132030027253287, 0.31100789989743916, 0.3115724240030561, 0.31264846665518625, 0.3122268659727914, 0.31184619665145874, 0.313529976776668, 0.31504459040505545], "val_accuracy": [0.17499999701976776, 0.3713333308696747, 0.4180000126361847, 0.460999995470047, 0.5419999957084656, 0.6086666584014893, 0.6660000085830688, 0.6806666851043701, 0.7106666564941406, 0.7166666388511658, 0.7296666502952576, 0.731333315372467, 0.737333357334137, 0.734333336353302, 0.7426666617393494, 0.7516666650772095, 0.7553333044052124, 0.7606666684150696, 0.7576666474342346, 0.7570000290870667, 0.7643333077430725, 0.7693333625793457, 0.7683333158493042, 0.7710000276565552, 0.7770000100135803, 0.7833333611488342, 0.7846666574478149, 0.7876666784286499, 0.7846666574478149, 0.7900000214576721, 0.7940000295639038, 0.8053333163261414, 0.8096666932106018, 0.8130000233650208, 0.8140000104904175, 0.8146666884422302, 0.8146666884422302, 0.8199999928474426, 0.8223333358764648, 0.8296666741371155, 0.831333339214325, 0.8303333520889282, 0.8323333263397217, 0.8343333601951599, 0.8399999737739563, 0.8410000205039978, 0.8446666598320007, 0.8456666469573975, 0.8443333506584167, 0.847000002861023, 0.8463333249092102, 0.8420000076293945, 0.8443333506584167, 0.8506666421890259, 0.8526666760444641, 0.8526666760444641, 0.8529999852180481, 0.859333336353302, 0.8579999804496765, 0.859000027179718, 0.8579999804496765, 0.8603333234786987, 0.8633333444595337, 0.8679999709129333, 0.8646666407585144, 0.8669999837875366, 0.8656666874885559, 0.8676666617393494, 0.8693333268165588, 0.8683333396911621, 0.8703333139419556, 0.8706666827201843, 0.8713333606719971, 0.8723333477973938, 0.8713333606719971, 0.875, 0.875, 0.875, 0.8723333477973938, 0.8706666827201843, 0.8709999918937683]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 4, 1, 6, 9, 4, 8, 5, 4, 3, 4, 5, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 1, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 20, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [4, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [58], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.6954285502433777, "mapping_values": [1, 19, 19, 11, 8, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), tf.math.sqrt(alpha))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.pow(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026822854688125, 2.299382836134395, 2.296520735940063, 2.2930274672905657, 2.284499598972833, 2.2769157755502447, 2.2685423036214303, 2.2565621575186863, 2.244656340195093, 2.2297932554339974, 2.2140539811035707, 2.1967554832761316, 2.1740655260094877, 2.150498028176887, 2.1200313336026353, 2.0835527769405418, 2.0441730945432472, 1.9950087662653884, 1.9396521345404838, 1.875609727347327, 1.8056825797917773, 1.728474546558963, 1.6585409167010976, 1.5834270891433442, 1.529932871392028, 1.4823245882688811, 1.4361599558584757, 1.4049500243349822, 1.402406945802973, 1.3792822264157518, 1.3738762247658456, 1.3732352301807074, 1.3742601130978935, 1.3793829485032032, 1.3598363444852697, 1.3456854885752805, 1.2731197074955134, 1.235683052625796, 1.1809788635929326, 1.122928838404871, 1.0826090552850627, 1.0252333490399164, 0.9806836176904248, 0.945867429808099, 0.9316637619154848, 0.92259002709669, 0.915773598848002, 0.9210484031641473, 0.9159933152514962], "accuracy": [0.09496764093637466, 0.09206181764602661, 0.11121384054422379, 0.10962884873151779, 0.13551710546016693, 0.15255580842494965, 0.1838594675064087, 0.21595561504364014, 0.2405230551958084, 0.278959184885025, 0.28886541724205017, 0.3206973969936371, 0.33958524465560913, 0.3543785512447357, 0.3649451732635498, 0.3847576379776001, 0.39862632751464844, 0.4081363081932068, 0.422929584980011, 0.4220050275325775, 0.433760404586792, 0.4527803361415863, 0.4555540978908539, 0.462950736284256, 0.47404569387435913, 0.48646149039268494, 0.500990629196167, 0.5111610293388367, 0.5138026475906372, 0.5283318161964417, 0.5404834151268005, 0.5403513312339783, 0.5420684218406677, 0.547087550163269, 0.5609562993049622, 0.5661075115203857, 0.5823537111282349, 0.598599910736084, 0.6239598393440247, 0.6258090138435364, 0.6400739550590515, 0.6462818384170532, 0.6494518518447876, 0.6563201546669006, 0.6536785364151001, 0.6507726907730103, 0.6588297486305237, 0.6482630968093872, 0.6548672318458557], "val_loss": [1.9694886207580566, 1.966982092176165, 1.962928090776716, 1.957362379346575, 1.950366497039795, 1.941981315612793, 1.9323217528206962, 1.921386786869594, 1.909181867327009, 1.8954959596906389, 1.879932471684047, 1.8618942669459753, 1.840663024357387, 1.8153962407793318, 1.7852362905229842, 1.749265193939209, 1.7065320014953613, 1.6561552797045027, 1.5974251883370536, 1.5302177156720842, 1.4552497182573592, 1.3743909086499895, 1.2908167839050293, 1.2084460939679826, 1.131089176450457, 1.06142486844744, 1.0002044950212752, 0.946899584361485, 0.8998184204101562, 0.8577849694660732, 0.8222987481525966, 0.7982208217893328, 0.785587089402335, 0.7731927973883492, 0.7513333899634225, 0.725298353603908, 0.7107524360929217, 0.7086508444377354, 0.7074577467782157, 0.6977223328181675, 0.6790206432342529, 0.65819251537323, 0.6425413915089199, 0.6385688611439296, 0.6440411976405552, 0.6530961990356445, 0.6618503332138062, 0.6698241063526699, 0.6767615590776715], "val_accuracy": [0.04233333468437195, 0.06233333423733711, 0.09466666728258133, 0.1456666737794876, 0.2213333398103714, 0.2919999957084656, 0.335999995470047, 0.35733333230018616, 0.37299999594688416, 0.3883333206176758, 0.40433332324028015, 0.41499999165534973, 0.42399999499320984, 0.43299999833106995, 0.44466665387153625, 0.4546666741371155, 0.46933332085609436, 0.48266667127609253, 0.5006666779518127, 0.5260000228881836, 0.5443333387374878, 0.5616666674613953, 0.5816666483879089, 0.5986666679382324, 0.6153333187103271, 0.6343333125114441, 0.6510000228881836, 0.6623333096504211, 0.6666666865348816, 0.6736666560173035, 0.6743333339691162, 0.6773333549499512, 0.6796666383743286, 0.6773333549499512, 0.6940000057220459, 0.7043333053588867, 0.7086666822433472, 0.7096666693687439, 0.7073333263397217, 0.7106666564941406, 0.7153333425521851, 0.7200000286102295, 0.722000002861023, 0.7286666631698608, 0.7273333072662354, 0.7126666903495789, 0.703000009059906, 0.6980000138282776, 0.70333331823349]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 6, 4, 6, 1, 4, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 1, 1, 1, 2, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.33628571033477783, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.182502696983661, 2.389266169538839, 2.3023502269929286, 2.2371745273626367, 2.069372855251838, 2.3670389169179815], "accuracy": [0.21925769746303558, 0.1582353711128235, 0.10500594228506088, 0.17197199165821075, 0.2814687490463257, 0.09655263274908066], "val_loss": [1.6880172320774622, 1.974379539489746, 1.966160842350551, 1.4845786435263497, 2.2301435470581055, 1.9748052869524275], "val_accuracy": [0.3409999907016754, 0.10300000011920929, 0.14633333683013916, 0.3109999895095825, 0.09666666388511658, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 9, 5, 1, 5, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 2, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [70, 3, 2, 67, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.33314284682273865, "mapping_values": [1, 10, 10, 6, 4, 4, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.182264461619365, 2.432799231280205, 2.3042105629207623, 2.302715818785311, 2.302697445029643, 2.3002359678464686], "accuracy": [0.21912561357021332, 0.14542332291603088, 0.09074098616838455, 0.1022322028875351, 0.10117553919553757, 0.10962884873151779], "val_loss": [1.6759004592895508, 1.97504118510655, 1.97376435143607, 1.9734811782836914, 1.9730268205915178, 1.9499455179486955], "val_accuracy": [0.34333333373069763, 0.09666666388511658, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.2966666519641876]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 4, 1, 6, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 2, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 83, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10314285755157471, "mapping_values": [1, 13, 13, 7, 6, 3, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028063631139615, 2.3004332614722838, 2.299791085485454, 2.300037565295565, 2.2982328109076122, 2.2985815230361886, 2.2990240834376845, 2.299584342630044, 2.3000051409356455, 2.300652162856461, 2.3012389541853215], "accuracy": [0.09430722147226334, 0.09021265059709549, 0.10553427785634995, 0.09853387624025345, 0.1072513535618782, 0.11015717685222626, 0.11081759631633759, 0.10394927859306335, 0.09536388516426086, 0.09060890227556229, 0.08691058307886124], "val_loss": [1.9700209072657995, 1.9691991124834334, 1.9685104915073939, 1.9683267729622977, 1.9683988434927804, 1.9690516335623605, 1.970226219722203, 1.9710719244820731, 1.9717141560145788, 1.9723068646022253, 1.9726673534938268], "val_accuracy": [0.0430000014603138, 0.05533333495259285, 0.07666666805744171, 0.09966666996479034, 0.12166666984558105, 0.12833333015441895, 0.10999999940395355, 0.08966666460037231, 0.07433333247900009, 0.061000000685453415, 0.06300000101327896]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 6, 1, 8, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [66, 81, 14, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10314285755157471, "mapping_values": [1, 9, 9, 4, 5, 3, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028063316229326, 2.3004332614722838, 2.299791085485454, 2.300037565295565, 2.2982328918710473, 2.2985814915451597, 2.2990244028196987, 2.2995848329768536, 2.3000056897927865, 2.300652630750167, 2.301239669441059], "accuracy": [0.09430722147226334, 0.09021265059709549, 0.10553427785634995, 0.09853387624025345, 0.1072513535618782, 0.11015717685222626, 0.11081759631633759, 0.10394927859306335, 0.09536388516426086, 0.09047681838274002, 0.08691058307886124], "val_loss": [1.9700209072657995, 1.9691991806030273, 1.9685104915073939, 1.9683268410818917, 1.9683988434927804, 1.9690517016819544, 1.970226628439767, 1.9710725375584193, 1.9717144284929549, 1.9723073414393835, 1.9726683071681432], "val_accuracy": [0.0430000014603138, 0.05533333495259285, 0.07666666805744171, 0.09966666996479034, 0.12166666984558105, 0.12833333015441895, 0.10999999940395355, 0.08966666460037231, 0.07433333247900009, 0.061000000685453415, 0.06300000101327896]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 6, 2, 8, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11306300014257431, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 0, 5, 6, 1, 8, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [33], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026359064892974, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 3, 4, 2, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 0, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 16, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [46, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [93], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 1, 6, 1, 8, 1, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 2, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [70, 81, 96, 24, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [12], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 10, 7, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, alpha))), grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(sigma))), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 9, 3, 6, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 1, 1, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 21, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [33], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [6318.20210510279, 2.6719646962437538, 2.4602359142033903, 2.592664874351067, 2.641657485119214, 2.495993321708102], "accuracy": [0.09787346422672272, 0.09985470771789551, 0.10500594228506088, 0.0948355570435524, 0.09602430462837219, 0.09998679161071777], "val_loss": [2.323469843183245, 2.2804151943751743, 2.3211193765912737, 2.201061248779297, 2.3103675161089217, 2.324633462088449], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.10100000351667404, 0.09666666388511658, 0.10000000149011612, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 1, 2, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 0, 0, 0, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 17, 96, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [58], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 9, 0, 6, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 4, 3, 6, 1, 6, 9, 4, 8, 5, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 1, 1, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [23, 36, 1, 96, 94, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [33], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 14, 14, 8, 6, 3, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), alpha)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029390562007364, 2.301300736497721, 2.301810397762963, 2.303244951174102, 2.301489761272174, 2.302179276903843], "accuracy": [0.0948355570435524, 0.08770307898521423, 0.09945846349000931, 0.08387266844511032, 0.09430722147226334, 0.09008057415485382], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]