[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1396111251183347, 1.4526112935703979, 1.1080168029493926, 0.9744857617766708, 0.8434156701391903, 0.8117107323305308, 0.7851264260905121, 0.7616526917018721, 0.7192702049891616, 0.7143448769314068, 0.6961035597137, 0.65710582751734, 0.6920318966371004, 0.6420105442930254, 0.6467412231604909, 0.6398077643763167, 0.6411027547831643, 0.6030098545300946, 0.5963187486881971, 0.5963892674071363, 0.578138107723485, 0.5946429182651446, 0.5694972162217732, 0.5708999713933731, 0.5399538687726904, 0.5335018959232467, 0.5640584434091203, 0.5457693591188398], "accuracy": [0.2958658039569855, 0.49332982301712036, 0.6082419753074646, 0.6464139223098755, 0.6927750706672668, 0.6948884129524231, 0.7082287669181824, 0.717870831489563, 0.735041618347168, 0.733588695526123, 0.7396644949913025, 0.7486461400985718, 0.7421740889549255, 0.7606657147407532, 0.7589486241340637, 0.7611940503120422, 0.7581561207771301, 0.7750627398490906, 0.7771760821342468, 0.7741381525993347, 0.7835160493850708, 0.7721568942070007, 0.7901201844215393, 0.7824593782424927, 0.8005547523498535, 0.8009510040283203, 0.787082314491272, 0.7976489067077637], "val_loss": [1.3393688883100237, 0.810811059815543, 0.818649445261274, 0.6158733708517892, 0.5915523767471313, 0.5739092656544277, 0.5809158427374703, 0.5249434028353009, 0.5863431010927472, 0.5075746434075492, 0.4904983213969639, 0.48095365933009554, 0.4755100693021502, 0.47109685625348774, 0.47495029653821674, 0.4828065463474819, 0.4490697383880615, 0.47011574677058626, 0.43308993748256136, 0.438872013773237, 0.4484418290002005, 0.43477656160082134, 0.4213123321533203, 0.4333282027925764, 0.4119739277022226, 0.4414104223251343, 0.4066406062671116, 0.41283152784620014], "val_accuracy": [0.6010000109672546, 0.6866666674613953, 0.6243333220481873, 0.7383333444595337, 0.7269999980926514, 0.7260000109672546, 0.7456666827201843, 0.7793333530426025, 0.7163333296775818, 0.7749999761581421, 0.784333348274231, 0.7946666479110718, 0.7879999876022339, 0.7929999828338623, 0.7680000066757202, 0.781333327293396, 0.8019999861717224, 0.7749999761581421, 0.8086666464805603, 0.7960000038146973, 0.7870000004768372, 0.8143333196640015, 0.8226666450500488, 0.8036666512489319, 0.8183333277702332, 0.8026666641235352, 0.8209999799728394, 0.8083333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.7879999876022339, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1457175607174896, 1.4618383613418138, 1.1121227244313021, 0.9190766419701178, 0.8624973303338619, 0.8239125622387937, 0.7625817635811677, 0.734793709340333, 0.7030807541204308, 0.6821349016301558, 0.6843367741328693, 0.6589047033962179, 0.638565454571522, 0.6345033560289195, 0.6269815626980181, 0.6225012775819063, 0.6182687421910058, 0.5895797303953916], "accuracy": [0.2930920720100403, 0.5101043581962585, 0.5968828201293945, 0.6535464525222778, 0.6832650899887085, 0.6956809163093567, 0.7136441469192505, 0.7235503792762756, 0.7375511527061462, 0.7405890822410583, 0.7338528633117676, 0.7485140562057495, 0.7600052952766418, 0.7578919529914856, 0.7638356685638428, 0.759080708026886, 0.763967752456665, 0.7815347909927368], "val_loss": [1.3658229964120048, 0.8658858707972935, 0.724858283996582, 0.7035294771194458, 0.6134659903390067, 0.594434380531311, 0.5409524440765381, 0.513655458177839, 0.5151386090687343, 0.49536304814474924, 0.4778280087879726, 0.5072308778762817, 0.46753564902714323, 0.5030020305088588, 0.453549930027553, 0.49518888337271555, 0.4620503698076521, 0.4630833523614066], "val_accuracy": [0.6200000047683716, 0.6480000019073486, 0.6746666431427002, 0.6783333420753479, 0.7350000143051147, 0.7173333168029785, 0.7603333592414856, 0.778333306312561, 0.7699999809265137, 0.7799999713897705, 0.7916666865348816, 0.7696666717529297, 0.8016666769981384, 0.7670000195503235, 0.7990000247955322, 0.7666666507720947, 0.7996666431427002, 0.7950000166893005]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0, 8, 7, 4, 7, 3], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 0, 1, 0, 5, 0, 0, 3, 4, 8, 1, 9, 1, 0, 2, 2, 2, 0, 4, 8, 1, 3], [0, 2, 1, 2, 3, 0, 0, 2, 2, 0, 1, 0, 1, 0], [40, 63, 4, 45, 89, 83]], "fitness": -0.3557142913341522, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 11, 7, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(beta)))), alpha), tf.math.negative(beta))", "other_info": {"loss": [2.3046638361923666, 2.311280589865152, 2.3167216396760066, 2.324378875016442, 2.327229765853106, 2.332450999244959, 2.304707707131874, 2.260427555970512, 2.2103817420093343, 2.1672379095729757, 2.126986435800889, 2.1102709289964445, 2.078267554911829, 2.0468574414525946, 1.9936690749021144, 1.9275792782033645], "accuracy": [0.08651433140039444, 0.09589222073554993, 0.10315678268671036, 0.11279883980751038, 0.12191256135702133, 0.1356491893529892, 0.14040417969226837, 0.1686699241399765, 0.19561484456062317, 0.21661603450775146, 0.25544843077659607, 0.2775062620639801, 0.3051116168498993, 0.3230748772621155, 0.34381189942359924, 0.35001981258392334], "val_loss": [1.9712732860020228, 1.9681430544172014, 1.9633053370884486, 1.955493382045201, 1.9401188577924455, 1.9136032376970564, 1.8778467859540666, 1.8400507654462541, 1.8088739258902413, 1.787661143711635, 1.7729199954441615, 1.7571840286254883, 1.731572151184082, 1.687190226146153, 1.6168158394949776, 1.518263646534511], "val_accuracy": [0.03200000151991844, 0.09066666662693024, 0.1066666692495346, 0.12399999797344208, 0.16500000655651093, 0.18799999356269836, 0.218666672706604, 0.24199999868869781, 0.29766666889190674, 0.40066665410995483, 0.5170000195503235, 0.5093333125114441, 0.5070000290870667, 0.5086666941642761, 0.5076666474342346, 0.5043333172798157]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 2, 2, 0, 0, 2], [84, 63, 56, 45]], "fitness": -0.1834285706281662, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 12, 7, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.square(beta), tf.math.negative(beta)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.297744060504265, 2.28378070170743, 2.3383454287985863, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.1286487877368927, 0.13340377807617188, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9575113568987166, 1.9307404245649065, 32.894654410226, NaN, NaN, NaN, NaN], "val_accuracy": [0.11900000274181366, 0.19200000166893005, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 1], [96, 12, 93], [0, 1, 0, 1], [1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [62, 63, 56, 45]], "fitness": -0.10485713928937912, "mapping_values": [1, 11, 11, 7, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(alpha))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3023963255763227, 2.301199211058379, 2.3001631398037867, 2.300655763950078, 2.300711422611489, 2.3014884272177207, 2.3013275545097818, 2.301878978516117, 2.3019939738336475], "accuracy": [0.08875974267721176, 0.09615638852119446, 0.1014397069811821, 0.10170386731624603, 0.09932637959718704, 0.10196803510189056, 0.0944393053650856, 0.1022322028875351, 0.10421344637870789], "val_loss": [1.9699348040989466, 1.9699456351143974, 1.9704512187412806, 1.9712256704057967, 1.9719387463160925, 1.972437926701137, 1.9728443963187081, 1.973152024405343, 1.9733711651393346], "val_accuracy": [0.052666667848825455, 0.07433333247900009, 0.10266666859388351, 0.10433333367109299, 0.10266666859388351, 0.09966666996479034, 0.08933333307504654, 0.08833333104848862, 0.09566666930913925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [62], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [20, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [51216830690.22215, 7769251252305.422, 132479015296514.36, 932044965495998.0, 4080799987701368.0, 1.3418062821885848e+16], "accuracy": [0.09734513610601425, 0.09760929644107819, 0.0944393053650856, 0.09919429570436478, 0.09853387624025345, 0.09747721254825592], "val_loss": [422595601554.2857, 22781758837321.145, 244524308908324.56, 1333134648185417.2, 4994454106369463.0, 1.4726545823385892e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1, 0, 1, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.306575165984023, 2.333995699173959, 2.4262672364672397, 80383.69046922965, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07991018146276474, 0.048210274428129196, 0.01228371448814869, 0.05758816376328468, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.983708109174456, 2.0299309321812222, 2.2217090470450267, 6039611082314313.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.010333333164453506, 0.006000000052154064, 0.007000000216066837, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0, 8, 7, 4, 7, 3], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1], [0, 1, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [56, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8, 6, 4, 5, 0, 7, 4, 9, 0, 7, 6], [0, 2, 3, 2, 3, 0, 0, 1, 2, 0, 3, 0, 1, 0], [40, 63, 56, 45, 39, 48]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 23, 14, 9, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.math.divide_no_nan(sigma, tf.math.add(beta, tf.math.multiply(sigma, tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha))), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0], [0, 1, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1200634017586708, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [5, 2, 5, 6, 7, 0, 0, 0, 8, 7, 4, 7, 3, 9], [3, 1, 1, 0, 2, 0, 2], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8, 8, 3, 1, 4, 4, 0, 1, 2, 6, 2, 4, 1, 4, 3, 3, 5, 4, 3, 3, 3, 8, 0, 4, 6, 2, 3, 2, 6, 3, 6, 9, 8, 7, 3, 3, 1, 1, 6, 9, 5], [1, 2, 0, 2, 3, 0, 2, 2, 3, 2, 3, 2, 1, 2, 3, 2, 0, 0, 3, 3, 1, 2, 3, 1, 2, 3, 0, 3, 0, 1, 2, 3, 1, 1, 0], [40, 63, 56, 45, 55, 39, 84, 84, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 14, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 86, 51, 35, 9], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(alpha, alpha))))))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(tf.math.negative(tf.math.sqrt(beta)), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(beta, sigma)), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta), tf.math.pow(beta, tf.math.subtract(tf.math.pow(sigma, tf.math.multiply(beta, sigma)), beta))), tf.math.multiply(tf.math.square(alpha), tf.math.pow(beta, tf.math.multiply(sigma, beta))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(alpha, beta), sigma), alpha))), beta), sigma))), tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)))), tf.math.add(tf.math.multiply(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(beta, tf.math.subtract(sigma, alpha))), tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [0, 1, 3, 2, 3, 0, 0, 2, 2, 0, 3, 0, 1, 0], [40, 63, 4, 45, 89, 50]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 16, 9, 7, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.negative(tf.math.negative(beta)), sigma)), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [107456912.61939661, 16280864716.739136, 277557168133.6806, 1952642752844.1812, 8548898429109.51, 28108041792730.434], "accuracy": [0.09747721254825592, 0.09760929644107819, 0.09430722147226334, 0.09945846349000931, 0.09853387624025345, 0.09760929644107819], "val_loss": [886051474.2857143, 47734923264.0, 512295567360.0, 2792769154486.857, 10460876692333.715, 30855829988498.285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 5, 9, 0, 2, 3, 5], [1, 2, 3, 2, 0, 0, 2], [20, 49, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 23, 16, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.negative(sigma)))), tf.math.pow(tf.math.negative(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0, 0, 1, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [59], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13895125687122345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 5, 5, 6, 7, 0, 0, 0, 8, 7, 4, 7, 3], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 3, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 12, 6, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.add(beta, sigma), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(sigma)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1], [5, 2, 5, 6, 7, 0, 1, 0], [3, 1, 1, 0, 3], [96, 12, 93], [0], [0, 0, 1, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [25], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [2, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [531.9464850069871, 8902.33159578903, 40031.65550754937, 109355.46718151499, 231903.3989565447, 425645.88570697396], "accuracy": [0.09721305221319199, 0.09747721254825592, 0.09430722147226334, 0.09945846349000931, 0.09853387624025345, 0.09774138033390045], "val_loss": [1820.2184012276787, 13598.33286830357, 45050.40959821428, 105871.83928571429, 205759.0267857143, 354409.5535714286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 4, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 2, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(sigma, alpha), tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.negative(beta)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [25], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.08142857253551483, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3016213732719297, 2.299010023606562, 2.299095472844207, 2.3004280840637286, 2.3013880549483625, 2.3019013463104594, 2.3017340609898516], "accuracy": [0.09074098616838455, 0.10632677376270294, 0.09919429570436478, 0.09509972482919693, 0.08572183549404144, 0.08492933213710785, 0.08836349099874496], "val_loss": [1.9680891718183244, 1.9683079719543457, 1.9708145005362374, 1.9719298226492745, 1.9725192614964075, 1.9723869051252092, 1.9723824092320033], "val_accuracy": [0.06700000166893005, 0.09700000286102295, 0.07666666805744171, 0.06666667014360428, 0.08399999886751175, 0.09099999815225601, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 1], [96, 12, 93], [1, 1, 1, 1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 3, 2, 3, 0, 2], [62, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(sigma)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3028744335235025, 2.3030743409361993, 2.3020130722608707, 2.3027545738497337, 2.302101866444104, 2.303347520604031], "accuracy": [0.08875974267721176, 0.09457138925790787, 0.09232597798109055, 0.09179764986038208, 0.08942015469074249, 0.08717474341392517], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [3, 1, 0, 2, 0, 0, 2], [20, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.3028744335235025, 2.3030743409361993, 2.3020130722608707, 2.3027545738497337, 2.302101866444104, 2.303347520604031], "accuracy": [0.08875974267721176, 0.09457138925790787, 0.09232597798109055, 0.09179764986038208, 0.08942015469074249, 0.08717474341392517], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]