[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.093563299279219, 1.424002983110015, 1.1528915847690901, 0.9281233623200688, 0.8441374327811771, 0.8086039462991441, 0.7487329225167937, 0.7370917420770828, 0.7265284282656362, 0.7102894006687431, 0.6660083439671022, 0.6621483829452566, 0.6739318055200255, 0.6350092693421315, 0.6134339285296787, 0.632602149878731, 0.6037002714113899], "accuracy": [0.313300758600235, 0.5025756359100342, 0.5844670534133911, 0.6563201546669006, 0.6910579800605774, 0.7054550051689148, 0.7224937081336975, 0.7263241410255432, 0.7353057861328125, 0.7285695672035217, 0.7466648817062378, 0.7512878179550171, 0.7412495017051697, 0.7621186375617981, 0.7733456492424011, 0.7563069462776184, 0.7779685854911804], "val_loss": [1.196831396647862, 0.8900209154401507, 0.6897366046905518, 0.6441409417561123, 0.6506839139120919, 0.560782824243818, 0.5259463957377842, 0.5625896453857422, 0.5653125558580671, 0.4886205196380615, 0.4857417515345982, 0.470048189163208, 0.4751765387398856, 0.46248955386025564, 0.4653023140771048, 0.4536966255732945, 0.44563056741442], "val_accuracy": [0.593999981880188, 0.6579999923706055, 0.6856666803359985, 0.7206666469573975, 0.7093333601951599, 0.7526666522026062, 0.7676666378974915, 0.7263333201408386, 0.7450000047683716, 0.7839999794960022, 0.7883333563804626, 0.8033333420753479, 0.7953333258628845, 0.7796666622161865, 0.7823333144187927, 0.7996666431427002, 0.8026666641235352]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 0], [0, 0, 0, 0, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [2, 1, 0, 2, 2, 2, 0, 8, 6, 4, 5], [0, 3, 2, 0, 3, 2, 2, 3, 0, 0, 3], [41, 62, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), beta), tf.math.sqrt(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(sigma, beta)), beta)", "other_info": {"loss": [1743772991.234936, 32274465306.84771, 152447011483.879, 425657785899.4838, 907681722759.1515, 1661618060892.1748], "accuracy": [0.09972262382507324, 0.10117553919553757, 0.09972262382507324, 0.09760929644107819, 0.09655263274908066, 0.1022322028875351], "val_loss": [6423576576.0, 51374827812.57143, 173374238134.85715, 410945323008.0, 802603195245.7142, 1386882643675.4285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 1, 6, 6, 2, 5, 0, 4, 3, 7, 9, 6, 8, 1, 8, 7, 0, 1], [1, 2, 0, 0, 1, 2, 1, 2, 1, 2], [41, 60, 86, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 25, 15, 10, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(alpha, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.negative(alpha))), tf.math.pow(beta, tf.math.multiply(tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(alpha), beta)), alpha)), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 8], [0, 0, 1, 2, 3, 0], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 8, 6, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(beta))), sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1, 0, 0, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0], [0, 0, 1, 2, 3, 0], [43, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027325839477366, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 1, 4, 5, 7, 6, 3, 3, 9], [1, 2, 0, 0, 3, 1, 1, 1, 2, 3, 0], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 26, 15, 11, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.square(tf.math.add(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), alpha)), beta))))), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [73], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 6], [1, 2, 0, 0, 3, 1, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma))), alpha), sigma))", "other_info": {"loss": [2.3027953152422893, 2.3026512969423516, 2.302648409340974, 2.302647459729, 2.3026225863824417, 2.302640004322403, 2.3026378261509226, 2.3026438767427244], "accuracy": [0.09496764093637466, 0.09602430462837219, 0.09166556596755981, 0.0952318087220192, 0.09708096832036972, 0.09734513610601425, 0.09470347315073013, 0.09549596905708313], "val_loss": [1.9736482756478446, 1.9736377852303642, 1.973642213003976, 1.973640033176967, 1.9736334936959403, 1.973646777016776, 1.9736388070242745, 1.9736345154898507], "val_accuracy": [0.0963333323597908, 0.10100000351667404, 0.10300000011920929, 0.10100000351667404, 0.10100000351667404, 0.0963333323597908, 0.0963333323597908, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [85], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 1, 0, 2, 2, 2, 0, 5], [3, 2, 0, 0, 3, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 14, 8, 6, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.subtract(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [85], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1, 0, 0, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [0, 7], [59], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 8, 2, 2, 2, 0, 0], [0, 0, 3, 2, 3, 0], [67, 38, 68, 45, 76, 87, 53, 16, 0, 36, 0, 7, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [16804212903.093096, 2.0520912206741014e+17, 7.696292640379499e+24, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09853387624025345, 0.1010434553027153, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.9736402375357491, 1.987961973462786, 12.607522964477539, 2773.0191824776784, 709438.25], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [73], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 1, 6, 6, 2, 5, 0, 4, 8, 7, 9, 6, 8, 1, 9, 7, 0, 1], [0, 3, 0, 0, 3, 2, 2, 2, 2, 2], [41, 60, 56, 45, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 23, 15, 8, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.divide_no_nan(beta, beta)), tf.math.sqrt(tf.math.subtract(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [1365864680.8209882, 27588585151.450535, 142930787114.1651, 435815542296.5484, 1011027099528.9774, 2003046700097.0566], "accuracy": [0.09972262382507324, 0.10117553919553757, 0.09972262382507324, 0.09760929644107819, 0.09655263274908066, 0.1022322028875351], "val_loss": [5185920000.0, 45889609728.0, 170118690523.42856, 440222547968.0, 933663941778.2858, 1743726088777.1428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [64], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0], [1, 0, 0, 0, 3], [45, 60, 56, 45, 76, 87, 53, 16, 0, 36, 0, 7, 59]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6.172187206594305, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17474573850631714, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5721.35546875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1], [5, 2, 5, 4, 2, 3, 2, 6, 9], [0, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [61], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0, 2, 2, 7, 3, 2, 7, 9], [0, 0, 1, 0, 3, 3, 2, 3, 0, 0, 3], [41, 60, 56, 10, 56, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 17, 9, 8, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), sigma)), sigma)), beta), sigma)", "other_info": {"loss": [560518579127.5712, 74.37557284751068, 199.40405304475058, 381.7210603108606, 622.050342814262, 920.1328584678326], "accuracy": [0.08215559273958206, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [32.21209825788225, 119.32554408482143, 255.70323835100447, 442.0103062220982, 678.0195661272321, 963.4873046875], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1], [5, 2, 5, 2, 2, 3, 2, 3, 8], [0, 1, 1, 0, 3, 2], [96, 40, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [61], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3, 2, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [93], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [11467.336045789838, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.046625278890132904, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1930384325476352.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028037459890305, 2.3026614225992454, 2.302655596821898, 2.302658610891247, 2.3026274850953916, 2.3026445976353562, 2.3026448092550695, 2.302649528563629], "accuracy": [0.0952318087220192, 0.09602430462837219, 0.09166556596755981, 0.09694888442754745, 0.09681680053472519, 0.09126931428909302, 0.09470347315073013, 0.0948355570435524], "val_loss": [1.9736485481262207, 1.9736353329249792, 1.973635537283761, 1.9736339024135046, 1.9736274310520716, 1.9736386026654924, 1.9736312457493372, 1.9736246381487166], "val_accuracy": [0.0963333323597908, 0.10100000351667404, 0.10300000011920929, 0.10100000351667404, 0.10100000351667404, 0.0963333323597908, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [3, 2, 2, 0, 3], [41, 60, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), beta), beta)", "other_info": {"loss": [2.3027587113615353, 2.302668765960762, 2.3023445930274375, 2.3031101869223627, 2.302899365789776, 2.301910622528342], "accuracy": [0.09325055778026581, 0.08453308790922165, 0.09021265059709549, 0.09192973375320435, 0.08757099509239197, 0.09760929644107819], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [65], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [2, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.3027587113615353, 2.302668765960762, 2.3023445930274375, 2.3031101869223627, 2.302899365789776, 2.301910622528342], "accuracy": [0.09325055778026581, 0.08453308790922165, 0.09021265059709549, 0.09192973375320435, 0.08757099509239197, 0.09760929644107819], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [0, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 3, 0, 2, 2, 2, 0, 6, 7, 7, 8, 1, 7, 5, 5, 5, 7, 0, 3, 0, 6, 0, 0, 0], [3, 2, 2, 0, 3], [41, 60, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3027587113615353, 2.302668765960762, 2.3023445930274375, 2.3031101869223627, 2.302899365789776, 2.301910622528342], "accuracy": [0.09325055778026581, 0.08453308790922165, 0.09021265059709549, 0.09192973375320435, 0.08757099509239197, 0.09760929644107819], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027587113615353, 2.302668765960762, 2.3023445930274375, 2.3031101869223627, 2.302899365789776, 2.301910622528342], "accuracy": [0.09325055778026581, 0.08453308790922165, 0.09021265059709549, 0.09192973375320435, 0.08757099509239197, 0.09760929644107819], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]