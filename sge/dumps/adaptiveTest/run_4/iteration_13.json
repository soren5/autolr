[{"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.083272361201129, 1.366816125856399, 1.0955596138473358, 0.8896876995070042, 0.8079072699932894, 0.7715395451174625, 0.7469038925528636, 0.737181514733818, 0.6798138318359733, 0.6628830887071209, 0.6653172931162877, 0.6635798140051437, 0.6138230453251123, 0.6310415676461707, 0.5982204532547712, 0.593746880703378, 0.6026266639605175, 0.5730595605767965, 0.5564580149323697, 0.5608030557002626, 0.569246205923312, 0.5434474896808358, 0.5485532198993364, 0.5404204519638028, 0.5174658369622793, 0.5184612960359439, 0.5043669640230638, 0.5011653514145199, 0.48501619926107997, 0.4957899677833751, 0.48506344325585593, 0.49071421910270707, 0.4755925008011784], "accuracy": [0.3090741038322449, 0.5390304923057556, 0.601109504699707, 0.6767930388450623, 0.700700044631958, 0.7182670831680298, 0.7206445932388306, 0.7281733155250549, 0.7503632307052612, 0.7530049085617065, 0.7478536367416382, 0.752740740776062, 0.774270236492157, 0.7611940503120422, 0.7737419009208679, 0.7824593782424927, 0.7769119143486023, 0.7877426743507385, 0.7924976944923401, 0.7873464822769165, 0.7897239327430725, 0.805177628993988, 0.7886672616004944, 0.7972526550292969, 0.8068947196006775, 0.8072909712791443, 0.8145555257797241, 0.8109893202781677, 0.8207634687423706, 0.8100647330284119, 0.8177255392074585, 0.8158763647079468, 0.8232730031013489], "val_loss": [1.1581802368164062, 1.022545576095581, 0.7117118154253278, 0.6148699522018433, 0.5925963265555245, 0.5504691771098545, 0.6689888409205845, 0.5417700495038714, 0.5252228123801095, 0.4955259731837681, 0.503588114465986, 0.4986024924686977, 0.5031203372137887, 0.4759585346494402, 0.4604496274675642, 0.4783374241420201, 0.46333774498530794, 0.46739377294267925, 0.430328301021031, 0.46812895366123747, 0.4287534100668771, 0.4504322409629822, 0.4593438506126404, 0.42911748375211445, 0.42194314513887676, 0.4190039464405605, 0.4019221408026559, 0.401591283934457, 0.42343047686985563, 0.3909023233822414, 0.4089414732796805, 0.40107292788369314, 0.4006771445274353], "val_accuracy": [0.581333339214325, 0.5546666383743286, 0.7053333520889282, 0.7350000143051147, 0.7250000238418579, 0.7570000290870667, 0.6850000023841858, 0.7613333463668823, 0.7563333511352539, 0.7839999794960022, 0.7543333172798157, 0.7823333144187927, 0.7586666941642761, 0.8023333549499512, 0.7889999747276306, 0.8046666383743286, 0.7953333258628845, 0.7863333225250244, 0.8153333067893982, 0.800000011920929, 0.8096666932106018, 0.8083333373069763, 0.7910000085830688, 0.824999988079071, 0.815666675567627, 0.8103333115577698, 0.8306666612625122, 0.8346666693687439, 0.8163333535194397, 0.8336666822433472, 0.8226666450500488, 0.8299999833106995, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 3, 0, 3, 7, 5, 0], [1, 5, 1, 2, 0, 1, 5], [66, 45], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [3, 2, 0], [41]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.083272361201129, 1.366816125856399, 1.0955596138473358, 0.8896876995070042, 0.8079072699932894, 0.7715395451174625, 0.7469038925528636, 0.737181514733818, 0.6798138318359733, 0.6628830887071209, 0.6653172931162877, 0.6635798140051437, 0.6138230453251123, 0.6310415676461707, 0.5982204532547712, 0.593746880703378, 0.6026266639605175, 0.5730595605767965, 0.5564580149323697, 0.5608030557002626, 0.569246205923312, 0.5434474896808358, 0.5485532198993364, 0.5404204519638028, 0.5174658369622793, 0.5184612960359439, 0.5043669640230638, 0.5011653514145199, 0.48501619926107997, 0.4957899677833751, 0.48506344325585593, 0.49071421910270707, 0.4755925008011784], "accuracy": [0.3090741038322449, 0.5390304923057556, 0.601109504699707, 0.6767930388450623, 0.700700044631958, 0.7182670831680298, 0.7206445932388306, 0.7281733155250549, 0.7503632307052612, 0.7530049085617065, 0.7478536367416382, 0.752740740776062, 0.774270236492157, 0.7611940503120422, 0.7737419009208679, 0.7824593782424927, 0.7769119143486023, 0.7877426743507385, 0.7924976944923401, 0.7873464822769165, 0.7897239327430725, 0.805177628993988, 0.7886672616004944, 0.7972526550292969, 0.8068947196006775, 0.8072909712791443, 0.8145555257797241, 0.8109893202781677, 0.8207634687423706, 0.8100647330284119, 0.8177255392074585, 0.8158763647079468, 0.8232730031013489], "val_loss": [1.1581802368164062, 1.022545576095581, 0.7117118154253278, 0.6148699522018433, 0.5925963265555245, 0.5504691771098545, 0.6689888409205845, 0.5417700495038714, 0.5252228123801095, 0.4955259731837681, 0.503588114465986, 0.4986024924686977, 0.5031203372137887, 0.4759585346494402, 0.4604496274675642, 0.4783374241420201, 0.46333774498530794, 0.46739377294267925, 0.430328301021031, 0.46812895366123747, 0.4287534100668771, 0.4504322409629822, 0.4593438506126404, 0.42911748375211445, 0.42194314513887676, 0.4190039464405605, 0.4019221408026559, 0.401591283934457, 0.42343047686985563, 0.3909023233822414, 0.4089414732796805, 0.40107292788369314, 0.4006771445274353], "val_accuracy": [0.581333339214325, 0.5546666383743286, 0.7053333520889282, 0.7350000143051147, 0.7250000238418579, 0.7570000290870667, 0.6850000023841858, 0.7613333463668823, 0.7563333511352539, 0.7839999794960022, 0.7543333172798157, 0.7823333144187927, 0.7586666941642761, 0.8023333549499512, 0.7889999747276306, 0.8046666383743286, 0.7953333258628845, 0.7863333225250244, 0.8153333067893982, 0.800000011920929, 0.8096666932106018, 0.8083333373069763, 0.7910000085830688, 0.824999988079071, 0.815666675567627, 0.8103333115577698, 0.8306666612625122, 0.8346666693687439, 0.8163333535194397, 0.8336666822433472, 0.8226666450500488, 0.8299999833106995, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 1, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3], [17], [0, 1, 1], [0, 0, 0, 0, 0, 1], [7, 2, 2, 7, 0], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.083272361201129, 1.366816125856399, 1.0955596138473358, 0.8896876995070042, 0.8079072699932894, 0.7715395451174625, 0.7469038925528636, 0.737181514733818, 0.6798138318359733, 0.6628830887071209, 0.6653172931162877, 0.6635798140051437, 0.6138230453251123, 0.6310415676461707, 0.5982204532547712, 0.593746880703378, 0.6026266639605175, 0.5730595605767965, 0.5564580149323697, 0.5608030557002626, 0.569246205923312, 0.5434474896808358, 0.5485532198993364, 0.5404204519638028, 0.5174658369622793, 0.5184612960359439, 0.5043669640230638, 0.5011653514145199, 0.48501619926107997, 0.4957899677833751, 0.48506344325585593, 0.49071421910270707, 0.4755925008011784], "accuracy": [0.3090741038322449, 0.5390304923057556, 0.601109504699707, 0.6767930388450623, 0.700700044631958, 0.7182670831680298, 0.7206445932388306, 0.7281733155250549, 0.7503632307052612, 0.7530049085617065, 0.7478536367416382, 0.752740740776062, 0.774270236492157, 0.7611940503120422, 0.7737419009208679, 0.7824593782424927, 0.7769119143486023, 0.7877426743507385, 0.7924976944923401, 0.7873464822769165, 0.7897239327430725, 0.805177628993988, 0.7886672616004944, 0.7972526550292969, 0.8068947196006775, 0.8072909712791443, 0.8145555257797241, 0.8109893202781677, 0.8207634687423706, 0.8100647330284119, 0.8177255392074585, 0.8158763647079468, 0.8232730031013489], "val_loss": [1.1581802368164062, 1.022545576095581, 0.7117118154253278, 0.6148699522018433, 0.5925963265555245, 0.5504691771098545, 0.6689888409205845, 0.5417700495038714, 0.5252228123801095, 0.4955259731837681, 0.503588114465986, 0.4986024924686977, 0.5031203372137887, 0.4759585346494402, 0.4604496274675642, 0.4783374241420201, 0.46333774498530794, 0.46739377294267925, 0.430328301021031, 0.46812895366123747, 0.4287534100668771, 0.4504322409629822, 0.4593438506126404, 0.42911748375211445, 0.42194314513887676, 0.4190039464405605, 0.4019221408026559, 0.401591283934457, 0.42343047686985563, 0.3909023233822414, 0.4089414732796805, 0.40107292788369314, 0.4006771445274353], "val_accuracy": [0.581333339214325, 0.5546666383743286, 0.7053333520889282, 0.7350000143051147, 0.7250000238418579, 0.7570000290870667, 0.6850000023841858, 0.7613333463668823, 0.7563333511352539, 0.7839999794960022, 0.7543333172798157, 0.7823333144187927, 0.7586666941642761, 0.8023333549499512, 0.7889999747276306, 0.8046666383743286, 0.7953333258628845, 0.7863333225250244, 0.8153333067893982, 0.800000011920929, 0.8096666932106018, 0.8083333373069763, 0.7910000085830688, 0.824999988079071, 0.815666675567627, 0.8103333115577698, 0.8306666612625122, 0.8346666693687439, 0.8163333535194397, 0.8336666822433472, 0.8226666450500488, 0.8299999833106995, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [1], [67], [0, 0, 1, 1, 1], [0, 0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [84]], "fitness": -0.21400000154972076, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 5, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [3.453861906953287, 2.545137729595649, 2.3068526072698012, 2.303768692141306, 2.303222369996548, 2.3029928788721854], "accuracy": [0.17870822548866272, 0.1266675442457199, 0.09919429570436478, 0.09655263274908066, 0.09734513610601425, 0.0936468094587326], "val_loss": [1.8926548957824707, 1.9790688923427038, 1.9749337605067663, 1.9738521575927734, 1.9737655775887626, 1.9736747741699219], "val_accuracy": [0.16066665947437286, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 1], [1], [], [0], [87], [0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 7, 7, 2, 9, 9, 5], [1, 5, 5, 2, 2, 1, 5], [], [0, 1, 1], [0], [8, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [4, 9, 0], [1, 2, 0], [28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302196885679439, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [7, 3], [4], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [83]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [6, 6, 6, 7, 0, 3, 7, 5, 0], [0, 5, 1, 2, 0, 1, 5], [66, 45], [0, 1, 1], [1], [7, 3], [0], [28], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.negative(alpha))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302528064894308, 2.3029521362514798, 2.302960801165511, 2.3029665191175757, 2.303059612235625, 2.3029337440735596, 2.3031076364324488, 2.3028909063232166, 2.302921292174368], "accuracy": [0.09668471664190292, 0.0948355570435524, 0.09853387624025345, 0.09721305221319199, 0.09985470771789551, 0.09351472556591034, 0.09140139818191528, 0.09391097724437714, 0.10011887550354004], "val_loss": [1.9736877850123815, 1.9736753872462682, 1.9736659186226981, 1.973658221108573, 1.9737142154148646, 1.9736524309430803, 1.9737418038504464, 1.9736909866333008, 1.9736064502171107], "val_accuracy": [0.10133333504199982, 0.0989999994635582, 0.09799999743700027, 0.10433333367109299, 0.10133333504199982, 0.1003333330154419, 0.09700000286102295, 0.0989999994635582, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [3, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 0, 8], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 6, 4, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(alpha)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4, 2], [1, 5, 3, 0, 2, 1], [96, 59], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [7, 3, 6, 5], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 8, 4, 4, 0, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.square(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [14636.333435780873, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.046229030936956406, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3965820943354148.5, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0], [9], [2], [76], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 9, 8, 5], [1, 3, 2, 2, 5, 1, 5], [74], [0, 1, 1], [0, 0, 0, 0, 0, 1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4480822.242628769, 84358949.23682472, 391654075.79025227, 1082980228.1421213, 2331719042.3162065, 4301099529.1972], "accuracy": [0.09813763201236725, 0.09813763201236725, 0.10249637067317963, 0.09879804402589798, 0.10038304328918457, 0.09919429570436478], "val_loss": [16633510.285714285, 132801453.71428572, 447909339.4285714, 1061360018.2857143, 2072567222.857143, 3580927634.285714], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [7, 0, 6, 6], [2, 3, 0, 2], [82], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [1], [66], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1], [7, 3, 5], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 8], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1, 3, 2, 2, 5, 1, 5], [17], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 1], [7, 2, 2, 7, 0], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [6, 5, 0, 8], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.math.negative(alpha)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 8, 7], [2, 3, 3, 1], [97], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1], [4, 2, 2, 2, 3, 0, 5], [1, 5, 3, 2, 0, 1, 3], [51], [0, 0, 1], [1], [7, 3], [4], [], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1], [3, 4, 0, 1, 1, 5, 3, 8], [1, 2, 0, 3, 2, 0], [41, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(grad, tf.math.add(alpha, grad)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.negative(tf.math.subtract(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 1], [4, 1, 6, 9], [2, 1, 3], [97], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 6, 8, 1, 7, 4, 8, 6, 8, 2, 5, 3, 0, 8, 7, 7, 8], [1, 5, 1, 3, 5, 4, 3, 2, 5, 5, 0], [66, 34, 58, 49], [0, 1, 1], [0], [7, 3, 2, 7, 0], [4], [], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 1, 0, 1, 1, 5, 3, 8], [1, 2, 0, 1, 2, 0], [41, 49]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 28, 28, 17, 11, 1, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), grad)), tf.math.add(beta, grad))))), tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))), grad))))), tf.math.add(beta, grad)))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.subtract(tf.math.subtract(beta, tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [3, 2, 8, 7], [2, 0], [74], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [3, 5, 4, 1, 6, 7, 5, 5, 8], [1, 3, 2, 2, 5, 1, 5], [17], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [7, 3, 0], [4], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 2, 6], [1, 2, 0], [41, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [5, 3, 2, 2, 5, 1, 5], [17], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1], [9, 2, 2, 7, 0], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 0, 4], [1, 2, 0], [14]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(alpha)), tf.math.pow(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [5, 2, 8, 7], [2, 2], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [4, 2, 2, 2, 3, 0, 5, 3, 4], [1, 5, 3, 2, 0, 3, 3, 3], [51], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 4, 8], [1, 1, 3], [41, 98]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.square(beta))))), tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [1], [20, 43], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0], [7, 3, 5], [4], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [0], [26], [0], [1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [1], [], [0, 1, 1], [0], [7, 3], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [4, 9, 5], [3, 2, 0], [28]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30400711264136, 2.302055609177416, 2.3005798587615165, 2.3034034088035504, 2.303597961828111, 2.302060493404493], "accuracy": [0.08902391046285629, 0.09192973375320435, 0.09549596905708313, 0.0874389111995697, 0.09140139818191528, 0.09298639744520187], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6], [2, 1], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 1, 3, 5, 1, 3, 8, 5], [1, 3, 2, 2, 3, 1, 5], [73], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [7, 2, 5], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 16, 16, 9, 7, 0, 6, 3, 3, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(beta))), grad))), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.square(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.30400711264136, 2.302055609177416, 2.3005798587615165, 2.3034034088035504, 2.303597961828111, 2.302060493404493], "accuracy": [0.08902391046285629, 0.09192973375320435, 0.09549596905708313, 0.0874389111995697, 0.09140139818191528, 0.09298639744520187], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]