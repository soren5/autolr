[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2721201507501347, 2.1757881244600976, 1.9718602606176685, 1.6427065372593006, 1.3692245941435452, 1.193948628549421, 1.0921950128021463, 1.0068797534719167, 0.9633443899882735, 0.9124087350023043, 0.8859369469325084, 0.8575820156202466, 0.8442664319309088, 0.811694333062369, 0.8016427514370738, 0.771195321373731, 0.766425701644773, 0.760111668586668, 0.7531912136685658, 0.737725726452171, 0.7405293066393603, 0.7294572537853229, 0.7227120513393894, 0.706294318601802, 0.699933378365156, 0.6885634268657517, 0.6959965420657334, 0.6824025218402705, 0.6780863871285944, 0.6741120828030966, 0.6536348699232244, 0.6546800216947013, 0.657956061802835, 0.6384159827496886, 0.6460380006019135, 0.6454678792459712, 0.6419709616601113, 0.6371765430923687, 0.6339201825390308, 0.6262645690574339, 0.6178751191238229, 0.6141338117716886, 0.6229424857271346, 0.6159342603204179, 0.606334430572143, 0.607453086797855, 0.606517555297657, 0.6083960403320323, 0.5983724578528151, 0.6024452302323955, 0.5959108462816751, 0.5962295408545547, 0.5822453446486496, 0.5893306619754761, 0.5887009946976545, 0.5823150286821248, 0.5781156388114488, 0.5840085032137079, 0.5680814613094262], "accuracy": [0.1682736724615097, 0.3181878328323364, 0.4138158857822418, 0.4859331548213959, 0.5385021567344666, 0.5933166146278381, 0.6164311170578003, 0.6432439684867859, 0.6592260003089905, 0.6757363677024841, 0.6843217611312866, 0.6951525807380676, 0.6985867023468018, 0.7087571024894714, 0.7099458575248718, 0.7255316376686096, 0.7194558382034302, 0.724210798740387, 0.7281733155250549, 0.7357020378112793, 0.7339849472045898, 0.7334566116333008, 0.7395324110984802, 0.7405890822410583, 0.7425703406333923, 0.7478536367416382, 0.7415136694908142, 0.7555144429206848, 0.7477215528488159, 0.755118191242218, 0.7594769597053528, 0.7617223858833313, 0.7539294958114624, 0.7630431652069092, 0.7622507214546204, 0.7635715007781982, 0.7605336308479309, 0.7646281719207764, 0.7626469135284424, 0.7716285586357117, 0.7774402499198914, 0.7791573405265808, 0.7740060687065125, 0.7745344042778015, 0.7770439982414246, 0.77677983045578, 0.7779685854911804, 0.7779685854911804, 0.7810064554214478, 0.7757231593132019, 0.7825914621353149, 0.7773081660270691, 0.783119797706604, 0.7827235460281372, 0.789459764957428, 0.7886672616004944, 0.7872143983840942, 0.7868181467056274, 0.7898560166358948], "val_loss": [1.898333958217076, 1.7608887808663505, 1.4761045660291399, 1.1395065784454346, 0.9321105480194092, 0.8016732249941144, 0.7264926433563232, 0.6826437200818744, 0.6671592678342547, 0.6273899248668126, 0.6054353713989258, 0.5873030083520072, 0.5727305241993496, 0.5698915890284947, 0.5546157189777919, 0.5400619506835938, 0.5301764011383057, 0.5213443551744733, 0.5176879678453717, 0.511170472417559, 0.5138767276491437, 0.5075307403291974, 0.49994238785334993, 0.4943231855119978, 0.4828409808022635, 0.4807539326804025, 0.48417636326381136, 0.4821087632860456, 0.469318015234811, 0.4641122817993164, 0.46643812315804617, 0.4613975627081735, 0.4565915209906442, 0.4533145768301828, 0.4498389107840402, 0.447846668107169, 0.45772998673575266, 0.44093053681509836, 0.4406035968235561, 0.44343461309160503, 0.4353102019854954, 0.4328537583351135, 0.43273264169692993, 0.43156624691826956, 0.43357282876968384, 0.42920037678309847, 0.4265449983733041, 0.42301679509026663, 0.4230343614305769, 0.4173800264086042, 0.4161978619439261, 0.41428564276014057, 0.4203550474984305, 0.4149021591459002, 0.41666323798043386, 0.4098704031535557, 0.41297365937914166, 0.41159739664622713, 0.4150154846055167], "val_accuracy": [0.41200000047683716, 0.5263333320617676, 0.5649999976158142, 0.6553333401679993, 0.6653333306312561, 0.6993333101272583, 0.7089999914169312, 0.7323333621025085, 0.7143333554267883, 0.7369999885559082, 0.7516666650772095, 0.7559999823570251, 0.7616666555404663, 0.7620000243186951, 0.762666642665863, 0.7670000195503235, 0.7723333239555359, 0.7816666960716248, 0.7736666798591614, 0.7789999842643738, 0.7670000195503235, 0.7739999890327454, 0.7846666574478149, 0.7823333144187927, 0.7950000166893005, 0.7863333225250244, 0.7799999713897705, 0.777999997138977, 0.8023333549499512, 0.8043333292007446, 0.8066666722297668, 0.8019999861717224, 0.8040000200271606, 0.8109999895095825, 0.809333324432373, 0.815666675567627, 0.79666668176651, 0.8106666803359985, 0.8146666884422302, 0.8050000071525574, 0.8196666836738586, 0.8213333487510681, 0.8203333616256714, 0.8130000233650208, 0.8246666789054871, 0.8216666579246521, 0.8186666369438171, 0.8183333277702332, 0.8230000138282776, 0.8323333263397217, 0.8270000219345093, 0.8256666660308838, 0.8159999847412109, 0.8336666822433472, 0.8293333053588867, 0.831333339214325, 0.8246666789054871, 0.8240000009536743, 0.8213333487510681]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [57, 63, 56, 45]], "fitness": -0.30885714292526245, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.5394999076189255, 2.2584488354401895, 2.302679584577745, 2.2391569014191393, 2.2498772385538905, 2.431559254322951, 2.3064394460740325, 2.3033307959075775, 2.3017968552664616], "accuracy": [0.22572976350784302, 0.17012283205986023, 0.1072513535618782, 0.19931316375732422, 0.14212125539779663, 0.16312244534492493, 0.09853387624025345, 0.09589222073554993, 0.1088363528251648], "val_loss": [1.9676425797598702, 1.975118909563337, 1.954455784388951, 1.657193354197911, 1.9599810327802385, 1.9784530230930872, 1.974134853907994, 1.9732672827584403, 1.9704492432730538], "val_accuracy": [0.0963333323597908, 0.10066666454076767, 0.20266667008399963, 0.34299999475479126, 0.16566666960716248, 0.10066666454076767, 0.10066666454076767, 0.15000000596046448, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [65, 63, 56, 45]], "fitness": -0.2782857120037079, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [3.2927669407496, 2.917677388577303, 6.650381799544704, 13.847991560995304, NaN, NaN], "accuracy": [0.21159687638282776, 0.1298375427722931, 0.12442214041948318, 0.10038304328918457, 0.09338264167308807, 0.09998679161071777], "val_loss": [2.237231663295201, 2.030644416809082, 2.0862650190080916, 2.0412378311157227, NaN, NaN], "val_accuracy": [0.2849999964237213, 0.09733333438634872, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [78, 63, 56, 45]], "fitness": -0.27485713362693787, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.9079717178354803, 81.6618958945445, 414.9998576707529, 2.3145879494310955, 2.3052834935428255, 2.3034796104486577], "accuracy": [0.1990489959716797, 0.15136705338954926, 0.1026284471154213, 0.09998679161071777, 0.09589222073554993, 0.09998679161071777], "val_loss": [1.7670485632760184, 16.523838588169642, 1.9930426733834403, 1.9778596333095007, 1.9746174131120955, 1.9739288602556502], "val_accuracy": [0.26733332872390747, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 1, 1, 1, 2], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [7, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [51642.93142745643, 992205.6975630696, 4534189.464535728, 12614997.920221899, 26718221.231013075, 49274466.13498877], "accuracy": [0.1014397069811821, 0.09470347315073013, 0.10130762308835983, 0.10474177449941635, 0.09628847241401672, 0.09747721254825592], "val_loss": [193122.85267857142, 1530121.392857143, 5148282.142857143, 12184905.42857143, 23777294.85714286, 41062792.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 2, 9, 2, 5, 2, 1, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 1, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 3, 0, 3, 0, 2], [33, 13, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 16, 11, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(beta))), tf.math.pow(tf.math.negative(alpha), sigma)), tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [2.302938787204368, 2.3025851564605113, 2.3025850799688024, 2.3025851429508597, 2.3025850619874246, 2.3025851114598312, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.9736442565917969, 1.9736442565917969, 1.9736442565917969, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [80, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0, 4], [89, 77, 64], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0], [1, 2, 5, 6, 9, 0, 9, 2, 5, 2, 1, 9, 4, 0], [3, 1, 1, 1, 1, 1, 2], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [5, 7, 0, 0, 6, 4, 0, 2, 4], [4, 3, 0], [31, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [2, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 0], [3, 1, 1, 0, 1, 3, 2, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [88, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 15, 8, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(grad), tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2589078.777384106, 50406061.87504953, 231170308.0153216, 644168571.45212, 1365498550.0842688, 2519670249.6156387], "accuracy": [0.10170386731624603, 0.09470347315073013, 0.10130762308835983, 0.10474177449941635, 0.09628847241401672, 0.09734513610601425], "val_loss": [9762168.0, 77909673.14285715, 262736749.7142857, 622538587.4285715, 1215610112.0, 2100243529.142857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.335562669432568, 2.5290575589265774, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.049531105905771255, 0.011359133757650852, 0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0597058023725237, 2.6099706377301897, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.009666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 9, 0, 9, 2, 5, 2, 1, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0], [5, 6, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 3, 1, 1, 1, 1, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302938787204368, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1], [1, 2, 5, 6, 9, 0, 9, 2, 5, 2, 1, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 1, 1, 1, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.0462857149541378, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.3016741201153614, 2.30241020250755, 2.3037184398912123, 2.3018742305822126, 2.303286196013735, 2.3017726439243105, 2.3023912380746547, 2.302632770801595, 2.3026848990037663, 2.3016013928754626, 2.3024350106991704, 2.3029252784977405, 2.3020290146256954, 2.3018682663703025, 2.3024873379876256, 2.3008596384451296, 2.3001465139261814, 2.302084445606968, 2.302285369550075, 2.3024029705927846, 2.3014674470125804, 2.3023098232156927, 2.3011269517436777, 2.3026566314911405, 2.302091954516823, 2.301282303759356, 2.3018234264833297, 2.302914120092557, 2.3036250935223093, 2.3017719893832767, 2.3014099902764067, 2.3013627374523336, 2.3005710305979914, 2.302114291355484, 2.3022945962955514, 2.3015582033703277, 2.3014261896395176, 2.3020665827617512, 2.301286480634944, 2.3008013514164904, 2.301261082584863, 2.3009490090716453, 2.301571508392981, 2.300333551175842, 2.3004919160012287, 2.300759998184736, 2.301490163601558, 2.3022608881723516, 2.301652548319754, 2.3003277926318413, 2.300223228119273, 2.3013169997876206, 2.30082580605833], "accuracy": [0.09430722147226334, 0.0870426595211029, 0.0882314071059227, 0.09351472556591034, 0.08889182657003403, 0.08902391046285629, 0.08770307898521423, 0.0886276587843895, 0.09219389408826828, 0.09021265059709549, 0.09298639744520187, 0.0866464152932167, 0.09576013684272766, 0.09021265059709549, 0.0866464152932167, 0.09734513610601425, 0.0936468094587326, 0.09140139818191528, 0.09311848133802414, 0.08875974267721176, 0.09496764093637466, 0.0936468094587326, 0.09338264167308807, 0.09206181764602661, 0.09272222965955734, 0.09100515395402908, 0.09417514503002167, 0.08836349099874496, 0.08796724677085876, 0.09126931428909302, 0.08875974267721176, 0.09153348207473755, 0.09642054885625839, 0.09377889335155487, 0.0956280529499054, 0.09166556596755981, 0.09496764093637466, 0.09668471664190292, 0.09377889335155487, 0.09668471664190292, 0.09351472556591034, 0.09457138925790787, 0.09021265059709549, 0.09747721254825592, 0.09470347315073013, 0.09259014576673508, 0.1010434553027153, 0.09140139818191528, 0.09457138925790787, 0.0948355570435524, 0.10381719470024109, 0.09430722147226334, 0.09509972482919693], "val_loss": [1.9703598703656877, 1.9703327587672643, 1.970297132219587, 1.9702684538705009, 1.970238276890346, 1.970212459564209, 1.9701874596732003, 1.9701605524335588, 1.9701378004891532, 1.9701155253819056, 1.9700869151524134, 1.9700586455208915, 1.9700354167393275, 1.9700116430010115, 1.9699864387512207, 1.9699632780892509, 1.969947269984654, 1.9699221338544572, 1.9698948860168457, 1.9698687962123327, 1.969848700932094, 1.9698232923235213, 1.9698101452418737, 1.969789777483259, 1.9697695459638322, 1.969750268118722, 1.9697302409580775, 1.96971218926566, 1.9696965898786272, 1.9696760177612305, 1.9696602140154158, 1.969644205910819, 1.9696248599461146, 1.96960415158953, 1.969590391431536, 1.969571931021554, 1.9695495877947127, 1.9695273808070592, 1.9695073536464147, 1.9694884845188685, 1.9694735663277763, 1.96945401600429, 1.9694364411490304, 1.9694245883396693, 1.9694136210850306, 1.9694023132324219, 1.9693890980311803, 1.9693709782191686, 1.9693557875497, 1.9693428448268346, 1.9693347385951452, 1.9693215233939034, 1.969306537083217], "val_accuracy": [0.036666665226221085, 0.03633333370089531, 0.036666665226221085, 0.038333334028720856, 0.038333334028720856, 0.03933333232998848, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.0416666679084301, 0.0416666679084301, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.04333333298563957, 0.04333333298563957, 0.04333333298563957, 0.044333335012197495, 0.04533333331346512, 0.045666664838790894, 0.04633333161473274, 0.04633333161473274, 0.046666666865348816, 0.046666666865348816, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04800000041723251, 0.04833333194255829, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.04933333396911621, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.050333332270383835, 0.05066666752099991, 0.05066666752099991, 0.05066666752099991, 0.050999999046325684, 0.05133333429694176, 0.05133333429694176, 0.050999999046325684, 0.050999999046325684, 0.05133333429694176, 0.05133333429694176]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3016886537605035, 2.302462365759236, 2.303822456711807, 2.3020157516120747, 2.303478480613526, 2.3019928828269545], "accuracy": [0.09430722147226334, 0.08717474341392517, 0.08809932321310043, 0.09325055778026581, 0.0882314071059227, 0.08875974267721176], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3016886537605035, 2.302462365759236, 2.303822456711807, 2.3020157516120747, 2.303478480613526, 2.3019928828269545], "accuracy": [0.09430722147226334, 0.08717474341392517, 0.08809932321310043, 0.09325055778026581, 0.0882314071059227, 0.08875974267721176], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 0, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3016886537605035, 2.302462365759236, 2.303822456711807, 2.3020157516120747, 2.303478480613526, 2.3019928828269545], "accuracy": [0.09430722147226334, 0.08717474341392517, 0.08809932321310043, 0.09325055778026581, 0.0882314071059227, 0.08875974267721176], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]