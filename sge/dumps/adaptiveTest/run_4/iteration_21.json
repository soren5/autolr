[{"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.5542857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.066478470265826, 87352.83109163605, NaN, NaN, NaN, NaN], "accuracy": [0.31739532947540283, 0.34183067083358765, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.1716334819793701, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5356666445732117, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 8, 2], [2, 0, 0, 0], [51, 33], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1], [7, 3, 5], [4, 1], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.3822857141494751, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 3, 2, 0, 6, 3, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.002892687493595, 1.488215249070654, 1.6226009474832306, 1.5974763553093108, 1.1363605132837966, 1.2366295418860873, 1.2144291818480466, 1.255984011044072, 1.6041752209579625, 1.6310237689875435], "accuracy": [0.3661339282989502, 0.49993395805358887, 0.49570730328559875, 0.48368775844573975, 0.6016378402709961, 0.5845991373062134, 0.5774666666984558, 0.5849953889846802, 0.5791836977005005, 0.49465063214302063], "val_loss": [1.3458920206342424, 0.7907546588352748, 1.4993194511958532, 0.7603586571557182, 0.7120685577392578, 0.7327490193503243, 0.7415921347481864, 0.7818498270852225, 1.0784022126879012, 1.0232888630458288], "val_accuracy": [0.5036666393280029, 0.6706666946411133, 0.4333333373069763, 0.6940000057220459, 0.7113333344459534, 0.6833333373069763, 0.706333339214325, 0.6973333358764648, 0.6190000176429749, 0.5799999833106995]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 1, 8, 3, 4, 6, 2], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [0, 1, 1, 1], [0, 1], [7, 3], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 8, 9, 8, 9], [1, 2, 0, 0, 3], [42, 60]], "fitness": -0.30628570914268494, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.152859203819554, 2.2954954313422555, 2.301230445277847, 2.304196467126885, 2.3009931549593254, 2.2574942114488277, 2.284453122465602, 2.305143722626889, 2.303435075741245, 2.3028539437281537, 2.3000164726674517], "accuracy": [0.1846519559621811, 0.1228371411561966, 0.1698586642742157, 0.09840179979801178, 0.11319508403539658, 0.17078325152397156, 0.14819706976413727, 0.09259014576673508, 0.09826971590518951, 0.09721305221319199, 0.1216483935713768], "val_loss": [1.9794839450291224, 1.7015627111707414, 1.9748749732971191, 1.9729843139648438, 1.9706247193472726, 1.8697214126586914, 1.9760847091674805, 1.9739515440804618, 1.9736888068062919, 1.973165784563337, 1.95270722252982], "val_accuracy": [0.10133333504199982, 0.2370000034570694, 0.10133333504199982, 0.10133333504199982, 0.14100000262260437, 0.35899999737739563, 0.10133333504199982, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.2639999985694885]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [6, 1, 8, 3, 4, 6, 2], [2, 3, 3], [13], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 1, 1], [0, 1], [7, 3], [4], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 9, 4, 4, 0, 7, 6, 0, 8, 3, 1, 6, 7, 2, 8, 8, 9, 9, 4, 0, 5, 7, 7, 2], [1, 3, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], [1], [6, 1, 8, 3, 4, 6, 2], [3], [55, 75, 97, 86], [0], [1, 0, 1, 1, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [1, 1, 0], [0, 0, 0, 0, 0, 1], [7, 3], [4], [], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 0, 6, 2, 2, 0], [1, 2, 0, 2, 3, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08083476126194, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [6, 1, 8, 3, 4, 6, 2], [2], [], [0], [1, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 8, 9, 8, 9], [0, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4327252.916931508, 84740852.66411306, 386850987.4669132, 1092362616.273676, 2310972367.139876, 4277636078.4847445], "accuracy": [0.09708096832036972, 0.10434553027153015, 0.10117553919553757, 0.09826971590518951, 0.10513802617788315, 0.09959053993225098], "val_loss": [16633510.285714285, 132801453.71428572, 447909339.4285714, 1061360018.2857143, 2072567222.857143, 3580927634.285714], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1], [1], [6, 1, 8, 3, 4, 6, 2], [0], [8], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 1, 1], [0, 1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [3, 2, 0, 3, 2, 5, 0], [1, 2, 0, 2, 1, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.multiply(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.negative(beta)), alpha))", "other_info": {"loss": [2.3022801317102353, 2.3032932915093642, 2.3103608295917826, 2.3127136179453283, 2.3022426106532676, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09192973375320435, 0.08770307898521423, 0.09074098616838455, 0.09047681838274002, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9696134158543177, 1.9709148406982422, 1.9736076082502092, 1.9713865688868932, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.03166666626930237, 0.02433333359658718, 0.06400000303983688, 0.09833333641290665, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2, 3], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0], [7, 3, 2, 6, 8, 0], [3, 1], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 3, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 8, 6, 2, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1], [], [0, 3, 3], [13], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 1, 1], [7, 3], [4, 5], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [8, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [28.684572737813074, 2190.5287056619213, 33507.25684664344, 236615.45188053098, 1018618.5793653415, 3372685.3876634524], "accuracy": [0.09615638852119446, 0.10447761416435242, 0.10130762308835983, 0.09826971590518951, 0.10540219396352768, 0.09959053993225098], "val_loss": [159.42625645228796, 6098.665736607143, 62813.58482142857, 338094.97321428574, 1259289.7857142857, 3703429.1428571427], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 7, 6, 2, 4], [2, 1, 2, 3, 0, 1], [10], [0], [1, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 2, 0, 6, 8, 8, 0], [1, 3, 0, 0, 3, 0], [41, 60, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 9, 5, 4, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, grad), grad)), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, sigma)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [3], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [4], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 5, 0, 2, 7, 2, 0, 8, 2], [1, 2, 0, 3, 1], [69, 94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(beta)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [3, 5, 3], [2, 0, 2], [58], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 11, 6, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(grad, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, beta), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)))), alpha)", "other_info": {"loss": [2.3022370889532944, 2.3019286151480887, 2.746183655753568, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09179764986038208, 0.08902391046285629, 0.09787346422672272, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9695091247558594, 1.9693100793021066, 54753944.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03866666555404663, 0.035999998450279236, 0.09799999743700027, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 9, 0, 4, 4, 8, 5, 7, 8, 3, 5, 9, 3, 0, 4, 5], [0, 2, 2, 1, 3, 2, 2, 2, 2], [77, 3, 17, 82], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0, 1, 6, 5, 0, 2], [1, 1, 0, 3, 1, 3, 3, 2], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031036068718933, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [5, 0, 5, 3, 3, 6, 2, 0], [2, 1, 1, 0, 2, 0, 1], [56, 82], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [0, 1, 1, 1], [1, 1], [7, 3], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [9, 1, 3, 8, 9, 8, 9], [1, 0, 0], [86, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3031036068718933, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1], [0, 1, 0], [2, 3], [4, 2], [40], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 2, 2, 2, 2, 0, 2, 5, 7, 6, 3, 0], [1, 0, 0, 0, 3, 0, 1, 1, 2, 2, 2], [35, 60, 29, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 24, 13, 11, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(sigma), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.math.negative(beta)), beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08347642421722412, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [1], [], [0, 0], [0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 8, 9, 8, 9], [1, 2, 0, 0, 3], [42, 60]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3022339131145304, 2.301938559857531, 2.3019991245378106, 2.3026902424960074, 2.302219938624096, 2.3031701822448416], "accuracy": [0.09179764986038208, 0.0886276587843895, 0.09338264167308807, 0.09245806187391281, 0.09047681838274002, 0.09377889335155487], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 5, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(beta))", "other_info": {"loss": [2.3022670914641523, 2.302064064991016, 2.302206426264509, 2.30298503508673, 2.3025895796274356, 2.303629285387627], "accuracy": [0.09166556596755981, 0.0886276587843895, 0.09311848133802414, 0.09126931428909302, 0.08942015469074249, 0.09298639744520187], "val_loss": [1.969574042728969, 1.9696592603410994, 1.9697391646248954, 1.9698243822370256, 1.9699044908796037, 1.969986915588379], "val_accuracy": [0.03766666725277901, 0.03733333200216293, 0.03700000047683716, 0.035999998450279236, 0.03533333167433739, 0.03500000014901161]}}, {"genotype": [[0], [0, 1, 0, 1, 1], [0, 1, 1], [1], [2, 3], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0], [7, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 1, 1], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [3, 2, 0, 6, 2, 2, 0], [1, 3, 0, 0, 3, 3], [40, 60]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 12, 6, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, sigma), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma), sigma)", "other_info": {"loss": [2.3022339131145304, 2.301938559857531, 2.3019991245378106, 2.3026902424960074, 2.302219938624096, 2.3031701822448416], "accuracy": [0.09179764986038208, 0.0886276587843895, 0.09338264167308807, 0.09245806187391281, 0.09047681838274002, 0.09377889335155487], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]