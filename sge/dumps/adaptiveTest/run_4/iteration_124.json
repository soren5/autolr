[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [9, 63, 56, 45]], "fitness": -0.7937142848968506, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301534958991707, 2.296692009158595, 2.2924867680264565, 2.2833294483333955, 2.269221179473669, 2.252741613723126, 2.2295725540226132, 2.1954801629295346, 2.1466490569887475, 2.0681254190460816, 1.9546021205748172, 1.7913772589841366, 1.6120163080100576, 1.439984629025407, 1.2982623574283727, 1.2024470437960209, 1.1168635193036611, 1.052925194274984, 1.0057062408344983, 0.9589493809327663, 0.9228287444705456, 0.896367116123064, 0.8522698774849183, 0.8481165553049373, 0.820285202269352, 0.7923783727404526, 0.7874377117794991, 0.784270453147601, 0.7712216326872655, 0.7503953509563154, 0.737592884743486, 0.7317050608740254, 0.7278569892664879, 0.7048830881866371, 0.7109473842939035, 0.6938482351732008, 0.6777035196648455, 0.6834432363210967, 0.662678622086255, 0.6662419779646146, 0.6553453096876118, 0.6796853459112837, 0.6487727573818267, 0.6390355007365993, 0.6418511097095173, 0.6197915380389353, 0.6136863672060974, 0.6217580146446928, 0.6021194093184243, 0.6190007296708817, 0.6052483839523272, 0.5998907880445498, 0.594774499206873, 0.6000834961120778, 0.5913479949473516, 0.612637921543862, 0.5864468140766494, 0.5777306912550285, 0.5810644787142951, 0.5721902352644704, 0.5626632465882907, 0.5745943803332816, 0.5653615486525809, 0.5518898208458441], "accuracy": [0.0886276587843895, 0.10447761416435242, 0.12178047746419907, 0.1410645842552185, 0.18174614012241364, 0.21621978282928467, 0.26878878474235535, 0.3171311616897583, 0.3564918637275696, 0.3928146958351135, 0.42609959840774536, 0.46229031682014465, 0.49425438046455383, 0.5291243195533752, 0.561880886554718, 0.5914674401283264, 0.6133931875228882, 0.628582775592804, 0.6485272645950317, 0.6579051613807678, 0.6748117804527283, 0.6804913282394409, 0.698190450668335, 0.6955488324165344, 0.702681303024292, 0.7127195596694946, 0.7137762308120728, 0.7108704447746277, 0.7164179086685181, 0.7317395210266113, 0.7263241410255432, 0.7305507659912109, 0.7309470176696777, 0.7378153204917908, 0.7346453666687012, 0.7433628439903259, 0.754589855670929, 0.7483819723129272, 0.7561748623847961, 0.7534011602401733, 0.7549861073493958, 0.7486461400985718, 0.7614582180976868, 0.767401933670044, 0.7644960880279541, 0.7707040309906006, 0.7740060687065125, 0.7688548564910889, 0.7753269076347351, 0.7705719470977783, 0.774798572063446, 0.7730814814567566, 0.7771760821342468, 0.7740060687065125, 0.7783648371696472, 0.7740060687065125, 0.7843085527420044, 0.7882710099220276, 0.7819310426712036, 0.7930260300636292, 0.7898560166358948, 0.7843085527420044, 0.7928939461708069, 0.7981772422790527], "val_loss": [1.9681953021458216, 1.9630711419241769, 1.9551777158464705, 1.9444112096514021, 1.930023125239781, 1.9111880574907576, 1.8846855844770158, 1.8451174327305384, 1.7842839785984583, 1.6894535337175642, 1.551112243107387, 1.3712407520839147, 1.183225052697318, 1.023437602179391, 0.9055161816733224, 0.8261246851512364, 0.7611482484000069, 0.7170842715672084, 0.6815997873033796, 0.6524768897465297, 0.6272199153900146, 0.6073304755347115, 0.5955057995659965, 0.587172099522182, 0.5665058408464704, 0.5519473212105888, 0.5444415296827044, 0.5291986635753086, 0.526596222605024, 0.5106610400336129, 0.5298771687916347, 0.5139841692788261, 0.5219914402280535, 0.4861398254122053, 0.4884751183646066, 0.4917889322553362, 0.4900201899664743, 0.4711103779929025, 0.4670773574284145, 0.476155298096793, 0.5081278426306588, 0.4615670442581177, 0.475023763520377, 0.45473597730909077, 0.4499614068440029, 0.45261996132986887, 0.4376686726297651, 0.4385886532919748, 0.4424494845526559, 0.4637912000928606, 0.4366064412253244, 0.42583694628306795, 0.43522097383226666, 0.41458133288792204, 0.44056177139282227, 0.48434928485325407, 0.42612063033240183, 0.41139849594661165, 0.40917128324508667, 0.41387535844530376, 0.45213891778673443, 0.40727453572409494, 0.4061964920588902, 0.4049090657915388], "val_accuracy": [0.05133333429694176, 0.09233333170413971, 0.1733333319425583, 0.2696666717529297, 0.3479999899864197, 0.39933332800865173, 0.43966665863990784, 0.468666672706604, 0.5116666555404663, 0.5389999747276306, 0.5590000152587891, 0.6050000190734863, 0.6290000081062317, 0.6643333435058594, 0.6840000152587891, 0.687333345413208, 0.7006666660308838, 0.715666651725769, 0.7176666855812073, 0.7256666421890259, 0.7433333396911621, 0.7429999709129333, 0.7429999709129333, 0.7406666874885559, 0.7703333497047424, 0.7710000276565552, 0.7573333382606506, 0.7689999938011169, 0.7703333497047424, 0.7803333401679993, 0.7609999775886536, 0.765333354473114, 0.7540000081062317, 0.793666660785675, 0.7923333048820496, 0.7723333239555359, 0.7876666784286499, 0.7983333468437195, 0.8019999861717224, 0.7870000004768372, 0.7850000262260437, 0.8050000071525574, 0.7829999923706055, 0.7963333129882812, 0.8046666383743286, 0.8100000023841858, 0.8196666836738586, 0.815666675567627, 0.8003333210945129, 0.7863333225250244, 0.8230000138282776, 0.8193333148956299, 0.8153333067893982, 0.8263333439826965, 0.7906666398048401, 0.7723333239555359, 0.8186666369438171, 0.8299999833106995, 0.8320000171661377, 0.8206666707992554, 0.7853333353996277, 0.8276666402816772, 0.8276666402816772, 0.8169999718666077]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [8], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.7454285621643066, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1420050015176813, 1.4065122269777937, 1.161900361830359, 0.949796217630379, 0.9031782508006642, 0.8362953695937895, 0.7665588945256657, 0.7310826237317263, 0.7202186273577474, 0.7310806163754587, 0.6808874139208221], "accuracy": [0.2917712330818176, 0.5213313698768616, 0.5754854083061218, 0.6598864197731018, 0.6700568199157715, 0.6863030195236206, 0.7213049530982971, 0.726192057132721, 0.7283053994178772, 0.7318716049194336, 0.7475894689559937], "val_loss": [1.3392254965645927, 0.9267854690551758, 0.7745537757873535, 0.7118264096123832, 0.6063685928072248, 0.5578411647251674, 0.5875404221670968, 0.5428517375673566, 0.5373891932623727, 0.5437566552843366, 0.527711136000497], "val_accuracy": [0.6129999756813049, 0.5806666612625122, 0.6470000147819519, 0.6886666417121887, 0.7319999933242798, 0.7596666812896729, 0.7193333506584167, 0.7383333444595337, 0.7356666922569275, 0.7366666793823242, 0.7570000290870667]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [16.463746471553666, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0334169864654541, 0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1740570.1785714286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.4350824197573483e+31, 2.47176886297661, 2.305127235782176, 2.306807320084255, 2.3050500058919967, 2.3066048480421717, 2.3051652821724864], "accuracy": [0.10302469879388809, 0.09893012791872025, 0.10157178342342377, 0.09615638852119446, 0.09972262382507324, 0.09536388516426086, 0.09549596905708313], "val_loss": [2.4416347231183733, 1.9747908455984933, 1.9787663051060267, 1.977609293801444, 1.9787748881748743, 1.9770071165902274, 1.976079055241176], "val_accuracy": [0.10066666454076767, 0.10300000011920929, 0.10066666454076767, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, sigma), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.607244121729193e+29, 144.22262719310174, 37056.044352396275, 9471721.10797781, 2437618685.7936864, 624682244400.8601], "accuracy": [0.06366398185491562, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, 1211.9064243861608, 310600.46428571426, 79514269.71428572, 20355653046.857143, 5211047179995.429], "val_accuracy": [0.10133333504199982, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [2, 2, 3, 2, 2, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.100252946952645, 90.95771391907262, 1042.4272547036492, 6632.265126077302, 28147.935594084334, 89782.63519928015], "accuracy": [0.0940430611371994, 0.10196803510189056, 0.10328886657953262, 0.09615638852119446, 0.1010434553027153, 0.1014397069811821], "val_loss": [11.553872244698661, 211.7475847516741, 1793.786830357143, 9202.55161830357, 33674.83705357143, 98182.39508928571], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 6, 7, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 0, 3, 0, 1, 3], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 7, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5028200901.980269, 94839746325.74191, 453016924903.8912, 1263607997561.8628, 2692391942718.284, 4900198610403.8], "accuracy": [0.09879804402589798, 0.1022322028875351, 0.10381719470024109, 0.09642054885625839, 0.1010434553027153, 0.1014397069811821], "val_loss": [18958503350.857143, 151639331401.14285, 511751450038.8571, 1213006011245.7144, 2369119434459.4287, 4093772225389.7144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 1, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 2, 0, 1], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1138555034995079, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1], [8, 5, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [5, 3], [1, 7], [71], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1230692202.5387158, 23208434096.5389, 110852002279.4516, 309193208826.72516, 658793269411.656, 1199005067829.0867], "accuracy": [0.09879804402589798, 0.1022322028875351, 0.10381719470024109, 0.09642054885625839, 0.10091137140989304, 0.1014397069811821], "val_loss": [4639720886.857142, 37106607250.28571, 125221610642.28572, 296810840064.0, 579684925440.0, 1001683306788.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.negative(alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [16], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [5, 2, 6, 6, 6, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 0, 0, 3], [79, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), alpha), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [5, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 2, 0, 3], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), alpha), grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 2, 0, 2, 3, 0, 2], [9, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(beta))", "other_info": {"loss": [2.302233007589997, 2.3010621047243545, 2.3035177167349046, 2.304039284002354, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), beta), sigma)", "other_info": {"loss": [2.302233007589997, 2.3010621362153834, 2.3035177167349046, 2.304039270492703, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [9, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302233007589997, 2.3010621362153834, 2.3035177167349046, 2.304039270492703, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 2, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 12, 7, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(beta), tf.math.negative(beta)), sigma))))", "other_info": {"loss": [2.302233007589997, 2.3010621362153834, 2.3035177167349046, 2.304039270492703, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302233007589997, 2.3010621362153834, 2.3035177167349046, 2.304039270492703, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302233007589997, 2.3010621362153834, 2.3035177167349046, 2.304039270492703, 2.3032911823977096, 2.3030284614358925], "accuracy": [0.08611807972192764, 0.09245806187391281, 0.09470347315073013, 0.09192973375320435, 0.09140139818191528, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]