[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.7919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1347219518871356, 1.4390361903602138, 1.1284726363414976, 0.9176349957164693, 0.8633856788334704, 0.8164904001697243, 0.8292816700149348, 0.7430047618557103, 0.7329592647774187, 0.7039670930593998, 0.7053660379660962, 0.6910824002669771, 0.6548345721928419, 0.6763014671919353, 0.6403844231911119, 0.6359025679008127, 0.6585366256075481, 0.6210885245440075, 0.5982264382507603, 0.5808371544325152, 0.5984045993288227, 0.5817307211136884, 0.579639326910443, 0.5828349282004341], "accuracy": [0.2945449650287628, 0.5131422281265259, 0.5876370072364807, 0.6715096831321716, 0.6847180128097534, 0.7040021419525146, 0.6923788189888, 0.7210407853126526, 0.7300224304199219, 0.7368907928466797, 0.7271166443824768, 0.7358341217041016, 0.7523444890975952, 0.7429665923118591, 0.7581561207771301, 0.7588165402412415, 0.7471932172775269, 0.7675340175628662, 0.774798572063446, 0.7841764688491821, 0.7769119143486023, 0.7784969210624695, 0.785101056098938, 0.780610203742981], "val_loss": [1.3412935393197196, 0.9178845201219831, 0.743304865700858, 0.6819650615964618, 0.5875458547047206, 0.5734677144459316, 0.5657917431422642, 0.5333681106567383, 0.5079459803444999, 0.534905024937221, 0.5472201960427421, 0.47731259890965055, 0.4998722927910941, 0.4596494606563023, 0.44999660764421734, 0.48552538667406353, 0.462360109601702, 0.4617208412715367, 0.4273366246904646, 0.44047179392405916, 0.4357849104063852, 0.47501167229243685, 0.44115582534245085, 0.5202572516032627], "val_accuracy": [0.5540000200271606, 0.612666666507721, 0.6653333306312561, 0.6863333582878113, 0.7336666584014893, 0.7350000143051147, 0.7446666955947876, 0.765999972820282, 0.7746666669845581, 0.7513333559036255, 0.7609999775886536, 0.7906666398048401, 0.7773333191871643, 0.7983333468437195, 0.8080000281333923, 0.7666666507720947, 0.7993333339691162, 0.8029999732971191, 0.8183333277702332, 0.815666675567627, 0.8063333630561829, 0.778333306312561, 0.793666660785675, 0.7689999938011169]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1326922085212443, 1.4379192626613273, 1.1428707230990165, 0.9768570295619045, 0.8678868687022174, 0.8166134215664035, 0.7759375459466706, 0.7470279719536378, 0.7702486389789599, 0.6982833501716662, 0.6790671460916022, 0.6868367339043396, 0.6712448202450483, 0.6535478632416408, 0.6331735296712938, 0.633947129813892, 0.6348468814905781, 0.603567168933368, 0.5964198697984746, 0.5944992239291658], "accuracy": [0.302469938993454, 0.49108439683914185, 0.5982036590576172, 0.6458855867385864, 0.6884163022041321, 0.6984546184539795, 0.7117950320243835, 0.7343811988830566, 0.7153612375259399, 0.7442874312400818, 0.7559106945991516, 0.7411174178123474, 0.7478536367416382, 0.7613261342048645, 0.7656848430633545, 0.7613261342048645, 0.7598732113838196, 0.7799497842788696, 0.7771760821342468, 0.7777044177055359], "val_loss": [1.3210929121289934, 0.8451436076845441, 0.747815591948373, 0.6277646337236676, 0.6192967210497174, 0.5741697038922992, 0.563137241772243, 0.5634296110698155, 0.505397013255528, 0.5017777511051723, 0.5048274312700544, 0.5217229468481881, 0.4739983252116612, 0.4663922275815691, 0.44740043367658344, 0.4681985548564366, 0.46033317702157156, 0.4313095211982727, 0.48592218330928255, 0.44292947224208284], "val_accuracy": [0.5806666612625122, 0.6620000004768372, 0.6423333287239075, 0.7263333201408386, 0.7176666855812073, 0.7360000014305115, 0.7549999952316284, 0.734000027179718, 0.7770000100135803, 0.7699999809265137, 0.7643333077430725, 0.7459999918937683, 0.800000011920929, 0.7803333401679993, 0.812666654586792, 0.7860000133514404, 0.7910000085830688, 0.8050000071525574, 0.7760000228881836, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 3, 2, 3, 0, 2], [7, 68, 56, 45]], "fitness": -0.3205714225769043, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, sigma))", "other_info": {"loss": [2.300961943885764, 2.3020585296554272, 2.30190730013033, 2.301896938479666, 2.3010387918212554, 2.300915145130835, 2.3007010087486996, 2.2981163608934962, 2.3001687640385495, 2.2988490690219483, 2.298016154046513, 2.296956746868879, 2.2974283877868915, 2.2976726338123648, 2.2961530302178983, 2.2962164389474626, 2.2963791985033746, 2.2953360922159285, 2.296258778352275, 2.2946609683938077, 2.2943092973366737, 2.294031616939514, 2.293710896462151, 2.292824415719079, 2.2920000326395695, 2.2924465818837207, 2.291597544729686, 2.2929242776133334, 2.2914529856658015, 2.2918067595363842, 2.2903087939631592, 2.2926287432199364, 2.289417204147065, 2.2898676335898216, 2.2892977425513914, 2.288059132462243, 2.289538692820263, 2.2885615493107814, 2.2875806233508476, 2.2881954416953465, 2.2869827688456748, 2.28675467866271, 2.285015285637054, 2.2856765002496426, 2.285605768281329, 2.2838850538444997, 2.2848007809358455, 2.283572826277169, 2.2833836079588528, 2.2824264149293607, 2.283025351560757, 2.282504802870634, 2.282130157911326, 2.2818899654110805, 2.2825052921467486, 2.2807842626421757, 2.280784504367313, 2.280102063604649, 2.2807610937160603, 2.279699403911203, 2.2793263689937246, 2.2795916892250596, 2.278531129601735, 2.278250138426753, 2.2782115255758164, 2.2779032328125353, 2.277271902902865, 2.275882666845678, 2.277094069536194, 2.2761047777955117, 2.276004786819531, 2.2750475524738087, 2.275227468468179, 2.2749686744691453, 2.273225630247645, 2.273838833795169, 2.2751779145631397, 2.2740461836401593, 2.2715204459580733, 2.271220080872348, 2.272291675424532, 2.2705570873945238, 2.2709288905404104, 2.270875812663284, 2.2702782901050456, 2.2704857017039433, 2.2680807196153956, 2.2705185171824405, 2.2690792103579582, 2.26878453850384, 2.2667684926647853, 2.268293513283045, 2.26698603584089, 2.266671921205149, 2.2663350511519917, 2.2663958479841355, 2.263982852216032, 2.2650066119899304, 2.263657795486984, 2.26347878570995], "accuracy": [0.09642054885625839, 0.08955223858356476, 0.09470347315073013, 0.09391097724437714, 0.09655263274908066, 0.09628847241401672, 0.09536388516426086, 0.10170386731624603, 0.09919429570436478, 0.10289261490106583, 0.10051512718200684, 0.1026284471154213, 0.10540219396352768, 0.10593052208423615, 0.10632677376270294, 0.10315678268671036, 0.10421344637870789, 0.10685510188341141, 0.10408136248588562, 0.10857218503952026, 0.11161009222269058, 0.11081759631633759, 0.11636507511138916, 0.11847840249538422, 0.11900673806667328, 0.11702549457550049, 0.12019548565149307, 0.11438383162021637, 0.11147800832986832, 0.11610091477632523, 0.11728965491056442, 0.11768590658903122, 0.12561088800430298, 0.11728965491056442, 0.12059172987937927, 0.12468630075454712, 0.12534672021865845, 0.12851670384407043, 0.12653546035289764, 0.12032756209373474, 0.12481838464736938, 0.1352529376745224, 0.13195087015628815, 0.13340377807617188, 0.13710209727287292, 0.14529123902320862, 0.13829085230827332, 0.1406683325767517, 0.13393211364746094, 0.1402720957994461, 0.14119666814804077, 0.1468762308359146, 0.14040417969226837, 0.14714039862155914, 0.13802668452262878, 0.14898955821990967, 0.14780081808567047, 0.15189538896083832, 0.14859332144260406, 0.14793290197849274, 0.151234969496727, 0.15334829688072205, 0.15374454855918884, 0.1546691358089447, 0.15031039714813232, 0.15229164063930511, 0.15770703554153442, 0.16602826118469238, 0.15493330359458923, 0.16232994198799133, 0.16140536963939667, 0.16589617729187012, 0.15691454708576202, 0.16880200803279877, 0.16642451286315918, 0.16655659675598145, 0.15849953889846802, 0.16919825971126556, 0.1682736724615097, 0.16682076454162598, 0.17131158709526062, 0.1748778223991394, 0.17276449501514435, 0.175670325756073, 0.1706511676311493, 0.1768590658903122, 0.18161405622959137, 0.1736890822649002, 0.17223615944385529, 0.17963281273841858, 0.18940694630146027, 0.18016114830970764, 0.1868973672389984, 0.190859854221344, 0.19019944965839386, 0.18795403838157654, 0.19191652536392212, 0.190859854221344, 0.190859854221344, 0.19270901381969452], "val_loss": [1.970017910003662, 1.9696480887276786, 1.9692844663347517, 1.96892363684518, 1.968557357788086, 1.9681879452296667, 1.967824935913086, 1.9674581118992396, 1.9670967374529158, 1.9667316164289201, 1.9663706507001604, 1.9660073689052038, 1.9656431334359306, 1.9652814865112305, 1.9649216788155692, 1.9645579201834542, 1.9641987255641393, 1.9638336726597376, 1.9634720938546317, 1.9631106512887138, 1.9627460752214705, 1.9623846326555525, 1.9620254380362374, 1.9616667883736747, 1.961305754525321, 1.9609450612749373, 1.9605896132332938, 1.9602270126342773, 1.959866659981864, 1.9595048768179757, 1.959143842969622, 1.9587844439915247, 1.9584264074053084, 1.9580673490251814, 1.9577109473092216, 1.9573522295270647, 1.9569927624293737, 1.9566285950796944, 1.9562675612313407, 1.955909320286342, 1.955549853188651, 1.9551921572004045, 1.9548307827540807, 1.9544692039489746, 1.954110758645194, 1.9537508147103446, 1.9533912113734655, 1.9530348777770996, 1.952676500592913, 1.9523160117013114, 1.9519534792218889, 1.9515915598188127, 1.9512274605887276, 1.9508641106741769, 1.9505039623805456, 1.950141770499093, 1.9497810772487096, 1.9494202477591378, 1.9490605763026647, 1.948697566986084, 1.948335920061384, 1.9479748862130302, 1.9476101057870048, 1.9472430774143763, 1.946875776563372, 1.9465109280177526, 1.9461468287876673, 1.9457815715244837, 1.9454165867396764, 1.945047446659633, 1.9446783746991838, 1.9443088259015764, 1.9439363479614258, 1.9435667991638184, 1.943195070539202, 1.9428295407976424, 1.942455564226423, 1.942084789276123, 1.941711493900844, 1.9413402421133858, 1.9409689222063338, 1.9405946731567383, 1.940220832824707, 1.93984774180821, 1.9394726753234863, 1.9390991074698312, 1.938720430646624, 1.9383463859558105, 1.9379709107535226, 1.937593936920166, 1.9372143064226424, 1.9368382862636022, 1.93645783833095, 1.9360756874084473, 1.9356987135750907, 1.9353195599147253, 1.9349333218165807, 1.9345505578177316, 1.9341627529689245, 1.9337749481201172], "val_accuracy": [0.038333334028720856, 0.041999999433755875, 0.04466666653752327, 0.04633333161473274, 0.04866666719317436, 0.052000001072883606, 0.056333333253860474, 0.059333331882953644, 0.061666667461395264, 0.06400000303983688, 0.06666667014360428, 0.06833333522081375, 0.07133333384990692, 0.07433333247900009, 0.07833333313465118, 0.08266666531562805, 0.08366666734218597, 0.08666666597127914, 0.09000000357627869, 0.09200000017881393, 0.0949999988079071, 0.09600000083446503, 0.0989999994635582, 0.10233332961797714, 0.10566666722297668, 0.10833333432674408, 0.11100000143051147, 0.11533333361148834, 0.11900000274181366, 0.12333333492279053, 0.12700000405311584, 0.12999999523162842, 0.13333334028720856, 0.13466666638851166, 0.1393333375453949, 0.14399999380111694, 0.15000000596046448, 0.1536666601896286, 0.15966667234897614, 0.16300000250339508, 0.16866666078567505, 0.17100000381469727, 0.17533333599567413, 0.179666668176651, 0.18333333730697632, 0.1850000023841858, 0.1886666715145111, 0.1913333386182785, 0.195333331823349, 0.19699999690055847, 0.19966666400432587, 0.2029999941587448, 0.2070000022649765, 0.21199999749660492, 0.21566666662693024, 0.2163333296775818, 0.21899999678134918, 0.2213333398103714, 0.22633333504199982, 0.22966666519641876, 0.2329999953508377, 0.23733332753181458, 0.2423333376646042, 0.2433333396911621, 0.24533332884311676, 0.2486666738986969, 0.2513333261013031, 0.25466665625572205, 0.257999986410141, 0.26233333349227905, 0.2633333206176758, 0.26499998569488525, 0.26733332872390747, 0.27000001072883606, 0.27533334493637085, 0.27933332324028015, 0.28333333134651184, 0.2849999964237213, 0.2863333225250244, 0.28700000047683716, 0.28833332657814026, 0.2906666696071625, 0.2939999997615814, 0.296999990940094, 0.29899999499320984, 0.3019999861717224, 0.30399999022483826, 0.3063333332538605, 0.30799999833106995, 0.3096666634082794, 0.31166666746139526, 0.312333345413208, 0.31433331966400146, 0.3153333365917206, 0.3190000057220459, 0.320333331823349, 0.3226666748523712, 0.32499998807907104, 0.3266666531562805, 0.328000009059906]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [5, 3], [1, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 6, 3, 6, 7, 0, 0, 2, 2, 2, 2, 9, 4, 0, 6, 5, 6, 0, 1], [3, 1, 1, 0, 2, 3, 1, 2, 0, 0, 3, 0, 3], [96, 12, 93, 34, 46], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 19, 13, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.negative(grad))))), tf.math.add(alpha, alpha)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))))), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 2, 3, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(sigma), tf.math.negative(beta)), sigma))))", "other_info": {"loss": [2.3156724125402732, 3.1607730050112797, 10.21156927528729, 36.122497264341575, 105.93709477847987, 275.1811536940853, 638.3079986914888], "accuracy": [0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09932637959718704, 0.09681680053472519, 0.09721305221319199, 0.09721305221319199], "val_loss": [2.0214524269104004, 3.6972477776663646, 13.027111325945173, 41.21200343540737, 112.22780064174107, 273.7138235909598, 613.7093505859375], "val_accuracy": [0.0963333323597908, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 4, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [75, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 16, 9, 7, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.pow(tf.math.negative(sigma), tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17.476394670829325, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.308149516582489, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3170.469656808036, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [39], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [1, 3], [1, 7], [71], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 2, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020989529571008, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3020989529571008, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [75, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [75, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301122753391208, 2.302616818422623, 2.3028514250126877, 2.3032190338054654, 2.3027686348775154, 2.3030617031139737], "accuracy": [0.09602430462837219, 0.08796724677085876, 0.09259014576673508, 0.09008057415485382, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0], [0, 0, 1, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [7, 68, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.301122721900179, 2.3026168364040007, 2.3028514250126877, 2.3032190023144365, 2.3027686663685443, 2.303061671622945], "accuracy": [0.09602430462837219, 0.08796724677085876, 0.09259014576673508, 0.09008057415485382, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703852108546667, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1], [0, 1, 0, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301122753391208, 2.302616818422623, 2.3028514250126877, 2.3032190338054654, 2.3027686348775154, 2.3030617031139737], "accuracy": [0.09602430462837219, 0.08796724677085876, 0.09259014576673508, 0.09008057415485382, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.037142857909202576, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))), alpha)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301122753391208, 2.302616818422623, 2.3028514250126877, 2.3032190338054654, 2.3027686348775154, 2.3030617031139737], "accuracy": [0.09602430462837219, 0.08796724677085876, 0.09259014576673508, 0.09008057415485382, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), sigma))", "other_info": {"loss": [2.301122753391208, 2.302616818422623, 2.3028514250126877, 2.3032190338054654, 2.3027686348775154, 2.3030617031139737], "accuracy": [0.09602430462837219, 0.08796724677085876, 0.09259014576673508, 0.09008057415485382, 0.09232597798109055, 0.09113723784685135], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]