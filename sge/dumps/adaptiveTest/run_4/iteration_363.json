[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8157142996788025, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [1.9924374837853953, 1.6271919929875738, 1.5666959943898586, 1.0019043250295543, 0.8789714019548277, 0.8013109384731232, 0.732433906305011, 0.6889112020889845, 0.6643721219051343, 0.6281410104893674, 0.6307012614336595, 0.5902783099088088, 0.5839991689106225, 0.5521837544242829, 0.5556150088063352, 0.528258153066785, 0.5110066462548779, 0.5361653963619802, 0.50323421046435, 0.4944840347951099, 0.4887637970446281, 0.4745874155262096, 0.47184152922232264, 0.4545787937211921, 0.46743324626910765, 0.4632385614691094, 0.43371951784739293, 0.4356887058228581, 0.4271969991652343, 0.4248174368634499, 0.4263184554407452, 0.41264979731231993, 0.3884991821698257, 0.3906794578612457, 0.3982355688399548, 0.4028121380088919], "accuracy": [0.3283582031726837, 0.44749704003334045, 0.4970281422138214, 0.6357152462005615, 0.6645092964172363, 0.6911900639533997, 0.7207766771316528, 0.7317395210266113, 0.7376832365989685, 0.7588165402412415, 0.7565711140632629, 0.770439863204956, 0.780610203742981, 0.7946110367774963, 0.7852331399917603, 0.8001585006713867, 0.8075551390647888, 0.7955356240272522, 0.8117818236351013, 0.8101968169212341, 0.8190463781356812, 0.8235371708869934, 0.8206313848495483, 0.8315942287445068, 0.824329674243927, 0.8261788487434387, 0.837141752243042, 0.8358209133148193, 0.833179235458374, 0.8380662798881531, 0.8400475382804871, 0.8474441766738892, 0.8578787446022034, 0.8521991968154907, 0.8504821062088013, 0.8473120927810669], "val_loss": [1.142068317958287, 1.8774903161185128, 0.8274915218353271, 0.6152141775403704, 0.5858472415379116, 0.5967672041484288, 0.5075017043522426, 0.5238334281103951, 0.49909823281424387, 0.4743846995489938, 0.45858776569366455, 0.4331662229129246, 0.45633247920445036, 0.41763183048793245, 0.43987250328063965, 0.4237658211163112, 0.42095810174942017, 0.3835590396608625, 0.3857076678957258, 0.4053442137581961, 0.3662423236029489, 0.36789238452911377, 0.35077156339372906, 0.3689703345298767, 0.37430890117372784, 0.35382321051188875, 0.3710859588214329, 0.37960805211748394, 0.35855010577610563, 0.3478171484810965, 0.3254957028797695, 0.33450628178460257, 0.3676408444132124, 0.33597268377031597, 0.33605213676180157, 0.3241086006164551], "val_accuracy": [0.5106666684150696, 0.3840000033378601, 0.6556666493415833, 0.7300000190734863, 0.734333336353302, 0.7136666774749756, 0.781000018119812, 0.7523333430290222, 0.7509999871253967, 0.7793333530426025, 0.7926666736602783, 0.8180000185966492, 0.8003333210945129, 0.8220000267028809, 0.7883333563804626, 0.8096666932106018, 0.8063333630561829, 0.8379999995231628, 0.8286666870117188, 0.815666675567627, 0.8473333120346069, 0.840666651725769, 0.8539999723434448, 0.8420000076293945, 0.8253333568572998, 0.8553333282470703, 0.8396666646003723, 0.8339999914169312, 0.843666672706604, 0.8573333621025085, 0.8653333187103271, 0.8633333444595337, 0.8426666855812073, 0.859000027179718, 0.8586666584014893, 0.8646666407585144]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8140000104904175, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [1.9924369639944737, 1.6264288826326354, 1.4520423458142444, 1.0004177528711877, 0.8849654764373934, 0.7971700933221749, 0.7233152196958726, 0.6949783238311564, 0.6770280144391295, 0.6348288318563241, 0.6381973307350953, 0.581465676224164, 0.5694171019895375, 0.5776572009245198, 0.5592885118953588, 0.5221615498879362, 0.5169788088544706, 0.542137298058399, 0.49526091569277114, 0.478106626886749, 0.49543042249683344, 0.49603522821361395, 0.4579594680236677, 0.4635762711400133, 0.4526185354245196, 0.4608523086148356, 0.4347357276313892, 0.4275175593729426, 0.4348332769268335], "accuracy": [0.3283582031726837, 0.4453836977481842, 0.5336151123046875, 0.6400739550590515, 0.661471426486969, 0.69673752784729, 0.7218332886695862, 0.7302865982055664, 0.7371549606323242, 0.7621186375617981, 0.7549861073493958, 0.772288978099823, 0.7816668748855591, 0.7816668748855591, 0.7836481332778931, 0.8001585006713867, 0.8004226684570312, 0.7932901978492737, 0.8142913579940796, 0.8166688680648804, 0.8182538747787476, 0.8144234418869019, 0.8278959393501282, 0.8276317715644836, 0.832650899887085, 0.8290846943855286, 0.8348963260650635, 0.8411042094230652, 0.8321225643157959], "val_loss": [1.142117874962943, 1.8413451058523995, 0.7529193503516061, 0.6820347479411534, 0.586114730153765, 0.633588365146092, 0.5414371320179531, 0.5447659492492676, 0.5131695100239345, 0.5116810287748065, 0.4783774954932077, 0.4407520294189453, 0.4792121137891497, 0.41154853786740986, 0.4131685325077602, 0.43406849248068674, 0.4809960978371756, 0.38134812457220896, 0.38090674366269794, 0.3722600681441171, 0.4313098703111921, 0.3590989538601467, 0.3517083525657654, 0.34904474871499197, 0.3638706462723868, 0.34497502020427157, 0.362104560647692, 0.4354208878108433, 0.36104099239621845], "val_accuracy": [0.5109999775886536, 0.41100001335144043, 0.6836666464805603, 0.6946666836738586, 0.7450000047683716, 0.7013333439826965, 0.7543333172798157, 0.7459999918937683, 0.7419999837875366, 0.7563333511352539, 0.7646666765213013, 0.8050000071525574, 0.7916666865348816, 0.8080000281333923, 0.8159999847412109, 0.8029999732971191, 0.7726666927337646, 0.8443333506584167, 0.8443333506584167, 0.8516666889190674, 0.8026666641235352, 0.8399999737739563, 0.8533333539962769, 0.8576666712760925, 0.843999981880188, 0.8556666374206543, 0.8433333039283752, 0.8003333210945129, 0.8399999737739563]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 3, 0, 2, 0, 2, 2], [25, 13, 93, 29, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [82, 63, 57, 12]], "fitness": -0.16200000047683716, "mapping_values": [1, 21, 21, 14, 7, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.9003192169822802, 2.2230180616722666, 2.3025206203206245, 2.706296347702625, 2.306241577768433, 2.3036392963541936, 2.3037178604247908, 2.303440174075827, 2.303671710888912], "accuracy": [0.18478403985500336, 0.2106723040342331, 0.10408136248588562, 0.13736626505851746, 0.09959053993225098, 0.09760929644107819, 0.09615638852119446, 0.09457138925790787, 0.09787346422672272], "val_loss": [1.9445692471095495, 1.975755078451974, 1.9653783525739397, 1.9778673989432198, 1.9739514078412737, 1.9735498428344727, 1.9735940524509974, 1.9736614227294922, 1.9736778395516532], "val_accuracy": [0.10066666454076767, 0.09666666388511658, 0.09666666388511658, 0.10366666316986084, 0.10133333504199982, 0.10366666316986084, 0.10300000011920929, 0.10366666316986084, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.11628571152687073, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.9160818103880475, 2.2975791759967112, 2.30354547673811, 2.3031731499908874, 2.300378610807214, 2.417618408084719, 2.3031653736907067, 2.299311667605949, 2.3024918647285433, 2.3089388634597685], "accuracy": [0.18451987206935883, 0.15281997621059418, 0.09668471664190292, 0.1022322028875351, 0.10566636174917221, 0.16959451138973236, 0.09747721254825592, 0.1220446452498436, 0.19772817194461823, 0.09655263274908066], "val_loss": [1.9530868530273438, 1.9751801490783691, 1.9738779749189104, 1.973564556666783, 1.932135922568185, 1.974252768925258, 1.972458975655692, 1.9436805588858468, 1.9817630222865514, 1.9744810376848494], "val_accuracy": [0.10066666454076767, 0.10100000351667404, 0.10000000149011612, 0.10100000351667404, 0.22433333098888397, 0.08433333039283752, 0.09933333098888397, 0.14100000262260437, 0.10366666316986084, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 0, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [74, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.30326830932981, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [7, 5, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.8352080891699985e+30, 2.461110246620788, 2.810193086800999, 3.976733321826125, 6.069626797585518, 8.420314445566145], "accuracy": [0.06194690242409706, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0635059901646207, 2.226386478969029, 2.845055103302002, 4.410235132489886, 6.4023959296090265, 8.444724764142718], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 3, 6, 6, 5, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30326830932981, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 4, 5, 6, 7, 6, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 97, 99], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 0, 2, 1, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 70, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(sigma), alpha), tf.math.add(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.167280044760166e+25, 5.623089703806891, 12.62882444613236, 19.826339313304025, 27.036204509258962, 34.23356320712828], "accuracy": [0.0956280529499054, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.7883321898324147, 8.2799072265625, 14.447808401925224, 20.6284305027553, 26.797430310930526, 32.96776253836496], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 5, 5, 6, 7, 0, 0, 8, 5, 2, 6, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 63, 60], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.8362613284654914e+30, 2.4611104220573092, 2.8101933611823333, 3.9767342395376866, 6.069628003188065, 8.420315579243182], "accuracy": [0.06194690242409706, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0635061264038086, 2.226386615208217, 2.8450554438999722, 4.410235677446638, 6.402397019522531, 8.444725581577845], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 3, 0, 2, 5, 9, 2, 9, 3, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29, 7], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 14, 7, 5, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 5, 6, 1, 0, 0, 2, 5, 2, 2, 4, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2, 2, 0], [96, 12, 93, 31], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.303544900515265, 2.302957048914956, 2.303040472240244, 2.3030689790846886, 2.3029301397048756, 2.3029689213477265, 2.302968582252328, 2.3029971326488656], "accuracy": [0.09140139818191528, 0.0948355570435524, 0.09325055778026581, 0.0956280529499054, 0.09708096832036972, 0.09536388516426086, 0.09536388516426086, 0.09219389408826828], "val_loss": [1.9736103330339705, 1.9737931660243444, 1.973795005253383, 1.9736943926130022, 1.9736802237374442, 1.9735651016235352, 1.9736298833574568, 1.973656177520752], "val_accuracy": [0.09733333438634872, 0.0963333323597908, 0.10366666316986084, 0.10366666316986084, 0.10000000149011612, 0.10366666316986084, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 9, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 4, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 2, 15, 15, 9, 6, 0, 3, 1, 1, 0, 0, 5, 3, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(tf.math.negative(alpha), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 1, 0], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 2, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 7, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 13, 8, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.303188847229544, 2.302308083430824, 2.3022907417936254, 2.3025415578554207, 2.30295555624019, 2.30287573832279, 2.3034669352150896], "accuracy": [0.09959053993225098, 0.10289261490106583, 0.09787346422672272, 0.09998679161071777, 0.10447761416435242, 0.09840179979801178, 0.09998679161071777], "val_loss": [1.9736958231244768, 1.9737302916390556, 1.973989759172712, 1.9741623061043876, 1.9741830825805664, 1.9751129831586565, 1.9764891351972307], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.09666666388511658, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 57, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 8, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [71, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), grad)))))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [6, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [8, 0, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [2, 3, 5, 6, 1, 0, 0, 2, 5, 2, 2, 4, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 31], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 3, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [65, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08994849026203156, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [4, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3047467880339716, 2.3041584808844395, 2.303543859768254, 2.3023128205633054, 2.302715969280938, 2.303445751577903], "accuracy": [0.08466517180204391, 0.0874389111995697, 0.08928807079792023, 0.09285431355237961, 0.09166556596755981, 0.08955223858356476], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]