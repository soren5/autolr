[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.758571445941925, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.2993701426360302, 2.274596809348914, 2.2298695342321246, 2.1527079974403627, 2.020031506626944, 1.8105209005538734, 1.5702841302989858, 1.4054777807547605, 1.3535584131362275, 1.3378958226415412, 1.3232709130496396, 1.1900588725740884, 1.0397220822357467, 0.9288429556552996, 0.9024311655847199, 0.9090679358371638, 0.910775820702893, 0.8810883345794148, 0.8274529238717746, 0.7984341224186834, 0.7869728546038028, 0.7774232844351588, 0.7872693860897724, 0.7623628324615862, 0.7560734951721285, 0.7349601119122942, 0.7195025275663977, 0.7055445171350406, 0.6885056258066692, 0.6904795636606097, 0.6918583808479339, 0.6774915999519732, 0.662365699330845, 0.6597804725288227, 0.6513513795703771], "accuracy": [0.09840179979801178, 0.16655659675598145, 0.27578920125961304, 0.35781270265579224, 0.4111742079257965, 0.43930789828300476, 0.49029189348220825, 0.5081230998039246, 0.5340113639831543, 0.5605600476264954, 0.5819574594497681, 0.6185444593429565, 0.6493197679519653, 0.6662263870239258, 0.6634526252746582, 0.677189290523529, 0.6900013089179993, 0.7009642124176025, 0.7003037929534912, 0.7047945857048035, 0.7098137736320496, 0.7148329019546509, 0.7102100253105164, 0.7199841737747192, 0.7191916704177856, 0.7290979027748108, 0.7271166443824768, 0.7309470176696777, 0.7423061728477478, 0.7446836829185486, 0.7498348951339722, 0.7516840696334839, 0.7515519857406616, 0.7532690763473511, 0.7539294958114624], "val_loss": [1.957437242780413, 1.9235757419041224, 1.869131428854806, 1.7735024179731096, 1.6057252883911133, 1.3597196170261927, 1.105905600956508, 0.9287699631282261, 0.814461316381182, 0.750788654599871, 0.7015865530286517, 0.6707008055278233, 0.6295649494443621, 0.6266653537750244, 0.654058541570391, 0.6854782274791172, 0.6795992170061383, 0.6325475999287197, 0.5844037873404366, 0.560870919908796, 0.5495182275772095, 0.5437649658748082, 0.5413919687271118, 0.5377600193023682, 0.5318760360990252, 0.5260452713285174, 0.5182220765522548, 0.5113177980695452, 0.5111314228602818, 0.5131215027400425, 0.5087940522602626, 0.49825286865234375, 0.4868811368942261, 0.4792494944163731, 0.4762729065758841], "val_accuracy": [0.14433333277702332, 0.3630000054836273, 0.42100000381469727, 0.4586666524410248, 0.5149999856948853, 0.5776666402816772, 0.621666669845581, 0.6629999876022339, 0.6736666560173035, 0.6936666369438171, 0.7070000171661377, 0.7243333458900452, 0.7310000061988831, 0.734333336353302, 0.7326666712760925, 0.7363333106040955, 0.7350000143051147, 0.7363333106040955, 0.7450000047683716, 0.7473333477973938, 0.7563333511352539, 0.762666642665863, 0.762333333492279, 0.765666663646698, 0.7703333497047424, 0.7666666507720947, 0.7699999809265137, 0.7793333530426025, 0.7873333096504211, 0.7900000214576721, 0.7873333096504211, 0.7866666913032532, 0.7816666960716248, 0.7786666750907898, 0.781333327293396]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], [4, 5, 9, 2, 5, 6, 0, 2, 2, 6, 4, 8, 8, 2, 7, 8, 1, 7, 3, 0], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 2, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7582857012748718, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 9, 7, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.2993701426360302, 2.274596840839943, 2.229869502741096, 2.1527079344583053, 2.0200317652627633, 1.8105208826197325, 1.5702834306942899, 1.4054787363815207, 1.3535600631244273, 1.337896615050299, 1.3232725637621332, 1.1900930532201752, 1.0397869061564, 0.9289022387609254, 0.9025273098213137, 0.9091272106370307, 0.9108480360797367, 0.881099691535535, 0.8274660886491311, 0.7984289510564057, 0.7869220439075495, 0.7774837238519986, 0.7873381216292054, 0.7623825685191605, 0.7561175327464149, 0.7349293224721175, 0.7194288106028273, 0.7054317139710071, 0.6885961097591446, 0.6905878757551881, 0.6918932811585022, 0.6774268278891715, 0.6622271497472245, 0.6598711043631695, 0.6513833309744076], "accuracy": [0.09840179979801178, 0.16655659675598145, 0.27578920125961304, 0.35781270265579224, 0.4111742079257965, 0.43930789828300476, 0.49029189348220825, 0.5081230998039246, 0.5340113639831543, 0.5604279637336731, 0.5820895433425903, 0.6185444593429565, 0.6494518518447876, 0.6662263870239258, 0.6631884574890137, 0.6770572066307068, 0.6893408894538879, 0.7009642124176025, 0.700700044631958, 0.7043983340263367, 0.7102100253105164, 0.7150970697402954, 0.7104741930961609, 0.7194558382034302, 0.7189275026321411, 0.728701651096344, 0.7268524765968323, 0.7312111854553223, 0.7416457533836365, 0.7442874312400818, 0.7499669790267944, 0.7515519857406616, 0.7516840696334839, 0.7526086568832397, 0.7535332441329956], "val_loss": [1.957437242780413, 1.9235756737845284, 1.869131428854806, 1.7735024860927038, 1.6057254586900984, 1.3597190380096436, 1.1059011731828963, 0.9287634917667934, 0.8144474029541016, 0.7507787772587368, 0.7015705108642578, 0.6707169498716082, 0.6295942068099976, 0.6267027173723493, 0.6541141101292202, 0.6854794876916068, 0.6795435122081211, 0.6324969019208636, 0.5843742745263236, 0.5608188765389579, 0.5494463103158134, 0.543696369443621, 0.5413612127304077, 0.5377375568662371, 0.5318814856665475, 0.5259759255817958, 0.5180858884538923, 0.5112891367503575, 0.5112684794834682, 0.513291733605521, 0.5088606221335275, 0.4982477256229946, 0.48679895060403006, 0.47914600372314453, 0.4761344535010202], "val_accuracy": [0.14433333277702332, 0.3630000054836273, 0.42100000381469727, 0.4586666524410248, 0.5149999856948853, 0.5776666402816772, 0.621666669845581, 0.6629999876022339, 0.6736666560173035, 0.6936666369438171, 0.7070000171661377, 0.7243333458900452, 0.7310000061988831, 0.734666645526886, 0.7329999804496765, 0.7366666793823242, 0.7353333234786987, 0.737333357334137, 0.7450000047683716, 0.7476666569709778, 0.7563333511352539, 0.762666642665863, 0.762666642665863, 0.765666663646698, 0.7710000276565552, 0.7666666507720947, 0.7703333497047424, 0.7793333530426025, 0.7879999876022339, 0.7900000214576721, 0.7876666784286499, 0.7873333096504211, 0.781333327293396, 0.777999997138977, 0.781000018119812]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [7, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [9, 63, 56, 12, 33, 7, 15]], "fitness": -0.7222856879234314, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302352540764779, 2.2966210661059154, 2.28843428946568, 2.274215297550337, 2.2572369768225586, 2.234691310788599, 2.20822609656554, 2.174727000360082, 2.1325600726052425, 2.074180373268798, 2.001118757752789, 1.9055383341140153, 1.79527144919549, 1.6724663500174273, 1.560821096532774, 1.482068570330001, 1.4043947164455912, 1.380641858732979, 1.3645803848073121, 1.3698770326787706, 1.373013701248068, 1.3188297128192406, 1.2441707634576291, 1.161961709440597, 1.0892426101617558, 0.9986272266417793, 0.9528139449066537, 0.9394409620861068, 0.9225636551944162, 0.9301325351003769, 0.9294786171638545, 0.925851021940682, 0.9125900918214612, 0.8956233454402475, 0.8641456279063725, 0.8361408971304183, 0.8208928250082417], "accuracy": [0.09351472556591034, 0.10460969805717468, 0.13036586344242096, 0.16880200803279877, 0.21304979920387268, 0.261260062456131, 0.31422534584999084, 0.3447364866733551, 0.36745476722717285, 0.3881917893886566, 0.4041738212108612, 0.42464667558670044, 0.4419495463371277, 0.4500066041946411, 0.4699511229991913, 0.4873860776424408, 0.5126138925552368, 0.529388427734375, 0.537709653377533, 0.5412759184837341, 0.5559371113777161, 0.5737683176994324, 0.5951657891273499, 0.6205257177352905, 0.6361114978790283, 0.6489235162734985, 0.6495839357376099, 0.646149754524231, 0.6556597352027893, 0.6520935297012329, 0.6686038970947266, 0.6811517477035522, 0.6791704893112183, 0.6807554960250854, 0.6900013089179993, 0.6930392384529114, 0.700171709060669], "val_loss": [1.967928682054792, 1.9611902918134416, 1.950376374380929, 1.9357755524771554, 1.917625835963658, 1.895749500819615, 1.8686237335205078, 1.8333420753479004, 1.7862824712480818, 1.7233518191746302, 1.6403882844107491, 1.5345995426177979, 1.4079383781978063, 1.2706026349748885, 1.1391513688223702, 1.027043172291347, 0.9373363086155483, 0.8651769842420306, 0.81147187096732, 0.7840297392436436, 0.756416916847229, 0.7159371886934552, 0.7066544975553241, 0.7001742465155465, 0.6713829892022269, 0.6457056488309588, 0.6468423434666225, 0.6615228482655117, 0.6747226374489921, 0.6863161325454712, 0.6945843185697284, 0.6914522477558681, 0.6722357613699776, 0.6442407710211617, 0.615699120930263, 0.5939806529453823, 0.5819401059831891], "val_accuracy": [0.0533333346247673, 0.1066666692495346, 0.21799999475479126, 0.3240000009536743, 0.37033334374427795, 0.3956666588783264, 0.4166666567325592, 0.42633333802223206, 0.4490000009536743, 0.4690000116825104, 0.49433332681655884, 0.5226666927337646, 0.5523333549499512, 0.5809999704360962, 0.609000027179718, 0.6396666765213013, 0.6633333563804626, 0.6713333129882812, 0.6733333468437195, 0.6786666512489319, 0.6866666674613953, 0.7086666822433472, 0.7129999995231628, 0.7126666903495789, 0.7160000205039978, 0.7226666808128357, 0.7256666421890259, 0.7083333134651184, 0.7026666402816772, 0.7129999995231628, 0.7390000224113464, 0.7429999709129333, 0.7383333444595337, 0.7416666746139526, 0.7390000224113464, 0.7426666617393494, 0.7393333315849304]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7039999961853027, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.299591566199687, 2.27617689099184, 2.2340596049075367, 2.1615257485195345, 2.0330327180996703, 1.811786964773864, 1.5517958207861653, 1.400981751383886, 1.3864216175786004, 1.3477992932747038, 1.1732748186804, 0.9869536803209896, 0.9344274328290637, 0.9292873273656637, 0.9266592434935519, 0.871710524590827, 0.8231369063460895, 0.812205352882085, 0.8248306679026546, 0.8266508174515703, 0.8050116243977762, 0.7785635046624488, 0.754096286825264, 0.7345296111577349, 0.7514986085176877, 0.748751636501537, 0.7444528816414232, 0.725744445113584, 0.7037545367789984, 0.6944976878707845, 0.695437545577029, 0.6908765875069756, 0.6756659807813733, 0.6736723165533499, 0.6605850388943606, 0.6489858638892289, 0.6306502023361709, 0.6387310454937067, 0.6344385037899584, 0.6256708227695333, 0.6217054924976242, 0.6108756623704593, 0.599595317514959, 0.5968439591212783, 0.5802025042032412, 0.5797877925781605, 0.5700542463004203, 0.5640675056139712, 0.5643517970172816, 0.5594975647988053, 0.5537252963148229, 0.558460300711278, 0.5474718877069702, 0.5470006929223626, 0.5363451495319861, 0.5292842653150084, 0.530222517679459, 0.5196145895748973, 0.5283175882347161, 0.5152790532325001, 0.5147940182430775, 0.5071172126532073, 0.5130627983951014, 0.5100219859234204, 0.501748902513335, 0.5023132087398341, 0.49512438954552485, 0.4945922132338893, 0.4902452584176472, 0.4928608605213263, 0.47372613457357404, 0.4771246816645587, 0.4809589024311862, 0.4681100686385946, 0.4710222519171504, 0.4695311550687191, 0.46644252414291465, 0.4523484768640442, 0.45050916228044335, 0.4446386288910053, 0.4471219124385883, 0.44701828215856276, 0.43722936705890475, 0.43976962010559073, 0.4366897341558222, 0.4241592979048536, 0.4341400230974805, 0.4410694950780439], "accuracy": [0.09800554811954498, 0.16232994198799133, 0.2678642272949219, 0.35279354453086853, 0.4035134017467499, 0.4344208240509033, 0.486989825963974, 0.5089156031608582, 0.538237988948822, 0.5646545886993408, 0.617751955986023, 0.6406022906303406, 0.6478668451309204, 0.6691322326660156, 0.6713775992393494, 0.6799629926681519, 0.6902654767036438, 0.7036058902740479, 0.6973979473114014, 0.6940959095954895, 0.7047945857048035, 0.7049266695976257, 0.7156254053115845, 0.7182670831680298, 0.7107383608818054, 0.7217012047767639, 0.7272487282752991, 0.7269845604896545, 0.7390040755271912, 0.7371549606323242, 0.735041618347168, 0.7371549606323242, 0.7404569983482361, 0.7428345084190369, 0.7508915662765503, 0.7568352818489075, 0.7547219395637512, 0.7578919529914856, 0.7578919529914856, 0.7652885913848877, 0.7671377658843994, 0.7691190242767334, 0.7720248103141785, 0.7745344042778015, 0.7778365015983582, 0.7812706232070923, 0.7852331399917603, 0.7817989587783813, 0.7865539789199829, 0.7800818681716919, 0.7921014428138733, 0.7877426743507385, 0.7825914621353149, 0.7876105904579163, 0.7947431206703186, 0.7994980812072754, 0.7979130744934082, 0.8037247657775879, 0.8021397590637207, 0.8045172095298767, 0.8055738806724548, 0.8088759779930115, 0.7981772422790527, 0.8063663840293884, 0.8088759779930115, 0.8084797263145447, 0.8140271902084351, 0.8156121969223022, 0.8131026029586792, 0.8101968169212341, 0.8186501264572144, 0.8162726163864136, 0.8127063512802124, 0.819442629814148, 0.8235371708869934, 0.8227446675300598, 0.8227446675300598, 0.8256505131721497, 0.8297450542449951, 0.8272355198860168, 0.8230088353157043, 0.832650899887085, 0.8348963260650635, 0.828292191028595, 0.8338396549224854, 0.8358209133148193, 0.8330471515655518, 0.8337075710296631], "val_loss": [1.958209446498326, 1.9262018884931291, 1.8750037465776717, 1.7845868383135115, 1.613464423588344, 1.3359173366001673, 1.0509158543178014, 0.8625901937484741, 0.7736806188310895, 0.7091322456087384, 0.6737349544252668, 0.647284984588623, 0.6771452256611415, 0.699104871068682, 0.6637119735990252, 0.6019986357007708, 0.577255197933742, 0.5706729888916016, 0.5718995162418911, 0.5741751364299229, 0.5678555965423584, 0.5462722437722343, 0.5320565189634051, 0.5401969807488578, 0.5476567915507725, 0.5442219632012504, 0.5340612786156791, 0.5219736099243164, 0.5094310896737235, 0.5006027391978672, 0.49479574816567556, 0.48367438997541157, 0.4678607838494437, 0.45998166288648334, 0.45450898579188753, 0.4488046169281006, 0.45014311586107525, 0.4545738697052002, 0.4537707396915981, 0.4474379675728934, 0.44110800538744244, 0.43705454894474577, 0.432008045060294, 0.4249254209654672, 0.41935851744243074, 0.4164251514843532, 0.41574043887002127, 0.4135172963142395, 0.4077414444514683, 0.40149422202791485, 0.3975079996245248, 0.3964729053633554, 0.3954213431903294, 0.3917544484138489, 0.38772393124444143, 0.3889054996626718, 0.3919468777520316, 0.39085016931806293, 0.3850649424961635, 0.3781868645123073, 0.37529036828449797, 0.373932557446616, 0.3713714565549578, 0.3711871930531093, 0.3740636536053249, 0.3754686883517674, 0.37383586168289185, 0.36981402124677387, 0.3643436942781721, 0.35979035070964266, 0.3567216396331787, 0.3546122227396284, 0.3536758933748518, 0.3513772317341396, 0.34974147592272076, 0.3473108410835266, 0.34382387569972445, 0.3435923457145691, 0.3463296890258789, 0.34714324133736746, 0.34528844697134836, 0.3434794545173645, 0.34228513070515226, 0.3407845837729318, 0.33837846347263884, 0.336111775466374, 0.3361489006451198, 0.3376554080418178], "val_accuracy": [0.13633333146572113, 0.3606666624546051, 0.4153333306312561, 0.44999998807907104, 0.5066666603088379, 0.5713333487510681, 0.6269999742507935, 0.6679999828338623, 0.6809999942779541, 0.7123333215713501, 0.715666651725769, 0.7323333621025085, 0.7133333086967468, 0.7356666922569275, 0.7276666760444641, 0.7390000224113464, 0.746999979019165, 0.7543333172798157, 0.7493333220481873, 0.746666669845581, 0.7490000128746033, 0.7526666522026062, 0.765666663646698, 0.765333354473114, 0.762333333492279, 0.7666666507720947, 0.7680000066757202, 0.7706666588783264, 0.7773333191871643, 0.7760000228881836, 0.7756666541099548, 0.7823333144187927, 0.7933333516120911, 0.7993333339691162, 0.8003333210945129, 0.8053333163261414, 0.796999990940094, 0.7933333516120911, 0.7996666431427002, 0.8036666512489319, 0.8063333630561829, 0.8083333373069763, 0.8080000281333923, 0.812666654586792, 0.8173333406448364, 0.8226666450500488, 0.8236666917800903, 0.8246666789054871, 0.8270000219345093, 0.8293333053588867, 0.8253333568572998, 0.8233333230018616, 0.8266666531562805, 0.8276666402816772, 0.8323333263397217, 0.8336666822433472, 0.8356666564941406, 0.8353333473205566, 0.8386666774749756, 0.8426666855812073, 0.8403333425521851, 0.8399999737739563, 0.8410000205039978, 0.8423333168029785, 0.8433333039283752, 0.843999981880188, 0.8476666808128357, 0.8476666808128357, 0.8479999899864197, 0.8513333201408386, 0.8526666760444641, 0.8536666631698608, 0.8526666760444641, 0.8566666841506958, 0.8583333492279053, 0.8583333492279053, 0.8633333444595337, 0.8636666536331177, 0.8600000143051147, 0.8603333234786987, 0.8619999885559082, 0.8669999837875366, 0.8683333396911621, 0.8663333058357239, 0.8636666536331177, 0.8636666536331177, 0.8650000095367432, 0.8606666922569275]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [26, 63, 56, 12]], "fitness": -0.6762857437133789, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2826750347438254, 2.1347153531782315, 1.6640104045170079, 1.3813063158823309, 1.0513768393239797, 0.9422071629810673, 0.8765565917838629, 0.8403544193560563, 0.8113336940215422, 0.7678974497319843, 0.7752552560260346, 0.7305936566858464, 0.7343962808578651, 0.6901503053355164, 0.6676464271252543, 0.656473967629401, 0.6262017207107272, 0.6149074772109351, 0.6069811551940282, 0.5910410276257272, 0.567441562919128, 0.562423313597741, 0.5561007063197674, 0.5383121422442148, 0.5364509600146634, 0.5230952032789216, 0.5326002780409569, 0.5187944101619683, 0.502159666919028, 0.5005866884555421, 0.49439628840106875, 0.4842987766851287, 0.471567078706469, 0.47502329974299834, 0.4539117432147631, 0.456925781588623, 0.4528361493216026, 0.44038972813203553, 0.43377044277735327, 0.4380426021370795, 0.4337602409475972, 0.41135078013974596, 0.41019403003525223, 0.39725969674927036, 0.3983877976068873, 0.39362441175539165, 0.38950722278731137, 0.38134087431841773, 0.3707546244570135, 0.38198861216415486, 0.3743030578114526, 0.3701009118459354], "accuracy": [0.14780081808567047, 0.3551710546016693, 0.46083739399909973, 0.5416721701622009, 0.643772304058075, 0.6515651941299438, 0.678642213344574, 0.6827367544174194, 0.7005679607391357, 0.7099458575248718, 0.7061154246330261, 0.7296261787414551, 0.7284374833106995, 0.7288337349891663, 0.7531369924545288, 0.7543256878852844, 0.7640998363494873, 0.7644960880279541, 0.7646281719207764, 0.7774402499198914, 0.7841764688491821, 0.783119797706604, 0.7843085527420044, 0.7988376617431641, 0.802271842956543, 0.8049134612083435, 0.7906485199928284, 0.8043851256370544, 0.8096684813499451, 0.8035926818847656, 0.8104609847068787, 0.8117818236351013, 0.8276317715644836, 0.8193105459213257, 0.8248580098152161, 0.8251221776008606, 0.8286884427070618, 0.8314621448516846, 0.832650899887085, 0.8342359066009521, 0.8342359066009521, 0.8416325449943542, 0.8425571322441101, 0.8500858545303345, 0.8504821062088013, 0.8475762605667114, 0.8487650156021118, 0.8520671129226685, 0.8569541573524475, 0.8487650156021118, 0.8602562546730042, 0.8576145768165588], "val_loss": [1.9008871487208776, 1.6127993379320418, 0.9512712274278913, 0.7115038463047573, 0.6577763046537127, 0.6829201834542411, 0.5801982368741717, 0.5857367515563965, 0.5422653641019549, 0.5707060098648071, 0.5375266415732247, 0.5222838776452201, 0.4910517420087542, 0.46483739784785677, 0.4587185893739973, 0.46228151662009104, 0.4423152038029262, 0.4341689263071333, 0.4293570688792637, 0.42003603492464336, 0.4079871688570295, 0.39486731801714214, 0.39305286748068674, 0.4009599770818438, 0.3817210538046701, 0.37776518719536917, 0.37121076243264334, 0.3683477555002485, 0.3639128293309893, 0.352135215486799, 0.34795056922095163, 0.35346769435065134, 0.35744685786111013, 0.350041253226144, 0.3409402200153896, 0.3374324270657131, 0.3377606187547956, 0.33417285340172903, 0.33127244881221224, 0.3249488983835493, 0.3163473776408604, 0.32003059557506014, 0.3183790019580296, 0.3234127334186009, 0.32509165150778635, 0.32475915125438143, 0.32923981121608187, 0.3267805916922433, 0.3165621416909354, 0.3088993515287127, 0.3177688717842102, 0.321485025542123], "val_accuracy": [0.3903333246707916, 0.515666663646698, 0.6620000004768372, 0.7049999833106995, 0.7070000171661377, 0.7286666631698608, 0.7386666536331177, 0.7363333106040955, 0.7493333220481873, 0.7583333253860474, 0.7526666522026062, 0.7673333287239075, 0.7870000004768372, 0.8016666769981384, 0.7893333435058594, 0.7926666736602783, 0.8073333501815796, 0.809333324432373, 0.8050000071525574, 0.8109999895095825, 0.812666654586792, 0.8259999752044678, 0.8326666951179504, 0.8330000042915344, 0.8346666693687439, 0.8356666564941406, 0.8333333134651184, 0.840666651725769, 0.8450000286102295, 0.8526666760444641, 0.8546666502952576, 0.8536666631698608, 0.8573333621025085, 0.8573333621025085, 0.8569999933242798, 0.8546666502952576, 0.856333315372467, 0.8579999804496765, 0.8576666712760925, 0.8616666793823242, 0.8673333525657654, 0.8713333606719971, 0.8679999709129333, 0.8706666827201843, 0.8683333396911621, 0.8676666617393494, 0.8733333349227905, 0.8676666617393494, 0.8713333606719971, 0.8700000047683716, 0.8733333349227905, 0.871999979019165]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.16599999368190765, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3067833214325124, 2.331628115547804, 2.3930829646738214, 2.525432473932039, 3.1779679369696567, 234.5097470130462, 3414.216573662557, 14749.733569087637, 17283.577525209268, 17057.98264399105, 16981.335106177146, 17597.644686550655], "accuracy": [0.08387266844511032, 0.04504028707742691, 0.014661206863820553, 0.021793685853481293, 0.0540219247341156, 0.08875974267721176, 0.08334434032440186, 0.11781799048185349, 0.10910051316022873, 0.10566636174917221, 0.10447761416435242, 0.10910051316022873], "val_loss": [1.9838218688964844, 2.024318422589983, 2.1004158428737094, 2.2425053460257396, 4.316816329956055, 586.5306047712054, 4465.958984375, 8595.436104910714, 8576.228515625, 8666.83900669643, 8848.5859375, 8700.123604910714], "val_accuracy": [0.009666666388511658, 0.004999999888241291, 0.004000000189989805, 0.03933333232998848, 0.09666666388511658, 0.10100000351667404, 0.16066665947437286, 0.1236666664481163, 0.12166666984558105, 0.09066666662693024, 0.09700000286102295, 0.09066666662693024]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 3, 7, 2, 5, 7, 0, 7, 4, 9], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 1, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 1, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028912332000955, 2.3014773421236523, 2.301904485178756, 2.3011512818384983, 2.301407921441778, 2.3004472286882907, 2.2999505980013857, 2.300374014943488, 2.3010021473170745, 2.3002283998279522, 2.3006396597843475, 2.300546107842009, 2.30060131473312, 2.300329726716358, 2.301232884352501, 2.3013828185571104, 2.300529909833012, 2.301260117227375, 2.300917842148506], "accuracy": [0.09153348207473755, 0.09272222965955734, 0.0956280529499054, 0.09417514503002167, 0.09074098616838455, 0.09470347315073013, 0.09576013684272766, 0.09285431355237961, 0.09734513610601425, 0.0936468094587326, 0.09391097724437714, 0.09351472556591034, 0.10342095047235489, 0.10302469879388809, 0.09602430462837219, 0.09694888442754745, 0.09747721254825592, 0.10342095047235489, 0.10170386731624603], "val_loss": [1.9702447482517786, 1.9701434544154577, 1.9700607572283064, 1.9700044223240443, 1.969975403376988, 1.9699855531964983, 1.970026969909668, 1.9700977461678642, 1.9701920236860002, 1.9703136852809362, 1.9704635483878, 1.970635073525565, 1.9708121163504464, 1.9710030555725098, 1.9712034634181432, 1.9713976723807198, 1.9715899739946638, 1.971764360155378, 1.971925939832415], "val_accuracy": [0.04066666588187218, 0.04399999976158142, 0.04933333396911621, 0.0533333346247673, 0.061666667461395264, 0.06833333522081375, 0.07266666740179062, 0.07500000298023224, 0.08266666531562805, 0.08799999952316284, 0.09533333033323288, 0.1003333330154419, 0.10333333164453506, 0.10533333569765091, 0.10366666316986084, 0.10233332961797714, 0.10133333504199982, 0.10333333164453506, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3065493584246037, 2.3295629951916412, 2.386352074475352, 2.5083084623213097, 2.9036270912061073, 7.450421422873474, 75338.47702753532, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08466517180204391, 0.04715361073613167, 0.0165103692561388, 0.009245806373655796, 0.008981640450656414, 0.02879408188164234, 0.09998679161071777, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.982961859021868, 2.0202114241463796, 2.093083926609584, 2.26476560320173, 3.078413963317871, 25.066377912248885, 7272061659.428572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01066666655242443, 0.00566666666418314, 0.004333333112299442, 0.004666666500270367, 0.008666666224598885, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 6, 2, 9, 0, 1, 4, 0, 8], [1, 2, 1, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 3, 2, 5, 2, 0, 2, 2, 6, 7], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 8, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50280882257.61822, 7504309823206.944, 131632754359268.27, 938925440808443.6, 4124651547064334.0, 1.3535579665711336e+16], "accuracy": [0.10196803510189056, 0.09906221181154251, 0.10434553027153015, 0.10091137140989304, 0.10276053100824356, 0.09945846349000931], "val_loss": [422226193846.8571, 22773748915053.715, 244489407505554.28, 1332770573011236.5, 4992356168237056.0, 1.4726670377437476e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [0, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 1, 0, 4, 2, 4, 1, 1, 1, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha)))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06419230997562408, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 9, 7, 4, 2, 6, 2, 1, 2, 4, 4, 2, 6], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 1, 2, 2, 3, 0, 3, 4], [52, 45, 59, 5], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 6, 0, 6, 2, 5, 0, 0, 4, 0, 8, 3, 3, 2, 8, 6, 7, 0, 3, 7, 8, 2, 3, 9, 4, 6, 8, 6, 8, 1, 9, 5, 6, 6], [1, 1, 0, 0, 3, 0, 2, 1, 1, 0, 2, 1, 2, 1, 3, 1, 3, 2, 1], [17, 63, 56, 12, 44, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 32, 32, 18, 14, 3, 1, 0, 0, 0, 0, 53, 34, 19, 6], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), beta))))))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.subtract(alpha, tf.math.add(beta, alpha)))), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), sigma), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.multiply(tf.math.add(tf.math.sqrt(beta), alpha), tf.math.add(alpha, tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), beta), tf.math.pow(alpha, beta))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), sigma)), tf.math.square(alpha))), tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, beta), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [4, 5, 2, 2, 5, 2, 0, 2, 2, 6, 7, 6, 1, 3, 5, 4, 0, 4, 7, 2, 4, 6, 4, 2, 0, 4, 2, 5, 9, 3, 2, 4, 7, 5, 4], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 1, 3, 5, 5, 3, 2, 3, 0, 4, 0, 0, 1, 2, 4], [52, 45, 87, 53, 91], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 34, 34, 19, 15, 2, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.negative(tf.math.add(beta, beta))))), tf.math.add(beta, grad))), alpha))))), tf.math.add(beta, tf.math.pow(alpha, alpha)))))))))))))), tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(sigma), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [224.21319093126047, 26306.77543989813, 449384.9192725532, 3181009.051116101, 13930309.472460706, 45642486.46361115], "accuracy": [0.10091137140989304, 0.09879804402589798, 0.10434553027153015, 0.10091137140989304, 0.10249637067317963, 0.09998679161071777], "val_loss": [1609.0916224888392, 78539.203125, 830827.9107142857, 4507622.714285715, 16847583.42857143, 49637456.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 3, 7, 5, 5, 7, 0, 7, 4, 9, 7, 0, 1, 7, 6, 6, 5, 6, 2, 5, 2, 3], [5, 5, 0, 3, 1, 2, 0, 4, 2, 3, 1, 0, 5, 3, 0, 4, 3, 4, 0, 1, 2, 5], [52, 45, 31, 26, 10, 25], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 6, 2, 5, 1, 3, 4, 0, 8], [1, 1, 3, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 55, 55, 33, 22, 6, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, beta)))), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), beta))), grad)))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.square(grad))))))))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta)))))))))))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [16, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.06542856991291046, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.302522609388477, 2.3004132764781264, 2.300501336888898, 2.2997089641567516, 2.3001542889037387, 2.299442635267764, 2.2990773733439083, 2.2996596900180126, 2.299520435397494, 2.2985099599881336, 2.2995534782412186, 2.299652950150572, 2.299531373900823, 2.299994730190468], "accuracy": [0.09338264167308807, 0.0948355570435524, 0.09998679161071777, 0.09628847241401672, 0.09655263274908066, 0.10210011899471283, 0.09906221181154251, 0.09615638852119446, 0.1026284471154213, 0.1014397069811821, 0.10276053100824356, 0.09959053993225098, 0.10157178342342377, 0.09932637959718704], "val_loss": [1.9696393694196428, 1.9691643714904785, 1.9688276563371931, 1.9688574245997839, 1.9689948899405343, 1.9690942764282227, 1.9691876683916365, 1.9691316059657507, 1.9691314697265625, 1.9691687992640905, 1.969313621520996, 1.96958555494036, 1.969883646283831, 1.9702176366533553], "val_accuracy": [0.04699999839067459, 0.05400000140070915, 0.05999999865889549, 0.06599999964237213, 0.0676666647195816, 0.07100000232458115, 0.07333333045244217, 0.07533333450555801, 0.07599999755620956, 0.07599999755620956, 0.07233333587646484, 0.0716666653752327, 0.07266666740179062, 0.07066666334867477]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.3030425566944226, 2.301849425256276, 2.3026582617817017, 2.3019219239027966, 2.3025435077169427, 2.3016300445156577], "accuracy": [0.09179764986038208, 0.09126931428909302, 0.09351472556591034, 0.08994849026203156, 0.09047681838274002, 0.09126931428909302], "val_loss": [1.970384120941162, 1.9703830310276575, 1.970381804874965, 1.9703808512006487, 1.9703798975263322, 1.9703787394932337], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 6, 0, 5, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 24, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 16, 11, 5, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.square(tf.math.pow(alpha, tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [2.303043262912235, 2.301851692515877, 2.3026620898941457, 2.301926858672975, 2.3025501474744026, 2.301637268904068], "accuracy": [0.09179764986038208, 0.09126931428909302, 0.0936468094587326, 0.09008057415485382, 0.09047681838274002, 0.09126931428909302], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 1, 8, 2, 8, 0, 3, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 10, 6, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.subtract(grad, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.subtract(alpha, alpha)), tf.math.sqrt(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303043262912235, 2.301851692515877, 2.3026620898941457, 2.301926858672975, 2.3025501474744026, 2.301637268904068], "accuracy": [0.09179764986038208, 0.09126931428909302, 0.0936468094587326, 0.09008057415485382, 0.09047681838274002, 0.09126931428909302], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]