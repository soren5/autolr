[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.258659653864548, 2.0645526754322336, 1.6310425362865986, 1.277927144454565, 1.0930234055556263, 0.9947087351262782, 0.9476581788444091, 0.8819606313537283, 0.8712264933464565, 0.8338092211970973, 0.8156515499462526, 0.7806836897119822, 0.7627107293267905, 0.743785692070611, 0.7272538925048587, 0.7144076400948806, 0.7178982247639925, 0.6960687001446503, 0.6948439506350129, 0.6927946515685421, 0.6783670525131382, 0.6605945364390665, 0.6696969177650187, 0.6547809719110382, 0.6515471353947825, 0.6542670187728438, 0.6247087123686564, 0.6422441593014474, 0.6334250422123007, 0.6248450310726869, 0.6199806287634753, 0.6126582044352787, 0.6140241593716875, 0.6005730307916246, 0.5971203033225947], "accuracy": [0.19561484456062317, 0.3929467797279358, 0.4888390004634857, 0.5583146214485168, 0.6219785809516907, 0.6454893946647644, 0.6670188903808594, 0.6833971738815308, 0.6894729733467102, 0.698190450668335, 0.7038700580596924, 0.7185312509536743, 0.7252674698829651, 0.7305507659912109, 0.7301545143127441, 0.7434949278831482, 0.7316074371337891, 0.7416457533836365, 0.7420420050621033, 0.7445515990257263, 0.7549861073493958, 0.7536653280258179, 0.7539294958114624, 0.7625148296356201, 0.7609298825263977, 0.7586844563484192, 0.7671377658843994, 0.7633073329925537, 0.7685906887054443, 0.774270236492157, 0.7765156626701355, 0.7753269076347351, 0.7705719470977783, 0.7775723338127136, 0.7815347909927368], "val_loss": [1.8535206658499581, 1.5248820781707764, 1.0544007165091378, 0.8269467353820801, 0.7250583171844482, 0.677912780216762, 0.6359225852148873, 0.6191447632653373, 0.5905980893543789, 0.570165855543954, 0.5663306372506278, 0.5361743313925607, 0.5223585367202759, 0.5193823575973511, 0.5107969045639038, 0.4973095655441284, 0.4908993755068098, 0.48502608707972933, 0.4818519013268607, 0.47871499402182444, 0.46574996198926655, 0.4693593297685896, 0.4661684036254883, 0.4596564599445888, 0.4742464678628104, 0.4569556542805263, 0.4458317245755877, 0.4796663352421352, 0.4438297748565674, 0.43788052456719534, 0.4413364274161203, 0.4360067844390869, 0.43478214740753174, 0.4278468745095389, 0.43008372613361906], "val_accuracy": [0.44733333587646484, 0.5976666808128357, 0.6356666684150696, 0.6890000104904175, 0.7160000205039978, 0.7096666693687439, 0.7329999804496765, 0.7400000095367432, 0.7423333525657654, 0.7553333044052124, 0.7486666440963745, 0.7633333206176758, 0.7710000276565552, 0.7689999938011169, 0.7773333191871643, 0.7876666784286499, 0.7829999923706055, 0.7943333387374878, 0.7929999828338623, 0.7993333339691162, 0.796999990940094, 0.7976666688919067, 0.8043333292007446, 0.7950000166893005, 0.7883333563804626, 0.812666654586792, 0.809333324432373, 0.7760000228881836, 0.8013333082199097, 0.8273333311080933, 0.809333324432373, 0.8240000009536743, 0.8163333535194397, 0.8149999976158142, 0.8193333148956299]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.258659685355577, 2.0645551451004223, 1.6310738729778738, 1.2779585149042232, 1.0928981459576927, 0.9946923377948147, 0.9476435890901264, 0.8816401067820554, 0.8722038615523013, 0.8343967078714921, 0.8150521844385354, 0.7809183678260458, 0.762779758102811, 0.7434146635804146, 0.7288494901791887, 0.7147298619857695, 0.7187874984306635, 0.6964129625514923, 0.6919756045572636, 0.693978867786215, 0.6786172186000992, 0.6601952056780216, 0.6696191379155119, 0.654514263870064, 0.6529107990754263, 0.6546366823237602, 0.624623698077229, 0.640673468188839, 0.6332543041759305, 0.6251719998740217, 0.6200655380559399, 0.6125338750114814, 0.6140080089535082, 0.6012546703280428, 0.5967292393817405], "accuracy": [0.19561484456062317, 0.3928146958351135, 0.48870691657066345, 0.5580504536628723, 0.6231673359870911, 0.6457535624504089, 0.6666226387023926, 0.6839255094528198, 0.6893408894538879, 0.6983225345611572, 0.7053229212760925, 0.717870831489563, 0.7253995537757874, 0.7314753532409668, 0.7301545143127441, 0.7429665923118591, 0.7300224304199219, 0.7384757399559021, 0.7436270117759705, 0.7428345084190369, 0.7552502751350403, 0.7519482374191284, 0.7508915662765503, 0.7617223858833313, 0.7613261342048645, 0.7589486241340637, 0.7685906887054443, 0.7618544697761536, 0.7692511081695557, 0.7730814814567566, 0.776251494884491, 0.7753269076347351, 0.7680623531341553, 0.7775723338127136, 0.780610203742981], "val_loss": [1.853520733969552, 1.5248936925615584, 1.0544264997754778, 0.8269917964935303, 0.7251178026199341, 0.6766845328467233, 0.636690786906651, 0.6196346623556954, 0.590530276298523, 0.569922958101545, 0.5686575514929635, 0.5362746374947684, 0.5230822563171387, 0.5195586000170026, 0.5112977198192051, 0.49804508686065674, 0.4898101602281843, 0.48390330587114605, 0.48282340594700407, 0.4786450351987566, 0.46619999408721924, 0.4676293304988316, 0.46715610367911203, 0.4612642526626587, 0.4780394860676357, 0.4563934462411063, 0.4454630102430071, 0.4776958738054548, 0.44312003680637907, 0.4381463953426906, 0.4422133479799543, 0.4363487788609096, 0.4345286914280483, 0.42806927646909443, 0.4300238149506705], "val_accuracy": [0.44733333587646484, 0.5976666808128357, 0.6349999904632568, 0.6886666417121887, 0.715666651725769, 0.7099999785423279, 0.7296666502952576, 0.7383333444595337, 0.7426666617393494, 0.7559999823570251, 0.7490000128746033, 0.762666642665863, 0.7696666717529297, 0.768666684627533, 0.7776666879653931, 0.7870000004768372, 0.784333348274231, 0.7953333258628845, 0.7926666736602783, 0.7956666946411133, 0.79666668176651, 0.7990000247955322, 0.8023333549499512, 0.7896666526794434, 0.7856666445732117, 0.8113333582878113, 0.8109999895095825, 0.7786666750907898, 0.8023333549499512, 0.82833331823349, 0.8073333501815796, 0.8243333101272583, 0.8186666369438171, 0.8146666884422302, 0.8183333277702332]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [29, 63, 56, 45]], "fitness": -0.7771428823471069, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2899658338284494, 2.2573353155902223, 2.2158211820932694, 2.1577543498124774, 2.0716918261453316, 1.9537836412286966, 1.8106103495143235, 1.6493626890748074, 1.5029932732878737, 1.3806330021488007, 1.290343379568131, 1.2175129871200876, 1.1673876088702557, 1.0989387027969482, 1.0555193630333637, 1.0276340751710302, 0.9974440455735871, 0.9795864043360484, 0.9492298485564833, 0.9375647418865234, 0.9225501756957178, 0.8960784178809278, 0.8851014316798421, 0.8724587108591024, 0.8530277757281877, 0.8497323635672818, 0.8223984192202136, 0.8276348067564404, 0.8227373845132272, 0.8147530330170604, 0.809648538640367, 0.7996675475335565, 0.7867847718913494, 0.7819691747328578, 0.7749183276357463, 0.7702717202970333, 0.7656450329549939, 0.7629736974931837, 0.7555682780861996, 0.7465235514962646, 0.7397489032300079, 0.7299838529334108, 0.728401442064412, 0.7309952737034556, 0.7298400876245258, 0.722614967544333, 0.7210645886806528, 0.7121438286355174, 0.7103696921718529, 0.7093681160091425, 0.7041958043714163, 0.7069709257537253, 0.7003138581239914, 0.6908203305868724, 0.6945742895700487, 0.6851815777904464, 0.6917652229134748, 0.6787957474225232, 0.6811308115386157, 0.6827197212742115, 0.6742263555353533, 0.683170579160288, 0.6740843636437556, 0.6665882079073183, 0.6584391708560451, 0.6601938118221045, 0.6705705288095466, 0.6559749244147792, 0.643113840430908, 0.6556782370403442, 0.6491335317789682, 0.6567120026713901, 0.6480403704539959], "accuracy": [0.12323339283466339, 0.2141064554452896, 0.2922995686531067, 0.3463214933872223, 0.38449347019195557, 0.42108044028282166, 0.45449742674827576, 0.48474442958831787, 0.5120856165885925, 0.5473517179489136, 0.5667679309844971, 0.5807687044143677, 0.6029586791992188, 0.6210539937019348, 0.6297714710235596, 0.6416589617729187, 0.6502443552017212, 0.6513010263442993, 0.6605468392372131, 0.6649055480957031, 0.6756042838096619, 0.6787742972373962, 0.6880200505256653, 0.6933034062385559, 0.6936996579170227, 0.700171709060669, 0.7046625018119812, 0.700700044631958, 0.7077004313468933, 0.7078325152397156, 0.7080966830253601, 0.7166820764541626, 0.7187954187393188, 0.7170783281326294, 0.7243428826332092, 0.7193237543106079, 0.7177387475967407, 0.7217012047767639, 0.7260599732398987, 0.7342491149902344, 0.7310791015625, 0.7347774505615234, 0.7383436560630798, 0.7349095344543457, 0.7362303733825684, 0.7363624572753906, 0.7366266250610352, 0.7453441023826599, 0.7382115721702576, 0.7408532500267029, 0.7432307600975037, 0.7420420050621033, 0.7473253011703491, 0.7452120184898376, 0.7486461400985718, 0.7508915662765503, 0.7510236501693726, 0.7553823590278625, 0.7524765729904175, 0.748778223991394, 0.7540615797042847, 0.7515519857406616, 0.752212405204773, 0.7557786107063293, 0.7586844563484192, 0.7630431652069092, 0.754589855670929, 0.7600052952766418, 0.7630431652069092, 0.759609043598175, 0.7646281719207764, 0.7601373791694641, 0.7643640041351318], "val_loss": [1.9401543481009347, 1.9063170296805245, 1.8601761545453752, 1.7920538357325964, 1.6921825408935547, 1.5576358863285609, 1.4003001621791296, 1.2396511690957206, 1.1024626663752966, 0.9944490024021694, 0.9136501720973423, 0.8529370512281146, 0.8057143517902919, 0.7651640857969012, 0.7347218309129987, 0.708759001323155, 0.6897476060049874, 0.6720637934548515, 0.655076265335083, 0.643199052129473, 0.6312170369284493, 0.6204757520130703, 0.6109143495559692, 0.6035257237298148, 0.5919569219861712, 0.5863730737141201, 0.5774568149021694, 0.5787453140531268, 0.5677120685577393, 0.5595933369227818, 0.5571625062397548, 0.550253186907087, 0.5465276071003505, 0.5403832367488316, 0.5371915442602975, 0.5332912717546735, 0.5307227202824184, 0.5254327058792114, 0.5225837571280343, 0.5178901978901455, 0.5184386457715716, 0.5123375313622611, 0.5071253435952323, 0.504962853022984, 0.5012067215783256, 0.49931648799351286, 0.49481795515332905, 0.4957159757614136, 0.4908805915287563, 0.4883172682353428, 0.4866710049765451, 0.48782232829502653, 0.481985296521868, 0.4790559836796352, 0.47959799425942556, 0.4753230128969465, 0.47511465208871023, 0.47287133761814665, 0.4723154476710728, 0.4713155542101179, 0.4667730842317854, 0.46582298619406565, 0.463815586907523, 0.46067678928375244, 0.460728509085519, 0.45798500946589876, 0.4575286252158029, 0.45485304083142963, 0.45370912551879883, 0.45534428528376986, 0.4522257532392229, 0.4489985023226057, 0.4512656586510794], "val_accuracy": [0.29366666078567505, 0.4103333353996277, 0.4569999873638153, 0.5016666650772095, 0.5370000004768372, 0.5706666707992554, 0.5920000076293945, 0.6203333139419556, 0.6389999985694885, 0.6700000166893005, 0.6773333549499512, 0.6856666803359985, 0.6956666707992554, 0.7023333311080933, 0.7059999704360962, 0.7173333168029785, 0.718666672706604, 0.7243333458900452, 0.7333333492279053, 0.7413333058357239, 0.7379999756813049, 0.7440000176429749, 0.749666690826416, 0.7446666955947876, 0.7516666650772095, 0.7483333349227905, 0.7596666812896729, 0.7486666440963745, 0.7543333172798157, 0.7603333592414856, 0.7586666941642761, 0.7706666588783264, 0.7713333368301392, 0.7680000066757202, 0.7703333497047424, 0.7673333287239075, 0.7716666460037231, 0.7770000100135803, 0.7720000147819519, 0.7829999923706055, 0.7676666378974915, 0.7820000052452087, 0.7863333225250244, 0.7853333353996277, 0.7893333435058594, 0.7826666831970215, 0.7906666398048401, 0.7900000214576721, 0.7946666479110718, 0.7916666865348816, 0.7913333177566528, 0.7950000166893005, 0.796999990940094, 0.8003333210945129, 0.7910000085830688, 0.7979999780654907, 0.7993333339691162, 0.7993333339691162, 0.8013333082199097, 0.7976666688919067, 0.8056666851043701, 0.7976666688919067, 0.8056666851043701, 0.8119999766349792, 0.8040000200271606, 0.8059999942779541, 0.8090000152587891, 0.812666654586792, 0.812666654586792, 0.8080000281333923, 0.8063333630561829, 0.8106666803359985, 0.8080000281333923]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7425714135169983, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.165138479614963, 1.3597131357405872, 0.9256053278002488, 0.8218168867908181, 0.7832453022653778, 0.7109088403453381, 0.6723841640691338, 0.6197322509418216, 0.6094384445742278, 0.5684900524404937, 0.5579859485652673, 0.5484872356287446, 0.5314294013168046, 0.5257339867161817, 0.5043742694418271, 0.48950130149295, 0.48249220763844997, 0.4729111674455147, 0.4642995786728278, 0.4601654309827134, 0.4614816299085966, 0.4585757261852405, 0.47105137896559823, 0.4624487048111194, 0.45449151138288785, 0.46850588730754256, 0.45226991513165593, 0.45959248356673665, 0.45679095717720963, 0.4641336256707302], "accuracy": [0.2685246467590332, 0.5453705191612244, 0.6635847091674805, 0.6948884129524231, 0.7078325152397156, 0.7316074371337891, 0.7491744756698608, 0.767930269241333, 0.7701756954193115, 0.7845727205276489, 0.7931581139564514, 0.7952714562416077, 0.7943468689918518, 0.7959318161010742, 0.8031964302062988, 0.8175934553146362, 0.8162726163864136, 0.8171972036361694, 0.8235371708869934, 0.8264430165290833, 0.8301413059234619, 0.8297450542449951, 0.8272355198860168, 0.8227446675300598, 0.8272355198860168, 0.8277638554573059, 0.8284242749214172, 0.8259146809577942, 0.8334434032440186, 0.8277638554573059], "val_loss": [1.2752208028520857, 0.6698500769478934, 0.5727379322052002, 0.5827653918947492, 0.5271588734218052, 0.4820873056139265, 0.45510079179491314, 0.4188778741019113, 0.40033077342169626, 0.40246241433279856, 0.3931699735777719, 0.3744965706552778, 0.37226091963904245, 0.37323994295937674, 0.361673755305154, 0.3465198448726109, 0.3506907650402614, 0.3410916669028146, 0.33021063464028494, 0.3504956364631653, 0.34118132080350605, 0.3442006025995527, 0.34373184612819124, 0.3478877374104091, 0.35845050641468595, 0.3642720324652536, 0.36192400966371807, 0.34529892035893034, 0.37510193245751516, 0.35515941040856497], "val_accuracy": [0.5926666855812073, 0.7213333249092102, 0.734000027179718, 0.7319999933242798, 0.7646666765213013, 0.7873333096504211, 0.7953333258628845, 0.8183333277702332, 0.8276666402816772, 0.8256666660308838, 0.8330000042915344, 0.8403333425521851, 0.8426666855812073, 0.8446666598320007, 0.8510000109672546, 0.8500000238418579, 0.856333315372467, 0.859333336353302, 0.8606666922569275, 0.8613333106040955, 0.8613333106040955, 0.859666645526886, 0.8583333492279053, 0.8579999804496765, 0.871999979019165, 0.8616666793823242, 0.8650000095367432, 0.8663333058357239, 0.8653333187103271, 0.8629999756813049]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [3, 4, 0], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7099999785423279, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1651377357181354, 1.3597429008248334, 0.9257119805380464, 0.821157205507913, 0.7824997738320609, 0.7105929235173821, 0.6712545717412832, 0.6202450385891671, 0.6136938624882097, 0.5692588426669701, 0.5557674821247246, 0.544187824086207, 0.5230426010816577, 0.5279504689227447, 0.4957001172060255, 0.4818958764055134, 0.4864115164406217, 0.4827023812643116, 0.46437950587590704, 0.4592994024819387, 0.4591421225461127, 0.4492461451599548, 0.43832274530982895, 0.45290086628297666, 0.4291859389201698, 0.4351178186916955, 0.4109051637937049, 0.43135055115493437, 0.4280690119573862, 0.43361546371780163], "accuracy": [0.2685246467590332, 0.5452384352684021, 0.6641130447387695, 0.6951525807380676, 0.7083608508110046, 0.7297582626342773, 0.7497028112411499, 0.7687227725982666, 0.767401933670044, 0.785629391670227, 0.7921014428138733, 0.7992339134216309, 0.7994980812072754, 0.7998943328857422, 0.8109893202781677, 0.8231409192085266, 0.8164047002792358, 0.8153480291366577, 0.8251221776008606, 0.8300092220306396, 0.826310932636261, 0.8302733898162842, 0.8334434032440186, 0.8302733898162842, 0.8370096683502197, 0.8363492488861084, 0.844010055065155, 0.8370096683502197, 0.839519202709198, 0.8352925777435303], "val_loss": [1.2752211775098528, 0.6699761322566441, 0.572850125176566, 0.5819409234183175, 0.5260240520749774, 0.48210414818355013, 0.45426920482090544, 0.42082066195351736, 0.40086238724844797, 0.3980406607900347, 0.3946770429611206, 0.37274220160075594, 0.37307958943503244, 0.3675667388098581, 0.3466005410466875, 0.3469672458512442, 0.36397323438099455, 0.34217624153409687, 0.35146340302058626, 0.35158129249300274, 0.3590226173400879, 0.34391156264713835, 0.3621720586504255, 0.35084823199680876, 0.3540659376553127, 0.350126530442919, 0.3525421534265791, 0.3679886886051723, 0.36642601660319735, 0.3876914381980896], "val_accuracy": [0.5926666855812073, 0.7200000286102295, 0.7350000143051147, 0.7360000014305115, 0.765666663646698, 0.7879999876022339, 0.7950000166893005, 0.8180000185966492, 0.8259999752044678, 0.8320000171661377, 0.8323333263397217, 0.8416666388511658, 0.8393333554267883, 0.8416666388511658, 0.8579999804496765, 0.8500000238418579, 0.8533333539962769, 0.859666645526886, 0.8586666584014893, 0.8613333106040955, 0.8529999852180481, 0.8583333492279053, 0.8576666712760925, 0.8586666584014893, 0.8683333396911621, 0.8643333315849304, 0.8646666407585144, 0.8556666374206543, 0.8636666536331177, 0.8676666617393494]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [7, 43, 56, 45]], "fitness": -0.10514285415410995, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301711916403921, 2.30212962279435, 2.302561016351067, 2.3025843062027334, 2.3025849675143384, 2.302584949532961, 2.3025849675143384], "accuracy": [0.09853387624025345, 0.09800554811954498, 0.10328886657953262, 0.10011887550354004, 0.1026284471154213, 0.09998679161071777, 0.10474177449941635], "val_loss": [1.9727207592555456, 1.9736357416425432, 1.973644188472203, 1.9736442565917969, 1.9736442565917969, 1.973644188472203, 1.9736442565917969], "val_accuracy": [0.09133332967758179, 0.10499999672174454, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 61, 32, 20, 75], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [2, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [14, 43, 56, 45]], "fitness": -0.10028571635484695, "mapping_values": [1, 23, 23, 15, 8, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.793123571721411e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.1080438494682312, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.16500000655651093, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 8, 2, 5, 2, 2, 9, 4, 0], [2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93, 57], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.8826768270746244, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2755250334739685, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [445.2082083565848, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0, 1], [66, 45, 73], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 2, 2, 1, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.218747835779045, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2641659080982208, 0.10566636174917221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [781.9417550223214, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [58, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.361957820178873, 3749.846327410965, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03473781421780586, 0.04398362338542938, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1518887111118863, 866368805741.7142, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004000000189989805, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 61, 32, 20, 75], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.8188298376181877, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02985074557363987, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [44.048060825892854, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [66, 52], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3752.8655187181744, 2.302586274549489, 2.30258978239817, 2.3025853703160877, 2.302591341519006, 2.3025890316835342], "accuracy": [0.0952318087220192, 0.10276053100824356, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736974579947335, 1.9736996378217424, 1.9736988885062081, 1.973700863974435, 1.9737045424325126, 1.9737074715750558], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 16, 10, 6, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 61, 32, 20, 75], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2705.3848332133134, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04530445113778114, 0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [334418636214.8571, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [25, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [7, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [7, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30260362818477, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.303290943254837, 2.3034550481389906, 2.302421964879175, 2.3022775530673414, 2.3016170379964667, 2.302390223685635], "accuracy": [0.08836349099874496, 0.09166556596755981, 0.09338264167308807, 0.09219389408826828, 0.09179764986038208, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]