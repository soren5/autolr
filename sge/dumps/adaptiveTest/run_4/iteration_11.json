[{"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.7865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0894869634456734, 1.371912913173811, 1.036300215620674, 0.9513590640364196, 0.8459782247230944, 0.7885527451276748, 0.757116901868244, 0.736800677244768, 0.6892962333013227, 0.6872905383036357, 0.6698658616393863, 0.664912688174756, 0.6410761297481281, 0.6165808611746871, 0.6276465871739996], "accuracy": [0.3039228618144989, 0.518161416053772, 0.6284506916999817, 0.6494518518447876, 0.6885483860969543, 0.71100252866745, 0.7189275026321411, 0.726192057132721, 0.7440232634544373, 0.7445515990257263, 0.7478536367416382, 0.7511557340621948, 0.7548540234565735, 0.7724210619926453, 0.761590301990509], "val_loss": [1.1824581963675362, 0.8869406155177525, 0.6843557357788086, 0.7072909559522357, 0.6054300240107945, 0.5679939133780343, 0.6153792994362968, 0.513441664831979, 0.5001544271196637, 0.48574910845075336, 0.4908615691321237, 0.5072970560618809, 0.5126326084136963, 0.4796843869345529, 0.495412928717477], "val_accuracy": [0.5833333134651184, 0.628000020980835, 0.6826666593551636, 0.684333324432373, 0.7246666550636292, 0.7426666617393494, 0.7110000252723694, 0.7720000147819519, 0.7823333144187927, 0.7896666526794434, 0.7706666588783264, 0.7753333449363708, 0.7703333497047424, 0.781333327293396, 0.7710000276565552]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [1, 3, 2, 2, 5, 1, 5], [66], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [7, 3, 2, 7, 0], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.7865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 10, 6, 5, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0894869634456734, 1.371912913173811, 1.036300215620674, 0.9513590640364196, 0.8459782247230944, 0.7885527451276748, 0.757116901868244, 0.736800677244768, 0.6892962333013227, 0.6872905383036357, 0.6698658616393863, 0.664912688174756, 0.6410761297481281, 0.6165808611746871, 0.6276465871739996], "accuracy": [0.3039228618144989, 0.518161416053772, 0.6284506916999817, 0.6494518518447876, 0.6885483860969543, 0.71100252866745, 0.7189275026321411, 0.726192057132721, 0.7440232634544373, 0.7445515990257263, 0.7478536367416382, 0.7511557340621948, 0.7548540234565735, 0.7724210619926453, 0.761590301990509], "val_loss": [1.1824581963675362, 0.8869406155177525, 0.6843557357788086, 0.7072909559522357, 0.6054300240107945, 0.5679939133780343, 0.6153792994362968, 0.513441664831979, 0.5001544271196637, 0.48574910845075336, 0.4908615691321237, 0.5072970560618809, 0.5126326084136963, 0.4796843869345529, 0.495412928717477], "val_accuracy": [0.5833333134651184, 0.628000020980835, 0.6826666593551636, 0.684333324432373, 0.7246666550636292, 0.7426666617393494, 0.7110000252723694, 0.7720000147819519, 0.7823333144187927, 0.7896666526794434, 0.7706666588783264, 0.7753333449363708, 0.7703333497047424, 0.781333327293396, 0.7710000276565552]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [9], [1, 5, 3, 2, 0, 1, 5], [17], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.7865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0894869634456734, 1.371912913173811, 1.036300215620674, 0.9513590640364196, 0.8459782247230944, 0.7885527451276748, 0.757116901868244, 0.736800677244768, 0.6892962333013227, 0.6872905383036357, 0.6698658616393863, 0.664912688174756, 0.6410761297481281, 0.6165808611746871, 0.6276465871739996], "accuracy": [0.3039228618144989, 0.518161416053772, 0.6284506916999817, 0.6494518518447876, 0.6885483860969543, 0.71100252866745, 0.7189275026321411, 0.726192057132721, 0.7440232634544373, 0.7445515990257263, 0.7478536367416382, 0.7511557340621948, 0.7548540234565735, 0.7724210619926453, 0.761590301990509], "val_loss": [1.1824581963675362, 0.8869406155177525, 0.6843557357788086, 0.7072909559522357, 0.6054300240107945, 0.5679939133780343, 0.6153792994362968, 0.513441664831979, 0.5001544271196637, 0.48574910845075336, 0.4908615691321237, 0.5072970560618809, 0.5126326084136963, 0.4796843869345529, 0.495412928717477], "val_accuracy": [0.5833333134651184, 0.628000020980835, 0.6826666593551636, 0.684333324432373, 0.7246666550636292, 0.7426666617393494, 0.7110000252723694, 0.7720000147819519, 0.7823333144187927, 0.7896666526794434, 0.7706666588783264, 0.7753333449363708, 0.7703333497047424, 0.781333327293396, 0.7710000276565552]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 7, 7, 2, 9, 9, 5], [1, 5, 5, 2, 2, 1, 5], [44, 43], [0, 1, 1], [0], [7, 3], [4], [], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 2, 0, 1, 5], [2, 2, 0, 3], [41]], "fitness": -0.24257142841815948, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3552956253923933, 2.581055756431482, 2.4206050552035117, 2.3781831400537095, 2.3402562535686138, 2.3480345855819205], "accuracy": [0.22031435370445251, 0.13036586344242096, 0.11200633645057678, 0.09774138033390045, 0.1006472036242485, 0.09589222073554993], "val_loss": [1.9959214074271066, 1.9545770372663225, 1.9984664916992188, 2.00394378389631, 2.0209862164088657, 2.0154551097324918], "val_accuracy": [0.31200000643730164, 0.2136666625738144, 0.10133333504199982, 0.09700000286102295, 0.1003333330154419, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [2, 2, 8, 7], [2, 2], [], [1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 5, 4, 5, 6, 7, 7, 7, 8], [1, 5, 3, 2, 0, 1, 3], [51], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.17314285039901733, "mapping_values": [1, 3, 3, 1, 2, 0, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.square(alpha), grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1872038720636917, 2.2496471821025787, 2.357623739107772, 2.473367816405825, 2.595332498957279, 2.7133642688734088], "accuracy": [0.227314755320549, 0.21159687638282776, 0.18253862857818604, 0.1566503793001175, 0.13908334076404572, 0.13300752639770508], "val_loss": [1.8393259729657854, 1.9334451811654227, 2.045473779950823, 2.1335045269557407, 2.2290951183864047, 2.341903414045061], "val_accuracy": [0.17233332991600037, 0.16099999845027924, 0.15566666424274445, 0.1433333307504654, 0.10533333569765091, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 5, 6, 7, 0, 3, 7, 5, 0], [3, 2, 1, 3, 0, 0], [66, 45], [1, 1, 0], [0, 0, 0, 0, 0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 9, 0], [1, 2, 0], [85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3026609944787086, 2.302922832872952, 2.3029713034866006, 2.3030568375295855, 2.3029102496876614, 2.303197922503172], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09536388516426086, 0.09430722147226334, 0.09959053993225098, 0.09708096832036972], "val_loss": [1.9736302239554269, 1.973661150251116, 1.973776136125837, 1.9736990247453963, 1.973698616027832, 1.9736486162458147], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1], [2, 5, 4, 0, 6, 4, 7, 7, 8], [1, 3, 2, 2, 5, 1, 5], [], [0, 1, 0, 1, 1], [0, 0, 0, 0, 0], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1], [7, 2, 8, 7], [2, 2, 2, 1], [], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [5, 6, 5, 3, 8, 2, 6, 8, 9], [0, 5, 3, 4, 5, 1, 5], [17], [1, 1, 1], [1], [7, 3], [4], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.068815216422081, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [0], [79], [1], [1], [], [1, 5, 5, 2, 5, 1, 5], [], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 0, 8], [1, 2, 0], [19]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.sqrt(beta)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022783529709643, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 4, 0, 6, 7, 2, 7, 2, 0, 6, 3, 5, 5, 0, 4, 4, 7, 4, 3, 4, 6, 6, 4, 5, 4, 4, 5, 2, 3, 5, 5, 8], [1, 3, 2, 2, 5, 1, 5, 3, 2, 0, 0, 1, 3, 3, 3, 5, 3, 1, 0, 3, 5, 3, 4, 3], [33, 90, 90], [0, 1, 0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [5, 2, 0, 9, 5], [2, 2, 0, 1], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 57, 57, 33, 24, 3, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(alpha), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), alpha), tf.math.add(beta, grad))), grad))), tf.math.negative(tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))))), tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(grad)))))), grad))))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 4, 0, 6, 7, 7, 7, 8], [1, 3, 2, 2, 3, 1, 5], [51], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1], [7, 3, 0, 4, 4], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [0, 2, 0], [41, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 10, 6, 5, 1, 0, 4, 3, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.negative(alpha), grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(grad, alpha))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4421189.478639275, 83875073.2912429, 389107816.4575353, 1096177388.2699776, 2334304423.0035663, 4221471463.6882844], "accuracy": [0.1002509593963623, 0.10302469879388809, 0.10091137140989304, 0.09681680053472519, 0.09906221181154251, 0.10011887550354004], "val_loss": [16628420.0, 132760946.28571428, 447772452.5714286, 1061035446.8571428, 2071925028.5714285, 3579814619.428571], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [0], [9], [0], [84], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 4, 0, 6, 7, 2, 7, 8], [3, 5, 5, 3, 2, 1, 5], [], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [2, 2, 0, 1, 5], [1, 2, 0, 2], [79]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 16, 16, 9, 7, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.negative(grad), grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(grad))), beta), alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, beta), tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 8, 7], [2, 0], [24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [5, 8, 7, 1, 8, 3], [1, 5, 5, 2, 5, 1, 5], [], [1, 1, 1], [0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [0, 2, 0], [41, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4421936.981053916, 83889371.09074098, 389173863.6629243, 1096362643.003038, 2334701090.320433, 4222191079.0458326], "accuracy": [0.1002509593963623, 0.10302469879388809, 0.10091137140989304, 0.09681680053472519, 0.09906221181154251, 0.10011887550354004], "val_loss": [16631246.285714285, 132783419.42857143, 447848685.71428573, 1061215561.1428572, 2072279040.0, 3580433993.142857], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [1], [], [1, 5, 3, 2, 0, 1, 5], [51], [0, 1, 1], [0], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 2], [1, 2, 0], [65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 8, 7], [2, 0], [39], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [5, 6, 5, 3, 8, 2, 6, 8, 9], [1, 5, 5, 4, 5, 1, 5], [], [1, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3023390655331153, 2.3026367546056856, 2.3026464835071074, 2.3026515405254595, 2.302633047103882, 2.302681376669212], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09311848133802414, 0.09628847241401672, 0.09866596013307571, 0.09998679161071777], "val_loss": [1.9736410549708776, 1.9736410549708776, 1.9736454146248954, 1.9736409187316895, 1.9736426217215401, 1.973635128566197], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2, 3], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [9], [1], [71], [0, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1], [7, 3, 5, 4, 8], [4], [], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 9, 3], [2, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 9, 6, 5, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1199711713.3932476, 22826091802.54339, 105985879866.53072, 298694006160.48395, 636202537220.2267, 1150704514466.8784], "accuracy": [0.09998679161071777, 0.10302469879388809, 0.10077928751707077, 0.09668471664190292, 0.09919429570436478, 0.1002509593963623], "val_loss": [4520141531.428572, 36149924425.14286, 121995142290.28572, 289160251684.5714, 564738691657.1428, 975871410176.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1], [9], [2, 2, 2, 1], [65], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 4, 0, 6, 4, 7, 3, 8], [1, 5, 5, 2, 5, 1, 5], [17], [0, 1, 1], [0, 0, 0, 0, 0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 15, 15, 8, 7, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(grad, alpha))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3022783529709643, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 1], [2, 2, 8, 7], [2, 2, 2, 1], [], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [5, 5, 5, 3, 8, 2, 6, 8, 9], [1, 5, 5, 5, 5, 1, 5], [17], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0, 1, 3, 6], [1, 2, 0, 2], [29, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(alpha, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.multiply(alpha, beta), tf.math.divide_no_nan(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 5, 1, 0, 6, 7, 7, 7, 8], [1, 5, 3, 3, 0, 1, 5], [51], [0, 1, 1], [1], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(alpha)), grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1], [5], [2], [], [0], [1], [], [1, 5, 5, 2, 5, 1, 5], [17], [0, 0, 1, 1, 0], [1], [7, 3, 5], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036277686537154, 2.3208840253913343, 1108233106449126.4, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.08479725569486618, 0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.974659034184047, 1.9962598255702428, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.025333333760499954, 0.09366666525602341, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]