[{"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8320000171661377, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9125780142718742, 1.0087482714618374, 0.7629935154274329, 0.668497332264136, 0.6017881978961062, 0.5647095361279931, 0.5192224846272311, 0.5023238192365438, 0.4752348553132954, 0.4492700638599116, 0.43267202353307427, 0.4243240659349646, 0.39906908421547277, 0.38119167427203565, 0.3699495270936843, 0.36046141512389857, 0.3408238524301665, 0.33002584735715174, 0.3207899701711823, 0.3068620683360865, 0.2991186688683525], "accuracy": [0.35503897070884705, 0.6284506916999817, 0.698718786239624, 0.7445515990257263, 0.7677981853485107, 0.7857614755630493, 0.8013472557067871, 0.8108572363853455, 0.8214238286018372, 0.8289526104927063, 0.8407079577445984, 0.8432175517082214, 0.8515387773513794, 0.8627657890319824, 0.8568220734596252, 0.8642187118530273, 0.8725399374961853, 0.8758420348167419, 0.876370370388031, 0.8817857503890991, 0.8886540532112122], "val_loss": [0.9394229139600482, 0.5867080688476562, 0.5246464695249285, 0.47229814529418945, 0.45176007066454205, 0.41266006231307983, 0.39197157110486713, 0.38105307306562153, 0.3623732158115932, 0.3602490084511893, 0.34131250211170744, 0.33746202502931866, 0.31592891045979093, 0.31803957905088154, 0.31425912039620535, 0.2961015786443438, 0.30005461829049246, 0.30109923226492746, 0.29727673530578613, 0.2993220942361014, 0.29529266698019846], "val_accuracy": [0.6209999918937683, 0.7363333106040955, 0.7630000114440918, 0.7893333435058594, 0.8033333420753479, 0.8159999847412109, 0.8399999737739563, 0.8429999947547913, 0.8506666421890259, 0.8523333072662354, 0.856333315372467, 0.8533333539962769, 0.8683333396911621, 0.8726666569709778, 0.8733333349227905, 0.8793333172798157, 0.8683333396911621, 0.875, 0.878000020980835, 0.8776666522026062, 0.8763333559036255]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 3, 9, 3, 2, 0, 2, 5, 0, 4, 5, 6, 1, 4, 6, 2, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 2, 0, 2, 2, 0, 0, 1, 1, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [36, 7, 25, 53, 26, 73, 46, 33, 24], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1082876117678837, 1.475258638971848, 1.1799464911643651, 0.9860052733200259, 0.9221370607681436, 0.8343377191754947, 0.7846813774804838, 0.7773602107229045, 0.7339455143430088, 0.711866441451327, 0.6900143790333231, 0.6837658920245259, 0.6602883110460809, 0.6432692232999221, 0.6461289312073961, 0.6173799602488769, 0.6179711282875213, 0.6107819576021577, 0.5803434689755705, 0.5822095500400998, 0.5796811470518086, 0.5760797146304787, 0.5743781671532235, 0.5659508107596889, 0.5577832557868176], "accuracy": [0.316470742225647, 0.4905560612678528, 0.5824857950210571, 0.6370360851287842, 0.6627922058105469, 0.6866992712020874, 0.7063795924186707, 0.711530864238739, 0.7136441469192505, 0.7253995537757874, 0.7413815855979919, 0.7382115721702576, 0.7454761862754822, 0.7593448758125305, 0.7518161535263062, 0.7660810947418213, 0.7625148296356201, 0.7633073329925537, 0.7784969210624695, 0.7848368883132935, 0.7847048044204712, 0.778232753276825, 0.7815347909927368, 0.7821952104568481, 0.7910447716712952], "val_loss": [1.2667288439614433, 0.869565657206944, 0.7249169860567365, 0.7053852762494769, 0.6277953556605748, 0.6091188873563494, 0.6645833764757428, 0.5467136757714408, 0.5344528130122593, 0.5286310229982648, 0.5282106910433088, 0.5268714598246983, 0.4708014896937779, 0.4956916230065482, 0.4791817324502127, 0.4654006617409842, 0.485868113381522, 0.43800443410873413, 0.434476443699428, 0.43263959884643555, 0.46235648223332, 0.4324555141585214, 0.4548021044049944, 0.42644565446036203, 0.4507844958986555], "val_accuracy": [0.5726666450500488, 0.5929999947547913, 0.6926666498184204, 0.6890000104904175, 0.7143333554267883, 0.7086666822433472, 0.703000009059906, 0.7426666617393494, 0.7699999809265137, 0.7743333578109741, 0.7513333559036255, 0.7593333125114441, 0.8019999861717224, 0.7806666493415833, 0.7990000247955322, 0.7963333129882812, 0.7816666960716248, 0.812333345413208, 0.815666675567627, 0.8216666579246521, 0.7789999842643738, 0.8073333501815796, 0.7923333048820496, 0.8209999799728394, 0.7820000052452087]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 6, 0, 2, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 41, 26, 52, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [17, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7597143054008484, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2981823687666143, 2.27752444284656, 2.2338641872023075, 2.159099336628428, 2.0255552283556484, 1.7769338167606485, 1.5172003143735298, 1.4242292530957688, 1.3692391055717665, 1.1697208743604923, 1.0097017966367312, 0.9615773522401955, 0.9465086312184418, 0.9001915561304179, 0.8538503706211176, 0.8465856622711164, 0.856233785637712, 0.835795306109198, 0.8251923241903123, 0.8016144197299858, 0.7748822517650726, 0.7731510976270646, 0.7605581459919097, 0.744388342958636, 0.7332739957398301, 0.7238822244161849, 0.7128352514347459, 0.7171839721183011, 0.7102353156612786, 0.6975369483661563, 0.6835862721796632, 0.6816373339906707, 0.6815905040832416, 0.6492538514500674, 0.6387674905730749, 0.6395681680642288, 0.6357028843420939, 0.6124278701307467, 0.6086311049276197, 0.6048043817340769, 0.6004564886662498, 0.5970894441297891, 0.5866602509249439, 0.5916266871591396, 0.5771986934817809, 0.5741320631491778, 0.5536195248613394, 0.5639823412992825, 0.559718116714403, 0.5392075236195413, 0.5426804870111186, 0.540868510533601, 0.5362381521957331, 0.5277576261051043, 0.5265044250925691, 0.5198081319342515, 0.5204560771799044, 0.5123677669640907, 0.49852936037732093, 0.4971069805437249, 0.5073969120189514, 0.49876822077162025, 0.4890774781197573, 0.4753615108101265, 0.48762574605717557, 0.48980470650609553, 0.47352698202839205, 0.4797320941325586, 0.4743133369312153, 0.4756793090853441, 0.4635784303499581, 0.4636643899548339, 0.46297304707983655, 0.4653799921026193, 0.4620301654042506, 0.45505837521627357, 0.4474958325373955, 0.4567852444408466, 0.45647330824819615, 0.44355004884547655, 0.4359680422663043, 0.42690383046452146, 0.43474601353038306, 0.426567294326488, 0.42355985170137517, 0.4200651841770782, 0.41405781589841106, 0.41083472700654994, 0.4085687111476157, 0.409077756216088, 0.3945424410810623, 0.40612347602151433, 0.39493787885420767, 0.4044181635083461, 0.3983366909303906, 0.3972725152276558, 0.38324492098302293, 0.38395280738264864, 0.3761551319576604, 0.38646258191976723], "accuracy": [0.09893012791872025, 0.15440496802330017, 0.26601505279541016, 0.3465856611728668, 0.39189010858535767, 0.43864747881889343, 0.48487651348114014, 0.5075947642326355, 0.5424646735191345, 0.6108836531639099, 0.633469820022583, 0.6288469433784485, 0.6469422578811646, 0.6803592443466187, 0.687887966632843, 0.6872276067733765, 0.6828688383102417, 0.695813000202179, 0.6944921612739563, 0.6976621150970459, 0.7033417224884033, 0.698190450668335, 0.7119271159172058, 0.7193237543106079, 0.724739134311676, 0.7320036888122559, 0.7316074371337891, 0.7294940948486328, 0.7309470176696777, 0.735569953918457, 0.746268630027771, 0.7464007139205933, 0.7386078238487244, 0.7563069462776184, 0.7581561207771301, 0.7605336308479309, 0.7658169269561768, 0.7703077793121338, 0.7726852297782898, 0.7777044177055359, 0.7864218950271606, 0.7779685854911804, 0.7795535326004028, 0.7759873270988464, 0.7794214487075806, 0.7799497842788696, 0.7890635132789612, 0.7882710099220276, 0.7940827012062073, 0.7967243194580078, 0.7927618622779846, 0.7926297783851624, 0.7996301651000977, 0.8025360107421875, 0.805177628993988, 0.802800178527832, 0.7989697456359863, 0.809140145778656, 0.8070268034934998, 0.8098005652427673, 0.8152159452438354, 0.8124422430992126, 0.8153480291366577, 0.821820080280304, 0.817461371421814, 0.8203672170639038, 0.8198388814926147, 0.8185180425643921, 0.8227446675300598, 0.8235371708869934, 0.8214238286018372, 0.8249900937080383, 0.8280280232429504, 0.8293488025665283, 0.8317263126373291, 0.8301413059234619, 0.829216718673706, 0.8317263126373291, 0.8278959393501282, 0.828292191028595, 0.8355567455291748, 0.8342359066009521, 0.8388587832450867, 0.8384625315666199, 0.8366134166717529, 0.8355567455291748, 0.8396512866020203, 0.8432175517082214, 0.8430854678153992, 0.8477083444595337, 0.848368763923645, 0.842028796672821, 0.8453308939933777, 0.8518029451370239, 0.8488970994949341, 0.8462554216384888, 0.8512746095657349, 0.8518029451370239, 0.8544445633888245, 0.8529917001724243], "val_loss": [1.9581217084612166, 1.9260416712079729, 1.8735639708382743, 1.7782013075692313, 1.5849383217947823, 1.2584281989506312, 0.9549882071358817, 0.8117575645446777, 0.7353422301156181, 0.7037101813725063, 0.6679637091500419, 0.6830692972455706, 0.6679064376013619, 0.619219354220799, 0.5921096290860858, 0.5795979499816895, 0.5718093429292951, 0.5695207970482963, 0.5649570056370327, 0.5634421280452183, 0.5557220152446202, 0.5552806002753121, 0.5508595875331334, 0.5350411278860909, 0.5209140266690936, 0.5075252396719796, 0.5014178582600185, 0.50252936567579, 0.49428720133645193, 0.486184937613351, 0.48713086332593647, 0.4837230273655483, 0.470326440674918, 0.4594025100980486, 0.45650592872074675, 0.4533787114279611, 0.4453843491418021, 0.4370186839784895, 0.4336874655314854, 0.4312577673367092, 0.42597356012889315, 0.4201993431363787, 0.4212210348674229, 0.42559707164764404, 0.42217700822012766, 0.4123091442244394, 0.40525974546160015, 0.40309842995234896, 0.3990115097590855, 0.39507824182510376, 0.3947592207363674, 0.3943506394113813, 0.39157118116106304, 0.388310296194894, 0.38467942816870554, 0.3824947306088039, 0.381876494203295, 0.3755254234586443, 0.3773156574794224, 0.37757751771381926, 0.38031662361962454, 0.3702363201550075, 0.3656546558652605, 0.3608311840466091, 0.36628419160842896, 0.3592898334775652, 0.3572260396821158, 0.35668437821524485, 0.36198743752070833, 0.3652933495385306, 0.35423316274370464, 0.35667862210954937, 0.35481867619923185, 0.36950893912996563, 0.3527434212820871, 0.3497024859700884, 0.3410937190055847, 0.35237846204212736, 0.3397822380065918, 0.33380548443113056, 0.3283693194389343, 0.32996658767972675, 0.33751316581453594, 0.3303125670978001, 0.3307879567146301, 0.33406756605420795, 0.3344354033470154, 0.33587656702314106, 0.33170915501458303, 0.32475665637425016, 0.31984216826302664, 0.31820426668439594, 0.321578357900892, 0.32432763065610615, 0.32443864004952566, 0.3216636095728193, 0.32186836855752127, 0.3241484590939113, 0.3242574504443577, 0.32377575976508005], "val_accuracy": [0.13733333349227905, 0.3656666576862335, 0.4183333218097687, 0.4480000138282776, 0.4970000088214874, 0.5910000205039978, 0.6570000052452087, 0.6643333435058594, 0.7020000219345093, 0.7056666612625122, 0.7093333601951599, 0.7073333263397217, 0.7213333249092102, 0.7319999933242798, 0.7396666407585144, 0.7286666631698608, 0.7450000047683716, 0.7570000290870667, 0.7563333511352539, 0.7440000176429749, 0.7536666393280029, 0.7570000290870667, 0.7586666941642761, 0.762666642665863, 0.7636666893959045, 0.7706666588783264, 0.7776666879653931, 0.778333306312561, 0.7806666493415833, 0.7850000262260437, 0.7803333401679993, 0.781000018119812, 0.7866666913032532, 0.7973333597183228, 0.7983333468437195, 0.8016666769981384, 0.8016666769981384, 0.8043333292007446, 0.8056666851043701, 0.8090000152587891, 0.8133333325386047, 0.8169999718666077, 0.8183333277702332, 0.8199999928474426, 0.8206666707992554, 0.828000009059906, 0.8243333101272583, 0.8216666579246521, 0.824999988079071, 0.8293333053588867, 0.8330000042915344, 0.8360000252723694, 0.8410000205039978, 0.8399999737739563, 0.8366666436195374, 0.8379999995231628, 0.8429999947547913, 0.8453333377838135, 0.8410000205039978, 0.8446666598320007, 0.8456666469573975, 0.8486666679382324, 0.8463333249092102, 0.8476666808128357, 0.847000002861023, 0.8513333201408386, 0.8506666421890259, 0.8513333201408386, 0.8556666374206543, 0.8513333201408386, 0.8519999980926514, 0.8519999980926514, 0.8560000061988831, 0.8516666889190674, 0.8613333106040955, 0.8619999885559082, 0.862666666507721, 0.859666645526886, 0.8606666922569275, 0.859333336353302, 0.8650000095367432, 0.8629999756813049, 0.8613333106040955, 0.8659999966621399, 0.862666666507721, 0.8613333106040955, 0.8663333058357239, 0.8676666617393494, 0.8690000176429749, 0.8676666617393494, 0.8679999709129333, 0.8690000176429749, 0.8650000095367432, 0.8700000047683716, 0.8706666827201843, 0.8640000224113464, 0.8679999709129333, 0.8679999709129333, 0.8700000047683716, 0.8690000176429749]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [14, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7554285526275635, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.299739666618707, 2.2890421900184257, 2.2651403579477623, 2.2291197799782885, 2.181326865677537, 2.1034776452132156, 1.9832253090347423, 1.812562748756328, 1.6216000771525672, 1.4588377127762657, 1.3892365576899393, 1.3743246782567633, 1.3725241302829834, 1.2495886203147133, 1.1101602243473343, 0.9770852343013589, 0.9188137243074622, 0.9158007341951601, 0.9205131695144889, 0.9106570990046868, 0.876436899138511, 0.8376453847870016, 0.8144167327468327, 0.8006748702028219, 0.8018595059833443, 0.8168189318708189, 0.8049709568123193, 0.8049532633730921, 0.7895250329960607, 0.7700375462283768, 0.7386395271743026, 0.7264829431432286, 0.7272365409164948, 0.7258434010739214, 0.7227667151913273, 0.7160464414531812, 0.7134067970118297, 0.7008411390056164, 0.6925433563471249, 0.6792766539380692, 0.6699547424780584, 0.6714096075476688, 0.6650189215071591, 0.6734526183280521, 0.6542108675051422, 0.6501292880767718, 0.6444798677809376, 0.6398178411984976, 0.6243906606457662, 0.6153510818155828, 0.6176221994613029, 0.6185559732110005, 0.6026960430033785], "accuracy": [0.09509972482919693, 0.1208558976650238, 0.19138818979263306, 0.2822612524032593, 0.3339056968688965, 0.37802138924598694, 0.41183462738990784, 0.43085458874702454, 0.45964866876602173, 0.49451854825019836, 0.5172368288040161, 0.5428609251976013, 0.5488046407699585, 0.5838066339492798, 0.6259410977363586, 0.6586976647377014, 0.6576409935951233, 0.6524897813796997, 0.6782459616661072, 0.6819442510604858, 0.6897371411323547, 0.700171709060669, 0.7016246318817139, 0.703209638595581, 0.6966054439544678, 0.7016246318817139, 0.7000396251678467, 0.7062475085258484, 0.7098137736320496, 0.709549605846405, 0.7206445932388306, 0.7228899598121643, 0.722757875919342, 0.7279091477394104, 0.7334566116333008, 0.7345132827758789, 0.7353057861328125, 0.739928662776947, 0.7420420050621033, 0.7473253011703491, 0.7473253011703491, 0.7466648817062378, 0.7526086568832397, 0.7508915662765503, 0.754589855670929, 0.7578919529914856, 0.7585523724555969, 0.7560427784919739, 0.7605336308479309, 0.7677981853485107, 0.7685906887054443, 0.7676661014556885, 0.7740060687065125], "val_loss": [1.963660785130092, 1.9457619530814034, 1.9179237910679408, 1.8797039985656738, 1.822267941066197, 1.730048997061593, 1.584357636315482, 1.3801027366093226, 1.1568506104605538, 0.9763375691005162, 0.8513495070593697, 0.7863350595746722, 0.7345679828098842, 0.7094311543873378, 0.675368172781808, 0.6369173356464931, 0.6564399344580514, 0.6772253513336182, 0.6836357457297189, 0.6583467381341117, 0.6168791225978306, 0.5862835475376674, 0.5713159016200474, 0.5614312035696847, 0.5603783982140678, 0.5670347554343087, 0.5673291002001081, 0.5575136968067714, 0.5472472735813686, 0.538022654397147, 0.5295779023851667, 0.5273663146155221, 0.5323586974825177, 0.5352615118026733, 0.5339063405990601, 0.5285026516233172, 0.5190202678952899, 0.5074320350374494, 0.4965186629976545, 0.48845299652644564, 0.4846323387963431, 0.4821392808641706, 0.4766145774296352, 0.46825146675109863, 0.4609625680106027, 0.4553130865097046, 0.4491127218518938, 0.4433492762701852, 0.4408845731190273, 0.43992081710270475, 0.4386885506766183, 0.436827336038862, 0.4346668209348406], "val_accuracy": [0.08833333104848862, 0.26466667652130127, 0.37700000405311584, 0.4113333225250244, 0.4350000023841858, 0.4676666557788849, 0.512333333492279, 0.5646666884422302, 0.6083333492279053, 0.6503333449363708, 0.6733333468437195, 0.6756666898727417, 0.6993333101272583, 0.7066666483879089, 0.7163333296775818, 0.7289999723434448, 0.7110000252723694, 0.7236666679382324, 0.7363333106040955, 0.7279999852180481, 0.7360000014305115, 0.7440000176429749, 0.746666669845581, 0.75, 0.7459999918937683, 0.7423333525657654, 0.7493333220481873, 0.7516666650772095, 0.7543333172798157, 0.7546666860580444, 0.7573333382606506, 0.7616666555404663, 0.762666642665863, 0.7696666717529297, 0.7720000147819519, 0.7770000100135803, 0.7773333191871643, 0.7806666493415833, 0.7806666493415833, 0.7839999794960022, 0.7836666703224182, 0.7846666574478149, 0.7879999876022339, 0.7960000038146973, 0.7979999780654907, 0.8033333420753479, 0.8066666722297668, 0.8096666932106018, 0.8066666722297668, 0.8036666512489319, 0.8036666512489319, 0.8050000071525574, 0.8096666932106018]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.728857159614563, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.8967337602039196, 0.9931573604532851, 0.8124893360354598, 0.7218254985369711, 0.6619836043262872, 0.636073504212573, 0.6130969499820542, 0.5996430246679775, 0.5824073019784755, 0.5378489007472426, 0.5458173823000779, 0.5797758727671369, 0.5665036628999258, 0.5792229283188218, 0.5916154005618506, 0.6199703227338412, 0.6186319664248606, 0.6813981135240116, 0.6999110334884096], "accuracy": [0.3459252417087555, 0.6428477168083191, 0.6935675740242004, 0.7283053994178772, 0.754589855670929, 0.7646281719207764, 0.7721568942070007, 0.7685906887054443, 0.7878747582435608, 0.7923656105995178, 0.7967243194580078, 0.7891955971717834, 0.7853652238845825, 0.7878747582435608, 0.7798177003860474, 0.7836481332778931, 0.7646281719207764, 0.7737419009208679, 0.7331924438476562], "val_loss": [0.8626777955463955, 0.6235677514757428, 0.5460509232112339, 0.48571363517216276, 0.43455030236925396, 0.43645491770335604, 0.4278623376573835, 0.38403007813862394, 0.40537705591746737, 0.3735953654561724, 0.42656540870666504, 0.40706894227436613, 0.394417337008885, 0.3930396352495466, 0.40151811497552053, 0.4136113354137966, 0.47447778497423443, 0.4656330517360142, 0.4984166622161865], "val_accuracy": [0.6439999938011169, 0.7153333425521851, 0.7509999871253967, 0.7793333530426025, 0.8106666803359985, 0.8076666593551636, 0.8143333196640015, 0.8333333134651184, 0.8193333148956299, 0.8363333344459534, 0.8196666836738586, 0.8259999752044678, 0.8346666693687439, 0.840666651725769, 0.8223333358764648, 0.8253333568572998, 0.8199999928474426, 0.7986666560173035, 0.7910000085830688]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 41, 26, 52, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.5854285955429077, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.8970540575205832, 0.9947275292714353, 0.8126906827377558, 0.7205599560131093, 0.665355429193048, 0.6458968426399951, 0.6165360713269591, 0.6193146590291548, 0.604113217539177, 0.5662836771930261, 0.5548619592288986, 0.5721570946725919, 0.6049424077006158, 0.5968596139179009, 0.5928936197285041, 0.6200802866745903, 0.6887454758419762, 0.8297219844526382, 0.9245117357173663, 0.949568310772439, 0.9339076388608101], "accuracy": [0.34605732560157776, 0.6429798007011414, 0.6936996579170227, 0.7298903465270996, 0.7564390301704407, 0.7585523724555969, 0.7701756954193115, 0.7666094303131104, 0.7738739848136902, 0.7909126877784729, 0.7890635132789612, 0.785101056098938, 0.7907806038856506, 0.778761088848114, 0.7802139520645142, 0.7804781198501587, 0.7584202885627747, 0.7083608508110046, 0.6921146512031555, 0.7112666964530945, 0.6892088055610657], "val_loss": [0.862908158983503, 0.629509551184518, 0.546446578843253, 0.48628551619393484, 0.44473464148385183, 0.444067188671657, 0.4194346070289612, 0.39574436630521503, 0.401955315044948, 0.392940206187112, 0.40267359358923777, 0.3978646397590637, 0.42308682203292847, 0.43286967277526855, 0.4028172067233494, 0.40545113597597393, 0.4795687368937901, 0.6127866165978568, 0.5824440547398159, 0.6320935828345162, 0.5891854252134051], "val_accuracy": [0.6453333497047424, 0.7076666951179504, 0.7553333044052124, 0.781333327293396, 0.8086666464805603, 0.8046666383743286, 0.8076666593551636, 0.824999988079071, 0.8186666369438171, 0.815666675567627, 0.8339999914169312, 0.8346666693687439, 0.8306666612625122, 0.831333339214325, 0.8410000205039978, 0.8429999947547913, 0.8066666722297668, 0.7153333425521851, 0.7866666913032532, 0.7706666588783264, 0.7480000257492065]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [4, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10742857307195663, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.954603607880362, 2.4858642028795495, 2.3711150386912587, 2.3436494193545045, 2.3272998419577626, 2.3693669345857225, 2.3234051556524866], "accuracy": [0.186104878783226, 0.10289261490106583, 0.13380002975463867, 0.10196803510189056, 0.09694888442754745, 0.09893012791872025, 0.09879804402589798], "val_loss": [2.238304546901158, 1.9717412676130022, 2.0006741796221053, 1.989715848650251, 1.9854527882167272, 1.9861251286097936, 2.0003884179251537], "val_accuracy": [0.09666666388511658, 0.10366666316986084, 0.10066666454076767, 0.10100000351667404, 0.09600000083446503, 0.09666666388511658, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 6, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 4, 3, 9, 3, 2, 6, 2, 5, 0, 4, 1, 4, 1, 0, 6, 8, 3, 2, 5, 9, 2, 5, 3, 2, 2, 7, 7, 8, 6, 8, 7, 6, 2, 4, 7, 8, 5, 8, 1, 6, 1, 0, 9, 3, 9], [0, 1, 1, 1, 0, 2, 2, 0, 2, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 2, 0, 1, 2, 3, 1, 2, 2, 3, 2, 2, 2, 3], [99, 75, 26, 52, 26, 51, 46, 33, 24], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 8, 2, 3, 5, 9, 2], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 66, 66, 40, 26, 8, 3, 3, 1, 2, 0, 6, 4, 3, 1, 0, 3, 1, 2, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.subtract(tf.math.negative(alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.square(alpha)))))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, grad)))))))), grad)))))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(alpha, grad))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [7, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.736626875503605e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05468234047293663, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 3, 5, 6, 0, 2, 2, 8, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [9, 75, 26, 52, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 8, 5, 9, 3, 2, 8, 2, 5, 0, 4, 0, 4, 1, 4, 6, 3, 3, 9, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 6, 8, 7, 6, 2, 6, 0, 8, 1, 6, 7, 6, 2, 0, 2, 5, 6], [2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 6, 25, 53, 48, 73, 46, 33, 24], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha)), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3014125153530607, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [460.18739536830356, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.736605116123471e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05468234047293663, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [8, 4, 3, 9, 3, 2, 6, 2, 5, 0, 1, 1, 4, 1, 5, 6, 8, 3, 2, 5, 9, 2, 5, 3, 1, 2, 2, 7, 2, 6, 8, 8, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0, 7, 3, 9], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 2, 0, 2, 2, 3, 1, 2, 3, 2, 1, 2, 2, 3], [99, 75, 25, 12, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 60, 60, 36, 24, 6, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha), tf.math.square(tf.math.add(alpha, alpha)))))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 8, 1, 9, 2, 8, 6, 5, 6, 0, 2, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 2, 1, 1, 0, 2, 2, 0, 1, 1, 1, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 41, 26, 52, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.07800000160932541, "mapping_values": [1, 14, 14, 9, 5, 3, 1, 1, 0, 1, 0, 9, 7, 6, 1, 1, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.953615264051138, 2.48411408489123, 2.267188879036239, 3.6721664848360387, 3.041555017669833, 2.8082855028042375, 2.611518283482981, 11.74120240853274], "accuracy": [0.18623696267604828, 0.10011887550354004, 0.16972659528255463, 0.18980319797992706, 0.09245806187391281, 0.10157178342342377, 0.09285431355237961, 0.10315678268671036], "val_loss": [2.224625859941755, 2.005391461508615, 1.9487829208374023, 2.3954055649893626, 2.5244480541774204, 2.133216312953404, 2.126378672463553, 338.8148890904018], "val_accuracy": [0.09666666388511658, 0.10333333164453506, 0.13899999856948853, 0.09733333438634872, 0.10300000011920929, 0.10066666454076767, 0.10366666316986084, 0.13300000131130219]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 6, 0, 2, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [24, 7, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [44, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.301524693136753, 2.3024705108508554, 2.30152939430648, 2.3002162924406155, 2.300977982802083, 2.300231908432418, 2.299791724973776, 2.30017449808253, 2.3007908618492676, 2.298678786983548, 2.2992883028056346, 2.2987377904960744, 2.29894286256346, 2.2982774099197054, 2.299092402972754, 2.298243301954913, 2.2979551788176904, 2.2981265424469663], "accuracy": [0.09153348207473755, 0.08796724677085876, 0.09576013684272766, 0.09509972482919693, 0.09417514503002167, 0.09325055778026581, 0.10249637067317963, 0.10210011899471283, 0.09470347315073013, 0.1014397069811821, 0.09721305221319199, 0.09721305221319199, 0.09853387624025345, 0.11015717685222626, 0.10302469879388809, 0.10527011007070541, 0.10434553027153015, 0.10210011899471283], "val_loss": [1.970108917781285, 1.9694826262337821, 1.96899380002703, 1.9687765666416712, 1.9686683927263533, 1.9686358996800013, 1.9686501366751534, 1.968679359980992, 1.9685512951442175, 1.968409538269043, 1.9682913507734026, 1.968217168535505, 1.968202863420759, 1.9683232988630022, 1.96845919745309, 1.9686980247497559, 1.9689790180751257, 1.969278063092913], "val_accuracy": [0.0416666679084301, 0.04800000041723251, 0.054999999701976776, 0.06266666948795319, 0.06666667014360428, 0.07133333384990692, 0.07266666740179062, 0.07400000095367432, 0.07766667008399963, 0.08033332973718643, 0.0846666693687439, 0.08633333444595337, 0.08933333307504654, 0.08866667002439499, 0.08799999952316284, 0.08533333241939545, 0.0820000022649765, 0.07833333313465118]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 26, 52, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [22, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3016244591093336, 2.3032500435883705, 2.3031520632830875, 2.302479802310396, 2.3036126219412245, 2.303225686411265], "accuracy": [0.09100515395402908, 0.08585391938686371, 0.09259014576673508, 0.08730682730674744, 0.0870426595211029, 0.08796724677085876], "val_loss": [1.970386368887765, 1.9704004696437292, 1.9704358237130302, 1.9705029896327428, 1.9706005368913924, 1.9707089832850866], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.03566666692495346, 0.03400000184774399, 0.033666666597127914, 0.03433333337306976]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 4, 2, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301623860874259, 2.303240394768635, 2.3031170419210047, 2.3023705038459403, 2.3034078938503466, 2.302900309481436], "accuracy": [0.09100515395402908, 0.08585391938686371, 0.09245806187391281, 0.0878351628780365, 0.0878351628780365, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]