[{"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.7882857322692871, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, beta), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.negative(alpha))", "other_info": {"loss": [2.081033517041809, 1.3880746263192394, 1.0676865562975697, 0.8708946270603215, 0.837066483141771, 0.7870918057377722, 0.7259153533668377, 0.724620303497055, 0.6894412722648678, 0.68036380401928, 0.6578424382738827, 0.6631098429540428, 0.6114536511301286, 0.6158455482815329, 0.593204171855011, 0.6023730322543451, 0.5997974467063388, 0.5835283936495007, 0.5617016567105017], "accuracy": [0.31343284249305725, 0.5107647776603699, 0.6292431354522705, 0.6873596906661987, 0.6893408894538879, 0.7033417224884033, 0.7260599732398987, 0.7289658188819885, 0.7413815855979919, 0.7434949278831482, 0.7493065595626831, 0.7475894689559937, 0.7709681391716003, 0.7662131786346436, 0.7836481332778931, 0.7716285586357117, 0.7736098170280457, 0.7800818681716919, 0.7932901978492737], "val_loss": [1.133876119341169, 0.9372518743787494, 0.6875500679016113, 0.6551884923662458, 0.5757625954491752, 0.5514247587748936, 0.5445868628365653, 0.5272131136485508, 0.5467369726725987, 0.5569561549595424, 0.519876343863351, 0.4864934171949114, 0.4797208309173584, 0.4658937454223633, 0.4553260462624686, 0.48967388698032926, 0.45539794649396625, 0.4642500196184431, 0.44827175991875784], "val_accuracy": [0.6546666622161865, 0.6353333592414856, 0.6903333067893982, 0.7056666612625122, 0.7483333349227905, 0.7456666827201843, 0.753000020980835, 0.7636666893959045, 0.7620000243186951, 0.7273333072662354, 0.7620000243186951, 0.7863333225250244, 0.7876666784286499, 0.8006666898727417, 0.7913333177566528, 0.7593333125114441, 0.7996666431427002, 0.7886666655540466, 0.7950000166893005]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.6291428804397583, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, beta), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.negative(alpha))", "other_info": {"loss": [2.118836656269884, 1026.9866966049292, NaN, NaN, NaN, NaN], "accuracy": [0.3004887104034424, 0.3928146958351135, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.24967360496521, 1.2388052442874202e+27, NaN, NaN, NaN, NaN], "val_accuracy": [0.6263333559036255, 0.0989999994635582, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 1, 8, 3, 4, 6, 2], [3], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [30], [1, 1, 1, 1], [0, 1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 6, 2, 2, 0], [1, 2, 0, 0, 3], [41, 5]], "fitness": -0.5768571496009827, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301785059293909, 2.2985714628491434, 2.297854734874751, 2.296008133381239, 2.2940167517883117, 2.2907167301674276, 2.28963002401525, 2.2876595514262466, 2.2854484790635223, 2.283155269217198, 2.2824660436179047, 2.2791638047136824, 2.2774987889633613, 2.2763993617896596, 2.2726185629160303, 2.2728761287334494, 2.269438167620392, 2.2691694712988406, 2.2651393055805613, 2.2646366298757665, 2.262610840397488, 2.2603468005336933, 2.2574398453052034, 2.255229818948492, 2.2518982538662375, 2.2504110452190695, 2.249988348067413, 2.2438518239868914, 2.2439575541713817, 2.240717286903624, 2.239482358241708, 2.236135674914853, 2.233717861113815, 2.2309170104981475, 2.2286946186536274, 2.2253857096031027, 2.2246801520319757, 2.220426739576927, 2.219504106754892, 2.2131097907828554, 2.209896448880076, 2.209135862247677, 2.2052852955980544, 2.2018560478007396, 2.199412409970474, 2.1944496774276674, 2.1933390571771594, 2.1874708992977343, 2.185158367091481, 2.1820262914729898, 2.176814392116548, 2.1717691593449806, 2.1718599150729077, 2.1641631660806566, 2.159636611904466, 2.158847930487735, 2.154138048201221, 2.1485032789333385, 2.1463617971150977, 2.140009888064639, 2.1350071467995533, 2.1288724458921444, 2.1255460585648467, 2.11973813782751, 2.1141038418697913, 2.108711626236512, 2.1015355159987266, 2.097519055900478, 2.092477997170306, 2.0871555065796943, 2.0758512117103454, 2.074806921454689, 2.067711379534029, 2.058896973715356, 2.0548762468031416, 2.0475647089236038, 2.0425938294941894, 2.0328289367550827, 2.024945127367265, 2.0167070198777077, 2.0093228019948146, 2.004778499773953, 1.9921916433691333, 1.9865505395548424, 1.9795472416123852, 1.9715564825657321, 1.9628197150916282, 1.9568419919714968, 1.94344675692081, 1.9352560734877953, 1.927989013190944, 1.9202307780279286, 1.9107164139477426, 1.904646318035355, 1.890164476170941, 1.8835630842471371, 1.8757468595984683, 1.8652146842580162, 1.854352548421256, 1.8453870747839187], "accuracy": [0.09285431355237961, 0.09853387624025345, 0.10051512718200684, 0.10698718577623367, 0.11332716792821884, 0.11913882195949554, 0.11742173880338669, 0.13142253458499908, 0.13380002975463867, 0.14080041646957397, 0.13908334076404572, 0.1516312211751938, 0.15731078386306763, 0.16061286628246307, 0.1706511676311493, 0.17078325152397156, 0.17976489663124084, 0.18253862857818604, 0.18782195448875427, 0.1916523575782776, 0.19297318160533905, 0.19957733154296875, 0.20974771678447723, 0.21238937973976135, 0.22401267290115356, 0.22097477316856384, 0.22639016807079315, 0.24263638257980347, 0.2382776439189911, 0.24897634983062744, 0.2487121969461441, 0.25214633345603943, 0.2525425851345062, 0.27037379145622253, 0.27578920125961304, 0.2735437750816345, 0.2705058753490448, 0.26878878474235535, 0.28556331992149353, 0.2938845455646515, 0.3011491298675537, 0.2996962070465088, 0.2999603748321533, 0.3035266101360321, 0.3055078685283661, 0.3109232485294342, 0.304979532957077, 0.3147536516189575, 0.3179236650466919, 0.3191123902797699, 0.33364152908325195, 0.3377360999584198, 0.32822611927986145, 0.34460440278053284, 0.3447364866733551, 0.3451327383518219, 0.3451327383518219, 0.35622772574424744, 0.34183067083358765, 0.35279354453086853, 0.3559635579586029, 0.36626601219177246, 0.3611147701740265, 0.3671905994415283, 0.3653414249420166, 0.37181350588798523, 0.3773609697818756, 0.3774930536746979, 0.37947431206703186, 0.3821159601211548, 0.39743760228157043, 0.38502180576324463, 0.3889842927455902, 0.3995509147644043, 0.3859463632106781, 0.39690926671028137, 0.3953242599964142, 0.4072117209434509, 0.4072117209434509, 0.4069475531578064, 0.409721314907074, 0.416589617729187, 0.4181746244430542, 0.42609959840774536, 0.4171179533004761, 0.4213446080684662, 0.4225333631038666, 0.4295337498188019, 0.42689210176467896, 0.43666622042655945, 0.4325716495513916, 0.43164706230163574, 0.439439982175827, 0.43204331398010254, 0.4395720660686493, 0.4451195299625397, 0.4504028558731079, 0.4419495463371277, 0.45106327533721924, 0.45370492339134216], "val_loss": [1.967581340244838, 1.9656849588666643, 1.9637961387634277, 1.9618938991001673, 1.9599991525922502, 1.9581011363438197, 1.9562546185084753, 1.9543516295296806, 1.9524664197649275, 1.9505768503461565, 1.9487159592764718, 1.9468121528625488, 1.944913387298584, 1.9430134637015206, 1.9410956246512276, 1.9391465868268694, 1.937199251992362, 1.9352447646004813, 1.9332504272460938, 1.9312548637390137, 1.929220267704555, 1.9271747725350517, 1.9251044137137276, 1.9229599407741003, 1.9208104951041085, 1.9186115264892578, 1.916381563459124, 1.9141064371381487, 1.911799498966762, 1.9094621794564384, 1.9070988382611955, 1.9046453067234583, 1.9021716799054826, 1.8996478489467077, 1.8971097128731864, 1.8944788660321916, 1.8918280601501465, 1.8890722138541085, 1.8862927981785365, 1.8834221703665597, 1.8804856027875627, 1.8775089808872767, 1.8744581086294991, 1.871340206691197, 1.8681376320975167, 1.864837374005999, 1.861497129712786, 1.8580455780029297, 1.8545006343296595, 1.8508693150111608, 1.84713533946446, 1.8432754107883997, 1.8394126892089844, 1.8354033061436243, 1.8312990324837821, 1.8271491186959403, 1.8228731155395508, 1.8184947286333357, 1.8140541485377721, 1.8094938823154993, 1.8048276220049178, 1.8000095912388392, 1.7950972829546248, 1.7900427409580775, 1.784853390284947, 1.7795791625976562, 1.7741667883736747, 1.7686584336417062, 1.7630440848214286, 1.7572988782610213, 1.7513151168823242, 1.745295524597168, 1.739145006452288, 1.7328173773629325, 1.7263972418648856, 1.7198404925210136, 1.7131686551230294, 1.706315313066755, 1.6993209634508406, 1.692174025944301, 1.6848798819950648, 1.6775089332035609, 1.669910192489624, 1.6622508593967982, 1.6543993949890137, 1.6465248039790563, 1.6384453092302596, 1.6302855355398995, 1.6219205856323242, 1.6133934429713659, 1.6048283917563302, 1.5961714472089494, 1.5873666150229317, 1.5784920624324255, 1.5693952015468053, 1.5602264744894845, 1.5510479382106237, 1.541734048298427, 1.5322882107325964, 1.522775071007865], "val_accuracy": [0.04866666719317436, 0.0573333315551281, 0.07000000029802322, 0.08833333104848862, 0.10433333367109299, 0.12166666984558105, 0.14133332669734955, 0.1599999964237213, 0.18000000715255737, 0.19733333587646484, 0.21799999475479126, 0.23499999940395355, 0.2513333261013031, 0.26866665482521057, 0.28066667914390564, 0.29633334279060364, 0.31166666746139526, 0.3253333270549774, 0.33766666054725647, 0.3466666638851166, 0.35633334517478943, 0.36399999260902405, 0.37033334374427795, 0.37566667795181274, 0.3799999952316284, 0.3843333423137665, 0.3903333246707916, 0.3933333456516266, 0.39899998903274536, 0.4023333191871643, 0.4076666533946991, 0.41200000047683716, 0.41600000858306885, 0.4189999997615814, 0.4246666729450226, 0.4273333251476288, 0.4309999942779541, 0.43533334136009216, 0.4423333406448364, 0.4463333189487457, 0.44733333587646484, 0.4493333399295807, 0.4506666660308838, 0.4543333351612091, 0.4566666781902313, 0.4596666693687439, 0.46133333444595337, 0.46533334255218506, 0.46799999475479126, 0.46933332085609436, 0.4716666638851166, 0.4729999899864197, 0.476666659116745, 0.47866666316986084, 0.4793333411216736, 0.48266667127609253, 0.4866666793823242, 0.48899999260902405, 0.4909999966621399, 0.49433332681655884, 0.49666666984558105, 0.49799999594688416, 0.49933332204818726, 0.5026666522026062, 0.5040000081062317, 0.5066666603088379, 0.5083333253860474, 0.5090000033378601, 0.5133333206176758, 0.5146666765213013, 0.5170000195503235, 0.5203333497047424, 0.5226666927337646, 0.5236666798591614, 0.5270000100135803, 0.5296666622161865, 0.5323333144187927, 0.5333333611488342, 0.534333348274231, 0.5383333563804626, 0.5413333177566528, 0.5419999957084656, 0.5443333387374878, 0.5460000038146973, 0.546999990940094, 0.5486666560173035, 0.5506666898727417, 0.5526666641235352, 0.5550000071525574, 0.5556666851043701, 0.5566666722297668, 0.5586666464805603, 0.5603333115577698, 0.5616666674613953, 0.5646666884422302, 0.5653333067893982, 0.5690000057220459, 0.5699999928474426, 0.5709999799728394, 0.5726666450500488]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1], [4, 8, 0, 8], [2, 1], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3], [17], [1, 1, 0], [0, 0, 0, 0, 0, 1], [7, 5, 2, 7, 0], [4], [], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [0, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.302912613782176, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [6, 3, 6, 2, 1, 2, 6, 6, 6, 8, 2, 9, 9, 8, 1], [0, 1, 0, 0, 3, 3, 0, 2, 1, 0], [70, 6, 15, 8, 95, 99, 2], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [5, 9], [4], [96], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0, 6, 0], [1, 2, 0], [41, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 7, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 3, 2, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0], [1, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 3, 0], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.6183654176497644, 2.3125846167093163, 2.3152393887874676, 2.3154875954711254, 8129.136302225027, 2.3040874660637054, 2.3037915932047306, 2.3035490275720454, 2.303359303791226, 2.303220233109806], "accuracy": [0.09496764093637466, 0.10315678268671036, 0.10474177449941635, 0.09206181764602661, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9860663414001465, 1.9764244215829032, 1.977795124053955, 2.0339807782854353, 1.9749223164149694, 1.9746340342930384, 1.974418776375907, 1.9742700031825475, 1.9741309029715401, 1.974015440259661], "val_accuracy": [0.07999999821186066, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 3, 2, 0], [1, 2, 1, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5], [17], [0, 0, 0, 1], [0, 1, 1], [7, 3], [4, 3], [], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [69]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [6, 1, 8, 3, 4, 5, 2, 3, 6, 2, 8, 0, 8, 1, 1, 7, 0], [2, 0, 2, 0, 1, 1, 2, 3, 1, 1, 2, 3], [43, 3, 17, 82], [0], [1, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3], [17], [1, 1, 0], [0, 0, 0, 0, 0, 1], [9, 3], [4], [40], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 3, 2], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 17, 12, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [0], [28], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [1, 0, 0, 1], [1, 0, 0, 0, 0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [6, 1, 0, 2, 2, 2, 0, 0, 9, 5, 9], [3, 2, 0, 2, 2], [41, 60, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 11, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(sigma, beta), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(beta))))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3175121854703.432, 77062383515408.61, 449489471223936.5, 1557412393270631.8, 4092873255150662.0, 9178096678809890.0], "accuracy": [0.0956280529499054, 0.09787346422672272, 0.09985470771789551, 0.09998679161071777, 0.10421344637870789, 0.10157178342342377], "val_loss": [13085937874651.428, 134968105762816.0, 575732619748498.2, 1695995995581878.8, 4057620347205339.5, 8479027185432283.0], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 1, 8, 3, 1, 6, 2, 3, 8, 6, 8, 0, 4, 6, 7, 2], [2, 0, 2, 0, 0, 1, 2, 3, 1, 2, 1, 1, 2], [55, 75, 97, 86], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3], [17], [1, 1, 0], [0, 0, 0, 0, 0, 1], [9, 3], [4], [40], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 2], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 16, 13, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(alpha))))))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 1, 2, 1, 8, 3, 3, 8, 4, 5], [2, 2, 0, 1, 3, 1, 2, 0], [32, 78], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 1, 1], [2, 3, 0, 3, 0], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 3, 3, 2, 1, 0, 3, 2, 1, 1, 0, 10, 5, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.math.subtract(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0], [1], [], [1], [], [0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 0, 0, 0, 0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 1, 0, 8, 9, 8, 9], [1, 2, 0, 3, 2, 0, 3, 0, 0, 2, 1, 3, 0, 1], [46, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 8, 7, 1, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(alpha)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3889123356.8219767, 75568285738.46942, 350261024345.7403, 975596118361.1655, 2081712666945.0906, 3843923491329.6904], "accuracy": [0.09549596905708313, 0.09813763201236725, 0.09985470771789551, 0.09959053993225098, 0.10394927859306335, 0.10236428678035736], "val_loss": [14849759524.571428, 118774188324.57143, 400833651858.2857, 950092899474.2858, 1855635624521.1428, 3206463019885.7144], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0, 4, 2, 9], [1, 2, 0], [41, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 8, 6, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(alpha, beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [70], [0, 1, 0], [0, 1], [5, 2, 2, 7, 0], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 1, 1, 9], [0, 3, 0, 3, 0], [41, 60, 48]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 9, 6, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.subtract(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [38419878.72390496, 745561050.9406948, 3454359968.511425, 9619985527.969357, 20524903070.04306, 37897008067.00092], "accuracy": [0.0956280529499054, 0.09813763201236725, 0.09985470771789551, 0.09959053993225098, 0.10394927859306335, 0.10236428678035736], "val_loss": [146584800.0, 1171551451.4285715, 3952730550.857143, 9367956918.857143, 18295073060.57143, 31611673453.714287], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 6, 5, 8], [2, 3, 3, 2, 1], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [0, 1, 1, 1], [0, 0, 0, 0, 0, 1], [3, 9], [4], [], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 0, 1, 5, 5, 8], [1, 2, 0], [41, 65, 55, 52, 58, 36, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 9, 7, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.square(alpha)), tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 6, 5, 8], [2, 3, 3], [13], [1], [0, 0, 1, 1, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 9, 4, 4, 0, 7, 6, 0, 8, 3, 1, 6, 7, 2, 8, 8, 9, 9, 4, 0, 5, 7, 7, 2], [3, 2, 0, 3, 2, 0, 3, 0, 0, 2, 1, 3, 0, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 7, 5, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(grad, grad), grad), lambda shape,  alpha, beta, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [17], [1, 1, 0], [0, 1], [5, 9], [4], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [52, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(alpha, beta))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07594769448041916, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 2, 5, 6, 9, 5], [2, 1, 3], [56], [0, 1, 1, 1], [0, 0, 1, 1, 0, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [6, 0, 0, 6, 3, 4, 0], [1, 2, 1, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 6, 5, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(alpha), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.math.pow(alpha, sigma)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}]