[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.143885498962634, 1.4081993482966606, 1.1340389846259609, 0.940782250902672, 0.8477957175077464, 0.8165492578158053, 0.7810814684140542, 0.7300559989355181, 0.7264995631635024, 0.679946758964074, 0.6801718807790447, 0.6624958742453737, 0.6478914471429021, 0.6457413794846032, 0.619282764482177, 0.6135736964460944, 0.6003858909914286, 0.6120209387973347, 0.5846468777688676, 0.5855102968521405, 0.5745780398234431, 0.5662885715917054, 0.5598483383852367, 0.5610729222126987, 0.5515290149340556, 0.5395130277341305, 0.5412573517589143, 0.5300171942742997, 0.5268849854093927, 0.5270876226376675, 0.524063852807676, 0.5169603777064025, 0.5066790466633896, 0.510907179880073], "accuracy": [0.29322415590286255, 0.5252938866615295, 0.602562427520752, 0.6474705934524536, 0.687887966632843, 0.6930392384529114, 0.7018887996673584, 0.7189275026321411, 0.7248712182044983, 0.7383436560630798, 0.7358341217041016, 0.7417778372764587, 0.76106196641922, 0.7561748623847961, 0.7568352818489075, 0.7676661014556885, 0.7751948237419128, 0.7689869403839111, 0.7751948237419128, 0.7774402499198914, 0.7812706232070923, 0.7861577272415161, 0.7849689722061157, 0.7915731072425842, 0.7932901978492737, 0.7960638999938965, 0.7979130744934082, 0.8004226684570312, 0.8033285140991211, 0.7973847389221191, 0.7994980812072754, 0.7997622489929199, 0.8080834746360779, 0.807158887386322], "val_loss": [1.3535585062844413, 0.8929510116577148, 0.7953990186963763, 0.6490966762815203, 0.6002972636904035, 0.5883751596723285, 0.5581752743039813, 0.5404443911143711, 0.5116243532725743, 0.5070885249546596, 0.5168128183909825, 0.49205245290483746, 0.47817271096365793, 0.4652224949428013, 0.4524178334644863, 0.4584759644099644, 0.4613086496080671, 0.46671342849731445, 0.4417493087904794, 0.4386087145124163, 0.4440159797668457, 0.4343820554869516, 0.4311744400433132, 0.4202397806303842, 0.41953531333378385, 0.41689894029072355, 0.4108052338872637, 0.41201278141566683, 0.4044520599501474, 0.4044937661715916, 0.4138533217566354, 0.3996796863419669, 0.399200371333531, 0.3964240380695888], "val_accuracy": [0.609000027179718, 0.6546666622161865, 0.6610000133514404, 0.7086666822433472, 0.7239999771118164, 0.734333336353302, 0.7509999871253967, 0.7606666684150696, 0.778333306312561, 0.7799999713897705, 0.778333306312561, 0.7883333563804626, 0.7979999780654907, 0.8006666898727417, 0.812333345413208, 0.8040000200271606, 0.7856666445732117, 0.7983333468437195, 0.8183333277702332, 0.8056666851043701, 0.8066666722297668, 0.8136666417121887, 0.815666675567627, 0.8256666660308838, 0.8220000267028809, 0.8306666612625122, 0.8343333601951599, 0.8220000267028809, 0.8379999995231628, 0.8379999995231628, 0.8246666789054871, 0.8346666693687439, 0.8333333134651184, 0.8346666693687439]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1], [1, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 0, 2], [20, 63, 56, 45]], "fitness": -0.6597142815589905, "mapping_values": [1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.302571732590715, 2.301692387084951, 2.3004081617367187, 2.3000354677726094, 2.300152239215656, 2.2957093552229284, 2.294838536983909, 2.293069576684904, 2.2907112976185573, 2.288859198736146, 2.287020875635778, 2.287320071806005, 2.282984590643763, 2.28185249540107, 2.2817784529383536, 2.279839496980364, 2.277455769982147, 2.274881675369027, 2.272521380184034, 2.2715497492736185, 2.2699950540920746, 2.267457437679012, 2.2658311180733985, 2.2630665664423444, 2.257938484552908, 2.253496450723485, 2.2499098697153963, 2.2469997574797773, 2.2403859649714133, 2.2370091997133255, 2.228691745002776, 2.214676916166272, 2.2035766535620285, 2.1882475825065257, 2.1691237463690993, 2.13976354451621, 2.0985671766618963, 2.0380622444214556, 1.94099686930224, 1.8101692222065662, 1.6660128337296796, 1.5310946355611106, 1.4324419074889265, 2.4088052949412875, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.09377889335155487, 0.09694888442754745, 0.09998679161071777, 0.09853387624025345, 0.11055342853069305, 0.10540219396352768, 0.11596883088350296, 0.12032756209373474, 0.12389380484819412, 0.13472460210323334, 0.1298375427722931, 0.136045441031456, 0.14397041499614716, 0.1472724825143814, 0.1468762308359146, 0.14832915365695953, 0.16180160641670227, 0.1640470176935196, 0.16655659675598145, 0.17078325152397156, 0.17434948682785034, 0.17751948535442352, 0.1810857206583023, 0.19455818831920624, 0.19812442362308502, 0.19759608805179596, 0.20063400268554688, 0.20737022161483765, 0.21384228765964508, 0.21661603450775146, 0.23880596458911896, 0.24303261935710907, 0.25624093413352966, 0.2611279785633087, 0.280940443277359, 0.2995641231536865, 0.3183199167251587, 0.3494914770126343, 0.38488972187042236, 0.414608359336853, 0.4443270266056061, 0.4737815260887146, 0.46268656849861145, 0.12019548565149307, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700778552464075, 1.969273362840925, 1.968151637486049, 1.9668479646955217, 1.9652972902570451, 1.9637344905308314, 1.9622370856148856, 1.9605563027518136, 1.95891387122018, 1.9573145593915666, 1.9557130677359444, 1.954139300755092, 1.952592236655099, 1.9511302539280482, 1.9494843482971191, 1.947845458984375, 1.9460482597351074, 1.944188049861363, 1.942157541002546, 1.9401561192103796, 1.9379288809640067, 1.9354401997157507, 1.9328205244881767, 1.929757731301444, 1.9264091082981654, 1.9223290170942033, 1.9176318304879325, 1.9125280380249023, 1.9062933921813965, 1.8988732610430037, 1.8900673048836845, 1.878617627280099, 1.863971505846296, 1.8451669556753976, 1.819169316973005, 1.7818658692496163, 1.7251966340201241, 1.638819932937622, 1.5031662668500627, 1.329465661730085, 1.1454690524509974, 1.024754864828927, 0.932877813066755, 3333.568917410714, NaN, NaN, NaN, NaN], "val_accuracy": [0.03866666555404663, 0.04533333331346512, 0.0533333346247673, 0.06300000101327896, 0.0793333351612091, 0.09366666525602341, 0.10700000077486038, 0.12300000339746475, 0.1313333362340927, 0.14366666972637177, 0.15433333814144135, 0.1653333306312561, 0.17633333802223206, 0.1860000044107437, 0.19366666674613953, 0.20800000429153442, 0.21699999272823334, 0.22966666519641876, 0.24066667258739471, 0.24933333694934845, 0.2619999945163727, 0.27166667580604553, 0.28166666626930237, 0.2966666519641876, 0.3113333284854889, 0.32066667079925537, 0.33666667342185974, 0.3543333411216736, 0.375, 0.390666663646698, 0.4050000011920929, 0.414000004529953, 0.41733333468437195, 0.4230000078678131, 0.4336666762828827, 0.445333331823349, 0.4676666557788849, 0.49900001287460327, 0.5383333563804626, 0.5659999847412109, 0.6029999852180481, 0.6190000176429749, 0.6643333435058594, 0.2666666805744171, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.12228571623563766, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.8186161112807384, 2.3365731363078592, 2.2540568194101516, 2.3047825416254564, 2.3032739026403823, 2.301056575214606, 2.2708994778565224, 2.3007936497815393, 2.1302285229981837, 2.3064627934283175, 2.3039563776652856], "accuracy": [0.21265354752540588, 0.10500594228506088, 0.18716153502464294, 0.10038304328918457, 0.10355303436517715, 0.11372341960668564, 0.12072381377220154, 0.11596883088350296, 0.28939375281333923, 0.09747721254825592, 0.09681680053472519], "val_loss": [2.153813975197928, 1.9413318634033203, 1.9763894081115723, 1.973990031651088, 1.9732354027884347, 1.9616778237479073, 1.9744811739240373, 1.9536326272147042, 1.9818000112261092, 1.9740989548819405, 1.9738061087472099], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10366666316986084, 0.09666666388511658, 0.09666666388511658, 0.1809999942779541, 0.10100000351667404, 0.1446666717529297, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 2, 3, 0, 2], [40, 20, 56, 45]], "fitness": -0.10199999809265137, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 12, 7, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.negative(beta))), sigma)", "other_info": {"loss": [8.85814665009665e+20, 1.0072641644502698e+21, 1.0143149944929291e+21, 9.996830911698426e+20, 1.0006518435153959e+21, 1.0216356482105025e+21], "accuracy": [0.09800554811954498, 0.10157178342342377, 0.09813763201236725, 0.10077928751707077, 0.09972262382507324, 0.09628847241401672], "val_loss": [7.390806884035468e+20, 7.390482584651587e+20, 7.38995341169537e+20, 7.389218359899045e+20, 7.388278434530388e+20, 7.387132630321619e+20], "val_accuracy": [0.09399999678134918, 0.09399999678134918, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341, 0.09366666525602341]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [94], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 5, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.square(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [796901501.0500991, 14992030420.955751, 70237859174.01453, 194344886593.361, 416780024388.7761, 763922315368.6858], "accuracy": [0.09879804402589798, 0.09985470771789551, 0.10157178342342377, 0.10011887550354004, 0.09972262382507324, 0.09774138033390045], "val_loss": [2958504960.0, 23659762249.142857, 79842787328.0, 189245568731.42856, 369605129947.4286, 638663112411.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 3, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 12, 7, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))), sigma))", "other_info": {"loss": [247800910478499.0, 4205482871214578.5, 1.7667052926393212e+16, 4.395890098394285e+16, 8.51234517569394e+16, 1.4163511451607214e+17], "accuracy": [0.09866596013307571, 0.09972262382507324, 0.10117553919553757, 0.10051512718200684, 0.09919429570436478, 0.09734513610601425], "val_loss": [887682977909028.6, 6297482452683045.0, 1.8990799808252196e+16, 4.051210967509518e+16, 7.156071049858721e+16, 1.1248723297813885e+17], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 2, 0, 0, 2, 2], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0, 0, 0, 2, 2], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [15], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [2, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [72.00055646587751, 6815.376111741142, 111813.40400458989, 775278.5417051909, 3405550.256901334, 11158442.199973583], "accuracy": [0.09787346422672272, 0.1002509593963623, 0.10157178342342377, 0.10011887550354004, 0.09972262382507324, 0.09760929644107819], "val_loss": [444.20980398995533, 19709.635602678572, 206264.94642857142, 1115345.5357142857, 4162486.4285714286, 12254025.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 22, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3041777029139507, 2.3229036120186866, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.0820235088467598, 0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9751184327261788, 2.0084101131984164, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.020999999716877937, 0.09433333575725555, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [82], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 3, 2, 3, 0, 2], [64, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.negative(sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 2, 2, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(beta), beta))", "other_info": {"loss": [2.3030758361617383, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 0, 1, 4, 5, 0, 0, 4, 0, 8, 1, 9, 1, 0, 2, 2, 2, 0, 1, 1, 1, 3], [3, 2, 3, 2, 3, 0, 2, 3, 3, 3, 2, 0, 2, 1], [40, 63, 4, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 37, 23, 14, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.subtract(sigma, tf.math.pow(tf.math.square(tf.math.negative(beta)), tf.math.negative(sigma)))), tf.math.pow(beta, tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(sigma), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta))))))), tf.math.add(tf.math.add(tf.math.negative(sigma), sigma), tf.math.subtract(sigma, tf.math.subtract(tf.math.subtract(beta, tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), beta)), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0, 8, 7, 4, 7, 3], [2, 1, 1, 1], [96, 12, 93], [1, 1, 1, 1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 2, 3, 2, 3, 0, 2], [62, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(sigma), tf.math.negative(beta)))), sigma))", "other_info": {"loss": [2.3030758361617383, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 2, 0, 0, 2, 2], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [76, 63, 56, 45]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30183562979234, 2.300213379237032, 2.3003234572933966, 2.3021559877764703, 2.3023813557489405, 2.30252385863759, 2.303033358101926], "accuracy": [0.09245806187391281, 0.10421344637870789, 0.09681680053472519, 0.08426892012357712, 0.09549596905708313, 0.09893012791872025, 0.09932637959718704], "val_loss": [1.969425814492362, 1.9702959060668945, 1.972942556653704, 1.9735546112060547, 1.9736337661743164, 1.97401762008667, 1.9744127818516322], "val_accuracy": [0.07666666805744171, 0.10766666382551193, 0.07833333313465118, 0.09600000083446503, 0.0963333323597908, 0.0963333323597908, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 9, 7, 0, 0, 0, 8, 7, 4, 7, 3], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [92, 63, 56, 45]], "fitness": -0.08171428740024567, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.301754388480438, 2.299168254500603, 2.298996759301809, 2.3003670925225532, 2.3014970934228844, 2.3012468882870474, 2.3018100119663694], "accuracy": [0.09206181764602661, 0.10236428678035736, 0.10394927859306335, 0.09655263274908066, 0.08492933213710785, 0.0870426595211029, 0.07991018146276474], "val_loss": [1.9686849457877023, 1.9686837196350098, 1.9704741750444685, 1.9718030520847865, 1.9721450805664062, 1.9723947388785226, 1.9725573403494698], "val_accuracy": [0.0729999989271164, 0.0963333323597908, 0.09600000083446503, 0.06700000166893005, 0.07599999755620956, 0.08766666799783707, 0.08033332973718643]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [23], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 3, 1, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.math.negative(beta)))", "other_info": {"loss": [2.3026590923260954, 2.3023754635885045, 2.30213218140895, 2.30301141719997, 2.3047848834243228, 2.3020293362750635], "accuracy": [0.09126931428909302, 0.09298639744520187, 0.09430722147226334, 0.09338264167308807, 0.08717474341392517, 0.0940430611371994], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [7, 2, 4, 6, 7, 0, 0, 0], [1, 1, 1, 0, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [34], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), sigma)))", "other_info": {"loss": [2.3026590923260954, 2.3023754635885045, 2.30213218140895, 2.30301141719997, 2.3047848834243228, 2.3020293362750635], "accuracy": [0.09126931428909302, 0.09298639744520187, 0.09430722147226334, 0.09338264167308807, 0.08717474341392517, 0.0940430611371994], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [94], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026590923260954, 2.3023754635885045, 2.30213218140895, 2.30301141719997, 2.3047848834243228, 2.3020293362750635], "accuracy": [0.09126931428909302, 0.09298639744520187, 0.09430722147226334, 0.09338264167308807, 0.08717474341392517, 0.0940430611371994], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 5, 6, 6, 1, 0, 0], [3, 0, 1, 0, 1], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [55], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [5, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [3, 1, 3, 6, 2, 9, 6, 0, 4, 0, 2, 8, 0, 5], [1, 2, 3, 1, 3, 0, 2, 2], [99, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 17, 10, 7, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), alpha), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, beta), tf.math.divide_no_nan(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), sigma), tf.math.divide_no_nan(alpha, tf.math.negative(sigma)))), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))", "other_info": {"loss": [2.3026590923260954, 2.3023754635885045, 2.30213218140895, 2.30301141719997, 2.3047848834243228, 2.3020293362750635], "accuracy": [0.09126931428909302, 0.09298639744520187, 0.09430722147226334, 0.09338264167308807, 0.08717474341392517, 0.0940430611371994], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0], [0, 0, 1, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [78, 5], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 5, 6, 6, 5, 0, 0, 4, 0, 8], [0, 2, 3, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 2, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)), sigma)", "other_info": {"loss": [2.3026590923260954, 2.3023754635885045, 2.30213218140895, 2.30301141719997, 2.3047848834243228, 2.3020293362750635], "accuracy": [0.09126931428909302, 0.09298639744520187, 0.09430722147226334, 0.09338264167308807, 0.08717474341392517, 0.0940430611371994], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]