[{"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [34, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8468571305274963, "mapping_values": [1, 15, 15, 8, 7, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), alpha), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9581694043370728, 1.1311063160355914, 0.7768445482201753, 0.6762370121965571, 0.6125757999628637, 0.5595325247376366, 0.5323833388549115, 0.50484370179558, 0.4754459157619557, 0.47510013026788706, 0.4489351550522828, 0.4226090066688975, 0.4071952652473019, 0.3958560054989665, 0.38052648001217243, 0.36445054894094503, 0.35473073359414997, 0.3534807733155166, 0.3428768828647043, 0.33149841443154915, 0.3279432330101929, 0.3201391855920263, 0.3083524903238977, 0.29198584122318305, 0.28686670555320193, 0.27695317335132563], "accuracy": [0.3485668897628784, 0.5785233378410339, 0.6959450244903564, 0.7397965788841248, 0.7670056819915771, 0.7810064554214478, 0.793422281742096, 0.8094043135643005, 0.8231409192085266, 0.8245938420295715, 0.8342359066009521, 0.8421608805656433, 0.8486329317092896, 0.8539162874221802, 0.8584070801734924, 0.8590674996376038, 0.8638224601745605, 0.8663320541381836, 0.872407853603363, 0.874389111995697, 0.8779553771018982, 0.8812574148178101, 0.8849557638168335, 0.8886540532112122, 0.8894465565681458, 0.891559898853302], "val_loss": [1.2958317143576485, 0.6230060373033796, 0.5180713619504657, 0.5126380409513202, 0.44609081745147705, 0.40779840094702585, 0.40075945002692087, 0.37953491721834454, 0.45409558500562397, 0.3674346464020865, 0.3433848108564104, 0.3362257991518293, 0.3289716839790344, 0.3284255010741098, 0.31669509410858154, 0.31290979044778006, 0.3260632838521685, 0.313968368938991, 0.307633570262364, 0.29804249320711407, 0.29238208702632357, 0.3038563983780997, 0.28708525214876446, 0.29740569421223234, 0.2995023557118007, 0.2946226256234305], "val_accuracy": [0.4716666638851166, 0.7196666598320007, 0.7689999938011169, 0.7753333449363708, 0.8019999861717224, 0.8216666579246521, 0.8243333101272583, 0.8363333344459534, 0.7929999828338623, 0.8293333053588867, 0.8600000143051147, 0.859666645526886, 0.8676666617393494, 0.859333336353302, 0.8706666827201843, 0.8663333058357239, 0.8583333492279053, 0.8656666874885559, 0.8733333349227905, 0.8786666393280029, 0.8846666812896729, 0.875333309173584, 0.8786666393280029, 0.8763333559036255, 0.8756666779518127, 0.8756666779518127]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8437142968177795, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9581690895212578, 1.13115099195665, 0.7771720340727122, 0.6769729789694334, 0.6131658641464753, 0.5592271767949321, 0.534746335261628, 0.5035324421942652, 0.47592283883949454, 0.4677732660943302, 0.447985138922729, 0.4232710598049194, 0.40394735766549894, 0.3911067639572147, 0.3857120259555103, 0.36324477661019694, 0.35946071643508765, 0.34951113267361195], "accuracy": [0.3485668897628784, 0.5786554217338562, 0.6951525807380676, 0.739400327205658, 0.7685906887054443, 0.7816668748855591, 0.7942147850990295, 0.8098005652427673, 0.8226125836372375, 0.8285563588142395, 0.8302733898162842, 0.8416325449943542, 0.8451988101005554, 0.8535200357437134, 0.860652506351471, 0.8627657890319824, 0.8648791313171387, 0.870030403137207], "val_loss": [1.2958355971745081, 0.6217413970402309, 0.5179628304072789, 0.5149049077715192, 0.44544196128845215, 0.41041065965379986, 0.40312039852142334, 0.38449552229472567, 0.4462719133922032, 0.3685230697904314, 0.3449059724807739, 0.3355253168514797, 0.3263539161000933, 0.33105827229363577, 0.31575850929532734, 0.31965094804763794, 0.32082865067890715, 0.3192148804664612], "val_accuracy": [0.4716666638851166, 0.7206666469573975, 0.7689999938011169, 0.7733333110809326, 0.8033333420753479, 0.8140000104904175, 0.8203333616256714, 0.8336666822433472, 0.793666660785675, 0.8256666660308838, 0.8576666712760925, 0.8619999885559082, 0.8700000047683716, 0.8583333492279053, 0.8679999709129333, 0.8633333444595337, 0.8606666922569275, 0.8616666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 2, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8428571224212646, "mapping_values": [1, 7, 7, 3, 4, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.958169136946747, 1.1315237259694755, 0.7772122997066774, 0.6772195300043786, 0.6148962543751065, 0.5605238631038996, 0.5375374573301472, 0.5043611617537694, 0.4767953028941529, 0.4604862969919297, 0.4515742532502485, 0.421885780410492, 0.4041340814180315, 0.3968848129777451, 0.3794469161827834, 0.3694595070429104, 0.35941113116104745, 0.3503078333792386, 0.34372157859071656, 0.3268462600937577, 0.3251188718183024, 0.3193206879771727, 0.30728474597511446, 0.2924899815088092, 0.2874244661646717, 0.273819381688265], "accuracy": [0.3485668897628784, 0.5781270861625671, 0.695813000202179, 0.739928662776947, 0.7670056819915771, 0.7820631265640259, 0.793950617313385, 0.8107251524925232, 0.8193105459213257, 0.8284242749214172, 0.8308017253875732, 0.8457271456718445, 0.8477083444595337, 0.852331280708313, 0.8593316674232483, 0.8602562546730042, 0.8613129258155823, 0.8651432991027832, 0.872407853603363, 0.8779553771018982, 0.8772949576377869, 0.8795403242111206, 0.8849557638168335, 0.8891823887825012, 0.8902390599250793, 0.8949940800666809], "val_loss": [1.2958405017852783, 0.6223192725862775, 0.5181161846433368, 0.5183585030691964, 0.44450254099709646, 0.40483358928135466, 0.3995215041296823, 0.3826783129147121, 0.4262668064662388, 0.3737661668232509, 0.3443133405276707, 0.3381167394774301, 0.3324046730995178, 0.327855042048863, 0.3191766653742109, 0.3200157880783081, 0.3222038320132664, 0.31065953629357473, 0.316750236919948, 0.29820336614336285, 0.2973338450704302, 0.3041999510356358, 0.2893525106566293, 0.3042643666267395, 0.3055116449083601, 0.2946814809526716], "val_accuracy": [0.4716666638851166, 0.7210000157356262, 0.7676666378974915, 0.7716666460037231, 0.8023333549499512, 0.8220000267028809, 0.8240000009536743, 0.8379999995231628, 0.8019999861717224, 0.82833331823349, 0.859000027179718, 0.8603333234786987, 0.8636666536331177, 0.8619999885559082, 0.862666666507721, 0.8656666874885559, 0.862333357334137, 0.8683333396911621, 0.871666669845581, 0.8773333430290222, 0.8813333511352539, 0.8740000128746033, 0.8773333430290222, 0.8700000047683716, 0.8763333559036255, 0.8756666779518127]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [2, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8354285955429077, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.958170834470655, 1.1312501996011624, 0.7763952998090902, 0.6782495254664735, 0.6111226999024358, 0.5600507346599046, 0.5405354458091282, 0.5052578189212097, 0.4735585462817143, 0.46484176116833015, 0.4478386762733898, 0.4248447158923632, 0.4034589776360143, 0.3921107543796486, 0.3851634961085596, 0.36537884966792716, 0.35949785384078775, 0.349463194199305], "accuracy": [0.3485668897628784, 0.5787875056266785, 0.6959450244903564, 0.7416457533836365, 0.7680623531341553, 0.780610203742981, 0.7917051911354065, 0.8117818236351013, 0.8249900937080383, 0.826310932636261, 0.8322546482086182, 0.8444063067436218, 0.8481045961380005, 0.8555012345314026, 0.860652506351471, 0.863558292388916, 0.8687095642089844, 0.8681812286376953], "val_loss": [1.2958704744066512, 0.6199638843536377, 0.5176302364894322, 0.5095833369663784, 0.4470652682440622, 0.40692894799368723, 0.39815216405051096, 0.3831870811326163, 0.43810510635375977, 0.36396147523607525, 0.34441979442323956, 0.3361277324812753, 0.32826279742377146, 0.3248904347419739, 0.3184340936797006, 0.32842607157570974, 0.3168088623455593, 0.3202695165361677], "val_accuracy": [0.4716666638851166, 0.7206666469573975, 0.7683333158493042, 0.7763333320617676, 0.8053333163261414, 0.8220000267028809, 0.8226666450500488, 0.8333333134651184, 0.7910000085830688, 0.8333333134651184, 0.8610000014305115, 0.8610000014305115, 0.8663333058357239, 0.8610000014305115, 0.8636666536331177, 0.8603333234786987, 0.862666666507721, 0.8583333492279053]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 5, 8, 4, 3, 4, 5, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 0, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8137142658233643, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.0772148847359517, 1.5078536191589371, 1.137723761778844, 0.821222408297134, 0.760232922824902, 0.7054120237801164, 0.6728192207095582, 0.6435621927175319, 0.6248452248054961, 0.5793151956397498, 0.5873398740907875, 0.5575552165012286, 0.5619677737121018, 0.5340222600680679, 0.5101973640999033, 0.49525179134037484, 0.48147549207704005, 0.47442911787512376, 0.45787393896020145, 0.4643611143356805, 0.44346637346599366, 0.4262783585986945, 0.4252012200508891, 0.4171052723040497, 0.425989765717668, 0.3973307856132861], "accuracy": [0.32082948088645935, 0.5082551836967468, 0.6013736724853516, 0.6840575933456421, 0.7084929347038269, 0.7235503792762756, 0.7378153204917908, 0.7531369924545288, 0.7602694630622864, 0.7746664881706238, 0.7745344042778015, 0.7903843522071838, 0.7835160493850708, 0.7955356240272522, 0.806630551815033, 0.8121780753135681, 0.8202351331710815, 0.8185180425643921, 0.8286884427070618, 0.8214238286018372, 0.8325188159942627, 0.8430854678153992, 0.8403117060661316, 0.8426892161369324, 0.8403117060661316, 0.852331280708313], "val_loss": [1.5481600080217635, 1.1650255748203822, 0.6372290849685669, 0.5719400133405413, 0.5714727469852993, 0.5087676048278809, 0.483682598386492, 0.47582973752702984, 0.4557976382119315, 0.49600015367780415, 0.46419971329825266, 0.4014630743435451, 0.443399293082101, 0.3904476421219962, 0.37687162842069355, 0.3830256462097168, 0.40670920269829886, 0.3826630030359541, 0.3585277795791626, 0.35325775827680317, 0.3572722928864615, 0.33412809882845196, 0.34722509554454256, 0.34956713233675274, 0.3422531315258571, 0.3605801463127136], "val_accuracy": [0.512333333492279, 0.5753333568572998, 0.734666645526886, 0.7580000162124634, 0.7260000109672546, 0.7736666798591614, 0.7923333048820496, 0.7756666541099548, 0.7799999713897705, 0.7739999890327454, 0.7713333368301392, 0.8296666741371155, 0.7979999780654907, 0.8360000252723694, 0.8513333201408386, 0.8450000286102295, 0.8266666531562805, 0.8293333053588867, 0.8526666760444641, 0.8489999771118164, 0.8619999885559082, 0.8603333234786987, 0.8483333587646484, 0.859666645526886, 0.8586666584014893, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [13, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [36, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7879999876022339, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2501276210472017, 1.989845845110743, 1.4877307867692084, 1.1812558081392222, 1.0390491833020479, 0.9605955579938701, 0.9068840054504592, 0.9044251882278876, 0.8358320564547267, 0.8043773963765981, 0.7789827399738177, 0.7687209002282941, 0.7477164303842332, 0.7348397700478924, 0.7200625504028402, 0.7070126824091769, 0.7171053054105683, 0.6925154725369398, 0.6764809839587879, 0.6683086723132519, 0.6709339593568766, 0.653655197988522, 0.6432026341024123, 0.6469451864838616, 0.6373508260423607, 0.6347686176318313, 0.6185583441311956, 0.6238964339997459, 0.6336391045669003, 0.6079143637427407, 0.6063970034117113, 0.5982387330254638, 0.605657917830324, 0.6085518618710777], "accuracy": [0.2102760523557663, 0.40707963705062866, 0.5198785066604614, 0.5881653428077698, 0.6313564777374268, 0.6544709801673889, 0.6808875799179077, 0.6754721999168396, 0.6929071545600891, 0.7047945857048035, 0.7181349992752075, 0.724210798740387, 0.7306828498840332, 0.7288337349891663, 0.7334566116333008, 0.7357020378112793, 0.7293620109558105, 0.7427024245262146, 0.7442874312400818, 0.7471932172775269, 0.7580240368843079, 0.7497028112411499, 0.759080708026886, 0.7600052952766418, 0.7651565074920654, 0.7631752490997314, 0.7670056819915771, 0.7635715007781982, 0.7602694630622864, 0.7734777331352234, 0.7726852297782898, 0.7795535326004028, 0.7712323069572449, 0.7750627398490906], "val_loss": [1.827876091003418, 1.3779714788709367, 0.9389494487217495, 0.7780013595308576, 0.7051399605614799, 0.6947615657533918, 0.6433802843093872, 0.6216486011232648, 0.5671190704618182, 0.5559774466923305, 0.5697715282440186, 0.5335866383143834, 0.5203799520220075, 0.5137490204402378, 0.5020243099757603, 0.5111230952399117, 0.4873700312205723, 0.485413704599653, 0.4923159394945417, 0.4788029875074114, 0.45787714208875385, 0.4626105512891497, 0.46221327781677246, 0.47301474639347624, 0.4534651892525809, 0.43924258436475483, 0.4559175116675241, 0.461133531161717, 0.44168909958430697, 0.43594907011304584, 0.42488703557423185, 0.4351919208254133, 0.43887036187308176, 0.4576456546783447], "val_accuracy": [0.4573333263397217, 0.5986666679382324, 0.6423333287239075, 0.6909999847412109, 0.7170000076293945, 0.6976666450500488, 0.7239999771118164, 0.7286666631698608, 0.7493333220481873, 0.7583333253860474, 0.7363333106040955, 0.7583333253860474, 0.7699999809265137, 0.7773333191871643, 0.7873333096504211, 0.7603333592414856, 0.7933333516120911, 0.796999990940094, 0.7736666798591614, 0.7889999747276306, 0.8063333630561829, 0.8016666769981384, 0.8046666383743286, 0.7829999923706055, 0.8159999847412109, 0.8149999976158142, 0.7913333177566528, 0.7839999794960022, 0.8213333487510681, 0.8050000071525574, 0.8190000057220459, 0.8146666884422302, 0.8033333420753479, 0.7873333096504211]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 5, 8, 4, 3, 4, 5, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 0, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 88, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 0, 5], [45, 95, 54, 66, 98], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 10, 7, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(beta))), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 6, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 0, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [78, 25, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [2, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3030311140197224, 2.3028856922591037, 2.3030396931207, 2.3028988700894915, 2.302954860855292, 2.3029933319021256, 2.3029759009878603, 2.3030439662013813], "accuracy": [0.09126931428909302, 0.09655263274908066, 0.09615638852119446, 0.09826971590518951, 0.09391097724437714, 0.09681680053472519, 0.09589222073554993, 0.09496764093637466], "val_loss": [1.9736765452793665, 1.973637240273612, 1.9735982758658273, 1.973663602556501, 1.973625932421003, 1.9735894203186035, 1.9736666679382324, 1.973722185407366], "val_accuracy": [0.10100000351667404, 0.10066666454076767, 0.10366666316986084, 0.09733333438634872, 0.10133333504199982, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 2, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 2, 0, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [34, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.1674621922071378, 3.5020292791881267, 7.758789174633728e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19812442362308502, 0.08849557489156723, 0.12112006545066833, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.4762037822178433, 2.0628907339913503, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.09233333170413971, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 0, 1, 3, 4, 2, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 8, 8, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha))))))), alpha)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 0, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 88, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 0, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 0, 5], [45, 95, 54, 66, 98], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11887465417385101, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 2, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [76, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [12, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 5, 8, 4, 3, 4, 5, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 3, 0, 2, 0, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 88, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.sqrt(grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [34, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1346.6962527573746, 21882.506614982332, 95331.29716599525, 260500.12975085853, 552133.5274815084, 1014164.6728470479], "accuracy": [0.09853387624025345, 0.10051512718200684, 0.09932637959718704, 0.10460969805717468, 0.1014397069811821, 0.09972262382507324], "val_loss": [4434.923409598215, 32600.540178571428, 107138.25669642857, 250674.125, 485835.28571428574, 835249.1428571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 0, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 2, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [34, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 8, 6, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(beta))), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [34, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1274003816.280991, 24211584125.108967, 109896984822.97186, 305772401742.04095, 654598008634.5308, 1209969803298.6248], "accuracy": [0.09866596013307571, 0.10038304328918457, 0.09945846349000931, 0.10487385839223862, 0.1014397069811821, 0.09972262382507324], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 8, 8, 4, 3, 4, 5, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 3, 2, 0, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [78, 25, 16, 87, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 0, 5], [45, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028161773560716, 2.3029494500982133, 2.3039461010404, 2.304675784864918, 2.3079078030261884, 2.3141461274312425], "accuracy": [0.09470347315073013, 0.10051512718200684, 0.09576013684272766, 0.09893012791872025, 0.09734513610601425, 0.10289261490106583], "val_loss": [1.973689079284668, 1.9736779757908411, 1.9743767465863908, 1.9756852558680944, 1.979022434779576, 1.98618255342756], "val_accuracy": [0.10300000011920929, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 1, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 1, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [87, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [18, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [5, 4, 3], [55], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302690480442221, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 8, 4, 3, 4, 8, 5, 3, 4, 1, 4, 2, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 3, 2, 0, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [46, 24, 16, 87, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [2, 4, 3], [55], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 1, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.04828571528196335, "mapping_values": [1, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), alpha), alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.166795970709915, 2.8989373907011893, 2.457561350958364, 2.431986995235237, 2.4575068275485417, 2.4365199281397496, 2.479607210151744, 2.484257755152317, 2.4290006423686172, 2.4797053728215745, 2.4822013023239418, 2.4367670940449053], "accuracy": [0.19812442362308502, 0.08070268481969833, 0.09840179979801178, 0.10170386731624603, 0.09906221181154251, 0.09760929644107819, 0.09866596013307571, 0.10434553027153015, 0.09840179979801178, 0.10038304328918457, 0.09853387624025345, 0.09694888442754745], "val_loss": [3.264822619301932, 2.0348070689610074, 2.0343708310808455, 2.080610070909773, 2.1663599695478166, 2.079800605773926, 2.0678185054234097, 2.167600836072649, 2.207503046308245, 2.12225273677281, 2.0394840921674455, 2.108290808541434], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.10066666454076767, 0.09733333438634872, 0.10000000149011612, 0.10100000351667404, 0.10366666316986084, 0.10066666454076767, 0.10100000351667404, 0.10000000149011612, 0.10066666454076767, 0.10100000351667404]}}]