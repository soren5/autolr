[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 0, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.840571403503418, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9830477293755446, 1.119548232075781, 0.8000730234933268, 0.6920242577637695, 0.6328461990065468, 0.5771414023805461, 0.5410114660506802, 0.5192297810041326, 0.4893124812330473, 0.4669723938114812, 0.4412721410293337, 0.4281820403452578, 0.4062769693067722, 0.4023467897660287, 0.3934022743255392, 0.39765971114905974, 0.37687306558183625, 0.3644497837640543, 0.3345992470603215, 0.33003845859307657, 0.3232194539531032, 0.3127179213951702, 0.29749840155112006, 0.2978203556068727, 0.28005295257369334], "accuracy": [0.33205652236938477, 0.6181482076644897, 0.695813000202179, 0.7255316376686096, 0.7520803213119507, 0.7757231593132019, 0.7936864495277405, 0.8020076751708984, 0.8164047002792358, 0.8278959393501282, 0.8321225643157959, 0.8421608805656433, 0.8412362933158875, 0.8469158411026001, 0.8511425256729126, 0.8527275323867798, 0.8617091774940491, 0.8593316674232483, 0.8792761564254761, 0.8710870146751404, 0.8786157965660095, 0.8815215826034546, 0.8873332738876343, 0.8906353116035461, 0.8953903317451477], "val_loss": [0.8551791736057827, 0.6160479443413871, 0.5450124570301601, 0.48549779823848177, 0.45011234283447266, 0.4255149449620928, 0.3968603014945984, 0.3875570722988674, 0.368375939982278, 0.3524393950189863, 0.3411793453352792, 0.32369278158460346, 0.34221239600862774, 0.33152610063552856, 0.32703414133616854, 0.32458254269191195, 0.31303107738494873, 0.3005894592830113, 0.30489385979516165, 0.2891879507473537, 0.29004256214414326, 0.28658331292016165, 0.28925671747752596, 0.28948930331638884, 0.2900555559567043], "val_accuracy": [0.6330000162124634, 0.7269999980926514, 0.7553333044052124, 0.7696666717529297, 0.7996666431427002, 0.8086666464805603, 0.8213333487510681, 0.8336666822433472, 0.8379999995231628, 0.8523333072662354, 0.8576666712760925, 0.8653333187103271, 0.8529999852180481, 0.8646666407585144, 0.8653333187103271, 0.8683333396911621, 0.8696666955947876, 0.875333309173584, 0.8796666860580444, 0.8840000033378601, 0.8786666393280029, 0.8833333253860474, 0.8823333382606506, 0.8840000033378601, 0.8823333382606506]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.840571403503418, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9822584827105918, 1.1238670066567837, 0.80415451638435, 0.6951392726529119, 0.6367313222342856, 0.5791511446367464, 0.545548205819065, 0.5238516283561179, 0.4946944560506765, 0.4686461206534913, 0.44844199318880135, 0.43455447525222934, 0.4093338806969914, 0.4029941589777826, 0.38318954588258114, 0.3858785326250036, 0.3742633239822365, 0.36251099547611143, 0.33952094941815647, 0.3340493457278933, 0.32983182382668647, 0.3153622216906577, 0.297412522614451, 0.29788698718737083, 0.2845454901996117], "accuracy": [0.3331131935119629, 0.6152423620223999, 0.6939638257026672, 0.7235503792762756, 0.7536653280258179, 0.7763835787773132, 0.7902522683143616, 0.8024039268493652, 0.8150838613510132, 0.8260467648506165, 0.8305375576019287, 0.8352925777435303, 0.8451988101005554, 0.845859169960022, 0.8560295701026917, 0.8525954484939575, 0.8658037185668945, 0.8617091774940491, 0.8712190985679626, 0.8716153502464294, 0.8749174475669861, 0.8829745054244995, 0.8873332738876343, 0.8853520154953003, 0.8905032277107239], "val_loss": [0.860887885093689, 0.6212535585675921, 0.5487472329820905, 0.48678929465157644, 0.45398335797446115, 0.43031937735421316, 0.40149996110371183, 0.38804502146584646, 0.3648930958339146, 0.354401741709028, 0.3454894082886832, 0.32613028798784527, 0.3265471799033029, 0.3169577121734619, 0.3234106387410845, 0.3210760610444205, 0.3233750377382551, 0.296465379851205, 0.3120973025049482, 0.2906002998352051, 0.2954767176083156, 0.28753762585776194, 0.2892761060169765, 0.29261189699172974, 0.29056074789592196], "val_accuracy": [0.6259999871253967, 0.722000002861023, 0.7513333559036255, 0.7666666507720947, 0.7940000295639038, 0.7960000038146973, 0.8190000057220459, 0.8383333086967468, 0.8429999947547913, 0.8506666421890259, 0.8519999980926514, 0.8659999966621399, 0.8619999885559082, 0.8700000047683716, 0.8663333058357239, 0.8730000257492065, 0.8676666617393494, 0.8793333172798157, 0.8766666650772095, 0.8853333592414856, 0.878333330154419, 0.8803333044052124, 0.8813333511352539, 0.8813333511352539, 0.8799999952316284]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8371428847312927, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 9, 6, 6, 0, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9830479498127465, 1.120007413954011, 0.8007202498066648, 0.6919833178124045, 0.632064382358549, 0.5773811752628326, 0.5406744441792729, 0.5177609208686367, 0.48812719656413084, 0.46427704714481716, 0.4413525337721646, 0.4292052406692203, 0.40690223916158574, 0.40221800737298474, 0.38948849992997076, 0.39439346489259486, 0.3781992569929888, 0.36069374510546276, 0.33423361745902247, 0.32755300423110467, 0.32863954017033525, 0.31297563575183585, 0.29906785904597516, 0.29690917324569516, 0.2838605279227163, 0.279501195459192, 0.26616062651992456, 0.2618558785942457, 0.25211514807325297, 0.25599164053307644, 0.24443726993240086, 0.24323776787487178, 0.24153984877624218, 0.2258474461319991, 0.21615957876655326, 0.2115985641051529], "accuracy": [0.33205652236938477, 0.6184123754501343, 0.6939638257026672, 0.7268524765968323, 0.7532690763473511, 0.7759873270988464, 0.7950072884559631, 0.8012151718139648, 0.8190463781356812, 0.8290846943855286, 0.8315942287445068, 0.8417646288871765, 0.8457271456718445, 0.8475762605667114, 0.854708731174469, 0.8535200357437134, 0.863029956817627, 0.8636903762817383, 0.8749174475669861, 0.8729361891746521, 0.8766345381736755, 0.8803328275680542, 0.8864086866378784, 0.8914278149604797, 0.8912957310676575, 0.8944657444953918, 0.8994848728179932, 0.898428201675415, 0.9068815112113953, 0.9050323367118835, 0.9089948534965515, 0.9068815112113953, 0.9058248400688171, 0.9100515246391296, 0.9153348207473755, 0.9170519113540649], "val_loss": [0.8552554675510952, 0.616100549697876, 0.5451126950127738, 0.48509180545806885, 0.44986597129276823, 0.42612465790339876, 0.39683150393622263, 0.3878635423524039, 0.3665619577680315, 0.35320002692086355, 0.3433011259351458, 0.3242819734982082, 0.33099896567208426, 0.3275855098451887, 0.3276309200695583, 0.3174785460744585, 0.3233112096786499, 0.2978118062019348, 0.3042125105857849, 0.29064599105290007, 0.28974803004946026, 0.2899699296270098, 0.29157128504344393, 0.29021975823811125, 0.2888763291495187, 0.28544494935444426, 0.29575940540858675, 0.2858371819768633, 0.2980989728655134, 0.293438332421439, 0.2837109054837908, 0.29053585869925364, 0.28442879234041485, 0.2789051958492824, 0.2890323145048959, 0.30662420817783903], "val_accuracy": [0.6330000162124634, 0.7276666760444641, 0.7549999952316284, 0.7693333625793457, 0.796999990940094, 0.8059999942779541, 0.8216666579246521, 0.8336666822433472, 0.8410000205039978, 0.8529999852180481, 0.8586666584014893, 0.8666666746139526, 0.8640000224113464, 0.8659999966621399, 0.8633333444595337, 0.8683333396911621, 0.8663333058357239, 0.8799999952316284, 0.8786666393280029, 0.8816666603088379, 0.8769999742507935, 0.8833333253860474, 0.8843333125114441, 0.8773333430290222, 0.8830000162124634, 0.8870000243186951, 0.8809999823570251, 0.8830000162124634, 0.8843333125114441, 0.8856666684150696, 0.8930000066757202, 0.8843333125114441, 0.8856666684150696, 0.8923333287239075, 0.8896666765213013, 0.8870000243186951]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8322857022285461, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9830477810365774, 1.1200196493996164, 0.8006985333727619, 0.6920344021814437, 0.6327418058366666, 0.5764283553216561, 0.5386841673152543, 0.5186685341350186, 0.48715923268954675, 0.4653632598955555, 0.44184390649252625, 0.4316158952328507, 0.4087147410393643, 0.40091110431932264, 0.391621094385489, 0.3931026626115052, 0.37718983559623576, 0.36406007322101797, 0.33516139067584466, 0.3325863319058318, 0.3253007144259424, 0.31419019912605856, 0.3035267364898488, 0.2982139586457613, 0.2815819383415453, 0.28453740741692957, 0.2696586355966521, 0.2646888456426796, 0.253732313348979, 0.25102786184254733, 0.24536032482672676, 0.24096016969426967, 0.23414897001918597, 0.22826389119712007, 0.22230017797711693, 0.2182513790328379, 0.21001184932378777, 0.20334022938260438, 0.19805150653164635], "accuracy": [0.33205652236938477, 0.618280291557312, 0.693831741809845, 0.7259278893470764, 0.752212405204773, 0.7754589915275574, 0.7952714562416077, 0.8041210174560547, 0.8170651197433472, 0.8260467648506165, 0.8343679904937744, 0.8404437899589539, 0.8451988101005554, 0.8461233377456665, 0.8552370667457581, 0.8525954484939575, 0.8614450097084045, 0.8601241707801819, 0.8751816153526306, 0.8708229064941406, 0.876370370388031, 0.8804649114608765, 0.8848236799240112, 0.8887861371040344, 0.8927486538887024, 0.8908994793891907, 0.8981640338897705, 0.8993527889251709, 0.9031832218170166, 0.9056927561759949, 0.9079381823539734, 0.9071456789970398, 0.9096552729606628, 0.9104477763175964, 0.9125610589981079, 0.9171839952468872, 0.920089840888977, 0.917580246925354, 0.924448549747467], "val_loss": [0.8552600315638951, 0.6160512140819004, 0.5451880012239728, 0.4850109645298549, 0.45020088127681185, 0.4248830165181841, 0.3967674544879368, 0.38717648812702726, 0.36632542099271503, 0.3545121465410505, 0.34398583854947773, 0.3242349624633789, 0.3334896649633135, 0.3275765691484724, 0.3221913150378636, 0.31852103982652935, 0.3200416735240391, 0.2983351690428598, 0.30639281443187166, 0.2911934682301113, 0.2928569827760969, 0.2882138660975865, 0.29481018441064016, 0.29324439593723844, 0.287840017250606, 0.2844382779938834, 0.29457150186811176, 0.28892968382154194, 0.29166232688086374, 0.2894399080957685, 0.28218397072383333, 0.29360105310167584, 0.28783191101891653, 0.2797075850622995, 0.2899789639881679, 0.2955441304615566, 0.28992983273097445, 0.2996143272944859, 0.29332990305764334], "val_accuracy": [0.6333333253860474, 0.7260000109672546, 0.7549999952316284, 0.7696666717529297, 0.7973333597183228, 0.8103333115577698, 0.8209999799728394, 0.8316666483879089, 0.8379999995231628, 0.8503333330154419, 0.8560000061988831, 0.8650000095367432, 0.8576666712760925, 0.8663333058357239, 0.8690000176429749, 0.8709999918937683, 0.8669999837875366, 0.8756666779518127, 0.8759999871253967, 0.8820000290870667, 0.8773333430290222, 0.8813333511352539, 0.8816666603088379, 0.8826666474342346, 0.8799999952316284, 0.8836666941642761, 0.8806666731834412, 0.8823333382606506, 0.8813333511352539, 0.8846666812896729, 0.8883333206176758, 0.8809999823570251, 0.8866666555404663, 0.8930000066757202, 0.8863333463668823, 0.8849999904632568, 0.8856666684150696, 0.8856666684150696, 0.8896666765213013]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8302857279777527, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9830478643303486, 1.1200158998809078, 0.800736646689381, 0.6917248624127854, 0.6326182234824184, 0.5772098369759623, 0.5405446531561309, 0.5184553771789883, 0.4896720194892168, 0.465500981324164, 0.44014800981271696, 0.42958762011255935, 0.40624398108030024, 0.40178491770158337, 0.38828782142271473, 0.39610913275428467, 0.3734706226175865, 0.35935603663386323, 0.3311860326329683, 0.3265822442050907, 0.325912067273258, 0.3125700658779449, 0.2948523056253608, 0.2928241089216675, 0.2798204494308345, 0.2749279252550054, 0.26678807268824795, 0.25772210491127134, 0.2501938231097488, 0.2576931073185066, 0.24323507982230283, 0.24230914379800583, 0.2353568921086338, 0.22366630899561332, 0.2174436378165668, 0.21014734561598264, 0.2034158203359671, 0.199186447289925, 0.19029560518452143], "accuracy": [0.33205652236938477, 0.618280291557312, 0.6947563290596008, 0.7250033020973206, 0.7516840696334839, 0.7757231593132019, 0.7938185334205627, 0.8029322624206543, 0.817989706993103, 0.828292191028595, 0.8321225643157959, 0.8392550349235535, 0.8481045961380005, 0.8461233377456665, 0.8574824929237366, 0.8490291833877563, 0.8687095642089844, 0.8636903762817383, 0.8771628737449646, 0.8734645247459412, 0.8779553771018982, 0.8813894987106323, 0.887597382068634, 0.8920882344245911, 0.8951261639595032, 0.8972394466400146, 0.9002773761749268, 0.8976356983184814, 0.9054285883903503, 0.9027869701385498, 0.9072777628898621, 0.9071456789970398, 0.9091269373893738, 0.9120327830314636, 0.9142781496047974, 0.9208822846412659, 0.9228635430335999, 0.9185048341751099, 0.9273543953895569], "val_loss": [0.8552508694784982, 0.6164236749921527, 0.5448881217411586, 0.4852259499686105, 0.45142332145145964, 0.4255381567137582, 0.3975375975881304, 0.38701518944331575, 0.3669230512210301, 0.3525206276348659, 0.34397596972329275, 0.32173929044178556, 0.33146182128361296, 0.32519241741725374, 0.3306720086506435, 0.317829498222896, 0.31842932530811857, 0.29244327545166016, 0.3053401623453413, 0.2905869739396231, 0.2888985276222229, 0.2876198887825012, 0.2904163769313267, 0.29254307065691265, 0.2881762555667332, 0.2829146810940334, 0.2964643750871931, 0.2860766904694693, 0.29531541892460417, 0.28543754134859356, 0.2902606214795794, 0.29054997648511616, 0.2884177991322109, 0.280974166733878, 0.29269081354141235, 0.2974207486425127, 0.2957327110426767, 0.2909182906150818, 0.3041412319455828], "val_accuracy": [0.6333333253860474, 0.7273333072662354, 0.7553333044052124, 0.768666684627533, 0.7960000038146973, 0.8080000281333923, 0.8216666579246521, 0.8333333134651184, 0.8363333344459534, 0.8516666889190674, 0.8550000190734863, 0.8669999837875366, 0.8640000224113464, 0.8669999837875366, 0.8640000224113464, 0.871666669845581, 0.875, 0.878333330154419, 0.8806666731834412, 0.8809999823570251, 0.8786666393280029, 0.8830000162124634, 0.8849999904632568, 0.8799999952316284, 0.8836666941642761, 0.8870000243186951, 0.8843333125114441, 0.878000020980835, 0.8809999823570251, 0.890999972820282, 0.887666642665863, 0.8809999823570251, 0.8836666941642761, 0.8930000066757202, 0.8889999985694885, 0.8866666555404663, 0.887333333492279, 0.890666663646698, 0.8880000114440918]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [53, 95, 54, 66], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [3, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.3151428699493408, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2590693081878572, 2.0781335437680437, 2.1688126379299506, 2.0606062241265675, 1.9834035926129068, 2.1632951434577192, 2.302052419577072, 2.236137286436761, 2.3052021291639826], "accuracy": [0.22335226833820343, 0.31924447417259216, 0.22401267290115356, 0.29824328422546387, 0.32941487431526184, 0.21899352967739105, 0.1142517477273941, 0.1768590658903122, 0.1022322028875351], "val_loss": [1.7852324077061243, 1.9806598254612513, 1.9340321677071708, 1.5906040668487549, 1.5421757698059082, 1.9777466229030065, 1.9046895844595773, 1.9744345120021276, 1.973750182560512], "val_accuracy": [0.33933332562446594, 0.10433333367109299, 0.21566666662693024, 0.4103333353996277, 0.4036666750907898, 0.10366666316986084, 0.2866666615009308, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [6, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [0, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1272689438.141855, 23849428959.268787, 109157293998.84824, 307277944546.0753, 654823328344.7936, 1191115444769.8809], "accuracy": [0.09787346422672272, 0.0952318087220192, 0.10130762308835983, 0.10408136248588562, 0.09813763201236725, 0.10315678268671036], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3041490578868715, 2.303898743414183, 2.3053165079816424, 2.31187448859325, 2.3317951544196203, 2.4723527414797792, 219.60920792044178, 1.9186208327560164e+16, 2.326552423771425, 2.3363920296376897, 2.337614484671604, 2.334042528695623, 2.3235459450512765], "accuracy": [0.08572183549404144, 0.08585391938686371, 0.08809932321310043, 0.08809932321310043, 0.08981640636920929, 0.09219389408826828, 0.0956280529499054, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.9706006731305803, 1.9714696747916085, 1.9735733440944128, 1.9774721009390694, 1.9989766393389021, 2.3158626556396484, 1.3092132832898486e+17, 1.9870094571794783, 1.9975293023245675, 2.0009704998561313, 1.999640601021903, 1.9939538410731725, 1.987158911568778], "val_accuracy": [0.03433333337306976, 0.02666666731238365, 0.01600000075995922, 0.028999999165534973, 0.07800000160932541, 0.09666666388511658, 0.10066666454076767, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3064321646238786, 2.3279415475945857, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.0754193663597107, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9765168598720007, 2.0168025153023854, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.026000000536441803, 0.09600000083446503, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [21, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 4, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 15, 10, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.square(beta), tf.math.sqrt(beta)), tf.math.square(tf.math.sqrt(tf.math.pow(beta, tf.math.negative(tf.math.pow(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 9, 2, 6, 0, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 1, 2, 0, 2, 2, 2, 1, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022416702996567, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 4, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 3, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [52], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 3, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.square(beta)))", "other_info": {"loss": [2.3087483860356475, 2.670016958917908, 7.055689092955301, 23.709529979495702, 62.92123882377845, 140.2236654644141, 283.95269039357106], "accuracy": [0.08558975160121918, 0.09311848133802414, 0.10038304328918457, 0.10460969805717468, 0.09787346422672272, 0.10276053100824356, 0.09800554811954498], "val_loss": [1.9819436073303223, 2.8065757070268904, 8.873608452933174, 25.947147914341517, 62.49285234723772, 130.61311558314733, 246.47242954799108], "val_accuracy": [0.09000000357627869, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 0, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [105.31229891655484, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17593449354171753, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [12193.607700892857, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 3, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 4, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 1, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 9, 6, 6, 0, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.310929384906735, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0019354820251465, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [88, 95, 54, 66], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3040828156890085, 2.303090643400939, 2.302489801719755, 2.3025498542299423, 2.3012021599727897, 2.3026899918904], "accuracy": [0.08585391938686371, 0.08770307898521423, 0.09245806187391281, 0.0952318087220192, 0.08757099509239197, 0.09047681838274002], "val_loss": [1.970385960170201, 1.9703860964093889, 1.970386368887765, 1.9703867776053292, 1.9703869819641113, 1.9703872544424874], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]