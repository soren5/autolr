[{"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 9, 5, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.836571455001831, "mapping_values": [1, 9, 9, 7, 2, 4, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.000520022427795, 1.0367359096710125, 0.7733333092623257, 0.6726733069803421, 0.6197755706072515, 0.5844540404857755, 0.5546795006488623, 0.5122208081972109, 0.4889013370849106, 0.47560599149887384, 0.4495705913684907, 0.44110809754874997, 0.4130183235174944, 0.4026726036575004, 0.38046310697375285, 0.37170499986377864, 0.35997003601873084, 0.35329912793619, 0.34464900945281907, 0.33071282284764597, 0.3122891869842258, 0.3006119477144243, 0.2903689238940405, 0.28173274812271976, 0.2902555632167693, 0.28557654270138866, 0.2777251219626636, 0.27192553522769153, 0.2535525294791564, 0.25695392921254023, 0.2536855093193029, 0.24237296038756612, 0.24557218698580754, 0.23487745203779453, 0.2322106761522045, 0.2159206585550447, 0.20510504046104935, 0.19892347235296065, 0.20311649687309716, 0.1896482677570565, 0.19373468836229932], "accuracy": [0.32043322920799255, 0.6262052655220032, 0.7040021419525146, 0.7327961921691895, 0.7584202885627747, 0.7751948237419128, 0.787082314491272, 0.7988376617431641, 0.817989706993103, 0.8208954930305481, 0.8335754871368408, 0.832650899887085, 0.846387505531311, 0.8496896028518677, 0.859199583530426, 0.8613129258155823, 0.8684453964233398, 0.8663320541381836, 0.8685774803161621, 0.8757099509239197, 0.8780874609947205, 0.8842953443527222, 0.8887861371040344, 0.8877294659614563, 0.8898428082466125, 0.889578640460968, 0.8951261639595032, 0.8920882344245911, 0.9022586345672607, 0.89988112449646, 0.9021265506744385, 0.9051644206047058, 0.9026548862457275, 0.9109761118888855, 0.9082023501396179, 0.9138818979263306, 0.9181085824966431, 0.9235239624977112, 0.9227314591407776, 0.9261656403541565, 0.9235239624977112], "val_loss": [0.8225691488810948, 0.6014189038957868, 0.535929799079895, 0.49145797320774626, 0.44419450419289724, 0.430845992905753, 0.39959449427468435, 0.3806939721107483, 0.3745582529476711, 0.3545011452266148, 0.3547434295926775, 0.3280734590121678, 0.33376353127615793, 0.3172096610069275, 0.31677515166146414, 0.30579683610371183, 0.30205061605998446, 0.30635648114340647, 0.2953476139477321, 0.2915032846587045, 0.2939178943634033, 0.2878787006650652, 0.2870020014899118, 0.29505945103509085, 0.2999440687043326, 0.29910291944231304, 0.2810207860810416, 0.28591011251722065, 0.292378876890455, 0.2894552860941206, 0.2915352497782026, 0.2828125017029898, 0.28672345195497784, 0.302330698285784, 0.28764147417885916, 0.2828507423400879, 0.28906255108969553, 0.30754938295909334, 0.2915440542357309, 0.30175425325121197, 0.29405828033174786], "val_accuracy": [0.6576666831970215, 0.7390000224113464, 0.7563333511352539, 0.7766666412353516, 0.8029999732971191, 0.8033333420753479, 0.8209999799728394, 0.8336666822433472, 0.8333333134651184, 0.8496666550636292, 0.8543333411216736, 0.8700000047683716, 0.856333315372467, 0.8683333396911621, 0.8713333606719971, 0.8756666779518127, 0.8773333430290222, 0.8723333477973938, 0.8736666440963745, 0.8813333511352539, 0.8773333430290222, 0.8763333559036255, 0.8833333253860474, 0.8846666812896729, 0.8740000128746033, 0.8786666393280029, 0.8863333463668823, 0.8836666941642761, 0.8806666731834412, 0.8843333125114441, 0.8843333125114441, 0.8893333077430725, 0.8843333125114441, 0.8786666393280029, 0.887333333492279, 0.8926666378974915, 0.8880000114440918, 0.8799999952316284, 0.8870000243186951, 0.8866666555404663, 0.8863333463668823]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 6, 1, 8, 9, 4, 8, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [72, 4, 96, 11, 64, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8342857360839844, "mapping_values": [1, 22, 22, 15, 7, 6, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.square(alpha))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0005198516519456, 1.0368394349166479, 0.7728178247783823, 0.6726365034622114, 0.6189388101520698, 0.5853399239227584, 0.553720384981843, 0.5124317803450265, 0.49067372307250245, 0.4770136433483162, 0.45239016298746404, 0.4421516707143165, 0.4089621857582161, 0.40134173349429747, 0.3812596677096292, 0.37403848002442214, 0.36060261253620324, 0.35350603963468746, 0.34851651776027465, 0.32996777647899805, 0.3141025847502829, 0.2985855275535029, 0.29565890599644934, 0.2833840215147888, 0.2855674211202029, 0.2824244001923834, 0.2755924174774907, 0.2720584364937848, 0.25216155193264866], "accuracy": [0.32043322920799255, 0.6263373494148254, 0.702681303024292, 0.7327961921691895, 0.7582882046699524, 0.7766477465629578, 0.7873464822769165, 0.8006868362426758, 0.8169330358505249, 0.8238013386726379, 0.8305375576019287, 0.8333113193511963, 0.8450667262077332, 0.8492933511734009, 0.8574824929237366, 0.860652506351471, 0.8628978729248047, 0.8646149635314941, 0.8623695969581604, 0.8730682730674744, 0.8794082403182983, 0.8868049383163452, 0.8862766027450562, 0.8893144726753235, 0.8902390599250793, 0.8910315632820129, 0.8939374089241028, 0.8923524022102356, 0.9079381823539734], "val_loss": [0.8225724526814052, 0.6019736528396606, 0.5350052288600377, 0.4882446527481079, 0.44387032304491314, 0.4295118876865932, 0.3973955086299351, 0.37955595765795025, 0.3731558493205479, 0.3539678624698094, 0.3550768494606018, 0.33530640602111816, 0.32667156628199984, 0.31731962306158884, 0.3170226216316223, 0.30481903893607004, 0.3029791457312448, 0.31227952241897583, 0.29571434429713656, 0.2925906947680882, 0.2927323409489223, 0.2893522381782532, 0.2884915215628488, 0.2934223072869437, 0.29703010831560406, 0.28837879214968, 0.27972936630249023, 0.28529136521475656, 0.2932654448917934], "val_accuracy": [0.6576666831970215, 0.7379999756813049, 0.7563333511352539, 0.7756666541099548, 0.8003333210945129, 0.8036666512489319, 0.8253333568572998, 0.8353333473205566, 0.8349999785423279, 0.8543333411216736, 0.8519999980926514, 0.8696666955947876, 0.8663333058357239, 0.8690000176429749, 0.8713333606719971, 0.8740000128746033, 0.8769999742507935, 0.8679999709129333, 0.8759999871253967, 0.8803333044052124, 0.8773333430290222, 0.8809999823570251, 0.8830000162124634, 0.8859999775886536, 0.8773333430290222, 0.8830000162124634, 0.8856666684150696, 0.8859999775886536, 0.878333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 2, 2, 6, 6, 4, 4, 1, 9, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 0, 0, 1, 2, 1, 2, 2, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [50, 3, 2, 11, 59, 63, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8337143063545227, "mapping_values": [1, 29, 29, 16, 13, 5, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), alpha)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0005217037338228, 1.0369962421327676, 0.7726568430878656, 0.6725922845547083, 0.6177650462004959, 0.5864273758533529, 0.5516187285372389, 0.5093261915631913, 0.4881666769220561, 0.4758557397274372, 0.44660798703611737, 0.44027638566838817, 0.4069104195782663, 0.40288451087630706, 0.37740786252571623, 0.3744651862910836, 0.3596977683389664, 0.35347193764531776, 0.34646495013913425, 0.32894695526289824, 0.3112370585091535, 0.30067072893177843, 0.2925765296298405, 0.28620174701549844, 0.2906849494723281, 0.2877139609684451, 0.27893118061771827, 0.2693315502430832, 0.25079327033274934, 0.253447791734439, 0.2525111886457036, 0.2414136028064634, 0.24374002998830335, 0.2218316804010949, 0.21629310279529582, 0.21336376860495712, 0.20331966556168787, 0.19862549959542555, 0.2076908018469039, 0.18974743682899495, 0.19619297152064055], "accuracy": [0.32043322920799255, 0.6259410977363586, 0.7034738063812256, 0.7327961921691895, 0.7617223858833313, 0.7754589915275574, 0.7898560166358948, 0.8034605979919434, 0.819970965385437, 0.8238013386726379, 0.8333113193511963, 0.835160493850708, 0.8473120927810669, 0.8474441766738892, 0.8618412613868713, 0.8588033318519592, 0.8639545440673828, 0.8664641380310059, 0.8647470474243164, 0.8745211958885193, 0.8780874609947205, 0.8842953443527222, 0.887597382068634, 0.8891823887825012, 0.8887861371040344, 0.8861445188522339, 0.8934090733528137, 0.8949940800666809, 0.9041078090667725, 0.9034473896026611, 0.9076740145683289, 0.9054285883903503, 0.9084665179252625, 0.915070652961731, 0.9149385690689087, 0.9203540086746216, 0.9235239624977112, 0.9231277108192444, 0.9203540086746216, 0.9282789826393127, 0.9256373047828674], "val_loss": [0.8225800820759365, 0.6025098391941616, 0.5347756658281598, 0.4860087292534964, 0.4461216415677752, 0.4289244668824332, 0.3981811659676688, 0.37636296238218037, 0.3723164371081761, 0.34791435514177593, 0.35585588216781616, 0.32979085615703035, 0.3338215010506766, 0.3183392116001674, 0.31832672016961233, 0.3057748419897897, 0.3032784036227635, 0.3084816592080252, 0.2950420209339687, 0.28674045630863737, 0.2940087914466858, 0.2868788072041103, 0.2880162681852068, 0.2961864641734532, 0.2980436853000096, 0.2941749095916748, 0.28045977864946636, 0.279460677078792, 0.2875306691442217, 0.28927453075136456, 0.2933778166770935, 0.28676533699035645, 0.2856707658086504, 0.29250660112925936, 0.29645237752369474, 0.28010966948100496, 0.29741031782967703, 0.3077391982078552, 0.29432198831013273, 0.31158151796885897, 0.29591572284698486], "val_accuracy": [0.6576666831970215, 0.737333357334137, 0.7559999823570251, 0.7789999842643738, 0.8009999990463257, 0.8056666851043701, 0.8230000138282776, 0.8353333473205566, 0.8343333601951599, 0.8576666712760925, 0.8523333072662354, 0.8703333139419556, 0.8600000143051147, 0.8676666617393494, 0.8713333606719971, 0.8773333430290222, 0.8763333559036255, 0.8703333139419556, 0.8776666522026062, 0.8849999904632568, 0.8766666650772095, 0.8766666650772095, 0.8840000033378601, 0.8870000243186951, 0.8740000128746033, 0.878000020980835, 0.8840000033378601, 0.890999972820282, 0.8840000033378601, 0.8766666650772095, 0.8830000162124634, 0.887666642665863, 0.8916666507720947, 0.8893333077430725, 0.8823333382606506, 0.8923333287239075, 0.8870000243186951, 0.8799999952316284, 0.8899999856948853, 0.8836666941642761, 0.887333333492279]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 4, 1, 0, 2, 8, 2, 4, 8, 2, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 41, 2, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8334285616874695, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9999793720062713, 1.03453293458078, 0.7732372901159712, 0.67367011705457, 0.6189851198749393, 0.5949162921460235, 0.5578737531465987, 0.5145359610711359, 0.49359349992060786, 0.4798714696156461, 0.45331001800159343, 0.4451332198724834, 0.41889696432740825, 0.40581346875278784, 0.3886194476488008, 0.37864858186429184, 0.3671760526567544, 0.36035678978640845, 0.3546155479133499, 0.3352941638206872, 0.32338991481331064, 0.3050178707614315, 0.29420121862210963, 0.2889891516231763, 0.2938392501166468, 0.2914874207987651, 0.27700582701673976, 0.2702477610484405, 0.2578079610130082, 0.25899010128695277, 0.2630699019681792, 0.24609198615598546, 0.24603173934024605], "accuracy": [0.320169061422348, 0.627129852771759, 0.7005679607391357, 0.7323999404907227, 0.759080708026886, 0.772288978099823, 0.7860256433486938, 0.8037247657775879, 0.8201030492782593, 0.8204993009567261, 0.830669641494751, 0.8294808864593506, 0.8442742228507996, 0.8508783578872681, 0.8532558679580688, 0.8565579056739807, 0.8643507957458496, 0.8648791313171387, 0.8626337051391602, 0.8720116019248962, 0.8780874609947205, 0.8815215826034546, 0.8889182209968567, 0.8864086866378784, 0.8868049383163452, 0.8882578015327454, 0.8938053250312805, 0.8967111110687256, 0.9033153057098389, 0.8981640338897705, 0.89988112449646, 0.9072777628898621, 0.9033153057098389], "val_loss": [0.8250590222222465, 0.6028441361018589, 0.5387661457061768, 0.4862506559916905, 0.44645622798374723, 0.43394380807876587, 0.40107882022857666, 0.3798657996313913, 0.3727624501500811, 0.3534969857760838, 0.3544043557984488, 0.3358971987451826, 0.3292266045297895, 0.31781985078539166, 0.3154008388519287, 0.3064044117927551, 0.3059149810246059, 0.31511686529432026, 0.29789577211652485, 0.2898717607770647, 0.2970750331878662, 0.28963747194835116, 0.28920319250651766, 0.29512037549700054, 0.29488073928015573, 0.28807523420878817, 0.2847695435796465, 0.27838227578571867, 0.2849185807364328, 0.2881386024611337, 0.285320554460798, 0.28848008598600117, 0.28755361693246023], "val_accuracy": [0.6523333191871643, 0.7423333525657654, 0.7493333220481873, 0.7820000052452087, 0.7990000247955322, 0.7990000247955322, 0.8183333277702332, 0.8366666436195374, 0.8360000252723694, 0.8506666421890259, 0.8493333458900452, 0.8663333058357239, 0.8603333234786987, 0.8636666536331177, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8656666874885559, 0.8766666650772095, 0.8830000162124634, 0.8723333477973938, 0.8796666860580444, 0.8806666731834412, 0.8840000033378601, 0.8733333349227905, 0.8793333172798157, 0.8813333511352539, 0.8880000114440918, 0.8830000162124634, 0.8846666812896729, 0.8863333463668823, 0.8830000162124634, 0.8859999775886536]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 2, 2, 6, 6, 4, 6, 1, 9, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 0, 0, 1, 2, 1, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [0, 3, 96, 11, 64, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8317142724990845, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.000525404354837, 1.0363120256697167, 0.7741609419168435, 0.6726289706979021, 0.6194217136948258, 0.5842243377023354, 0.5548174128855508, 0.5121673661027177, 0.49006309010616905, 0.4782125736153625, 0.4504110365220348, 0.44111852288214665, 0.41044706130591463, 0.40204972038573245, 0.38227576997144397, 0.3725824173155588, 0.36194837482661113, 0.35460999285650446, 0.3498918158251297, 0.3309058029307445, 0.3160273979730799, 0.30082216871460243, 0.29179094716259013, 0.27783556120538316, 0.29059787328610753, 0.29013127479822787, 0.2737064159045587, 0.2685423594235335, 0.25729015043634923], "accuracy": [0.3203011453151703, 0.627129852771759, 0.7024171352386475, 0.7347774505615234, 0.7584202885627747, 0.774798572063446, 0.7881389260292053, 0.7991018295288086, 0.8158763647079468, 0.8208954930305481, 0.8309338092803955, 0.8314621448516846, 0.848368763923645, 0.8499537706375122, 0.8569541573524475, 0.8602562546730042, 0.8631620407104492, 0.8647470474243164, 0.8661999702453613, 0.8733324408531189, 0.8757099509239197, 0.8848236799240112, 0.889578640460968, 0.8891823887825012, 0.8898428082466125, 0.8862766027450562, 0.8960506916046143, 0.89552241563797, 0.9026548862457275], "val_loss": [0.8225767612457275, 0.6025901862553188, 0.5350613083158221, 0.48992851802280973, 0.44504458563668386, 0.43034655707223074, 0.39822572469711304, 0.3779991183962141, 0.3746449181011745, 0.3550855261938913, 0.3550534248352051, 0.3308830516678946, 0.3272884658404759, 0.31854563099997385, 0.3139265605381557, 0.30706800733293804, 0.30152833461761475, 0.3073951176234654, 0.29873048407690866, 0.28687654222760883, 0.2950614520481655, 0.29157947642462595, 0.2852731687682016, 0.29702500786100117, 0.2973299963133676, 0.2908360617501395, 0.2795537454741342, 0.2832194055829729, 0.2854136994906834], "val_accuracy": [0.6566666960716248, 0.7386666536331177, 0.7540000081062317, 0.7770000100135803, 0.7996666431427002, 0.8059999942779541, 0.8256666660308838, 0.8356666564941406, 0.8349999785423279, 0.8539999723434448, 0.8556666374206543, 0.8700000047683716, 0.8656666874885559, 0.8693333268165588, 0.8713333606719971, 0.875333309173584, 0.8793333172798157, 0.8736666440963745, 0.874666690826416, 0.8883333206176758, 0.874666690826416, 0.8769999742507935, 0.8823333382606506, 0.8886666893959045, 0.8773333430290222, 0.8840000033378601, 0.8856666684150696, 0.8843333125114441, 0.8833333253860474]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 2, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [58, 35, 2, 49, 10, 10, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8302857279777527, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.000521721762437, 1.0368699569822444, 0.7733778358529256, 0.6733036292794359, 0.6184833337602174, 0.5853634878723393, 0.5542233960109852, 0.5125561086981288, 0.4899448890963786, 0.47411732946199875, 0.44954690908743267, 0.4447224698345722, 0.4103441626057885, 0.4029233440030536, 0.37783147318094573, 0.3728180059179292, 0.3609476094043738, 0.351816201332837, 0.3466451224665427, 0.32413735211863887, 0.31256218975907574, 0.29943679419364977, 0.2908199137354004, 0.2869909142443312, 0.2954479606081356, 0.29599257712791843, 0.2817273229978592, 0.2683238445641799, 0.2552750403728971], "accuracy": [0.32043322920799255, 0.6260731816291809, 0.7022850513458252, 0.7349095344543457, 0.7584202885627747, 0.7761194109916687, 0.7839123010635376, 0.8020076751708984, 0.8195747137069702, 0.8238013386726379, 0.8304054737091064, 0.8315942287445068, 0.8469158411026001, 0.8504821062088013, 0.8580108284950256, 0.8584070801734924, 0.8647470474243164, 0.8663320541381836, 0.8650112152099609, 0.8759741187095642, 0.8766345381736755, 0.8856161832809448, 0.8906353116035461, 0.8868049383163452, 0.886672854423523, 0.8844274282455444, 0.8919561505317688, 0.8961827754974365, 0.9019944667816162], "val_loss": [0.8225763865879604, 0.6027458224977765, 0.5344525916235787, 0.48651942184993197, 0.44523240838732037, 0.43149562392915997, 0.39983822618212017, 0.3802338327680315, 0.3710534487451826, 0.3529391884803772, 0.3596970864704677, 0.3303319641521999, 0.3329192314829145, 0.3192239318575178, 0.31336608103343416, 0.3061616080147879, 0.30770277976989746, 0.31435160977499826, 0.29503261191504343, 0.29061652081353323, 0.2971606595175607, 0.2914477842194693, 0.29099626200539724, 0.2952593224389212, 0.29932968957083567, 0.29601934977940153, 0.2823441709790911, 0.2895220858710153, 0.28623328038624357], "val_accuracy": [0.6576666831970215, 0.7383333444595337, 0.7536666393280029, 0.7786666750907898, 0.8026666641235352, 0.8040000200271606, 0.8226666450500488, 0.8343333601951599, 0.8366666436195374, 0.8543333411216736, 0.8519999980926514, 0.8726666569709778, 0.862666666507721, 0.862333357334137, 0.8700000047683716, 0.8743333220481873, 0.8690000176429749, 0.8709999918937683, 0.8773333430290222, 0.8830000162124634, 0.8759999871253967, 0.8740000128746033, 0.8846666812896729, 0.8856666684150696, 0.8803333044052124, 0.8786666393280029, 0.8833333253860474, 0.8846666812896729, 0.8809999823570251]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 1, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [51, 66, 43, 11, 10, 56, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0005217150548478, 1.0368646234962777, 0.773712316240853, 0.6730299714439502, 0.6185533928124818, 0.5839035749876299, 0.5539376589175244, 0.5119361124254724, 0.48934857780119967, 0.47767693406602474, 0.44769623905928096, 0.44186643935103287, 0.4098486143875714, 0.39990656179617173, 0.3760594080082099, 0.37338523920800126, 0.3586743520377193, 0.3525855815909747, 0.34493111198557175, 0.3301255111807074, 0.31393644902542706, 0.3002387353174439, 0.293920293995544, 0.28380167835802056, 0.2912778983129061, 0.2840689707583346, 0.2750518677682137, 0.2671615491729324, 0.25245013996012033], "accuracy": [0.32043322920799255, 0.6256769299507141, 0.7018887996673584, 0.7337207794189453, 0.7593448758125305, 0.7757231593132019, 0.7873464822769165, 0.8029322624206543, 0.8175934553146362, 0.821820080280304, 0.8296129703521729, 0.8321225643157959, 0.8422929644584656, 0.8507462739944458, 0.8594637513160706, 0.8598600029945374, 0.8644828796386719, 0.8619733452796936, 0.8639545440673828, 0.8750495314598083, 0.8815215826034546, 0.8850878477096558, 0.8873332738876343, 0.8870691061019897, 0.8889182209968567, 0.8903711438179016, 0.8944657444953918, 0.8943336606025696, 0.9035794734954834], "val_loss": [0.8225761311394828, 0.6029339858463832, 0.534632819039481, 0.4874427999768938, 0.44346749782562256, 0.43143669196537565, 0.3997469459261213, 0.37887193475450787, 0.37438492264066425, 0.35260805061885286, 0.3571139488901411, 0.33251845836639404, 0.3275706853185381, 0.3219473021371024, 0.31891097341264996, 0.30734613963535856, 0.30356273480824064, 0.3117285966873169, 0.29650541714259554, 0.29283543143953594, 0.29933066027505056, 0.29129260778427124, 0.29343946490968975, 0.3012861950056894, 0.30208459922245573, 0.29540696314402987, 0.28362709283828735, 0.2879905104637146, 0.2886522923197065], "val_accuracy": [0.6576666831970215, 0.737666666507721, 0.7553333044052124, 0.7789999842643738, 0.8036666512489319, 0.8033333420753479, 0.8230000138282776, 0.8363333344459534, 0.8320000171661377, 0.8523333072662354, 0.8500000238418579, 0.8693333268165588, 0.8653333187103271, 0.8643333315849304, 0.8709999918937683, 0.875333309173584, 0.8723333477973938, 0.8696666955947876, 0.8793333172798157, 0.8823333382606506, 0.8730000257492065, 0.878000020980835, 0.8786666393280029, 0.8853333592414856, 0.8796666860580444, 0.8796666860580444, 0.8823333382606506, 0.8830000162124634, 0.8820000290870667]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 6, 2, 8, 9, 4, 8, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [55, 41, 2, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8234285712242126, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9999748357078262, 1.034759442693821, 0.7735790543867345, 0.6737784416747052, 0.6189871521091197, 0.5945965487565568, 0.5582649801243817, 0.5177985041321954, 0.49850653280214846, 0.4821300726556633, 0.44970397254211747, 0.4425421363059414, 0.41348341783638315, 0.4050938049524436, 0.3851533436646094, 0.3778569166804538, 0.3636269662925328, 0.35155759278447196, 0.34738307407960095, 0.3348443304007599, 0.3169305936425133, 0.2990530722838162, 0.300429048220621], "accuracy": [0.320169061422348, 0.6254127621650696, 0.6996433734893799, 0.7347774505615234, 0.7593448758125305, 0.7729493975639343, 0.7862898111343384, 0.7998943328857422, 0.8132346868515015, 0.8168009519577026, 0.8317263126373291, 0.8330471515655518, 0.8450667262077332, 0.8518029451370239, 0.8553691506385803, 0.8560295701026917, 0.8654074668884277, 0.8643507957458496, 0.8643507957458496, 0.8710870146751404, 0.8771628737449646, 0.8862766027450562, 0.8850878477096558], "val_loss": [0.8251125301633563, 0.6025565181459699, 0.5384992361068726, 0.4868467705590384, 0.4461586134774344, 0.4340601733752659, 0.4009874037333897, 0.3824174574443272, 0.3758995703288487, 0.3559086663382394, 0.35438872235161917, 0.33646637201309204, 0.33026096650532316, 0.31980466842651367, 0.31423051016671316, 0.3060357655797686, 0.30135715859276907, 0.3031089561326163, 0.29636255332401823, 0.28759706020355225, 0.2953878470829555, 0.2980556573186602, 0.290864850793566], "val_accuracy": [0.6523333191871643, 0.7426666617393494, 0.749666690826416, 0.7806666493415833, 0.7986666560173035, 0.7996666431427002, 0.8256666660308838, 0.8349999785423279, 0.8343333601951599, 0.8516666889190674, 0.8539999723434448, 0.8619999885559082, 0.8650000095367432, 0.8696666955947876, 0.871666669845581, 0.8736666440963745, 0.878333330154419, 0.8790000081062317, 0.874666690826416, 0.8790000081062317, 0.8726666569709778, 0.8726666569709778, 0.8759999871253967]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 2, 8, 9, 4, 0, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 1, 2, 2, 1, 2, 0, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8071428537368774, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.000521694743134, 1.036837020664797, 0.7736453022057465, 0.6733707236639025, 0.6186719573625815, 0.584676494498877, 0.5527521085194341, 0.5115566385845702, 0.488495182965835, 0.47665071148898197, 0.44681170178898855, 0.4420792052829585, 0.41024548873027805, 0.40368602786711605, 0.37938914852387334, 0.3744599413893809, 0.3606528653058992, 0.35523998470448737, 0.3474246678555788, 0.32698327009672534, 0.31085384573052827, 0.29882739467580544, 0.29367551067013703, 0.2831654819861505, 0.285987759282828, 0.2824735786849954, 0.27528773196825906, 0.2652659242525707, 0.24791504981385215, 0.24970016708510695, 0.2485612076838192, 0.23899144733728372, 0.23651041579189838, 0.22165814009616247, 0.2214093077034762, 0.21294030763839672, 0.19956246565959992, 0.19709252581746273, 0.20465858958896754, 0.18960313431858591, 0.1883867917543767, 0.177780092410077], "accuracy": [0.32043322920799255, 0.6258090138435364, 0.7013604640960693, 0.7339849472045898, 0.759080708026886, 0.77677983045578, 0.7887993454933167, 0.802271842956543, 0.8178576231002808, 0.822348415851593, 0.833179235458374, 0.83119797706604, 0.8455950617790222, 0.848368763923645, 0.8558974862098694, 0.8574824929237366, 0.8625016212463379, 0.863029956817627, 0.8683133125305176, 0.8720116019248962, 0.8790120482444763, 0.8848236799240112, 0.8885219693183899, 0.8905032277107239, 0.8936732411384583, 0.8891823887825012, 0.8930128216743469, 0.898428201675415, 0.9066173434257507, 0.9026548862457275, 0.9076740145683289, 0.9091269373893738, 0.9082023501396179, 0.9122969508171082, 0.9100515246391296, 0.9190331697463989, 0.9225993752479553, 0.925901472568512, 0.9211464524269104, 0.926429808139801, 0.9260335564613342, 0.9315810203552246], "val_loss": [0.822580235345023, 0.6032217230115619, 0.5364490747451782, 0.48635149002075195, 0.4445247990744455, 0.4295301267078945, 0.3986869880131313, 0.3781373756272452, 0.37299815246037077, 0.35087872403008596, 0.35694768599101473, 0.33459192514419556, 0.3297864624432155, 0.31990401233945576, 0.3175338847296579, 0.30468025377818514, 0.30485479320798603, 0.31043886286871775, 0.2940433365958078, 0.2892232026372637, 0.29387251819883076, 0.29237655230930876, 0.2888798713684082, 0.29402066128594534, 0.2946115391595023, 0.29321798256465365, 0.28083071538380217, 0.2841335279600961, 0.2883496880531311, 0.2858176827430725, 0.29454702138900757, 0.2919441376413618, 0.28746966804776874, 0.2917476551873343, 0.29391729831695557, 0.28003622804369244, 0.29632445744105745, 0.30869139092309134, 0.2907394937106541, 0.3007910592215402, 0.2956284625189645, 0.3052646688052586], "val_accuracy": [0.6576666831970215, 0.7386666536331177, 0.7540000081062317, 0.7796666622161865, 0.8016666769981384, 0.8040000200271606, 0.8209999799728394, 0.8373333215713501, 0.8353333473205566, 0.8546666502952576, 0.8473333120346069, 0.8663333058357239, 0.8643333315849304, 0.8656666874885559, 0.8693333268165588, 0.8726666569709778, 0.8763333559036255, 0.8703333139419556, 0.878000020980835, 0.8833333253860474, 0.8776666522026062, 0.8766666650772095, 0.8820000290870667, 0.8866666555404663, 0.8826666474342346, 0.878000020980835, 0.8836666941642761, 0.887666642665863, 0.8870000243186951, 0.8820000290870667, 0.8870000243186951, 0.8883333206176758, 0.8883333206176758, 0.8886666893959045, 0.8799999952316284, 0.8889999985694885, 0.890999972820282, 0.8840000033378601, 0.8886666893959045, 0.8883333206176758, 0.890666663646698, 0.890999972820282]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 1, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 84, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7885714173316956, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1962384054957127, 1.5904382099769592, 1.2340931807054332, 1.0877004505825585, 0.9536014329865939, 0.8702531770912884, 0.8477236543585359, 0.778653591064304, 0.7809753651396001, 0.7439194254241583, 0.7418289170399349, 0.7119508942577109, 0.686281769936347, 0.6862176490056753, 0.6931244075778548, 0.6483742812794308, 0.6497069269029015, 0.6631597144146164, 0.6538582281854726, 0.6282090965499495, 0.6187168961943668, 0.6367194349849858, 0.6096682335013774, 0.5993344771186547, 0.5895422979620517], "accuracy": [0.26641130447387695, 0.483819842338562, 0.5744287371635437, 0.6087703108787537, 0.6617355942726135, 0.6897371411323547, 0.6823405027389526, 0.7135120630264282, 0.7128516435623169, 0.7288337349891663, 0.7279091477394104, 0.7366266250610352, 0.750759482383728, 0.7481178045272827, 0.7423061728477478, 0.7585523724555969, 0.7576277852058411, 0.7549861073493958, 0.755118191242218, 0.7714964747428894, 0.7697794437408447, 0.7638356685638428, 0.7729493975639343, 0.778232753276825, 0.7815347909927368], "val_loss": [1.5987017495291573, 1.0831432001931327, 0.8602778570992606, 0.7464427096503121, 0.6392244441168649, 0.6605767011642456, 0.611743688583374, 0.5704707758767265, 0.5374866042818341, 0.523921012878418, 0.5601168019430978, 0.526031460080828, 0.48104223183223177, 0.5017663240432739, 0.4803518567766462, 0.46620142459869385, 0.49306860991886686, 0.48450255393981934, 0.4584396055766514, 0.43946140153067453, 0.47485123361860004, 0.4800921508244106, 0.452197653906686, 0.430425158568791, 0.43651740891592844], "val_accuracy": [0.49966666102409363, 0.5979999899864197, 0.6303333044052124, 0.6736666560173035, 0.7239999771118164, 0.6996666789054871, 0.7236666679382324, 0.7300000190734863, 0.7473333477973938, 0.7799999713897705, 0.7300000190734863, 0.7620000243186951, 0.7900000214576721, 0.7703333497047424, 0.7803333401679993, 0.8059999942779541, 0.7593333125114441, 0.7696666717529297, 0.7993333339691162, 0.8143333196640015, 0.7743333578109741, 0.7816666960716248, 0.7803333401679993, 0.8133333325386047, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 1, 9, 2, 8, 4, 2, 4, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 2, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [55, 41, 2, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7545714378356934, "mapping_values": [1, 9, 9, 6, 3, 3, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2896376656283004, 2.2015622650013467, 1.9403279668477706, 1.4832281379998242, 1.3354341065831676, 1.0646575303157055, 0.9269848378610617, 0.8903537282318944, 0.813045529476199, 0.791126331995192, 0.7623757119302217, 0.7290127120548944, 0.7144694367750619, 0.7006266882013037, 0.6773885036535141, 0.6620741292407185, 0.6418447397908105, 0.6233078005165551, 0.6142778012573349, 0.595623138889015, 0.5800108754592345, 0.5762927195005854, 0.5610637846419431, 0.5439491980953806, 0.5258454798691623, 0.5173573947192152, 0.5100818844503494, 0.4971525753060856, 0.49342856440939653, 0.49442486696239507, 0.47733624926442875, 0.47514168357395653, 0.4639346577417046, 0.4525923025472651, 0.44882369688189877, 0.4450558063030054, 0.42498410862466174, 0.43083818835699483, 0.4159080717604882, 0.4166645091664223, 0.4054866235931048, 0.3933592853001663, 0.39497049069990336, 0.3868246924458336, 0.3885326975246289, 0.3775371163433978, 0.3661721612775425, 0.35948408577798335, 0.3599356539324054, 0.3511081112649825, 0.3477854330534035, 0.3417631458959024, 0.3322040254508248, 0.340511807128974, 0.32221439534316304, 0.319629961764729, 0.3211129251889675], "accuracy": [0.13274335861206055, 0.30339452624320984, 0.40866464376449585, 0.4971602261066437, 0.5523709058761597, 0.6339981555938721, 0.6542068123817444, 0.684982180595398, 0.7010962963104248, 0.7013604640960693, 0.7157574892044067, 0.7275128960609436, 0.7305507659912109, 0.7432307600975037, 0.7514199018478394, 0.7510236501693726, 0.759609043598175, 0.7625148296356201, 0.7664773464202881, 0.7734777331352234, 0.7828556299209595, 0.7812706232070923, 0.7917051911354065, 0.7996301651000977, 0.8013472557067871, 0.8004226684570312, 0.8086118102073669, 0.8128384351730347, 0.8132346868515015, 0.8140271902084351, 0.8252542614936829, 0.8195747137069702, 0.8321225643157959, 0.8335754871368408, 0.8341038227081299, 0.8338396549224854, 0.8436138033866882, 0.8457271456718445, 0.8466516733169556, 0.8424250483512878, 0.8496896028518677, 0.854708731174469, 0.847840428352356, 0.8520671129226685, 0.8540483713150024, 0.8569541573524475, 0.8667283058166504, 0.8646149635314941, 0.8676528930664062, 0.8701624870300293, 0.869502067565918, 0.8705587387084961, 0.8730682730674744, 0.8709549307823181, 0.8770307898521423, 0.8768987059593201, 0.8762382864952087], "val_loss": [1.923647131238665, 1.7800796372549874, 1.330535956791469, 0.8599314859935215, 0.7122083391462054, 0.641499400138855, 0.6674677303859166, 0.5954610449927193, 0.5560928923743111, 0.5512982947485787, 0.5373100893838065, 0.5249213150569371, 0.5190059457506452, 0.49788195746285574, 0.4785117932728359, 0.46635687351226807, 0.45440893513815744, 0.44350879532950266, 0.4366100685937064, 0.42600406067711966, 0.4194473283631461, 0.41528135538101196, 0.4065374902316502, 0.3955366441181728, 0.39383998938969206, 0.3824751802853176, 0.3811672159603664, 0.374193685395377, 0.36870451484407696, 0.3609118802206857, 0.3577788216727121, 0.3513085331235613, 0.34394383430480957, 0.3404414653778076, 0.3375106964792524, 0.3370289206504822, 0.33455823148999897, 0.3305466089929853, 0.32535931042262484, 0.32393773964473177, 0.3235288773264204, 0.3216099228177752, 0.31716805696487427, 0.31346287046160015, 0.3116898706981114, 0.3084317701203482, 0.30542148862566265, 0.3059501733098711, 0.3059409771646772, 0.3021689738546099, 0.30021425655909945, 0.29637243918010164, 0.2930329271725246, 0.29124443020139423, 0.29399029697690693, 0.2925077336175101, 0.29377996921539307], "val_accuracy": [0.34833332896232605, 0.4620000123977661, 0.5823333263397217, 0.675000011920929, 0.7026666402816772, 0.7233333587646484, 0.7383333444595337, 0.737666666507721, 0.7546666860580444, 0.7526666522026062, 0.7666666507720947, 0.768666684627533, 0.7749999761581421, 0.781000018119812, 0.7863333225250244, 0.7913333177566528, 0.8029999732971191, 0.8003333210945129, 0.800000011920929, 0.8190000057220459, 0.8206666707992554, 0.8153333067893982, 0.8230000138282776, 0.8299999833106995, 0.8343333601951599, 0.8353333473205566, 0.8363333344459534, 0.8410000205039978, 0.8493333458900452, 0.8529999852180481, 0.8533333539962769, 0.8579999804496765, 0.859666645526886, 0.8640000224113464, 0.8643333315849304, 0.8653333187103271, 0.8656666874885559, 0.8676666617393494, 0.8663333058357239, 0.8659999966621399, 0.8686666488647461, 0.8679999709129333, 0.8690000176429749, 0.8703333139419556, 0.8733333349227905, 0.8730000257492065, 0.8723333477973938, 0.875, 0.8763333559036255, 0.875333309173584, 0.878333330154419, 0.8809999823570251, 0.8809999823570251, 0.8796666860580444, 0.878000020980835, 0.878000020980835, 0.8763333559036255]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 8, 1, 0, 2, 0, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 1, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [19, 3, 96, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.11400000005960464, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [11.99788956150261, 2.5933041031240016, 2.4894762384011337, 2.481879040014317, 2.5483484750001217, 2.440802581998981, 2.5182773135420415, 2.568546519728542, 2.432492793244047], "accuracy": [0.19442610442638397, 0.10038304328918457, 0.1006472036242485, 0.09906221181154251, 0.09787346422672272, 0.10157178342342377, 0.09747721254825592, 0.09932637959718704, 0.10130762308835983], "val_loss": [2.138334001813616, 2.162375041416713, 2.1768700054713657, 2.1432185854230608, 2.213549886431013, 2.2408971786499023, 2.104458604540144, 2.126124858856201, 2.2687110900878906], "val_accuracy": [0.10000000149011612, 0.1003333330154419, 0.09666666388511658, 0.10366666316986084, 0.10100000351667404, 0.09666666388511658, 0.10000000149011612, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 4, 1, 0, 2, 8, 2, 4, 8, 2, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 1, 0, 2, 2, 2, 2, 0, 2, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 84, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 1, 3, 3, 1, 4, 3, 4, 1, 3, 3, 0], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 34, 34, 20, 14, 3, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad)))), tf.math.add(beta, alpha)))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))))), grad))))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022384267236893, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 5, 1, 2, 2, 2, 4, 2, 3, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 1, 2, 0, 2, 2, 0, 2, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [55, 3, 2, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [7.717256661219941e+24, 74.42534053708269, 18869.39641717264, 4863643.532195219, 1276806556.001585, 311248710843.0548], "accuracy": [0.09008057415485382, 0.09721305221319199, 0.10077928751707077, 0.09879804402589798, 0.09866596013307571, 0.10447761416435242], "val_loss": [NaN, 531.9683314732143, 136531.0669642857, 34952421.71428572, 8947819958.857143, 2290641909467.4287], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 2, 8, 5, 4, 0, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [55, 3, 2, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [94, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [91.18791359762993, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19442610442638397, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14434485.714285715, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 2, 2, 6, 6, 4, 6, 1, 9, 4, 3, 4, 2, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 3, 0, 1, 2, 1, 2, 2, 1, 0, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [0, 3, 96, 11, 64, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022384267236893, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 6, 2, 8, 9, 4, 8, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 84, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 4, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), alpha)), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022384267236893, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 0, 0, 2, 8, 9, 4, 2, 6, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 0, 0, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [0, 3, 96, 11, 78, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3023144098525474, 2.302686453369457, 2.3026513297245126, 2.3026753279668717, 2.3026645033036113, 2.3026568241217635], "accuracy": [0.09417514503002167, 0.0936468094587326, 0.09509972482919693, 0.09813763201236725, 0.09800554811954498, 0.09536388516426086], "val_loss": [1.9736362865992956, 1.973635469164167, 1.9736363547188895, 1.9736381258283342, 1.9736482756478446, 1.9736251831054688], "val_accuracy": [0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 1, 0, 2, 8, 9, 4, 0, 5, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 1, 2, 2, 1, 2, 0, 1, 2, 0, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [97, 3, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 4, 1, 0, 2, 8, 2, 4, 8, 2, 4, 3, 4, 9, 9, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [43, 3, 84, 11, 10, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [39, 95, 54, 66], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 2, 3, 9, 8, 8, 7], [0, 4, 3], [53], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.0357142873108387, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3034632711079235, 2.3028964043104447, 2.3038269572836803, 2.3055612104695786, 2.3076253114611385, 2.310182252344029], "accuracy": [0.0936468094587326, 0.09325055778026581, 0.0870426595211029, 0.08334434032440186, 0.08255184441804886, 0.08030643314123154], "val_loss": [1.9707046917506628, 1.9714323452540807, 1.9723366328648158, 1.9734584263392858, 1.9748881884983607, 1.9766692434038435], "val_accuracy": [0.03433333337306976, 0.029666665941476822, 0.028333334252238274, 0.026000000536441803, 0.026000000536441803, 0.024666666984558105]}}]