[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.175048396477468, 2.03774334481836, 2.3214278914877737, 2.0491114467000604, 2.3051963963166613, 2.0710041123358582, 1.746427405669374, 1.3835493411527822, 1.4831454208293657, 1.2584778881186365, 1.094408420760004, 1.046304584667431, 0.9880912196697608, 0.9996795819231138, 0.9012749203050362, 0.8483111088805904, 0.8298387454249179, 0.8962328992326419, 0.7954673723947134, 0.7385946979627885, 0.7523602416738622, 0.780649470623222, 0.7308520411991598, 0.6845620056074749, 0.6878343554787616, 0.6733890151571305, 0.6762411050225892, 0.6449067027041973, 0.6295428055467355, 0.6367234594125033, 0.6442934355841589, 0.6010379414469605, 0.6293486484903716, 0.5719553096860297, 0.5723542009346584, 0.5521396572847156, 0.5623208688722862, 0.6236603376793273, 0.5418810541635145, 0.5284247145503503, 0.5354484793272599, 0.5126899866191167, 0.4943493362966388, 0.5258602979570222, 0.4947342716109216], "accuracy": [0.2623167335987091, 0.32241448760032654, 0.17316074669361115, 0.3055078685283661, 0.10685510188341141, 0.30880993604660034, 0.4150046110153198, 0.5373134613037109, 0.5134063959121704, 0.5779950022697449, 0.6077136397361755, 0.6289790272712708, 0.6538106203079224, 0.6396777033805847, 0.6664905548095703, 0.6844538450241089, 0.6964733600616455, 0.67666095495224, 0.6995112895965576, 0.7240787148475647, 0.7173424959182739, 0.7119271159172058, 0.7305507659912109, 0.7380794882774353, 0.7450799345970154, 0.7497028112411499, 0.7475894689559937, 0.7565711140632629, 0.7668735980987549, 0.7651565074920654, 0.7588165402412415, 0.7708360552787781, 0.7672698497772217, 0.7823272943496704, 0.7823272943496704, 0.7889314293861389, 0.7853652238845825, 0.7786290049552917, 0.7952714562416077, 0.8021397590637207, 0.8050455451011658, 0.8050455451011658, 0.819970965385437, 0.7993659973144531, 0.8137630224227905], "val_loss": [1.8645779745919364, 1.4251267569405692, 1.9056035450526647, 1.9802462032863073, 1.9585872377668108, 1.4274708543504988, 0.9042867592402867, 0.7969034058707101, 1.0341260433197021, 0.7962721245629447, 0.726549506187439, 0.6691498586109706, 0.6055048704147339, 0.6507069894245693, 0.6764696325574603, 0.5807487624032157, 0.575910040310451, 0.5434920106615339, 0.5634755407060895, 0.6307188442775181, 0.5190276759011405, 0.5058093752179827, 0.5309939214161464, 0.5485648257391793, 0.527417778968811, 0.4690702813012259, 0.49371423040117535, 0.46458685398101807, 0.4494952304022653, 0.5362513405936105, 0.43743497133255005, 0.49164351395198275, 0.4442403401647295, 0.4326588341167995, 0.4318544183458601, 0.4179306541170393, 0.41674375534057617, 0.4203276719365801, 0.409189190183367, 0.3933181166648865, 0.4231535366603306, 0.41195183992385864, 0.39790489843913485, 0.39451863936015535, 0.4531024694442749], "val_accuracy": [0.3736666738986969, 0.36666667461395264, 0.41233333945274353, 0.09666666388511658, 0.25466665625572205, 0.4246666729450226, 0.6153333187103271, 0.6660000085830688, 0.6146666407585144, 0.6759999990463257, 0.7096666693687439, 0.7153333425521851, 0.749666690826416, 0.7106666564941406, 0.7263333201408386, 0.7356666922569275, 0.750333309173584, 0.762666642665863, 0.7419999837875366, 0.7246666550636292, 0.781000018119812, 0.7753333449363708, 0.7573333382606506, 0.7563333511352539, 0.7723333239555359, 0.8076666593551636, 0.7693333625793457, 0.8063333630561829, 0.8103333115577698, 0.7599999904632568, 0.8166666626930237, 0.7833333611488342, 0.8140000104904175, 0.8183333277702332, 0.8103333115577698, 0.8289999961853027, 0.8316666483879089, 0.8213333487510681, 0.82833331823349, 0.8393333554267883, 0.8256666660308838, 0.8263333439826965, 0.8339999914169312, 0.8383333086967468, 0.7929999828338623]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.068900034065811, 1.8554477995538818, 1.6578476919615825, 1.3638116144280565, 0.9561660754650717, 0.8785934883841844, 0.7418275541869357, 0.7450416432616103, 0.6529408828567568, 0.6521723572336499, 0.6489005777200042, 0.6164484363284959, 0.5891478534120185, 0.5972587984503536, 0.5852443688518225, 0.5550977084945615, 0.5488658111014496, 0.5440646648414855, 0.5047683281480297, 0.5160953858430596], "accuracy": [0.3086778521537781, 0.4239862561225891, 0.4547615945339203, 0.5460308790206909, 0.6584334969520569, 0.6845859289169312, 0.7219653725624084, 0.7223616242408752, 0.7594769597053528, 0.7557786107063293, 0.7493065595626831, 0.7672698497772217, 0.7802139520645142, 0.7771760821342468, 0.78113853931427, 0.7927618622779846, 0.8031964302062988, 0.7968564033508301, 0.8153480291366577, 0.8054417967796326], "val_loss": [1.7407233033861433, 1.1970766271863664, 1.6153391429356165, 0.6764690705708095, 0.6687041521072388, 0.60997474193573, 0.5115975141525269, 0.5039610522133964, 0.46105025495801655, 0.5241305657795498, 0.5028186185019357, 0.4288414290973118, 0.5014156954629081, 0.41735958201544626, 0.4261675477027893, 0.4296504088810512, 0.4617093971797398, 0.4275731529508318, 0.4250858085496085, 0.43350993735449656], "val_accuracy": [0.4350000023841858, 0.5193333625793457, 0.4873333275318146, 0.7160000205039978, 0.6840000152587891, 0.7193333506584167, 0.7703333497047424, 0.7866666913032532, 0.8003333210945129, 0.7416666746139526, 0.7933333516120911, 0.8186666369438171, 0.7566666603088379, 0.8180000185966492, 0.8193333148956299, 0.8036666512489319, 0.79666668176651, 0.8096666932106018, 0.7973333597183228, 0.8090000152587891]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [50], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.5217142701148987, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.26649198505652, 2.1881208027736494, 2.3431285444803054, 2.1989421805118634, 2.1626954096309294, 2.3045437534361497], "accuracy": [0.23854179680347443, 0.2715625464916229, 0.1938977688550949, 0.2118610441684723, 0.25439175963401794, 0.09721305221319199], "val_loss": [1.6449426582881383, 1.386444159916469, 1.9020410946437292, 1.934119633265904, 1.9747069222586495, 1.9737027032034737], "val_accuracy": [0.49433332681655884, 0.4896666705608368, 0.2633333206176758, 0.3240000009536743, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [3, 1, 3, 6, 2, 6, 0, 0, 5, 2, 8, 2, 5, 1], [2, 1, 0, 2, 0, 0, 2, 0, 2, 1], [46, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.4831428527832031, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 24, 14, 10, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.square(alpha))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), beta), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.square(beta), tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta)))), alpha)", "other_info": {"loss": [2.268534856465483, 2.108474146058578, 2.3057919668404967, 2.301671573656299, 2.2012321245810456, 1.9398150203124391, 1.934326435140001, 2.238933721695279, 2.2837188370774815, 2.1510049278993395, 1.9699743603356306], "accuracy": [0.2312772423028946, 0.26918503642082214, 0.09998679161071777, 0.10976093262434006, 0.23774930834770203, 0.3271694481372833, 0.3501518964767456, 0.20935148000717163, 0.1574428677558899, 0.19601109623908997, 0.3549068868160248], "val_loss": [1.9480433464050293, 1.9788923944745744, 1.9747330801827567, 1.9683926446097237, 1.9476401465279716, 1.4164391245160783, 1.9338740621294295, 1.9746813092912947, 1.7038850784301758, 1.9141654968261719, 2.0050052915300642], "val_accuracy": [0.27799999713897705, 0.10066666454076767, 0.10066666454076767, 0.13333334028720856, 0.1289999932050705, 0.46666666865348816, 0.2693333327770233, 0.14300000667572021, 0.3186666667461395, 0.39666667580604553, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0, 0, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 42, 56, 45]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016316226885665, 2.3025813505177517, 2.3025851294412085, 2.3025851609322374, 2.3025850349681223, 2.3025852689149753], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09853387624025345, 0.09787346422672272, 0.09351472556591034, 0.09813763201236725], "val_loss": [1.9735904421125139, 1.9736442565917969, 1.973644392830985, 1.973644597189767, 1.973644529070173, 1.9736443247113908], "val_accuracy": [0.10766666382551193, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0], [1, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [14], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [0, 7], [71], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 1, 3, 3, 0, 2], [46, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10171428322792053, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 8, 4, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, sigma), tf.math.negative(tf.math.divide_no_nan(alpha, sigma)))", "other_info": {"loss": [1.267538095659976e+26, 4.897452995210607, 14.03997801751855, 30.15592514560081, 52.07548384892549, 80.87094771325108, 116.77207108964821], "accuracy": [0.07700435817241669, 0.10011887550354004, 0.09642054885625839, 0.09694888442754745, 0.10249637067317963, 0.10381719470024109, 0.10328886657953262], "val_loss": [2.862623487200056, 8.1259948185512, 20.004703521728516, 35.50305829729353, 59.70387486049107, 87.64076232910156, 123.1071297781808], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [54, 12, 93, 51, 56], [0, 0, 1], [0, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 1, 4, 6, 2, 5, 0, 0, 1, 6, 8, 5, 2, 3, 6, 5, 4], [1, 1, 2, 2, 3, 0, 2, 0, 1, 1, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 12, 6, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(alpha, alpha), beta), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(sigma)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.3799553858468626e+22, 1.5659890674314886e+22, 1.6034044181418309e+22, 1.6110035904398562e+22, 1.6254283328979777e+22, 1.6163656855786248e+22], "accuracy": [0.10513802617788315, 0.11028926074504852, 0.10328886657953262, 0.11306300014257431, 0.10632677376270294, 0.10302469879388809], "val_loss": [1.124711406900961e+22, 1.1290644254579334e+22, 1.1335331865253294e+22, 1.1381316190934248e+22, 1.1428378485354582e+22, 1.1476488188373968e+22], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 3, 1, 0, 3, 1], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [14], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [3, 1, 7, 6, 2, 5, 3, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [46, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 15, 8, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(grad)), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(grad, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta), tf.math.square(sigma)), tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0], [0, 1, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [4, 3], [1, 7], [71], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 2, 3, 3, 0, 2], [6, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [0, 0, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [3, 6, 8, 1, 8, 5, 0, 0, 4, 0, 8, 2, 7, 8, 3, 1, 9], [0, 1, 0, 2, 3, 0, 3, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 25, 17, 8, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(alpha)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(alpha), tf.math.sqrt(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta))))))), tf.math.add(tf.math.sqrt(sigma), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma)))), tf.math.subtract(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1], [0, 0, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [22], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [8, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 3], [1, 1, 1, 0], [54, 12, 93, 51, 56], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [78], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 1, 4, 6, 2, 5, 0, 0, 1, 6, 8, 2, 2, 3, 6, 5, 4], [1, 1, 2, 2, 3, 0, 2, 0, 1, 1, 1, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 25, 14, 11, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.math.subtract(beta, beta))), tf.math.divide_no_nan(sigma, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), alpha)), alpha))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026181140580215, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [98], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 2, 3, 3, 0, 2], [6, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(beta), tf.math.negative(sigma))), sigma)", "other_info": {"loss": [905.6162388652559, 2344.893463751486, 2847.855407851893, 2339.6805007323896, 1946.8478707558033, 2200.5032031404785], "accuracy": [0.09945846349000931, 0.10553427785634995, 0.09774138033390045, 0.09893012791872025, 0.10421344637870789, 0.1022322028875351], "val_loss": [2619.397391183036, 1401.7813895089287, 813.42431640625, 3216.4739118303573, 3016.4609375, 2245.5691266741073], "val_accuracy": [0.10300000011920929, 0.10100000351667404, 0.10000000149011612, 0.10300000011920929, 0.10100000351667404, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [2, 5, 9, 6, 6, 4, 0, 2, 4, 2, 8, 9], [3, 5, 0, 4, 1], [7, 66, 8, 49], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [3, 1, 1, 1, 2, 5, 0, 0, 4, 0, 8, 2, 2, 8, 3, 1, 9, 6, 2, 5, 4, 4, 6, 9, 6, 3, 7, 6, 7, 3, 9, 8, 7, 9, 9], [0, 1, 0, 2, 3, 0, 2, 3, 2, 2, 1, 3, 0, 0, 0, 3, 3, 2, 1], [49, 63, 56, 45, 1, 67, 61, 8, 65, 25, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 29, 18, 11, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.sqrt(beta))), tf.math.add(tf.math.add(tf.math.sqrt(tf.math.multiply(sigma, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), beta), tf.math.subtract(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [29, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 1, 0, 6, 2, 2, 8, 0, 4, 5, 8, 5, 2], [1, 1, 0, 2, 3, 0, 2, 1], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 21, 13, 8, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.square(sigma)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.add(beta, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 6, 0, 0, 5, 2, 8, 0, 5], [1, 1, 0, 2, 0, 0, 2], [46, 63, 40, 45, 34, 72, 34, 12, 48, 54]], "fitness": -0.07657142728567123, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.300618890380154, 2.3011160220578364, 2.3023917407659478, 2.3026536155008386, 2.3037177911130367, 2.3130022855309478, 2.482161476784977, 3.6012840728875655, 6.701272755880964], "accuracy": [0.0940430611371994, 0.09391097724437714, 0.08625016361474991, 0.10236428678035736, 0.10791176557540894, 0.09655263274908066, 0.09906221181154251, 0.09760929644107819, 0.09708096832036972], "val_loss": [1.9695722716195243, 1.9734086990356445, 1.9733804294041224, 1.9740697315761022, 1.976247787475586, 2.010355676923479, 2.4954470906938826, 4.298464638846261, 8.268684659685407], "val_accuracy": [0.10100000351667404, 0.052666667848825455, 0.08966666460037231, 0.11166666448116302, 0.10000000149011612, 0.10166666656732559, 0.10000000149011612, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1], [0, 0, 0, 0, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4, 2, 8, 9], [0, 5, 0, 4, 1], [0, 38], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 2, 3, 1, 1, 0, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))), sigma)", "other_info": {"loss": [2.3042962920821624, 2.3031575586565607, 2.3022374804812555, 2.3035857104952813, 2.3027823948510617, 2.3020570413264236], "accuracy": [0.0816272646188736, 0.08558975160121918, 0.08915598690509796, 0.09113723784685135, 0.08875974267721176, 0.08981640636920929], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0], [0, 0, 1], [5, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 3, 0, 2], [6, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.3042962920821624, 2.3031575586565607, 2.3022374804812555, 2.3035857104952813, 2.3027823948510617, 2.3020570413264236], "accuracy": [0.0816272646188736, 0.08558975160121918, 0.08915598690509796, 0.09113723784685135, 0.08875974267721176, 0.08981640636920929], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0], [0, 0, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [51], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3042962920821624, 2.3031575586565607, 2.3022374804812555, 2.3035857104952813, 2.3027823948510617, 2.3020570413264236], "accuracy": [0.0816272646188736, 0.08558975160121918, 0.08915598690509796, 0.09113723784685135, 0.08875974267721176, 0.08981640636920929], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]