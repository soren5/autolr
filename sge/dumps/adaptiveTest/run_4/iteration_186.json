[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.25694182164413, 2.0616887484275748, 1.6201533227470084, 1.266815598189571, 1.0925255836103382, 1.0059228250064303, 0.9521446178035335, 0.8847182962431837, 0.8543422981858522, 0.8307366963658492, 0.7898603717349603, 0.7810747029680255, 0.7667936084686474, 0.7517365980157763, 0.7405781363924465, 0.7232763616794041, 0.7174426377520285, 0.7082805893030999, 0.6888992949609728, 0.6767504982125757, 0.6849591761390531, 0.6666986923632825, 0.6687148668904267, 0.6626577083822948, 0.6452152461911772, 0.6512745378779823, 0.6351712308209003, 0.6286409852401125, 0.6328786462132076, 0.625743127998155, 0.6187507805492364, 0.619873466973197, 0.6133920582782134, 0.5953607674539995, 0.5958707119023181, 0.5930310080174552], "accuracy": [0.20472857356071472, 0.38687095046043396, 0.49966979026794434, 0.5661075115203857, 0.6136573553085327, 0.6474705934524536, 0.6654338836669922, 0.6826046705245972, 0.6926429867744446, 0.6993792057037354, 0.7100779414176941, 0.7214370369911194, 0.7226257920265198, 0.724210798740387, 0.7322678565979004, 0.7325320243835449, 0.7384757399559021, 0.7437590956687927, 0.7491744756698608, 0.7535332441329956, 0.7467969655990601, 0.7547219395637512, 0.7490423917770386, 0.7535332441329956, 0.7650244235992432, 0.7572315335273743, 0.7668735980987549, 0.7683265209197998, 0.7676661014556885, 0.7685906887054443, 0.7696473598480225, 0.7721568942070007, 0.7732135653495789, 0.7771760821342468, 0.776251494884491, 0.7771760821342468], "val_loss": [1.8509323937552316, 1.516589948109218, 1.053210769380842, 0.8389408929007394, 0.7366329090935844, 0.6837233134678432, 0.6469184841428485, 0.6001267092568534, 0.590417913028172, 0.5612577540533883, 0.5404214518410819, 0.556646500314985, 0.5335111447743007, 0.522127798625401, 0.5264756168637957, 0.5119683912822178, 0.516030124255589, 0.48892785821642193, 0.5097606692995343, 0.49570090430123465, 0.473096353667123, 0.463274495942252, 0.4738872391836984, 0.4557603767939976, 0.4826781579426357, 0.45451620646885466, 0.4846632650920323, 0.4428097350256784, 0.4455754246030535, 0.4348370688302176, 0.433461138180324, 0.43103654044015066, 0.4281805327960423, 0.4287706698690142, 0.4249731813158308, 0.4396333268710545], "val_accuracy": [0.4596666693687439, 0.574999988079071, 0.6230000257492065, 0.6710000038146973, 0.6956666707992554, 0.7023333311080933, 0.7296666502952576, 0.75, 0.7336666584014893, 0.7633333206176758, 0.7673333287239075, 0.7450000047683716, 0.7733333110809326, 0.765333354473114, 0.7703333497047424, 0.7753333449363708, 0.765999972820282, 0.7896666526794434, 0.7540000081062317, 0.781333327293396, 0.7946666479110718, 0.8019999861717224, 0.7866666913032532, 0.8063333630561829, 0.7716666460037231, 0.8059999942779541, 0.7853333353996277, 0.8109999895095825, 0.8163333535194397, 0.8159999847412109, 0.8240000009536743, 0.8220000267028809, 0.8209999799728394, 0.8119999766349792, 0.8196666836738586, 0.8050000071525574]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.5659999847412109, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.4942496043658604, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2989037036895752, 0.19812442362308502, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17.30569566999163, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5446666479110718, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.5659999847412109, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.4942503531595435, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2989037036895752, 0.19812442362308502, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [17.305557795933314, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5446666479110718, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 6, 0, 2, 5, 2, 2, 5, 4, 0, 1, 4, 4, 8, 2, 2, 8, 9, 4, 9, 4], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0, 1], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [7, 43, 56, 45]], "fitness": -0.3197142779827118, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3019888940472817, 2.3023430177831945, 2.3008130733536345, 2.3010180200867256, 2.2997738883290952, 2.299683895250904, 2.300960726159171, 2.3000729287446937, 2.299604864829661, 2.2986462675522126, 2.2973298579316648, 2.298638259257623, 2.298219164994572, 2.297039317354125, 2.297255824065999, 2.2980213787545933, 2.2956766883820876, 2.296132877187612, 2.293722574689747, 2.294160582118298, 2.2933543158276617, 2.294370274108556, 2.294193415735628, 2.29420583702554, 2.2932366726184643, 2.2936175186337104, 2.2912115886022133, 2.290964915689114, 2.291559575114504, 2.2912523177132678, 2.2901656080970767, 2.2917567141193675, 2.2897332028595683, 2.289816168525735, 2.290762174713645, 2.2889607665309217, 2.288891783574348, 2.288845207114592, 2.2881078170889233, 2.2870087857259627, 2.287797674196208, 2.286953467325118, 2.2850254862425965, 2.285754327650603, 2.2834154146537333, 2.286069761477032, 2.2842311065242025, 2.284416112917415, 2.284634616727354, 2.284371553300599, 2.2837378145476626, 2.2829191363829318, 2.283029481924095, 2.281758896663063, 2.2822420609357916, 2.2823740993870594, 2.2810479234537477, 2.2804270778837896, 2.2805914573067323, 2.2789946401659305, 2.2800130697682928, 2.278346078995118, 2.278661280071353, 2.2782675299142503, 2.2776443208481076, 2.2776059380391365, 2.2765995627302362, 2.2763807041423667, 2.2771584060229584, 2.276686449596328, 2.2751064744875524, 2.276274769171716, 2.275061798920768, 2.273103534931268, 2.2736667203015153, 2.2752268688474993, 2.2724546449941148, 2.273057342221189, 2.2720274074659246, 2.2731592995599907, 2.2712818030683732, 2.2722981054202487, 2.2713385905257115, 2.2708193348572316, 2.2697026996312752, 2.269710933559087, 2.2694329223486696, 2.2690822026670068, 2.269465826757832, 2.268047527189284, 2.267025184858083, 2.269324961056279, 2.2666474093126188, 2.266588730693037, 2.2666529110157887, 2.2644412124224655, 2.264950526184205, 2.2642465105083214, 2.2645923529854066, 2.2641344765756486], "accuracy": [0.09800554811954498, 0.08981640636920929, 0.09272222965955734, 0.09496764093637466, 0.09509972482919693, 0.09840179979801178, 0.10011887550354004, 0.09377889335155487, 0.09457138925790787, 0.1022322028875351, 0.09945846349000931, 0.09813763201236725, 0.10328886657953262, 0.1010434553027153, 0.10328886657953262, 0.09840179979801178, 0.11121384054422379, 0.10632677376270294, 0.10791176557540894, 0.108440101146698, 0.11134592443704605, 0.11293092370033264, 0.11398758739233017, 0.11121384054422379, 0.11636507511138916, 0.11755382269620895, 0.1142517477273941, 0.1220446452498436, 0.11319508403539658, 0.11768590658903122, 0.11993131786584854, 0.1224408894777298, 0.12613920867443085, 0.11438383162021637, 0.12112006545066833, 0.12653546035289764, 0.1258750557899475, 0.12429005652666092, 0.13089419901371002, 0.1262712925672531, 0.12878087162971497, 0.13221503794193268, 0.13591335713863373, 0.13868708908557892, 0.13459251821041107, 0.13802668452262878, 0.14014001190662384, 0.13657376170158386, 0.13630960881710052, 0.1394795924425125, 0.13274335861206055, 0.14238542318344116, 0.14093250036239624, 0.14357416331768036, 0.14436666667461395, 0.13908334076404572, 0.14714039862155914, 0.1488574892282486, 0.1476687341928482, 0.15453705191612244, 0.15057456493377686, 0.15493330359458923, 0.15334829688072205, 0.15889579057693481, 0.151234969496727, 0.15889579057693481, 0.1636507660150528, 0.15480121970176697, 0.14991414546966553, 0.15572579205036163, 0.16272619366645813, 0.16153743863105774, 0.16272619366645813, 0.17302866280078888, 0.1628582775592804, 0.15797120332717896, 0.17012283205986023, 0.16999074816703796, 0.17316074669361115, 0.16510368883609772, 0.17421740293502808, 0.16972659528255463, 0.1740853190422058, 0.16972659528255463, 0.17342491447925568, 0.18636904656887054, 0.17884030938148499, 0.17580240964889526, 0.1826707124710083, 0.18016114830970764, 0.1846519559621811, 0.18240654468536377, 0.186104878783226, 0.189274862408638, 0.18716153502464294, 0.1896711140871048, 0.18874652683734894, 0.1868973672389984, 0.18584071099758148, 0.19191652536392212], "val_loss": [1.9700171606881278, 1.9696496554783411, 1.9692822183881487, 1.9689146450587682, 1.968547752925328, 1.9681788853236608, 1.9678128787449427, 1.9674523217337472, 1.9670860426766532, 1.9667251450674874, 1.9663630213056291, 1.9660018512180872, 1.965637479509626, 1.9652743339538574, 1.9649100984845842, 1.964550563267299, 1.9641875539507185, 1.9638290405273438, 1.9634693690708704, 1.9631133760724748, 1.9627552032470703, 1.9623915127345495, 1.9620306151253837, 1.9616739409310477, 1.9613138607570104, 1.9609528950282507, 1.9605937685285295, 1.9602328027997697, 1.959873880658831, 1.9595153672354562, 1.9591576712472099, 1.9588006564549036, 1.9584390776497977, 1.9580772263663155, 1.9577172143118722, 1.957355158669608, 1.9569963727678572, 1.956639221736363, 1.9562805720738001, 1.9559244428362166, 1.9555627959115165, 1.9552010808672224, 1.9548397064208984, 1.954477378300258, 1.954115663255964, 1.9537560599190849, 1.9533955710274833, 1.9530348777770996, 1.9526748657226562, 1.9523143087114607, 1.951951026916504, 1.9515906061444963, 1.9512279374258858, 1.9508689471653529, 1.9505084582737513, 1.9501493998936243, 1.949786799294608, 1.9494260379246302, 1.949061461857387, 1.948702267238072, 1.948340688432966, 1.9479740687779017, 1.9476120812552316, 1.947249276297433, 1.9468839509146554, 1.9465182168143136, 1.9461527551923479, 1.9457877022879464, 1.9454223769051688, 1.9450560978480749, 1.9446910449436732, 1.9443248340061732, 1.9439549446105957, 1.9435830116271973, 1.9432103293282645, 1.942845003945487, 1.94247225352696, 1.942103726523263, 1.9417304992675781, 1.9413626534598214, 1.9409888812473841, 1.9406159264700753, 1.940244402204241, 1.939871038709368, 1.9394999231610979, 1.9391257422310966, 1.9387518337794714, 1.9383790833609444, 1.9380042893545968, 1.9376259531293596, 1.9372476169041224, 1.936868667602539, 1.9364903313773019, 1.936110019683838, 1.9357285499572754, 1.9353436742510115, 1.9349571636744909, 1.9345736503601074, 1.934190341404506, 1.9338043757847376], "val_accuracy": [0.038333334028720856, 0.04233333468437195, 0.044333335012197495, 0.046666666865348816, 0.04866666719317436, 0.05166666582226753, 0.0560000017285347, 0.05900000035762787, 0.06199999898672104, 0.06533333659172058, 0.06733333319425583, 0.06833333522081375, 0.070333331823349, 0.07433333247900009, 0.07900000363588333, 0.08233333379030228, 0.08433333039283752, 0.08666666597127914, 0.09000000357627869, 0.09266666322946548, 0.0949999988079071, 0.09600000083446503, 0.10000000149011612, 0.10366666316986084, 0.10566666722297668, 0.10866666585206985, 0.11100000143051147, 0.11699999868869781, 0.11933333426713943, 0.1236666664481163, 0.12700000405311584, 0.12966667115688324, 0.1326666623353958, 0.1353333294391632, 0.13966666162014008, 0.14499999582767487, 0.14900000393390656, 0.1550000011920929, 0.1589999943971634, 0.16300000250339508, 0.16833333671092987, 0.1720000058412552, 0.17466667294502258, 0.17866666615009308, 0.18266665935516357, 0.1850000023841858, 0.18966667354106903, 0.19066666066646576, 0.19599999487400055, 0.1979999989271164, 0.20033332705497742, 0.20399999618530273, 0.20800000429153442, 0.21266666054725647, 0.21566666662693024, 0.21699999272823334, 0.21899999678134918, 0.2213333398103714, 0.22599999606609344, 0.2290000021457672, 0.23366667330265045, 0.23766666650772095, 0.24199999868869781, 0.24266666173934937, 0.24533332884311676, 0.24933333694934845, 0.25066667795181274, 0.2526666522026062, 0.25733333826065063, 0.2619999945163727, 0.2633333206176758, 0.2653333246707916, 0.2666666805744171, 0.2696666717529297, 0.2736666798591614, 0.27900001406669617, 0.2823333442211151, 0.28433331847190857, 0.28600001335144043, 0.28700000047683716, 0.28833332657814026, 0.2903333306312561, 0.2943333387374878, 0.29733332991600037, 0.29899999499320984, 0.3009999990463257, 0.30399999022483826, 0.30533334612846375, 0.30799999833106995, 0.3089999854564667, 0.31066668033599854, 0.31200000643730164, 0.31299999356269836, 0.3149999976158142, 0.3173333406448364, 0.3190000057220459, 0.32100000977516174, 0.3243333399295807, 0.32600000500679016, 0.32733333110809326]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0, 1], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.11914286017417908, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [5.7745139017073115e+19, 6.499558113974038e+19, 6.498775089456151e+19, 6.561266837760777e+19, 6.5651512349036814e+19, 6.465056703903127e+19], "accuracy": [0.10276053100824356, 0.10434553027153015, 0.10553427785634995, 0.11094967275857925, 0.10685510188341141, 0.11253467202186584], "val_loss": [3.531618531252394e+19, 3.531618531252394e+19, 3.5316186569108656e+19, 3.5316189082278093e+19, 3.5316191595447525e+19, 3.5316187825693372e+19], "val_accuracy": [0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626, 0.11633333563804626]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 6, 0, 2, 5, 2, 2, 5, 4, 0, 1, 4, 4, 8, 2, 2, 8, 9, 4, 9, 4], [0, 3, 1, 0, 1], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 4, 4], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 0, 0, 4, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.negative(alpha)), tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 0, 8, 9, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [78, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [43, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 1, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020309323348767, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 8, 9, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0, 1], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 4, 4], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [43, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30232774790929, 2.3030021263072675, 2.30302060121212, 2.302987037727216, 2.302951123342538, 2.3029439353577574], "accuracy": [0.09760929644107819, 0.09602430462837219, 0.09430722147226334, 0.09866596013307571, 0.09826971590518951, 0.09893012791872025], "val_loss": [1.9735774993896484, 1.973571845463344, 1.9736225264413017, 1.9736496380397253, 1.9736209596906389, 1.9735619681222099], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.10066666454076767, 0.09733333438634872, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 0, 8, 9, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0, 1], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1711.0999856114215, 30757.656772140403, 139797.82757809403, 389527.00033020735, 825613.2682687228, 1511376.6773048474], "accuracy": [0.09589222073554993, 0.09813763201236725, 0.10289261490106583, 0.09866596013307571, 0.09932637959718704, 0.09747721254825592], "val_loss": [6177.885044642857, 47576.674107142855, 158794.3125, 374415.875, 729029.0892857143, 1257222.142857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 2, 9, 6, 1, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0, 2], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [340123755.08048993, 6603977835.931846, 30554566286.48897, 85767082285.34355, 182506719274.46942, 334915678354.6142], "accuracy": [0.09628847241401672, 0.09826971590518951, 0.10289261490106583, 0.09866596013307571, 0.09945846349000931, 0.09760929644107819], "val_loss": [1292137947.4285715, 10332338176.0, 34866358564.57143, 82639880192.0, 161399214665.14285, 278887895625.1429], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1], [1, 2, 5, 6, 7, 2, 0, 2, 5, 2, 2, 9, 6, 2, 1, 6, 8, 0, 5, 6, 2, 0, 4], [2, 1, 0, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93, 58, 5, 8], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020309323348767, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [8, 2, 9, 6, 1, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0, 1], [96, 77, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 4], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 2, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 4, 4], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 4, 3, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [134443.63163581857, 2581235.768260468, 11904673.672434289, 33369825.682208426, 70953904.50085855, 130143476.35134064], "accuracy": [0.09642054885625839, 0.09826971590518951, 0.10289261490106583, 0.09866596013307571, 0.09932637959718704, 0.09760929644107819], "val_loss": [507231.58928571426, 4030362.1428571427, 13572728.57142857, 32137708.57142857, 62728626.28571428, 108348868.57142857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 2, 5, 0, 8, 2, 0, 2, 5, 5, 2, 9, 6, 2, 1, 6, 8, 0, 5, 6, 2, 0, 4], [2, 0, 1, 0, 1, 3, 1, 1, 0, 0, 3, 2, 3, 3], [96, 12, 61, 32, 20, 75], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [162360.9705662098, 3119790.7080306434, 14391670.555276714, 40344963.865803726, 85789560.94148725, 157359698.635319], "accuracy": [0.09642054885625839, 0.09826971590518951, 0.10289261490106583, 0.09866596013307571, 0.09932637959718704, 0.09760929644107819], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 8, 9, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 3, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 4, 4], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [12, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [4.113692041653306, 90822850.71043485, 3741884883723079.5, 1.6073765511135097e+23, 7.483653933788392e+30, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [175.62114606584822, 7539283968.0, 3.245413746104262e+17, 1.3970440027663696e+25, 6.013816107313169e+32, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 61, 32, 20, 75], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [93, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 2, 2, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.09228571504354477, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), alpha)", "other_info": {"loss": [2.300241540593399, 2.301794309500202, 2.302673773916091, 2.302519360836927, 2.3046795700865808, 2.340969884400323, 2.786163704947332, 4.681676579441267, 8.974580983570176], "accuracy": [0.10170386731624603, 0.07872143387794495, 0.09060890227556229, 0.11557257920503616, 0.10513802617788315, 0.1026284471154213, 0.10210011899471283, 0.09998679161071777, 0.09866596013307571], "val_loss": [1.9711333002362932, 1.9735781805855888, 1.9733390808105469, 1.9742210251944405, 1.981189795902797, 2.106619358062744, 3.0945976802280972, 5.777121407645089, 11.04103878566197], "val_accuracy": [0.07266666740179062, 0.07233333587646484, 0.11500000208616257, 0.12399999797344208, 0.09700000286102295, 0.09733333438634872, 0.10066666454076767, 0.10066666454076767, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3, 2], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 6, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30215043279048, 2.3028984669413406, 2.3017612884797596, 2.3023621458434755, 2.3015191143435447, 2.30182597470589], "accuracy": [0.09747721254825592, 0.08770307898521423, 0.09021265059709549, 0.09259014576673508, 0.09126931428909302, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 6, 0, 2, 5, 2, 2, 5, 4, 0, 1, 4, 4, 8, 2, 2, 8, 9, 4, 9, 4], [2, 2, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0, 1], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 43, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30215043279048, 2.3028984669413406, 2.3017612884797596, 2.3023621458434755, 2.3015191143435447, 2.30182597470589], "accuracy": [0.09747721254825592, 0.08770307898521423, 0.09021265059709549, 0.09259014576673508, 0.09126931428909302, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [0, 4, 4], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 9, 4, 0, 8], [3, 3, 0, 0, 3, 0, 2], [43, 62, 79, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30215043279048, 2.3028984669413406, 2.3017612884797596, 2.3023621458434755, 2.3015191143435447, 2.30182597470589], "accuracy": [0.09747721254825592, 0.08770307898521423, 0.09021265059709549, 0.09259014576673508, 0.09126931428909302, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]