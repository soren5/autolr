[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.07636812943761, 1.359136981136527, 1.067867227895558, 0.959393981378218, 0.8061523211788051, 0.7687640748696635, 0.7332019040361293, 0.7348510109438258, 0.6833834569089842, 0.6791798313689695, 0.6530985358510555, 0.6637316068338917, 0.6360956904926257, 0.6046522281362302, 0.619110394092583, 0.5933981637881652, 0.585551577316, 0.595263415630924, 0.5649963302414541, 0.5500875235926505, 0.5506913631567945, 0.5467990708074014, 0.5376707585559246, 0.5348852212521, 0.5340953406609281, 0.5098574905898734, 0.49472167233765135, 0.5088632925783938, 0.49515210549278094, 0.4964350088673056, 0.5100574855948672, 0.47564313552556275, 0.48147665219079583, 0.48006341000668296, 0.46576927802062323, 0.4639584594446166, 0.45712938605203857, 0.45822858751379125, 0.4519805386199959, 0.4377915046990052, 0.4310883046172755, 0.4356400955268153, 0.41620235410994383, 0.4296175226984464, 0.42049006649516024], "accuracy": [0.31501781940460205, 0.5263505578041077, 0.6152423620223999, 0.640338122844696, 0.7049266695976257, 0.7141724824905396, 0.7250033020973206, 0.7218332886695862, 0.7460044622421265, 0.7445515990257263, 0.7547219395637512, 0.7470611333847046, 0.7622507214546204, 0.7721568942070007, 0.7664773464202881, 0.7788931727409363, 0.783119797706604, 0.7745344042778015, 0.7849689722061157, 0.7977809906005859, 0.7935543656349182, 0.7980451583862305, 0.8031964302062988, 0.7981772422790527, 0.7965922355651855, 0.8055738806724548, 0.822348415851593, 0.8096684813499451, 0.819970965385437, 0.8146876096725464, 0.8017435073852539, 0.8232730031013489, 0.8244617581367493, 0.8247259259223938, 0.828292191028595, 0.8296129703521729, 0.8334434032440186, 0.8286884427070618, 0.8333113193511963, 0.8381983637809753, 0.8416325449943542, 0.837537944316864, 0.8448025584220886, 0.8424250483512878, 0.841500461101532], "val_loss": [1.193338257925851, 0.8564497062138149, 0.8111797741481236, 0.6160867554800851, 0.5775898184095111, 0.5621677807399205, 0.5476216929299491, 0.5468864611216954, 0.5144667625427246, 0.5205015114375523, 0.5068450484957013, 0.5293234416416713, 0.4802297183445522, 0.49012744426727295, 0.47728802476610455, 0.4916203362601144, 0.4916382006236485, 0.4551880359649658, 0.4395785927772522, 0.4309509481702532, 0.4234157460076468, 0.4652669940676008, 0.43342529024396625, 0.42075746400015696, 0.4232409766742161, 0.421664297580719, 0.402034478528159, 0.4173567465373448, 0.39911207130977083, 0.419157224042075, 0.39426866599491667, 0.3935677068574088, 0.4245659112930298, 0.384501508304051, 0.3939801709992545, 0.3942991580281939, 0.38281519072396414, 0.3866956744875227, 0.37290812390191214, 0.3759992718696594, 0.3774927428790501, 0.3745742269924709, 0.3753021700041635, 0.37184369564056396, 0.3740982583590916], "val_accuracy": [0.48899999260902405, 0.590666651725769, 0.6423333287239075, 0.7253333330154419, 0.7443333268165588, 0.7543333172798157, 0.7483333349227905, 0.7403333187103271, 0.7689999938011169, 0.7526666522026062, 0.7770000100135803, 0.7453333139419556, 0.7940000295639038, 0.7739999890327454, 0.7893333435058594, 0.7733333110809326, 0.7923333048820496, 0.79666668176651, 0.8106666803359985, 0.8119999766349792, 0.8203333616256714, 0.784333348274231, 0.8133333325386047, 0.8240000009536743, 0.8206666707992554, 0.8146666884422302, 0.8299999833106995, 0.8176666498184204, 0.8303333520889282, 0.8076666593551636, 0.8363333344459534, 0.8346666693687439, 0.8133333325386047, 0.8420000076293945, 0.8373333215713501, 0.8333333134651184, 0.8416666388511658, 0.8403333425521851, 0.8473333120346069, 0.8496666550636292, 0.8476666808128357, 0.8473333120346069, 0.8426666855812073, 0.8446666598320007, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 1], [1], [5, 2, 5], [3, 1, 1, 0], [73], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 0, 0, 2, 2, 2, 0, 3, 4, 0, 2, 5, 4, 2, 2, 2, 3, 6, 1, 6, 8, 0, 5, 2, 1, 2, 9], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.7708571553230286, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.negative(beta))", "other_info": {"loss": [2.2856806394934512, 2.2438554071621133, 2.186523272235081, 2.091510051214117, 1.9510244426631562, 1.7642000282697232, 1.5714641456606524, 1.4138841888199487, 1.2905546672718007, 1.203901984971575, 1.1341068815041873, 1.0767924779315807, 1.0374315344599243, 0.9977076786179443, 0.9693956108550511, 0.9483441692994586, 0.9158747430018399, 0.9026611643759582, 0.8863846292553671, 0.8606335651510821, 0.8459223197782202, 0.8357888641705082, 0.812493565461702, 0.8090374514631796, 0.8115865666600833, 0.7876967276170852, 0.7821700272306932, 0.783090549051612, 0.7653095246920134, 0.7638599586729298, 0.7625859658227794, 0.7718466690124821, 0.7377766249375399, 0.7428248188341645, 0.7370611083364254, 0.7181263796610209, 0.7204245606024252, 0.7206545983874298, 0.7035898914221901, 0.701793833226733, 0.7071014541550524, 0.692120016865081, 0.7002002753365577], "accuracy": [0.14172500371932983, 0.24395720660686493, 0.31422534584999084, 0.38607844710350037, 0.4266279339790344, 0.47285696864128113, 0.5070664286613464, 0.5316338539123535, 0.5608242154121399, 0.5840708017349243, 0.602562427520752, 0.6205257177352905, 0.6338660717010498, 0.6493197679519653, 0.6576409935951233, 0.6637167930603027, 0.6740192770957947, 0.6782459616661072, 0.6823405027389526, 0.6897371411323547, 0.7008321285247803, 0.7029454708099365, 0.7057191729545593, 0.7074362635612488, 0.709021270275116, 0.7210407853126526, 0.7149649858474731, 0.7173424959182739, 0.7209087014198303, 0.7219653725624084, 0.7190595865249634, 0.7173424959182739, 0.7349095344543457, 0.7277770638465881, 0.7265883088111877, 0.7358341217041016, 0.7391361594200134, 0.741909921169281, 0.7425703406333923, 0.7466648817062378, 0.7430986762046814, 0.7456082701683044, 0.7454761862754822], "val_loss": [1.9309996196201868, 1.8841660363333566, 1.812073026384626, 1.6961181163787842, 1.53000385420663, 1.329228299004691, 1.1421291487557548, 1.002039807183402, 0.9039436067853656, 0.8317807912826538, 0.7806750706263951, 0.7379224640982491, 0.7132776124136788, 0.6857420546667916, 0.6641632318496704, 0.646725961140224, 0.6320065600531442, 0.6250380447932652, 0.6103167704173497, 0.597077557018825, 0.5890270301273891, 0.5813245092119489, 0.5702083962304252, 0.5686510631016323, 0.5623972245625087, 0.5564981528690883, 0.5534244775772095, 0.5433228015899658, 0.5374761308942523, 0.5344397510801043, 0.5328831842967442, 0.5295484576906476, 0.5246657984597343, 0.519573450088501, 0.5169288430895124, 0.5135946273803711, 0.5120819125856672, 0.5078336000442505, 0.506275977407183, 0.5015950884137835, 0.5007338694163731, 0.49747811044965473, 0.4967544249125889], "val_accuracy": [0.3453333377838135, 0.4426666796207428, 0.48899999260902405, 0.5346666574478149, 0.57833331823349, 0.609666645526886, 0.6320000290870667, 0.6516666412353516, 0.6816666722297668, 0.6933333277702332, 0.6953333616256714, 0.7086666822433472, 0.7123333215713501, 0.7206666469573975, 0.7246666550636292, 0.7293333411216736, 0.7366666793823242, 0.7400000095367432, 0.7476666569709778, 0.7526666522026062, 0.7590000033378601, 0.7609999775886536, 0.7546666860580444, 0.762666642665863, 0.7630000114440918, 0.762666642665863, 0.7696666717529297, 0.7723333239555359, 0.7716666460037231, 0.7703333497047424, 0.7736666798591614, 0.781333327293396, 0.7770000100135803, 0.7820000052452087, 0.7799999713897705, 0.7860000133514404, 0.7789999842643738, 0.7919999957084656, 0.7866666913032532, 0.7903333306312561, 0.7850000262260437, 0.7906666398048401, 0.7913333177566528]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1], [3, 6, 9, 2, 2, 2, 0, 5, 6, 5, 6, 1, 7, 7, 4, 7, 6, 3, 6, 8, 4, 5, 2], [3, 2, 0, 0, 2, 2, 2, 2, 0, 3, 1, 1, 2, 2, 2, 3, 3, 2, 0, 1, 1, 2, 2, 1], [58, 60, 56, 45, 7, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 40, 23, 17, 4], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))), tf.math.pow(tf.math.square(alpha), tf.math.add(alpha, beta)))), beta)), beta))))), sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [2, 0, 7, 6, 6, 0, 8, 3, 7, 1, 3, 4, 5, 7, 0, 9], [2, 1, 1, 3, 0, 0, 3, 2, 0, 1], [96, 12, 93, 72], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 0, 5, 2, 2, 0, 7, 2], [0, 1, 0, 0, 3, 2, 0], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(alpha)))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 1, 1], [5, 2, 5, 8, 7, 8, 0], [1, 1, 1, 0], [96, 12, 93], [0, 1, 0], [0, 1, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [78], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 8, 0, 5, 2, 0, 0, 7, 2], [0, 2, 0, 0, 3, 2, 0], [41, 60, 90, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(beta)))", "other_info": {"loss": [2.302156514180508, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0, 5, 6, 9, 6, 1, 7, 6, 7, 2, 5, 6, 3, 2, 4, 4, 9, 8, 2, 9], [1, 2, 0, 0, 3, 0, 2, 2, 3, 1, 1, 3, 3, 3, 1, 3], [41, 60, 56, 45, 56, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 42, 26, 16, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.square(beta)), sigma), alpha), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), alpha), sigma), sigma), tf.math.sqrt(sigma)), tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha)))))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [9, 7, 0, 2, 2, 2, 9, 2, 9, 6, 5, 7, 0, 4, 9, 3, 3, 9, 5, 4, 8, 1], [1, 2, 0, 0, 1, 1, 2, 3, 1, 1], [41, 60, 56, 45, 49, 17, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302156514180508, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [0, 2, 1, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302156514180508, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [5, 2, 5, 4, 1, 2, 2, 8, 6, 0, 9], [3, 1, 1, 0, 0, 1, 3], [96, 12, 93], [0, 1, 0, 1], [0, 1, 0, 0], [3, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 1, 1, 2, 2, 2, 0], [0, 2, 0, 0, 3, 2, 0], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 14, 7, 7, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha)))), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(sigma), beta)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302156514180508, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [9, 8, 5, 8, 2, 2, 3, 7, 3, 8, 2, 7, 8, 5, 1, 3, 8], [1, 2, 2, 0, 3, 1, 0, 0, 3, 2, 3, 1], [41, 2, 9, 50, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302156514180508, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 5, 4, 2, 0, 0, 7, 2, 1, 8, 5, 7, 4, 8, 6, 3], [3, 1, 1, 0, 1, 1, 0, 2, 3, 1, 2], [88, 38, 77], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 0, 6, 2, 4, 7, 2, 9, 6, 9], [1, 2, 2, 2, 3, 2, 3], [78, 60, 56, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 17, 11, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 2], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), alpha)))), tf.math.add(alpha, alpha))))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(alpha, tf.math.negative(beta)), tf.math.divide_no_nan(tf.math.add(tf.math.pow(beta, tf.math.add(tf.math.add(beta, sigma), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 5, 0, 9, 4, 0, 5, 7, 7, 0, 2, 3, 7, 5, 5, 1, 8, 1, 1], [1, 2, 0, 0, 3, 2, 3, 2, 0, 3, 2, 3, 3, 3], [58, 60, 56, 66, 13, 48]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 13, 7, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.pow(tf.math.negative(tf.math.square(beta)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.add(beta, sigma))", "other_info": {"loss": [7342.335544943164, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19059570133686066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.483092764909843e+33, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1], [0, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [8, 0, 0, 2, 2, 2, 0, 2, 4, 0, 2, 5, 4, 5, 2, 2, 3, 6, 1, 6, 8, 5, 5, 2, 1, 2, 9], [3, 2, 0, 0, 3, 0, 1, 2, 0, 3, 1, 1, 2, 2, 1, 3, 3, 2, 0, 1, 1, 2, 2, 1], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [4, 7, 3, 0, 3], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [3, 0, 0, 2, 2, 2, 4, 3, 4, 0, 2, 5, 4, 2, 2, 2, 2, 6, 8, 6, 8, 0, 5, 2, 1, 2, 9], [1, 2, 0, 0, 3, 3, 1, 1, 0, 0, 3, 2, 0, 1, 0, 2], [41, 60, 70, 35, 57, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 37, 21, 16, 6], "tree_depth": 36, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.negative(beta), tf.math.add(tf.math.square(tf.math.pow(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma), sigma)), alpha), alpha)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), sigma), beta), tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0, 9, 0, 9, 9], [1, 2, 0, 0, 3], [41, 36, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 11, 3, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022824467732184, 2.302669575185729, 2.3027248639220246, 2.302678544082662, 2.3026958087557863, 2.3027020207706017, 2.302711070316059, 2.3027220370353505], "accuracy": [0.09787346422672272, 0.09668471664190292, 0.09721305221319199, 0.09192973375320435, 0.0948355570435524, 0.09298639744520187, 0.09509972482919693, 0.09655263274908066], "val_loss": [1.973658221108573, 1.9736454146248954, 1.9736336299351283, 1.9736413955688477, 1.973635196685791, 1.9736394882202148, 1.9736408506120955, 1.9736520903451102], "val_accuracy": [0.09700000286102295, 0.09700000286102295, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.0989999994635582, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0], [0, 1, 0, 0], [4, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [10], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3, 7, 2, 2, 3, 1, 6], [7, 7], [], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 0, 2, 2, 0, 1, 2, 9, 4], [0, 2, 0, 0, 3, 3], [0, 89, 29, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 16, 10, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.subtract(tf.math.add(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), sigma))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10355303436517715, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 2, 2, 2, 0], [1, 2, 1, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(alpha), beta), alpha)", "other_info": {"loss": [2.302933900961865, 2.3031299034869903, 2.3035653322726475, 2.3032925541154334, 2.3033564771249893, 2.3033735568198104, 2.303508373787532, 2.3035471227426947], "accuracy": [0.09866596013307571, 0.09972262382507324, 0.0948355570435524, 0.09509972482919693, 0.09311848133802414, 0.09470347315073013, 0.09760929644107819, 0.09893012791872025], "val_loss": [1.9740125111171178, 1.9736344473702567, 1.973569665636335, 1.9737125124250139, 1.973741054534912, 1.9738341059003557, 1.9737606048583984, 1.9739134652273995], "val_accuracy": [0.09700000286102295, 0.1003333330154419, 0.10166666656732559, 0.1003333330154419, 0.0989999994635582, 0.09799999743700027, 0.0989999994635582, 0.0989999994635582]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 0], [3, 2, 0, 0, 3, 1], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 8, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), beta), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma), alpha))", "other_info": {"loss": [2.302045798304846, 2.3029090793550666, 2.303142043782452, 2.3016926786288954, 2.301132298888878, 2.3013783696305246], "accuracy": [0.09602430462837219, 0.0948355570435524, 0.08479725569486618, 0.09417514503002167, 0.09708096832036972, 0.09351472556591034], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 0, 7, 6, 6, 8, 9], [2, 1, 2, 3, 0, 0, 3], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 4, 6, 2, 2, 2, 0, 7, 4, 8, 4, 6], [2, 0, 0, 0, 3, 1, 1, 2, 0, 2, 2], [41, 60, 56, 45, 67]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 16, 8, 8, 3], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)), tf.math.negative(tf.math.add(alpha, beta))))", "other_info": {"loss": [2.302045798304846, 2.3029090793550666, 2.303142043782452, 2.3016926786288954, 2.301132298888878, 2.3013783696305246], "accuracy": [0.09602430462837219, 0.0948355570435524, 0.08479725569486618, 0.09417514503002167, 0.09708096832036972, 0.09351472556591034], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 1], [6, 7, 3, 0, 3], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [0, 0, 0], [1, 1, 0, 0, 0, 0, 1], [5, 3], [6, 7], [], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [9, 0, 0, 2, 2, 2, 0, 3, 4, 0, 2, 5, 4, 2, 2, 2, 3, 6, 1, 6, 8, 0, 5, 2, 1, 2, 9], [1, 1, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302045798304846, 2.3029090793550666, 2.303142043782452, 2.3016926786288954, 2.301132298888878, 2.3013783696305246], "accuracy": [0.09602430462837219, 0.0948355570435524, 0.08479725569486618, 0.09417514503002167, 0.09708096832036972, 0.09351472556591034], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]