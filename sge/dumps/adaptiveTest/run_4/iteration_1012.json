[{"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.834857165813446, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9120724354721157, 1.1813043110705386, 0.7910131108428603, 0.6810858191878268, 0.6130646990825944, 0.5666721049411312, 0.522363402816393, 0.49577774239915345, 0.4699756281408321, 0.4414498518329208, 0.440570204930456, 0.428916570965829, 0.4049046420307837, 0.38891894867580484, 0.38043295665975135, 0.3708058463198209, 0.3551399197206521, 0.34256088908448307, 0.3305146696112175, 0.3312290475557761, 0.3310461563559225, 0.3163696812041888, 0.30656896581770704], "accuracy": [0.35886937379837036, 0.6262052655220032, 0.6913221478462219, 0.7364945411682129, 0.7593448758125305, 0.7810064554214478, 0.8021397590637207, 0.809140145778656, 0.8208954930305481, 0.8422929644584656, 0.833179235458374, 0.8408400416374207, 0.8504821062088013, 0.8574824929237366, 0.8589354157447815, 0.8602562546730042, 0.8647470474243164, 0.8734645247459412, 0.8720116019248962, 0.8716153502464294, 0.873860776424408, 0.8775591254234314, 0.8856161832809448], "val_loss": [1.1488957405090332, 0.6462520701544625, 0.5263106141771589, 0.4907030037471226, 0.4454775367464338, 0.41060414484569, 0.40160287278039114, 0.3694953577859061, 0.35553629057747976, 0.355289774281638, 0.3456926260675703, 0.33709237405232023, 0.3256951229912894, 0.3212867038590567, 0.3226765905107771, 0.3113869088036673, 0.307560784476144, 0.3001079389027187, 0.30665149859019686, 0.30704990455082487, 0.30101617744990755, 0.2993121402604239, 0.2959262302943638], "val_accuracy": [0.6119999885559082, 0.7116666436195374, 0.7606666684150696, 0.781333327293396, 0.8026666641235352, 0.8236666917800903, 0.8180000185966492, 0.8450000286102295, 0.8539999723434448, 0.8506666421890259, 0.8619999885559082, 0.8546666502952576, 0.871666669845581, 0.871666669845581, 0.8656666874885559, 0.8740000128746033, 0.8763333559036255, 0.8826666474342346, 0.8709999918937683, 0.8713333606719971, 0.8733333349227905, 0.878000020980835, 0.8759999871253967]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8317142724990845, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.91207304013136, 1.1813470424363137, 0.7907252756832235, 0.6812272230553164, 0.6127226428978668, 0.5681427948904106, 0.5235027967584509, 0.4964779280062129, 0.47135367081417556, 0.44238509250953134, 0.4410104694903062, 0.4314447430107241, 0.40666863101820794, 0.38862977164406676, 0.37950383481993855, 0.36937814454172013, 0.3513095865530219, 0.34521916687779847, 0.3314599126179803, 0.32790551167028203, 0.32836053011565713, 0.3151975971061194, 0.30594318017526906], "accuracy": [0.35886937379837036, 0.6260731816291809, 0.6922467350959778, 0.7364945411682129, 0.7600052952766418, 0.7827235460281372, 0.8018755912780762, 0.8103289008140564, 0.8182538747787476, 0.8352925777435303, 0.8304054737091064, 0.8391229510307312, 0.8507462739944458, 0.8540483713150024, 0.8619733452796936, 0.863558292388916, 0.8654074668884277, 0.8732003569602966, 0.8698983192443848, 0.8705587387084961, 0.8750495314598083, 0.876370370388031, 0.8854840993881226], "val_loss": [1.1488864421844482, 0.6455320460455758, 0.5272704533168248, 0.4898944752556937, 0.44599643775394987, 0.41239486421857563, 0.40268281527927946, 0.36961363894598825, 0.3552751285689218, 0.3521217703819275, 0.3468537075178964, 0.33917294229779926, 0.3317403367587498, 0.3188029016767229, 0.32142823934555054, 0.3103025555610657, 0.3090361101286752, 0.3006092054503305, 0.3052536589758737, 0.30058639390128, 0.30742177792957853, 0.298379259450095, 0.29370386259896414], "val_accuracy": [0.6119999885559082, 0.7123333215713501, 0.7583333253860474, 0.777999997138977, 0.8026666641235352, 0.8243333101272583, 0.8220000267028809, 0.847000002861023, 0.8513333201408386, 0.8556666374206543, 0.8586666584014893, 0.8500000238418579, 0.8633333444595337, 0.874666690826416, 0.8683333396911621, 0.874666690826416, 0.8756666779518127, 0.8816666603088379, 0.8733333349227905, 0.8756666779518127, 0.8700000047683716, 0.8806666731834412, 0.8766666650772095]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 6, 0, 2, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [50, 75, 26, 52, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7537142634391785, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.291991693342776, 2.2207830179920127, 2.030140163466726, 1.6141806474498486, 1.3857542831884195, 1.2316476531064018, 0.971898590844494, 0.8971944226171237, 0.8567019024498002, 0.8206811241895106, 0.7981724527848632, 0.7555649076486229, 0.7381946823033579, 0.7149196932533429, 0.7072107496199874, 0.6874369721859201, 0.6763777751507556, 0.6725006339855796, 0.6433192582225535, 0.6242954201308444, 0.606420532028358, 0.595641165629291, 0.5876908015817495, 0.5608173570360853, 0.5544839789366379, 0.5449996642574516, 0.5351139544306996, 0.5237162614644967, 0.5148822258940903, 0.5095526925592595, 0.5005172111449256, 0.4963265311102337, 0.4910982613589675, 0.47941125196598744, 0.4731555775943575, 0.4672284062118767, 0.4624621408482616, 0.4574205399409828, 0.4400753155478617, 0.4354952410101623, 0.4304411378337912, 0.42492891121235005, 0.42293174164311886, 0.4143253969887953, 0.4101145052127299, 0.40344809238401463, 0.3867874684555498, 0.39087262257230976, 0.3802397700545495], "accuracy": [0.11861048638820648, 0.2728833854198456, 0.3945317566394806, 0.4675736427307129, 0.5303130149841309, 0.5925241112709045, 0.651168942451477, 0.6758684515953064, 0.6872276067733765, 0.6911900639533997, 0.6968696117401123, 0.7214370369911194, 0.7173424959182739, 0.7271166443824768, 0.7371549606323242, 0.7486461400985718, 0.7460044622421265, 0.7427024245262146, 0.7572315335273743, 0.7668735980987549, 0.7667415142059326, 0.7753269076347351, 0.7790252566337585, 0.7827235460281372, 0.7903843522071838, 0.7969884872436523, 0.8016114234924316, 0.8039889335632324, 0.8034605979919434, 0.8039889335632324, 0.8119139075279236, 0.8133667707443237, 0.8170651197433472, 0.8140271902084351, 0.8244617581367493, 0.8294808864593506, 0.82683926820755, 0.8284242749214172, 0.8341038227081299, 0.8330471515655518, 0.8370096683502197, 0.8426892161369324, 0.8409721255302429, 0.8461233377456665, 0.8485008478164673, 0.8506141901016235, 0.8552370667457581, 0.8551049828529358, 0.8568220734596252], "val_loss": [1.931164264678955, 1.822638647896903, 1.5015544891357422, 0.9961182049342564, 0.77337532384055, 0.6869454213551113, 0.6704361438751221, 0.6524265323366437, 0.5776452166693551, 0.5616625888007027, 0.5526774610791888, 0.5378619773047311, 0.5228945527757917, 0.5201172147478376, 0.5095027685165405, 0.4905421563557216, 0.4815212999071394, 0.46625239508492605, 0.4559077024459839, 0.44646707602909635, 0.435124363218035, 0.4261644652911595, 0.41631019115448, 0.4081923621041434, 0.4028982434953962, 0.39487453017915997, 0.382521961416517, 0.37882361241749357, 0.37357477630887714, 0.37472301721572876, 0.3736400774547032, 0.36300450563430786, 0.35516174350466045, 0.3496151311056955, 0.3475271037646702, 0.34560770647866385, 0.3384948032242911, 0.33050359998430523, 0.3258468508720398, 0.3244612216949463, 0.32396172625677927, 0.3280427030154637, 0.32510415996823994, 0.3196216140474592, 0.3139794554029192, 0.30802268641335623, 0.3060445785522461, 0.30835100582667757, 0.3077837995120457], "val_accuracy": [0.3356666564941406, 0.43299999833106995, 0.5373333096504211, 0.6543333530426025, 0.6710000038146973, 0.7089999914169312, 0.6953333616256714, 0.7326666712760925, 0.7516666650772095, 0.7443333268165588, 0.7649999856948853, 0.7536666393280029, 0.7630000114440918, 0.7703333497047424, 0.7696666717529297, 0.7799999713897705, 0.7823333144187927, 0.7926666736602783, 0.8053333163261414, 0.8090000152587891, 0.8073333501815796, 0.8136666417121887, 0.8236666917800903, 0.8293333053588867, 0.8289999961853027, 0.8343333601951599, 0.8403333425521851, 0.8353333473205566, 0.8379999995231628, 0.8433333039283752, 0.8423333168029785, 0.8476666808128357, 0.8519999980926514, 0.8556666374206543, 0.8523333072662354, 0.8610000014305115, 0.8619999885559082, 0.8666666746139526, 0.8643333315849304, 0.8659999966621399, 0.8669999837875366, 0.8633333444595337, 0.8676666617393494, 0.8740000128746033, 0.8709999918937683, 0.8693333268165588, 0.8700000047683716, 0.8653333187103271, 0.8696666955947876]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 6, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 26, 52, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7531428337097168, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.291991693342776, 2.2207830044823615, 2.0301397226395594, 1.6141791472487272, 1.3857538778358967, 1.2316816813988913, 0.9719513854361985, 0.8972565246185749, 0.8567200556816662, 0.8211727428744892, 0.7984957896628636, 0.7558328583334667, 0.7386610916639914, 0.7157698761927154, 0.7073771774005172, 0.6872733744254217, 0.6775834223440279, 0.6729685218500155, 0.6443777646465451, 0.6248677241772299, 0.6077276846562961, 0.5961793623092136, 0.5882319146852136, 0.5618496271581729, 0.555469200170555, 0.544733975447243, 0.5350573878750557, 0.523509299793673, 0.5150002324034777, 0.5095608588285954, 0.5007029019444768, 0.4973023851998588, 0.4919959747748777, 0.4796083154632368, 0.4734997330694749, 0.4674862006384195, 0.46365148771031184, 0.4571917248581536, 0.43971644179176395, 0.4348013802581475, 0.4310408611110866, 0.4248736622216695, 0.4240610387661926, 0.4140016388238114, 0.41044220276370796, 0.40366814430080245, 0.38635220899715433, 0.3914848070701415, 0.37978082892917103], "accuracy": [0.11861048638820648, 0.2728833854198456, 0.3945317566394806, 0.4675736427307129, 0.5303130149841309, 0.5925241112709045, 0.651168942451477, 0.6770572066307068, 0.6873596906661987, 0.6914542317390442, 0.696209192276001, 0.7206445932388306, 0.7170783281326294, 0.7289658188819885, 0.7374191284179688, 0.7479857206344604, 0.7446836829185486, 0.741909921169281, 0.7573636174201965, 0.7668735980987549, 0.7680623531341553, 0.7754589915275574, 0.7800818681716919, 0.7823272943496704, 0.7889314293861389, 0.7989697456359863, 0.8020076751708984, 0.8034605979919434, 0.8037247657775879, 0.8038568496704102, 0.8113855719566345, 0.8113855719566345, 0.8166688680648804, 0.8144234418869019, 0.8249900937080383, 0.8294808864593506, 0.8239334225654602, 0.8274996876716614, 0.8335754871368408, 0.834632158279419, 0.837141752243042, 0.8425571322441101, 0.8403117060661316, 0.8459912538528442, 0.8473120927810669, 0.854708731174469, 0.8560295701026917, 0.8549728989601135, 0.856689989566803], "val_loss": [1.931164264678955, 1.8226383754185267, 1.5015525817871094, 0.9961174215589251, 0.7733666726521083, 0.6869628259113857, 0.6704047407422747, 0.6523924725396293, 0.5776358161653791, 0.5618014335632324, 0.5528880187443325, 0.5382840463093349, 0.5236540692193168, 0.5213408981050763, 0.5095491920198713, 0.4912757532937186, 0.4814906290599278, 0.4667916127613613, 0.45632100105285645, 0.4472755023411342, 0.43567281109946115, 0.4272176282746451, 0.4170343705586025, 0.4085369961602347, 0.40282916171210154, 0.3940311585153852, 0.38152354104178293, 0.37823608091899324, 0.3730327572141375, 0.37467507805143085, 0.3742703454835074, 0.36487375838415964, 0.35660873140607563, 0.3507301126207624, 0.34766712359019686, 0.3457449419157846, 0.33823842661721365, 0.32997387647628784, 0.3249123862811497, 0.3240922689437866, 0.3233033503804888, 0.32759107862200054, 0.32539855582373484, 0.3195135678563799, 0.3139324528830392, 0.3080234101840428, 0.30599124091012136, 0.30682545048849924, 0.306473365851811], "val_accuracy": [0.3356666564941406, 0.43299999833106995, 0.5373333096504211, 0.6543333530426025, 0.6710000038146973, 0.7089999914169312, 0.6949999928474426, 0.7333333492279053, 0.7513333559036255, 0.7440000176429749, 0.7646666765213013, 0.753000020980835, 0.7620000243186951, 0.7693333625793457, 0.7699999809265137, 0.7799999713897705, 0.7826666831970215, 0.7929999828338623, 0.8050000071525574, 0.8073333501815796, 0.8076666593551636, 0.8106666803359985, 0.8246666789054871, 0.8289999961853027, 0.8306666612625122, 0.8339999914169312, 0.8396666646003723, 0.8363333344459534, 0.840666651725769, 0.843666672706604, 0.8416666388511658, 0.8473333120346069, 0.8506666421890259, 0.8560000061988831, 0.8550000190734863, 0.859000027179718, 0.8619999885559082, 0.8663333058357239, 0.8643333315849304, 0.8659999966621399, 0.8673333525657654, 0.8633333444595337, 0.8693333268165588, 0.8759999871253967, 0.8733333349227905, 0.8726666569709778, 0.8696666955947876, 0.8686666488647461, 0.8696666955947876]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 3, 9, 3, 2, 6, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 26, 52, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.6574285626411438, "mapping_values": [1, 31, 31, 18, 13, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, alpha), alpha)))))), alpha)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9643639118097336, 1.5550606006864922, 0.9834968747952202, 0.7965405838301531, 0.7276914306934625, 0.6978520558353082, 0.7007044059347561, 0.672900326956438, 0.6710040783995509, 0.7117122217270803, 0.7780883473538137, 0.7768092658525728, 0.815637364300597, 0.8422213241786627], "accuracy": [0.34486857056617737, 0.5124818682670593, 0.6376964449882507, 0.6993792057037354, 0.7293620109558105, 0.7364945411682129, 0.7390040755271912, 0.7473253011703491, 0.7424382567405701, 0.7520803213119507, 0.7239466309547424, 0.7144366502761841, 0.7156254053115845, 0.7018887996673584], "val_loss": [1.5117931365966797, 0.77306067943573, 0.5856951645442418, 0.5075522661209106, 0.4857292175292969, 0.5418464456285749, 0.4988105126789638, 0.4616039821079799, 0.43735393456050325, 0.4752335718699864, 0.5226116180419922, 0.5201934065137591, 0.5567900964191982, 0.5912549495697021], "val_accuracy": [0.5600000023841858, 0.6463333368301392, 0.7580000162124634, 0.781333327293396, 0.7853333353996277, 0.7546666860580444, 0.7833333611488342, 0.7940000295639038, 0.8003333210945129, 0.7916666865348816, 0.7923333048820496, 0.7886666655540466, 0.7590000033378601, 0.7413333058357239]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 6, 0, 2, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [77, 7, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [8, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.34857141971588135, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303119549961012, 2.3029099386507697, 2.3011050569445874, 2.3007623859290134, 2.301222362727411, 2.2997627602812636, 2.2998129208609726, 2.2994916535733854, 2.298324227317323, 2.2982166517270537, 2.2969700151100105, 2.2962670049741676, 2.2947503815332126, 2.2976029011488683, 2.295826317092226, 2.2946716839721444, 2.296237171066278, 2.2935364327300354, 2.295925750015686, 2.2947890057839015, 2.2937610003580082, 2.291346625723717, 2.291036789711078, 2.2914268361453005, 2.290000470874017, 2.2897582669472887, 2.2906220334947007, 2.2887693775989724, 2.2907217890437503, 2.288287487516251, 2.288383604497359, 2.2870719648229447, 2.286682990721235, 2.286330993889408, 2.2858117089972536, 2.285545919801518, 2.2852125162178294, 2.283452524973212, 2.285022114529633, 2.28263019110942, 2.2827002812905666, 2.283759530288763, 2.2838787441445128, 2.283539175152731, 2.2809661270494805, 2.282031019114075, 2.2801141067502866, 2.2807769109040454, 2.2805633665532516, 2.278066539178671, 2.2789843810185655, 2.2780526335591165, 2.2776671036942098, 2.277003046512415, 2.2775689453071593, 2.2757559259412408, 2.276970187418843, 2.276031010690351, 2.274979215713146, 2.2746626824089375, 2.274219310609593, 2.272634092968815, 2.2730573409930384, 2.2736600798197615, 2.2734550400306803, 2.270547593731087, 2.272102515459092, 2.2714500002747027, 2.2699911315065444, 2.2707664993350627, 2.268812912550616, 2.2681208423037083, 2.270147821733492, 2.268272992752452, 2.2669447361123938, 2.266875526451904, 2.266938467256271, 2.265101471345312, 2.2645568086518084, 2.2630816730037737, 2.2633931399367944, 2.262746922832202, 2.2629797406058665, 2.2630165277644076, 2.261593586134794, 2.2619157140092168, 2.260070617314516, 2.2606233284851625, 2.260969494753006, 2.2595010001220723, 2.2608206325659994, 2.2583523302691693, 2.258709762106167, 2.257031942449934, 2.25766948774396, 2.253652126246503, 2.256938567424195, 2.25544918101493, 2.2527044360443367, 2.2546418441237868], "accuracy": [0.08981640636920929, 0.08902391046285629, 0.09153348207473755, 0.09417514503002167, 0.09377889335155487, 0.09536388516426086, 0.09179764986038208, 0.09800554811954498, 0.09879804402589798, 0.09972262382507324, 0.09879804402589798, 0.1088363528251648, 0.10513802617788315, 0.10276053100824356, 0.1072513535618782, 0.10685510188341141, 0.10910051316022873, 0.11610091477632523, 0.11240258812904358, 0.10949676483869553, 0.11266675591468811, 0.11359133571386337, 0.12389380484819412, 0.12072381377220154, 0.12389380484819412, 0.11979923397302628, 0.12098798155784607, 0.12178047746419907, 0.1224408894777298, 0.12455421686172485, 0.12600713968276978, 0.13168670237064362, 0.12402588874101639, 0.13459251821041107, 0.13591335713863373, 0.13538502156734467, 0.1364416927099228, 0.13961167633533478, 0.1306300312280655, 0.14040417969226837, 0.1434420794248581, 0.13274335861206055, 0.1418570876121521, 0.14093250036239624, 0.14568749070167542, 0.14198917150497437, 0.15110288560390472, 0.14568749070167542, 0.14819706976413727, 0.14832915365695953, 0.15361246466636658, 0.14859332144260406, 0.15295206010341644, 0.15955619513988495, 0.1538766324520111, 0.1636507660150528, 0.15572579205036163, 0.16140536963939667, 0.1640470176935196, 0.16431118547916412, 0.16761326789855957, 0.16880200803279877, 0.16351869702339172, 0.16774533689022064, 0.16523577272891998, 0.1760665625333786, 0.17197199165821075, 0.17236824333667755, 0.17553824186325073, 0.177255317568779, 0.17936864495277405, 0.18531237542629242, 0.17619864642620087, 0.17593449354171753, 0.18518029153347015, 0.18451987206935883, 0.1884823739528656, 0.1842557191848755, 0.19482234120368958, 0.19099193811416626, 0.19957733154296875, 0.19535067677497864, 0.19693566858768463, 0.1935015171766281, 0.19204860925674438, 0.19574692845344543, 0.20103025436401367, 0.19799233973026276, 0.20221899449825287, 0.20499274134635925, 0.19838859140872955, 0.20261524617671967, 0.201294407248497, 0.21212521195411682, 0.21199312806129456, 0.2141064554452896, 0.20776647329330444, 0.21542729437351227, 0.2176727056503296, 0.22005018591880798], "val_loss": [1.9699373245239258, 1.9694867134094238, 1.96904114314488, 1.968592643737793, 1.968141964503697, 1.9676948956080846, 1.9672459874834334, 1.966799259185791, 1.9663468088422502, 1.9658993993486678, 1.9654583249773299, 1.9650109154837472, 1.964566707611084, 1.9641238621303014, 1.963686466217041, 1.9632460730416434, 1.9628070422581263, 1.9623638561793737, 1.9619276864188058, 1.9614866120474679, 1.9610506466456823, 1.960613455091204, 1.9601715632847376, 1.9597340992518835, 1.9592952047075545, 1.9588525635855538, 1.9584108761378698, 1.9579742295401437, 1.9575339726039342, 1.957089900970459, 1.956645897456578, 1.9562063217163086, 1.9557671546936035, 1.9553273064749581, 1.9548838479178292, 1.9544405937194824, 1.954002789088658, 1.9535668236868722, 1.9531239782060896, 1.9526772499084473, 1.9522390365600586, 1.9517982346670968, 1.9513591357639857, 1.950920513698033, 1.9504734448024206, 1.9500336647033691, 1.9495886393955775, 1.9491455214364188, 1.9487034252711706, 1.9482623508998327, 1.9478167806352888, 1.9473690305437361, 1.946922847202846, 1.9464758464268275, 1.9460265977042062, 1.9455742835998535, 1.9451251029968262, 1.9446745600019182, 1.9442221096583776, 1.9437707492283411, 1.9433208193097795, 1.9428623063223702, 1.9424080848693848, 1.9419561794825964, 1.9415030479431152, 1.9410462379455566, 1.9405937876020158, 1.9401360239301408, 1.9396790095738001, 1.939220564705985, 1.9387565340314592, 1.938295636858259, 1.9378362383161272, 1.9373715264456612, 1.9369029998779297, 1.9364354269845145, 1.9359679222106934, 1.9355075699942452, 1.9350342750549316, 1.9345592771257674, 1.9340878895350866, 1.9336119379316057, 1.933136054447719, 1.9326612608773368, 1.9321819032941545, 1.9317050661359514, 1.9312235968453544, 1.9307422637939453, 1.930260453905378, 1.929774284362793, 1.9292892728533064, 1.9287993567330497, 1.9283074651445662, 1.9278182983398438, 1.9273254530770438, 1.9268172127859933, 1.9263219833374023, 1.9258217130388533, 1.925319058554513, 1.9248153141566686], "val_accuracy": [0.038333334028720856, 0.04266666620969772, 0.04533333331346512, 0.04833333194255829, 0.052666667848825455, 0.05666666850447655, 0.06066666543483734, 0.06400000303983688, 0.06733333319425583, 0.06866666674613953, 0.07266666740179062, 0.07766667008399963, 0.08233333379030228, 0.0846666693687439, 0.08799999952316284, 0.09200000017881393, 0.09466666728258133, 0.0963333323597908, 0.10100000351667404, 0.10433333367109299, 0.10833333432674408, 0.11133333295583725, 0.11599999666213989, 0.12133333086967468, 0.12666666507720947, 0.12933333218097687, 0.13333334028720856, 0.1366666704416275, 0.1420000046491623, 0.1483333259820938, 0.15399999916553497, 0.1599999964237213, 0.16466666758060455, 0.17000000178813934, 0.17366667091846466, 0.179666668176651, 0.18333333730697632, 0.18733333051204681, 0.1899999976158142, 0.195333331823349, 0.19766665995121002, 0.20133332908153534, 0.2056666612625122, 0.21066667139530182, 0.21533332765102386, 0.2173333317041397, 0.21933333575725555, 0.2253333330154419, 0.23000000417232513, 0.23333333432674408, 0.2383333295583725, 0.24266666173934937, 0.24400000274181366, 0.2486666738986969, 0.2523333430290222, 0.2553333342075348, 0.2613333463668823, 0.2630000114440918, 0.265666663646698, 0.2680000066757202, 0.27166667580604553, 0.2786666750907898, 0.28166666626930237, 0.2849999964237213, 0.28733333945274353, 0.28833332657814026, 0.2903333306312561, 0.29366666078567505, 0.29733332991600037, 0.2996666729450226, 0.30266666412353516, 0.30566665530204773, 0.3083333373069763, 0.3096666634082794, 0.31166666746139526, 0.3140000104904175, 0.3163333237171173, 0.3176666796207428, 0.32100000977516174, 0.32366666197776794, 0.3269999921321869, 0.32766667008399963, 0.33000001311302185, 0.33266666531562805, 0.33500000834465027, 0.3383333384990692, 0.34033334255218506, 0.34333333373069763, 0.34566667675971985, 0.3453333377838135, 0.3479999899864197, 0.34833332896232605, 0.34966665506362915, 0.35199999809265137, 0.3543333411216736, 0.3569999933242798, 0.3583333194255829, 0.36000001430511475, 0.3616666793823242, 0.3630000054836273]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 4, 5, 0, 4, 5, 2, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [4, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [15.715370821017537, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22572976350784302, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [142.559326171875, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 4, 4, 5, 9, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 9, 7, 6, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [15.78629673212243, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.22612600028514862, 0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [160.99108014787947, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 4, 4, 5, 9, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 2, 2], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 36, 36, 21, 15, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, grad)))))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [3, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [54, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [2.302581921827996, 2.302585219537042, 2.302584944872289, 2.302585668882532, 2.3025850211750516, 2.3025847307018017], "accuracy": [0.09747721254825592, 0.09866596013307571, 0.09998679161071777, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.9736438478742326, 1.9736434391566686, 1.9736433029174805, 1.9736428941999162, 1.973642213003976], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 6, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [0, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1211959787.0535676, 23704454654.309338, 110090983395.59688, 304757996966.39496, 652581844432.3234, 1214326311209.827], "accuracy": [0.10645885765552521, 0.09774138033390045, 0.09800554811954498, 0.10527011007070541, 0.09853387624025345, 0.09774138033390045], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 8, 6, 5, 4, 4, 5, 9, 1, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [6, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 9, 7, 6, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 3, 4, 8, 0, 8, 6, 5, 5, 0, 5, 2, 1, 5, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 6, 8, 0, 6, 2, 9, 7, 8, 1, 8, 7, 6, 1, 0], [0, 0, 2, 1, 0, 2, 0, 0, 1, 1, 0, 1, 1, 0, 2, 1, 0, 0, 2, 2, 1, 0, 2, 0, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 61, 26, 52, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 18, 11, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))))), tf.math.divide_no_nan(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.pow(alpha, alpha), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 4, 0, 2, 3, 2, 5, 6, 0, 2, 9, 1, 8, 6, 6, 4, 4, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 8, 8, 7, 6, 2, 4, 9, 8, 1, 8, 7, 6, 1, 0], [0, 0, 1, 1, 0, 2, 0, 0, 1, 1, 0, 1, 1, 3, 1, 1, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 6, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1211959787.0535676, 23704454654.309338, 110090983395.59688, 304757996966.39496, 652581844432.3234, 1214326311209.827], "accuracy": [0.10645885765552521, 0.09774138033390045, 0.09800554811954498, 0.10527011007070541, 0.09853387624025345, 0.09774138033390045], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 6, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [0, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 5, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025818993748928, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 5, 4, 0, 2, 8, 6, 5, 6, 0, 2, 2, 3, 8, 6, 2, 4, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 1, 6, 8, 8, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 0, 1, 1, 0, 2, 0, 2, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 25, 53, 26, 73, 62, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.0714285746216774, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031167904966305, 2.302459054509048, 2.300390022652197, 2.299985317238538, 2.3005131251461486, 2.299487769280946, 2.2996471872923, 2.2999640547163245, 2.2993735680411977, 2.299428756258129, 2.2987409303405926, 2.2991699187070025, 2.2982643860489573, 2.3006397427002265, 2.299456700609817], "accuracy": [0.08994849026203156, 0.08902391046285629, 0.09377889335155487, 0.09721305221319199, 0.09549596905708313, 0.09879804402589798, 0.09668471664190292, 0.09430722147226334, 0.09826971590518951, 0.09985470771789551, 0.10302469879388809, 0.10936468094587326, 0.10276053100824356, 0.1002509593963623, 0.10011887550354004], "val_loss": [1.969918932233538, 1.9692419597080775, 1.9688373974391393, 1.9686102185930525, 1.9685500008719308, 1.9685876028878349, 1.9687017032078333, 1.968736171722412, 1.9687763622828893, 1.9688010215759277, 1.9689457757132394, 1.9691313334873743, 1.9693970680236816, 1.9696540151323592, 1.9699136189052038], "val_accuracy": [0.0430000014603138, 0.049666665494441986, 0.058666665107011795, 0.0663333311676979, 0.07566666603088379, 0.07766667008399963, 0.08100000023841858, 0.08733333647251129, 0.08666666597127914, 0.09033333510160446, 0.08799999952316284, 0.08699999749660492, 0.08433333039283752, 0.08166666328907013, 0.0820000022649765]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 6, 9, 3, 2, 8, 2, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 1, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [0, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.041999999433755875, "mapping_values": [1, 14, 14, 9, 5, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.square(alpha))))), alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.3033047143132253, 2.3035424411603884, 2.302188093037795, 2.302305784144847, 2.3032251796576295, 2.302214926858352, 2.3027301485260416, 2.3028642933492445, 2.302201986407339, 2.302533828445382, 2.3017015692391305, 2.30150739391797, 2.300417498921233, 2.3037076454908307, 2.3022825729577705, 2.301654317076369, 2.303613551650868, 2.3014262699416412, 2.3041462375503317, 2.3035170977787334, 2.302874854432593, 2.300969795827396, 2.3011488036204955, 2.3019378947984936, 2.3010230592811554, 2.30125766281659, 2.3025311825061596, 2.3011100387623626, 2.303388284512672, 2.301665510625541, 2.3022317520111875, 2.3012101449010363, 2.301296012087615, 2.301308040715889, 2.301383657604082, 2.301469051291552, 2.3015493450698883, 2.300202465076268, 2.302444719887208, 2.3006004561932016], "accuracy": [0.08942015469074249, 0.08717474341392517, 0.08915598690509796, 0.09113723784685135, 0.09060890227556229, 0.09113723784685135, 0.08730682730674744, 0.08968432247638702, 0.08968432247638702, 0.09074098616838455, 0.08928807079792023, 0.09655263274908066, 0.09536388516426086, 0.08889182657003403, 0.09021265059709549, 0.08809932321310043, 0.08968432247638702, 0.09430722147226334, 0.09272222965955734, 0.0886276587843895, 0.08968432247638702, 0.09219389408826828, 0.09285431355237961, 0.09391097724437714, 0.09192973375320435, 0.09576013684272766, 0.09549596905708313, 0.09060890227556229, 0.09166556596755981, 0.0940430611371994, 0.09166556596755981, 0.09496764093637466, 0.08757099509239197, 0.0956280529499054, 0.09087307006120682, 0.09813763201236725, 0.0952318087220192, 0.09576013684272766, 0.08677849918603897, 0.09338264167308807], "val_loss": [1.9703657967703683, 1.9703427723475866, 1.9703245844159807, 1.970303739820208, 1.9702825546264648, 1.970266274043492, 1.9702455656869071, 1.9702282633100237, 1.9702117783682687, 1.9701965876988001, 1.970179830278669, 1.9701659338814872, 1.9701494489397322, 1.9701318740844727, 1.9701114382062639, 1.970095430101667, 1.970076629093715, 1.9700576237269811, 1.9700356892177038, 1.970015321459089, 1.9699952261788505, 1.969980307987758, 1.969966275351388, 1.9699512890407018, 1.969937528882708, 1.9699215207781111, 1.9699029241289412, 1.969890526362828, 1.9698713166373116, 1.9698587145124162, 1.969843796321324, 1.969832284109933, 1.96981566292899, 1.9697997910635812, 1.9697858265468053, 1.969771248953683, 1.9697608266557967, 1.9697505405970983, 1.9697412763323103, 1.9697325570242745], "val_accuracy": [0.03633333370089531, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.03933333232998848, 0.03933333232998848, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.04100000113248825, 0.04100000113248825, 0.041333332657814026, 0.0416666679084301, 0.0416666679084301, 0.04233333468437195, 0.04233333468437195, 0.04233333468437195, 0.0430000014603138, 0.04333333298563957, 0.04333333298563957, 0.043666668236255646, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04533333331346512, 0.04533333331346512, 0.04633333161473274, 0.046666666865348816, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 4, 0, 9, 1, 2, 8, 2, 1, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 1, 1, 2, 2, 2, 0, 0, 1, 0, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [99, 75, 82, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [23, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 33, 33, 21, 12, 5, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.pow(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(alpha))))), tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.303317646765517, 2.303591307836706, 2.3022623164794545, 2.302420466063659, 2.303392809836494, 2.302430183061472], "accuracy": [0.08942015469074249, 0.08717474341392517, 0.08902391046285629, 0.09047681838274002, 0.09047681838274002, 0.09021265059709549], "val_loss": [1.9703856876918249, 1.970388753073556, 1.9703963143484933, 1.9704089164733887, 1.970428807394845, 1.970459052494594], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.035999998450279236]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 4, 4, 9, 9, 0, 3, 2, 5, 2, 3, 5, 0, 4, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [71, 7, 25, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.303317466857269, 2.30358913961639, 2.302254583951804, 2.3023998681596085, 2.303352163357899, 2.302361523360309], "accuracy": [0.08942015469074249, 0.08717474341392517, 0.08889182657003403, 0.09047681838274002, 0.09047681838274002, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]