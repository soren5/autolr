[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7977142930030823, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.273210848453196, 2.177527458471566, 1.973969255204151, 1.6510904312070807, 1.3693155776775745, 1.2020647602153098, 1.0899194915611763, 1.016446671261055, 0.9646191699173252, 0.9176852719706, 0.8883216692204363, 0.8645786767654006, 0.83239351334022, 0.8200453401572354, 0.7952362977675852, 0.7868228815077728, 0.7661097046327849, 0.7623510869848982, 0.748505150794731, 0.7367873947775643, 0.7277629769410534, 0.7199048965740292, 0.7056804974522211, 0.7030629909915569, 0.7088670074160325, 0.7002507316721366, 0.6924852405273368, 0.6860519411651733, 0.6781506082086106, 0.6668740362617807, 0.6768072485813549, 0.6649507643004702, 0.6541076452583133, 0.6529420293900063, 0.6407018663971069, 0.6467657967990558, 0.6489389030578476, 0.6329941683441593, 0.6317971852618973, 0.6325476473317154, 0.6198683953193893, 0.6277218189977651, 0.6140904685273508, 0.6166195762927396, 0.6184675885056146, 0.6058157926789207, 0.6020739662837769, 0.6007036128379193, 0.60162914544836, 0.5945179562101968, 0.5973683063380234, 0.5905517622180949, 0.587526077859516, 0.587509295172333, 0.583499895693399, 0.5845544297445436, 0.5776302513586863, 0.5704500463188065, 0.572463283087237, 0.5727410310090352], "accuracy": [0.17210407555103302, 0.3287544548511505, 0.42068418860435486, 0.4917448163032532, 0.535860538482666, 0.5803724527359009, 0.6211860775947571, 0.6435081362724304, 0.6586976647377014, 0.6750759482383728, 0.6799629926681519, 0.6890767216682434, 0.7013604640960693, 0.7083608508110046, 0.7124554514884949, 0.7098137736320496, 0.7218332886695862, 0.7166820764541626, 0.7309470176696777, 0.7289658188819885, 0.7372870445251465, 0.7412495017051697, 0.7430986762046814, 0.7423061728477478, 0.7428345084190369, 0.7415136694908142, 0.7477215528488159, 0.7436270117759705, 0.7511557340621948, 0.7556465268135071, 0.7514199018478394, 0.7617223858833313, 0.7622507214546204, 0.7625148296356201, 0.7640998363494873, 0.7625148296356201, 0.7586844563484192, 0.7668735980987549, 0.7691190242767334, 0.7681944370269775, 0.7711002230644226, 0.7692511081695557, 0.7729493975639343, 0.7769119143486023, 0.7684586048126221, 0.7771760821342468, 0.7790252566337585, 0.7754589915275574, 0.7866860628128052, 0.7833839654922485, 0.7796856164932251, 0.7841764688491821, 0.7825914621353149, 0.785101056098938, 0.7849689722061157, 0.7845727205276489, 0.7898560166358948, 0.7893276810646057, 0.7872143983840942, 0.7913089394569397], "val_loss": [1.8994678088596888, 1.7629551206316267, 1.4816059725625175, 1.144648858479091, 0.9232382093157087, 0.8034015212740216, 0.7336756161281041, 0.68455023424966, 0.6500746522630964, 0.6248826810291835, 0.6090880972998483, 0.5866724082401821, 0.5883251088006156, 0.5605392796652657, 0.5661235707146781, 0.5401658841541835, 0.5425564731870379, 0.5280000141688755, 0.5169865574155535, 0.510837163243975, 0.5057893821171352, 0.49570110866001676, 0.4960226161139352, 0.49097968850817, 0.4840456928525652, 0.47893532684871126, 0.4761929512023926, 0.4752007893153599, 0.47112739086151123, 0.46624209199632916, 0.46502314295087543, 0.4639228752681187, 0.4545366253171648, 0.4547527517591204, 0.44966128894260954, 0.4443054028919765, 0.44916628088269916, 0.44541903904506136, 0.44501391478947233, 0.44512721470424105, 0.4483989817755563, 0.4414426939828055, 0.43335624252046856, 0.4375237396785191, 0.43745854922703337, 0.4270221165248326, 0.42553001642227173, 0.42132818698883057, 0.4254502143178667, 0.42745605536869596, 0.4280646102769034, 0.4172129971640451, 0.42080046449388775, 0.4192711796079363, 0.4077990395682199, 0.4132158415658133, 0.409342280455998, 0.41093909740448, 0.4111948864800589, 0.409627948488508], "val_accuracy": [0.3973333239555359, 0.4973333477973938, 0.5666666626930237, 0.6420000195503235, 0.6759999990463257, 0.6959999799728394, 0.7076666951179504, 0.7253333330154419, 0.734000027179718, 0.7463333606719971, 0.7353333234786987, 0.7556666731834412, 0.7353333234786987, 0.7649999856948853, 0.7450000047683716, 0.7733333110809326, 0.7506666779518127, 0.7799999713897705, 0.7733333110809326, 0.7773333191871643, 0.7833333611488342, 0.7883333563804626, 0.7736666798591614, 0.7886666655540466, 0.7913333177566528, 0.7933333516120911, 0.7940000295639038, 0.7940000295639038, 0.7913333177566528, 0.7913333177566528, 0.8063333630561829, 0.7900000214576721, 0.809333324432373, 0.8080000281333923, 0.8133333325386047, 0.8146666884422302, 0.8119999766349792, 0.809333324432373, 0.8159999847412109, 0.8130000233650208, 0.7953333258628845, 0.8026666641235352, 0.824999988079071, 0.8003333210945129, 0.8209999799728394, 0.8223333358764648, 0.8209999799728394, 0.8256666660308838, 0.8230000138282776, 0.8203333616256714, 0.8063333630561829, 0.8263333439826965, 0.8140000104904175, 0.82833331823349, 0.8339999914169312, 0.8309999704360962, 0.8306666612625122, 0.8263333439826965, 0.8320000171661377, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7822856903076172, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2732110283614433, 2.1775248541319927, 1.973945670832638, 1.6510108436150652, 1.3692325685695335, 1.2019257060824258, 1.0898027314391543, 1.016435708037268, 0.9646347594802815, 0.9178068636588259, 0.8881460390369953, 0.8644398345592677, 0.8322916101659876, 0.8200741164940317, 0.7953102352549576, 0.7868899878824486, 0.7661147484642686, 0.7624119590727283, 0.7486164557258325, 0.7368553631325534, 0.7277203883319845, 0.7200126300209533, 0.7055577885016568, 0.702958095382312, 0.7090189893798995, 0.7005634899184121, 0.6927646173226001, 0.6861103960173777, 0.677694952609186, 0.6671880210127734, 0.6764156560006002, 0.665130578626054, 0.6546704533739082, 0.6534024259008357, 0.6410383652655078, 0.6467408573843185, 0.6493512028558868, 0.6332897654755587, 0.6318839908968802, 0.6320923844726567, 0.6194477869204369], "accuracy": [0.17210407555103302, 0.3287544548511505, 0.42108044028282166, 0.4916127324104309, 0.5354642868041992, 0.5802403688430786, 0.6210539937019348, 0.6444327235221863, 0.6585655808448792, 0.6744155287742615, 0.6793025732040405, 0.6890767216682434, 0.7013604640960693, 0.7091533541679382, 0.7131158113479614, 0.7096816897392273, 0.7214370369911194, 0.7176066637039185, 0.7300224304199219, 0.7284374833106995, 0.7371549606323242, 0.7415136694908142, 0.7432307600975037, 0.7412495017051697, 0.7428345084190369, 0.7407211661338806, 0.7475894689559937, 0.7445515990257263, 0.7519482374191284, 0.7560427784919739, 0.7515519857406616, 0.7605336308479309, 0.7631752490997314, 0.7638356685638428, 0.7640998363494873, 0.7621186375617981, 0.7602694630622864, 0.7692511081695557, 0.7691190242767334, 0.7688548564910889, 0.7705719470977783], "val_loss": [1.8994674001421248, 1.7629430634634835, 1.4815689495631628, 1.1445206233433314, 0.9230840887342181, 0.8032410826001849, 0.733505402292524, 0.6844920771462577, 0.6499489886420113, 0.6247723613466535, 0.6092186995915004, 0.5865692922047206, 0.5889208487101963, 0.560424940926688, 0.5656805038452148, 0.5399870021002633, 0.5420867545264108, 0.5280559744153704, 0.5172279221670968, 0.5108725343431745, 0.5064270155770438, 0.49549869128635954, 0.4953822749001639, 0.49081618445260183, 0.48412907123565674, 0.47884658404759, 0.4764385393687657, 0.47427126339503695, 0.47174625737326487, 0.46586874553135466, 0.4650846890040806, 0.4634666953768049, 0.45446607044764925, 0.45467986379350933, 0.4496587003980364, 0.4444187709263393, 0.4496955871582031, 0.4463369505746024, 0.4451855591365269, 0.4447808265686035, 0.4479668310710362], "val_accuracy": [0.3973333239555359, 0.4976666569709778, 0.5663333535194397, 0.640666663646698, 0.6759999990463257, 0.6959999799728394, 0.7093333601951599, 0.7256666421890259, 0.734000027179718, 0.7473333477973938, 0.7353333234786987, 0.7563333511352539, 0.7356666922569275, 0.7663333415985107, 0.7459999918937683, 0.7726666927337646, 0.7509999871253967, 0.7793333530426025, 0.7713333368301392, 0.7773333191871643, 0.7826666831970215, 0.7876666784286499, 0.7753333449363708, 0.7883333563804626, 0.7919999957084656, 0.7929999828338623, 0.7933333516120911, 0.7950000166893005, 0.7903333306312561, 0.7933333516120911, 0.8056666851043701, 0.7906666398048401, 0.8100000023841858, 0.809333324432373, 0.8136666417121887, 0.8163333535194397, 0.809333324432373, 0.8083333373069763, 0.8149999976158142, 0.8133333325386047, 0.7960000038146973]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7817142605781555, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2732108800386976, 2.177522226772477, 1.9739655602830135, 1.6511083138916456, 1.3693631880507886, 1.202046451110724, 1.0898867405920516, 1.0164534254018043, 0.964703315788524, 0.9177234233834913, 0.8883133663981267, 0.8645330457056928, 0.8324216583133799, 0.8200022829065485, 0.795333207527471, 0.7867310967711157, 0.7658878370456219, 0.7623168714152603, 0.7484715666832028, 0.7366598306110334, 0.7277215636007979, 0.7198023996600669, 0.7053998345475958, 0.7029777193239509, 0.7086730790790109, 0.7005644283510706, 0.6930480175612861, 0.6861877490532255, 0.6780544043280083, 0.6665012869758061, 0.6758401891369908, 0.6652458666212067, 0.6545441096815624, 0.6530682132417626, 0.6407717224896907, 0.6466739295086668, 0.6491296046193659, 0.6330329120481932, 0.6317183738922509, 0.6326475282780419, 0.6194985248015589], "accuracy": [0.17210407555103302, 0.32862237095832825, 0.4204200208187103, 0.4920089840888977, 0.5359926223754883, 0.5802403688430786, 0.6211860775947571, 0.6444327235221863, 0.6577730774879456, 0.6752080321311951, 0.6794346570968628, 0.6889446377754211, 0.7020208835601807, 0.7082287669181824, 0.7136441469192505, 0.7092854380607605, 0.7218332886695862, 0.7169462442398071, 0.7302865982055664, 0.7289658188819885, 0.7367587089538574, 0.7409853339195251, 0.7441553473472595, 0.7409853339195251, 0.7428345084190369, 0.739928662776947, 0.7478536367416382, 0.7442874312400818, 0.7524765729904175, 0.7568352818489075, 0.7524765729904175, 0.7622507214546204, 0.7611940503120422, 0.7626469135284424, 0.7637035846710205, 0.7630431652069092, 0.7588165402412415, 0.7672698497772217, 0.7691190242767334, 0.7684586048126221, 0.7714964747428894], "val_loss": [1.8994646072387695, 1.7629404749189104, 1.4816255569458008, 1.1447231428963798, 0.9231994152069092, 0.803325721195766, 0.7334982667650495, 0.6847386530467442, 0.6501305784497943, 0.6250012602124896, 0.6091506992067609, 0.5865229879106794, 0.5884445565087455, 0.5603677374976022, 0.5660986389432635, 0.5402881417955671, 0.5420269284929548, 0.5279231752668109, 0.5172490903309414, 0.5108101538249424, 0.5059546232223511, 0.49560127939496723, 0.49615977491651264, 0.4909928696496146, 0.48439582756587435, 0.47873263699667795, 0.4766474962234497, 0.47472316878182547, 0.4718993902206421, 0.46509790420532227, 0.4648876360484532, 0.46393866198403494, 0.454803466796875, 0.4551846299852644, 0.44937755380358013, 0.4446524041039603, 0.4492206403187343, 0.4454378741128104, 0.44508477619716097, 0.4447608504976545, 0.4473899262292044], "val_accuracy": [0.3973333239555359, 0.4970000088214874, 0.5666666626930237, 0.640999972820282, 0.6763333082199097, 0.6963333487510681, 0.7080000042915344, 0.7253333330154419, 0.734000027179718, 0.746999979019165, 0.734333336353302, 0.7559999823570251, 0.7360000014305115, 0.7680000066757202, 0.7450000047683716, 0.7730000019073486, 0.7506666779518127, 0.7799999713897705, 0.7726666927337646, 0.7786666750907898, 0.7833333611488342, 0.7879999876022339, 0.7749999761581421, 0.7870000004768372, 0.7910000085830688, 0.7933333516120911, 0.7916666865348816, 0.7933333516120911, 0.7903333306312561, 0.7943333387374878, 0.8063333630561829, 0.7903333306312561, 0.8096666932106018, 0.8090000152587891, 0.8140000104904175, 0.8153333067893982, 0.8109999895095825, 0.8096666932106018, 0.8149999976158142, 0.8140000104904175, 0.7960000038146973]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.5191428661346436, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2692668623125014, 2.1706975722246797, 2.035506425705631, 2.145200955507195, 2.2257165995728716, 2.276992554520383, 2.288055887941545], "accuracy": [0.18002906441688538, 0.3249240517616272, 0.33126401901245117, 0.21503104269504547, 0.18280279636383057, 0.16814158856868744, 0.1686699241399765], "val_loss": [1.8987701279776437, 1.7625539643423898, 1.7235413960048132, 1.8180798121861048, 1.8482379913330078, 1.868227209363665, 1.8849662372044154], "val_accuracy": [0.445333331823349, 0.5260000228881836, 0.3083333373069763, 0.19633333384990692, 0.19766665995121002, 0.2029999941587448, 0.2056666612625122]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19249950897.63618, 3.535187475899395e+30, 1450038820.4229295, 94934411739858.8, NaN, NaN, NaN], "accuracy": [0.051908597350120544, 0.10315678268671036, 0.10011887550354004, 0.10011887550354004, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.332412361261191e+31, 638072.0, 41816686592.0, 2740498372493312.0, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 3, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [3, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022808766305216, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 7, 0, 6, 4, 0, 2, 4], [4, 4, 0], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [92, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022808766305216, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0, 1], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 8, 6, 5, 8, 0, 0, 4, 0, 8], [2, 1, 1, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(alpha)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [3, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 7, 6, 2, 4, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [1, 7, 8, 0, 6, 4, 0, 2, 4], [1, 4, 0, 1], [25, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 2, 8, 6, 5, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 1, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.4129061341805307, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [121653.16071428571, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [66, 45, 10], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 5, 5, 2, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 9, 0, 9], [2, 1, 1, 0, 0, 0], [96, 12, 93, 28, 16, 37], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [13, 48, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 17, 6, 6, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 2, 8, 2, 5, 5, 4, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 16, 10, 6, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.math.add(tf.math.square(tf.math.square(tf.math.pow(alpha, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30244792535903, 2.303236299643758, 2.3003858428794346, 2.3037405407046125, 2.3029237709907004, 2.3038792847295904], "accuracy": [0.09391097724437714, 0.08902391046285629, 0.09945846349000931, 0.08255184441804886, 0.09259014576673508, 0.0866464152932167], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [1, 7, 5, 0, 6, 4, 0, 2, 4], [1, 4, 0, 1, 4], [25, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 5, 9, 6, 5, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 1, 0, 2], [2, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.302471135695849, 2.3033282850018866, 2.3005924607784425, 2.3041254568093676, 2.3034853064199843, 2.3047179877561206], "accuracy": [0.09391097724437714, 0.08849557489156723, 0.09879804402589798, 0.08189142495393753, 0.09074098616838455, 0.08440100401639938], "val_loss": [1.9704363005501884, 1.9705181803022112, 1.970639910016741, 1.9708123888288225, 1.971019676753453, 1.9712939262390137], "val_accuracy": [0.03633333370089531, 0.03566666692495346, 0.03400000184774399, 0.03333333507180214, 0.032999999821186066, 0.03233333304524422]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.30244792535903, 2.303236299643758, 2.3003858428794346, 2.3037405407046125, 2.3029237709907004, 2.3038792847295904], "accuracy": [0.09391097724437714, 0.08902391046285629, 0.09945846349000931, 0.08255184441804886, 0.09259014576673508, 0.0866464152932167], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [3, 2, 0, 4], [59, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.30244792535903, 2.303236299643758, 2.3003858428794346, 2.3037405407046125, 2.3029237709907004, 2.3038792847295904], "accuracy": [0.09391097724437714, 0.08902391046285629, 0.09945846349000931, 0.08255184441804886, 0.09259014576673508, 0.0866464152932167], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 7, 8, 0, 6, 4, 0, 2, 4], [0, 2, 0, 1], [25, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 2, 8, 6, 1, 5, 0, 0, 4, 0, 8], [1, 0, 1, 0, 1, 0, 2], [33, 16, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30244792535903, 2.303236299643758, 2.3003858428794346, 2.3037405407046125, 2.3029237709907004, 2.3038792847295904], "accuracy": [0.09391097724437714, 0.08902391046285629, 0.09945846349000931, 0.08255184441804886, 0.09259014576673508, 0.0866464152932167], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]