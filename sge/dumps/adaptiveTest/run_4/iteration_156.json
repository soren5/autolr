[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [79, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.273193412878258, 2.1781096079283073, 1.9770340979957404, 1.6585030995497314, 1.3771155149299612, 1.1949092688388545, 1.0916187179055528, 1.014852001753308, 0.9625540737147816, 0.9199145915186747, 0.8900408796457299, 0.8502645984286126, 0.8379082918607988, 0.8188346544702086, 0.8028674589298058, 0.7905528922012344, 0.7703441223841868, 0.7590227143371803, 0.7600805733371105, 0.7385425931505791, 0.72989686110772, 0.7243644043580809, 0.7026582696119461, 0.7067320223938536, 0.7058506834429835, 0.6995691631007519, 0.6885079639525761, 0.6722352144945221, 0.6706202607412443, 0.6710167342503908, 0.6654680118175341, 0.6639766768693703, 0.6496164851956411, 0.6485901293564372, 0.6472931914577678, 0.6340976510742604, 0.6332097659021588, 0.636861456659224, 0.6233380047353252, 0.6266769541489245, 0.636025227142788, 0.6197811105326576, 0.6191037433683723, 0.6177940799134708, 0.6199178375178765, 0.5941502116595938, 0.6044327414204275, 0.6021458983594526, 0.5924286405408167, 0.5967205077146007, 0.5855072954815487], "accuracy": [0.16933034360408783, 0.3267732262611389, 0.4235900044441223, 0.4826310873031616, 0.5425967574119568, 0.5892220139503479, 0.6178840398788452, 0.6425835490226746, 0.6682076454162598, 0.6649055480957031, 0.6802271604537964, 0.6947563290596008, 0.6968696117401123, 0.7082287669181824, 0.7128516435623169, 0.7174745798110962, 0.722757875919342, 0.7189275026321411, 0.7236824631690979, 0.735569953918457, 0.7322678565979004, 0.7312111854553223, 0.7441553473472595, 0.7429665923118591, 0.7416457533836365, 0.7445515990257263, 0.7497028112411499, 0.752740740776062, 0.7518161535263062, 0.7541936039924622, 0.7548540234565735, 0.7573636174201965, 0.7662131786346436, 0.7648923397064209, 0.7611940503120422, 0.7655527591705322, 0.7629110813140869, 0.7626469135284424, 0.7707040309906006, 0.770439863204956, 0.7687227725982666, 0.7736098170280457, 0.7730814814567566, 0.7691190242767334, 0.7755910754203796, 0.7837802171707153, 0.7746664881706238, 0.7820631265640259, 0.7788931727409363, 0.7835160493850708, 0.7878747582435608], "val_loss": [1.8995934895106725, 1.7631457192557198, 1.484098161969866, 1.1459061418260847, 0.9300445829119001, 0.8063290800367083, 0.733836327280317, 0.6913769926343646, 0.6627602577209473, 0.6246503421238491, 0.6147887536457607, 0.5892074619020734, 0.5731936011995588, 0.562506914138794, 0.5611161674771991, 0.5410118954522269, 0.5315036433083671, 0.525823712348938, 0.519890444619315, 0.5146080596106393, 0.5083753722054618, 0.5012248584202358, 0.49160938603537424, 0.4919781173978533, 0.4868430921009609, 0.48174381256103516, 0.47299981117248535, 0.47201693058013916, 0.4664996010916574, 0.46508216857910156, 0.45757692200796946, 0.4629680599485125, 0.4605064221790859, 0.4639723982129778, 0.4516470432281494, 0.45380735397338867, 0.45122088704790386, 0.4429692540849958, 0.4415687152317592, 0.4362234388078962, 0.4493585654667446, 0.43527075222560335, 0.43382300649370464, 0.4288679191044399, 0.4308202181543623, 0.4263649753161839, 0.43294936418533325, 0.4263450673648289, 0.42205004181180683, 0.42342361382075716, 0.42716807978493826], "val_accuracy": [0.41466665267944336, 0.5059999823570251, 0.5799999833106995, 0.6190000176429749, 0.6676666736602783, 0.6976666450500488, 0.7076666951179504, 0.7073333263397217, 0.7136666774749756, 0.7483333349227905, 0.7316666841506958, 0.7513333559036255, 0.762333333492279, 0.7636666893959045, 0.7450000047683716, 0.7663333415985107, 0.7766666412353516, 0.778333306312561, 0.7766666412353516, 0.784333348274231, 0.7739999890327454, 0.7860000133514404, 0.7916666865348816, 0.7836666703224182, 0.7873333096504211, 0.7903333306312561, 0.7983333468437195, 0.8083333373069763, 0.8086666464805603, 0.8029999732971191, 0.8073333501815796, 0.7940000295639038, 0.8103333115577698, 0.8026666641235352, 0.812333345413208, 0.8003333210945129, 0.8159999847412109, 0.8136666417121887, 0.809333324432373, 0.8180000185966492, 0.8046666383743286, 0.8193333148956299, 0.8153333067893982, 0.8196666836738586, 0.8293333053588867, 0.8336666822433472, 0.812666654586792, 0.8146666884422302, 0.8173333406448364, 0.828000009059906, 0.8086666464805603]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7791428565979004, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2731933454244744, 2.178113431663498, 1.9770361089970945, 1.6585315174635107, 1.3771570894176839, 1.194918256803605, 1.0916936542253768, 1.0148181450318163, 0.962705434337032, 0.9200182164255434, 0.8900738204034123, 0.8502307124047185, 0.8378805959812009, 0.8186173627184776, 0.8027978798008204, 0.7905444304988117, 0.7706833814727537, 0.7591233559807986, 0.7600412594643818, 0.738977826495039, 0.7298488994835705, 0.7245849502903832, 0.7026289438275519, 0.7065069908872808, 0.7053123510367267, 0.6992793601139614, 0.6888322754936637, 0.6717650142832046, 0.6704629048411841, 0.6709784461743071, 0.6655763110401545, 0.6641434654032534, 0.6499579218809772], "accuracy": [0.16933034360408783, 0.3263769745826721, 0.42345792055130005, 0.4823669195175171, 0.5424646735191345, 0.5890899300575256, 0.618280291557312, 0.6435081362724304, 0.667811393737793, 0.6649055480957031, 0.6802271604537964, 0.693831741809845, 0.6963412761688232, 0.7088891863822937, 0.713379979133606, 0.7169462442398071, 0.722229540348053, 0.7197200059890747, 0.7226257920265198, 0.735569953918457, 0.7318716049194336, 0.7310791015625, 0.7440232634544373, 0.7428345084190369, 0.7425703406333923, 0.7450799345970154, 0.7493065595626831, 0.7531369924545288, 0.7531369924545288, 0.7537974119186401, 0.755118191242218, 0.7563069462776184, 0.7668735980987549], "val_loss": [1.8995934213910783, 1.763151032584054, 1.484112228666033, 1.145906891141619, 0.9300479548318046, 0.806194373539516, 0.7338943651744297, 0.6909386430467878, 0.6628699472972325, 0.624895589692252, 0.6148659842354911, 0.5890234197889056, 0.573176349912371, 0.5625065394810268, 0.5608425651277814, 0.5409323658261981, 0.5319751841681344, 0.5258556774684361, 0.5198738064084735, 0.5149436337607247, 0.5080955880028861, 0.5016209397997174, 0.4913288354873657, 0.4919863428388323, 0.4865783623286656, 0.4805607284818377, 0.4733212334769113, 0.47126448154449463, 0.4667696612221854, 0.4654414824077061, 0.4578960793358939, 0.4619585616247995, 0.4614069291523525], "val_accuracy": [0.4143333435058594, 0.5059999823570251, 0.5796666741371155, 0.6186666488647461, 0.6676666736602783, 0.6976666450500488, 0.7076666951179504, 0.7076666951179504, 0.7136666774749756, 0.7473333477973938, 0.7323333621025085, 0.7516666650772095, 0.762333333492279, 0.7636666893959045, 0.7459999918937683, 0.7676666378974915, 0.7753333449363708, 0.777999997138977, 0.7770000100135803, 0.7820000052452087, 0.7736666798591614, 0.7856666445732117, 0.7913333177566528, 0.784333348274231, 0.7856666445732117, 0.7910000085830688, 0.796999990940094, 0.8086666464805603, 0.8080000281333923, 0.8006666898727417, 0.8069999814033508, 0.7956666946411133, 0.8083333373069763]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.777999997138977, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2731933454244744, 2.178112032548579, 1.9770455592186569, 1.6585392405123618, 1.3771869857407926, 1.1949195493528824, 1.0915873364655255, 1.0147772119691139, 0.9626908611155394, 0.9199645337553356, 0.8900229793498072, 0.8502201935665844, 0.8376421602788524, 0.8188301785164473, 0.8026371478892714, 0.7905250469281957, 0.7705102738624299, 0.7588559010277304, 0.7598719860600159, 0.7388458357684254, 0.7299614146227819, 0.724331782714739, 0.7024238536921884, 0.7065413387822217, 0.7055836551854828, 0.6993257621842731, 0.6887737621311278, 0.6718309552221408, 0.6706673502292237, 0.6710770297217379, 0.6656305909770874, 0.6641027875753395, 0.6504955331033105], "accuracy": [0.16933034360408783, 0.3267732262611389, 0.4237220883369446, 0.4826310873031616, 0.5425967574119568, 0.5892220139503479, 0.618280291557312, 0.643772304058075, 0.6679434776306152, 0.6650376319885254, 0.6799629926681519, 0.6936996579170227, 0.6970016956329346, 0.7087571024894714, 0.7131158113479614, 0.7177387475967407, 0.7217012047767639, 0.7191916704177856, 0.7236824631690979, 0.7357020378112793, 0.7321357727050781, 0.7314753532409668, 0.7437590956687927, 0.7437590956687927, 0.7413815855979919, 0.7446836829185486, 0.750231146812439, 0.7541936039924622, 0.7523444890975952, 0.7534011602401733, 0.7544577717781067, 0.7573636174201965, 0.765949010848999], "val_loss": [1.8995930126735143, 1.763150760105678, 1.484121356691633, 1.14593277658735, 0.9300975458962577, 0.8063168014798846, 0.7338243212018695, 0.6909082787377494, 0.6629563059125628, 0.6247642891747611, 0.6146201065608433, 0.5891461883272443, 0.5730826684406826, 0.5622538498469761, 0.5604334558759417, 0.5400099754333496, 0.5314193793705532, 0.5260525260652814, 0.5196741989680699, 0.515197890145438, 0.5080778428486415, 0.5009718452181134, 0.4917243208203997, 0.4916921854019165, 0.48708583627428326, 0.4816984108516148, 0.47314303261893137, 0.47200753007616314, 0.4669636147362845, 0.4654327630996704, 0.4576276881354196, 0.46228822640010286, 0.4617457389831543], "val_accuracy": [0.41466665267944336, 0.5056666731834412, 0.5799999833106995, 0.6186666488647461, 0.6679999828338623, 0.6980000138282776, 0.7076666951179504, 0.7070000171661377, 0.7143333554267883, 0.7480000257492065, 0.7329999804496765, 0.753333330154419, 0.7630000114440918, 0.7636666893959045, 0.7459999918937683, 0.7673333287239075, 0.7763333320617676, 0.7776666879653931, 0.7770000100135803, 0.7836666703224182, 0.7746666669845581, 0.7873333096504211, 0.7919999957084656, 0.784333348274231, 0.7846666574478149, 0.7896666526794434, 0.796999990940094, 0.8100000023841858, 0.8086666464805603, 0.8029999732971191, 0.8083333373069763, 0.7946666479110718, 0.809333324432373]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 2, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 0, 5, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [3, 51, 56, 45]], "fitness": -0.29742857813835144, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, beta)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022432810027977, 2.3025932203052757, 2.301334838794128, 2.301194743142703, 2.3025720268743797, 2.29956328180787, 2.301907493611211, 2.300289189826543, 2.3007624570987386, 2.3003729662607375, 2.2999583166100015, 2.2978231533092357, 2.2972997959657446, 2.297877468815286, 2.2971143979815887, 2.297386625612637, 2.2950314434055543, 2.2950647134255613, 2.296172157868796, 2.2946860801589457, 2.2967913339418615, 2.2944614825830043, 2.2947309270369267, 2.2946085471046316, 2.2933382658579915, 2.295323894071447, 2.2934169229530874, 2.2915425148811384, 2.2923391894452747, 2.291571964976369, 2.293192701285557, 2.291599199740705, 2.291649499447779, 2.2901360403513626, 2.2908099944077276, 2.2910738860800315, 2.289356601866497, 2.28981970710966, 2.2887657202308866, 2.2902728742879885, 2.289561708164631, 2.2878163315915727, 2.2890722153917706, 2.287785499575525, 2.2888894236996316, 2.2861029112013087, 2.2867076019049795, 2.286670799252852, 2.285250572905706, 2.2857901135833743, 2.2849894473108994, 2.285499062189856, 2.2848543294149066, 2.2834642260318043, 2.283526516200025, 2.2834688216750934, 2.282186751289453, 2.2831045809423194, 2.2830031537864786, 2.28331639026339, 2.282045419615147, 2.281582976754284, 2.2818459969123657, 2.2812391095519806, 2.280307500117711, 2.280128030634638, 2.2805986209489477, 2.2799768101159748, 2.2800852332872847, 2.2795033610775612, 2.277719473464063, 2.279067681276913, 2.2766983702103727, 2.2770014751100773, 2.2768229066168297, 2.2764214096351494, 2.2767504785731956, 2.276591888586953, 2.2761615449726276, 2.2772416999201184, 2.275838000694711, 2.2752668883397105, 2.275697164941127, 2.276118601129008, 2.274337302267024, 2.2726028801002647, 2.2736893871661583, 2.2736960907559336, 2.273289278497974, 2.271660041594943, 2.272060395074385, 2.272078438709598, 2.2719694538013164, 2.27104273949002, 2.269781913298815, 2.269716871948353, 2.267769034575509, 2.269744726991483, 2.2685885606676814, 2.2686154106116456], "accuracy": [0.08413683623075485, 0.0886276587843895, 0.09615638852119446, 0.09377889335155487, 0.09549596905708313, 0.09615638852119446, 0.09430722147226334, 0.09417514503002167, 0.09549596905708313, 0.09430722147226334, 0.09589222073554993, 0.10579843819141388, 0.10527011007070541, 0.10381719470024109, 0.10500594228506088, 0.10157178342342377, 0.10936468094587326, 0.10553427785634995, 0.10566636174917221, 0.1088363528251648, 0.09959053993225098, 0.11068551242351532, 0.11121384054422379, 0.1146479994058609, 0.11702549457550049, 0.10791176557540894, 0.11517632752656937, 0.11689341068267822, 0.11834631860256195, 0.11676132678985596, 0.11649715900421143, 0.1266675442457199, 0.11821424216032028, 0.11953506618738174, 0.12257297337055206, 0.11847840249538422, 0.11834631860256195, 0.1228371411561966, 0.12468630075454712, 0.12098798155784607, 0.12891295552253723, 0.13049794733524323, 0.12072381377220154, 0.1262712925672531, 0.12257297337055206, 0.1310262829065323, 0.13195087015628815, 0.12970545887947083, 0.13802668452262878, 0.13393211364746094, 0.13036586344242096, 0.13617752492427826, 0.1364416927099228, 0.1336679458618164, 0.13895125687122345, 0.1410645842552185, 0.14555540680885315, 0.14053626358509064, 0.14093250036239624, 0.1402720957994461, 0.14317791163921356, 0.14555540680885315, 0.1398758441209793, 0.15149913728237152, 0.1468762308359146, 0.14555540680885315, 0.14515915513038635, 0.15110288560390472, 0.14978206157684326, 0.14978206157684326, 0.1530841439962387, 0.15876370668411255, 0.15532954037189484, 0.15849953889846802, 0.15440496802330017, 0.16431118547916412, 0.160084530711174, 0.16338661313056946, 0.16431118547916412, 0.15374454855918884, 0.16536785662174225, 0.1620657742023468, 0.15691454708576202, 0.16180160641670227, 0.1628582775592804, 0.16338661313056946, 0.16523577272891998, 0.16919825971126556, 0.16761326789855957, 0.1698586642742157, 0.17540615797042847, 0.17263241112232208, 0.17183992266654968, 0.17672698199748993, 0.17976489663124084, 0.1776515692472458, 0.1834632158279419, 0.17751948535442352, 0.18650111556053162, 0.1818782240152359], "val_loss": [1.9700591904776437, 1.9697307177952357, 1.969405038016183, 1.969080856868199, 1.968752179827009, 1.9684270450047083, 1.968097414289202, 1.9677699634007044, 1.9674461228506905, 1.9671245983668737, 1.9668032782418388, 1.9664774622235979, 1.9661550521850586, 1.965834617614746, 1.9655145236424036, 1.965191091809954, 1.9648700441632951, 1.9645448412214006, 1.9642258371625627, 1.9639052663530623, 1.9635891233171736, 1.963268552507673, 1.9629470280238561, 1.9626282283238001, 1.9623106547764368, 1.961991650717599, 1.961669921875, 1.9613496235438757, 1.9610326630728585, 1.9607101849147253, 1.9603874342782157, 1.9600673403058733, 1.9597456795828683, 1.9594246319362096, 1.9591057641165597, 1.9587885992867606, 1.958473069327218, 1.9581560407366072, 1.957834243774414, 1.9575157846723283, 1.957198006766183, 1.9568794114249093, 1.956559521811349, 1.9562390872410365, 1.9559192657470703, 1.9555967875889368, 1.9552748543875558, 1.9549541473388672, 1.9546326909746443, 1.9543147768293108, 1.9539921624319894, 1.9536734308515276, 1.953352996281215, 1.9530352864946638, 1.9527143750871931, 1.9523933274405343, 1.952068601335798, 1.951744828905378, 1.951423031943185, 1.9511021886553084, 1.950777803148542, 1.9504541669573103, 1.9501356397356306, 1.9498096193586076, 1.9494851657322474, 1.9491595540727888, 1.9488391876220703, 1.9485212053571428, 1.9482004983084542, 1.9478761128016882, 1.9475500243050712, 1.9472267968314034, 1.9469026838030135, 1.946577548980713, 1.9462519373212541, 1.9459309577941895, 1.9456069128853934, 1.945284026009696, 1.9449588230678014, 1.9446306228637695, 1.9443042618887765, 1.9439764704023088, 1.943646022251674, 1.9433162552969796, 1.9429853303091866, 1.94265501839774, 1.9423240252903529, 1.9419944626944405, 1.941667079925537, 1.9413362911769323, 1.9410076822553362, 1.9406730788094657, 1.9403442655290877, 1.940011705671038, 1.9396770341055733, 1.9393441336495536, 1.939009325844901, 1.9386730875287737, 1.9383426393781389, 1.9380082402910506], "val_accuracy": [0.03799999877810478, 0.04100000113248825, 0.04333333298563957, 0.04500000178813934, 0.04766666516661644, 0.04933333396911621, 0.05233333259820938, 0.05666666850447655, 0.05966666713356972, 0.061666667461395264, 0.06400000303983688, 0.0663333311676979, 0.06833333522081375, 0.07000000029802322, 0.07333333045244217, 0.07666666805744171, 0.07966666668653488, 0.08299999684095383, 0.08433333039283752, 0.08633333444595337, 0.08900000154972076, 0.09166666865348816, 0.09399999678134918, 0.0949999988079071, 0.09733333438634872, 0.10133333504199982, 0.10400000214576721, 0.1066666692495346, 0.10866666585206985, 0.11100000143051147, 0.11500000208616257, 0.11800000071525574, 0.12133333086967468, 0.12466666847467422, 0.1276666671037674, 0.12999999523162842, 0.1326666623353958, 0.1353333294391632, 0.13866665959358215, 0.14166666567325592, 0.14633333683013916, 0.15066666901111603, 0.15433333814144135, 0.1586666703224182, 0.164000004529953, 0.16833333671092987, 0.17166666686534882, 0.1756666600704193, 0.17866666615009308, 0.18333333730697632, 0.18333333730697632, 0.18700000643730164, 0.18933333456516266, 0.19333332777023315, 0.195333331823349, 0.19699999690055847, 0.19900000095367432, 0.20133332908153534, 0.20633333921432495, 0.20900000631809235, 0.21533332765102386, 0.2160000056028366, 0.21699999272823334, 0.21933333575725555, 0.22166666388511658, 0.2253333330154419, 0.22866666316986084, 0.23100000619888306, 0.23600000143051147, 0.2383333295583725, 0.2423333376646042, 0.24500000476837158, 0.24633333086967468, 0.24899999797344208, 0.25066667795181274, 0.2540000081062317, 0.257666677236557, 0.25966668128967285, 0.2630000114440918, 0.2639999985694885, 0.2653333246707916, 0.2669999897480011, 0.2706666588783264, 0.2750000059604645, 0.27799999713897705, 0.2800000011920929, 0.2836666703224182, 0.28600001335144043, 0.2866666615009308, 0.289000004529953, 0.28966665267944336, 0.2930000126361847, 0.2953333258628845, 0.29733332991600037, 0.2983333468437195, 0.3009999990463257, 0.3023333251476288, 0.304666668176651, 0.3076666593551636, 0.3086666762828827]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [3, 51, 56, 45]], "fitness": -0.2174285650253296, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022882853359232, 2.302749511981763, 2.301600034100552, 2.3015670095216234, 2.303062424982827, 2.300159366611697, 2.3026204818369864, 2.3011068243155974, 2.301689540358929, 2.301403036144006, 2.30109410962377, 2.299084481309985, 2.2986509430252595, 2.299339031892887, 2.298676251294417, 2.2990741672737567, 2.29680643741717, 2.296972511340882, 2.298158280774823, 2.296799073932886, 2.298982458910717, 2.296778531358573, 2.297168401380052, 2.297133319649667, 2.2959664510052518, 2.2980607848015633, 2.296288828005203, 2.2944993539776672, 2.2953767375608463, 2.294773015741659, 2.296492069436102, 2.2949989223051945, 2.295158707627909, 2.293742404496114, 2.2945166364432232, 2.294862051083191, 2.2932431628565197, 2.293801847749367, 2.292931150656335, 2.2944849200646136, 2.293874079005562, 2.2922482505340334, 2.29363129828915, 2.2924348041129825, 2.2936555835407457, 2.291011399848665, 2.291719199832971, 2.2917742134951298, 2.2904366538068324, 2.2910586206148706, 2.290419277749939, 2.2909970326651012, 2.2904608466007677, 2.2891835267942784, 2.289380892125166, 2.2894242043193493, 2.2883068904932133, 2.289312647822164, 2.2893034041974962, 2.289704735819784, 2.2885784270221436, 2.2882141234017856, 2.2884588182688925, 2.2881272736951077, 2.2872590139762146, 2.2872079561226215, 2.2877120553478827, 2.287108604414525, 2.2874056826241187, 2.2869716775163824, 2.285342345132552, 2.2867578247424523, 2.284504791182172, 2.2849514831436655, 2.2848359477864815, 2.2844782406234185, 2.284983752410268, 2.284888591465303, 2.2846257355014457, 2.285810878389878, 2.2845128102781844, 2.2840786936292243, 2.284643723680957, 2.285190464908326, 2.283544533508738, 2.281887468487406, 2.2831309926256353, 2.283198575585541, 2.2828542051565974, 2.281398388404478, 2.281896827967569, 2.282128864102407, 2.2819667959005416, 2.2812395018357265, 2.2800631366307003, 2.2801898489412835, 2.2783321386724493, 2.2804920188408517, 2.2792844328630273, 2.2795303225627492], "accuracy": [0.08413683623075485, 0.08809932321310043, 0.09536388516426086, 0.09338264167308807, 0.0940430611371994, 0.0944393053650856, 0.09232597798109055, 0.09219389408826828, 0.0936468094587326, 0.09100515395402908, 0.09298639744520187, 0.10315678268671036, 0.10249637067317963, 0.10077928751707077, 0.10236428678035736, 0.09668471664190292, 0.10527011007070541, 0.1014397069811821, 0.10196803510189056, 0.10355303436517715, 0.09325055778026581, 0.10579843819141388, 0.10513802617788315, 0.10910051316022873, 0.11015717685222626, 0.1002509593963623, 0.10685510188341141, 0.11015717685222626, 0.11028926074504852, 0.11028926074504852, 0.10711926966905594, 0.11676132678985596, 0.108440101146698, 0.11134592443704605, 0.11253467202186584, 0.11042134463787079, 0.108440101146698, 0.11279883980751038, 0.11517632752656937, 0.10976093262434006, 0.11636507511138916, 0.11781799048185349, 0.11081759631633759, 0.11478008329868317, 0.10936468094587326, 0.11795007437467575, 0.11861048638820648, 0.11874257028102875, 0.12112006545066833, 0.11913882195949554, 0.11966715008020401, 0.11861048638820648, 0.1208558976650238, 0.11755382269620895, 0.12191256135702133, 0.12349755316972733, 0.12521463632583618, 0.12296922504901886, 0.12296922504901886, 0.12178047746419907, 0.12719587981700897, 0.1290450394153595, 0.12217672914266586, 0.13234710693359375, 0.12732796370983124, 0.1286487877368927, 0.12679962813854218, 0.13076211512088776, 0.13036586344242096, 0.12732796370983124, 0.1336679458618164, 0.137630432844162, 0.13551710546016693, 0.1356491893529892, 0.13498876988887787, 0.1402720957994461, 0.1364416927099228, 0.13934750854969025, 0.1402720957994461, 0.13261127471923828, 0.13697001338005066, 0.14119666814804077, 0.13261127471923828, 0.1356491893529892, 0.13842293620109558, 0.13868708908557892, 0.13670584559440613, 0.14555540680885315, 0.14212125539779663, 0.14463083446025848, 0.14555540680885315, 0.14357416331768036, 0.1410645842552185, 0.15202747285366058, 0.15202747285366058, 0.14859332144260406, 0.15149913728237152, 0.14938580989837646, 0.15400871634483337, 0.14978206157684326], "val_loss": [1.9701619148254395, 1.9699367795671736, 1.9697137560163225, 1.969491413661412, 1.9692656653267997, 1.9690425736563546, 1.9688162803649902, 1.9685913494655065, 1.9683685302734375, 1.9681472778320312, 1.9679258210318429, 1.9677020481654577, 1.967480182647705, 1.9672592708042689, 1.9670393807547433, 1.9668167659214564, 1.9665954453604562, 1.9663716043744768, 1.9661517824445451, 1.9659309387207031, 1.9657130241394043, 1.965491839817592, 1.9652705873761858, 1.9650512422834123, 1.9648325783865792, 1.9646131651742118, 1.9643921852111816, 1.96417236328125, 1.963954039982387, 1.9637325150626046, 1.9635107176644462, 1.9632906913757324, 1.9630697795322962, 1.9628494126456124, 1.962629795074463, 1.9624110630580358, 1.9621943746294295, 1.9619769368852888, 1.9617560931614466, 1.9615373611450195, 1.9613195146833147, 1.9611010551452637, 1.9608813694545202, 1.9606627055576868, 1.9604434285845076, 1.9602228573390417, 1.9600021498543876, 1.9597828047616142, 1.9595628465924944, 1.9593454088483537, 1.9591251100812639, 1.9589072636195592, 1.958688395363944, 1.9584712982177734, 1.9582517487662179, 1.9580326080322266, 1.9578116280691964, 1.9575913974217005, 1.9573721204485213, 1.957153592790876, 1.956932544708252, 1.9567124502999442, 1.956496238708496, 1.9562742369515556, 1.9560546875, 1.95583404813494, 1.9556167466299874, 1.95540189743042, 1.9551848002842493, 1.954965591430664, 1.95474454334804, 1.9545256069728307, 1.9543070793151855, 1.954087597983224, 1.953869070325579, 1.953653131212507, 1.95343473979405, 1.9532176426478796, 1.9529997280665807, 1.9527803829738073, 1.95256131035941, 1.9523416927882604, 1.9521211215427943, 1.9519011633736747, 1.9516801834106445, 1.9514594078063965, 1.9512384278433663, 1.9510178565979004, 1.9507996014186315, 1.9505795070103236, 1.9503600256783622, 1.9501374789646693, 1.9499193600245885, 1.9496990612574987, 1.949477195739746, 1.9492565563746862, 1.949035576411656, 1.948812620980399, 1.9485947745186942, 1.948373590196882], "val_accuracy": [0.036666665226221085, 0.03866666555404663, 0.041333332657814026, 0.04266666620969772, 0.044333335012197495, 0.04600000008940697, 0.04699999839067459, 0.04833333194255829, 0.050999999046325684, 0.05233333259820938, 0.0533333346247673, 0.05766666680574417, 0.05900000035762787, 0.060333333909511566, 0.06199999898672104, 0.06366666406393051, 0.06533333659172058, 0.06700000166893005, 0.06833333522081375, 0.0689999982714653, 0.070333331823349, 0.07333333045244217, 0.07466666400432587, 0.07733333110809326, 0.07999999821186066, 0.08233333379030228, 0.0833333358168602, 0.0846666693687439, 0.08566666394472122, 0.08733333647251129, 0.08933333307504654, 0.09099999815225601, 0.09300000220537186, 0.09466666728258133, 0.09533333033323288, 0.09600000083446503, 0.09733333438634872, 0.1003333330154419, 0.10266666859388351, 0.10433333367109299, 0.10633333027362823, 0.1080000028014183, 0.10899999737739563, 0.11166666448116302, 0.1146666631102562, 0.11633333563804626, 0.11900000274181366, 0.11933333426713943, 0.12433333694934845, 0.1263333261013031, 0.12733332812786102, 0.12933333218097687, 0.1303333342075348, 0.1326666623353958, 0.13466666638851166, 0.13600000739097595, 0.13866665959358215, 0.140666663646698, 0.14499999582767487, 0.14666666090488434, 0.15066666901111603, 0.15266667306423187, 0.15600000321865082, 0.1586666703224182, 0.1616666615009308, 0.1653333306312561, 0.1679999977350235, 0.17033334076404572, 0.1720000058412552, 0.17399999499320984, 0.17766666412353516, 0.18066667020320892, 0.18199999630451202, 0.1836666613817215, 0.18400000035762787, 0.1863333284854889, 0.1886666715145111, 0.19066666066646576, 0.1926666647195816, 0.19499999284744263, 0.19599999487400055, 0.19699999690055847, 0.19833333790302277, 0.2006666660308838, 0.20233333110809326, 0.20600000023841858, 0.20733332633972168, 0.21166667342185974, 0.2136666625738144, 0.21533332765102386, 0.2160000056028366, 0.21666666865348816, 0.21899999678134918, 0.21966665983200073, 0.2213333398103714, 0.22433333098888397, 0.22633333504199982, 0.2290000021457672, 0.23100000619888306, 0.23366667330265045]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 1, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.negative(alpha)))))))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 5], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [32, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [30062.049121534725, 547049.6048738608, 2524511.800026417, 6960947.553031304, 15170047.931581033, 27643802.246466782], "accuracy": [0.10289261490106583, 0.10328886657953262, 0.1014397069811821, 0.10500594228506088, 0.09787346422672272, 0.10381719470024109], "val_loss": [107835.41741071429, 852385.2857142857, 2865915.3571428573, 6780691.857142857, 13229012.285714285, 22843151.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 1, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [32, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.subtract(alpha, grad), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [30062.049121534725, 547049.6048738608, 2524511.800026417, 6960947.553031304, 15170047.931581033, 27643802.246466782], "accuracy": [0.10289261490106583, 0.10328886657953262, 0.1014397069811821, 0.10500594228506088, 0.09787346422672272, 0.10381719470024109], "val_loss": [107835.41741071429, 852385.2857142857, 2865915.3571428573, 6780691.857142857, 13229012.285714285, 22843151.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3370689017472563, 2.5426134401544873, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04570069909095764, 0.011359133757650852, 0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0617270469665527, 2.724982057298933, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.017000000923871994, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [62, 17, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [3, 12, 93, 85], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [7, 8, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [21], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [39, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3024451338367817, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2, 3], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(alpha))), tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [79, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [30, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 0, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 0, 6, 2, 7, 0, 0, 4, 0, 8], [1, 1, 0, 3, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10817593336105347, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 13, 9, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [3, 12, 93, 85], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 8, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [24], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 8, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma))", "other_info": {"loss": [2.3023863097601374, 2.303089602905856, 2.3021772847183786, 2.302377668999725, 2.3041311792961405, 2.301459561721949], "accuracy": [0.08347642421722412, 0.0874389111995697, 0.09232597798109055, 0.09126931428909302, 0.09087307006120682, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3023863097601374, 2.303089602905856, 2.3021772847183786, 2.302377668999725, 2.3041311792961405, 2.301459561721949], "accuracy": [0.08347642421722412, 0.0874389111995697, 0.09232597798109055, 0.09126931428909302, 0.09087307006120682, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]