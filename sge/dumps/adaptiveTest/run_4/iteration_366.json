[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8157142996788025, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.271685981211992, 1.7895953367100006, 1.3687135965092592, 1.1443554743201332, 0.9354540274253752, 0.8772007112237897, 0.8320451423854498, 0.7899861068159377, 0.751948450983413, 0.7451663850840482, 0.6818661544584658, 0.6554245083969126, 0.6515338103044712, 0.6482581998284436, 0.6366498770494629, 0.6153289986765222, 0.5959823239811691, 0.5658142161942461, 0.5746076875012611, 0.5481564001935647, 0.5483687902485705, 0.5278413223946304, 0.520140073106053, 0.5015606380346633, 0.5190743768078193, 0.4860615972254837, 0.48703962431418785, 0.4866908946372357, 0.47269644230710456, 0.47015908257348143, 0.45357710480091673, 0.4402484962134361, 0.43852728465528945, 0.42588138541745757, 0.44261617859152125, 0.4255859195839664, 0.4201210870514173], "accuracy": [0.2801479399204254, 0.4539690911769867, 0.5425967574119568, 0.5803724527359009, 0.6597543358802795, 0.6662263870239258, 0.683529257774353, 0.6914542317390442, 0.7104741930961609, 0.719852089881897, 0.7349095344543457, 0.7511557340621948, 0.7506273984909058, 0.7518161535263062, 0.7564390301704407, 0.7606657147407532, 0.767930269241333, 0.7796856164932251, 0.78113853931427, 0.7942147850990295, 0.7902522683143616, 0.7991018295288086, 0.8035926818847656, 0.8148196935653687, 0.8039889335632324, 0.8170651197433472, 0.8190463781356812, 0.8206313848495483, 0.8230088353157043, 0.8277638554573059, 0.8321225643157959, 0.8322546482086182, 0.8345000743865967, 0.841500461101532, 0.8319904804229736, 0.8442742228507996, 0.8405758738517761], "val_loss": [1.3762809208461217, 1.0677592754364014, 1.0153255803244454, 0.6670683452061245, 0.6996017183576312, 0.6698399100984845, 0.5747129917144775, 0.5851890529905047, 0.554807356425694, 0.4981992074421474, 0.5305104425975254, 0.5383656876427787, 0.50046706199646, 0.45569772379738943, 0.4536628893443516, 0.49845962865012033, 0.42461217301232473, 0.4401766061782837, 0.49390850748334614, 0.40006028754370554, 0.4060318299702236, 0.4055636865752084, 0.3945253831999643, 0.42811336687632967, 0.43011334964207243, 0.3901617271559579, 0.42675191164016724, 0.41807909522737774, 0.4283156820705959, 0.36400872468948364, 0.3649722252573286, 0.3390272259712219, 0.3648435984339033, 0.41145114387784687, 0.41109007596969604, 0.3586188725062779, 0.332292948450361], "val_accuracy": [0.5383333563804626, 0.6013333201408386, 0.562333345413208, 0.7269999980926514, 0.7013333439826965, 0.6806666851043701, 0.746999979019165, 0.7363333106040955, 0.7620000243186951, 0.7896666526794434, 0.7573333382606506, 0.7566666603088379, 0.7726666927337646, 0.8063333630561829, 0.7893333435058594, 0.7580000162124634, 0.8220000267028809, 0.8016666769981384, 0.7670000195503235, 0.8346666693687439, 0.8349999785423279, 0.8223333358764648, 0.8273333311080933, 0.8116666674613953, 0.7906666398048401, 0.8360000252723694, 0.8186666369438171, 0.8136666417121887, 0.7983333468437195, 0.843999981880188, 0.8476666808128357, 0.862333357334137, 0.8493333458900452, 0.8100000023841858, 0.8159999847412109, 0.8506666421890259, 0.859666645526886]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 1, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8082857131958008, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2716825422184455, 1.7904421977709628, 1.3939841518375646, 1.093578566216585, 1.0356887605889062, 0.8949698715980862, 0.819601297347049, 0.7778738052806268, 0.768584272597271, 0.7257875655825112, 0.6840041092578619, 0.6978268202080813, 0.650637411320167, 0.6291051176655262, 0.6484434404834197, 0.6171478931583575, 0.6081225159082903, 0.566613378683495, 0.5732519316666981, 0.536803570169704, 0.5480728029315152, 0.5340157933420021, 0.5350592985774831, 0.5099714344101434, 0.5137360321768459, 0.48767396234533866, 0.4933862787085974, 0.48228355767452613, 0.49220821176773805, 0.4715158089615524, 0.4523468011831012, 0.44037410307868974, 0.4510541166792834, 0.42150539369977397, 0.43548026952556473, 0.4351853809541227, 0.43241389662424934, 0.41035641364338943, 0.40748939192872935, 0.39252416751545655, 0.3999460493616062, 0.38936414065661445, 0.409764876734579, 0.3731822996146769, 0.3761579182484619, 0.3765196287124983, 0.37462108751424095, 0.37548242676070714], "accuracy": [0.2802800238132477, 0.45383700728416443, 0.5378417372703552, 0.6020340919494629, 0.6258090138435364, 0.6646413803100586, 0.6863030195236206, 0.7008321285247803, 0.709021270275116, 0.7219653725624084, 0.735569953918457, 0.733588695526123, 0.7510236501693726, 0.7578919529914856, 0.750759482383728, 0.7593448758125305, 0.76542067527771, 0.7798177003860474, 0.7825914621353149, 0.7972526550292969, 0.7907806038856506, 0.7973847389221191, 0.7955356240272522, 0.8078193068504333, 0.805177628993988, 0.8148196935653687, 0.8120459914207458, 0.819970965385437, 0.8083476424217224, 0.8215559124946594, 0.8314621448516846, 0.8308017253875732, 0.8297450542449951, 0.8444063067436218, 0.837537944316864, 0.834632158279419, 0.8341038227081299, 0.8436138033866882, 0.8448025584220886, 0.8518029451370239, 0.848368763923645, 0.8560295701026917, 0.8475762605667114, 0.8607845902442932, 0.8577466607093811, 0.8553691506385803, 0.8589354157447815, 0.8573504090309143], "val_loss": [1.376380443572998, 1.069847651890346, 0.9955211707523891, 0.8391423906598773, 0.7480475221361432, 0.5805360078811646, 0.5778992176055908, 0.6056222915649414, 0.5603869131633213, 0.49876013823917936, 0.519097089767456, 0.48561021259852816, 0.5102817331041608, 0.47045702593667166, 0.45166482244219097, 0.5042881114142281, 0.4319875751222883, 0.43017516817365375, 0.4580233778272356, 0.4100977012089321, 0.41977810859680176, 0.4311209661620004, 0.392481940133231, 0.43973556586674284, 0.4320089476449149, 0.3886838299887521, 0.39728613410677227, 0.394096919468471, 0.40125296797071186, 0.35792248589651926, 0.36661533798490253, 0.34113424164908274, 0.3700940098081316, 0.39221560103552683, 0.378335782459804, 0.3994711637496948, 0.33300572633743286, 0.3457897050040109, 0.3438342383929661, 0.36947747639247347, 0.3356407369886126, 0.34077474049159456, 0.32123429434640066, 0.3611751283918108, 0.3489893930298941, 0.340706467628479, 0.3302520683833531, 0.3231895991734096], "val_accuracy": [0.5379999876022339, 0.5960000157356262, 0.653333306312561, 0.628333330154419, 0.6940000057220459, 0.734333336353302, 0.753000020980835, 0.7183333039283752, 0.7593333125114441, 0.7873333096504211, 0.737666666507721, 0.800000011920929, 0.7630000114440918, 0.7743333578109741, 0.7910000085830688, 0.7559999823570251, 0.8216666579246521, 0.8163333535194397, 0.7853333353996277, 0.8266666531562805, 0.8159999847412109, 0.8036666512489319, 0.8320000171661377, 0.793666660785675, 0.7873333096504211, 0.8363333344459534, 0.8253333568572998, 0.8289999961853027, 0.8186666369438171, 0.8546666502952576, 0.8450000286102295, 0.8583333492279053, 0.8396666646003723, 0.82833331823349, 0.8353333473205566, 0.8149999976158142, 0.8616666793823242, 0.8543333411216736, 0.8650000095367432, 0.8429999947547913, 0.8566666841506958, 0.859666645526886, 0.8696666955947876, 0.8460000157356262, 0.8526666760444641, 0.8523333072662354, 0.8616666793823242, 0.8629999756813049]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [7, 2, 5, 3, 7, 3, 0, 2, 5, 2, 8, 9, 4, 0, 7, 3, 3, 2, 7, 5, 0, 7, 9, 0], [0, 1, 0, 0, 1, 0, 2, 2, 2, 1, 3, 0, 0], [83, 12, 93, 1, 11, 64, 11, 47], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.7634285688400269, "mapping_values": [1, 37, 37, 24, 13, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2716855218838456, 1.7880195717313396, 1.4159622755757317, 1.1098392469031764, 1.0278016361326132, 0.8797382235668748, 0.8033036716610071, 0.7773998140769155, 0.7904715019525113, 0.7294324287696207, 0.6924734425236126, 0.6588228320669205, 0.6543631773142373, 0.6333536594110221, 0.6497316590200688], "accuracy": [0.2801479399204254, 0.454629510641098, 0.533350944519043, 0.6017699241638184, 0.6306960582733154, 0.668339729309082, 0.6880200505256653, 0.7029454708099365, 0.7020208835601807, 0.7276449799537659, 0.7347774505615234, 0.7470611333847046, 0.7523444890975952, 0.7588165402412415, 0.7503632307052612], "val_loss": [1.3761044229779924, 1.062634059361049, 1.035574163709368, 0.7132605314254761, 0.6615902526038033, 0.6465280566896711, 0.5653033086231777, 0.6243703535624913, 0.5635992458888462, 0.5031475169318063, 0.5262758902141026, 0.5411416803087506, 0.5329118626458305, 0.47547541345868793, 0.4671686717442104], "val_accuracy": [0.5400000214576721, 0.593666672706604, 0.621999979019165, 0.6966666579246521, 0.6959999799728394, 0.7126666903495789, 0.7386666536331177, 0.718999981880188, 0.7450000047683716, 0.7806666493415833, 0.753333330154419, 0.7696666717529297, 0.7596666812896729, 0.7689999938011169, 0.7746666669845581]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 5, 5, 5, 7, 7, 0, 2, 5, 2, 8, 9, 4, 0], [0, 0, 1, 0, 0, 0, 2, 2], [96, 73, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.26571428775787354, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.102245473212979, 1.6645600958711924, 1.778728284163167, 5.7060360827576355, 2.6504195342997927, 3.0983473461034228, 3.0479391179521245], "accuracy": [0.35001981258392334, 0.4418174624443054, 0.469819039106369, 0.1946902722120285, 0.15110288560390472, 0.14898955821990967, 0.0944393053650856], "val_loss": [1.6729038442884172, 1.0690385273524694, 1.6540666648319788, 2.028700828552246, 1.978933674948556, 4.770478929792132, 1.999445983341762], "val_accuracy": [0.4493333399295807, 0.5686666369438171, 0.36133334040641785, 0.179666668176651, 0.16699999570846558, 0.10000000149011612, 0.09533333033323288]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.2582857012748718, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1021970584644163, 1.6677845712382606, 1.6015275005399277, 1.337025004355285, 2.2242393253375794, 8.06475419148541, 2.5359160923419326], "accuracy": [0.35001981258392334, 0.4435345530509949, 0.4694227874279022, 0.5307092666625977, 0.3811914026737213, 0.14740456640720367, 0.09945846349000931], "val_loss": [1.67375762122018, 1.0796684537615096, 1.0033606801714217, 1.0111480781010218, 1.405177048274449, 2.720329829624721, 2.040738105773926], "val_accuracy": [0.4490000009536743, 0.5606666803359985, 0.546999990940094, 0.5063333511352539, 0.4580000042915344, 0.10100000351667404, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0, 9, 3], [0, 1, 0, 0, 1, 0, 2, 2], [82, 12, 93, 29, 11, 92], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [5, 63, 57, 12]], "fitness": -0.23399999737739563, "mapping_values": [1, 18, 18, 13, 5, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.301478568604751, 2.3015642895155013, 2.3035974257878182, 2.300586012454947, 2.302063317582938, 2.301505301716998, 2.302021262605098, 2.301627127029294, 2.300260283423925, 2.299424438649133, 2.3005963557778317, 2.3000478357167182, 2.29860059570375, 2.2980036413381444, 2.299085284079291, 2.299729243780974, 2.2968145074971584, 2.2985713477179424, 2.2968445825318557, 2.298857575662069, 2.298072453739306, 2.2966000144791217, 2.296870375101545, 2.296525606027668, 2.295441473952185, 2.295948781703898, 2.295377902571457, 2.294310697931671, 2.295128977703396, 2.29542555577247, 2.2957144179411566, 2.2949699993068045, 2.293901893677193, 2.294016357583613, 2.2926043204785085, 2.2934381684071634, 2.2933951769176177, 2.292749617660617, 2.2928561248547523, 2.291012869314542, 2.2922540850658866, 2.2926499335647117, 2.292150586650608, 2.290146067126426, 2.2916278369580088, 2.288862590319949, 2.290745055466091, 2.2920215318483557, 2.2908618340261104, 2.2906455456730304, 2.288804132295023, 2.2900349258069648, 2.2894751773361106, 2.2897943794105378, 2.288219416665836, 2.2888632983957313, 2.2862844978577392, 2.288048691454187, 2.2868108427551332, 2.286248847430865, 2.286604254867076, 2.28799623218683, 2.2855051075856383, 2.286914152035293, 2.285310759882586, 2.2852439007754684, 2.285853712865154, 2.284759775239085, 2.2844252002206162, 2.284122488265969, 2.2856102383383954, 2.284868627034788, 2.2839286082676766, 2.2839863201756567, 2.283494359828761, 2.281210483325046, 2.2826498820403502, 2.283474287509981, 2.2818498388808623, 2.283357690338288, 2.2811479611939065, 2.281801996103855, 2.281324470268343, 2.280742639878706, 2.279657631407891, 2.282149839646875, 2.281688493838982, 2.280940622024375, 2.2799837128235256, 2.2803974071624116, 2.2809547574969486, 2.2794921906742958, 2.279449119260519, 2.2791023542537445, 2.2785601057884732, 2.27694397570356, 2.2784941301306776, 2.2769486157177083, 2.2762796754740044, 2.2773560671490793], "accuracy": [0.0956280529499054, 0.09113723784685135, 0.09047681838274002, 0.09536388516426086, 0.09140139818191528, 0.09576013684272766, 0.09206181764602661, 0.09272222965955734, 0.09840179979801178, 0.09602430462837219, 0.09708096832036972, 0.09602430462837219, 0.10381719470024109, 0.09760929644107819, 0.1010434553027153, 0.10051512718200684, 0.10619468986988068, 0.09985470771789551, 0.09959053993225098, 0.10408136248588562, 0.10408136248588562, 0.10619468986988068, 0.10394927859306335, 0.10593052208423615, 0.10698718577623367, 0.10513802617788315, 0.10976093262434006, 0.11702549457550049, 0.10315678268671036, 0.10606260597705841, 0.11068551242351532, 0.10896842926740646, 0.10777968913316727, 0.107647605240345, 0.10989301651716232, 0.10910051316022873, 0.11887465417385101, 0.1138555034995079, 0.11491216719150543, 0.12257297337055206, 0.11900673806667328, 0.11676132678985596, 0.11861048638820648, 0.12217672914266586, 0.11927089840173721, 0.12798838317394257, 0.12296922504901886, 0.11874257028102875, 0.11966715008020401, 0.12455421686172485, 0.12376172095537186, 0.12415797263383865, 0.1254788041114807, 0.11900673806667328, 0.1270637959241867, 0.1216483935713768, 0.1262712925672531, 0.12732796370983124, 0.12970545887947083, 0.1348566859960556, 0.12640337646007538, 0.13155461847782135, 0.13393211364746094, 0.13313961029052734, 0.1336679458618164, 0.12798838317394257, 0.1398758441209793, 0.1368379294872284, 0.13472460210323334, 0.14212125539779663, 0.12798838317394257, 0.13340377807617188, 0.1402720957994461, 0.1438383311033249, 0.1426495909690857, 0.1442345827817917, 0.1484612375497818, 0.14172500371932983, 0.14317791163921356, 0.14581957459449768, 0.1426495909690857, 0.14278165996074677, 0.14674416184425354, 0.14898955821990967, 0.14819706976413727, 0.13895125687122345, 0.14621582627296448, 0.14212125539779663, 0.15017831325531006, 0.14370624721050262, 0.15097081661224365, 0.15031039714813232, 0.15242372453212738, 0.15242372453212738, 0.1578391194343567, 0.16100911796092987, 0.15400871634483337, 0.15810328722000122, 0.16021661460399628, 0.1604807823896408], "val_loss": [1.9701416151864188, 1.9698997906276159, 1.9696529252188546, 1.9694080352783203, 1.969165665762765, 1.9689222063337053, 1.9686784744262695, 1.968435628073556, 1.968193462916783, 1.9679510934012276, 1.9677092007228307, 1.9674674442836217, 1.967221805027553, 1.9669757570539201, 1.966733523777553, 1.9664910180228097, 1.9662495340619768, 1.9660087312970842, 1.9657655443464006, 1.9655229704720634, 1.9652843475341797, 1.9650415693010603, 1.96480165209089, 1.96456207547869, 1.9643205915178572, 1.9640801974705286, 1.96383912222726, 1.9635968889508928, 1.9633566992623466, 1.9631174632481165, 1.9628775460379464, 1.9626366751534599, 1.9623973710196358, 1.9621569769723075, 1.961916174207415, 1.9616742815290178, 1.9614362035478865, 1.961195809500558, 1.9609543255397253, 1.9607161794389998, 1.9604764665876115, 1.9602375711713518, 1.9599998337881905, 1.959761074611119, 1.9595205443246024, 1.9592818532671248, 1.9590423447745187, 1.9588030406406947, 1.9585654394967216, 1.9583292688642229, 1.9580906459263392, 1.9578526360648019, 1.9576112202235632, 1.9573705536978585, 1.9571287972586495, 1.9568899699619837, 1.9566501889910017, 1.956411906651088, 1.9561711038861955, 1.955932685307094, 1.9556923593793596, 1.9554532596043177, 1.955211911882673, 1.9549689974103654, 1.9547295570373535, 1.954491410936628, 1.9542513574872697, 1.9540111677987235, 1.953770433153425, 1.9535307884216309, 1.9532894406999861, 1.9530473436628069, 1.9528101512363978, 1.952568803514753, 1.9523269108363561, 1.9520854949951172, 1.9518455096653529, 1.9516067504882812, 1.9513632229396276, 1.951122556413923, 1.9508799825395857, 1.9506421089172363, 1.9504006249564034, 1.9501566886901855, 1.9499150003705705, 1.9496750150408064, 1.9494365964617049, 1.9491956574576241, 1.9489572388785226, 1.9487157549176897, 1.9484750202723913, 1.9482314927237374, 1.9479870796203613, 1.9477454594203405, 1.9475006375994002, 1.9472557476588659, 1.9470114707946777, 1.946767807006836, 1.9465201241629464, 1.9462756429399763], "val_accuracy": [0.03700000047683716, 0.039000000804662704, 0.04233333468437195, 0.04333333298563957, 0.04466666653752327, 0.046666666865348816, 0.04800000041723251, 0.049666665494441986, 0.05166666582226753, 0.05299999937415123, 0.0573333315551281, 0.058666665107011795, 0.06066666543483734, 0.06233333423733711, 0.06533333659172058, 0.06533333659172058, 0.06800000369548798, 0.06833333522081375, 0.07000000029802322, 0.07233333587646484, 0.07500000298023224, 0.07699999958276749, 0.07999999821186066, 0.08233333379030228, 0.08366666734218597, 0.08500000089406967, 0.08666666597127914, 0.08866667002439499, 0.09066666662693024, 0.09266666322946548, 0.09399999678134918, 0.0949999988079071, 0.0963333323597908, 0.09799999743700027, 0.10166666656732559, 0.10333333164453506, 0.10499999672174454, 0.10766666382551193, 0.10899999737739563, 0.11033333092927933, 0.11233333498239517, 0.11566666513681412, 0.11900000274181366, 0.12066666781902313, 0.12300000339746475, 0.12566666305065155, 0.12800000607967377, 0.12933333218097687, 0.13099999725818634, 0.13433332741260529, 0.1353333294391632, 0.13833333551883698, 0.140666663646698, 0.14499999582767487, 0.1469999998807907, 0.1509999930858612, 0.1536666601896286, 0.15733332931995392, 0.16066665947437286, 0.16300000250339508, 0.16733333468437195, 0.17000000178813934, 0.17133332788944244, 0.1733333319425583, 0.1770000010728836, 0.18000000715255737, 0.18199999630451202, 0.18400000035762787, 0.1860000044107437, 0.18799999356269836, 0.19033333659172058, 0.1926666647195816, 0.1940000057220459, 0.19633333384990692, 0.19699999690055847, 0.1993333399295807, 0.20100000500679016, 0.20366667211055756, 0.20600000023841858, 0.2096666693687439, 0.2133333384990692, 0.21533332765102386, 0.21566666662693024, 0.2163333296775818, 0.21899999678134918, 0.22033333778381348, 0.22300000488758087, 0.2253333330154419, 0.22766666114330292, 0.23000000417232513, 0.23199999332427979, 0.23600000143051147, 0.23733332753181458, 0.24133333563804626, 0.2423333376646042, 0.24433332681655884, 0.2460000067949295, 0.24799999594688416, 0.2486666738986969, 0.2513333261013031]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [7, 1, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [83, 12, 93, 29, 11], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 9, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [44405632.22287673, 855527989.1205918, 3999221201.8111215, 10928928226.988245, 23561775339.340115, 43346650079.13354], "accuracy": [0.09879804402589798, 0.09853387624025345, 0.10117553919553757, 0.10355303436517715, 0.10011887550354004, 0.09681680053472519], "val_loss": [167357522.2857143, 1337636717.7142856, 4513155218.285714, 10696212772.571428, 20889165824.0, 36094285531.42857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 2, 5, 6, 7, 3, 0, 2, 5, 5, 2, 2, 8, 0, 3, 7, 1, 8, 1, 4, 4, 9, 4, 3, 0, 8, 3, 4, 7, 2, 6, 0], [0, 0, 3, 1, 0, 0, 2, 2, 2, 2], [83, 56, 93, 29, 11, 57, 34], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [79, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad))))), tf.math.add(grad, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1221134839.042319, 23551098698.761063, 110125352294.82605, 300989295639.66925, 648956033204.4274, 1193943590022.8472], "accuracy": [0.09879804402589798, 0.09853387624025345, 0.10117553919553757, 0.10355303436517715, 0.10011887550354004, 0.09681680053472519], "val_loss": [4605131337.142858, 36829952877.71429, 124288064365.71428, 294595882422.8571, 575361833837.7142, 994208457874.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 6, 0], [0, 1, 0, 0, 0, 2, 2, 2], [96, 12, 93, 29, 66, 31], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [99], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 2, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 14, 6, 6, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 13, 7, 6, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(grad))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(beta), alpha), tf.math.add(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2341475.0267073894, 2.5717369818243414, 2.4422849778722164, 2.4716357772911794, 2.4868057314210548, 2.5542427474135154], "accuracy": [0.09998679161071777, 0.09655263274908066, 0.09932637959718704, 0.09932637959718704, 0.09721305221319199, 0.09787346422672272], "val_loss": [2.2066221918378557, 2.161868095397949, 2.05546236038208, 2.0691076006208147, 2.1833421162196567, 2.0271808760506764], "val_accuracy": [0.10100000351667404, 0.0963333323597908, 0.10066666454076767, 0.10100000351667404, 0.0963333323597908, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [44405632.22287673, 855527989.1205918, 3999221201.8111215, 10928928226.988245, 23561775339.340115, 43346650079.13354], "accuracy": [0.09879804402589798, 0.09853387624025345, 0.10117553919553757, 0.10355303436517715, 0.10011887550354004, 0.09681680053472519], "val_loss": [167357522.2857143, 1337636717.7142856, 4513155218.285714, 10696212772.571428, 20889165824.0, 36094285531.42857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 1, 0, 0, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 1, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 14, 9, 5, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.square(alpha))))), tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022640089333066, 2.3024658656721777, 2.302433678723125, 2.302440206089103, 2.3023693190274725, 2.302458180160633, 2.3024646952766012, 2.3026550751100237], "accuracy": [0.10659094154834747, 0.10777968913316727, 0.109232597053051, 0.10751552134752274, 0.10870426893234253, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736691202436174, 1.9736746379307337, 1.9736559731619698, 1.9736850602286202, 1.973782743726458, 1.9738517488752092, 1.974057606288365, 1.9742772919791085], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.10366666316986084, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 9, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 7, 0, 2, 2, 1, 4, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 91, 44, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [140184904.6125214, 2290811524.8860126, 10220048455.954563, 27399391760.297977, 58401579553.33985, 106766007131.93819], "accuracy": [0.09879804402589798, 0.09853387624025345, 0.10117553919553757, 0.10355303436517715, 0.10011887550354004, 0.09681680053472519], "val_loss": [399558189.71428573, 3194282203.428571, 10778322066.285715, 25545713956.57143, 49890595401.14286, 86207273837.71428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 5, 5, 2, 9, 3, 0, 2, 5, 2, 0, 9, 4, 0], [0, 1, 2, 0, 2, 2, 2, 2], [83, 56, 93, 29, 11, 57, 34], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.797748399150234e+25, 2.4389936731885435, 2.7254483734123807, 3.736965465318919, 5.7386787992978, 8.078996526062875], "accuracy": [0.061814818531274796, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0528327396937778, 2.187520299639021, 2.70023352759225, 4.139398302350726, 6.1101740428379605, 8.148074558803014], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 2, 4, 0, 7, 3, 7, 8, 4, 6, 7, 5], [2, 1, 3, 0, 0, 0, 2, 2, 3, 1, 3, 3, 3], [83, 12, 67, 29, 11, 64], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 22, 13, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), grad))))), grad))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(grad)))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3028626770406997, 2.302937006323707, 2.302960756164831, 2.3028964791016384, 2.303091165994562, 2.3030729937814782, 2.303142675649945, 2.303013858573469, 2.3030756777618633], "accuracy": [0.0944393053650856, 0.09694888442754745, 0.09721305221319199, 0.09813763201236725, 0.09536388516426086, 0.09377889335155487, 0.09232597798109055, 0.09509972482919693, 0.09787346422672272], "val_loss": [1.9735727991376604, 1.9735607419695174, 1.9736003875732422, 1.9736154420035226, 1.973522458757673, 1.9736663273402624, 1.973681926727295, 1.973627976008824, 1.9736622401646204], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10100000351667404, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10300000011920929, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 9, 0, 2, 5, 2, 8, 9, 4, 0, 1], [0, 1, 3, 0, 0, 0, 2, 2], [96, 12, 93, 29, 0, 69], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 15, 6, 6, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 11, 7, 4, 3], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, grad)))))))))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 1, 8, 5, 1, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [28, 12, 93, 29], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [0, 3, 0, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [21, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(alpha))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.302428569555629, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [2, 7, 8, 5, 2, 9, 0, 2, 5, 2, 8, 9, 4, 0], [0, 1, 3, 0, 0, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 12, 4, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 2, 5, 5, 0, 9, 0, 2, 5, 2, 8, 3, 0, 0, 7, 3], [0, 2, 0, 0, 1, 0, 2, 2], [83, 56, 93, 62, 11, 57, 34], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [5, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 21, 21, 15, 6, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3015856029901993, 2.30192825920499, 2.304231702502, 2.3014796563363773, 2.303209258738195, 2.30292198522893], "accuracy": [0.09549596905708313, 0.09087307006120682, 0.08889182657003403, 0.0940430611371994, 0.08928807079792023, 0.09245806187391281], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]