[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8197143077850342, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0516392032877486, 1.8972725019226961, 1.4336013768122668, 1.0256114693649094, 0.816103365214714, 0.7525971905902675, 0.7133073315896283, 0.6811857426312967, 0.6505664609379505, 0.6122090389164542, 0.6001730813971915, 0.5933576303308729, 0.5809040849258588, 0.5738757290639867, 0.5356749983480058, 0.5281259548930192, 0.5117600186074871, 0.5227717805799948, 0.46895228108048453, 0.5071925700946869, 0.47088115529188346, 0.471276565026204, 0.4524230938766453, 0.46863633728833515, 0.42804410798973835, 0.4475792730607219, 0.4207195688972478], "accuracy": [0.31620657444000244, 0.3564918637275696, 0.529388427734375, 0.6149781942367554, 0.689869225025177, 0.7099458575248718, 0.7231541275978088, 0.7349095344543457, 0.7445515990257263, 0.7622507214546204, 0.7693831920623779, 0.7714964747428894, 0.7754589915275574, 0.7828556299209595, 0.7943468689918518, 0.7967243194580078, 0.8042530417442322, 0.8005547523498535, 0.8285563588142395, 0.8049134612083435, 0.8203672170639038, 0.8244617581367493, 0.8277638554573059, 0.8208954930305481, 0.8441421389579773, 0.8257825970649719, 0.844010055065155], "val_loss": [1.3728314467838831, 1.5679476601736886, 0.9764819145202637, 0.678117036819458, 0.6082097121647426, 0.5671545607703072, 0.5003764118467059, 0.5005233287811279, 0.5087714195251465, 0.4976172958101545, 0.4483196905681065, 0.47873025281088694, 0.4210333057812282, 0.40277295453207834, 0.4352073924882071, 0.415860721043178, 0.40488602433885845, 0.3822499173028128, 0.38647620167051044, 0.3667264921324594, 0.39534151554107666, 0.3537129419190543, 0.3849777238709586, 0.35503530502319336, 0.37135296208517893, 0.34715031726019724, 0.3384515813418797], "val_accuracy": [0.5443333387374878, 0.5116666555404663, 0.5596666932106018, 0.7009999752044678, 0.7149999737739563, 0.7516666650772095, 0.7743333578109741, 0.7773333191871643, 0.7570000290870667, 0.7576666474342346, 0.7893333435058594, 0.7683333158493042, 0.8053333163261414, 0.8266666531562805, 0.8016666769981384, 0.8176666498184204, 0.828000009059906, 0.8303333520889282, 0.8410000205039978, 0.843666672706604, 0.8199999928474426, 0.8610000014305115, 0.828000009059906, 0.8500000238418579, 0.8366666436195374, 0.8576666712760925, 0.8569999933242798]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8174285888671875, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0514877243694487, 1.8992217674136964, 1.5184965357568208, 1.0123659471683908, 0.8277887815434651, 0.7721299157638938, 0.693993085521229, 0.6779541575976367, 0.6706584701527379, 0.6041325551014, 0.5946377542324038, 0.5987366819032164, 0.5766949901184338, 0.5468303561761725, 0.536170239091754, 0.5368163729734299, 0.5171356746045401, 0.5247548337720247, 0.47014635297852486, 0.5067026452727841, 0.47263774682407633, 0.47115509832980784, 0.4568742965670971, 0.45067508372459364, 0.4273705256770961, 0.4666406048318855, 0.42195109852379686, 0.43298256229557586, 0.4252948685368495], "accuracy": [0.3163386583328247, 0.3551710546016693, 0.50350022315979, 0.6276581883430481, 0.6861709356307983, 0.7066437602043152, 0.7292299270629883, 0.7325320243835449, 0.7392682433128357, 0.7675340175628662, 0.7677981853485107, 0.7697794437408447, 0.7759873270988464, 0.7926297783851624, 0.7981772422790527, 0.793422281742096, 0.7993659973144531, 0.7956677079200745, 0.8247259259223938, 0.8064984679222107, 0.8207634687423706, 0.8224804997444153, 0.8265751004219055, 0.8317263126373291, 0.8411042094230652, 0.8222163319587708, 0.839519202709198, 0.8393871188163757, 0.837537944316864], "val_loss": [1.3725379194532121, 1.610813856124878, 0.9552638871329171, 0.6132028102874756, 0.6309732879911151, 0.5435443775994437, 0.5499003103801182, 0.5896893399102348, 0.4831086737768991, 0.4900929927825928, 0.44691923686436247, 0.4709448644093105, 0.41057547501155306, 0.40278227840151104, 0.4528625522341047, 0.42178748335157124, 0.4150727902139936, 0.38210876498903545, 0.37948972838265554, 0.37208713803972515, 0.3628181985446385, 0.3586701921054295, 0.38968877281461445, 0.3415372797421047, 0.42119858094624113, 0.35077364104134695, 0.3422227842467172, 0.3473779729434422, 0.3712425913129534], "val_accuracy": [0.5450000166893005, 0.5026666522026062, 0.6016666889190674, 0.7213333249092102, 0.7043333053588867, 0.7580000162124634, 0.7450000047683716, 0.7260000109672546, 0.7773333191871643, 0.7596666812896729, 0.7919999957084656, 0.7730000019073486, 0.8230000138282776, 0.828000009059906, 0.7863333225250244, 0.812333345413208, 0.8159999847412109, 0.8346666693687439, 0.846666693687439, 0.8389999866485596, 0.8386666774749756, 0.8566666841506958, 0.8273333311080933, 0.8640000224113464, 0.8090000152587891, 0.8576666712760925, 0.8550000190734863, 0.8560000061988831, 0.8339999914169312]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.800000011920929, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.051645759515255, 1.901597401894567, 1.4938045693363387, 1.0333723125676941, 0.8223125091349807, 0.7555495087244822, 0.6889798742133582, 0.6856140115194632, 0.6284759764217225, 0.6341712887749114, 0.6042335769440819, 0.5853075862891324, 0.572350273908893, 0.5621817292097679, 0.5312103511650706, 0.5336406747615569, 0.517668703165761, 0.5227569400311587, 0.470285590601761], "accuracy": [0.3163386583328247, 0.3541143834590912, 0.5116893649101257, 0.6126006841659546, 0.6865671873092651, 0.7164179086685181, 0.7296261787414551, 0.7292299270629883, 0.763967752456665, 0.7547219395637512, 0.7667415142059326, 0.7766477465629578, 0.7750627398490906, 0.7890635132789612, 0.7967243194580078, 0.7936864495277405, 0.8005547523498535, 0.7989697456359863, 0.8290846943855286], "val_loss": [1.3724617276872908, 1.6152119295937675, 0.9781647409711566, 0.6158746480941772, 0.6044246809823173, 0.5375886304037911, 0.5148533071790423, 0.48429369926452637, 0.5124370881489345, 0.4663276842662266, 0.44903647899627686, 0.4659562281199864, 0.4253185732024057, 0.3994887045451573, 0.4439071757452829, 0.4172444428716387, 0.4064456394740513, 0.38294912236077444, 0.3988003305026463], "val_accuracy": [0.5446666479110718, 0.5009999871253967, 0.5713333487510681, 0.7409999966621399, 0.7173333168029785, 0.7613333463668823, 0.7603333592414856, 0.7903333306312561, 0.749666690826416, 0.8016666769981384, 0.7856666445732117, 0.7726666927337646, 0.8180000185966492, 0.8333333134651184, 0.7933333516120911, 0.8186666369438171, 0.8246666789054871, 0.831333339214325, 0.8180000185966492]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 63, 57, 12]], "fitness": -0.7942857146263123, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.274600700915781, 2.1785154077811817, 1.9801408565590772, 1.6595341463949325, 1.3797070614146267, 1.2033082970759148, 1.0962514620824906, 1.02079865511587, 0.9693060391819346, 0.9182028892710696, 0.8891061746512012, 0.8731468079616334, 0.854959646086604, 0.8243682282774943, 0.8124984243463736, 0.7879143785869819, 0.7717026596638694, 0.7642677266914862, 0.7570634310460598, 0.7444157234477077, 0.7287095406303915, 0.720112612549466, 0.7169426002317904, 0.710041168713535, 0.700854930942557, 0.6910153306344591, 0.6934804063053683, 0.6787991443046915, 0.6783781031953849, 0.6770556797803023, 0.6713924893471921, 0.6607452190830849, 0.6568370085382317, 0.6603815328128554, 0.6555392619105788, 0.6491057738305523, 0.6413360521651971, 0.6265243305474728, 0.631839997252579, 0.6264265629247258, 0.628127305837686, 0.6247220696900357, 0.614726013526972, 0.6151251743388072, 0.6129186149475486, 0.613213034558526], "accuracy": [0.15559370815753937, 0.334169864654541, 0.4135517179965973, 0.4773477613925934, 0.5383700728416443, 0.5791836977005005, 0.613789439201355, 0.6415268778800964, 0.6596222519874573, 0.6790384650230408, 0.6826046705245972, 0.687491774559021, 0.6954167485237122, 0.7051908373832703, 0.7049266695976257, 0.7190595865249634, 0.7220974564552307, 0.7280412316322327, 0.7304186820983887, 0.7301545143127441, 0.7388719916343689, 0.7395324110984802, 0.7396644949913025, 0.7442874312400818, 0.7475894689559937, 0.7508915662765503, 0.7467969655990601, 0.7519482374191284, 0.7511557340621948, 0.7528728246688843, 0.7559106945991516, 0.7605336308479309, 0.7606657147407532, 0.7569673657417297, 0.7601373791694641, 0.7651565074920654, 0.7648923397064209, 0.7733456492424011, 0.767401933670044, 0.772288978099823, 0.7728173136711121, 0.7777044177055359, 0.77677983045578, 0.7667415142059326, 0.7763835787773132, 0.7770439982414246], "val_loss": [1.9000325202941895, 1.7654151916503906, 1.4877437523433141, 1.149113416671753, 0.9300217628479004, 0.8083043609346662, 0.733703647341047, 0.6891418695449829, 0.6666506358555385, 0.6261655603136335, 0.6176917893545968, 0.5907549176897321, 0.5788474082946777, 0.5588538306100028, 0.5520563806806292, 0.5395582062857491, 0.5315237045288086, 0.5225486925670079, 0.5143573795046125, 0.5114457096372332, 0.5054986476898193, 0.4985436030796596, 0.4941168853214809, 0.48862053666796, 0.49191159861428396, 0.47894970008305143, 0.4701995168413435, 0.47186740807124544, 0.4715958833694458, 0.4714451517377581, 0.4611885036740984, 0.4548921585083008, 0.45460658414023264, 0.45039522647857666, 0.44884187834603445, 0.4471299648284912, 0.4439570052283151, 0.4465036562510899, 0.44380247592926025, 0.4370013730866568, 0.43617001601627897, 0.43391822065625874, 0.42761056763785227, 0.4342555659157889, 0.4282991034643991, 0.42466728176389423], "val_accuracy": [0.40666666626930237, 0.5220000147819519, 0.5666666626930237, 0.6223333477973938, 0.6786666512489319, 0.6973333358764648, 0.7146666646003723, 0.7166666388511658, 0.7310000061988831, 0.746666669845581, 0.75, 0.7636666893959045, 0.7509999871253967, 0.7680000066757202, 0.7609999775886536, 0.7720000147819519, 0.7753333449363708, 0.7799999713897705, 0.7789999842643738, 0.7826666831970215, 0.7906666398048401, 0.7923333048820496, 0.7910000085830688, 0.7963333129882812, 0.7873333096504211, 0.7996666431427002, 0.8080000281333923, 0.79666668176651, 0.8040000200271606, 0.7990000247955322, 0.8103333115577698, 0.8106666803359985, 0.812666654586792, 0.8169999718666077, 0.812666654586792, 0.8133333325386047, 0.8193333148956299, 0.8063333630561829, 0.8176666498184204, 0.8180000185966492, 0.8226666450500488, 0.8199999928474426, 0.8216666579246521, 0.8136666417121887, 0.8216666579246521, 0.8209999799728394]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [3, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.5720000267028809, "mapping_values": [1, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad))))))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.192372603643808, 1.9528185533982825, 1.8676445261519803, 2.0714537412136806, 2.0091907079461353, 2.6298215701957623, 2.5336301101905763], "accuracy": [0.310130774974823, 0.3197728097438812, 0.4313828945159912, 0.34024566411972046, 0.3879276216030121, 0.26376965641975403, 0.1294412910938263], "val_loss": [1.9690728868756975, 1.0747353008815221, 1.6482084819248743, 1.144200665610177, 2.4829109055655345, 2.0078761918204173, 2.045419011797224], "val_accuracy": [0.09733333438634872, 0.5950000286102295, 0.36033332347869873, 0.5569999814033508, 0.4246666729450226, 0.18166667222976685, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [37036263.119116135, 716629203.0114912, 3262255267.38555, 9095117117.438648, 19635135059.11293, 35586173869.08995], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09893012791872025, 0.09879804402589798, 0.10117553919553757, 0.09642054885625839], "val_loss": [138408329.14285713, 1106185801.142857, 3732170605.714286, 8845200237.714285, 17274085961.142857, 29847691849.142857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [53, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [308465633.07724583, 5973700572.022718, 27200417367.846783, 75843122258.36903, 163745443999.59848, 296779340559.1145], "accuracy": [0.09021265059709549, 0.09998679161071777, 0.09893012791872025, 0.09879804402589798, 0.10117553919553757, 0.09628847241401672], "val_loss": [1153356324.5714285, 9222439789.714285, 31120813494.857143, 73762001481.14285, 144059587437.7143, 248926802505.14285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [74, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(beta)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 6, 1, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(sigma, alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [328649.14100253826, 2.313912541685859, 2.305341758842655, 2.3035199956461865, 2.3031462804595035, 2.3032068072245844], "accuracy": [0.0952318087220192, 0.09734513610601425, 0.09893012791872025, 0.09285431355237961, 0.09509972482919693, 0.09694888442754745], "val_loss": [1.9889960289001465, 1.9773108618600028, 1.974390642983573, 1.9739893504551478, 1.9736955506461007, 1.973576886313302], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.09666666388511658, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302749337175062, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.add(alpha, alpha)))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(beta, alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [55, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1226070.1818189984, 2.305600824798213, 2.304408187076416, 2.303755479229912, 2.303379866929181, 2.303148691066268], "accuracy": [0.09496764093637466, 0.09800554811954498, 0.09787346422672272, 0.09008057415485382, 0.09998679161071777, 0.09536388516426086], "val_loss": [1.9766161782400948, 1.9754086221967424, 1.9746864182608468, 1.974339485168457, 1.9740262031555176, 1.9738507952008928], "val_accuracy": [0.10300000011920929, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1], [6, 4, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 0, 1, 0, 2, 0, 2, 2], [55, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [0, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3030662026781337, 2.3029530926655153, 2.3029210523701837, 2.303010538820703, 2.302990321706173, 2.303196426805268, 2.303004627923105, 2.3029240236747155, 2.302892533685112], "accuracy": [0.09074098616838455, 0.09192973375320435, 0.09893012791872025, 0.09074098616838455, 0.09377889335155487, 0.09325055778026581, 0.09787346422672272, 0.09721305221319199, 0.09906221181154251], "val_loss": [1.9736036573137556, 1.973680019378662, 1.973653929574149, 1.9737242289951868, 1.9736779076712472, 1.9735676220485143, 1.9735715729849679, 1.9737203461783273, 1.9736806324550085], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10366666316986084, 0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.09733333438634872, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 0, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [6, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 1, 2, 2, 7, 0, 0, 9, 0, 8], [3, 1, 3, 0, 3, 1, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 8, 7, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(sigma, alpha), tf.math.add(tf.math.add(sigma, tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(alpha))), tf.math.negative(beta))", "other_info": {"loss": [2.3037770029072275, 2.3155247671981103, 2.3315273020576415, 2.2996533573952836e+19, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.07885351777076721, 0.07106062769889832, 0.08294808864593506, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9759511266435896, 1.984722682407924, 2.006577696119036, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02433333359658718, 0.04100000113248825, 0.09600000083446503, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [6, 0, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0], [5, 3, 1, 4, 5, 4, 0], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [64, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 12, 8, 7, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [43, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [99, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 3, 2, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 1, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [25, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 3, 1, 0, 2, 0, 2, 2], [74, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [2, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 7, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 1, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [78, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(sigma, alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014857565895315, 2.303944015515526, 2.303019523179731, 2.302444027903341, 2.3020103118517583, 2.303360989317052], "accuracy": [0.09391097724437714, 0.09060890227556229, 0.08532558381557465, 0.08875974267721176, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]