[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2727704710098164, 2.1778847716188765, 1.978599299434752, 1.6576964466594797, 1.3716736644596992, 1.1946631807299055, 1.0885473607616527, 1.0081136282629357, 0.9653907084918497, 0.9163829128125939, 0.884678641031321, 0.8490547045835052, 0.8476836459905307, 0.8152961351568861, 0.8009948958306343, 0.7845133488141409, 0.7764790855173925, 0.7624963512588816, 0.7454153446473497, 0.7454391773964798, 0.7350607758987975, 0.7262759098854237, 0.7168958459815581, 0.7070588058389929, 0.7073755278059551, 0.6911451221142211, 0.6858281450280423, 0.6819294874363603, 0.6784941347094732, 0.6829915283740614, 0.6672371687937595, 0.665667976858814, 0.6459105001810976, 0.6459367704696942, 0.6502078347879394, 0.6383300105956379, 0.6427538105289241, 0.6341189537554086, 0.6331522740771065, 0.6219921895399888, 0.6316513972448682, 0.6199485751316925, 0.6244616053438521, 0.6258827814289355, 0.6134878047122585, 0.6039064357766007, 0.6129271087157114, 0.6024477429960571, 0.5959506644359936, 0.5984452985942544, 0.5817494660934768, 0.5895724757126121, 0.5835014989016756, 0.5928303604553625, 0.5888810004808206, 0.5734230885573697, 0.5903409448014495, 0.5765811245297523], "accuracy": [0.17183992266654968, 0.3209615647792816, 0.41487252712249756, 0.4823669195175171, 0.54220050573349, 0.5893540978431702, 0.6169594526290894, 0.6472064256668091, 0.6563201546669006, 0.6774534583091736, 0.6836613416671753, 0.6985867023468018, 0.6925109028816223, 0.7038700580596924, 0.7099458575248718, 0.7177387475967407, 0.7162858247756958, 0.717870831489563, 0.7322678565979004, 0.7244749665260315, 0.7329282760620117, 0.7339849472045898, 0.7408532500267029, 0.7390040755271912, 0.7408532500267029, 0.7497028112411499, 0.7504953145980835, 0.7504953145980835, 0.7504953145980835, 0.7563069462776184, 0.7600052952766418, 0.7592127919197083, 0.7642319202423096, 0.7584202885627747, 0.7640998363494873, 0.7652885913848877, 0.7668735980987549, 0.7662131786346436, 0.7701756954193115, 0.7754589915275574, 0.7683265209197998, 0.7695152759552002, 0.7753269076347351, 0.7672698497772217, 0.7771760821342468, 0.7770439982414246, 0.7765156626701355, 0.7774402499198914, 0.7810064554214478, 0.7788931727409363, 0.7837802171707153, 0.7852331399917603, 0.7852331399917603, 0.7817989587783813, 0.7849689722061157, 0.7917051911354065, 0.7848368883132935, 0.7884030938148499], "val_loss": [1.8992250987461634, 1.7640953745160783, 1.4854552405221122, 1.1492011206490653, 0.9255077838897705, 0.8051771436418805, 0.7293480634689331, 0.6847105877740043, 0.658473287309919, 0.6259749787194389, 0.6057197366441999, 0.5861631802150181, 0.578452331679208, 0.5746850967407227, 0.547325679234096, 0.5401914971215385, 0.535828675542559, 0.5335121495383126, 0.533160924911499, 0.5200433220182147, 0.5146570035389492, 0.5051999092102051, 0.4906202384403774, 0.49749107020241873, 0.48409805979047504, 0.4950330598013742, 0.47578961508614676, 0.4725103718893869, 0.46520749160221647, 0.4696923153741019, 0.4689621925354004, 0.46017285755702425, 0.45697743552071707, 0.4563966138022287, 0.4595471961157663, 0.4521665402821132, 0.44736858776637484, 0.4463742290224348, 0.44146052428654264, 0.4400921378816877, 0.445198655128479, 0.4359722648348127, 0.44996472767421175, 0.4328348125730242, 0.4271790555545262, 0.4304089971951076, 0.427428526537759, 0.42562746150153025, 0.42806332451956614, 0.4240837778363909, 0.41815946783338276, 0.41725960799625944, 0.415525027683803, 0.4135561670575823, 0.4121568032673427, 0.40739675079073223, 0.4114638226372855, 0.41750530685697285], "val_accuracy": [0.38733333349227905, 0.5009999871253967, 0.5730000138282776, 0.624666690826416, 0.6620000004768372, 0.6956666707992554, 0.7080000042915344, 0.7193333506584167, 0.7356666922569275, 0.7416666746139526, 0.7543333172798157, 0.7553333044052124, 0.7583333253860474, 0.7429999709129333, 0.7696666717529297, 0.7716666460037231, 0.7710000276565552, 0.7663333415985107, 0.7606666684150696, 0.7773333191871643, 0.765999972820282, 0.7760000228881836, 0.7823333144187927, 0.7749999761581421, 0.796999990940094, 0.7850000262260437, 0.7906666398048401, 0.7963333129882812, 0.7990000247955322, 0.7940000295639038, 0.796999990940094, 0.8023333549499512, 0.8023333549499512, 0.812333345413208, 0.7910000085830688, 0.8040000200271606, 0.8083333373069763, 0.8136666417121887, 0.8176666498184204, 0.8193333148956299, 0.8146666884422302, 0.809333324432373, 0.8026666641235352, 0.8159999847412109, 0.8206666707992554, 0.8190000057220459, 0.8220000267028809, 0.8266666531562805, 0.8176666498184204, 0.8276666402816772, 0.8259999752044678, 0.8276666402816772, 0.8316666483879089, 0.8299999833106995, 0.8209999799728394, 0.831333339214325, 0.8273333311080933, 0.8223333358764648]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 1, 9, 4, 0], [3, 1, 1, 0, 1, 1, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [3, 51, 56, 45]], "fitness": -0.3162856996059418, "mapping_values": [1, 12, 12, 7, 5, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.291616459564211, 2.2378296925485914, 2.297548626833084, 2.3675305650943086, 2.346932547329565, 2.345897375269809, 2.345003987190006], "accuracy": [0.1810857206583023, 0.20776647329330444, 0.19733192026615143, 0.14991414546966553, 0.09893012791872025, 0.10289261490106583, 0.1022322028875351], "val_loss": [1.9456956045968192, 1.9146786417279924, 2.00287880216326, 1.9975929260253906, 2.00340005329677, 2.0018040112086704, 1.9999337877546037], "val_accuracy": [0.20100000500679016, 0.26366665959358215, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [26, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 8, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 32, 45]], "fitness": -0.14228571951389313, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.negative(alpha))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3025707350179045, 2.3018035853401924, 2.3020549494403624, 2.3011013919241816, 2.302251303342387, 2.300231627626914, 2.301035121699303, 2.2999378210203036, 2.300456535546944, 2.2999705525437175, 2.301786236837949, 2.300456701347211, 2.3010322795394798, 2.2986111692575464, 2.299269494757188, 2.299101013564761, 2.29726732827417, 2.2992484289594315, 2.2986425997920876, 2.2966404773335274, 2.299357737154615, 2.298420841132393, 2.2980077499411817, 2.2983270414816217, 2.2968928331491765, 2.2967079032791635, 2.2959622050068553, 2.2961300569140537, 2.2944264018603318, 2.2970329263757927, 2.296935763829546, 2.2954930447316553, 2.295487033346184, 2.2956281756334427, 2.294635021738514, 2.2950903076647515, 2.2936195005530995, 2.294916168479179, 2.2938794427465345, 2.294125711377806, 2.292853520704125, 2.294163828119075, 2.29308764919739, 2.294227741870268, 2.2939365208975597, 2.2947044547018893, 2.2928475788823364, 2.293302999275267, 2.2929492368674187, 2.292823340867284, 2.292310768319411, 2.29275840932604, 2.2912765617116158, 2.2922205362872927, 2.2906737330094966, 2.292197794599965, 2.29117616135226, 2.2911242285519227, 2.2910212472823193, 2.2913261238673046, 2.2912371029486636, 2.291140055502127, 2.2908864772047397, 2.2905781038874067, 2.2917922961162365, 2.2903153985451397, 2.2897977710888133, 2.2882643048285556, 2.2901866990246744, 2.2889116102631033, 2.288964884581268, 2.289451955347612, 2.288735285379694, 2.2883014294449615, 2.287876443210421, 2.288359030347065, 2.287606923618904, 2.2885759377822805, 2.287623474201459, 2.2875259806215174, 2.2862822716309488, 2.2887947442210064, 2.287073276644732, 2.2860089258479404, 2.286303179217777, 2.2860690539051056, 2.286149801437676, 2.286493895280914, 2.2867382956754105, 2.2850755378948366, 2.2857882891821113, 2.284968539157233, 2.284862838920711, 2.284780888241894, 2.2838918278482154, 2.284770641690941, 2.282989111621823, 2.283794429402672, 2.2830261153756606, 2.285688272981816], "accuracy": [0.09219389408826828, 0.0886276587843895, 0.0886276587843895, 0.09470347315073013, 0.09430722147226334, 0.09140139818191528, 0.09113723784685135, 0.09615638852119446, 0.09457138925790787, 0.09932637959718704, 0.08981640636920929, 0.09998679161071777, 0.09325055778026581, 0.09496764093637466, 0.09840179979801178, 0.09972262382507324, 0.09972262382507324, 0.1010434553027153, 0.10236428678035736, 0.10606260597705841, 0.09866596013307571, 0.09642054885625839, 0.1022322028875351, 0.10038304328918457, 0.10579843819141388, 0.10738343745470047, 0.10342095047235489, 0.1088363528251648, 0.10791176557540894, 0.10606260597705841, 0.11002509295940399, 0.11002509295940399, 0.11108175665140152, 0.11015717685222626, 0.10791176557540894, 0.11108175665140152, 0.1088363528251648, 0.11372341960668564, 0.11478008329868317, 0.11438383162021637, 0.11861048638820648, 0.11028926074504852, 0.1154404953122139, 0.10870426893234253, 0.11517632752656937, 0.10645885765552521, 0.11227050423622131, 0.11174217611551285, 0.11530841141939163, 0.11372341960668564, 0.11847840249538422, 0.11478008329868317, 0.11993131786584854, 0.11900673806667328, 0.12336547672748566, 0.12217672914266586, 0.11649715900421143, 0.11940298229455948, 0.12230881303548813, 0.12481838464736938, 0.11913882195949554, 0.11662924289703369, 0.12362963706254959, 0.11861048638820648, 0.11966715008020401, 0.12521463632583618, 0.13234710693359375, 0.13155461847782135, 0.12032756209373474, 0.1270637959241867, 0.11768590658903122, 0.1228371411561966, 0.12495046854019165, 0.12415797263383865, 0.12679962813854218, 0.12376172095537186, 0.12455421686172485, 0.12851670384407043, 0.1298375427722931, 0.13261127471923828, 0.13697001338005066, 0.13195087015628815, 0.13181878626346588, 0.12878087162971497, 0.13234710693359375, 0.1340641975402832, 0.13459251821041107, 0.13247919082641602, 0.13630960881710052, 0.13340377807617188, 0.136045441031456, 0.13815876841545105, 0.13419628143310547, 0.1332716941833496, 0.14000792801380157, 0.13340377807617188, 0.13829085230827332, 0.13895125687122345, 0.14251750707626343, 0.1336679458618164], "val_loss": [1.9701486315046037, 1.969940526144845, 1.969728742327009, 1.9695158004760742, 1.9693045616149902, 1.9690967287336076, 1.968893051147461, 1.968686921255929, 1.9684811319623674, 1.9682817459106445, 1.9680724825177873, 1.967864922114781, 1.967658383505685, 1.967459269932338, 1.9672681263514928, 1.9670782770429338, 1.9668855667114258, 1.966681684766497, 1.9664901324680872, 1.966301781790597, 1.9661156790597099, 1.9659312111990792, 1.9657448359898158, 1.9655534199305944, 1.9653654779706682, 1.9651727676391602, 1.964982032775879, 1.9648011071341378, 1.9646197727748327, 1.96443510055542, 1.9642598969595773, 1.9640866688319616, 1.9639111246381487, 1.9637386458260673, 1.963559286934989, 1.9633847645350866, 1.9632057462419783, 1.9630286352975028, 1.962851115635463, 1.9626785687037878, 1.9625114713396346, 1.9623421941484724, 1.9621754373822893, 1.9620009831019811, 1.9618313653128487, 1.9616619518824987, 1.9614986692156111, 1.9613353184291296, 1.9611614772251673, 1.9609898158482142, 1.9608277593340193, 1.960653850010463, 1.9604882512773787, 1.960324491773333, 1.9601599148341589, 1.95999390738351, 1.9598297391619002, 1.9596672058105469, 1.9595051492963518, 1.9593377794538225, 1.9591729300362724, 1.9590091705322266, 1.9588428906032018, 1.9586806978498186, 1.9585164615086146, 1.9583553586687361, 1.9581920760018485, 1.9580260685511999, 1.957862445286342, 1.9576977321079798, 1.9575317927769251, 1.9573751177106584, 1.95721401487078, 1.9570465087890625, 1.9568819318498885, 1.9567220551627023, 1.9565586362566267, 1.9563984189714705, 1.9562419482639857, 1.9560778481619698, 1.9559165409633092, 1.9557619776044572, 1.9555997167314803, 1.9554330962044852, 1.9552627290998186, 1.955096994127546, 1.9549317359924316, 1.9547717230660575, 1.9546079635620117, 1.9544433185032435, 1.9542757443019323, 1.9541147777012415, 1.9539532661437988, 1.9537927082606725, 1.9536305155072893, 1.9534694807870048, 1.9533068793160575, 1.9531481606619698, 1.9529899869646346, 1.9528319495064872], "val_accuracy": [0.03733333200216293, 0.03966666758060455, 0.041333332657814026, 0.043666668236255646, 0.04533333331346512, 0.046666666865348816, 0.04699999839067459, 0.04866666719317436, 0.050333332270383835, 0.050999999046325684, 0.0533333346247673, 0.055666666477918625, 0.0573333315551281, 0.058666665107011795, 0.05999999865889549, 0.06066666543483734, 0.06266666948795319, 0.06366666406393051, 0.06499999761581421, 0.06733333319425583, 0.06866666674613953, 0.07133333384990692, 0.07266666740179062, 0.07400000095367432, 0.07566666603088379, 0.07800000160932541, 0.0793333351612091, 0.08133333176374435, 0.08366666734218597, 0.08433333039283752, 0.08733333647251129, 0.08900000154972076, 0.09033333510160446, 0.09200000017881393, 0.09300000220537186, 0.0949999988079071, 0.09666666388511658, 0.09733333438634872, 0.09966666996479034, 0.10333333164453506, 0.10300000011920929, 0.10499999672174454, 0.10499999672174454, 0.10566666722297668, 0.10700000077486038, 0.10766666382551193, 0.10866666585206985, 0.11133333295583725, 0.11233333498239517, 0.11433333158493042, 0.11699999868869781, 0.11966666579246521, 0.12099999934434891, 0.12166666984558105, 0.12333333492279053, 0.12466666847467422, 0.12600000202655792, 0.12666666507720947, 0.12700000405311584, 0.12866666913032532, 0.13099999725818634, 0.13433332741260529, 0.1353333294391632, 0.13766667246818542, 0.13866665959358215, 0.140666663646698, 0.14166666567325592, 0.14300000667572021, 0.14433333277702332, 0.14499999582767487, 0.14633333683013916, 0.14866666495800018, 0.15033333003520966, 0.1523333340883255, 0.15399999916553497, 0.15566666424274445, 0.15666666626930237, 0.15833333134651184, 0.15933333337306976, 0.16066665947437286, 0.1626666635274887, 0.16366666555404663, 0.16500000655651093, 0.16733333468437195, 0.16866666078567505, 0.17100000381469727, 0.17266666889190674, 0.17499999701976776, 0.17666666209697723, 0.17800000309944153, 0.179666668176651, 0.18199999630451202, 0.18333333730697632, 0.1850000023841858, 0.18666666746139526, 0.1889999955892563, 0.1899999976158142, 0.19099999964237213, 0.19233334064483643, 0.1940000057220459]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [51530.26188476264, 985957.1710804385, 4576058.809272223, 12642333.825386344, 27201570.653282262, 49072275.97147008], "accuracy": [0.09787346422672272, 0.09694888442754745, 0.1002509593963623, 0.1014397069811821, 0.09536388516426086, 0.1018359512090683], "val_loss": [193122.85267857142, 1530121.392857143, 5148282.142857143, 12184905.42857143, 23777294.85714286, 41062792.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 5, 3, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [104064580.26505238, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04966318979859352, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.3854200805312967e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3026772875276302, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9703851427350725, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [21, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3380660819591643, 2.5381270755850456, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04609694704413414, 0.010566635988652706, 0.08598599582910538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0626795632498607, 2.6841590063912526, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.014666666276752949, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1], [9, 2, 5, 6, 7, 3, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 0, 0, 0, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [65, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [1, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 14, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 15, 10, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [55, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 6, 0, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [94, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [73523683.71645041, 25388300419.736362, 351168124153.0007, 1526125771572.9854, 4081117193601.8765, 8768534134903.022], "accuracy": [0.17382116615772247, 0.09945846349000931, 0.1006472036242485, 0.09853387624025345, 0.09853387624025345, 0.10196803510189056], "val_loss": [1060417901.7142857, 78028303798.85715, 533707451830.8571, 1728964048603.4285, 4046153992484.5713, 7875323456950.857], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [55, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 9, 3, 7, 2, 4, 0, 1, 4, 0, 8, 7, 5, 8, 6, 7, 6, 2, 6, 1], [1, 1, 0, 0, 3, 0, 2, 2, 2, 1, 3, 0, 0, 3], [33, 63, 56, 45, 56, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 34, 20, 14, 6], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.math.negative(tf.math.subtract(tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(beta, beta))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), sigma)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [39, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.0868571400642395, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302577782930589, 2.3008661962629327, 2.2993557404659333, 2.29846817120396, 2.300151683021105, 2.3014283576079047, 2.30198125728385, 2.302272276052662], "accuracy": [0.09272222965955734, 0.09126931428909302, 0.10038304328918457, 0.10460969805717468, 0.09840179979801178, 0.08598599582910538, 0.07607977837324142, 0.0746268630027771], "val_loss": [1.9700100081307548, 1.96855286189488, 1.9680019787379675, 1.970289979662214, 1.9723386083330428, 1.9726941926138741, 1.9728599957057409, 1.9732107434953963], "val_accuracy": [0.04266666620969772, 0.0676666647195816, 0.10533333569765091, 0.08933333307504654, 0.052666667848825455, 0.03999999910593033, 0.054666668176651, 0.08133333176374435]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [68, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3026772875276302, 2.3021442422525458, 2.3026306482432712, 2.301898336429417, 2.303282175081722, 2.3014902069332135], "accuracy": [0.09192973375320435, 0.08836349099874496, 0.0878351628780365, 0.09232597798109055, 0.09166556596755981, 0.08809932321310043], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 3, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 1, 3, 0, 2], [20, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 13, 7, 6, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha)), sigma), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026772875276302, 2.3021442422525458, 2.3026306482432712, 2.301898336429417, 2.303282175081722, 2.3014902069332135], "accuracy": [0.09192973375320435, 0.08836349099874496, 0.0878351628780365, 0.09232597798109055, 0.09166556596755981, 0.08809932321310043], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 1, 3], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 3, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 8, 8, 4, 4, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026772875276302, 2.3021442422525458, 2.3026306482432712, 2.301898336429417, 2.303282175081722, 2.3014902069332135], "accuracy": [0.09192973375320435, 0.08836349099874496, 0.0878351628780365, 0.09232597798109055, 0.09166556596755981, 0.08809932321310043], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 0, 0, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 7, 0, 4, 0, 8], [1, 3, 1, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.math.add(tf.math.square(alpha), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))))))", "other_info": {"loss": [2.3026772875276302, 2.3021442422525458, 2.3026306482432712, 2.301898336429417, 2.303282175081722, 2.3014902069332135], "accuracy": [0.09192973375320435, 0.08836349099874496, 0.0878351628780365, 0.09232597798109055, 0.09166556596755981, 0.08809932321310043], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]