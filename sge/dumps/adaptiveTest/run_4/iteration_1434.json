[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 0, 8, 7, 6], [4, 4, 3], [6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8434285521507263, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 12, 9, 8, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))))), tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9940175992654314, 1.0514623234694298, 0.7895606385246008, 0.6869989916585802, 0.6178557755153224, 0.5683081168555911, 0.5460911428278086, 0.5132964311132908, 0.488901418331765, 0.4719200241583024, 0.4443629385182382, 0.4282326576865943, 0.41460294233274153, 0.40054726281800307, 0.3823765164132698, 0.3837238749248823, 0.36237378218280736, 0.35414520627188567, 0.3579296827032865, 0.3464794717586398, 0.3306550157659042, 0.32066156871724105, 0.3144727841564819, 0.3094080713848318, 0.3041094707586132, 0.28589504516324693, 0.2780184632538962, 0.26389566410675874, 0.2681337161748133, 0.26313096264003527, 0.24640752056869675, 0.24874001385167038], "accuracy": [0.3259807229042053, 0.6239598393440247, 0.694360077381134, 0.7353057861328125, 0.7592127919197083, 0.7853652238845825, 0.7907806038856506, 0.8041210174560547, 0.811649739742279, 0.8216879963874817, 0.8305375576019287, 0.8408400416374207, 0.8454629778862, 0.8507462739944458, 0.8594637513160706, 0.8549728989601135, 0.8644828796386719, 0.8656716346740723, 0.8671245574951172, 0.8681812286376953, 0.8708229064941406, 0.8775591254234314, 0.8821820020675659, 0.8800686597824097, 0.885219931602478, 0.8914278149604797, 0.8961827754974365, 0.8971073627471924, 0.8971073627471924, 0.8992207050323486, 0.904768168926239, 0.9059569239616394], "val_loss": [0.817381637437003, 0.5937157188143048, 0.5420431750161308, 0.47951803888593403, 0.4481758901051113, 0.4224827289581299, 0.3975813899721418, 0.38468825817108154, 0.3748854994773865, 0.3586046184812273, 0.3577274850436619, 0.3491132003920419, 0.326512268611363, 0.3229231578963144, 0.3208920359611511, 0.31621919359479633, 0.3105625680514744, 0.3186006546020508, 0.30592095851898193, 0.29847690888813566, 0.2954843384878976, 0.30645187411989483, 0.28958749771118164, 0.29592993429728914, 0.30142309835978914, 0.2814389296940395, 0.2896918143544878, 0.2874613915170942, 0.2925571543829782, 0.2881080423082624, 0.2918711985860552, 0.2911838207926069], "val_accuracy": [0.6203333139419556, 0.7450000047683716, 0.7559999823570251, 0.7896666526794434, 0.8016666769981384, 0.8163333535194397, 0.8316666483879089, 0.8423333168029785, 0.8356666564941406, 0.8489999771118164, 0.847000002861023, 0.8489999771118164, 0.8659999966621399, 0.8713333606719971, 0.8706666827201843, 0.874666690826416, 0.8763333559036255, 0.8706666827201843, 0.8740000128746033, 0.8723333477973938, 0.8790000081062317, 0.8733333349227905, 0.8813333511352539, 0.878333330154419, 0.8796666860580444, 0.8880000114440918, 0.8893333077430725, 0.8880000114440918, 0.8843333125114441, 0.8843333125114441, 0.8826666474342346, 0.8816666603088379]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7, 2], [4, 4, 3], [6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9940173587054624, 1.051363991771502, 0.7897923774943454, 0.6875588773437196, 0.6189099740374279, 0.5711178830381335, 0.547911651492544, 0.5124051794636094, 0.4843727152195778, 0.4730319656267331, 0.44244582709178415, 0.43331603962338094, 0.4200338949664016, 0.40254605025458473, 0.38043054217565425, 0.3789858315496743, 0.36158696623951325, 0.3513999299925269, 0.3504601773167362, 0.3438797300683194, 0.32184857137923417, 0.3207235826579666, 0.3079741602410982, 0.30954183909115524, 0.3015183328424919, 0.28455005358821445, 0.28486535237323907, 0.26382997521414436, 0.26294219854438244, 0.2577162450370126, 0.2466653320555044, 0.24332895604154264, 0.24942334463740887], "accuracy": [0.3259807229042053, 0.6240919232368469, 0.6935675740242004, 0.735041618347168, 0.7572315335273743, 0.7816668748855591, 0.7926297783851624, 0.8058380484580994, 0.8161405324935913, 0.8240655064582825, 0.8350284099578857, 0.8380662798881531, 0.842028796672821, 0.8516708612442017, 0.8621054291725159, 0.8585391640663147, 0.8623695969581604, 0.8681812286376953, 0.869502067565918, 0.8676528930664062, 0.8771628737449646, 0.8772949576377869, 0.8856161832809448, 0.8836349248886108, 0.8882578015327454, 0.8908994793891907, 0.8906353116035461, 0.8977677822113037, 0.897899866104126, 0.9034473896026611, 0.9025228023529053, 0.9054285883903503, 0.9035794734954834], "val_loss": [0.8173787593841553, 0.593896610396249, 0.5420353072030204, 0.4798132692064558, 0.4480569362640381, 0.4210890701838902, 0.3978391034262521, 0.38041515009743826, 0.3707425424030849, 0.35833282130105154, 0.36207077332905363, 0.3570643833705357, 0.3261763368334089, 0.3263535329273769, 0.3170942153249468, 0.31492726291928974, 0.3120604583195278, 0.3178671257836478, 0.312092729977199, 0.2937257630484445, 0.29145343814577374, 0.3010370986802237, 0.29127057109560284, 0.2975251589502607, 0.297793984413147, 0.28866628238133024, 0.2990591696330479, 0.28492958205086844, 0.28779894965035574, 0.28864167417798725, 0.28780330078942434, 0.2909161022731236, 0.28925182138170513], "val_accuracy": [0.6203333139419556, 0.7453333139419556, 0.7576666474342346, 0.7906666398048401, 0.8016666769981384, 0.8216666579246521, 0.8353333473205566, 0.8473333120346069, 0.8413333296775818, 0.8476666808128357, 0.8496666550636292, 0.8426666855812073, 0.8646666407585144, 0.8703333139419556, 0.8713333606719971, 0.871666669845581, 0.8730000257492065, 0.8679999709129333, 0.8709999918937683, 0.8776666522026062, 0.8849999904632568, 0.878333330154419, 0.8833333253860474, 0.8816666603088379, 0.8769999742507935, 0.887333333492279, 0.8840000033378601, 0.8886666893959045, 0.8843333125114441, 0.8859999775886536, 0.8849999904632568, 0.8843333125114441, 0.8843333125114441]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 4, 2, 3, 9, 8, 9, 7], [4, 1, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.833142876625061, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9940173317333962, 1.0514135126581974, 0.789548521382918, 0.6880265207747899, 0.6189499906403372, 0.5698268287422131, 0.5476197948498008, 0.5136596798629116, 0.4848680581950146, 0.47046649626075726, 0.4404553627695437, 0.4301547236241653, 0.4144729320926752, 0.39972221978887545, 0.38160966469973556, 0.3751169217418544, 0.35655969646644314, 0.34663786209569614, 0.3499020992678233, 0.34095661786757975, 0.32402682736596694, 0.3180146211126713, 0.31086744422988805, 0.31206904555812504, 0.307049254294258, 0.291091853188108], "accuracy": [0.3259807229042053, 0.6239598393440247, 0.6935675740242004, 0.7351737022399902, 0.7585523724555969, 0.7817989587783813, 0.789988100528717, 0.8041210174560547, 0.8129705190658569, 0.8236692547798157, 0.8335754871368408, 0.837141752243042, 0.8451988101005554, 0.8518029451370239, 0.8615770936012268, 0.86118084192276, 0.8651432991027832, 0.8720116019248962, 0.869502067565918, 0.8721436858177185, 0.8749174475669861, 0.873860776424408, 0.8813894987106323, 0.8802007436752319, 0.8825782537460327, 0.8862766027450562], "val_loss": [0.817378078188215, 0.5938339403697422, 0.5423528637204852, 0.4805551086153303, 0.4478623867034912, 0.42099916083472116, 0.39871409961155485, 0.3808349626404898, 0.3736945220402309, 0.3587583133152553, 0.35203871556690763, 0.3445825917380197, 0.3238729068211147, 0.32150204692568096, 0.3167716179575239, 0.31050325291497366, 0.3041451232773917, 0.31790184123175486, 0.3059881755283901, 0.29269265277045114, 0.2932873708861215, 0.2994816814150129, 0.2913010971886771, 0.30144879647663664, 0.29292632000786917, 0.2888490217072623], "val_accuracy": [0.6203333139419556, 0.7453333139419556, 0.7566666603088379, 0.7919999957084656, 0.8033333420753479, 0.8216666579246521, 0.8339999914169312, 0.8443333506584167, 0.8389999866485596, 0.8483333587646484, 0.8496666550636292, 0.8533333539962769, 0.8686666488647461, 0.8723333477973938, 0.8713333606719971, 0.8756666779518127, 0.874666690826416, 0.8683333396911621, 0.8736666440963745, 0.878333330154419, 0.8846666812896729, 0.8736666440963745, 0.8803333044052124, 0.8723333477973938, 0.8813333511352539, 0.8813333511352539]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [33, 95, 54, 66], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [3, 5, 2, 3, 9, 0, 8, 5, 6], [4, 4, 3], [6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 8, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.27450741031749, 2.178365411098371, 1.9781798250120015, 1.6594989970847993, 1.3699633061783487, 1.2097873865196087, 1.0888427331100885, 1.011523155897773, 0.9668504983411096, 0.9096475319855438, 0.8895487788724641, 0.8611346770035135, 0.8406588926354357, 0.8190942482232827, 0.8050762676229063, 0.7804040547847559, 0.7761696087780283, 0.771083634653269, 0.7540886879534123, 0.7431902233966353, 0.7344107755879684, 0.7110603709561619, 0.7137812127951759, 0.7176402239295013, 0.7015902293104742, 0.6960969457631382, 0.6814563120549869, 0.6831569733983096, 0.6758156390615884, 0.6680202274400607, 0.6641632386281143, 0.6636825834267238, 0.6465148020492899, 0.6433196925468229, 0.652439643615241, 0.640392574376245, 0.637386502803608, 0.6277659165939524, 0.6342288382285464, 0.6232125050576608, 0.6207816085370147, 0.6178915662504757, 0.6171628934060736, 0.6110907989234153, 0.6034299197088001, 0.6088198168229559, 0.5970855418480997], "accuracy": [0.16523577272891998, 0.3283582031726837, 0.4167217016220093, 0.48051777482032776, 0.544181764125824, 0.5773345828056335, 0.6173557043075562, 0.6421872973442078, 0.6524897813796997, 0.6800950765609741, 0.6827367544174194, 0.6942279934883118, 0.6989829540252686, 0.7057191729545593, 0.7086250185966492, 0.7128516435623169, 0.7193237543106079, 0.7220974564552307, 0.7220974564552307, 0.7302865982055664, 0.7347774505615234, 0.7437590956687927, 0.7345132827758789, 0.7366266250610352, 0.7452120184898376, 0.748249888420105, 0.7497028112411499, 0.748778223991394, 0.7544577717781067, 0.7549861073493958, 0.754589855670929, 0.7572315335273743, 0.7580240368843079, 0.7630431652069092, 0.7555144429206848, 0.7681944370269775, 0.7676661014556885, 0.7656848430633545, 0.7655527591705322, 0.7662131786346436, 0.7709681391716003, 0.7730814814567566, 0.7740060687065125, 0.7779685854911804, 0.7749306559562683, 0.7754589915275574, 0.7771760821342468], "val_loss": [1.9005051340375627, 1.7654576301574707, 1.4871203899383545, 1.1529261725289481, 0.9276988846915108, 0.8111830949783325, 0.7348561797823224, 0.6904241187231881, 0.6514166082654681, 0.6298335790634155, 0.613381164414542, 0.590316755431039, 0.5773668118885585, 0.5705843312399728, 0.5516346011843, 0.5446287904466901, 0.5358441046306065, 0.5254041807992118, 0.5161034039088658, 0.5160504579544067, 0.5092239720480782, 0.4981020518711635, 0.49489120074680876, 0.49168852397373747, 0.4856508799961635, 0.47965575967516216, 0.4864294188363211, 0.4720924581800188, 0.46536549500056673, 0.46765693596431185, 0.4594883237566267, 0.46395507880619596, 0.45689845085144043, 0.4573525530951364, 0.45111983163016184, 0.45313641003199984, 0.4478256532124111, 0.4469726426260812, 0.4452058587755476, 0.4418277399880545, 0.43636969157627653, 0.4348980869565691, 0.43129987376076834, 0.4325253282274519, 0.4277622273990086, 0.4245374713625227, 0.4286543471472604], "val_accuracy": [0.41499999165534973, 0.5099999904632568, 0.5759999752044678, 0.6349999904632568, 0.6816666722297668, 0.6943333148956299, 0.703000009059906, 0.7233333587646484, 0.7379999756813049, 0.7413333058357239, 0.7400000095367432, 0.7516666650772095, 0.7583333253860474, 0.7490000128746033, 0.7713333368301392, 0.7620000243186951, 0.7716666460037231, 0.7713333368301392, 0.7823333144187927, 0.7749999761581421, 0.7846666574478149, 0.7886666655540466, 0.7916666865348816, 0.7816666960716248, 0.7860000133514404, 0.7990000247955322, 0.7850000262260437, 0.8023333549499512, 0.8036666512489319, 0.7986666560173035, 0.8029999732971191, 0.7923333048820496, 0.8083333373069763, 0.7983333468437195, 0.8103333115577698, 0.8103333115577698, 0.8083333373069763, 0.8149999976158142, 0.8140000104904175, 0.8203333616256714, 0.8243333101272583, 0.8246666789054871, 0.8246666789054871, 0.8106666803359985, 0.8186666369438171, 0.8199999928474426, 0.8103333115577698]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 6, 2, 3, 9, 5, 8, 7, 6], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7877143025398254, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 11, 8, 7, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.196233075135231, 1.5630290828534026, 1.2636603656430458, 1.0534401208323698, 0.9295806034271664, 0.8926600293870048, 0.8313086068845932, 0.8068009524565205, 0.7552884780830003, 0.7291570163957195, 0.7230948958146873, 0.7287984448747706, 0.7103709698573647, 0.6737725129925485, 0.6649702343611968, 0.6668214300179195, 0.650820110342081, 0.6450584131524139, 0.6396150066080725, 0.626212780501754, 0.6077630340761717, 0.6191065663737769, 0.6082241132101599, 0.6058385704864585, 0.5850403930816227, 0.5899493921985558, 0.5660498479038985, 0.5901137280064236], "accuracy": [0.2735437750816345, 0.49808478355407715, 0.5532954931259155, 0.6321489810943604, 0.6617355942726135, 0.6687359809875488, 0.6930392384529114, 0.6973979473114014, 0.724210798740387, 0.733060359954834, 0.7368907928466797, 0.7310791015625, 0.7327961921691895, 0.7526086568832397, 0.7515519857406616, 0.7516840696334839, 0.7618544697761536, 0.7605336308479309, 0.7646281719207764, 0.7647602558135986, 0.7737419009208679, 0.767401933670044, 0.7733456492424011, 0.7733456492424011, 0.7819310426712036, 0.7763835787773132, 0.7942147850990295, 0.7781006693840027], "val_loss": [1.5918514387948173, 1.0098868778773717, 0.831255452973502, 0.6962105887276786, 0.6664314099720546, 0.6145719289779663, 0.5687388011387416, 0.5667091097150531, 0.5653543642589024, 0.5331717218671527, 0.5378260782786778, 0.5599322659628732, 0.5079609325953892, 0.47825775827680317, 0.4884099279131208, 0.49615069798060824, 0.48104705129350933, 0.4769779443740845, 0.447411128452846, 0.46045533248356413, 0.46099201270512175, 0.44866028853825163, 0.42995292799813406, 0.43610950878688265, 0.42253811018807547, 0.4274968419756208, 0.4379464643342154, 0.4312666654586792], "val_accuracy": [0.5403333306312561, 0.5386666655540466, 0.640666663646698, 0.7110000252723694, 0.7170000076293945, 0.7229999899864197, 0.7429999709129333, 0.7559999823570251, 0.7586666941642761, 0.7710000276565552, 0.7440000176429749, 0.734666645526886, 0.7739999890327454, 0.7929999828338623, 0.7870000004768372, 0.7833333611488342, 0.7776666879653931, 0.7726666927337646, 0.7993333339691162, 0.7956666946411133, 0.7933333516120911, 0.8140000104904175, 0.8173333406448364, 0.8003333210945129, 0.815666675567627, 0.8083333373069763, 0.8033333420753479, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 1, 0, 3, 9, 5, 8, 7, 6], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.35600000619888306, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 10, 8, 2, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(sigma)))))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.243146739411017, 2.3128865121015862, 2.3059775391274977, 2.303414664390049, 2.302081310391631, 2.293090942718129], "accuracy": [0.18623696267604828, 0.18478403985500336, 0.10289261490106583, 0.09813763201236725, 0.10157178342342377, 0.1372341811656952], "val_loss": [1.8213656970432825, 1.97904144014631, 1.9743866239275252, 1.9735395567757743, 1.97189085824149, 1.87288270677839], "val_accuracy": [0.35466668009757996, 0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.06366666406393051, 0.2199999988079071]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [98, 95, 54, 66], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [1, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.3514285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 34, 34, 19, 15, 3, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.241836485058451, 2.27472495302123, 2.3031684899169536, 2.301058990922917, 2.256192460744735, 2.3190363315999973], "accuracy": [0.19033153355121613, 0.14515915513038635, 0.09708096832036972, 0.11094967275857925, 0.20895522832870483, 0.10949676483869553], "val_loss": [1.7683384759085519, 1.9738779749189104, 1.973008292061942, 1.9671628815787179, 1.9585866246904646, 1.9754763330732072], "val_accuracy": [0.32733333110809326, 0.10066666454076767, 0.10433333367109299, 0.1133333370089531, 0.1666666716337204, 0.13066667318344116]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [3, 5, 2, 3, 9, 0, 8, 3, 6], [3, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [1, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.3179999887943268, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 4, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2418003754923768, 2.2433170811249172, 2.348533296282769, 2.307355246193074, 2.3035629102031487, 2.3028410735966083], "accuracy": [0.18980319797992706, 0.14740456640720367, 0.16933034360408783, 0.09747721254825592, 0.09668471664190292, 0.10460969805717468], "val_loss": [1.773252214704241, 1.969806126185826, 1.9815538270132882, 1.9743637357439314, 1.9736992972237724, 1.9732160568237305], "val_accuracy": [0.33500000834465027, 0.10066666454076767, 0.10100000351667404, 0.10100000351667404, 0.1303333342075348, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [73, 95, 54, 66], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [2, 2, 2, 3, 9, 8, 8, 7, 9], [4, 4, 3], [60, 55], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.3117142915725708, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 13, 9, 9, 0, 2, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(sigma)))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.1661876382892, 2.244010731938052, 2.325064491491906, 2.303556326090337, 2.302763399651431, 2.298348266529511], "accuracy": [0.2020869106054306, 0.15982036292552948, 0.10091137140989304, 0.10011887550354004, 0.10289261490106583, 0.1258750557899475], "val_loss": [1.5150938715253557, 2.036542075020926, 1.9735747746058874, 1.9735973903111048, 1.9728847912379675, 1.9167024748665946], "val_accuracy": [0.31066668033599854, 0.09733333438634872, 0.10300000011920929, 0.09666666388511658, 0.09933333098888397, 0.2540000081062317]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [74, 95, 54, 66], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 5, 2, 5, 9, 0, 8, 5, 6], [3, 4, 3], [6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.26914286613464355, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.9248946271064242, 2.288479366070716, 1663071048.7167687, NaN, NaN, NaN, NaN], "accuracy": [0.177255317568779, 0.11253467202186584, 0.17963281273841858, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9928961481366838, 1.7456053325108118, 3.409547588696209e+28, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.2540000081062317, 0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [48, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 0, 2, 3, 5, 0, 9, 7, 6], [4, 4, 3], [6], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 34, 34, 19, 15, 2, 12, 9, 8, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))))), tf.math.add(beta, grad)))))), tf.math.pow(tf.math.add(beta, beta), tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))))), sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 6, 2, 3, 9, 5, 8, 7, 6], [4, 4, 3], [34], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [0, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 11, 10, 7, 3, 1, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1258925482.1794534, 23622043306.351078, 109030536796.98639, 310306727587.85895, 652407863275.171, 1207637308068.8057], "accuracy": [0.09734513610601425, 0.09906221181154251, 0.09760929644107819, 0.09615638852119446, 0.09760929644107819, 0.09840179979801178], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [3, 6, 2, 3, 9, 5, 8, 7, 6], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 11, 10, 7, 3, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(sigma)))))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 4, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1], [2, 2, 2, 9, 9, 8, 9, 7, 2], [4, 4, 3], [58], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 3, 2, 1, 1, 0, 6, 4, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(grad, alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(beta), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [3, 6, 2, 3, 9, 5, 8, 6, 6], [4, 4, 3], [60], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.04009420782615, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.036586977541446686, 0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [320.0644008091518, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [0, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [7, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [91, 95, 54, 66], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 6, 2, 3, 9, 9, 8, 7, 6], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [97, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 6, 2, 3, 9, 5, 8, 7, 6], [2, 4, 3], [60], [1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 13, 10, 8, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.square(sigma)))), sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [39, 95, 54, 66], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 4, 2, 3, 9, 5, 8, 7], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3050095772998302, 2.3188997981822594, 5.192880939280422e+33, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.0804385170340538, 0.0882314071059227, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9749705450875419, 1.9996793610709054, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.020999999716877937, 0.08233333379030228, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [23, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 5, 2, 3, 9, 0, 8, 0, 6], [4, 4, 3], [60], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 9, 8, 6, 2, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.3032862820157347, 2.301644965909838, 2.3017091609703915, 2.3022701633195393, 2.3029302273129177, 2.3034493652364407, 2.302667048691979, 2.3022009505414376, 2.302950733924476, 2.3009492704156935, 2.3015652934809907, 2.3032517663680836, 2.301680280516381, 2.3013039489920426, 2.303329526378242, 2.3014855795469678, 2.3014453807763293, 2.302536466921231, 2.300120581662288, 2.2998989773086347, 2.3010043083889262, 2.3011977671947084, 2.3026968573755546, 2.301526942918833, 2.2998665856049123, 2.2991424917529177, 2.2993832338345976, 2.299621948208933, 2.2985478277928197, 2.2997703770793834, 2.299522667828017, 2.2988902448017554, 2.297653825260062, 2.29998362673713, 2.2980278889894517, 2.2986211458044186, 2.298625548313228, 2.2974923798877644, 2.297988588248482, 2.2970287804558858, 2.2975405513366387, 2.29790910300231, 2.2977405893426326, 2.297747528170393, 2.2978711177675777, 2.2974428489711762, 2.2971290388851746, 2.297408018633674, 2.2962508295127475, 2.2972203430923503, 2.2970173117381045, 2.2973330356598907], "accuracy": [0.08717474341392517, 0.09034473448991776, 0.08875974267721176, 0.09166556596755981, 0.0870426595211029, 0.09008057415485382, 0.09100515395402908, 0.08994849026203156, 0.08770307898521423, 0.09351472556591034, 0.09377889335155487, 0.08889182657003403, 0.09021265059709549, 0.09311848133802414, 0.0944393053650856, 0.09259014576673508, 0.09153348207473755, 0.08809932321310043, 0.09774138033390045, 0.1018359512090683, 0.1006472036242485, 0.09721305221319199, 0.09325055778026581, 0.09893012791872025, 0.09959053993225098, 0.09681680053472519, 0.1014397069811821, 0.10381719470024109, 0.10487385839223862, 0.10091137140989304, 0.10355303436517715, 0.10421344637870789, 0.10394927859306335, 0.10091137140989304, 0.10989301651716232, 0.10593052208423615, 0.1088363528251648, 0.11108175665140152, 0.11279883980751038, 0.1072513535618782, 0.10791176557540894, 0.11028926074504852, 0.11319508403539658, 0.11266675591468811, 0.11002509295940399, 0.10711926966905594, 0.11411966383457184, 0.11002509295940399, 0.1162329912185669, 0.11728965491056442, 0.10751552134752274, 0.11411966383457184], "val_loss": [1.9703847340175085, 1.9703818729945592, 1.9703748566763741, 1.9703623907906669, 1.9703418867928642, 1.9703106198992049, 1.9702699525015694, 1.970219952719552, 1.97015837260655, 1.9700828279767717, 1.9699963160923548, 1.9698984963553292, 1.9697905949183874, 1.9696784019470215, 1.969557625906808, 1.969423702784947, 1.9692856924874442, 1.9691428456987654, 1.9690019743783134, 1.968864849635533, 1.968726294381278, 1.968590191432408, 1.9684549740382604, 1.9683306557791573, 1.96822418485369, 1.9681239128112793, 1.9680374690464564, 1.967968123299735, 1.967918872833252, 1.9678749356951033, 1.9678286824907576, 1.967780453818185, 1.9677361760820662, 1.967683928353446, 1.9676319531032018, 1.9675914900643485, 1.9675712585449219, 1.96756192616054, 1.9675519806998116, 1.9675499371119909, 1.967559541974749, 1.9675851549421037, 1.9676236425127303, 1.9676668984549386, 1.9677277973720007, 1.9678033420017786, 1.967893396105085, 1.967993940625872, 1.9681039537702287, 1.9682247979300362, 1.9683399881635393, 1.9684575625828333], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03766666725277901, 0.038333334028720856, 0.03966666758060455, 0.0416666679084301, 0.0416666679084301, 0.043666668236255646, 0.044333335012197495, 0.04633333161473274, 0.04699999839067459, 0.04833333194255829, 0.04933333396911621, 0.050333332270383835, 0.05166666582226753, 0.054666668176651, 0.0573333315551281, 0.059333331882953644, 0.06466666609048843, 0.06599999964237213, 0.06800000369548798, 0.07133333384990692, 0.07333333045244217, 0.07733333110809326, 0.07999999821186066, 0.08433333039283752, 0.08733333647251129, 0.09300000220537186, 0.09666666388511658, 0.09833333641290665, 0.0989999994635582, 0.10100000351667404, 0.10300000011920929, 0.10633333027362823, 0.1106666699051857, 0.11133333295583725, 0.11233333498239517, 0.1133333370089531, 0.1133333370089531, 0.11166666448116302, 0.1133333370089531, 0.11400000005960464, 0.1146666631102562, 0.11299999803304672, 0.11299999803304672, 0.11133333295583725, 0.10999999940395355, 0.10899999737739563]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 9, 3, 2, 6, 9, 4, 2, 2, 6, 4, 3, 6, 2, 2, 1, 5, 0, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 0, 2, 2, 2, 2, 1, 2, 0, 2, 1, 1, 2, 1, 1, 0, 2, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [74, 89, 2, 11, 93, 73, 60, 33, 24, 64, 59, 88, 9, 58], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 0, 1, 4, 3, 4, 1, 3, 3, 2, 1, 4], [98, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [3, 6, 2, 9, 6, 5, 8, 7, 6], [4, 4, 3], [6], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 5, 8, 5, 8, 4, 0, 4, 5, 8], [2, 0, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.0705714300274849, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 13, 9, 8, 1, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(sigma)))), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302789599840998, 2.300400263188364, 2.299948241338754, 2.3002387173596848, 2.300633601036369, 2.300641813896682, 2.3005801114455315, 2.299627823647633, 2.2995428383043333, 2.2986025820633738, 2.299359851273343, 2.3004296487584766, 2.299623048946354, 2.2992460124638447, 2.3009731822466697, 2.299875662799493], "accuracy": [0.08717474341392517, 0.09417514503002167, 0.09615638852119446, 0.0956280529499054, 0.09430722147226334, 0.09391097724437714, 0.09615638852119446, 0.09800554811954498, 0.1006472036242485, 0.1002509593963623, 0.10051512718200684, 0.10117553919553757, 0.1026284471154213, 0.10659094154834747, 0.10249637067317963, 0.10619468986988068], "val_loss": [1.9695711817060197, 1.9693091937473841, 1.9691236359732491, 1.9691857610430037, 1.9692724772862025, 1.969266074044364, 1.9692351477486747, 1.9690643038068498, 1.9689945493425642, 1.9690509523664201, 1.9692373956952776, 1.9693958418709892, 1.9696122578212194, 1.9698476791381836, 1.9700987679617745, 1.9703472682407923], "val_accuracy": [0.04833333194255829, 0.05166666582226753, 0.05999999865889549, 0.06433333456516266, 0.06700000166893005, 0.07133333384990692, 0.07433333247900009, 0.07866666465997696, 0.08233333379030228, 0.08399999886751175, 0.08566666394472122, 0.08533333241939545, 0.08433333039283752, 0.08166666328907013, 0.08266666531562805, 0.08033332973718643]}}]