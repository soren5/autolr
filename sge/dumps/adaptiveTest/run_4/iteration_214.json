[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.8054285645484924, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.260692758173471, 2.0632874926776306, 1.6375102846141598, 1.2617197880545281, 1.084623030447264, 0.9878836316030102, 0.9257796751179038, 0.8686691160057798, 0.8519448572382273, 0.8071748254526214, 0.785783592484111, 0.7685409427996026, 0.7562396453198755, 0.7300470007204376, 0.7210941028758724, 0.7116913579757644, 0.688836694409299, 0.6942835186041421, 0.6791359861340143, 0.6717932185933354, 0.6605255595602616, 0.6646717027461508, 0.6485647970281335, 0.6398377243191764, 0.6325128275830716, 0.6389880336003296, 0.6202311152322906, 0.6226774005605844, 0.6142265979466799, 0.6170540214482394, 0.6166986209636729, 0.6027144747419033, 0.5935428723478361, 0.5932571186664759, 0.5933451379893273, 0.5770564025671191, 0.5846672188163418, 0.5709325386674539, 0.5738532378641747, 0.567305832648589, 0.5600837222841107, 0.5639496288987954], "accuracy": [0.19653943181037903, 0.3781534731388092, 0.4823669195175171, 0.5708624720573425, 0.6149781942367554, 0.6479989290237427, 0.6675472259521484, 0.6836613416671753, 0.6822084188461304, 0.7005679607391357, 0.7104741930961609, 0.7210407853126526, 0.7181349992752075, 0.7252674698829651, 0.7298903465270996, 0.7372870445251465, 0.743891179561615, 0.7415136694908142, 0.7465327978134155, 0.744419515132904, 0.7516840696334839, 0.7446836829185486, 0.7544577717781067, 0.7589486241340637, 0.7606657147407532, 0.7572315335273743, 0.765949010848999, 0.7658169269561768, 0.7701756954193115, 0.7621186375617981, 0.7652885913848877, 0.7761194109916687, 0.778761088848114, 0.7769119143486023, 0.778761088848114, 0.7845727205276489, 0.7765156626701355, 0.7849689722061157, 0.783119797706604, 0.7886672616004944, 0.7902522683143616, 0.7869502305984497], "val_loss": [1.855358464377267, 1.5248468944004603, 1.0573540415082658, 0.8308898380824498, 0.7270115954535348, 0.6794579369681222, 0.6415632622582572, 0.6145647764205933, 0.5880697625023978, 0.5641209057399205, 0.5652311529432025, 0.5346416234970093, 0.5424063376017979, 0.524823818887983, 0.5236739601407733, 0.511526278087071, 0.5126330171312604, 0.48906571524483816, 0.4924401726041521, 0.47818693092891146, 0.4771101645060948, 0.4751945904323033, 0.4729278598512922, 0.4632270165852138, 0.46335474082401823, 0.4564328193664551, 0.45140509946005686, 0.4611052785600935, 0.44881486892700195, 0.44865388529641287, 0.44357149941580637, 0.4419102157865252, 0.43773822273526874, 0.4333823834146772, 0.43639414651053293, 0.43793251684733797, 0.4261345863342285, 0.4401229534830366, 0.4231511950492859, 0.4203882898603167, 0.42161480869565693, 0.4262834872518267], "val_accuracy": [0.4333333373069763, 0.5526666641235352, 0.6169999837875366, 0.6733333468437195, 0.7146666646003723, 0.7160000205039978, 0.7243333458900452, 0.7419999837875366, 0.7450000047683716, 0.7603333592414856, 0.762333333492279, 0.7720000147819519, 0.7649999856948853, 0.7599999904632568, 0.762666642665863, 0.7726666927337646, 0.7770000100135803, 0.7919999957084656, 0.7866666913032532, 0.8036666512489319, 0.793666660785675, 0.8040000200271606, 0.7820000052452087, 0.809333324432373, 0.8053333163261414, 0.8113333582878113, 0.8176666498184204, 0.8013333082199097, 0.7976666688919067, 0.8136666417121887, 0.8196666836738586, 0.815666675567627, 0.8190000057220459, 0.8266666531562805, 0.824999988079071, 0.8040000200271606, 0.8326666951179504, 0.8263333439826965, 0.8243333101272583, 0.8266666531562805, 0.8213333487510681, 0.8169999718666077]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [80, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 2, 3], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45, 51, 88, 72]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2606354328493605, 2.0698783797610627, 1.6482930078702973, 1.276653717254147, 1.1114375971374795, 1.007983367645572, 0.945171339951801, 0.8943641226935019, 0.8561604735779174, 0.8275250248732017, 0.7966080753952206, 0.7849291347714148, 0.7655682619205949, 0.76734029699578, 0.7433657278285255, 0.7213133500787828, 0.7145753385777864, 0.7107773292743298, 0.6914941154419392, 0.6823299303660697, 0.6676856155613425, 0.6615509471605483, 0.6605802849535425, 0.6606747437430379, 0.6468601649573702, 0.6548147910716055, 0.6487970000181877, 0.6307626107995221, 0.6256392004624995, 0.624738700456623, 0.6125082509975235, 0.6120699994505168], "accuracy": [0.18742570281028748, 0.3899088501930237, 0.4830273389816284, 0.5698058605194092, 0.6095628142356873, 0.640338122844696, 0.6596222519874573, 0.6812838315963745, 0.6933034062385559, 0.7014925479888916, 0.7127195596694946, 0.7202483415603638, 0.7215691208839417, 0.7194558382034302, 0.7317395210266113, 0.737947404384613, 0.7409853339195251, 0.7458723783493042, 0.7510236501693726, 0.7543256878852844, 0.7577598690986633, 0.7592127919197083, 0.76106196641922, 0.7618544697761536, 0.7656848430633545, 0.7619865536689758, 0.7642319202423096, 0.7676661014556885, 0.7714964747428894, 0.7729493975639343, 0.7791573405265808, 0.7777044177055359], "val_loss": [1.8568204471043177, 1.5334619794573103, 1.0662828854152135, 0.8256288596561977, 0.743985652923584, 0.6761290516172137, 0.6515754631587437, 0.6108110291617257, 0.5803736788885934, 0.574008413723537, 0.5496044669832502, 0.5408105679920742, 0.5349356957844326, 0.5484559195382255, 0.5152666398457119, 0.5063817841666085, 0.48742425441741943, 0.48581041608537945, 0.48133460112980436, 0.47720299448285786, 0.4690618174416678, 0.46180456025259836, 0.45775755814143587, 0.4558731658118112, 0.4512806109019688, 0.4610222067151751, 0.4448368379047939, 0.4469710077558245, 0.4635772705078125, 0.4330715366772243, 0.4305018016270229, 0.4380313328334263], "val_accuracy": [0.46799999475479126, 0.5683333277702332, 0.640999972820282, 0.6783333420753479, 0.7136666774749756, 0.7250000238418579, 0.734333336353302, 0.7433333396911621, 0.7516666650772095, 0.7483333349227905, 0.7586666941642761, 0.7506666779518127, 0.7696666717529297, 0.7576666474342346, 0.765666663646698, 0.7823333144187927, 0.7900000214576721, 0.7853333353996277, 0.7856666445732117, 0.7829999923706055, 0.7986666560173035, 0.809333324432373, 0.8109999895095825, 0.8100000023841858, 0.809333324432373, 0.8063333630561829, 0.8180000185966492, 0.812666654586792, 0.781000018119812, 0.8116666674613953, 0.8180000185966492, 0.8130000233650208]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 1, 0], [96, 60, 93], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 0, 6, 4, 0, 2, 4], [2, 3, 0, 5, 3, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [1, 5, 6, 2, 3, 9, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.2028571367263794, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, alpha)", "other_info": {"loss": [2.3699542741419033, 2.7782398357587863, 3.3070340840855232, 4.453856965569993, 6.91752071806374, 11.539806847401644], "accuracy": [0.17831197381019592, 0.14568749070167542, 0.1286487877368927, 0.11081759631633759, 0.10962884873151779, 0.10553427785634995], "val_loss": [2.1857760974339078, 2.533794948032924, 3.2452987943376814, 4.778786523001535, 6.690654209681919, 12.985783440726143], "val_accuracy": [0.19633333384990692, 0.17666666209697723, 0.16366666555404663, 0.1456666737794876, 0.11100000143051147, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 7, 9, 0, 6, 7, 0, 2, 4], [2, 0, 0, 0, 1, 2, 0, 2, 3, 4, 3], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 5, 0, 7, 2, 2, 0, 0, 4, 0, 8], [1, 0, 3, 0, 1, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.negative(alpha)), tf.math.add(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), alpha))", "other_info": {"loss": [2.3028547148804672, 2.302979751962791, 2.3029431409965557, 2.3029988771573886, 2.303011881913082, 2.3029815247187666, 2.3030245579024347, 2.303016466660475, 2.3029696044511234, 2.302836540148101, 2.302969805741779], "accuracy": [0.09668471664190292, 0.0952318087220192, 0.09219389408826828, 0.09153348207473755, 0.09826971590518951, 0.09536388516426086, 0.09496764093637466, 0.09642054885625839, 0.09272222965955734, 0.09708096832036972, 0.09285431355237961], "val_loss": [1.9736056327819824, 1.9737469809395927, 1.9736246381487166, 1.9735958916800362, 1.9736356735229492, 1.973658834184919, 1.9736734117780412, 1.9736031123570033, 1.9736334255763464, 1.9736502511160714, 1.973639624459403], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10366666316986084, 0.10300000011920929, 0.10300000011920929, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 1, 0], [96, 60, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1], [7, 2, 2, 0, 6, 4, 0, 2, 4, 9, 1, 3, 8, 0], [2, 3, 1, 5, 3, 4, 4, 4, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 3, 1, 0, 3, 0, 2], [30, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), grad), alpha)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.320328488152781, 2.3740266878780294, 2.4891371175266923, 3.783193817511526, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06339981406927109, 0.02654867246747017, 0.012151631526648998, 0.03645489364862442, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0126261711120605, 2.0808278492518832, 2.2597549983433316, 24.106310163225448, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.004999999888241291, 0.007666666526347399, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(alpha))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.302032632850432, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 1, 0], [96, 60, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 0, 6, 4, 0, 2, 4], [2, 3, 0, 5, 3, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 9, 2, 2, 0, 0, 4, 0, 8], [3, 1, 0, 3, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.negative(sigma)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [163004.52682392354, 3064185.984150046, 14287257.381851804, 40345662.83450007, 86493865.372606, 158253190.2237485], "accuracy": [0.10513802617788315, 0.1026284471154213, 0.10513802617788315, 0.10130762308835983, 0.09668471664190292, 0.09826971590518951], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1], [1, 0, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8, 8, 0, 4], [2, 1, 0, 0, 3, 0, 2], [67, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 21, 14, 7, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(beta), alpha)))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [80, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 0, 0, 6, 4, 0, 2, 4], [5, 3, 0, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 1, 0], [96, 60, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 0, 6, 4, 0, 2, 4], [2, 3, 0, 5, 3, 4], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 3, 2, 2, 0, 0, 4, 0, 8], [1, 0, 0, 1, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(tf.math.negative(tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 2, 0, 6, 4, 0, 2, 4], [3, 3, 1, 5, 3, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 3, 2, 6, 2, 1, 0, 4, 3, 0, 8, 8, 0, 3, 4, 4, 2, 1, 9, 7, 5, 7, 4, 8, 7, 4, 1, 5, 4, 7, 6, 3, 9, 0, 5, 9, 6, 4], [3, 3, 1, 2, 3, 0, 2, 2], [0, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [80, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [2, 0, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 1, 0], [80, 12, 93], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 2, 2, 0, 6, 4, 0, 2, 4], [5, 3, 0, 0, 5], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 3, 1, 0, 3, 0, 2], [35, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.35987723202769, 1523.0132724246519, 2.9379685802202126e+29, 2.307544588932445, 2.3080487410626342, 2.3086009274982677, 2.309204260781142], "accuracy": [0.042926959693431854, 0.049531105905771255, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1468748365129744, 57686896054.85714, 1.9786742074148995, 1.979132992880685, 1.9796320370265417, 1.9801767213003976, 1.9807866641453333], "val_accuracy": [0.00566666666418314, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1], [5, 9, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 2, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 1, 0, 3, 0, 2], [49, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [177665007.85175648, 3373871801.837538, 15776868815.91758, 44608956011.052704, 95701039523.55461, 175178639751.963], "accuracy": [0.10474177449941635, 0.10249637067317963, 0.10513802617788315, 0.10130762308835983, 0.09668471664190292, 0.09826971590518951], "val_loss": [672162432.0, 5374208292.571428, 18134507520.0, 42981621760.0, 83943580818.28572, 145049166994.2857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 0, 6, 4, 0, 2, 4], [3, 3, 0], [66, 55, 63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [2, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 5, 0, 3, 2, 2, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [30, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), alpha)", "other_info": {"loss": [2.30246160002338, 2.302582274496028, 2.302586697536988, 2.302583613966938, 2.3025871748465114, 2.3025862827056653], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736455508640833, 1.9736462320600237, 1.9736467088971819, 1.9736429623195104, 1.9736449377877372, 1.9736484118870325], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 7, 9, 0, 6, 1, 0, 2, 4], [2, 3, 1, 5, 3, 4], [66, 55, 63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [30, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [2.3028584341914065, 2.300899059261392, 2.3023508907923245, 2.3026235540072837, 2.3033715235700445, 2.3020745278853374], "accuracy": [0.09325055778026581, 0.09008057415485382, 0.09126931428909302, 0.09377889335155487, 0.09074098616838455, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 11, 7, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(alpha), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3028584341914065, 2.300899059261392, 2.3023508907923245, 2.3026235540072837, 2.3033715235700445, 2.3020745278853374], "accuracy": [0.09325055778026581, 0.09008057415485382, 0.09126931428909302, 0.09377889335155487, 0.09074098616838455, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3028584341914065, 2.300899059261392, 2.3023508907923245, 2.3026235540072837, 2.3033715235700445, 2.3020745278853374], "accuracy": [0.09325055778026581, 0.09008057415485382, 0.09126931428909302, 0.09377889335155487, 0.09074098616838455, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 2, 0, 6, 4, 0, 2, 4], [2, 0, 0, 5, 3, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028584341914065, 2.300899059261392, 2.3023508907923245, 2.3026235540072837, 2.3033715235700445, 2.3020745278853374], "accuracy": [0.09325055778026581, 0.09008057415485382, 0.09126931428909302, 0.09377889335155487, 0.09074098616838455, 0.09179764986038208], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]