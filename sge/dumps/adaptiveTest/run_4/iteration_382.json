[{"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0626624357651537, 1.493062960048157, 1.0496326224710397, 0.8753039592828071, 0.8160372972094766, 0.7400660911697233, 0.7011087530985989, 0.6711269381449065, 0.6341642627012555, 0.6241632937644971, 0.588005205564936, 0.6038812880014716, 0.5742955020453085, 0.5720747826972012, 0.5435340906556225, 0.5401100602368512, 0.52769849402258, 0.5025305965037756, 0.5150537596339673, 0.5008997239015988, 0.48635833905184384, 0.47382139342414736, 0.46565050871191777, 0.4862590806831568, 0.44619469214124985, 0.4468929732771692, 0.42908649400650095, 0.40223919438758404, 0.43162824725430826, 0.42144485072862237, 0.41084941146616544, 0.3914521430241292, 0.41862730134542764, 0.381061170110928], "accuracy": [0.31145158410072327, 0.4637432396411896, 0.6066569685935974, 0.669792652130127, 0.6852463483810425, 0.7113987803459167, 0.7317395210266113, 0.7403249144554138, 0.7611940503120422, 0.7544577717781067, 0.7712323069572449, 0.7614582180976868, 0.7799497842788696, 0.7821952104568481, 0.7918372750282288, 0.7973847389221191, 0.7984414100646973, 0.8140271902084351, 0.8123101592063904, 0.8103289008140564, 0.8182538747787476, 0.819970965385437, 0.8256505131721497, 0.8206313848495483, 0.834632158279419, 0.8314621448516846, 0.837537944316864, 0.8495575189590454, 0.8389908671379089, 0.8437458872795105, 0.8421608805656433, 0.8564258217811584, 0.8455950617790222, 0.8638224601745605], "val_loss": [1.4484556743076868, 0.9463456358228411, 0.6716125692640033, 0.5932271650859288, 0.577642730304173, 0.5498699120112828, 0.49700730187552317, 0.4862109763281686, 0.4898104156766619, 0.45068984372275217, 0.4913806234087263, 0.44919845036097933, 0.44242105313709806, 0.41646374123437063, 0.4264194369316101, 0.4122295549937657, 0.39063823223114014, 0.3802085093089512, 0.3795274496078491, 0.37158903905323576, 0.3729453257152012, 0.3843094365937369, 0.4135701656341553, 0.3675436292375837, 0.3640104191643851, 0.38118207454681396, 0.3377411110060556, 0.37068015336990356, 0.3350683535848345, 0.3355579035622733, 0.349366409437997, 0.3699950575828552, 0.32734978199005127, 0.34181950773511616], "val_accuracy": [0.33500000834465027, 0.6103333234786987, 0.7009999752044678, 0.7279999852180481, 0.7396666407585144, 0.731333315372467, 0.781333327293396, 0.7766666412353516, 0.7689999938011169, 0.8036666512489319, 0.7816666960716248, 0.8053333163261414, 0.7983333468437195, 0.8083333373069763, 0.8056666851043701, 0.8023333549499512, 0.8356666564941406, 0.8383333086967468, 0.8356666564941406, 0.8429999947547913, 0.840666651725769, 0.8140000104904175, 0.8186666369438171, 0.8493333458900452, 0.8503333330154419, 0.824999988079071, 0.8586666584014893, 0.8363333344459534, 0.862666666507721, 0.8606666922569275, 0.8500000238418579, 0.8463333249092102, 0.8613333106040955, 0.8536666631698608]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0620693026469477, 1.5158915440199507, 1.136769394691295, 0.8966865408941739, 0.828838778792308, 0.7289406335774257, 0.706839338584646, 0.6651455334400882, 0.6529587759963431, 0.6195877987112525, 0.6153299821413519, 0.5776005930920098, 0.569405378769134, 0.5863097231732289, 0.5457524430041678, 0.5373416975693632, 0.5298721405729532, 0.5091438570578085, 0.5324515498797686, 0.48862738358015556, 0.4806311556676029, 0.4784757876755177, 0.48057416725813706, 0.47764877330405037, 0.44460662523942174, 0.4342879976862221, 0.44703105634875256, 0.42881752104413445, 0.4281692085737219, 0.41772910383761347, 0.4087846581891165, 0.39518104827226097, 0.4333711568398514, 0.3917898686413027, 0.39284958504509415, 0.37628334367421673, 0.37532759284724365, 0.37658118682058184, 0.36561499017419563, 0.35913703307310635, 0.3568451317223292, 0.373212845723674, 0.3357832852159084, 0.35080109321918346, 0.3472259657344546, 0.34099446346715395, 0.32857750123754204], "accuracy": [0.31158366799354553, 0.4496103525161743, 0.5987319946289062, 0.6667547225952148, 0.6803592443466187, 0.715889573097229, 0.7308149337768555, 0.7453441023826599, 0.7477215528488159, 0.7577598690986633, 0.7609298825263977, 0.7730814814567566, 0.7864218950271606, 0.7714964747428894, 0.7876105904579163, 0.7985734939575195, 0.7964601516723633, 0.8115176558494568, 0.802800178527832, 0.8149517774581909, 0.8171972036361694, 0.8219521641731262, 0.819442629814148, 0.8190463781356812, 0.8358209133148193, 0.8392550349235535, 0.828292191028595, 0.8430854678153992, 0.8397833704948425, 0.8449346423149109, 0.8459912538528442, 0.8548408150672913, 0.8343679904937744, 0.8553691506385803, 0.8541803956031799, 0.8584070801734924, 0.860652506351471, 0.8552370667457581, 0.8647470474243164, 0.8669924736022949, 0.8689737319946289, 0.860652506351471, 0.8754457831382751, 0.8679170608520508, 0.8696341514587402, 0.8710870146751404, 0.8759741187095642], "val_loss": [1.44596494947161, 1.1005328042166573, 0.6919854027884347, 0.6684846196855817, 0.5600610460553851, 0.5428576299122402, 0.5040692942483085, 0.5008871725627354, 0.4823284830365862, 0.4546866757529123, 0.4547981023788452, 0.4562932252883911, 0.48011127540043425, 0.42175369603293283, 0.4106828144618443, 0.40680621351514545, 0.385868889944894, 0.4009976387023926, 0.3868977001735142, 0.35990164961133686, 0.377936201436179, 0.3869444727897644, 0.4056120940617153, 0.35682469606399536, 0.35325461626052856, 0.41331411259514944, 0.34133302313940866, 0.3683902195521763, 0.33905403103147236, 0.3342890058244978, 0.3364983711923872, 0.391903213092259, 0.33072142941611155, 0.32521210397992817, 0.32527564253125874, 0.3386266997882298, 0.32324581486838205, 0.3158784168107169, 0.3080377834183829, 0.3420896019254412, 0.32241501978465487, 0.3035258821078709, 0.31584187916346956, 0.34582046951566425, 0.32887384721211027, 0.3177514501980373, 0.3236725500651768], "val_accuracy": [0.3373333215713501, 0.5963333249092102, 0.6983333230018616, 0.6903333067893982, 0.7450000047683716, 0.737666666507721, 0.7763333320617676, 0.7710000276565552, 0.7933333516120911, 0.8019999861717224, 0.7953333258628845, 0.7829999923706055, 0.7743333578109741, 0.8016666769981384, 0.8180000185966492, 0.8043333292007446, 0.8379999995231628, 0.8240000009536743, 0.8339999914169312, 0.8519999980926514, 0.8393333554267883, 0.8263333439826965, 0.8216666579246521, 0.8516666889190674, 0.8573333621025085, 0.8040000200271606, 0.8579999804496765, 0.8346666693687439, 0.8566666841506958, 0.859333336353302, 0.8576666712760925, 0.8199999928474426, 0.859333336353302, 0.8619999885559082, 0.8693333268165588, 0.8516666889190674, 0.8579999804496765, 0.8703333139419556, 0.8703333139419556, 0.8619999885559082, 0.8629999756813049, 0.8786666393280029, 0.8669999837875366, 0.8553333282470703, 0.8650000095367432, 0.8706666827201843, 0.8683333396911621]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8094285726547241, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.06191059771845, 1.5147169101129607, 1.1393319465748433, 0.8913019988294669, 0.8087129582346013, 0.7398399047139236, 0.699493480963147, 0.668835949297862, 0.639765667972028, 0.6223944430700178, 0.6147669340562448, 0.5756761155596436, 0.5656080640554271, 0.579281255679596, 0.5414351576024263, 0.5329738667360496, 0.5237403487044398, 0.4984555979997506, 0.5202414000102038, 0.4897498170445545, 0.4755219659509597, 0.46363728121759523, 0.48439756107840476, 0.47081324084953563, 0.4309073431325579, 0.4391320743352635, 0.439641768677895, 0.4144088406257972, 0.4168999883256584, 0.43119729118277256, 0.4059742534944741, 0.39946083527483, 0.4129665156027046, 0.3782325774104509, 0.3874167445793663, 0.37254008720453624, 0.36270735238552915, 0.37377495457310134, 0.3723339916826507, 0.3600914261250086, 0.3589134004767608, 0.3785643163193108], "accuracy": [0.31158366799354553, 0.45145952701568604, 0.5955620408058167, 0.6662263870239258, 0.6921146512031555, 0.7147008180618286, 0.7338528633117676, 0.7400607466697693, 0.755118191242218, 0.7578919529914856, 0.7642319202423096, 0.7738739848136902, 0.7874785661697388, 0.7750627398490906, 0.7903843522071838, 0.8000264167785645, 0.7981772422790527, 0.8170651197433472, 0.805177628993988, 0.8145555257797241, 0.8152159452438354, 0.8280280232429504, 0.8197067975997925, 0.8241975903511047, 0.841500461101532, 0.8337075710296631, 0.8294808864593506, 0.8467837572097778, 0.8485008478164673, 0.8407079577445984, 0.8481045961380005, 0.8516708612442017, 0.8470479249954224, 0.8634262084960938, 0.852859616279602, 0.859199583530426, 0.8687095642089844, 0.8601241707801819, 0.8581429123878479, 0.8671245574951172, 0.8673887252807617, 0.859199583530426], "val_loss": [1.4454209804534912, 1.0536648545946394, 0.6965259313583374, 0.6010906866618565, 0.5482387883322579, 0.5248998744147164, 0.5048944268907819, 0.49568537303379606, 0.4827581984656198, 0.4709159646715437, 0.4517061710357666, 0.4247123343603952, 0.4301266925675528, 0.4137845720563616, 0.4235353980745588, 0.40702228035245624, 0.3918482576097761, 0.38194525241851807, 0.3834859388215201, 0.358399646622794, 0.3765230008534023, 0.39889848232269287, 0.4103179063115801, 0.3591685635702951, 0.36545714310237337, 0.4050824727330889, 0.34184134006500244, 0.37609429018838064, 0.3401894228799002, 0.3376347933496748, 0.3619733623095921, 0.3510658230100359, 0.32969204017094206, 0.3277182238442557, 0.3258130039487566, 0.31575328963143484, 0.3168537361281259, 0.3253247993332999, 0.3135050024305071, 0.34661843947001864, 0.323417672089168, 0.31783522026879446], "val_accuracy": [0.3373333215713501, 0.5889999866485596, 0.6809999942779541, 0.7456666827201843, 0.7566666603088379, 0.7636666893959045, 0.7703333497047424, 0.7693333625793457, 0.7853333353996277, 0.7896666526794434, 0.7923333048820496, 0.8143333196640015, 0.8009999990463257, 0.8053333163261414, 0.8066666722297668, 0.8066666722297668, 0.8309999704360962, 0.8423333168029785, 0.8333333134651184, 0.8503333330154419, 0.8383333086967468, 0.8209999799728394, 0.8166666626930237, 0.8539999723434448, 0.8353333473205566, 0.8053333163261414, 0.859333336353302, 0.828000009059906, 0.8600000143051147, 0.8553333282470703, 0.8410000205039978, 0.8489999771118164, 0.8610000014305115, 0.8633333444595337, 0.8656666874885559, 0.8659999966621399, 0.8679999709129333, 0.8629999756813049, 0.8646666407585144, 0.8610000014305115, 0.8633333444595337, 0.8673333525657654]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0620232322795156, 1.503080736817685, 1.0913862471394078, 0.9032421581749241, 0.8083503315823819, 0.7164956355579871, 0.694078255370466, 0.6742930475431993, 0.6567919694153923, 0.6140346196207624, 0.6147925323735233, 0.5786037209043099, 0.5704139481918482, 0.5639923614927208, 0.5348165471949645, 0.538494069767414, 0.5222535851514728, 0.5090508644433778, 0.5239416161674345, 0.47737951255698075, 0.4676178393425675, 0.470107907777953, 0.46187543813909254, 0.44514441496077906, 0.473862930720965, 0.43087398417007655, 0.42565866741506164], "accuracy": [0.3117157518863678, 0.4574032425880432, 0.5995244979858398, 0.6645092964172363, 0.6917183995246887, 0.7265883088111877, 0.7298903465270996, 0.7380794882774353, 0.7405890822410583, 0.76106196641922, 0.7604015469551086, 0.776251494884491, 0.7824593782424927, 0.7821952104568481, 0.7947431206703186, 0.7959318161010742, 0.7968564033508301, 0.8156121969223022, 0.8059701323509216, 0.8152159452438354, 0.8269713521003723, 0.8216879963874817, 0.8304054737091064, 0.8381983637809753, 0.8267071843147278, 0.8381983637809753, 0.8411042094230652], "val_loss": [1.4457652568817139, 1.0345183100019182, 0.7840149062020438, 0.618315305028643, 0.5476996387754168, 0.5722296919141497, 0.5050939321517944, 0.4904614346367972, 0.4683892386300223, 0.4690335307802473, 0.49431824684143066, 0.4220523067883083, 0.43282475641795565, 0.41250338724681307, 0.4389298643384661, 0.40951280082975117, 0.3861153892108372, 0.3995913863182068, 0.38172917706625803, 0.36226040976388113, 0.3831400190080915, 0.3629500610487802, 0.36350707496915546, 0.36135001693453106, 0.36050511257989065, 0.3851949061666216, 0.35475644895008634], "val_accuracy": [0.335999995470047, 0.5776666402816772, 0.6683333516120911, 0.7123333215713501, 0.7596666812896729, 0.7196666598320007, 0.7573333382606506, 0.7580000162124634, 0.7896666526794434, 0.7960000038146973, 0.7730000019073486, 0.8143333196640015, 0.8029999732971191, 0.8086666464805603, 0.7983333468437195, 0.809333324432373, 0.8479999899864197, 0.8303333520889282, 0.8396666646003723, 0.8450000286102295, 0.8366666436195374, 0.8510000109672546, 0.8500000238418579, 0.843999981880188, 0.8450000286102295, 0.8230000138282776, 0.8496666550636292]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 8, 0, 1, 9, 6, 5, 2, 8, 5, 4, 0, 3, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8031428456306458, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(alpha), alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0623965377679134, 1.5077367969680975, 1.0758379455554943, 0.8913335205777729, 0.821433500921753, 0.7334305389666554, 0.7002231935940839, 0.6773069291507815, 0.6512900780393872, 0.620338329447259, 0.6090181254754843, 0.5746669818176932, 0.5715762721060951, 0.5703497022496647, 0.5430202509244955, 0.5353670792415268, 0.5271230329926838, 0.5051576126410646, 0.5227292521266638, 0.4848232510114752, 0.4846761446028432, 0.4599046564262777, 0.4768965142537826, 0.4730222476802529, 0.43888841967982006, 0.4276670642564199, 0.4412720374395945, 0.4141001032997258, 0.4176211100346723, 0.43412039495966204, 0.41233780724639196, 0.39578128564060167, 0.41515687577649824, 0.3847177986140737, 0.39420787730095425, 0.3700143550018892, 0.36274874013932373, 0.3793600843945011, 0.37015565209904555, 0.3580375254713171], "accuracy": [0.3117157518863678, 0.4571390748023987, 0.6015057563781738, 0.6650376319885254, 0.6877558827400208, 0.7164179086685181, 0.7347774505615234, 0.7362303733825684, 0.7470611333847046, 0.7609298825263977, 0.7642319202423096, 0.778232753276825, 0.7866860628128052, 0.7791573405265808, 0.7882710099220276, 0.7992339134216309, 0.7960638999938965, 0.81548011302948, 0.8084797263145447, 0.8132346868515015, 0.8161405324935913, 0.829216718673706, 0.8210275769233704, 0.8249900937080383, 0.8393871188163757, 0.8380662798881531, 0.8330471515655518, 0.844010055065155, 0.8490291833877563, 0.8393871188163757, 0.8408400416374207, 0.8533879518508911, 0.8469158411026001, 0.8598600029945374, 0.8510104417800903, 0.8632941246032715, 0.8668603897094727, 0.8564258217811584, 0.8576145768165588, 0.868049144744873], "val_loss": [1.4473965508597237, 0.9403887816837856, 0.8423568521227155, 0.6473954234804425, 0.5547159058707101, 0.5415514026369367, 0.5013375111988613, 0.4777535540716989, 0.4720905678612845, 0.4676972116742815, 0.45579258033207487, 0.4406326413154602, 0.4466020039149693, 0.4152522768293108, 0.41023071323122295, 0.4003427198954991, 0.39490015166146414, 0.3831178545951843, 0.3854430743626186, 0.36387245995657785, 0.3783766371863229, 0.3829657520566668, 0.39000544377735685, 0.3574291467666626, 0.35874147926058086, 0.3923267551830837, 0.34893809046064106, 0.3717766148703439, 0.3409747907093593, 0.34218558243342806, 0.33854178871427265, 0.3721074547086443, 0.3296845981052944, 0.3292555553572519, 0.32521952050072805, 0.31768475260053364, 0.32773683752332416, 0.32196944100516184, 0.3115972706249782, 0.34454511744635447], "val_accuracy": [0.3356666564941406, 0.6103333234786987, 0.6303333044052124, 0.703000009059906, 0.750333309173584, 0.7360000014305115, 0.7666666507720947, 0.7983333468437195, 0.7953333258628845, 0.7946666479110718, 0.7983333468437195, 0.8076666593551636, 0.7960000038146973, 0.8086666464805603, 0.8153333067893982, 0.8106666803359985, 0.8263333439826965, 0.8376666903495789, 0.831333339214325, 0.8543333411216736, 0.8376666903495789, 0.8289999961853027, 0.8326666951179504, 0.8550000190734863, 0.843999981880188, 0.8090000152587891, 0.8553333282470703, 0.8346666693687439, 0.8560000061988831, 0.8489999771118164, 0.8539999723434448, 0.8386666774749756, 0.8636666536331177, 0.8659999966621399, 0.8693333268165588, 0.8659999966621399, 0.8610000014305115, 0.8656666874885559, 0.8663333058357239, 0.8633333444595337]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 2, 9, 7, 1, 0, 2, 5, 2, 8, 3, 2, 0, 6, 5, 4, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 2, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 35, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 3, 0, 8], [0, 3, 0, 0, 0, 0, 2], [46, 63, 85, 12, 11]], "fitness": -0.7459999918937683, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 9, 7, 5], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), sigma), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta))))", "other_info": {"loss": [2.2997531817495043, 2.284478113210716, 2.2553846745395925, 2.212024908150192, 2.1422883898999947, 2.0288780336099106, 1.858197624027422, 1.6435368520519784, 1.4622720129942426, 1.3840788252491285, 1.3604430903564622, 1.3513754658994421, 1.2077480268484693, 1.0753240545490996, 0.9460933623596064, 0.9154309699123152, 0.9354823581877323, 0.9211818845737186, 0.872104702608665, 0.8287533577391343, 0.8174480633602764, 0.820074512493719, 0.8221284598800973, 0.8216272731341265, 0.8115834826727774, 0.8036637510275245, 0.7744072042971459, 0.7521241766319079, 0.7321540307469608, 0.7399933011918225, 0.7431964861986077, 0.7510306289041393, 0.7302654759207768, 0.713673672923606, 0.692673830048535, 0.6953193591554576, 0.6944419241867927, 0.6823315759061618, 0.6878270284453435, 0.6846029505108042, 0.6826877054631545, 0.6588291792176135, 0.644684909994828, 0.6423464358726811, 0.6310705240014333, 0.6309865159743403, 0.6303454857964668, 0.626383455217538], "accuracy": [0.09945846349000931, 0.137630432844162, 0.22691850364208221, 0.30563995242118835, 0.36428478360176086, 0.39624884724617004, 0.4243825078010559, 0.4566107392311096, 0.497820645570755, 0.5301809310913086, 0.548540472984314, 0.5597675442695618, 0.6083740592002869, 0.6316206455230713, 0.6494518518447876, 0.6535464525222778, 0.6634526252746582, 0.68101966381073, 0.6907938122749329, 0.698718786239624, 0.6995112895965576, 0.6936996579170227, 0.7028133869171143, 0.6989829540252686, 0.7037379741668701, 0.705058753490448, 0.7129837274551392, 0.7176066637039185, 0.7168141603469849, 0.7191916704177856, 0.7223616242408752, 0.7156254053115845, 0.7318716049194336, 0.7345132827758789, 0.739400327205658, 0.7424382567405701, 0.7430986762046814, 0.7479857206344604, 0.7436270117759705, 0.7434949278831482, 0.7404569983482361, 0.7473253011703491, 0.7553823590278625, 0.7572315335273743, 0.7637035846710205, 0.7629110813140869, 0.7622507214546204, 0.7671377658843994], "val_loss": [1.9621029581342424, 1.9400638852800642, 1.9060735702514648, 1.856489590236119, 1.7740258489336287, 1.6339096001216344, 1.4187838350023543, 1.167595454624721, 0.9677126748221261, 0.8360712017331805, 0.7798847130366734, 0.7136524575097221, 0.7063026087624686, 0.6471368585314069, 0.6465801681791034, 0.6817953756877354, 0.6985458305903843, 0.6679184266499111, 0.6136423519679478, 0.5837345123291016, 0.5714651005608695, 0.5622623818261283, 0.5692812715257917, 0.5711549350193569, 0.5645288569586617, 0.5502474137714931, 0.5354548181806292, 0.5288154397691999, 0.5337212426321847, 0.5473123107637677, 0.5536507197788784, 0.5451998029436383, 0.5270520789282662, 0.5106646333421979, 0.5027514696121216, 0.49900710582733154, 0.49381462165287565, 0.48734237466539654, 0.47951386656079975, 0.46998025689806255, 0.46106902190617155, 0.45491460391453337, 0.4510137694222586, 0.4483056238719395, 0.44905078411102295, 0.45217059339795795, 0.453810453414917, 0.45038299901144846], "val_accuracy": [0.1003333330154419, 0.3070000112056732, 0.3903333246707916, 0.41966667771339417, 0.45266667008399963, 0.49399998784065247, 0.5546666383743286, 0.6006666421890259, 0.6549999713897705, 0.6736666560173035, 0.6759999990463257, 0.7093333601951599, 0.7153333425521851, 0.721666693687439, 0.7273333072662354, 0.6983333230018616, 0.7456666827201843, 0.7480000257492065, 0.7423333525657654, 0.734333336353302, 0.7390000224113464, 0.7536666393280029, 0.7436666488647461, 0.7473333477973938, 0.7566666603088379, 0.7583333253860474, 0.7583333253860474, 0.7630000114440918, 0.7699999809265137, 0.7710000276565552, 0.7639999985694885, 0.765333354473114, 0.7689999938011169, 0.7713333368301392, 0.7749999761581421, 0.7773333191871643, 0.7756666541099548, 0.7806666493415833, 0.7833333611488342, 0.7913333177566528, 0.7953333258628845, 0.8029999732971191, 0.8043333292007446, 0.8029999732971191, 0.796999990940094, 0.7946666479110718, 0.7940000295639038, 0.7953333258628845]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.4214285612106323, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.2251469961105164, 1.7602684202132493, 1.328152430670026, 1.9393065641773786, 1.4119584681162383, 1.3296613680168528, 1.227229816487531, 1.4195879502870214], "accuracy": [0.31158366799354553, 0.44564786553382874, 0.5713908076286316, 0.5048210024833679, 0.5440496802330017, 0.5624092221260071, 0.5912032723426819, 0.5655791759490967], "val_loss": [1.8591585840497697, 0.8621759074074882, 0.7518113510949271, 0.9405666078839984, 0.8636940036501203, 0.7903546265193394, 0.8003631319318499, 1.1238554545811243], "val_accuracy": [0.37833333015441895, 0.6650000214576721, 0.6923333406448364, 0.6190000176429749, 0.6693333387374878, 0.6830000281333923, 0.6823333501815796, 0.5846666693687439]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 5, 1, 1, 0, 0, 9, 0, 8], [2, 1, 0, 1, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.3537142872810364, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(beta), alpha), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.2858478958108215, 2.190525766125035, 2.171778557496127, 2.1392770869116884, 2.2641891611880474, 2.3053828163421572, 2.3045694003598314, 2.303886234673684], "accuracy": [0.21318188309669495, 0.21159687638282776, 0.2222955971956253, 0.2339189052581787, 0.2122572958469391, 0.10460969805717468, 0.09259014576673508, 0.09576013684272766], "val_loss": [1.86070374080113, 1.972334657396589, 1.7953073637826102, 1.9699337823050362, 1.9759116172790527, 1.9740056991577148, 1.974092960357666, 1.973710605076381], "val_accuracy": [0.14166666567325592, 0.09666666388511658, 0.2993333339691162, 0.14133332669734955, 0.10366666316986084, 0.10300000011920929, 0.10300000011920929, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [27, 12, 93, 29], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 8, 8, 6, 9], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.23485714197158813, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.225143147749341, 1.7447828576234448, 1.2272335241310444, 1.068932271794148, 2.0109256074381636, 2.387555793103172e+22, NaN, NaN, NaN], "accuracy": [0.31145158410072327, 0.44749704003334045, 0.5971469879150391, 0.6458855867385864, 0.4846123456954956, 0.18755778670310974, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8592378071376257, 0.8132450410297939, 0.6466012511934552, 0.679574830191476, 7.851706641060965, NaN, NaN, NaN, NaN], "val_accuracy": [0.3776666522026062, 0.6883333325386047, 0.7013333439826965, 0.7260000109672546, 0.39666667580604553, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.17485713958740234, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [3.1929765431289865, 2.5152320346308263, 2.2950188426797604, 2.4851300416605553, 2.3048591499457096, 2.3035602618706084, 2.3034849685527363, 2.3031685760764082], "accuracy": [0.16232994198799133, 0.16616034507751465, 0.1290450394153595, 0.13340377807617188, 0.10328886657953262, 0.09721305221319199, 0.10276053100824356, 0.09893012791872025], "val_loss": [1.973646572657994, 1.9769596372331892, 1.863194465637207, 1.9755961554391044, 1.9740913254874093, 1.9739553587777274, 1.9738086291721888, 1.973848819732666], "val_accuracy": [0.10066666454076767, 0.10366666316986084, 0.15433333814144135, 0.09733333438634872, 0.09733333438634872, 0.09666666388511658, 0.10300000011920929, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 1, 0, 0, 0, 2, 2], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [2, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 6, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [29, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)), tf.math.add(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022908141285185, 2.302264985973966, 2.3026035675960306, 2.304374610050369, 2.3122164615786795, 2.348767146552795], "accuracy": [0.10302469879388809, 0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736240250723702, 1.9736202784946986, 1.9741781098502023, 1.9770856584821428, 1.9911818504333496, 2.064798286982945], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 4, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 54, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 20, 20, 13, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.4302486645564224e+30, 2.459738303578651, 2.804094693443763, 3.9649267810730335, 6.052679159070963, 8.404378198818398], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0628461156572615, 2.2232891491481235, 2.83729887008667, 4.396103995186942, 6.388909203665597, 8.427543367658343], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 2, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 9, 93, 71, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 1, 0, 5, 1, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026967471569537, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [9, 2, 2, 9, 7, 1, 0, 2, 5, 2, 8, 3, 4, 0, 6, 5, 4, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 2, 1, 0, 5, 4, 0, 8, 4, 8, 2, 1, 2, 2, 9, 7, 1, 2, 1, 2, 9, 6, 6, 5, 0, 2, 8, 6, 1, 9, 6, 3, 6, 4, 3, 4, 6, 4, 8, 2, 8, 2, 6, 1, 4, 3, 0, 1], [3, 2, 3, 0, 3, 0, 2, 2, 0, 1, 2, 3, 2, 2, 0, 2, 2, 1, 0, 1, 0, 3, 1, 2, 1, 2, 0, 0, 1, 0, 0, 3, 2, 1], [46, 63, 85, 12, 83, 80, 60, 81, 75, 7, 75, 22, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 85, 51, 34, 13], "tree_depth": 45, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(sigma), tf.math.square(beta)), sigma), tf.math.pow(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), sigma))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, sigma), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), beta), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(beta), tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.subtract(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(beta, tf.math.pow(tf.math.multiply(alpha, beta), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), alpha)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), sigma))))))), tf.math.subtract(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 2, 5, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0, 9], [2, 1, 3, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 1, 3, 0, 2], [81, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 15, 6, 5, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 1, 0, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026967471569537, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [7, 2, 2, 1, 7, 1, 0, 2, 2, 2, 8, 3, 4, 0, 6, 5, 3, 0, 8, 7, 4, 7, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1, 2, 3, 3], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 2, 2, 1, 0, 0, 4, 0, 8, 3, 4, 4, 4, 3, 4, 7, 9, 6, 0, 2, 7, 8, 0], [2, 3, 0, 0, 3, 0, 2, 3, 2, 0, 2, 1, 1, 1, 1, 0], [46, 63, 85, 12, 87, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 30, 20, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 41, 25, 16, 6], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(grad), grad))))), tf.math.multiply(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(beta), tf.math.add(tf.math.add(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(sigma), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.math.multiply(tf.math.pow(tf.math.pow(beta, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, beta)), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(alpha))), alpha)), alpha), tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 2, 5, 7, 1, 0, 2, 5, 2, 8, 9, 4, 0], [2, 0, 1, 0, 0, 0, 2, 2], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 5, 0, 3, 1, 3], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [54, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 28, 28, 16, 12, 0, 1, 1, 0, 1, 0, 11, 7, 4, 3], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha))))))))), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 1, 0, 0, 0, 2, 2], [27, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026967471569537, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 3, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 3, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [1.4301897431949856e+30, 2.4597379391959566, 2.8040937623170232, 3.9649242304886463, 6.052675821210856, 8.404374447103189], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0628460475376675, 2.2232887404305592, 2.837297167096819, 4.396100861685617, 6.388906478881836, 8.427540915352958], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}]