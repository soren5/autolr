[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.259737409573536, 2.0700989114358017, 1.6525195527306606, 1.2745797050281082, 1.1021120256326453, 1.000618403078527, 0.9362448397376801, 0.8892525991885228, 0.8531537072738211, 0.8395843012080043, 0.8206718408546554, 0.7831384454657137, 0.7659814762889654, 0.7559441165869908, 0.7487837762927745, 0.7267778977552944, 0.7132728376550413, 0.7049613384648777, 0.6934320774328407, 0.6884848147162262, 0.6752760705064867, 0.6791671525690424, 0.6597886485131409, 0.6565835176441946, 0.6498715144028171, 0.6408621703534472, 0.6423730136947924, 0.6325739700764933, 0.6334682861260609, 0.6187555188153949, 0.6306176534056144, 0.609822472198969, 0.6120156835350835, 0.603413575219283, 0.596323834379131, 0.6010185296131462, 0.5933287755971604, 0.598322875188594], "accuracy": [0.19970941543579102, 0.3823801279067993, 0.48487651348114014, 0.5676925182342529, 0.6176198720932007, 0.6532822847366333, 0.6670188903808594, 0.6803592443466187, 0.6942279934883118, 0.6942279934883118, 0.7029454708099365, 0.7170783281326294, 0.7276449799537659, 0.7289658188819885, 0.7346453666687012, 0.7383436560630798, 0.7403249144554138, 0.7461365461349487, 0.7467969655990601, 0.7514199018478394, 0.7585523724555969, 0.7485140562057495, 0.7606657147407532, 0.7643640041351318, 0.7667415142059326, 0.7675340175628662, 0.7644960880279541, 0.7736098170280457, 0.7687227725982666, 0.7750627398490906, 0.7675340175628662, 0.7736098170280457, 0.7755910754203796, 0.7777044177055359, 0.7799497842788696, 0.7795535326004028, 0.7827235460281372, 0.7799497842788696], "val_loss": [1.856424263545445, 1.532658508845738, 1.0669711998530798, 0.8437524523053851, 0.7246017966951642, 0.7033687319074359, 0.6290709461484637, 0.6023919582366943, 0.5780006647109985, 0.6254098415374756, 0.5517294747488839, 0.5333245992660522, 0.534491879599435, 0.5257951702390399, 0.5141720771789551, 0.4971057517187936, 0.507665753364563, 0.49545889241354807, 0.494326114654541, 0.47181192466190885, 0.47763841492789133, 0.4798792941229684, 0.46725005762917654, 0.4587194749287197, 0.4471759285245623, 0.4560075487409319, 0.4550037384033203, 0.4382170098168509, 0.4455547162464687, 0.45124612535749165, 0.43243119546345304, 0.43564677238464355, 0.4234866670199803, 0.4294314384460449, 0.4311225243977138, 0.41841078656060354, 0.42952502625329153, 0.41297177757535664], "val_accuracy": [0.4283333420753479, 0.5383333563804626, 0.6433333158493042, 0.6883333325386047, 0.7253333330154419, 0.6983333230018616, 0.7426666617393494, 0.7513333559036255, 0.7576666474342346, 0.718666672706604, 0.7599999904632568, 0.7703333497047424, 0.762666642665863, 0.7603333592414856, 0.7689999938011169, 0.7913333177566528, 0.7839999794960022, 0.7896666526794434, 0.7739999890327454, 0.7983333468437195, 0.7823333144187927, 0.7796666622161865, 0.8109999895095825, 0.8023333549499512, 0.8136666417121887, 0.8090000152587891, 0.800000011920929, 0.8176666498184204, 0.8159999847412109, 0.7973333597183228, 0.8163333535194397, 0.8180000185966492, 0.8240000009536743, 0.812666654586792, 0.8203333616256714, 0.8166666626930237, 0.8223333358764648, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3], [32, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.7760000228881836, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(beta), grad)), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2097715953274677, 1.6421216197411272, 1.1811063375770299, 1.095478891452479, 0.9061194211736631, 0.8629803510940999, 0.8244293862251385, 0.8068435010562374, 0.7546979471157413, 0.7372094180763138, 0.7210197818120236, 0.7113765781235307, 0.6986540664755484, 0.6788621718432248, 0.669403214433237, 0.6550257615425237, 0.6494277208283782, 0.6456952754217699, 0.6303618597694597, 0.6327664563369599, 0.6234091687684267, 0.6197093442651211], "accuracy": [0.26099589467048645, 0.48989564180374146, 0.5865803956985474, 0.6090344786643982, 0.6822084188461304, 0.6930392384529114, 0.6993792057037354, 0.7087571024894714, 0.7219653725624084, 0.7214370369911194, 0.735569953918457, 0.7372870445251465, 0.7415136694908142, 0.7508915662765503, 0.7481178045272827, 0.755118191242218, 0.7605336308479309, 0.759609043598175, 0.7637035846710205, 0.7633073329925537, 0.7696473598480225, 0.7668735980987549], "val_loss": [1.656033652169364, 0.9188933372497559, 0.8593594517026629, 0.6721513441630772, 0.6142387560435704, 0.5813724313463483, 0.5791209595543998, 0.5446194921221051, 0.5275052956172398, 0.5086686100278582, 0.508656518799918, 0.5007457392556327, 0.4779921770095825, 0.4800166061946324, 0.5024292809622628, 0.46910369396209717, 0.46527223927634104, 0.4454362562724522, 0.4608910935265677, 0.45377612113952637, 0.5257328408105033, 0.4489605597087315], "val_accuracy": [0.5666666626930237, 0.6566666960716248, 0.6203333139419556, 0.7126666903495789, 0.7279999852180481, 0.7396666407585144, 0.7440000176429749, 0.7680000066757202, 0.7703333497047424, 0.7806666493415833, 0.7839999794960022, 0.768666684627533, 0.8023333549499512, 0.7713333368301392, 0.781000018119812, 0.7896666526794434, 0.8040000200271606, 0.8026666641235352, 0.8013333082199097, 0.7956666946411133, 0.746999979019165, 0.7983333468437195]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [76, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 56, 12]], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3020356472346917, 2.303347775460927, 2.302191468057316, 2.3029180474017417, 2.3020786416214123, 2.3029899036312744, 2.3030336331130807, 2.3015632351328748, 2.3017154149312575, 2.300871355154763, 2.3019065462665913, 2.3010285261552474, 2.3002026571715435, 2.3011937598038377, 2.2999233729677777, 2.3002007838962037, 2.3000524525849606, 2.300162268226582, 2.300647254885148, 2.300376492122287, 2.3010350152281345, 2.3001322614959268, 2.298791274922383, 2.2990894996258624, 2.2985959439119563, 2.3007644247212005, 2.300918514198552, 2.299972655703568, 2.3001033813883174, 2.299176366274714, 2.2992960340421527, 2.298882884529556, 2.298244733789011, 2.2998402034286904, 2.2990756596651027, 2.2980458287357606, 2.298951231335857, 2.29910232604786, 2.297608219731706, 2.2972120129909372, 2.297849321661372, 2.298561628515757, 2.2970369893483293, 2.297420842158497, 2.297648505638021, 2.2985325434330415, 2.2963096227911657, 2.2959347251478426, 2.2970972595874897, 2.29638882282309, 2.2972722350803143, 2.2968503105925406, 2.2981290894413764, 2.2960128982573167, 2.295822012677972, 2.296979402585698, 2.2957556242672617, 2.294413968288919, 2.296577053551251, 2.29541744891096, 2.2956851385902843, 2.2951147491748323, 2.2954593236026604, 2.2952380078957773, 2.295118602322644, 2.296252400631666, 2.295078550394673, 2.293915247321995, 2.295085776735527, 2.2944423978228876, 2.295424881486561, 2.294909404332155, 2.2935926578520722, 2.294235127051871, 2.2946861419443443, 2.2934545219503515, 2.2935103217860444, 2.292553377063314, 2.2935859914217107, 2.293746978473575, 2.2932913680007947, 2.2921537586159757, 2.292775272520038, 2.2927892229198354, 2.2917522603746545, 2.29208291822405, 2.2927923925548668, 2.2921335292514353, 2.292404187464081, 2.292676004231677, 2.2922802840902854, 2.292033902658148, 2.2930765330216762, 2.2919460491434362, 2.29253152805218, 2.2909011366880327, 2.291479217251924, 2.2922538846254885, 2.291399807584221, 2.290930492184213], "accuracy": [0.09417514503002167, 0.09140139818191528, 0.08994849026203156, 0.08955223858356476, 0.09113723784685135, 0.09232597798109055, 0.08638224750757217, 0.09298639744520187, 0.08902391046285629, 0.09628847241401672, 0.09259014576673508, 0.0956280529499054, 0.09628847241401672, 0.08942015469074249, 0.09787346422672272, 0.09840179979801178, 0.09298639744520187, 0.09813763201236725, 0.09338264167308807, 0.09259014576673508, 0.09430722147226334, 0.1018359512090683, 0.10091137140989304, 0.09694888442754745, 0.09615638852119446, 0.09879804402589798, 0.09668471664190292, 0.08981640636920929, 0.10553427785634995, 0.1026284471154213, 0.1026284471154213, 0.0940430611371994, 0.10791176557540894, 0.1010434553027153, 0.09589222073554993, 0.10566636174917221, 0.09906221181154251, 0.09826971590518951, 0.10130762308835983, 0.09985470771789551, 0.09932637959718704, 0.10355303436517715, 0.1014397069811821, 0.10302469879388809, 0.10817593336105347, 0.09866596013307571, 0.10751552134752274, 0.10447761416435242, 0.10196803510189056, 0.1080438494682312, 0.10302469879388809, 0.10659094154834747, 0.10474177449941635, 0.10117553919553757, 0.10606260597705841, 0.10777968913316727, 0.109232597053051, 0.10830801725387573, 0.10738343745470047, 0.10685510188341141, 0.10606260597705841, 0.11359133571386337, 0.10328886657953262, 0.109232597053051, 0.10500594228506088, 0.10315678268671036, 0.10434553027153015, 0.108440101146698, 0.11755382269620895, 0.11227050423622131, 0.1072513535618782, 0.11028926074504852, 0.11530841141939163, 0.1072513535618782, 0.10751552134752274, 0.11213842034339905, 0.11610091477632523, 0.11913882195949554, 0.11081759631633759, 0.11187426000833511, 0.11332716792821884, 0.11279883980751038, 0.1146479994058609, 0.11187426000833511, 0.12112006545066833, 0.12151630967855453, 0.11596883088350296, 0.11768590658903122, 0.11147800832986832, 0.12072381377220154, 0.1220446452498436, 0.1162329912185669, 0.11200633645057678, 0.11676132678985596, 0.11900673806667328, 0.12032756209373474, 0.11266675591468811, 0.11332716792821884, 0.1212521493434906, 0.11768590658903122], "val_loss": [1.9702770369393485, 1.970167636871338, 1.9700589861188615, 1.9699493135724748, 1.9698400497436523, 1.969730990273612, 1.9696226119995117, 1.9695139612470354, 1.9694034712655204, 1.9692952973502023, 1.9691853523254395, 1.9690759522574288, 1.968968732016427, 1.968860149383545, 1.9687514305114746, 1.9686438696725028, 1.9685353551592146, 1.96842622756958, 1.9683165550231934, 1.968207768031529, 1.9681002071925573, 1.9679906708853585, 1.9678820882524763, 1.967773505619594, 1.9676645142691476, 1.9675561359950475, 1.967446940285819, 1.9673389026096888, 1.9672318186078752, 1.967123099735805, 1.9670168331691198, 1.9669081824166434, 1.9667998041425432, 1.9666914258684431, 1.9665823663984026, 1.9664743287222726, 1.9663662910461426, 1.9662585939679826, 1.9661508287702287, 1.9660424504961287, 1.9659345490591866, 1.9658267157418388, 1.9657179287501745, 1.9656095504760742, 1.9655015127999442, 1.9653942244393485, 1.965287208557129, 1.9651801245553153, 1.9650721549987793, 1.9649647985185896, 1.964857578277588, 1.9647503580365862, 1.9646428653172083, 1.9645351682390486, 1.964428152356829, 1.964320523398263, 1.9642119407653809, 1.9641056060791016, 1.96399872643607, 1.9638909612383162, 1.9637857845851354, 1.963679245540074, 1.9635722977774483, 1.9634638513837541, 1.963355881827218, 1.9632490703037806, 1.963141645703997, 1.963033880506243, 1.9629263196672713, 1.9628186907087053, 1.962711947304862, 1.9626045227050781, 1.9624977793012346, 1.962390967777797, 1.9622838837759835, 1.9621778896876745, 1.9620708056858607, 1.9619642666407995, 1.9618580000741142, 1.9617515291486467, 1.9616434233529227, 1.961535862513951, 1.9614291191101074, 1.9613229206630163, 1.9612160410199846, 1.961108888898577, 1.9610024179731096, 1.9608955383300781, 1.960789476122175, 1.9606830733163017, 1.9605767386300224, 1.9604697908673967, 1.9603632518223353, 1.960256576538086, 1.9601493562970842, 1.9600413186209542, 1.9599356651306152, 1.9598291260855538, 1.9597242219107491, 1.959615911756243], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.03799999877810478, 0.038333334028720856, 0.03966666758060455, 0.041333332657814026, 0.04233333468437195, 0.04233333468437195, 0.04333333298563957, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04866666719317436, 0.049666665494441986, 0.050999999046325684, 0.05166666582226753, 0.052666667848825455, 0.052666667848825455, 0.05400000140070915, 0.05666666850447655, 0.05766666680574417, 0.05833333358168602, 0.059333331882953644, 0.060333333909511566, 0.061000000685453415, 0.061666667461395264, 0.06199999898672104, 0.06333333253860474, 0.06400000303983688, 0.06499999761581421, 0.06533333659172058, 0.0663333311676979, 0.06733333319425583, 0.06800000369548798, 0.06833333522081375, 0.06833333522081375, 0.06866666674613953, 0.06966666877269745, 0.07000000029802322, 0.07133333384990692, 0.0729999989271164, 0.07366666942834854, 0.07500000298023224, 0.07666666805744171, 0.07699999958276749, 0.07800000160932541, 0.07866666465997696, 0.0806666687130928, 0.08166666328907013, 0.08266666531562805, 0.08366666734218597, 0.0833333358168602, 0.08433333039283752, 0.08500000089406967, 0.08533333241939545, 0.08633333444595337, 0.08666666597127914, 0.08799999952316284, 0.08900000154972076, 0.08900000154972076, 0.09033333510160446, 0.09133332967758179, 0.09266666322946548, 0.09333333373069763, 0.09399999678134918, 0.09466666728258133, 0.09466666728258133, 0.09533333033323288, 0.09533333033323288, 0.0963333323597908, 0.09733333438634872, 0.0976666659116745, 0.09933333098888397, 0.10100000351667404, 0.10166666656732559, 0.10300000011920929, 0.10333333164453506, 0.10466666519641876, 0.10499999672174454, 0.10633333027362823, 0.1066666692495346, 0.10766666382551193, 0.10833333432674408, 0.10899999737739563, 0.10999999940395355, 0.11133333295583725, 0.11233333498239517, 0.1133333370089531, 0.11433333158493042, 0.11500000208616257, 0.11666666716337204, 0.11800000071525574, 0.11900000274181366, 0.11966666579246521, 0.12066666781902313, 0.12266666442155838]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 7, 8, 0, 1, 4, 0, 2, 4], [2, 3, 0, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [3, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 9, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 15, 11, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(beta))), tf.math.pow(tf.math.negative(alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 1, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 7, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 3, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 10, 6, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), sigma), tf.math.negative(sigma))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 2, 1, 4, 0, 2, 4], [0, 3, 0, 3, 5], [11, 92], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 9, 2, 0, 6, 3, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 2, 2, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 5], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 8, 0, 8, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0, 3], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [4, 5, 2, 0, 6, 4, 0, 2, 4], [5, 3, 3, 4], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [162360.78782266873, 3112822.331660283, 14471707.42068419, 40432088.27631753, 84888907.9635451, 159066415.27935544], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.10342095047235489, 0.09668471664190292, 0.09985470771789551, 0.09774138033390045], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 2, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [162360.78782266873, 3112822.331660283, 14471707.42068419, 40432088.27631753, 84888907.9635451, 159066415.27935544], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.10342095047235489, 0.09668471664190292, 0.09985470771789551, 0.09774138033390045], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0, 3], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 89, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3003131403285026, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12310130894184113, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [32.73878805977957, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0403333343565464, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 1, 2], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 6, 0, 6, 4, 0, 2, 4], [2, 3, 3, 2, 3], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), alpha)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, beta)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(alpha), alpha)", "other_info": {"loss": [2.302482828598264, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 0], [96, 63, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 1, 4, 0, 2, 4], [0, 3, 0, 1], [11, 45, 0, 45, 15, 20, 17], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 1, 6, 2, 2, 5, 0, 0, 4, 0, 8, 6, 1, 2, 9, 0, 8, 6, 8, 1, 5, 7, 9, 0], [1, 1, 0, 0, 3, 0, 2, 1, 1, 1, 1], [35, 63, 56, 12, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 35, 24, 11, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(grad, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(alpha))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.square(beta), alpha)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(alpha))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 3, 0, 1, 1, 2, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 7, 8, 5, 6, 4, 0, 2, 4], [2, 3, 0, 2], [11, 0, 72], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50515059775.34881, 7678869892922.53, 132648216456053.36, 941093662540241.2, 4044534463182981.0, 1.3602733163390426e+16], "accuracy": [0.09998679161071777, 0.09919429570436478, 0.10342095047235489, 0.09694888442754745, 0.09985470771789551, 0.09747721254825592], "val_loss": [422595601554.2857, 22781758837321.145, 244524308908324.56, 1333134648185417.2, 4994454106369463.0, 1.4726545823385892e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [1, 5, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 89, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302881333302387, 2.3033050672646764, 2.3033076953169944, 2.303352377622859, 2.30342936972428, 2.3032467128452354], "accuracy": [0.09721305221319199, 0.1002509593963623, 0.10038304328918457, 0.10196803510189056, 0.10157178342342377, 0.09998679161071777], "val_loss": [1.9736461639404297, 1.9738950048174178, 1.9737816538129533, 1.974480288369315, 1.9749924114772253, 1.97459077835083], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10066666454076767, 0.10066666454076767, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [58, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 89, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302196876735987, 2.302333847690079, 2.3027448131738635, 2.3047597354130107, 2.315332444903558, 2.3779099770131413], "accuracy": [0.10645885765552521, 0.10328886657953262, 0.1022322028875351, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973808833530971, 1.9740564482552665, 1.975196020943778, 1.9798546518598283, 2.003185612814767, 2.1639911106654575], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [51, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 5, 0, 1, 3, 2, 1, 4, 1, 4, 3, 0, 0, 1, 1, 5, 5, 2, 4, 0, 3, 0, 2, 5, 2, 5, 3, 3, 1], [11, 45, 0, 45, 15, 20, 17], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 0, 5, 0, 0, 4, 0, 8], [1, 1, 3, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 11, 7, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.negative(tf.math.square(alpha)), sigma)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [162360.78782266873, 3112822.331660283, 14471707.42068419, 40432088.27631753, 84888907.9635451, 159066415.27935544], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.10342095047235489, 0.09668471664190292, 0.09985470771789551, 0.09774138033390045], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [0, 5, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0], [53, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08492933213710785, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 5, 0], [78, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.sqrt(grad))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020830536405126, 2.3035124202587696, 2.3024704902242314, 2.303318551345319, 2.302598357121895, 2.303626383268885], "accuracy": [0.0940430611371994, 0.09113723784685135, 0.08955223858356476, 0.0886276587843895, 0.08968432247638702, 0.09074098616838455], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 6, 9, 2], [0, 1, 1, 0, 3, 0, 1, 1, 2, 0], [96, 12, 41, 66, 75], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 89, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3020830536405126, 2.3035124202587696, 2.3024704902242314, 2.303318551345319, 2.302598357121895, 2.303626383268885], "accuracy": [0.0940430611371994, 0.09113723784685135, 0.08955223858356476, 0.0886276587843895, 0.08968432247638702, 0.09074098616838455], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]