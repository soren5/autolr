[{"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9654381584261449, 1.300511618788531, 0.954398119556685, 0.8098964067639739, 0.7531379402557683, 0.7533817580426138, 0.6810061840049941, 0.6820285118267032, 0.6578735630935162, 0.609177248234825, 0.5893281772703212, 0.5879021014173379, 0.5794139385475316, 0.5538829929084511, 0.5480237079767298, 0.5119490895399155, 0.5412753888006933, 0.4897000228787111, 0.5013007363150731, 0.46320690899367, 0.46528636325525174, 0.48268229928959505, 0.4544442169670384, 0.4491021597878241, 0.437247284277319, 0.42934055949765865, 0.4217022805441608, 0.43043779463989074, 0.41498398730830743, 0.4088065387621343], "accuracy": [0.33020737767219543, 0.5346717834472656, 0.6542068123817444, 0.7022850513458252, 0.7199841737747192, 0.7182670831680298, 0.7428345084190369, 0.7421740889549255, 0.7500990629196167, 0.7755910754203796, 0.7734777331352234, 0.7751948237419128, 0.7804781198501587, 0.7943468689918518, 0.7918372750282288, 0.807158887386322, 0.7895918488502502, 0.8198388814926147, 0.8086118102073669, 0.8322546482086182, 0.8298771381378174, 0.8168009519577026, 0.8333113193511963, 0.8300092220306396, 0.8397833704948425, 0.8400475382804871, 0.845859169960022, 0.8370096683502197, 0.8444063067436218, 0.8438779711723328], "val_loss": [1.2640700340270996, 0.7391573701586042, 0.7099252087729317, 0.6304498740604946, 0.5680836609431675, 0.5244245188576835, 0.5362385851996285, 0.5309869050979614, 0.4961614268166678, 0.5059214660099575, 0.4608625939914158, 0.4848384175981794, 0.5366835253579276, 0.4848392350333078, 0.44094873326165335, 0.4487624934741429, 0.42212579931531635, 0.45411390917641775, 0.4161366309438433, 0.3908244286264692, 0.3924233147076198, 0.37721398047038485, 0.3877123253686087, 0.39762037992477417, 0.3724810310772487, 0.3774766666548593, 0.39575953994478497, 0.39568692445755005, 0.3768499067851475, 0.3747807485716684], "val_accuracy": [0.4449999928474426, 0.6850000023841858, 0.7089999914169312, 0.7066666483879089, 0.753000020980835, 0.765333354473114, 0.7613333463668823, 0.7583333253860474, 0.7770000100135803, 0.7673333287239075, 0.7929999828338623, 0.7733333110809326, 0.7523333430290222, 0.7703333497047424, 0.7993333339691162, 0.8083333373069763, 0.8103333115577698, 0.7870000004768372, 0.8050000071525574, 0.8346666693687439, 0.8379999995231628, 0.8386666774749756, 0.8306666612625122, 0.8346666693687439, 0.8479999899864197, 0.8379999995231628, 0.8186666369438171, 0.8303333520889282, 0.8376666903495789, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [1, 0, 0], [0, 3], [6, 7], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 1, 0, 3], [53, 60, 56, 45]], "fitness": -0.7937142848968506, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.286916096511849, 2.2443878775999577, 2.186180825183704, 2.09110358123215, 1.955399876178736, 1.7634818502594183, 1.5751457597443834, 1.4163024110911213, 1.2839239891163345, 1.1997140633069514, 1.1384575156613805, 1.081594603440513, 1.0323989996427023, 0.9935673565329846, 0.9665754790775938, 0.9374803409379912, 0.9271073640062037, 0.8976079200189883, 0.8739000800153157, 0.8534168910592885, 0.8452692220176704, 0.8370893949121453, 0.8205179283726312, 0.8098795038282973, 0.8083327320887664, 0.7923513208366483, 0.7831995083419417, 0.7736047829587808, 0.7676728384889364, 0.7584941184610471, 0.7581838132635698, 0.7423385541043214, 0.7381324070618845, 0.7356713512050572, 0.7258436751009812, 0.7208000264462542, 0.7127018231741583, 0.7170478169393105, 0.7112891405502, 0.7172059078793468, 0.7024349538468414, 0.6998644419208321, 0.6979429328273142, 0.688788279692227, 0.6914989979291368, 0.689865602005931, 0.6711727914053136, 0.6778626458803266, 0.6744519677050063, 0.6704925939769415, 0.6694954682523864, 0.659710134340079, 0.6574595689521632, 0.6677601375379552, 0.6488688807792321, 0.6545794987722615, 0.6528003990390376, 0.6436260528552487, 0.6401919559669721, 0.6353350395083097, 0.6417852656999677, 0.6446379840161428, 0.6371682365619905, 0.6343939312854384], "accuracy": [0.13538502156734467, 0.2355038970708847, 0.31501781940460205, 0.3829084634780884, 0.4209483563899994, 0.4649319648742676, 0.505349338054657, 0.5340113639831543, 0.5630695819854736, 0.5826178789138794, 0.6029586791992188, 0.6169594526290894, 0.6376964449882507, 0.6444327235221863, 0.6588297486305237, 0.6631884574890137, 0.6680755615234375, 0.6803592443466187, 0.6847180128097534, 0.6950204968452454, 0.6956809163093567, 0.6959450244903564, 0.7096816897392273, 0.702681303024292, 0.7124554514884949, 0.7170783281326294, 0.7194558382034302, 0.7209087014198303, 0.7191916704177856, 0.7268524765968323, 0.7210407853126526, 0.7255316376686096, 0.7316074371337891, 0.7308149337768555, 0.7380794882774353, 0.7378153204917908, 0.7359662055969238, 0.7408532500267029, 0.739400327205658, 0.7338528633117676, 0.7403249144554138, 0.7409853339195251, 0.7461365461349487, 0.7514199018478394, 0.7448157668113708, 0.7516840696334839, 0.7528728246688843, 0.7528728246688843, 0.7543256878852844, 0.7549861073493958, 0.7544577717781067, 0.7585523724555969, 0.7561748623847961, 0.7497028112411499, 0.7711002230644226, 0.7592127919197083, 0.7578919529914856, 0.7637035846710205, 0.7660810947418213, 0.7640998363494873, 0.7656848430633545, 0.7637035846710205, 0.7651565074920654, 0.7683265209197998], "val_loss": [1.9316614695957728, 1.8849246842520577, 1.811776978628976, 1.6960797309875488, 1.5304667949676514, 1.3317989281245641, 1.145812954221453, 1.0056981018611364, 0.9045899254935128, 0.8352421351841518, 0.7823968274252755, 0.7436325720378331, 0.711274334362575, 0.6887416158403669, 0.6639248813901629, 0.6476815938949585, 0.6331683397293091, 0.6209827491215297, 0.6098384175981794, 0.5963562726974487, 0.590369633265904, 0.5806322949273246, 0.5729566642216274, 0.5658760581697736, 0.5616384404046195, 0.5561242955071586, 0.549180439540318, 0.54587265423366, 0.5401626314435687, 0.5352823904582432, 0.5303859029497419, 0.5276683568954468, 0.52280364717756, 0.5228644950049264, 0.5174933671951294, 0.5119201796395438, 0.511891279901777, 0.5054812090737479, 0.5064995629446847, 0.5022863830838885, 0.49757747990744455, 0.49740237849099295, 0.49469724723270964, 0.493695752961295, 0.49357119628361296, 0.4875634568078177, 0.4848996911730085, 0.48754097734178814, 0.48254103319985525, 0.479849066053118, 0.47917475019182476, 0.4776609114238194, 0.4752370459692819, 0.4749188082558768, 0.47072138105119976, 0.4717831952231271, 0.46683211837496075, 0.4659314581326076, 0.46493674176079886, 0.46387314796447754, 0.46307285342897686, 0.462039658001491, 0.46001737458365305, 0.4636242389678955], "val_accuracy": [0.34599998593330383, 0.4403333365917206, 0.4830000102519989, 0.5263333320617676, 0.5643333196640015, 0.6006666421890259, 0.6359999775886536, 0.6646666526794434, 0.6736666560173035, 0.6886666417121887, 0.6970000267028809, 0.706333339214325, 0.7166666388511658, 0.7203333377838135, 0.7246666550636292, 0.7253333330154419, 0.7306666374206543, 0.7350000143051147, 0.7409999966621399, 0.7456666827201843, 0.7540000081062317, 0.7596666812896729, 0.7630000114440918, 0.7583333253860474, 0.7630000114440918, 0.7676666378974915, 0.7689999938011169, 0.7680000066757202, 0.7739999890327454, 0.7693333625793457, 0.7746666669845581, 0.7743333578109741, 0.7793333530426025, 0.7823333144187927, 0.7853333353996277, 0.7863333225250244, 0.7846666574478149, 0.7896666526794434, 0.7906666398048401, 0.7866666913032532, 0.7903333306312561, 0.7923333048820496, 0.7886666655540466, 0.7943333387374878, 0.7926666736602783, 0.7943333387374878, 0.7960000038146973, 0.7963333129882812, 0.796999990940094, 0.8006666898727417, 0.8003333210945129, 0.7973333597183228, 0.796999990940094, 0.8066666722297668, 0.8083333373069763, 0.8019999861717224, 0.8050000071525574, 0.8086666464805603, 0.812666654586792, 0.8050000071525574, 0.8109999895095825, 0.8023333549499512, 0.8053333163261414, 0.8023333549499512]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 1, 0, 0, 0, 1], [0, 0, 1, 1], [5, 3], [1, 1], [], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 9, 0, 2, 2, 2, 0], [2, 0, 0, 0, 3, 1, 1, 3, 0, 2, 2], [5, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303711897189103, 2.3071857663886326, 2.3348261544796074, 2.447928707282525, 2.8253375574141413, 3.712790911869366, 5.437779547248329, 8.331990763999688, 12.64672064261587, 18.99576670080207], "accuracy": [0.09259014576673508, 0.09681680053472519, 0.09536388516426086, 0.10315678268671036, 0.10328886657953262, 0.1006472036242485, 0.09760929644107819, 0.09919429570436478, 0.10342095047235489, 0.10540219396352768], "val_loss": [1.9703054428100586, 1.9737138066973006, 1.9966848918369837, 2.0985353333609447, 2.4048441478184293, 3.1333535058157787, 4.519282477242606, 6.7664530617850165, 10.138365881783622, 15.011432102748326], "val_accuracy": [0.02433333359658718, 0.06733333319425583, 0.09666666388511658, 0.1003333330154419, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [1, 0, 0], [5, 3], [6, 7], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 1, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0, 1], [0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 0, 1], [5, 3], [1, 1], [], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 7, 0, 2, 2, 2, 0, 8, 0, 1], [2, 2, 0, 1, 3, 1, 2, 1, 0, 2, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 17, 10, 7, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.negative(beta), tf.math.add(tf.math.add(tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.subtract(sigma, alpha)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1], [0, 1, 0, 1, 1], [2, 6], [3, 1, 0], [56], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 0, 1], [0, 1, 1, 1], [0, 3], [6, 7], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [5, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(beta, beta), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027349122684426, 3.511335916333998, 1.4537367863793296e+17, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.13274335861206055, 0.10685510188341141, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9787940979003906, 204.89259556361608, 3.4849935334158775e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.012333333492279053, 0.10133333504199982, 0.10133333504199982, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [0, 3], [6, 7], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 6, 0, 2, 2, 2, 0], [0, 3, 0, 0, 3, 0, 1, 0], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021639145722776, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 0, 1], [0, 1, 0], [5, 3, 3], [1, 1], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 5, 2, 2, 9, 2, 0, 3, 5], [2, 0, 0, 0, 3, 1, 1, 3, 0, 2, 2], [5, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(beta), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301672969622115, 2.302569383832332, 2.302586478800302, 2.302586626398754, 2.3025859198345406, 2.302590119226214], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736508641924178, 1.9736529077802385, 1.973658834184919, 1.9736602646963937, 1.9736592429024833, 1.9736688477652413], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 0, 1], [5, 8], [1, 1], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [8, 7, 0, 2, 2, 2, 0], [1, 2, 1, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [3, 1], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 0, 1, 1], [0, 1, 0], [1, 3], [6, 7], [], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 1, 0, 3], [14, 60, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0, 0, 1], [0, 1, 1], [6, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 0, 0], [0, 0, 1, 1], [5, 3], [6, 7], [], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 3, 0, 2, 2, 2, 0, 1, 1, 1, 6, 9, 6], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07674019038677216, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1], [5, 3, 3], [1, 1], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [4, 7, 0, 2, 2, 2, 0], [2, 0, 1, 0, 3, 1, 1, 3, 0, 2, 2], [5, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 1, 1, 0], [0, 0, 0, 1], [7, 5, 4], [1, 1], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1], [3, 7, 0, 2, 2, 2, 0, 6, 2, 5, 4, 2, 4, 7, 3, 2, 2, 8, 2, 1, 4, 4, 0, 9, 4, 5, 0, 7, 4, 9, 3, 9, 7, 6, 0, 9], [2, 0, 0, 0, 3, 1, 1, 3, 0, 2, 2, 1, 0, 1, 1, 0, 1, 2, 1, 3, 1], [41, 60, 38, 29, 13, 6, 80, 68, 91, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 57, 36, 21, 10], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.pow(sigma, tf.math.add(tf.math.pow(tf.math.add(tf.math.multiply(alpha, tf.math.add(tf.math.add(alpha, sigma), tf.math.sqrt(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), beta)))), tf.math.subtract(beta, tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.math.square(tf.math.negative(tf.math.add(tf.math.pow(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), alpha)))), tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.divide_no_nan(tf.math.negative(beta), alpha)))), sigma)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 1, 0], [5, 3], [1, 1], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3045217786498466, 2.3228177275435327, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.08070268481969833, 0.09021265059709549, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9752593721662248, 2.016977378300258, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017999999225139618, 0.09966666996479034, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0, 0], [0, 9], [3, 1], [16], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0], [0, 0, 0, 1], [0, 3, 9], [6, 7], [22], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [3, 7, 1, 2, 2, 2, 0, 6, 4, 6, 2, 8, 2, 7, 4, 3, 5, 4, 7, 1, 1, 0, 7, 7, 3, 4, 4, 2, 8, 3, 2, 4, 5, 7, 8, 4, 3, 7, 1, 4, 5, 3, 8, 6, 0, 8, 2, 2, 5, 4, 1, 8], [0, 2, 3, 0, 3, 0, 0, 2, 2, 2, 1, 0, 2, 3, 3, 3, 3, 1, 3, 1, 0, 3, 2, 1, 2, 2, 0, 0, 0, 0, 0, 3, 3, 1, 2, 3, 0, 2, 0, 1], [93, 60, 56, 45, 99, 3, 3, 81, 33, 76, 87, 28, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 92, 52, 40, 13], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.pow(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.divide_no_nan(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.square(tf.math.pow(beta, tf.math.add(tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.pow(tf.math.pow(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, sigma)), sigma)), tf.math.square(sigma))), tf.math.add(sigma, tf.math.sqrt(alpha))), sigma))), tf.math.pow(alpha, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.subtract(tf.math.pow(beta, alpha), beta))))), beta), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.sqrt(tf.math.add(tf.math.add(sigma, alpha), beta))))))), sigma)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 8, 4, 3, 8, 4, 3, 5, 1, 4, 4, 9, 9, 0, 5, 5], [3, 1, 3, 2, 2, 3], [52, 71], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 1, 1, 0], [0, 1, 0, 1], [5, 3], [1, 0], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [3, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 16, 6, 2, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.square(grad)))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(sigma, beta), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2845.255280944508, 51350.5385372639, 234246.00517600053, 650079.341805904, 1391028.9574692908, 2553812.268095364], "accuracy": [0.09668471664190292, 0.10368511080741882, 0.10236428678035736, 0.10170386731624603, 0.10289261490106583, 0.10210011899471283], "val_loss": [10376.4375, 80535.25892857143, 269358.3035714286, 635716.5892857143, 1238482.392857143, 2136526.285714286], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [1, 0, 0], [0, 0, 1], [5, 3], [1, 1], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 4, 2, 2, 2, 2, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9120.760378883562, 168807.8424539361, 774178.2755580505, 2153269.593316603, 4612849.3325848635, 8474942.155989962], "accuracy": [0.09668471664190292, 0.10381719470024109, 0.10236428678035736, 0.10170386731624603, 0.10289261490106583, 0.10210011899471283], "val_loss": [33836.122767857145, 265672.39285714284, 891474.2142857143, 2107206.0714285714, 4108830.285714286, 7092307.571428572], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [1], [], [1, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 7, 0, 2, 2, 2, 0, 1], [1, 2, 0, 0, 3, 0, 0], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 15, 8, 7, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302958413452725, 2.3022187566398205, 2.3032642052299894, 2.302098101723101, 2.3033952857556517, 2.301210798339884], "accuracy": [0.09285431355237961, 0.0944393053650856, 0.08836349099874496, 0.09192973375320435, 0.09166556596755981, 0.09813763201236725], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 0], [0, 3], [0, 7], [22], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [3, 7, 0, 2, 9, 2, 3, 9, 6, 4], [1, 1, 2, 0, 3, 2], [41, 36, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 16, 10, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), alpha), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.pow(sigma, beta))))", "other_info": {"loss": [2.302958413452725, 2.3022187566398205, 2.3032642052299894, 2.302098101723101, 2.3033952857556517, 2.301210798339884], "accuracy": [0.09285431355237961, 0.0944393053650856, 0.08836349099874496, 0.09192973375320435, 0.09166556596755981, 0.09813763201236725], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0], [0, 3, 3, 3], [1, 1], [], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [8, 7, 0, 2, 2, 2, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [5, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 6, 4, 3, 1, 0, 5, 3, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta)))", "other_info": {"loss": [2.302958413452725, 2.3022187566398205, 2.3032642052299894, 2.302098101723101, 2.3033952857556517, 2.301210798339884], "accuracy": [0.09285431355237961, 0.0944393053650856, 0.08836349099874496, 0.09192973375320435, 0.09166556596755981, 0.09813763201236725], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]