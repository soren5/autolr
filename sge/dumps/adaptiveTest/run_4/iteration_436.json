[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7831428647041321, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0223489509298345, 1.3155933354808167, 1.0443335683149606, 0.9116187763330628, 0.8082091075522851, 0.7445152368071277, 0.6944944976957294, 0.6873042893258572, 0.6797916728035334, 0.6649693539901228, 0.6274073007887444, 0.5801371307168985, 0.5892195990529311, 0.5878982845708096, 0.5665049954821736, 0.5436849305028566], "accuracy": [0.33007529377937317, 0.5324263572692871, 0.6196011304855347, 0.659490168094635, 0.6900013089179993, 0.7099458575248718, 0.7359662055969238, 0.7343811988830566, 0.7412495017051697, 0.7453441023826599, 0.7559106945991516, 0.7823272943496704, 0.7749306559562683, 0.776251494884491, 0.7820631265640259, 0.7905164361000061], "val_loss": [1.096174887248448, 1.1048077174595423, 0.6746876239776611, 0.623505881854466, 0.5570852586201259, 0.538934622492109, 0.4967434065682547, 0.49620858260563444, 0.48764346327100483, 0.46939563751220703, 0.4426689147949219, 0.4376633252416338, 0.4393531765256609, 0.438291072845459, 0.4239739009312221, 0.44551680769239155], "val_accuracy": [0.5633333325386047, 0.6206666827201843, 0.6809999942779541, 0.7236666679382324, 0.7473333477973938, 0.7366666793823242, 0.7749999761581421, 0.777999997138977, 0.7806666493415833, 0.784333348274231, 0.8043333292007446, 0.8033333420753479, 0.8019999861717224, 0.7960000038146973, 0.8036666512489319, 0.8033333420753479]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [2, 63, 57, 12]], "fitness": -0.7294285893440247, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3154550882898004, 2.4205521925990574, 2.5507205126859005, 2.41786929808745, 2.242529230756436, 2.231039145997077, 2.129843869812028, 1.9579657852500105, 1.930299332191947, 1.5556430443324245, 1.5526196255486766, 1.506154626131593, 1.4282038892816007, 1.2394755650284646, 1.120956615985361, 1.0031042778654153, 0.9243530350559029, 0.8455577681817557, 1.2616523755083247, 1.5979561171653232, 1.6474715858292444, 1.0765943550446313], "accuracy": [0.22123894095420837, 0.20103025436401367, 0.19442610442638397, 0.11108175665140152, 0.16417910158634186, 0.20737022161483765, 0.26020342111587524, 0.3741909861564636, 0.3553031384944916, 0.49148064851760864, 0.4924052357673645, 0.5016510486602783, 0.5297846794128418, 0.5793157815933228, 0.6129969358444214, 0.6468101739883423, 0.6667547225952148, 0.6956809163093567, 0.5671641826629639, 0.43323206901550293, 0.48289525508880615, 0.602562427520752], "val_loss": [1.84887729372297, 1.964942455291748, 2.3744653293064664, 1.9636654172624861, 1.6447904450552804, 1.926271642957415, 1.7544489588056291, 1.4978417328425817, 1.377455745424543, 1.1084562710353307, 1.0832184723445348, 0.9330216135297503, 1.1362443992069788, 0.8414525474820819, 0.7279625279562814, 0.7033252886363438, 0.5563376801354545, 0.541529927934919, 1.93309600012643, 1.5621467658451624, 0.8464537518365043, 0.7186331067766462], "val_accuracy": [0.22300000488758087, 0.1066666692495346, 0.10000000149011612, 0.1509999930858612, 0.3919999897480011, 0.1626666635274887, 0.4090000092983246, 0.41333332657814026, 0.5389999747276306, 0.5649999976158142, 0.5609999895095825, 0.6433333158493042, 0.5353333353996277, 0.67166668176651, 0.7196666598320007, 0.6330000162124634, 0.7733333110809326, 0.7633333206176758, 0.14300000667572021, 0.6493333578109741, 0.6309999823570251, 0.6949999928474426]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 6, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.6628571152687073, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 5, 3, 2, 1, 0, 6, 3, 3, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad)))), tf.math.divide_no_nan(grad, tf.math.negative(tf.math.add(beta, grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9267175922997166, 1.033050953121611, 0.824658253630312, 0.7007415785513629, 0.6314816759199814, 0.6052259038294846, 0.5987429206775338, 0.5901558479660018, 0.5833134451058594, 0.5777929585528899, 0.5782087153809623, 0.6087613316606364, 0.6332704785745283, 0.6992818777272415], "accuracy": [0.3621714413166046, 0.6313564777374268, 0.6964733600616455, 0.735569953918457, 0.7618544697761536, 0.7709681391716003, 0.7823272943496704, 0.7783648371696472, 0.7796856164932251, 0.7911768555641174, 0.7779685854911804, 0.7815347909927368, 0.7757231593132019, 0.7423061728477478], "val_loss": [0.8522293567657471, 0.6371156658445086, 0.5298119272504535, 0.46858836923326763, 0.43248207228524344, 0.40711645569120136, 0.43755257981164114, 0.41039659295763287, 0.3992384672164917, 0.42068234511784147, 0.411016047000885, 0.4599021588053022, 0.4623596327645438, 0.4698030267442976], "val_accuracy": [0.6663333177566528, 0.7099999785423279, 0.7593333125114441, 0.7940000295639038, 0.8109999895095825, 0.8243333101272583, 0.8116666674613953, 0.8230000138282776, 0.8389999866485596, 0.8276666402816772, 0.8216666579246521, 0.8226666450500488, 0.8100000023841858, 0.8019999861717224]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.5057142972946167, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.921187187592115, 2.1601971476195496, 2.2438771058980578, 2.2126603992844083, 2.4070809099416315, 2.3027089468444957, 2.3006116331466013], "accuracy": [0.20763438940048218, 0.22216351330280304, 0.1504424810409546, 0.19614318013191223, 0.12389380484819412, 0.10315678268671036, 0.11200633645057678], "val_loss": [1.9340877532958984, 1.2787768159593855, 1.9651657513209753, 2.034618445805141, 1.973797048841204, 1.9725730078560966, 1.9682846750531877], "val_accuracy": [0.24933333694934845, 0.5040000081062317, 0.10066666454076767, 0.3310000002384186, 0.09933333098888397, 0.10300000011920929, 0.1850000023841858]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [60, 63, 57, 12]], "fitness": -0.2865714430809021, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.8619838978368466, 2.27940175117928, 2.3914699169937896, 2.2663182820216963, 2.3089927812026336, 2.3040120483562694, 2.303186581985369], "accuracy": [0.19402985274791718, 0.15942411124706268, 0.15215955674648285, 0.16589617729187012, 0.09311848133802414, 0.09430722147226334, 0.09430722147226334], "val_loss": [1.9811758313860213, 1.6904584339686803, 1.9720027787344796, 1.9833955764770508, 1.9744261332920618, 1.9737040655953544, 1.9735612869262695], "val_accuracy": [0.10066666454076767, 0.3226666748523712, 0.1316666603088379, 0.10000000149011612, 0.10000000149011612, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 7], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.263142853975296, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.921238955001569, 2.223477706114346, 2.477280332774156, 2.3045926850784597, 2.303064475710114, 2.301992191346944, 2.2925115432784606], "accuracy": [0.20776647329330444, 0.23444722592830658, 0.12349755316972733, 0.09642054885625839, 0.09879804402589798, 0.10328886657953262, 0.13181878626346588], "val_loss": [1.9361493928091866, 2.8695336069379533, 1.9767280306134904, 1.974233831678118, 1.9736270904541016, 1.9717491694859095, 1.9190142495291573], "val_accuracy": [0.23633334040641785, 0.2720000147819519, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10466666519641876, 0.2409999966621399]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 3, 5, 9, 8, 1, 3, 6, 3, 3, 4, 5, 9, 6, 9, 1, 4], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 5, 2, 0], [35, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 6], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [2, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 44, 44, 28, 16, 4, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, beta), grad), tf.math.square(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), grad)))))))))))))), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta)), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [2, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 14, 9, 5, 3], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.math.add(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [5, 3, 1, 2, 5, 2, 3, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), grad))))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta))), grad)), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [13343.05326442403, 2.672267025676874, 2.4789164449875427, 2.5657433978539133, 2.5989180516573134, 2.4932852446395235, 2.5971385591522327, 2.522404873108174, 2.5041515850482314, 2.5884531661582706, 2.516333687527462, 2.596285571669071], "accuracy": [0.09298639744520187, 0.09734513610601425, 0.09959053993225098, 0.10302469879388809, 0.09734513610601425, 0.10130762308835983, 0.09866596013307571, 0.10196803510189056, 0.09932637959718704, 0.09866596013307571, 0.09774138033390045, 0.09351472556591034], "val_loss": [2.308223383767264, 2.2766500881740024, 2.2582161085946217, 2.1789452689034596, 2.3458474704197476, 2.1289993694850375, 2.0813170160566057, 2.3128554480416432, 2.1105248587472096, 2.081106662750244, 2.3481358800615584, 2.0973837035042897], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10366666316986084, 0.10000000149011612, 0.09733333438634872, 0.0963333323597908, 0.10000000149011612, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 3, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 14, 14, 9, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.square(alpha), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12336547672748566, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [8, 3, 4, 2, 5, 2, 0, 1, 1, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 3], [71], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.subtract(tf.math.add(beta, beta), beta))))))), tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta))), grad)), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [0, 3, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 6, 6, 3, 3, 1, 3, 3, 1, 2, 0, 5, 3, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 2, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7.25841953820413e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05388984456658363, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 3, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [25712.43192655693, 2.640098243136967, 2.404738678703565, 2.3406902143369814, 2.33460189218865, 2.3132242150924553, 2.3093308644791666, 2.306624142689995], "accuracy": [0.09879804402589798, 0.09879804402589798, 0.1002509593963623, 0.10460969805717468, 0.09866596013307571, 0.09945846349000931, 0.09787346422672272, 0.10051512718200684], "val_loss": [2.3115045683724538, 2.149677344730922, 2.065539973122733, 2.0141168321881975, 1.976381846836635, 1.9748847825186593, 1.9752296039036341, 1.9746642793927873], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.0963333323597908, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 2, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 2, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 4, 2, 2, 1, 0, 0, 9, 0, 8], [0, 3, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023869384155455, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 4, 1, 0, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [76, 63, 57, 12]], "fitness": -0.09685714542865753, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.413100774328148e+29, 3.454717525228486, 2.7324559447031924, 2.4884950714088654, 2.4066883794320746, 2.340717434520971], "accuracy": [0.1682736724615097, 0.09906221181154251, 0.10540219396352768, 0.10210011899471283, 0.09747721254825592, 0.09760929644107819], "val_loss": [NaN, 2.5090735980442593, 2.163194860730852, 2.068247045789446, 2.022305284227644, 1.997673852103097], "val_accuracy": [0.13333334028720856, 0.10000000149011612, 0.10366666316986084, 0.0963333323597908, 0.09666666388511658, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [0, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 1, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.07028571516275406, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3021006719893813, 2.3010571683796246, 2.3002946148175667, 2.299042488904819, 2.3001784080401575, 2.2999902445138516, 2.30033585751581, 2.3001023624016073, 2.299450560457529, 2.299657520632529, 2.299283538559377, 2.299759534844129, 2.2998026297502134, 2.299005627049557, 2.300326557837111], "accuracy": [0.0878351628780365, 0.09985470771789551, 0.09245806187391281, 0.09655263274908066, 0.09893012791872025, 0.09351472556591034, 0.09932637959718704, 0.09681680053472519, 0.10328886657953262, 0.10077928751707077, 0.10698718577623367, 0.09998679161071777, 0.09681680053472519, 0.09826971590518951, 0.09760929644107819], "val_loss": [1.9697023119245256, 1.9693198885236467, 1.9691613061087472, 1.9691896438598633, 1.9692199570792062, 1.9692432539803642, 1.9691999299185616, 1.9691361699785506, 1.9690512248447962, 1.969114031110491, 1.9692722048078264, 1.9694391659327917, 1.9696179117475237, 1.9699442727225167, 1.970235960824149], "val_accuracy": [0.047333333641290665, 0.0533333346247673, 0.05833333358168602, 0.06433333456516266, 0.0663333311676979, 0.0716666653752327, 0.07500000298023224, 0.0806666687130928, 0.0833333358168602, 0.08366666734218597, 0.08299999684095383, 0.07966666668653488, 0.07966666668653488, 0.07733333110809326, 0.07733333110809326]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [7, 0, 5, 4, 7, 1, 9, 6, 5, 2, 8, 5, 6, 0, 6, 5, 1, 0, 5, 7, 4, 8, 0, 3, 5, 2, 7, 7, 2, 9, 2, 7, 9], [0, 1, 2, 0, 0, 2, 2, 1, 0, 0, 1, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 21, 24, 82], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 2, 2, 5, 2, 0, 1, 5, 1, 7, 2, 7, 9, 2, 4, 4, 3, 6, 3, 3, 4, 2, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [3, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302487041342134, 2.3022405817177725, 2.3020624694980416, 2.3008334166842084, 2.3023967418562323, 2.3020778090301017], "accuracy": [0.0874389111995697, 0.09734513610601425, 0.08796724677085876, 0.09153348207473755, 0.09509972482919693, 0.08981640636920929], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 4, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [2, 63, 57, 12]], "fitness": -0.03257142752408981, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.3029624415961836, 2.304266461858723, 2.3061164245471946, 2.3066550782485455, 2.3112928177056737, 2.313920910615711], "accuracy": [0.08651433140039444, 0.09457138925790787, 0.08057060092687607, 0.08321225643157959, 0.08572183549404144, 0.08030643314123154], "val_loss": [1.971405097416469, 1.9727369717189245, 1.9741833550589425, 1.975963728768485, 1.978125980922154, 1.9805502891540527], "val_accuracy": [0.028999999165534973, 0.024000000208616257, 0.021666666492819786, 0.01899999938905239, 0.01666666753590107, 0.022333333268761635]}}]