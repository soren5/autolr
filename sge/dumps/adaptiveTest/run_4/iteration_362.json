[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8302857279777527, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.pow(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.054694970553782, 2.149394588164366, 1.6400967467305148, 1.0921412239914259, 0.8860511622881105, 0.781684929156867, 0.7629701674669458, 0.6739474687562438, 0.7109176747047229, 0.6423047394595677, 0.6345387912382303, 0.5994522607069855, 0.5925438277410588, 0.5767487068265075, 0.5491403300433725, 0.5439239612990493, 0.5480222572991876, 0.53750018965787, 0.5151698490994213, 0.48801800537386497, 0.515978312904903, 0.48170804294061664, 0.5066725039809623, 0.45886197408680685, 0.4669967281969547, 0.4599021242287149, 0.4494517995712543, 0.44002497125736334, 0.4386157342518766, 0.4306820924405519, 0.41941746045113115], "accuracy": [0.3259807229042053, 0.2650904655456543, 0.42187294363975525, 0.6169594526290894, 0.6622639298439026, 0.7028133869171143, 0.7045304179191589, 0.7446836829185486, 0.7275128960609436, 0.7510236501693726, 0.7504953145980835, 0.7651565074920654, 0.7721568942070007, 0.7803460359573364, 0.793950617313385, 0.7905164361000061, 0.7866860628128052, 0.7944789528846741, 0.7997622489929199, 0.8198388814926147, 0.8030643463134766, 0.8191784620285034, 0.8087438941001892, 0.828292191028595, 0.8227446675300598, 0.8273676037788391, 0.8380662798881531, 0.830669641494751, 0.8333113193511963, 0.8381983637809753, 0.8403117060661316], "val_loss": [1.9687025206429618, 1.1289419787270683, 1.0450190135410853, 0.6850131409508842, 0.7090632234300885, 0.6003517934254238, 0.5348884037562779, 0.4960025889532907, 0.5075959989002773, 0.48667734009878977, 0.460370557648795, 0.47956526279449463, 0.4609127385275705, 0.45616017069135395, 0.45400900500161306, 0.3993360229900905, 0.4187443511826651, 0.4090675115585327, 0.3911833507674081, 0.43497404030391146, 0.4035557338169643, 0.4218369041170393, 0.3607038174356733, 0.3903322901044573, 0.351006065096174, 0.34168286834444317, 0.3678073116711208, 0.3477137173925127, 0.35503205231257845, 0.3427468538284302, 0.35502841642924715], "val_accuracy": [0.14266666769981384, 0.46933332085609436, 0.640333354473114, 0.6856666803359985, 0.70333331823349, 0.7070000171661377, 0.7386666536331177, 0.7823333144187927, 0.7573333382606506, 0.7806666493415833, 0.7873333096504211, 0.768666684627533, 0.7933333516120911, 0.8186666369438171, 0.7929999828338623, 0.8360000252723694, 0.8256666660308838, 0.8163333535194397, 0.8396666646003723, 0.8173333406448364, 0.8213333487510681, 0.815666675567627, 0.8536666631698608, 0.8256666660308838, 0.8556666374206543, 0.8619999885559082, 0.8373333215713501, 0.8533333539962769, 0.843999981880188, 0.856333315372467, 0.8463333249092102]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 3, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8257142901420593, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0547415852751385, 2.14996423979225, 1.607665581064548, 1.0948964161659354, 0.8932088576429446, 0.7908076203148111, 0.7652959279915786, 0.6828542298345424, 0.6850726762310452, 0.648312087694195, 0.6397723547377213, 0.6036628683040706, 0.5872269592674385, 0.5779770572801796, 0.5536647766667145, 0.547839317740923, 0.5411065786962795, 0.5449577491548886, 0.5160277967660214, 0.49032002702018823, 0.5011059740562449, 0.47833753697325165, 0.5107780621548087, 0.4517414987701325, 0.4662767289344897, 0.4661178038404004, 0.45236713763288516, 0.44906647963735485, 0.43310730433057815, 0.4333202806776856, 0.417590086277623], "accuracy": [0.3259807229042053, 0.26561880111694336, 0.43283581733703613, 0.6098269820213318, 0.6527539491653442, 0.7004358768463135, 0.7030775547027588, 0.739400327205658, 0.739400327205658, 0.7479857206344604, 0.7514199018478394, 0.7623828053474426, 0.7799497842788696, 0.778761088848114, 0.7915731072425842, 0.7897239327430725, 0.7895918488502502, 0.7897239327430725, 0.8031964302062988, 0.8148196935653687, 0.8107251524925232, 0.8193105459213257, 0.81112140417099, 0.833179235458374, 0.819442629814148, 0.8235371708869934, 0.833179235458374, 0.8289526104927063, 0.8364813327789307, 0.8342359066009521, 0.8421608805656433], "val_loss": [1.9687042917524065, 1.1300474575587682, 1.1110601084572929, 0.6639948913029262, 0.7227534566606794, 0.593978728566851, 0.5320956366402763, 0.5195509706224714, 0.5629069975444249, 0.5122845002583095, 0.4736074038914272, 0.47659882477351595, 0.5070633377347674, 0.44131456102643696, 0.4337735857282366, 0.4278083784239633, 0.42563661507197786, 0.38613802194595337, 0.3963557311466762, 0.40899315050670076, 0.40486756392887663, 0.43173236506325857, 0.36347605500902447, 0.3926309517451695, 0.35450165612357004, 0.34405428171157837, 0.3727407881191799, 0.34774965047836304, 0.35629541533333914, 0.35090144191469463, 0.35257405042648315], "val_accuracy": [0.1420000046491623, 0.4650000035762787, 0.6276666522026062, 0.6786666512489319, 0.7043333053588867, 0.7133333086967468, 0.7463333606719971, 0.7689999938011169, 0.7266666889190674, 0.768666684627533, 0.7860000133514404, 0.7673333287239075, 0.7599999904632568, 0.7986666560173035, 0.8066666722297668, 0.8133333325386047, 0.8163333535194397, 0.8343333601951599, 0.82833331823349, 0.8169999718666077, 0.8190000057220459, 0.8033333420753479, 0.8523333072662354, 0.8159999847412109, 0.8496666550636292, 0.8576666712760925, 0.8389999866485596, 0.8543333411216736, 0.8460000157356262, 0.8519999980926514, 0.8463333249092102]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.824571430683136, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.0546986188839425, 2.149434516647504, 1.6150160767477517, 1.1065685701738683, 0.8963203035750645, 0.7787505067681214, 0.7776945235943041, 0.6845851986242276, 0.6931602389600535, 0.6471649839846276, 0.6362082542854766, 0.5982099480365073, 0.5939012332174205, 0.5764035161113726, 0.5563395952095115, 0.5428402894492068, 0.5516464587026946, 0.5318714531657404, 0.5175339892209403, 0.4957436847097885, 0.5006517176583396, 0.4818060334017563, 0.5150620621020028, 0.4643553013358181, 0.4655883208580493, 0.4639283985651369, 0.4442899265561389, 0.45402202269562075, 0.4367911341388417, 0.4400769234286197, 0.4175591139218055], "accuracy": [0.3259807229042053, 0.26641130447387695, 0.4319112300872803, 0.6061286330223083, 0.6548672318458557, 0.7047945857048035, 0.7066437602043152, 0.7387399077415466, 0.7347774505615234, 0.7440232634544373, 0.7493065595626831, 0.7663452625274658, 0.7676661014556885, 0.7817989587783813, 0.7911768555641174, 0.7931581139564514, 0.7858935594558716, 0.7931581139564514, 0.8026680946350098, 0.8150838613510132, 0.809140145778656, 0.8182538747787476, 0.8078193068504333, 0.8256505131721497, 0.8234050869941711, 0.8245938420295715, 0.8385946154594421, 0.8286884427070618, 0.8359529972076416, 0.8319904804229736, 0.8428213000297546], "val_loss": [1.9687136241367884, 1.138112987790789, 1.1516664028167725, 0.6672653470720563, 0.7291275773729596, 0.5873652526310512, 0.5469571692602975, 0.5182551656450544, 0.5279862540108817, 0.4715625558580671, 0.45950119835989817, 0.4894089869090489, 0.46987894603184294, 0.4836453539984567, 0.44044562748500277, 0.4228276695523943, 0.4264650685446603, 0.43369734287261963, 0.3943690742765154, 0.4349657211984907, 0.4122838292803083, 0.4513982023511614, 0.3651402848107474, 0.39457920619419645, 0.3484799180712019, 0.3416849970817566, 0.37639335223606657, 0.3491984350340707, 0.35432253565107075, 0.3523768442017691, 0.35978760038103375], "val_accuracy": [0.14233332872390747, 0.45366665720939636, 0.6333333253860474, 0.6823333501815796, 0.6869999766349792, 0.7289999723434448, 0.7276666760444641, 0.7730000019073486, 0.7363333106040955, 0.7876666784286499, 0.7879999876022339, 0.7616666555404663, 0.7873333096504211, 0.7870000004768372, 0.8033333420753479, 0.8116666674613953, 0.8246666789054871, 0.7990000247955322, 0.8326666951179504, 0.8003333210945129, 0.8166666626930237, 0.7956666946411133, 0.8453333377838135, 0.8223333358764648, 0.8583333492279053, 0.8640000224113464, 0.8383333086967468, 0.8496666550636292, 0.8476666808128357, 0.8506666421890259, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.4165714383125305, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.926805342760037, 2.3524786217054277, 2.3278585631282747, 2.300842746342367, 2.1996285235798356, 2.115389472426456], "accuracy": [0.19680359959602356, 0.17672698199748993, 0.11636507511138916, 0.11345925182104111, 0.20314356684684753, 0.2678642272949219], "val_loss": [1.712291649409703, 1.8481087684631348, 1.9744509969438826, 1.9619519369942802, 1.9260783195495605, 1.9648705210004533], "val_accuracy": [0.4233333468437195, 0.2669999897480011, 0.0976666659116745, 0.1509999930858612, 0.17266666889190674, 0.2709999978542328]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 3, 0, 2, 5, 9, 2, 9, 3, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 21, 99], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.14885714650154114, "mapping_values": [1, 18, 18, 12, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(beta), alpha), tf.math.add(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [406820.83218224416, 21154303421078.47, 647552576336.5769, 537203543724.78564, 453883316935.16, 842476834470.2935, 1235847370505.028, 1796467693063.5066], "accuracy": [0.05309734493494034, 0.11345925182104111, 0.12468630075454712, 0.12098798155784607, 0.11319508403539658, 0.08691058307886124, 0.09008057415485382, 0.09549596905708313], "val_loss": [144550810540909.72, 599378549613.7142, 450920223305.1429, 355258672274.2857, 301861868105.1429, 591240682349.7142, 877689082441.1428, 1869987034843.4285], "val_accuracy": [0.09733333438634872, 0.13733333349227905, 0.14733333885669708, 0.1340000033378601, 0.1003333330154419, 0.0729999989271164, 0.08166666328907013, 0.09033333510160446]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 2, 2, 5, 2, 2, 9, 2, 0], [2, 1, 1, 0, 2, 0, 1, 2, 1], [96, 23, 93, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 4, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), alpha)))), grad), alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [120486.13089426227, 2.4387710213173084, 2.3915234890911226, 2.3579910667171537, 2.3893324469436727, 2.3660284342027027, 2.4308534716224597, 2.3946875411411397, 2.3606352866554086, 2.3842429946584], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09694888442754745, 0.1010434553027153, 0.09998679161071777, 0.10038304328918457, 0.09800554811954498, 0.09998679161071777, 0.10117553919553757, 0.09998679161071777], "val_loss": [2.062978540148054, 2.0825593130929128, 2.011725289481027, 2.081210272652762, 1.9874520983014787, 2.082198347364153, 2.0763042313711986, 2.0007411411830356, 2.087270055498396, 2.017315455845424], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10000000149011612, 0.10100000351667404, 0.10300000011920929, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 8, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [3, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [73, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.pow(beta, alpha))", "other_info": {"loss": [2.3031736158061857, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 0, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3044842150799902, 2.794769355885782, 24.235684383877548, 100.32023166530026, 233.8933844082013, 425.6860743119433], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9893338339669364, 6.304330689566476, 51.157587323869976, 145.52876935686385, 289.351571219308, 482.43052455357144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [3, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1790115.3948254262, 2.310235690384052, 2.3057383551589408, 2.3039349265118094, 2.303251292459591, 2.3031211366679893, 2.302965921165921, 2.302863771605879, 2.302880153774412, 2.3029016120763517, 2.3028163117282916, 2.3028520706102693], "accuracy": [0.09787346422672272, 0.09747721254825592, 0.0952318087220192, 0.09549596905708313, 0.09325055778026581, 0.0940430611371994, 0.09681680053472519, 0.0952318087220192, 0.09206181764602661, 0.09602430462837219, 0.09615638852119446, 0.09576013684272766], "val_loss": [1.9825457164219447, 1.9771499633789062, 1.9750288554600306, 1.974081175667899, 1.9738161223275321, 1.9736830847603934, 1.9736275672912598, 1.9737039293561662, 1.9737004552568709, 1.9736591747828893, 1.9736410549708776, 1.9736787251063757], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10366666316986084, 0.09733333438634872, 0.09666666388511658, 0.10100000351667404, 0.10133333504199982, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], [6, 2, 9, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 9, 7, 9], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93, 29, 20, 61], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 17, 6, 6, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 9, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 8, 93, 95], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031736158061857, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], [2, 2, 5, 6, 1, 0, 0, 2, 5, 2, 2, 4, 4, 0], [0, 1, 3, 0, 2, 0, 2, 2], [96, 12, 93, 31], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [28, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.303543492771804, 2.303022599286407, 2.3030537548727756, 2.3029737500876104, 2.302994555580523, 2.3031738659394274], "accuracy": [0.09509972482919693, 0.09457138925790787, 0.0952318087220192, 0.09681680053472519, 0.09470347315073013, 0.09642054885625839], "val_loss": [1.9736057009015764, 1.97365631375994, 1.9737077440534319, 1.9735634667532784, 1.9736576080322266, 1.9736323356628418], "val_accuracy": [0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.10366666316986084, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 1, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 15, 8, 7, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(sigma, alpha), tf.math.subtract(tf.math.add(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta)))", "other_info": {"loss": [149813.94594403912, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [38589.13959938556, 2.4387709043911183, 2.3915233316359785, 2.357990895752358, 2.389331241341126, 2.3660263559837476, 2.4308478263516893, 2.3946793675501397, 2.360636762923348, 2.3842337721642126], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09694888442754745, 0.1010434553027153, 0.09998679161071777, 0.10038304328918457, 0.09800554811954498, 0.09998679161071777, 0.10117553919553757, 0.09998679161071777], "val_loss": [2.062978744506836, 2.082558972494943, 2.0117248126438687, 2.0812087740216936, 1.9874512127467565, 2.0821950095040456, 2.076296193259103, 2.0007412093026296, 2.087261268070766, 2.0173211778913225], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10000000149011612, 0.10100000351667404, 0.10300000011920929, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 0, 1], [6, 4, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 0, 1, 0, 2, 0, 2, 2], [55, 12, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 6, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [1.5287269977606731e+29, 2.4548576530007606, 2.784336733386627, 3.9078299709204685, 5.977926296092547, 8.325300812611033], "accuracy": [0.06419230997562408, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.06064578465053, 2.215017114366804, 2.8028128487723216, 4.334810529436384, 6.321188245500837, 8.361793518066406], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 5, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.06885714083909988, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.square(beta))", "other_info": {"loss": [2.3021617857157484, 2.3011622484948075, 2.3019206720714194, 2.301687400700976, 2.3007365731105924, 2.3021649924157206, 2.3003259332440456, 2.3011056807188863, 2.3006889946692812, 2.3015403149543956, 2.301068151505742, 2.300027609816191, 2.301110798766852, 2.299565258531239, 2.300308658871684, 2.3004627881851873, 2.3005543160101585, 2.3002047360203193, 2.2998266764887574, 2.299520518596792, 2.2992546860064182, 2.2996253680086975, 2.2995315998489545, 2.299701385651723, 2.3000854908624864, 2.2989980562283394, 2.2993959721132056, 2.2998010808639617, 2.2986383940077353, 2.2988450008533916], "accuracy": [0.09298639744520187, 0.09206181764602661, 0.09589222073554993, 0.09034473448991776, 0.09470347315073013, 0.0886276587843895, 0.09298639744520187, 0.09747721254825592, 0.09417514503002167, 0.09219389408826828, 0.08915598690509796, 0.09734513610601425, 0.09206181764602661, 0.10210011899471283, 0.0952318087220192, 0.09985470771789551, 0.10051512718200684, 0.10381719470024109, 0.09853387624025345, 0.10196803510189056, 0.10117553919553757, 0.09879804402589798, 0.10077928751707077, 0.09708096832036972, 0.0952318087220192, 0.10091137140989304, 0.10249637067317963, 0.09589222073554993, 0.10210011899471283, 0.10315678268671036], "val_loss": [1.970191410609654, 1.97001736504691, 1.9698637553623743, 1.969693388257708, 1.969552653176444, 1.9694103513445174, 1.9693074226379395, 1.969231196812221, 1.9691484996250697, 1.9690867151532854, 1.968996524810791, 1.968951633998326, 1.9689226831708635, 1.968940258026123, 1.9689482961382185, 1.969003404889788, 1.9689836502075195, 1.9690008844648088, 1.9690192767551966, 1.969048159463065, 1.9690393039158411, 1.9690017018999373, 1.96896117074149, 1.9689269747052873, 1.9688829013279505, 1.968874522617885, 1.9688872609819685, 1.968881062098912, 1.9689044952392578, 1.9689539500645228], "val_accuracy": [0.04066666588187218, 0.043666668236255646, 0.04633333161473274, 0.04800000041723251, 0.049666665494441986, 0.05166666582226753, 0.054999999701976776, 0.057999998331069946, 0.06066666543483734, 0.06133333221077919, 0.06366666406393051, 0.06666667014360428, 0.06733333319425583, 0.0689999982714653, 0.06933332979679108, 0.07000000029802322, 0.07266666740179062, 0.07433333247900009, 0.07466666400432587, 0.07599999755620956, 0.07833333313465118, 0.07999999821186066, 0.08100000023841858, 0.08233333379030228, 0.08366666734218597, 0.08366666734218597, 0.0833333358168602, 0.08299999684095383, 0.08233333379030228, 0.08100000023841858]}}]