[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.156368529980823, 1.8045800776293313, 1.3587620807377385, 1.0840547745805045, 0.9093882161565445, 0.7561613810674909, 0.7590942048692685, 0.7323929569142101, 0.674241819275904, 0.6721011228439217, 0.6260902031836902, 0.6307743201560002, 0.5976267801520216, 0.5871225794418817, 0.5768585270185828, 0.5657757937616881, 0.5370804669008027, 0.5320911290402803], "accuracy": [0.27116629481315613, 0.40047550201416016, 0.5081230998039246, 0.611940324306488, 0.6717738509178162, 0.722229540348053, 0.7116629481315613, 0.7240787148475647, 0.7405890822410583, 0.7427024245262146, 0.7633073329925537, 0.7621186375617981, 0.7736098170280457, 0.778761088848114, 0.7815347909927368, 0.7901201844215393, 0.800290584564209, 0.7979130744934082], "val_loss": [1.7214434146881104, 0.9818836280277797, 0.8912994180406842, 0.6974081482206073, 0.5747452633721488, 0.5399108273642403, 0.5668462003980365, 0.5268956933702741, 0.4685814380645752, 0.44290803159986225, 0.44550956998552593, 0.4293988602502005, 0.42592374767575947, 0.48985373973846436, 0.4434185709272112, 0.4615533692496164, 0.4118367348398481, 0.41500613519123625], "val_accuracy": [0.3316666781902313, 0.609333336353302, 0.6426666378974915, 0.7179999947547913, 0.7336666584014893, 0.7390000224113464, 0.7480000257492065, 0.7459999918937683, 0.7846666574478149, 0.7863333225250244, 0.7910000085830688, 0.8103333115577698, 0.815666675567627, 0.7716666460037231, 0.8133333325386047, 0.7746666669845581, 0.8019999861717224, 0.8059999942779541]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [5, 63, 57, 12]], "fitness": -0.698285698890686, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3011257929682905, 2.3005932411891186, 2.2955360640592706, 2.2898067327743004, 2.2819019281601216, 2.271710711542043, 2.259941521007088, 2.2472662020038228, 2.23160921218861, 2.2148761757140334, 2.1924227418963778, 2.1684963717641392, 2.1416381473916632, 2.103226114305066, 2.0639449193760737, 2.0163434175153245, 1.9520653838478987, 1.8880689496991498, 1.8118237949963873, 1.7233229736531683, 1.6537206357638, 1.5782950494456616, 1.508869397704785, 1.4583757082547777, 1.4189532999632744, 1.3959991424279898, 1.3775727788392091, 1.3557077947624638, 1.371181452578211, 1.3508323066978722, 1.3847476377967105, 1.3674218299098853, 1.2813856582033194, 1.2203529741407906, 1.191932715807199, 1.1356781977609542, 1.0779520123311321, 1.0317386458295132, 0.9724821676557343, 0.9348901350421677, 0.9228386032409703, 0.9076791423942592, 0.9190797446316039, 0.9044247601467148, 0.9153875338009335], "accuracy": [0.09774138033390045, 0.09642054885625839, 0.109232597053051, 0.12574297189712524, 0.14370624721050262, 0.16734910011291504, 0.20776647329330444, 0.24224013090133667, 0.27222296595573425, 0.30260202288627625, 0.32862237095832825, 0.3401135802268982, 0.3625676929950714, 0.3789459764957428, 0.395720511674881, 0.4037775695323944, 0.41923126578330994, 0.41949543356895447, 0.42966583371162415, 0.4468366205692291, 0.454629510641098, 0.4616298973560333, 0.481838583946228, 0.49848103523254395, 0.5081230998039246, 0.5132743120193481, 0.5291243195533752, 0.5387663245201111, 0.5362567901611328, 0.5515784025192261, 0.548540472984314, 0.557390034198761, 0.5843349695205688, 0.5978074073791504, 0.6091665625572205, 0.6275261044502258, 0.641791045665741, 0.6419231295585632, 0.6538106203079224, 0.6581693291664124, 0.6557918190956116, 0.6552634835243225, 0.650640606880188, 0.6625280380249023, 0.6634526252746582], "val_loss": [1.9692730903625488, 1.9662301199776786, 1.9613114084516252, 1.9545651844569616, 1.946087224142892, 1.9359962599618095, 1.924351692199707, 1.9111080850873674, 1.8961132594517298, 1.8788675580705916, 1.8585367883954729, 1.83407803944179, 1.8043533733912878, 1.7682159968784876, 1.7243804250444685, 1.6716466631208147, 1.6088953358786446, 1.5357945305960519, 1.4531844684055872, 1.3636184760502406, 1.2711992263793945, 1.1814836433955602, 1.0988121713910783, 1.0256591524396623, 0.9628168174198696, 0.9092813219342913, 0.8628921168191093, 0.8240124327795846, 0.7980899129595075, 0.7843926634107318, 0.7668381929397583, 0.73716253893716, 0.7145945004054478, 0.7088708026068551, 0.7082644871303013, 0.699400646345956, 0.6789391892296928, 0.6538500956126622, 0.6353581292288644, 0.63332656451634, 0.6426375593457904, 0.6541951043265206, 0.6637731279645648, 0.6709531886237008, 0.677410466330392], "val_accuracy": [0.04466666653752327, 0.06800000369548798, 0.10833333432674408, 0.18266665935516357, 0.2590000033378601, 0.32366666197776794, 0.35866665840148926, 0.37533333897590637, 0.390666663646698, 0.40966665744781494, 0.41733333468437195, 0.4269999861717224, 0.4403333365917206, 0.4533333480358124, 0.4690000116825104, 0.4846666753292084, 0.5040000081062317, 0.5213333368301392, 0.5456666946411133, 0.5640000104904175, 0.5860000252723694, 0.6043333411216736, 0.6259999871253967, 0.6433333158493042, 0.6566666960716248, 0.6676666736602783, 0.6723333597183228, 0.6743333339691162, 0.6753333210945129, 0.671999990940094, 0.6796666383743286, 0.6970000267028809, 0.7059999704360962, 0.7086666822433472, 0.7089999914169312, 0.7149999737739563, 0.7143333554267883, 0.7200000286102295, 0.7263333201408386, 0.734666645526886, 0.7246666550636292, 0.7053333520889282, 0.6980000138282776, 0.703000009059906, 0.715666651725769]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [2, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [18, 59, 57, 12]], "fitness": -0.6740000247955322, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2999524735440793, 2.2978924350526904, 2.2934049930491893, 2.2902315489572858, 2.2868194884911284, 2.2829245859054668, 2.2793834960188266, 2.2763137221257637, 2.2726257268101735, 2.2695457622942246, 2.2652174370274047, 2.2610084612796872, 2.2581933313719174, 2.252082772400432, 2.24934768437426, 2.246322247802841, 2.2403694902822373, 2.237178036880342, 2.2325202353705094, 2.224637075327706, 2.222900015503865, 2.2172641528359716, 2.214060689007617, 2.207016696956384, 2.2006207744065307, 2.1948599598710374, 2.1890183607380327, 2.1793680435095513, 2.174073586768132, 2.164387608500299, 2.159880336627449, 2.152526106612085, 2.140941829823736, 2.132683093191028, 2.1246713438148683, 2.1159318776068323, 2.105141204912838, 2.0967451396194416, 2.084840743895362, 2.073793754507097, 2.064290060296019, 2.0500231676601763, 2.0362283426142955, 2.021132265713709, 2.008499759819057, 1.9968281359389757, 1.982017293283102, 1.968498779939796, 1.9523636382474183, 1.937613946036451, 1.9223742418915226, 1.90756997352326, 1.8872423999108943, 1.8727587223241924, 1.8573657788967082, 1.837991855273929, 1.8208131120661861, 1.802222723060863, 1.7902762594633665, 1.768418807363655, 1.7456107266811158, 1.7320238105876964, 1.7186321906441349, 1.7014863202443071, 1.6795874664638935, 1.666154361530113, 1.6441673218471782, 1.6265552126263836, 1.6036102534946497, 1.5928431537409249, 1.5742528742456543, 1.5576796374537012, 1.540191978275217, 1.5279036811818032, 1.5177778150931074, 1.5022276612383705, 1.479775436833676, 1.4717065431280947, 1.4522687622017911, 1.4391562209987778, 1.431307028155868, 1.407482883555778, 1.4044024121759748, 1.38305143781893, 1.378695553871052, 1.3684203116932503, 1.360098015835351, 1.3481259646432715, 1.3330843595859476, 1.325148970239025, 1.3114977841993853, 1.3068453458164504, 1.3007258443532603, 1.2896094584367406, 1.2854692439172624, 1.2731924030869282, 1.272491585687167, 1.2432555405376546, 1.249911901122937, 1.2248407335581166], "accuracy": [0.09959053993225098, 0.1026284471154213, 0.11451591551303864, 0.12415797263383865, 0.1302337795495987, 0.13842293620109558, 0.14700831472873688, 0.15876370668411255, 0.17091533541679382, 0.18055738508701324, 0.19178444147109985, 0.1974640041589737, 0.20657773315906525, 0.22454100847244263, 0.2254655957221985, 0.23576806485652924, 0.25584468245506287, 0.2479196935892105, 0.2596750855445862, 0.2743362784385681, 0.2715625464916229, 0.2785629332065582, 0.2884691655635834, 0.3007528781890869, 0.3078853487968445, 0.3105269968509674, 0.3237352967262268, 0.32941487431526184, 0.3366794288158417, 0.3447364866733551, 0.3411702513694763, 0.3467177450656891, 0.3593977093696594, 0.36203935742378235, 0.36785101890563965, 0.37300223112106323, 0.3770968019962311, 0.381719708442688, 0.38568219542503357, 0.38805970549583435, 0.39624884724617004, 0.39849424362182617, 0.4093250632286072, 0.41368380188941956, 0.41209879517555237, 0.41751420497894287, 0.4251750111579895, 0.42306166887283325, 0.4251750111579895, 0.43164706230163574, 0.43864747881889343, 0.43468499183654785, 0.4435345530509949, 0.4476291239261627, 0.4473649561405182, 0.4542332589626312, 0.4593845009803772, 0.46030908823013306, 0.4563465714454651, 0.46664905548095703, 0.47708359360694885, 0.4679698944091797, 0.4640074074268341, 0.47668737173080444, 0.48131024837493896, 0.4773477613925934, 0.49332982301712036, 0.4916127324104309, 0.5004622936248779, 0.4943864643573761, 0.5036323070526123, 0.5112931132316589, 0.5086514353752136, 0.5135384798049927, 0.5101043581962585, 0.5123497843742371, 0.5248976349830627, 0.5281997323036194, 0.5325584411621094, 0.531369686126709, 0.5341434478759766, 0.5391625761985779, 0.5296525955200195, 0.548540472984314, 0.5428609251976013, 0.5497292280197144, 0.5517104864120483, 0.5503896474838257, 0.5588429570198059, 0.5519746541976929, 0.5587108731269836, 0.5639941692352295, 0.5581825375556946, 0.5638620853424072, 0.5643904209136963, 0.5628054141998291, 0.5690133571624756, 0.5822216272354126, 0.5698058605194092, 0.5830141305923462], "val_loss": [1.9670172418866838, 1.9637109892708915, 1.960404600415911, 1.9570916039603097, 1.9538028580801827, 1.9504821641104562, 1.9471139907836914, 1.9437642778669084, 1.9403509412493025, 1.9368879454476493, 1.9333139147077287, 1.9296947887965612, 1.9260157176426478, 1.9221972737993513, 1.9183016504560197, 1.9142791884286063, 1.9100912639072962, 1.9058057921273368, 1.9013332639421736, 1.896676472255162, 1.891869340624128, 1.8869085993085588, 1.8818025588989258, 1.87637083871024, 1.8707468850272042, 1.8648881231035506, 1.858717373439244, 1.8521881103515625, 1.845384189060756, 1.8381829942975725, 1.8308540071759904, 1.8231804711478097, 1.8150744438171387, 1.806600706917899, 1.7978215217590332, 1.7886834825788225, 1.7790998731340681, 1.7691967827933175, 1.7588714872087752, 1.748091493334089, 1.736945356641497, 1.725314004080636, 1.713191270828247, 1.7005069255828857, 1.6874071189335413, 1.6739558492388045, 1.659959418433053, 1.6456355707986015, 1.630889654159546, 1.6156977925981795, 1.6001111779894148, 1.5842205796922957, 1.5678749765668596, 1.5511716433933802, 1.534144401550293, 1.5168662752423967, 1.4992179870605469, 1.481529372079032, 1.4638352053506034, 1.4459861346653529, 1.4277051516941615, 1.4094963073730469, 1.391361917768206, 1.3732326030731201, 1.354971068246024, 1.3369380405970983, 1.3190925802503313, 1.3013639450073242, 1.2836040769304549, 1.2660760198320662, 1.2489062717982702, 1.2320427894592285, 1.2154546124594552, 1.1992933750152588, 1.1835454191480363, 1.1682943275996618, 1.1531181335449219, 1.1386304923466273, 1.1243312358856201, 1.1104018007005965, 1.0969263485499792, 1.0835154397147042, 1.0708255767822266, 1.0581628254481725, 1.046255247933524, 1.0345774718693324, 1.023216894694737, 1.0123429638998849, 1.0016402176448278, 0.9914260591779437, 0.9815522262028286, 0.9721822738647461, 0.9629231180463519, 0.9538816383906773, 0.945413623537336, 0.936863933290754, 0.9287869249071393, 0.9203658103942871, 0.9126039913722447, 0.9046661172594342], "val_accuracy": [0.06199999898672104, 0.08666666597127914, 0.11400000005960464, 0.1483333259820938, 0.1863333284854889, 0.21566666662693024, 0.24666666984558105, 0.2709999978542328, 0.2953333258628845, 0.31433331966400146, 0.33000001311302185, 0.34566667675971985, 0.35866665840148926, 0.36899998784065247, 0.3763333261013031, 0.3869999945163727, 0.3919999897480011, 0.39633333683013916, 0.40533334016799927, 0.4126666784286499, 0.4180000126361847, 0.42633333802223206, 0.4326666593551636, 0.437333345413208, 0.44433334469795227, 0.44733333587646484, 0.4503333270549774, 0.45366665720939636, 0.4573333263397217, 0.46000000834465027, 0.4663333296775818, 0.4699999988079071, 0.47600001096725464, 0.4819999933242798, 0.4856666624546051, 0.4933333396911621, 0.49933332204818726, 0.5046666860580444, 0.5116666555404663, 0.5176666378974915, 0.5230000019073486, 0.5256666541099548, 0.531000018119812, 0.5373333096504211, 0.5410000085830688, 0.543666660785675, 0.5456666946411133, 0.5506666898727417, 0.5533333420753479, 0.5573333501815796, 0.562333345413208, 0.5663333535194397, 0.5693333148956299, 0.5713333487510681, 0.5720000267028809, 0.5759999752044678, 0.5796666741371155, 0.5820000171661377, 0.5853333473205566, 0.5886666774749756, 0.5910000205039978, 0.5923333168029785, 0.5943333506584167, 0.5973333120346069, 0.5993333458900452, 0.6033333539962769, 0.6043333411216736, 0.6056666374206543, 0.609666645526886, 0.6100000143051147, 0.6113333106040955, 0.612666666507721, 0.6179999709129333, 0.624666690826416, 0.6269999742507935, 0.6313333511352539, 0.6336666941642761, 0.6380000114440918, 0.6413333415985107, 0.6426666378974915, 0.6453333497047424, 0.6456666588783264, 0.6493333578109741, 0.6543333530426025, 0.6583333611488342, 0.6600000262260437, 0.6626666784286499, 0.6653333306312561, 0.6663333177566528, 0.6676666736602783, 0.6706666946411133, 0.67166668176651, 0.6733333468437195, 0.6756666898727417, 0.6756666898727417, 0.6776666641235352, 0.6796666383743286, 0.6826666593551636, 0.6833333373069763, 0.6856666803359985]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.3700000047683716, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.2920693864030075, 2.428975912148785, 2.2983760558193733, 2.3041114672662215, 2.303660141809222, 2.30313256617944, 2.3029495617654017], "accuracy": [0.23563598096370697, 0.19310526549816132, 0.18161405622959137, 0.1010434553027153, 0.09509972482919693, 0.10091137140989304, 0.09377889335155487], "val_loss": [2.967221532549177, 1.864494868687221, 1.9753690447126115, 1.9741257258823939, 1.9737450735909599, 1.9737416676112585, 1.973654338291713], "val_accuracy": [0.257666677236557, 0.35100001096725464, 0.10066666454076767, 0.10000000149011612, 0.10300000011920929, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 2, 9, 2, 2, 2, 2, 6, 7, 8, 7, 2, 9, 5, 6, 0, 5, 2, 8, 5, 4, 4, 6, 0, 5, 8, 6, 3, 1, 3, 9, 2, 5, 5], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 41, 54, 66, 71, 44, 87], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 57, 12]], "fitness": -0.17657142877578735, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [236371344.9355935, 269562403.1509708, 267756905.3493594, 273044305.3673227, 265044849.98864087, 266070411.5725796], "accuracy": [0.11596883088350296, 0.11134592443704605, 0.11213842034339905, 0.109232597053051, 0.11332716792821884, 0.11781799048185349], "val_loss": [198967149.7142857, 198965083.42857143, 198966313.14285713, 198966596.57142857, 198964932.57142857, 198964987.42857143], "val_accuracy": [0.18333333730697632, 0.18333333730697632, 0.18333333730697632, 0.18333333730697632, 0.18299999833106995, 0.18299999833106995]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [27, 59, 57, 12]], "fitness": -0.1508571356534958, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(sigma), alpha)", "other_info": {"loss": [2.6540499918842833, 2.3499700486494675, 2.3045528877869477, 2.2946928192391103, 2.3393423140970095, 2.303423314345842, 2.3030123876904955, 2.3031443278267716, 2.303046904597788], "accuracy": [0.2262580841779709, 0.15149913728237152, 0.09985470771789551, 0.14978206157684326, 0.1468762308359146, 0.09945846349000931, 0.09800554811954498, 0.10011887550354004, 0.10276053100824356], "val_loss": [2.1505349023001537, 1.9758410453796387, 1.9724461010524206, 1.9064079012189592, 1.9738829476492745, 1.9735893521990096, 1.9735736846923828, 1.9736501829964774, 1.9736240931919642], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.2796666622161865, 0.10366666316986084, 0.10000000149011612, 0.10300000011920929, 0.10100000351667404, 0.09566666930913925]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 2, 1, 1, 5, 9, 1, 2, 3, 5, 0, 5, 3, 1, 5, 8, 3, 1, 6, 5, 5, 3, 3, 1, 5], [1, 4, 1, 3, 0, 2, 3, 0, 2, 4, 1, 3, 3, 3, 1, 5, 3, 2, 1, 3, 2, 0, 4, 3, 1, 2, 2, 2, 2, 1, 0], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 58, 58, 36, 22, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, grad))))))))), tf.math.square(alpha))), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [54301873887.478455, 7995402479873.792, 133215328513735.84, 927466168355291.2, 4089064844013325.0, 1.3500404788104098e+16], "accuracy": [0.1014397069811821, 0.09985470771789551, 0.10011887550354004, 0.1018359512090683, 0.10315678268671036, 0.09853387624025345], "val_loss": [434372383305.1429, 23159931666432.0, 247564484252233.16, 1346957578600448.0, 5038081463812096.0, 1.485155115331935e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 3, 2, 5, 2, 0, 2, 2, 6, 7, 2, 2, 3, 7, 4, 2, 7, 9, 8, 5, 1, 7, 0, 8, 4, 0, 3, 2, 7, 7, 9, 7, 0, 1, 1, 9, 1, 7, 6, 0, 0, 2, 6, 9], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 7, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3021615571223704, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [84, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 5, 3, 2, 9, 2, 2, 2, 2, 6, 7, 8, 7, 2, 9, 5, 6, 0, 5, 2, 8, 5, 4, 4, 6, 0, 5, 8, 6, 3, 1, 3, 9, 2, 5, 5], [3, 4, 1, 3, 0, 2, 3, 0, 2, 4, 1, 3, 3, 3, 1, 5, 3, 2, 1, 3, 2, 0, 4, 3, 1, 2, 2, 2, 2, 1, 0], [52, 41, 54, 66, 71, 44, 87], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [91, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021615571223704, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [5, 5, 1, 2, 9, 2, 2, 2, 2, 6, 7, 8, 7, 2, 9, 5, 6, 0, 5, 2, 8, 5, 4, 4, 6, 0, 5, 8, 6, 3, 1, 3, 9, 2, 5, 5], [3, 4, 1, 3, 0, 2, 3, 0, 2, 4, 1, 3, 3, 3, 1, 5, 3, 2, 1, 3, 2, 0, 4, 3, 1, 2, 2, 2, 2, 1, 0], [52, 41, 54, 66, 71, 44, 87], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 3, 3, 0, 2, 3, 0, 2, 4, 1, 3, 1, 3, 1, 5, 3, 2, 1, 3, 2, 2, 4, 2, 1, 2, 2, 2, 2, 1, 0], [52, 41, 54, 66, 71, 44, 87], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 41, 54, 66, 71, 44, 87], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 7, 4, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, beta)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [6523536.898699384, 2.3076503686523235, 2.3051404090778562, 2.3039534429218382, 2.3033100826203974, 2.3030117590035966], "accuracy": [0.09813763201236725, 0.09959053993225098, 0.0940430611371994, 0.0936468094587326, 0.09377889335155487, 0.09893012791872025], "val_loss": [1.979095799582345, 1.976311547415597, 1.9749430928911482, 1.9742725236075265, 1.9739678246634347, 1.9737981387547083], "val_accuracy": [0.10300000011920929, 0.10066666454076767, 0.10133333504199982, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 0, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 5, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [27, 59, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.negative(alpha)), alpha)", "other_info": {"loss": [2.3014371825278537, 2.302945987817051, 2.302011601188951, 2.302380652459794, 2.302430831430264, 2.302165694476717], "accuracy": [0.09708096832036972, 0.09034473448991776, 0.09192973375320435, 0.09272222965955734, 0.09179764986038208, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 4, 1, 3, 0, 2, 3, 0, 2, 4, 1, 3, 3, 3, 1, 5, 3, 2, 1, 3, 2, 0, 4, 3, 1, 2, 2, 2, 2, 1, 0], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 14, 14, 8, 6, 2, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014371825278537, 2.302945987817051, 2.302011601188951, 2.302380652459794, 2.302430831430264, 2.302165694476717], "accuracy": [0.09708096832036972, 0.09034473448991776, 0.09192973375320435, 0.09272222965955734, 0.09179764986038208, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [8, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 3, 2, 5, 2, 0, 2, 2, 6, 7, 2, 2, 3, 7, 4, 2, 7, 9, 8, 5, 1, 7, 0, 8, 4, 0, 3, 2, 7, 7, 9, 7, 0, 1, 1, 9, 1, 7, 6, 0, 0, 2, 6, 9], [1, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [0, 7], [71], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, alpha)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014371825278537, 2.302945987817051, 2.302011601188951, 2.302380652459794, 2.302430831430264, 2.302165694476717], "accuracy": [0.09708096832036972, 0.09034473448991776, 0.09192973375320435, 0.09272222965955734, 0.09179764986038208, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 4, 1, 3, 0, 2, 3, 0, 2, 4, 1, 3, 3, 3, 1, 5, 3, 2, 1, 3, 2, 0, 4, 3, 1, 2, 2, 2, 2, 1, 0], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [11, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), alpha))), lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014371825278537, 2.302945987817051, 2.302011601188951, 2.302380652459794, 2.302430831430264, 2.302165694476717], "accuracy": [0.09708096832036972, 0.09034473448991776, 0.09192973375320435, 0.09272222965955734, 0.09179764986038208, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 5, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [90, 59, 57, 12]], "fitness": -0.03285714238882065, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.add(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301912362407684, 2.305134067320002, 2.306289264664847, 2.30926827416995, 2.3121557696431525, 2.3158762052846136], "accuracy": [0.09655263274908066, 0.08757099509239197, 0.0870426595211029, 0.08268392831087112, 0.07924976944923401, 0.07409853488206863], "val_loss": [1.971381323678153, 1.972862652369908, 1.974564756665911, 1.9766099112374442, 1.9787908962794714, 1.9815401349748885], "val_accuracy": [0.029666665941476822, 0.02566666714847088, 0.021666666492819786, 0.02033333294093609, 0.021666666492819786, 0.028333334252238274]}}]