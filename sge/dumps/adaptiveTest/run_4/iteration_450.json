[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 2, 6, 5, 6, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 8, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8045714497566223, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0911527117875433, 1.4226791475427276, 1.016239726390695, 0.9621913327580005, 0.850902974613433, 0.7730826063871604, 0.7420807424049494, 0.7506664384625387, 0.6927496325054882, 0.681483532711342, 0.678176640732067, 0.6385443884194912, 0.6567165887256607, 0.6252036394775032, 0.6073044402299225, 0.5941586544122899, 0.5893638861917816, 0.5862448521813601, 0.57440428913482, 0.5698827850961918, 0.5623328454695075, 0.5540964293788532, 0.5568832963874327, 0.5323440828312027, 0.5353211033235624, 0.5162593359645521, 0.529296777078646, 0.5228368598220371, 0.4995543686642292, 0.49310542269311075, 0.5113329480565408, 0.4877002928290369, 0.48559290210820616, 0.47563756562856996, 0.47530105836387354, 0.47841497009865847, 0.46346289554780357, 0.470975226237868, 0.45418216940544504], "accuracy": [0.3136970102787018, 0.5171047449111938, 0.62660151720047, 0.6457535624504089, 0.6800950765609741, 0.707568347454071, 0.713908314704895, 0.7100779414176941, 0.7405890822410583, 0.7368907928466797, 0.7320036888122559, 0.754589855670929, 0.7445515990257263, 0.7585523724555969, 0.767401933670044, 0.7705719470977783, 0.7763835787773132, 0.7716285586357117, 0.778232753276825, 0.7869502305984497, 0.7832518815994263, 0.7885351777076721, 0.7852331399917603, 0.7977809906005859, 0.7951393723487854, 0.8009510040283203, 0.7944789528846741, 0.8072909712791443, 0.8140271902084351, 0.8149517774581909, 0.8053097128868103, 0.8145555257797241, 0.8207634687423706, 0.8239334225654602, 0.8190463781356812, 0.8187822103500366, 0.828820526599884, 0.8239334225654602, 0.8285563588142395], "val_loss": [1.1740790094648088, 0.8343422753470284, 0.7356585945401873, 0.6613564150674003, 0.6375397103173392, 0.5528607709067208, 0.5318198544638497, 0.5526460238865444, 0.5392624480383736, 0.5044479881014142, 0.49120850222451345, 0.5125974587031773, 0.4770543234688895, 0.47088444232940674, 0.44467055797576904, 0.4452537979398455, 0.4712267092296055, 0.4358125499316624, 0.4516505513872419, 0.43679700578962055, 0.4468633106776646, 0.4471149614879063, 0.4201394660132272, 0.4145734395299639, 0.4254544036728995, 0.4089556166103908, 0.4141344002314976, 0.3914715477398464, 0.38546750375202726, 0.4099881649017334, 0.3791221635682242, 0.3750760555267334, 0.37427306175231934, 0.37181551115853445, 0.3791552015713283, 0.3742686084338597, 0.36893930605479647, 0.36755954367773874, 0.371390632220677], "val_accuracy": [0.5926666855812073, 0.612333357334137, 0.6703333258628845, 0.6850000023841858, 0.7106666564941406, 0.746999979019165, 0.7663333415985107, 0.746999979019165, 0.7666666507720947, 0.7666666507720947, 0.7873333096504211, 0.7713333368301392, 0.7789999842643738, 0.8026666641235352, 0.8119999766349792, 0.8100000023841858, 0.7756666541099548, 0.8003333210945129, 0.8083333373069763, 0.8256666660308838, 0.7856666445732117, 0.7986666560173035, 0.8240000009536743, 0.8289999961853027, 0.8026666641235352, 0.8199999928474426, 0.8216666579246521, 0.8376666903495789, 0.840666651725769, 0.8190000057220459, 0.8433333039283752, 0.8473333120346069, 0.8456666469573975, 0.8483333587646484, 0.8333333134651184, 0.8386666774749756, 0.8483333587646484, 0.843666672706604, 0.8423333168029785]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 8, 5, 7, 1, 9, 2, 5, 2, 8, 5, 6, 2, 6, 5, 6, 0, 4, 7, 4, 8, 9, 3, 5, 2, 7, 2, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 37, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7931428551673889, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, alpha), grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0914678621947127, 1.412703717924805, 1.0655630575966573, 0.942493402797312, 0.8450512468161411, 0.7946995372832679, 0.7533466816735762, 0.7574674067338538, 0.711969941574994, 0.6907238479713014, 0.6796920830390047, 0.6612404584884644, 0.655445317133401, 0.6306479447049519, 0.6282922966117164, 0.625294838654225, 0.623135887195626, 0.6037465075948345, 0.5875011083236098, 0.5707592347735474, 0.5640488809220401, 0.575948849416853], "accuracy": [0.3159424066543579, 0.49768856167793274, 0.6147140264511108, 0.6655659675598145, 0.6933034062385559, 0.7046625018119812, 0.7194558382034302, 0.7228899598121643, 0.7313432693481445, 0.7371549606323242, 0.7401928305625916, 0.7499669790267944, 0.7532690763473511, 0.7598732113838196, 0.7627789974212646, 0.7637035846710205, 0.7663452625274658, 0.7754589915275574, 0.7802139520645142, 0.7901201844215393, 0.7922335267066956, 0.785101056098938], "val_loss": [1.2148278440747942, 1.0181275776454382, 0.8620604787554059, 0.6283917937959943, 0.5657981634140015, 0.5654319184167045, 0.5836037397384644, 0.5428204877035958, 0.5538183620997837, 0.5061166967664447, 0.49013733863830566, 0.4889324733189174, 0.47564307280949186, 0.4684851680483137, 0.4665062597819737, 0.4666756732123239, 0.44181045464106966, 0.44858172961643766, 0.4276805179459708, 0.4318277324948992, 0.418182304927281, 0.45279671464647564], "val_accuracy": [0.5419999957084656, 0.5640000104904175, 0.652999997138977, 0.718999981880188, 0.7526666522026062, 0.7400000095367432, 0.7599999904632568, 0.7456666827201843, 0.7289999723434448, 0.7833333611488342, 0.7736666798591614, 0.7866666913032532, 0.7886666655540466, 0.7916666865348816, 0.8050000071525574, 0.7770000100135803, 0.8183333277702332, 0.800000011920929, 0.8083333373069763, 0.793666660785675, 0.8183333277702332, 0.7913333177566528]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [2, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.103853678863912, 1.3978824541474597, 1.0618202395490164, 0.9375548072778286, 0.8551802447270157, 0.8184190083724664, 0.7664846836882906, 0.7680421389246724, 0.7363468299625635, 0.7149187718809493, 0.7217391962152289, 0.6782247879722131, 0.6781756396794977, 0.6647793161807641, 0.6592436168392526, 0.6487444107716094, 0.6714140308720482, 0.639503943827237, 0.6256581902299275, 0.6254675718598346, 0.618722283553611, 0.6198084921947702], "accuracy": [0.3131686747074127, 0.505349338054657, 0.6156386137008667, 0.6687359809875488, 0.6923788189888, 0.6985867023468018, 0.7143045663833618, 0.7193237543106079, 0.7235503792762756, 0.7333245277404785, 0.724210798740387, 0.7528728246688843, 0.7518161535263062, 0.7543256878852844, 0.7560427784919739, 0.7555144429206848, 0.7548540234565735, 0.7677981853485107, 0.7733456492424011, 0.7693831920623779, 0.7761194109916687, 0.7751948237419128], "val_loss": [1.2479627473013741, 0.8958948680332729, 0.8101329973765782, 0.6372037274496896, 0.580984251839774, 0.5502513136182513, 0.5609072957720075, 0.5488924639565604, 0.546289324760437, 0.5406295231410435, 0.5147582973752703, 0.5127532311848232, 0.5068778991699219, 0.4787996326174055, 0.4590693541935512, 0.46515134402683805, 0.4488531691687448, 0.4900460583823068, 0.46550209181649344, 0.45240252358572824, 0.4677368402481079, 0.4544882944652012], "val_accuracy": [0.5759999752044678, 0.5806666612625122, 0.6836666464805603, 0.721666693687439, 0.7599999904632568, 0.7620000243186951, 0.7493333220481873, 0.7413333058357239, 0.737333357334137, 0.765999972820282, 0.7570000290870667, 0.7720000147819519, 0.765999972820282, 0.7923333048820496, 0.8040000200271606, 0.7823333144187927, 0.8109999895095825, 0.7889999747276306, 0.7823333144187927, 0.8040000200271606, 0.7963333129882812, 0.8073333501815796]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 4, 7, 1, 2, 3, 5, 2, 8, 5, 6, 1, 6, 5, 6, 0, 3, 7, 4, 8, 9, 3, 2, 2, 7, 7, 2, 9], [2, 1, 1, 2, 0, 0, 2, 1, 2, 0, 2, 2, 1, 3, 3, 0, 1], [91, 12, 93, 63, 40, 81, 7, 33, 24], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [65, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10400000214576721, "mapping_values": [1, 5, 5, 2, 3, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3012645611153966, 2.299121994179285, 2.29985588605551, 2.297353716038946, 2.29867725229975, 2.3005532306088683, 2.3006372810465043, 2.301648912523023, 2.301250651118589, 2.301605420200155, 2.3011970929087995, 2.301224127390192, 2.3010280639299263, 2.3008849866449115, 2.301702406302167, 2.3011391057692276], "accuracy": [0.09602430462837219, 0.1022322028875351, 0.11227050423622131, 0.11834631860256195, 0.11094967275857925, 0.10328886657953262, 0.1006472036242485, 0.09576013684272766, 0.09734513610601425, 0.11596883088350296, 0.11398758739233017, 0.11570466309785843, 0.11055342853069305, 0.11161009222269058, 0.11200633645057678, 0.10408136248588562], "val_loss": [1.9689830371311732, 1.9689868518284388, 1.9681573595319475, 1.9686470031738281, 1.9698211124965124, 1.971238613128662, 1.9720057078770228, 1.972271169934954, 1.972219399043492, 1.9723730087280273, 1.9720653806413924, 1.9719254629952567, 1.9721473285130091, 1.9721876553126745, 1.9721424239022392, 1.97227110181536], "val_accuracy": [0.07266666740179062, 0.0976666659116745, 0.12733332812786102, 0.12866666913032532, 0.125, 0.10433333367109299, 0.11800000071525574, 0.10233332961797714, 0.1576666682958603, 0.16233333945274353, 0.17233332991600037, 0.1446666717529297, 0.1589999943971634, 0.13866665959358215, 0.1120000034570694, 0.10466666519641876]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 8, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2118.978276820467, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04213446006178856, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [10234952304932.572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 8, 1, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [77, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [8, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 4, 1, 2, 2, 1, 0, 2, 4, 1, 3, 3], [65, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 5, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [52, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 23, 11, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)))))))))))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.square(alpha), sigma), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 2, 5, 2, 0, 1, 2, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 1, 2, 2, 1, 0, 2, 4, 1, 3, 3], [2, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [7, 8, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 14, 9, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [12573.312857637002, 2.313204103787782, 2.3057725925833528, 2.3036002442348966, 2.303158812566346, 2.302979315717569], "accuracy": [0.09642054885625839, 0.09932637959718704, 0.09840179979801178, 0.09549596905708313, 0.09470347315073013, 0.09760929644107819], "val_loss": [1.9876231466020857, 1.977499076298305, 1.9745995657784599, 1.9738819939749581, 1.9737029756818498, 1.973691804068429], "val_accuracy": [0.10300000011920929, 0.09733333438634872, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 2, 6, 5, 6, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 8, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.negative(tf.math.add(alpha, sigma)), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma))))))", "other_info": {"loss": [2.302546723895715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 2, 4, 5, 5, 1, 6, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [2, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 5, 3, 2, 1, 0, 5, 2, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3643989.2631769916, 69491823.47378154, 320827849.79738474, 889552611.9688284, 1893137974.0673623, 3527700366.3875313], "accuracy": [0.09655263274908066, 0.1026284471154213, 0.09589222073554993, 0.09945846349000931, 0.1002509593963623, 0.1018359512090683], "val_loss": [13589491.714285715, 108482866.28571428, 365871524.5714286, 866940635.4285715, 1692886418.2857144, 2924899474.285714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 8, 1, 7, 1, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 15, 10, 5, 3], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(grad), grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [2, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 6, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), alpha)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 3, 1, 2, 5, 2, 0, 1, 2, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [2, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 2, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(grad), grad))))), tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 4, 1, 2, 2, 1, 0, 2, 4, 1, 3, 3], [6, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302546723895715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [6, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [6, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.square(grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(beta, sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029546226886413, 2.3029975962597917, 2.3031703952186695, 2.3029934774851517, 2.3030284741897593, 2.3029511161310925, 2.3029725750943437, 2.3029966835867945], "accuracy": [0.09021265059709549, 0.09536388516426086, 0.09602430462837219, 0.0956280529499054, 0.09391097724437714, 0.0956280529499054, 0.09074098616838455, 0.09457138925790787], "val_loss": [1.9736932345799036, 1.973743506840297, 1.9736141477312361, 1.9736449377877372, 1.9736379895891463, 1.9736743654523576, 1.973665714263916, 1.973708016531808], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [9, 3, 9, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 8, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [37, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 2, 5, 2, 0, 1, 2, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [6, 95, 54, 66], [0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7, 4], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 3, 2, 9, 0, 8], [0, 2, 0, 1, 3, 0, 2], [40, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302546723895715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 5, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 1, 5, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [71, 63, 57, 12]], "fitness": -0.06714285910129547, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.square(grad))))), grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3022223666139077, 2.3008220385031346, 2.302142410513873, 2.2994893028310672, 2.299863763001018, 2.300512126376679, 2.2988482737160156, 2.299740685353489, 2.299446602035208, 2.2994085091956302, 2.2983199010168036, 2.3000925135508568, 2.2991289112782356, 2.2986229252994748], "accuracy": [0.09338264167308807, 0.09298639744520187, 0.09681680053472519, 0.09259014576673508, 0.09826971590518951, 0.0952318087220192, 0.09932637959718704, 0.09615638852119446, 0.09813763201236725, 0.10196803510189056, 0.10328886657953262, 0.1006472036242485, 0.10051512718200684, 0.10421344637870789], "val_loss": [1.9697388921465193, 1.9692632811410087, 1.9689977509634835, 1.9688993181501115, 1.9688995906284876, 1.9689619200570243, 1.9689838545663017, 1.969017573765346, 1.9689713886805944, 1.969010284968785, 1.9691506113324846, 1.9693080357142858, 1.9697112355913435, 1.9701120512826102], "val_accuracy": [0.045666664838790894, 0.0533333346247673, 0.061000000685453415, 0.06566666811704636, 0.0689999982714653, 0.07199999690055847, 0.07699999958276749, 0.07633333653211594, 0.07766667008399963, 0.07766667008399963, 0.07533333450555801, 0.07500000298023224, 0.07266666740179062, 0.07400000095367432]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 2, 1, 8, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 1, 1, 2, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 0, 1, 7, 5, 5, 5, 2, 0, 2, 7, 2, 7, 5, 9, 8, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 3, 3, 2, 3, 1, 4, 2, 4, 1, 3, 3], [6, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1], [6, 3], [4, 7, 4], [71], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 45, 45, 28, 17, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.square(grad), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad)))))))))))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3026411414949446, 2.302150104842906, 2.3041833642136544, 2.301902464053036, 2.302478856729274, 2.3032712880977155], "accuracy": [0.09298639744520187, 0.08889182657003403, 0.09377889335155487, 0.0870426595211029, 0.09298639744520187, 0.08902391046285629], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 9, 1, 2, 5, 2, 0, 1, 2, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [5, 3, 3, 2, 2, 3, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 1, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, alpha))", "other_info": {"loss": [2.3026411414949446, 2.302150104842906, 2.3041833642136544, 2.301902464053036, 2.302478856729274, 2.3032712880977155], "accuracy": [0.09298639744520187, 0.08889182657003403, 0.09377889335155487, 0.0870426595211029, 0.09298639744520187, 0.08902391046285629], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]