[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7879999876022339, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2573797897718775, 2.061991587102122, 1.638003487896217, 1.2770143320626273, 1.103374489010947, 0.9917476249015121, 0.9305502748949149, 0.8717173365333596, 0.8486190825846406, 0.8177505723316246, 0.8006387059919398, 0.7791743886988822, 0.7627927688969093, 0.7473737405606422, 0.7336806041169963, 0.7338889104547501, 0.7169575226573014, 0.7116337039010588, 0.6839378950082867, 0.6851193619961626, 0.6801795680147231, 0.6755085379818191, 0.6661702567056311, 0.6463132901608023, 0.6559952083926364, 0.6439648018678764, 0.6326145320331668, 0.6409851828932747, 0.6337627817642546, 0.6160488898381581, 0.6202302837667841, 0.619796203308889, 0.599927638240258, 0.5991886530522704, 0.6050268986190173], "accuracy": [0.1912561058998108, 0.3819838762283325, 0.48210275173187256, 0.5675604343414307, 0.6124686598777771, 0.6474705934524536, 0.6686038970947266, 0.6844538450241089, 0.7017567157745361, 0.7087571024894714, 0.7099458575248718, 0.7140403985977173, 0.722229540348053, 0.7321357727050781, 0.7290979027748108, 0.7318716049194336, 0.7403249144554138, 0.7428345084190369, 0.7523444890975952, 0.7523444890975952, 0.7453441023826599, 0.7541936039924622, 0.7541936039924622, 0.7643640041351318, 0.7618544697761536, 0.7618544697761536, 0.7638356685638428, 0.7629110813140869, 0.767401933670044, 0.7703077793121338, 0.7696473598480225, 0.7741381525993347, 0.7798177003860474, 0.7799497842788696, 0.7749306559562683], "val_loss": [1.8515163830348425, 1.518744945526123, 1.0622262954711914, 0.8296713829040527, 0.7261439732142857, 0.6919399499893188, 0.6195728778839111, 0.5962058135441372, 0.5950390611376081, 0.5608890737806048, 0.564598662512643, 0.5446645362036568, 0.5313531160354614, 0.5112991333007812, 0.5194833108357021, 0.49827822617122103, 0.5013754027230399, 0.48704733167375835, 0.47250306606292725, 0.4762051616396223, 0.47674924986703054, 0.47885159083775114, 0.45845387663160053, 0.4658912590571812, 0.4681112425667899, 0.45271594183785574, 0.4467513050351824, 0.45451726232256207, 0.43851869446890696, 0.43415073837552753, 0.45735577174595426, 0.4366168294634138, 0.4459116458892822, 0.42229585136686054, 0.4312753507069179], "val_accuracy": [0.4416666626930237, 0.5533333420753479, 0.6546666622161865, 0.6819999814033508, 0.7053333520889282, 0.7129999995231628, 0.7396666407585144, 0.7586666941642761, 0.7396666407585144, 0.7596666812896729, 0.7580000162124634, 0.7523333430290222, 0.7670000195503235, 0.7850000262260437, 0.7713333368301392, 0.7823333144187927, 0.7743333578109741, 0.7923333048820496, 0.7993333339691162, 0.7913333177566528, 0.793666660785675, 0.7793333530426025, 0.8019999861717224, 0.796999990940094, 0.8009999990463257, 0.8143333196640015, 0.8109999895095825, 0.8016666769981384, 0.8130000233650208, 0.8186666369438171, 0.7883333563804626, 0.8146666884422302, 0.7979999780654907, 0.8186666369438171, 0.8153333067893982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 0, 6, 4, 0, 2, 4], [4, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45, 51, 88, 72]], "fitness": -0.668571412563324, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.1604681565005466, 1.3566445185130125, 0.9030858268433589, 0.8176659508199268, 0.7567311363638416, 0.7052385042277719, 0.6636782383969148, 0.6192615433549207, 0.6011331742308348, 0.5764202622925806, 0.5566634291812744, 0.5445291941168443, 0.5291386053562479, 0.525333258973735, 0.5045338664403162, 0.5104523619420146, 0.48754415066408174, 0.4874665212550923, 0.47248122313743446, 0.4772015137915535, 0.4691529769419427, 0.460859786565073, 0.46591237335787034, 0.4469655725886998, 0.4529739389597795, 0.4740561900822525, 0.472872742540911], "accuracy": [0.26443007588386536, 0.5486725568771362, 0.6687359809875488, 0.6954167485237122, 0.7088891863822937, 0.7347774505615234, 0.7475894689559937, 0.7640998363494873, 0.7778365015983582, 0.7738739848136902, 0.7913089394569397, 0.7930260300636292, 0.8021397590637207, 0.7985734939575195, 0.8096684813499451, 0.8063663840293884, 0.8133667707443237, 0.8108572363853455, 0.8230088353157043, 0.8158763647079468, 0.8245938420295715, 0.8272355198860168, 0.8241975903511047, 0.8241975903511047, 0.8281601071357727, 0.8207634687423706, 0.8265751004219055], "val_loss": [1.2549431664603097, 0.6786979266575405, 0.6064068249293736, 0.5659042937414986, 0.526523300579616, 0.4845578670501709, 0.46402621269226074, 0.4232771566935948, 0.4329290900911604, 0.4008434670312064, 0.40947273799351286, 0.3844371608325413, 0.3876535551888602, 0.3893169675554548, 0.36721227850232807, 0.3707859686442784, 0.3597437994820731, 0.3589126297405788, 0.36327494042260305, 0.36428390230451313, 0.3569229670933315, 0.357541024684906, 0.3485450489180429, 0.35799691506794523, 0.3604296020099095, 0.36447055850710186, 0.37874267782483784], "val_accuracy": [0.5796666741371155, 0.7136666774749756, 0.7206666469573975, 0.7426666617393494, 0.765333354473114, 0.7950000166893005, 0.7853333353996277, 0.8159999847412109, 0.8019999861717224, 0.8226666450500488, 0.8226666450500488, 0.8360000252723694, 0.831333339214325, 0.8386666774749756, 0.8413333296775818, 0.8503333330154419, 0.8526666760444641, 0.8566666841506958, 0.8479999899864197, 0.8446666598320007, 0.8546666502952576, 0.8579999804496765, 0.8550000190734863, 0.8543333411216736, 0.8536666631698608, 0.8556666374206543, 0.8550000190734863]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0, 3], [66, 55, 63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 58, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302540268234809, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [97, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 4, 6, 2, 5, 4, 0, 5, 0, 8, 1, 6, 1, 6, 0, 4, 5, 2, 3, 0, 4, 0], [2, 0, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 8, 7, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.pow(beta, tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 2, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0, 0], [11, 45, 67], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [3, 7, 4, 5, 2, 2, 8, 0, 4, 0, 8, 1, 0, 1, 6, 0, 0, 5, 2, 3, 0, 4, 0], [0, 2, 3, 0, 1, 0, 2, 1, 0, 0, 3, 0, 3, 3, 0], [2, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 21, 13, 8, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.add(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(beta, sigma))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.subtract(tf.math.negative(beta), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 8, 9, 0, 6, 4, 0, 2, 4], [4, 0, 0, 2], [11, 45, 63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [68, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302540268234809, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 3, 0, 6, 4, 0, 2, 4, 5, 4, 6, 7, 5], [2, 0, 0, 0, 1, 2, 0, 2, 3, 4, 3], [42, 45, 48, 56], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [60, 19, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302540268234809, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [8, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [2, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [8, 7, 2, 0, 6, 4, 0, 2, 4], [5, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [164368.9102495423, 3125122.561022322, 14492433.769383173, 39447681.06828688, 86256542.3516048, 156966420.5669], "accuracy": [0.09681680053472519, 0.10038304328918457, 0.09998679161071777, 0.10130762308835983, 0.1006472036242485, 0.10513802617788315], "val_loss": [612721.6607142857, 4870734.857142857, 16405052.0, 38846732.571428575, 75826900.57142857, 130976882.28571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 1, 0], [96, 60, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 3, 0, 0, 3, 0, 2], [35, 58, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [55, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 7, 2, 0, 6, 4, 0, 2, 4], [4, 3, 0, 2, 3], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [3, 7, 4, 5, 2, 5, 8, 0, 4, 0, 8, 1, 0, 1, 6, 0, 0, 5, 2, 3, 0, 4, 0], [3, 1, 0, 0, 3, 0, 2], [95, 63, 98, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), beta))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1189974411.8808937, 22865418826.186237, 106358288930.96289, 289887219579.45215, 634343700630.1307, 1154900376926.9814], "accuracy": [0.09681680053472519, 0.10038304328918457, 0.09998679161071777, 0.10130762308835983, 0.1006472036242485, 0.10513802617788315], "val_loss": [4464626980.571428, 35706215277.71429, 120496460361.14285, 285605990985.1429, 557810506605.7142, 963879857590.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [42, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302540268234809, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0, 0], [78, 45, 51], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 3, 2, 6, 2, 5, 0, 4, 2, 0, 8, 5, 0, 3, 4, 4, 2, 1, 9, 7, 5, 7, 4, 8, 7, 4, 1, 5, 4, 7, 6, 3, 9, 0, 5, 9, 6, 4], [3, 1, 1, 2, 3, 0, 2], [26, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(alpha)), tf.math.negative(beta))), sigma), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 5, 2, 5, 3, 2, 9, 4, 0], [0, 1, 1, 0], [0, 12, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [8, 7, 2, 0, 6, 4, 0, 2, 4], [3, 5, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 2, 0, 2], [97, 63, 56, 45, 51, 88, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 4, 0, 6, 4, 0, 2, 4], [2, 5, 0, 5, 1], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [1, 3], [6, 7], [71], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 8, 4, 5, 2, 7, 8, 0, 4, 0, 8, 1, 0, 1, 6, 0, 0, 5, 2, 3, 0, 4, 0], [0, 1, 0, 3, 3, 0, 2, 1, 0, 0, 3, 0, 3, 3, 0], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 3, 1, 1, 0, 0, 7, 4, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad))))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025399266831106, 2.3025874859463853, 2.3025830459002696, 2.3025874708936733, 2.302584792424218, 2.3025825900991186, 2.3025904049128276, 2.3025845684915125, 2.3025831312409575, 2.302587672593713, 2.3025911583042005, 2.3025853183873815, 2.3025851611211836], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.10210011899471283, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.1002509593963623, 0.1002509593963623, 0.09998679161071777, 0.09919429570436478, 0.09826971590518951, 0.1010434553027153], "val_loss": [1.9736465045383997, 1.97364684513637, 1.9736494336809431, 1.973646981375558, 1.9736535208565849, 1.9736546107700892, 1.9736550876072474, 1.9736518178667342, 1.973653861454555, 1.9736506598336356, 1.9736427579607283, 1.9736426217215401, 1.9736484118870325], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.10000000149011612, 0.10000000149011612, 0.09666666388511658, 0.09666666388511658, 0.09733333438634872, 0.10366666316986084, 0.09733333438634872, 0.10000000149011612, 0.10366666316986084, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [44, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 4, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3023970689535487, 2.30172915673448, 2.302910521738659, 2.3016731274551514, 2.3040392577703273, 2.3019328266638084], "accuracy": [0.08175934851169586, 0.09126931428909302, 0.09113723784685135, 0.09509972482919693, 0.08902391046285629, 0.09206181764602661], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023970689535487, 2.30172915673448, 2.302910521738659, 2.3016731274551514, 2.3040392577703273, 2.3019328266638084], "accuracy": [0.08175934851169586, 0.09126931428909302, 0.09113723784685135, 0.09509972482919693, 0.08902391046285629, 0.09206181764602661], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [8, 2, 5, 6, 2, 0, 5, 2, 5, 3, 2, 9, 4, 0], [0, 2, 0, 0, 0, 1, 2], [96, 66, 93, 61, 49], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [5, 7, 2, 0, 6, 4, 0, 2, 4], [3, 5, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 2, 0, 2], [21, 63, 56, 45, 51, 88, 72]], "fitness": -0.037142857909202576, "mapping_values": [1, 9, 9, 5, 4, 3, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.30239845436987, 2.3017331873027485, 2.3029177190132932, 2.3016813687833544, 2.3040520829956654, 2.3019460606112094], "accuracy": [0.08175934851169586, 0.09126931428909302, 0.09113723784685135, 0.0948355570435524, 0.08902391046285629, 0.09206181764602661], "val_loss": [1.9703873906816756, 1.9703890936715263, 1.970391001020159, 1.9703916822160994, 1.970393521445138, 1.9703950200762068], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3023970689535487, 2.30172915673448, 2.302910521738659, 2.3016731274551514, 2.3040392577703273, 2.3019328266638084], "accuracy": [0.08175934851169586, 0.09126931428909302, 0.09113723784685135, 0.09509972482919693, 0.08902391046285629, 0.09206181764602661], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3023970689535487, 2.30172915673448, 2.302910521738659, 2.3016731274551514, 2.3040392577703273, 2.3019328266638084], "accuracy": [0.08175934851169586, 0.09126931428909302, 0.09113723784685135, 0.09509972482919693, 0.08902391046285629, 0.09206181764602661], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]