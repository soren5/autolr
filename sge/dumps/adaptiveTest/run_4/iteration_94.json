[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))), tf.math.negative(alpha)))", "other_info": {"loss": [2.1033154873878823, 1.4014084811822187, 1.1628191107614654, 0.9733252891963893, 0.8751692259473854, 0.8103139478816112, 0.8149515562022225, 0.80316851697562, 0.7614208995910163, 0.7704310717127343, 0.7473492590727004, 0.7824109578649082, 0.7065378793588704, 0.691329364897222, 0.7218649948451025, 0.6467605491025242, 0.8033472399244912, 0.7051654562281264, 0.748751276842497, 0.6255107169153825, 115291290.28079864], "accuracy": [0.3159424066543579, 0.5202747583389282, 0.5845991373062134, 0.6464139223098755, 0.6775855422019958, 0.700700044631958, 0.7020208835601807, 0.6988508701324463, 0.7112666964530945, 0.7166820764541626, 0.7243428826332092, 0.7120591998100281, 0.7474573850631714, 0.7409853339195251, 0.7302865982055664, 0.76106196641922, 0.72672039270401, 0.7409853339195251, 0.7323999404907227, 0.7676661014556885, 0.3222824037075043], "val_loss": [1.1916121074131556, 1.0797171933310372, 0.7397686924253192, 0.6804805653435844, 0.6006749527794975, 0.582367079598563, 0.6463008948734829, 0.5877580983298165, 0.5844345092773438, 0.5197502034051078, 0.5351131132670811, 0.6157915251595634, 0.47709597860063824, 0.5338518449238369, 0.4809038128171648, 0.4381903239658901, 0.5270321539470127, 0.47874840668269564, 0.48560052258627756, 0.530383859361921, 2.313428061349051], "val_accuracy": [0.6213333606719971, 0.5413333177566528, 0.652999997138977, 0.7053333520889282, 0.7423333525657654, 0.746999979019165, 0.715666651725769, 0.737333357334137, 0.7363333106040955, 0.7586666941642761, 0.7549999952316284, 0.7493333220481873, 0.7990000247955322, 0.7556666731834412, 0.7753333449363708, 0.8176666498184204, 0.7796666622161865, 0.7749999761581421, 0.7796666622161865, 0.79666668176651, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 9, 4, 0, 8], [1, 0, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [96], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 8, 0, 6, 2, 2, 0, 0, 4, 0, 8, 0, 0, 5, 5, 1], [2, 0, 3, 2, 1, 0, 2], [40, 32, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(beta), tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [50], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [9, 1, 0, 6, 2, 5, 6, 9, 4, 0, 8], [0, 0, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302755225997449, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 1, 0, 2], [2, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [35824946187.55533, 4.15532662031617e+17, 1.7589642337996112e+25, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.10368511080741882, 0.09985470771789551, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [6, 1, 0, 5, 2, 6, 6, 2, 4, 0, 8, 0, 3, 9, 2, 4, 0], [2, 0, 0, 2, 1, 0, 2, 3, 0, 2], [30, 18, 56, 45, 86]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 27, 17, 10, 5], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.negative(tf.math.square(tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.negative(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta)), alpha)), tf.math.negative(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, sigma)))), tf.math.pow(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 6, 2, 2, 0, 0, 4, 0, 8], [0, 0, 2, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta)), beta)), tf.math.negative(alpha)))", "other_info": {"loss": [2.302754438721729, 2.3025819769058056, 2.302586917564806, 2.3025853140101282, 2.30258374594584, 2.302585714922416, 2.3025834809488326], "accuracy": [0.09932637959718704, 0.09826971590518951, 0.10011887550354004, 0.10130762308835983, 0.10381719470024109, 0.09998679161071777, 0.10011887550354004], "val_loss": [1.973642417362758, 1.9736461639404297, 1.9736481394086565, 1.973649365561349, 1.9736528396606445, 1.9736504554748535, 1.9736490930829729], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.09666666388511658, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [3, 1, 6, 6, 2, 5, 6, 9, 4, 0, 8, 0, 5, 8, 3, 3], [0, 0, 2, 2, 1, 0, 2, 1, 1], [30, 63, 22, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 25, 16, 9, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.divide_no_nan(beta, beta)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.negative(alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.multiply(beta, alpha), alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 4, 2, 5, 0, 0, 4, 0, 8], [2, 0, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1], [0, 0, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [96], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 7, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 3, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302755225997449, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [3, 1, 7, 6, 2, 5, 6, 9, 5, 0, 8, 2, 7, 3, 4, 5, 1, 0, 3, 8, 8], [2, 0, 3, 0, 2, 0, 2, 2, 1, 3, 0, 3, 2, 3, 1, 2], [40, 63, 22, 45, 16, 14]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 4, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [3871.6150181240896, 1524744.6970595033, 59704638.21212521, 793081843.9455818, 6020758874.247523, 31226852030.77427], "accuracy": [0.10421344637870789, 0.09813763201236725, 0.09813763201236725, 0.10276053100824356, 0.1006472036242485, 0.10368511080741882], "val_loss": [40006.888392857145, 6150208.428571428, 144925124.57142857, 1474192457.142857, 9254674724.571428, 42409362578.28571], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 6, 0, 9, 4, 0, 8], [1, 0, 3, 3, 1, 0, 2], [40, 93, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(sigma, sigma), tf.math.negative(alpha))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 9, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 2, 2, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [276916805924.3195, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05732399970293045, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [6, 1, 0, 6, 2, 2, 0, 0, 4, 0, 8], [1, 0, 0, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302336542723815, 2.3190787059913425, 17572.882194963193, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.07766477018594742, 0.08770307898521423, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973417009626116, 1.9924748284476144, 2.9401183810659774e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02133333310484886, 0.06366666406393051, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 1, 0, 0, 4, 0, 8], [1, 0, 0, 2, 1, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 6, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta))), tf.math.subtract(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [63, 12, 93], [0, 0], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1039208369.5120689, 19768382933.192444, 92755734748.19179, 254161064029.59503, 543071247225.15283, 991080716250.9407], "accuracy": [0.10474177449941635, 0.09813763201236725, 0.09800554811954498, 0.1026284471154213, 0.10077928751707077, 0.10368511080741882], "val_loss": [3837796498.285714, 30692625846.857143, 103576614619.42857, 245502836736.0, 479481327030.8571, 828520717165.7142], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 1, 2, 6, 4, 2, 0, 0, 4, 0, 8, 0, 0, 5, 0, 1, 7, 4, 7, 7, 1, 7, 7, 5, 4], [1, 2, 3, 2, 1, 0, 2, 1, 3, 1, 1, 1, 2, 0, 0, 2, 2], [82, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 42, 25, 17, 3], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(sigma, tf.math.pow(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(alpha)), tf.math.negative(tf.math.negative(tf.math.square(tf.math.negative(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(beta, alpha)))), tf.math.add(tf.math.pow(tf.math.add(sigma, alpha), alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))), beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 2, 1, 5, 0, 0, 4, 0, 8], [1, 0, 2, 2, 1, 0, 2], [30, 18, 56, 45]], "fitness": -0.06971428543329239, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 5, 5, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), beta)), tf.math.subtract(beta, alpha))", "other_info": {"loss": [2.3223613649075294, 2.325688670576209, 2.3036844517497843, 2.3031826594943117, 2.3067262651992433, 2.3523082883366504, 2.8611521467383447, 5.245506941571511, 11.28326782042151, 23.124103613659344, 42.799513401025955], "accuracy": [0.06168273836374283, 0.026416590437293053, 0.07713644206523895, 0.10117553919553757, 0.1002509593963623, 0.09192973375320435, 0.10606260597705841, 0.09998679161071777, 0.09470347315073013, 0.10236428678035736, 0.09813763201236725], "val_loss": [2.01554959160941, 1.9754788534981864, 1.9740161895751953, 1.9751363481794084, 1.9851130076817103, 2.1340639931815013, 3.2649199622017995, 6.9332316262381415, 14.888136727469307, 28.71710205078125, 50.09541865757534], "val_accuracy": [0.00800000037997961, 0.04399999976158142, 0.1003333330154419, 0.10000000149011612, 0.09033333510160446, 0.11100000143051147, 0.0963333323597908, 0.10000000149011612, 0.10300000011920929, 0.10000000149011612, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1], [3, 1, 0, 6, 2, 2, 0, 0, 4, 0, 0, 0, 0, 5, 5, 1], [1, 0, 3, 0, 1, 0, 2, 3], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 20, 13, 7, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.add(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), alpha))), tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))))))", "other_info": {"loss": [2.301122584882713, 2.303945081014486, 2.304617279036611, 2.302254423536503, 2.3040894937395593, 2.303047909130116], "accuracy": [0.09457138925790787, 0.08875974267721176, 0.08875974267721176, 0.09113723784685135, 0.08545766770839691, 0.08981640636920929], "val_loss": [1.9704536029270716, 1.9705852781023299, 1.9707343918936593, 1.9708266258239746, 1.9709688595363073, 1.9711154529026575], "val_accuracy": [0.035999998450279236, 0.03433333337306976, 0.03400000184774399, 0.03400000184774399, 0.03233333304524422, 0.03099999949336052]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 2, 0, 0, 4, 0, 8], [1, 0, 3, 3, 1, 0, 2], [40, 63, 22, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.301122553391684, 2.303945018032428, 2.3046173420186684, 2.3022544865185606, 2.3040894307575015, 2.303047909130116], "accuracy": [0.09457138925790787, 0.08875974267721176, 0.08875974267721176, 0.09113723784685135, 0.08545766770839691, 0.08981640636920929], "val_loss": [1.9704535348074776, 1.9705852781023299, 1.9707344600132533, 1.9708266258239746, 1.9709688595363073, 1.9711154529026575], "val_accuracy": [0.035999998450279236, 0.03433333337306976, 0.03400000184774399, 0.03400000184774399, 0.03233333304524422, 0.03099999949336052]}}]