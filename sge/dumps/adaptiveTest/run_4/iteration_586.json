[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.8202857375144958, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0383909814912946, 1.3819134499276902, 1.0095513090717636, 0.9059642520972435, 0.8039774599092323, 0.761681218480138, 0.7667372237894403, 0.6964911688367657, 0.7106950538206598, 0.670222871055724, 0.6468952134411018, 0.6446053210959348, 0.6141632548208014, 0.6057299415921302, 0.6313481617046306, 0.5774312305995234, 0.5769911171611841, 0.5774990131889336, 0.5781259715297298, 0.5472984209414629, 0.553129218675205, 0.5329889078984849, 0.542963016522858, 0.5304349751567576, 0.5330502885900484, 0.5100020319676087, 0.4986982790313109, 0.5184241122872586, 0.4907094410476337, 0.4788184084747099, 0.47960068659618027, 0.46287649299143924, 0.4742475026996302, 0.4589669966521343, 0.4495624818105613, 0.45385918216446464, 0.45457701699734676, 0.45492841376762, 0.4321022610921964], "accuracy": [0.3255844712257385, 0.5262184739112854, 0.635979413986206, 0.6645092964172363, 0.6939638257026672, 0.7091533541679382, 0.7121912837028503, 0.7343811988830566, 0.7250033020973206, 0.7427024245262146, 0.752740740776062, 0.7504953145980835, 0.7609298825263977, 0.7683265209197998, 0.7574957013130188, 0.7828556299209595, 0.7779685854911804, 0.7802139520645142, 0.774798572063446, 0.7864218950271606, 0.7895918488502502, 0.7924976944923401, 0.798309326171875, 0.7930260300636292, 0.7901201844215393, 0.8094043135643005, 0.8125742673873901, 0.8030643463134766, 0.8148196935653687, 0.8216879963874817, 0.8144234418869019, 0.824329674243927, 0.8211596608161926, 0.8274996876716614, 0.8309338092803955, 0.8251221776008606, 0.8252542614936829, 0.8248580098152161, 0.8396512866020203], "val_loss": [1.1563006809779577, 0.7845393759863717, 0.9078568390437535, 0.5974183593477521, 0.6072356530598232, 0.5488686902182442, 0.5216105665479388, 0.5444556815283639, 0.5138121502740043, 0.5098433664866856, 0.5247875792639596, 0.47162277357918875, 0.4765514646257673, 0.47642442158290316, 0.44824894836970736, 0.45360309737069265, 0.445885854107993, 0.4319070407322475, 0.43814682960510254, 0.4526678664343698, 0.4136820520673479, 0.41815891436168123, 0.43646417345319477, 0.4115917682647705, 0.4279776471001761, 0.3949747511318752, 0.4364116532461984, 0.38973885774612427, 0.3911192331995283, 0.3902838570731027, 0.3738179462296622, 0.415639911379133, 0.3683083823748997, 0.3589440243584769, 0.365424496786935, 0.3747689127922058, 0.3800693665231977, 0.356553316116333, 0.36581248896462576], "val_accuracy": [0.5773333311080933, 0.6566666960716248, 0.5550000071525574, 0.7253333330154419, 0.7026666402816772, 0.7586666941642761, 0.7706666588783264, 0.7433333396911621, 0.7616666555404663, 0.7756666541099548, 0.750333309173584, 0.79666668176651, 0.7829999923706055, 0.7906666398048401, 0.8026666641235352, 0.8053333163261414, 0.7870000004768372, 0.8090000152587891, 0.8053333163261414, 0.7823333144187927, 0.8176666498184204, 0.82833331823349, 0.8056666851043701, 0.8303333520889282, 0.8146666884422302, 0.8323333263397217, 0.7860000133514404, 0.8356666564941406, 0.8243333101272583, 0.8356666564941406, 0.8460000157356262, 0.8143333196640015, 0.847000002861023, 0.8553333282470703, 0.8426666855812073, 0.846666693687439, 0.8363333344459534, 0.8506666421890259, 0.8426666855812073]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 18, 93, 89, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.7971428632736206, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0285676175167753, 1.4407216916073582, 1.0221794008689078, 0.9204836031622529, 0.8029445297430535, 0.8050474705177764, 0.7535894004235163, 0.7387737583773971, 0.704099671660539, 0.6943916745425813, 0.6873326780002162, 0.6618321619218351, 0.6495960878343346, 0.6143009912509487, 0.612866283297586, 0.6180841933388233, 0.5816861745026669, 0.56697077193611, 0.5771877463262913, 0.5564534970168126, 0.5860516081837583, 0.5617924370801586], "accuracy": [0.33562275767326355, 0.4979526996612549, 0.6269977688789368, 0.6616035103797913, 0.7022850513458252, 0.6983225345611572, 0.7220974564552307, 0.7238145470619202, 0.7320036888122559, 0.7392682433128357, 0.7382115721702576, 0.7449478507041931, 0.7600052952766418, 0.7647602558135986, 0.7696473598480225, 0.7691190242767334, 0.7708360552787781, 0.7843085527420044, 0.7796856164932251, 0.7903843522071838, 0.7794214487075806, 0.7882710099220276], "val_loss": [1.3408091408865792, 0.8354388645717076, 0.701855046408517, 0.6012775387082782, 0.6316829749516079, 0.6150966882705688, 0.5655239139284406, 0.5365072999681745, 0.5043188503810337, 0.48813349860055105, 0.4717226709638323, 0.47624896253858295, 0.46148645877838135, 0.4446709156036377, 0.44476570401872906, 0.43231617552893503, 0.4257562501089914, 0.42046330656324116, 0.4412893567766462, 0.41547733545303345, 0.4236353635787964, 0.41609099933079313], "val_accuracy": [0.48633334040641785, 0.6736666560173035, 0.684333324432373, 0.7409999966621399, 0.7173333168029785, 0.7279999852180481, 0.7323333621025085, 0.7616666555404663, 0.7786666750907898, 0.7866666913032532, 0.7929999828338623, 0.7889999747276306, 0.7963333129882812, 0.8090000152587891, 0.8086666464805603, 0.8169999718666077, 0.8233333230018616, 0.8146666884422302, 0.796999990940094, 0.8186666369438171, 0.8130000233650208, 0.8096666932106018]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 1, 0, 3, 0, 2], [90, 51, 44, 12, 41, 16, 52]], "fitness": -0.6674285531044006, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), alpha)", "other_info": {"loss": [2.3012761945942404, 2.3017981473748645, 2.30098763105498, 2.3000055256615446, 2.2990966762108904, 2.296263202054547, 2.295376231153612, 2.2918495403194568, 2.2901610380874855, 2.289865367148987, 2.2880222378248205, 2.2860862903307773, 2.285763055641165, 2.2842355498138938, 2.279815620954688, 2.280280931042233, 2.277964393964391, 2.275465469098346, 2.274215772875926, 2.2736982200848286, 2.269280083883928, 2.266656321809119, 2.265300460101717, 2.2618830430430505, 2.258446590381764, 2.2558548893233836, 2.25202826949127, 2.2490202571895095, 2.241751857516221, 2.235676877581448, 2.227411834807239, 2.216767266725332, 2.2084882468469327, 2.190708888756396, 2.17407415606295, 2.1448336047519074, 2.1130837655385504, 2.060675458192605, 1.9791459067150303, 1.8584412478374028, 1.7311807935264023, 1.5988593821386383, 1.47132384345642, 1.4122441672472639, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09338264167308807, 0.09113723784685135, 0.09826971590518951, 0.09826971590518951, 0.09985470771789551, 0.10474177449941635, 0.108440101146698, 0.12296922504901886, 0.1254788041114807, 0.12138422578573227, 0.12323339283466339, 0.13181878626346588, 0.13670584559440613, 0.13234710693359375, 0.14674416184425354, 0.14898955821990967, 0.15572579205036163, 0.15440496802330017, 0.16114120185375214, 0.16140536963939667, 0.1686699241399765, 0.1784440577030182, 0.17791573703289032, 0.18755778670310974, 0.19310526549816132, 0.19336943328380585, 0.19323734939098358, 0.1950865089893341, 0.20591731369495392, 0.22203142940998077, 0.22454100847244263, 0.23286223411560059, 0.23418307304382324, 0.24620261788368225, 0.25558051466941833, 0.270109623670578, 0.2785629332065582, 0.311319500207901, 0.3358869254589081, 0.3737947344779968, 0.40285298228263855, 0.4290054142475128, 0.46427157521247864, 0.47629112005233765, 0.33984941244125366, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700517654418945, 1.9692531994410925, 1.9680212565830775, 1.9667010307312012, 1.9651885713849748, 1.963724000113351, 1.9621971675327845, 1.9605128424508231, 1.9589168684823173, 1.95726592200143, 1.955758912222726, 1.9542406627110072, 1.952814715249198, 1.9513383592878069, 1.9498034885951452, 1.9481351716177804, 1.9463930811200822, 1.9445251056126185, 1.9425280434744698, 1.9405732154846191, 1.9382899148123605, 1.9359265054975237, 1.9332103729248047, 1.930266993386405, 1.9269208908081055, 1.923095771244594, 1.9187633650643485, 1.9138450622558594, 1.907815796988351, 1.9007390567234583, 1.8922408648899622, 1.8811776297433036, 1.8678573199680872, 1.85024813243321, 1.826622554234096, 1.7924323081970215, 1.7447198459080286, 1.6706607341766357, 1.5584829875401087, 1.3950655119759696, 1.233928952898298, 1.0883207321166992, 0.9853518009185791, 0.9012056418827602, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03866666555404663, 0.045666664838790894, 0.05299999937415123, 0.06266666948795319, 0.07833333313465118, 0.09366666525602341, 0.10633333027362823, 0.11800000071525574, 0.12933333218097687, 0.1446666717529297, 0.15566666424274445, 0.16866666078567505, 0.17633333802223206, 0.18299999833106995, 0.19166666269302368, 0.20266667008399963, 0.2163333296775818, 0.22766666114330292, 0.23999999463558197, 0.24633333086967468, 0.25699999928474426, 0.26866665482521057, 0.27799999713897705, 0.29233333468437195, 0.30566665530204773, 0.31700000166893005, 0.3386666774749756, 0.35333332419395447, 0.37299999594688416, 0.38499999046325684, 0.3943333327770233, 0.4046666622161865, 0.4099999964237213, 0.4156666696071625, 0.4246666729450226, 0.4363333284854889, 0.45500001311302185, 0.484333336353302, 0.5226666927337646, 0.5546666383743286, 0.5803333520889282, 0.6036666631698608, 0.6193333268165588, 0.6693333387374878, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 5, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 0, 1, 0, 3, 0, 2], [65, 42, 44, 12, 41, 16, 52]], "fitness": -0.4211428463459015, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4891005933182413, 2.2709923401453302, 2.3045138729530286, 2.302898925167301, 2.302763000187731, 2.299664960199139], "accuracy": [0.23973055183887482, 0.17461365461349487, 0.10077928751707077, 0.09536388516426086, 0.09840179979801178, 0.10751552134752274], "val_loss": [1.490436656134469, 1.9761383874075753, 1.9739255905151367, 1.9735639435904366, 1.9727130617414201, 1.9557231494358607], "val_accuracy": [0.4269999861717224, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [88, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [5, 3], [2, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 5, 8, 5, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [19, 42, 44, 12, 41, 16, 52]], "fitness": -0.4194285571575165, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30104088717133, 2.3013552997122035, 2.300855687297236, 2.300454658209262, 2.3001597783883896, 2.298225172853048, 2.2979965907487228, 2.295849469863444, 2.2948321921084425, 2.295711802957616, 2.29441466039875, 2.293591448439111, 2.2938997349671686, 2.293485909090255, 2.289577339524055, 2.2912190640056136, 2.2895860196797444, 2.2886223621403676, 2.288146218383128, 2.288419746467702, 2.2856736257170422, 2.2845012784838725, 2.2852749996150035, 2.283367643266889, 2.2830658779955497, 2.282898422686368, 2.281512794115477, 2.2823426178685424, 2.280389739285843, 2.2803863619989677, 2.278882574112408, 2.2771284246740717, 2.278626582500028, 2.2758977809964454, 2.276228356055926, 2.275104474429331, 2.27484165172, 2.2733117287673212, 2.2726956543401564, 2.2722053937530315, 2.272308216276359, 2.271742415765116, 2.268940011571033, 2.269959463624119, 2.267976424414106, 2.2662515525631446, 2.266360022561614, 2.264172568029621, 2.263887481320378, 2.2614640683829275, 2.2628880888636966, 2.2616236887871235, 2.261021057817174, 2.2608538788732617, 2.2596625275285, 2.257941354519309, 2.259138669288705, 2.257887988814179, 2.2564978341321904, 2.2555176803952652, 2.2546314900309703, 2.253310251544574, 2.2536800667247943, 2.2508268873091026, 2.2504841496270203, 2.248190610195589, 2.248980116614293, 2.247234346434866, 2.246586806329171, 2.245797589407495, 2.244310006017084, 2.2436603265683477, 2.243013658701169, 2.2413283045643655, 2.2396854429732476, 2.241393324500928, 2.2381198496913646, 2.2383011830024686, 2.2373898752676324, 2.235469408794842, 2.2355481524902676, 2.2351727705149207, 2.233012042859951, 2.2327361550266245, 2.2313808732895, 2.2311115642470014, 2.2279268527909544, 2.225590535410643, 2.227257550148491, 2.226872364606493, 2.224106376638124, 2.2232803390514517, 2.2226005868983543, 2.2185299539799073, 2.218911494687249, 2.218619332006815, 2.2181533002078715, 2.215390110343376, 2.21544517253321, 2.213761744954567], "accuracy": [0.09391097724437714, 0.09140139818191528, 0.09721305221319199, 0.09496764093637466, 0.09642054885625839, 0.1022322028875351, 0.09919429570436478, 0.10962884873151779, 0.11266675591468811, 0.10408136248588562, 0.10434553027153015, 0.11438383162021637, 0.11411966383457184, 0.10857218503952026, 0.11887465417385101, 0.12059172987937927, 0.12574297189712524, 0.12310130894184113, 0.1290450394153595, 0.13195087015628815, 0.13380002975463867, 0.1372341811656952, 0.13498876988887787, 0.1422533392906189, 0.1410645842552185, 0.14040417969226837, 0.14093250036239624, 0.13221503794193268, 0.14714039862155914, 0.15229164063930511, 0.15017831325531006, 0.1534803807735443, 0.15651829540729523, 0.16074495017528534, 0.1578391194343567, 0.160084530711174, 0.16166952252388, 0.16642451286315918, 0.17091533541679382, 0.16999074816703796, 0.17197199165821075, 0.17263241112232208, 0.1846519559621811, 0.1764628142118454, 0.189274862408638, 0.189274862408638, 0.18742570281028748, 0.19376568496227264, 0.19112402200698853, 0.19812442362308502, 0.19614318013191223, 0.2024831622838974, 0.201294407248497, 0.1978602558374405, 0.2036719024181366, 0.20657773315906525, 0.2032756507396698, 0.2094835489988327, 0.2106723040342331, 0.21212521195411682, 0.21344605088233948, 0.21872936189174652, 0.21740853786468506, 0.22335226833820343, 0.22718267142772675, 0.23339056968688965, 0.22837141156196594, 0.23840972781181335, 0.2316734939813614, 0.23074890673160553, 0.23933430016040802, 0.2417117953300476, 0.24382512271404266, 0.24065512418746948, 0.2499009370803833, 0.2448817789554596, 0.2509576082229614, 0.2537313401699066, 0.25280675292015076, 0.2533350884914398, 0.2546559274196625, 0.2499009370803833, 0.26561880111694336, 0.2666754722595215, 0.2642979919910431, 0.2645621597766876, 0.2748646140098572, 0.2724871337413788, 0.2747325301170349, 0.26997753977775574, 0.2759212851524353, 0.27301543951034546, 0.27684587240219116, 0.2849029302597046, 0.2852991819381714, 0.28278958797454834, 0.2876766622066498, 0.2849029302597046, 0.28899750113487244, 0.28978997468948364], "val_loss": [1.969632284981864, 1.9688848086765833, 1.9681385585239954, 1.9673988478524345, 1.9666574341910226, 1.9659261022295271, 1.965182100023542, 1.9644477026803153, 1.9637280872889928, 1.9630030223301478, 1.9622752325875419, 1.9615437643868583, 1.9608165196010046, 1.960092272077288, 1.9593610763549805, 1.9586363519941057, 1.9579035895211356, 1.9571725981576102, 1.9564417430332728, 1.9557185173034668, 1.9549931798662459, 1.9542761530194963, 1.9535455022539412, 1.9528166225978307, 1.9520908083234514, 1.9513579096112932, 1.9506299836294991, 1.9498987197875977, 1.9491656167166573, 1.948427949632917, 1.947688443320138, 1.9469445773533411, 1.946206501552037, 1.9454571860177177, 1.944706576211112, 1.943955421447754, 1.9432099887302943, 1.9424660546439034, 1.9417145592825753, 1.9409568650381905, 1.9402038710457938, 1.9394550323486328, 1.938697678702218, 1.937934398651123, 1.9371604238237654, 1.9363814762660436, 1.9356113842555456, 1.9348352296011788, 1.934048857007708, 1.9332644598824638, 1.9324660982404436, 1.9316716194152832, 1.9308740070887975, 1.930072443825858, 1.9292636598859514, 1.9284460885184151, 1.9276413236345564, 1.9268254552568709, 1.9260072026933943, 1.925182478768485, 1.9243457657950265, 1.9235197475978307, 1.9226742471967424, 1.9218131474086217, 1.9209577696663993, 1.920097827911377, 1.919234275817871, 1.918358530317034, 1.9174837384905135, 1.9166066987173898, 1.9157189641680037, 1.9148283004760742, 1.9139299392700195, 1.9130185672215052, 1.912100178854806, 1.9111958231244768, 1.910264560154506, 1.9093396323067802, 1.9084006718226842, 1.9074510165623255, 1.9064997945513045, 1.9055430548531669, 1.9045636313302177, 1.9035852296011788, 1.9025983810424805, 1.9016144616263253, 1.9006056785583496, 1.8995819772992815, 1.898566586630685, 1.8975382532392229, 1.896501132420131, 1.8954618317740304, 1.8944050925118583, 1.8933397701808385, 1.8922598021371024, 1.8911878040858678, 1.8901072229657854, 1.8890090669904436, 1.8879053252083915, 1.8867782865251814], "val_accuracy": [0.04233333468437195, 0.04699999839067459, 0.052666667848825455, 0.059333331882953644, 0.06499999761581421, 0.0689999982714653, 0.07633333653211594, 0.0833333358168602, 0.08733333647251129, 0.09300000220537186, 0.09666666388511658, 0.10400000214576721, 0.10966666787862778, 0.11800000071525574, 0.12533333897590637, 0.13066667318344116, 0.1379999965429306, 0.14766666293144226, 0.15666666626930237, 0.16766667366027832, 0.17666666209697723, 0.18299999833106995, 0.18766666948795319, 0.195333331823349, 0.20000000298023224, 0.20633333921432495, 0.21466666460037231, 0.21933333575725555, 0.22633333504199982, 0.23366667330265045, 0.24166665971279144, 0.24666666984558105, 0.2529999911785126, 0.25866666436195374, 0.2643333375453949, 0.26733332872390747, 0.2750000059604645, 0.28200000524520874, 0.28700000047683716, 0.29100000858306885, 0.29733332991600037, 0.30133333802223206, 0.30666667222976685, 0.3100000023841858, 0.31333333253860474, 0.31566667556762695, 0.32100000977516174, 0.3256666660308838, 0.328000009059906, 0.3330000042915344, 0.33666667342185974, 0.3413333296775818, 0.3449999988079071, 0.34700000286102295, 0.3490000069141388, 0.35199999809265137, 0.35600000619888306, 0.36000001430511475, 0.3619999885559082, 0.3636666536331177, 0.36766666173934937, 0.36933332681655884, 0.3720000088214874, 0.37299999594688416, 0.375, 0.3766666650772095, 0.3790000081062317, 0.3803333342075348, 0.382999986410141, 0.38366666436195374, 0.38600000739097595, 0.3876666724681854, 0.38966667652130127, 0.38999998569488525, 0.3916666805744171, 0.3919999897480011, 0.3930000066757202, 0.39366665482521057, 0.3959999978542328, 0.3973333239555359, 0.39800000190734863, 0.3986666798591614, 0.3996666669845581, 0.40166667103767395, 0.4033333361148834, 0.40566667914390564, 0.406333327293396, 0.4090000092983246, 0.41200000047683716, 0.41366666555404663, 0.41466665267944336, 0.41499999165534973, 0.4153333306312561, 0.4176666736602783, 0.4193333387374878, 0.4203333258628845, 0.421999990940094, 0.42366665601730347, 0.4259999990463257, 0.4269999861717224]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 0, 5, 8, 5, 0, 0, 4, 0, 8], [3, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.28285714983940125, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.459230940150799, 2.2070343092589755, 2.957033278841022, 2.3054519012666823, 2.303934432700987, 2.3028916740744987, 2.3003194785908527], "accuracy": [0.1946902722120285, 0.22031435370445251, 0.13974376022815704, 0.09259014576673508, 0.09826971590518951, 0.0956280529499054, 0.11689341068267822], "val_loss": [1.97201783316476, 1.78372894014631, 1.9769109317234583, 1.9742646217346191, 1.973874228341239, 1.9727206911359514, 1.964045183999198], "val_accuracy": [0.0989999994635582, 0.3409999907016754, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.179666668176651, 0.2930000126361847]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [7, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 6, 4, 8, 2, 5, 0, 2, 8, 0, 8], [0, 3, 0, 1, 3, 0, 2], [90, 51, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma), tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.square(alpha), sigma))))", "other_info": {"loss": [2.3155930861348506, 3.239182124253136, 5.447840181150929, 8.195626004780477, 10.372493220137693, 11.902512092474446], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.133702278137207, 3.7706086294991628, 5.993794032505581, 8.249168940952845, 9.591968808855329, 10.922741481236049], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5657.953543909285, 105718.66916110818, 485616.4782971206, 1353135.1700898164, 2918479.39605072, 5289565.639941883], "accuracy": [0.10527011007070541, 0.09813763201236725, 0.09747721254825592, 0.10170386731624603, 0.10051512718200684, 0.10434553027153015], "val_loss": [21156.957589285714, 165465.42857142858, 554604.3392857143, 1310246.1785714286, 2554064.5, 4407730.571428572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 18, 93, 89, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 1, 0, 0, 3, 0, 2], [39, 31, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302744298610453, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 1, 4, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302744298610453, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 5, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 1, 0, 3, 0, 2], [90, 51, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302744298610453, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 2, 6, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [4, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 2, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 3, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7085313.48006077, 137885736.04332322, 639792849.2870163, 1790488664.894994, 3870829697.0989304, 7025894446.391758], "accuracy": [0.10566636174917221, 0.09813763201236725, 0.09734513610601425, 0.10170386731624603, 0.10051512718200684, 0.10434553027153015], "val_loss": [27197581.714285713, 217212512.0, 732683099.4285715, 1736245540.5714285, 3390535899.428571, 5858202916.571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.9776101194872218, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.032360322773456573, 0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [246.78948102678572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 51, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302744298610453, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 3, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7091252.9789050445, 138001381.72289, 640329192.8717475, 1791992617.3197727, 3874085005.880333, 7031796042.42293], "accuracy": [0.10566636174917221, 0.09813763201236725, 0.09734513610601425, 0.10170386731624603, 0.10051512718200684, 0.10434553027153015], "val_loss": [27220408.57142857, 217394715.42857143, 733297920.0, 1737703716.5714285, 3393389860.571429, 5863124699.428572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 6, 3, 2, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [65, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 7, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.math.sqrt(beta)), tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 18, 93, 89, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 1, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), alpha), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [3.21698536338602e+16, 2.4718749233760287, 2.3991125119344954, 2.3947644258266614, 2.364029467743559, 2.438699287461913], "accuracy": [0.09681680053472519, 0.09893012791872025, 0.10315678268671036, 0.10170386731624603, 0.1022322028875351, 0.09747721254825592], "val_loss": [2.0979054314749583, 2.0934059960501537, 2.0200112887791226, 2.0809933798653737, 2.055069242204939, 2.107423646109445], "val_accuracy": [0.10300000011920929, 0.09666666388511658, 0.10000000149011612, 0.10133333504199982, 0.10300000011920929, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.0705714300274849, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), beta)", "other_info": {"loss": [2.301073047541955, 2.301257380499517, 2.300790050073527, 2.3006926272224364, 2.300877626813587, 2.2996759625977656, 2.2998873756987117, 2.299142148784123, 2.2985788810018537, 2.299419974890273, 2.299208803671919, 2.2989994030366594, 2.2994552828522092, 2.3004246094380827, 2.2992942354635337], "accuracy": [0.09391097724437714, 0.09047681838274002, 0.09747721254825592, 0.09391097724437714, 0.09377889335155487, 0.09800554811954498, 0.09734513610601425, 0.10751552134752274, 0.10593052208423615, 0.09470347315073013, 0.09985470771789551, 0.10289261490106583, 0.10077928751707077, 0.0944393053650856, 0.1006472036242485], "val_loss": [1.9698660714285714, 1.969310692378453, 1.9690194129943848, 1.9689129420689173, 1.968890939440046, 1.9688664163861955, 1.968797274998256, 1.9688371930803572, 1.9689158712114607, 1.968916688646589, 1.9690509523664201, 1.969318185533796, 1.9695696149553572, 1.9698356219700404, 1.9701375280107771], "val_accuracy": [0.04633333161473274, 0.052000001072883606, 0.05900000035762787, 0.06533333659172058, 0.06933332979679108, 0.07566666603088379, 0.07900000363588333, 0.08266666531562805, 0.0806666687130928, 0.08299999684095383, 0.08033332973718643, 0.07699999958276749, 0.0793333351612091, 0.07900000363588333, 0.07433333247900009]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 5, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 2, 2, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 11, 11, 6, 5, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.sqrt(grad))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3013730718632575, 2.302492027127779, 2.3027967990680756, 2.3031910498065717, 2.303704051671641, 2.3025270618105673], "accuracy": [0.09311848133802414, 0.08809932321310043, 0.0936468094587326, 0.08849557489156723, 0.0874389111995697, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 0, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [80, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 5, 0, 5, 8, 5, 0, 0, 4, 0, 8], [3, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(sigma), beta)", "other_info": {"loss": [2.3013730718632575, 2.302492027127779, 2.3027967990680756, 2.3031910498065717, 2.303704051671641, 2.3025270618105673], "accuracy": [0.09311848133802414, 0.08809932321310043, 0.0936468094587326, 0.08849557489156723, 0.0874389111995697, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]