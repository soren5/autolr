[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7494285702705383, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.2990630637259453, 2.2750769514276086, 2.230258720205476, 2.1538553822388535, 2.027463859366136, 1.8215653217227752, 1.5844275077351992, 1.4120679021180818, 1.342658584364464, 1.333320625658757, 1.2972298511786782, 1.1607205025224858, 1.0419857430499007, 0.9280504485902974, 0.8915776168397861, 0.9003194219573866, 0.9056131697491475, 0.8932509401045802, 0.8491735115987813, 0.8035632652093895, 0.782324609920538, 0.7947937391610777, 0.7895342870600046, 0.7700956809034185, 0.7435414467221947, 0.7386165758984325, 0.7286975203078767, 0.7109140380734796, 0.6811824564715859, 0.6894276094568907, 0.6880867615304744, 0.6779633924914168, 0.6826182277352818, 0.6706070070253497, 0.6591375954336006, 0.6432764484598621, 0.6382289575925829], "accuracy": [0.09998679161071777, 0.16616034507751465, 0.2693171203136444, 0.3571522831916809, 0.39902257919311523, 0.43283581733703613, 0.47193238139152527, 0.5126138925552368, 0.5424646735191345, 0.5577862858772278, 0.5824857950210571, 0.62660151720047, 0.6493197679519653, 0.6749438643455505, 0.6745476126670837, 0.6765288710594177, 0.6804913282394409, 0.6905296444892883, 0.6939638257026672, 0.7040021419525146, 0.715889573097229, 0.7128516435623169, 0.7127195596694946, 0.7210407853126526, 0.7230220437049866, 0.7238145470619202, 0.7207766771316528, 0.7264562249183655, 0.7432307600975037, 0.7467969655990601, 0.7471932172775269, 0.748778223991394, 0.7464007139205933, 0.7446836829185486, 0.7553823590278625, 0.7600052952766418, 0.7548540234565735], "val_loss": [1.9574615614754813, 1.9238646371023995, 1.8705529485430037, 1.776292392185756, 1.6101135526384627, 1.3660836900983537, 1.1131646633148193, 0.935823917388916, 0.8188015392848423, 0.7575504950114659, 0.7004655429295131, 0.6728321995053973, 0.6341481549399239, 0.6224961451121739, 0.6457382951463971, 0.6728013924189976, 0.6774781772068569, 0.6422642469406128, 0.5928619078227452, 0.5633085455213275, 0.5544334139142718, 0.5465877737317767, 0.535711577960423, 0.5265561171940395, 0.5213106189455304, 0.5200044768197196, 0.517916236604963, 0.5122794083186558, 0.5065189940588815, 0.5044895240238735, 0.505565915788923, 0.5048736163548061, 0.497965897832598, 0.4831446238926479, 0.4697960615158081, 0.46582233905792236, 0.46782580443790983], "val_accuracy": [0.14100000262260437, 0.34933334589004517, 0.4050000011920929, 0.4480000138282776, 0.5063333511352539, 0.5720000267028809, 0.6240000128746033, 0.6666666865348816, 0.6800000071525574, 0.6916666626930237, 0.7116666436195374, 0.7170000076293945, 0.7303333282470703, 0.7390000224113464, 0.734333336353302, 0.7393333315849304, 0.7363333106040955, 0.7433333396911621, 0.7483333349227905, 0.7490000128746033, 0.7526666522026062, 0.7609999775886536, 0.7639999985694885, 0.7699999809265137, 0.7793333530426025, 0.7766666412353516, 0.7699999809265137, 0.7730000019073486, 0.7760000228881836, 0.7836666703224182, 0.784333348274231, 0.7856666445732117, 0.784333348274231, 0.7823333144187927, 0.7853333353996277, 0.784333348274231, 0.7850000262260437]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7, 8, 3, 7, 2, 5, 7, 0, 7, 4, 9], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1, 1, 1, 2], [52, 45, 31], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 1, 3, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7494285702705383, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 21, 14, 3, 1, 0, 0, 0, 0, 16, 10, 6, 4], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), beta))))))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, grad)))), tf.math.add(alpha, tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.pow(alpha, beta)))))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.subtract(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.2990611476228064, 2.2750623949514703, 2.230220600913434, 2.1537709886119853, 2.0272792402495954, 1.8212428728917869, 1.5840711089928925, 1.4118776809994444, 1.3425900733954304, 1.3333789350145355, 1.297052895561453, 1.1602864279297946, 1.0414786791725874, 0.9277126403091732, 0.8915499648429368, 0.9004366231112668, 0.9054955399000193, 0.8926143012562007, 0.8485366392129322, 0.8027331245857191, 0.7814343843351754, 0.7949884128828784, 0.7895670445477722, 0.7697197819792159, 0.7426588449180874, 0.7382797742437898, 0.727986427212215, 0.7103026536524714, 0.6806638184445267, 0.6891803882613615, 0.6883425186134176, 0.6779772206272952, 0.6823134114083802, 0.6700703406283538, 0.6582988484928306, 0.6438558830356459, 0.638296385970901], "accuracy": [0.09998679161071777, 0.16616034507751465, 0.2693171203136444, 0.3572843670845032, 0.3991546630859375, 0.43309998512268066, 0.47193238139152527, 0.5128780603408813, 0.5425967574119568, 0.5577862858772278, 0.5826178789138794, 0.62660151720047, 0.6493197679519653, 0.6745476126670837, 0.6733588576316833, 0.6761326193809509, 0.6806234121322632, 0.6890767216682434, 0.6940959095954895, 0.7041342258453369, 0.7154933214187622, 0.7121912837028503, 0.7135120630264282, 0.7224937081336975, 0.724739134311676, 0.7243428826332092, 0.7207766771316528, 0.7273808121681213, 0.7437590956687927, 0.7467969655990601, 0.7466648817062378, 0.7477215528488159, 0.7454761862754822, 0.7446836829185486, 0.7537974119186401, 0.7592127919197083, 0.7563069462776184], "val_loss": [1.9574545451572962, 1.9238409314836775, 1.8705012457711356, 1.7761705943516322, 1.609851871218, 1.3656740869794572, 1.1127763475690569, 0.9355556964874268, 0.8185691833496094, 0.7574535608291626, 0.7003852299281529, 0.6728146587099347, 0.6339599405016217, 0.6225836106709072, 0.6460529054914202, 0.6729229688644409, 0.6772946970803397, 0.6418419395174298, 0.5923032930919102, 0.5625439030783517, 0.5537447248186383, 0.5464255809783936, 0.5356449740273612, 0.5261942659105573, 0.5207969290869576, 0.519455075263977, 0.5171892983572823, 0.5116790873663766, 0.5063441821507045, 0.5047304119382586, 0.5058582680565971, 0.5048387561525617, 0.49750639711107525, 0.48258750779288156, 0.469489506312779, 0.4657638243266514, 0.46766466753823416], "val_accuracy": [0.14100000262260437, 0.34933334589004517, 0.40533334016799927, 0.4480000138282776, 0.5066666603088379, 0.5720000267028809, 0.6243333220481873, 0.6663333177566528, 0.6796666383743286, 0.6909999847412109, 0.7113333344459534, 0.7176666855812073, 0.7300000190734863, 0.737333357334137, 0.734666645526886, 0.7396666407585144, 0.7356666922569275, 0.7429999709129333, 0.7476666569709778, 0.7490000128746033, 0.7526666522026062, 0.7613333463668823, 0.7646666765213013, 0.7713333368301392, 0.7796666622161865, 0.7776666879653931, 0.7696666717529297, 0.7713333368301392, 0.7773333191871643, 0.7846666574478149, 0.7836666703224182, 0.7850000262260437, 0.7850000262260437, 0.7839999794960022, 0.7836666703224182, 0.7850000262260437, 0.7846666574478149]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7160000205039978, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2992851421455462, 2.2766445636308394, 2.2343916373088484, 2.1626115805752257, 2.0403973579627177, 1.8238403486333203, 1.5676431618094555, 1.407941531102104, 1.3623401665369501, 1.3397879119656892, 1.1609063685892942, 0.979850839102635, 0.9132037214032411, 0.9148520965224102, 0.9054705928959441, 0.8638454111512658, 0.8157074532063567, 0.8218497330990324, 0.8231049353782575, 0.7975517303920645, 0.7862853530753542, 0.7713438538732845, 0.7493085323418011, 0.7415609873753529, 0.7396270732255487, 0.7316999602484713, 0.7269860115805165, 0.7184881092125572, 0.6916407220367711, 0.6973817287938722, 0.6977965625411625, 0.6856773396319937, 0.6751842903281562, 0.6554122894762247, 0.65572777905752, 0.6487536943111564, 0.6309642895668441, 0.6258625002616527, 0.6184529273060603, 0.6182696069504025, 0.5975959686602521, 0.5990918630763855, 0.5941082476829541, 0.5840398879366748, 0.5788081074356167, 0.580264378036443, 0.5724211658358873, 0.5652796314566001, 0.5620025512155304, 0.5579684362781834, 0.5495139461750241, 0.5453294129529728, 0.5451387948584264], "accuracy": [0.09919429570436478, 0.1628582775592804, 0.2635054886341095, 0.35068023204803467, 0.39241844415664673, 0.4283449947834015, 0.4690265357494354, 0.5110289454460144, 0.5466912984848022, 0.5645225048065186, 0.6136573553085327, 0.6543388962745667, 0.6568484902381897, 0.6691322326660156, 0.6877558827400208, 0.6936996579170227, 0.6991150379180908, 0.69673752784729, 0.6944921612739563, 0.703209638595581, 0.7149649858474731, 0.7125874757766724, 0.7132478952407837, 0.7137762308120728, 0.7231541275978088, 0.7253995537757874, 0.7312111854553223, 0.7326641082763672, 0.7415136694908142, 0.7409853339195251, 0.7432307600975037, 0.7405890822410583, 0.7494386434555054, 0.7523444890975952, 0.7555144429206848, 0.7594769597053528, 0.7604015469551086, 0.7648923397064209, 0.7670056819915771, 0.7658169269561768, 0.7749306559562683, 0.7749306559562683, 0.776251494884491, 0.774798572063446, 0.7808743715286255, 0.7792893648147583, 0.778761088848114, 0.7854973077774048, 0.7898560166358948, 0.7967243194580078, 0.7932901978492737, 0.7928939461708069, 0.7928939461708069], "val_loss": [1.9582267488752092, 1.9264644895281111, 1.876317364828927, 1.787318502153669, 1.6184307847704207, 1.344519819532122, 1.0594257286616735, 0.8688171931675502, 0.7769086531230381, 0.7062431233269828, 0.6778419698987689, 0.6421054261071342, 0.6665724856512887, 0.683263761656625, 0.6547963619232178, 0.5968762806483677, 0.5717930793762207, 0.5694726024355207, 0.5611780541283744, 0.5645238842282977, 0.5662201642990112, 0.5412658623286656, 0.5260069710867745, 0.5371260813304356, 0.5368199518748692, 0.5340224845068795, 0.5307912826538086, 0.5206116608210972, 0.5084755590983799, 0.5017430441720145, 0.4949662685394287, 0.48155808448791504, 0.46770826407841276, 0.4601052829197475, 0.4549779210771833, 0.4480011463165283, 0.4429673637662615, 0.442203164100647, 0.44349193572998047, 0.43885728291102816, 0.4303909199578421, 0.42660324914114817, 0.4231578196798052, 0.4180017113685608, 0.4149796622140067, 0.4134443572589329, 0.41003914390291485, 0.4046082752091544, 0.4013341580118452, 0.40068165745053974, 0.40103634766169954, 0.40035357645579744, 0.39806547335215975], "val_accuracy": [0.1340000033378601, 0.34700000286102295, 0.40033334493637085, 0.4423333406448364, 0.49566665291786194, 0.5686666369438171, 0.6333333253860474, 0.6733333468437195, 0.6793333292007446, 0.7083333134651184, 0.7163333296775818, 0.731333315372467, 0.7183333039283752, 0.746999979019165, 0.7363333106040955, 0.7436666488647461, 0.7459999918937683, 0.7509999871253967, 0.7556666731834412, 0.7566666603088379, 0.7590000033378601, 0.7586666941642761, 0.7630000114440918, 0.7710000276565552, 0.7713333368301392, 0.7706666588783264, 0.7706666588783264, 0.7726666927337646, 0.7763333320617676, 0.7756666541099548, 0.7766666412353516, 0.7846666574478149, 0.7896666526794434, 0.7960000038146973, 0.8046666383743286, 0.8040000200271606, 0.8083333373069763, 0.8080000281333923, 0.8053333163261414, 0.809333324432373, 0.8109999895095825, 0.8109999895095825, 0.8100000023841858, 0.8113333582878113, 0.8203333616256714, 0.8203333616256714, 0.8270000219345093, 0.8303333520889282, 0.8293333053588867, 0.8253333568572998, 0.8270000219345093, 0.8259999752044678, 0.8299999833106995]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.6380000114440918, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.301545074728927, 2.298081894623778, 2.29569459241757, 2.2921315866958323, 2.290128166712412, 2.2867274734684506, 2.2838088347218717, 2.2806002679612454, 2.2779588976776783, 2.274699795720064, 2.2730095982630303, 2.269054301458028, 2.267077449510882, 2.2627277851356666, 2.258494455233982, 2.256814275262158, 2.25294855657806, 2.250590165435142, 2.247062093372972, 2.2444873229623736, 2.24037340590825, 2.235993562074086, 2.2336550930062495, 2.228301985735245, 2.22308475321562, 2.221394489973827, 2.2167756593679284, 2.2113005631257514, 2.2060895092089603, 2.2053951903451403, 2.1980649202160625, 2.191925535521975, 2.187549418147214, 2.183004213220266, 2.1782415970331326, 2.170303785569475, 2.16405872435161, 2.159404828863027, 2.1529599101142547, 2.147712494104829, 2.1368079279958927, 2.132701618103634, 2.1241266615654357, 2.115546200426893, 2.1069514774737685, 2.0970523823143674, 2.089951009010957, 2.081235469844064, 2.0707348537104964, 2.060766382617973, 2.0519538329435205, 2.044093150409804, 2.036506509484868, 2.0233650058566965, 2.0140021417938, 2.0012983781881086, 1.9858321182133578, 1.9790446431393385, 1.9646058002120987, 1.9512014177733283, 1.9386936019770993, 1.92990144077561, 1.916339216105076, 1.9007050479171677, 1.8871313938139105, 1.8729142459817236, 1.8579855894510222, 1.845824132317077, 1.8381379510842735, 1.81487535071521, 1.7931028500901962, 1.7865329082411168, 1.7749018860436419, 1.7534132496146415, 1.7502592470604652, 1.7354175345520726, 1.71634255639944, 1.6984028387157877, 1.6811888386403029, 1.6737045977078158, 1.653583965391578, 1.6373168454587799, 1.6358815870107424, 1.6096379715359332, 1.599044595963258, 1.5860710580666084, 1.5810271927614759, 1.5534667187457576, 1.5493334634759721, 1.5276226957381882, 1.5244278294173184, 1.5110581433217225, 1.4958674104820546, 1.4859627024089153, 1.470910541007642, 1.4629239035698212, 1.4523647132409232, 1.4350433577132058, 1.4274797161981776, 1.4216149786381185], "accuracy": [0.09311848133802414, 0.10157178342342377, 0.10910051316022873, 0.11979923397302628, 0.12772421538829803, 0.12310130894184113, 0.13538502156734467, 0.14938580989837646, 0.15849953889846802, 0.16563200950622559, 0.1694624274969101, 0.17884030938148499, 0.18835029006004333, 0.19416193664073944, 0.2082948088645935, 0.21014396846294403, 0.21925769746303558, 0.22837141156196594, 0.230484738945961, 0.23523972928524017, 0.24118345975875854, 0.2546559274196625, 0.2611279785633087, 0.2743362784385681, 0.2782987654209137, 0.2739400267601013, 0.28424251079559326, 0.2921674847602844, 0.29441288113594055, 0.2942807972431183, 0.3171311616897583, 0.31924447417259216, 0.32281073927879333, 0.31884822249412537, 0.32545238733291626, 0.3369435966014862, 0.3479065001010895, 0.34183067083358765, 0.34883105754852295, 0.34539690613746643, 0.36481308937072754, 0.3572843670845032, 0.37062475085258484, 0.375379741191864, 0.369700163602829, 0.3731343150138855, 0.3851538896560669, 0.38568219542503357, 0.3953242599964142, 0.3949280083179474, 0.39690926671028137, 0.40430590510368347, 0.3999471664428711, 0.40826839208602905, 0.4065513014793396, 0.40707963705062866, 0.4233258366584778, 0.4251750111579895, 0.4131554663181305, 0.42808082699775696, 0.43323206901550293, 0.4224012792110443, 0.43811914324760437, 0.44168537855148315, 0.44670453667640686, 0.45027077198028564, 0.4504028558731079, 0.45172369480133057, 0.4497424364089966, 0.4632149040699005, 0.47272488474845886, 0.4583278298377991, 0.46546030044555664, 0.46704530715942383, 0.46664905548095703, 0.4637432396411896, 0.47629112005233765, 0.4776119291782379, 0.4807819426059723, 0.4850085973739624, 0.48672565817832947, 0.49214106798171997, 0.4827631711959839, 0.4979526996612549, 0.4935939908027649, 0.5021793842315674, 0.497820645570755, 0.5068022608757019, 0.5036323070526123, 0.5192180871963501, 0.5101043581962585, 0.5153876543045044, 0.5221238732337952, 0.5227842926979065, 0.5200105905532837, 0.5312376022338867, 0.5248976349830627, 0.5388984084129333, 0.5349359512329102, 0.5321621894836426], "val_loss": [1.9676321574619837, 1.9649012429373605, 1.9621891975402832, 1.9594706807817732, 1.9568025725228446, 1.9540845326014928, 1.9513626779828752, 1.9486299923488073, 1.9458892686026437, 1.9431258610316686, 1.9403128623962402, 1.9374621255057198, 1.9345882960728236, 1.9316514560154505, 1.9286673409598214, 1.9256533214024134, 1.9225105558122908, 1.9193651335580009, 1.9161495481218611, 1.9128460884094238, 1.9094671521868025, 1.905942167554583, 1.9023141179765974, 1.8985974448067802, 1.894716399056571, 1.8907532010759627, 1.8866657529558455, 1.8824526241847448, 1.8780501910618372, 1.8735619953700475, 1.8688363347734724, 1.863969053540911, 1.8589164188929967, 1.853736128125872, 1.8483316557747977, 1.8426755496433802, 1.8367935589381628, 1.8307954243251257, 1.8245306015014648, 1.8181511334010534, 1.8114200319562639, 1.8045110702514648, 1.797344412122454, 1.7898648125784737, 1.7821070126124792, 1.774066584450858, 1.7657983643668038, 1.7572151592799596, 1.7483270508902413, 1.7391278403145927, 1.729607105255127, 1.719914776938302, 1.7100317818777901, 1.6997768538338798, 1.6892734936305456, 1.6783979960850306, 1.6671531541006905, 1.6556893757411413, 1.643927471978324, 1.6317335878099715, 1.6192913736615862, 1.6066828114645821, 1.593839236668178, 1.5807086059025355, 1.5673179626464844, 1.5536833490644182, 1.5397894041878837, 1.5257609571729387, 1.5118373121534074, 1.497392007282802, 1.482816423688616, 1.468198503766741, 1.453521728515625, 1.4386430808476038, 1.4240073476518904, 1.4092235565185547, 1.3942650386265345, 1.3792399678911482, 1.3641814163752966, 1.3494528361729212, 1.3345811026436942, 1.3198228904179163, 1.30546236038208, 1.2908968584878104, 1.2766429356166296, 1.2623167037963867, 1.2486489840916224, 1.2347138609204973, 1.221189260482788, 1.207679305757795, 1.1947131156921387, 1.1819535664149694, 1.169381550380162, 1.1570891652788435, 1.1450543063027518, 1.1333815710885184, 1.1218878201075964, 1.1104687282017298, 1.0992791993277413, 1.0884943008422852], "val_accuracy": [0.057999998331069946, 0.07833333313465118, 0.0976666659116745, 0.12566666305065155, 0.15199999511241913, 0.18299999833106995, 0.2056666612625122, 0.2303333282470703, 0.2523333430290222, 0.27433332800865173, 0.2919999957084656, 0.3089999854564667, 0.3253333270549774, 0.33799999952316284, 0.34833332896232605, 0.36000001430511475, 0.367000013589859, 0.3733333349227905, 0.3786666691303253, 0.3866666555404663, 0.3930000066757202, 0.3946666717529297, 0.4000000059604645, 0.40533334016799927, 0.4113333225250244, 0.4166666567325592, 0.42633333802223206, 0.43066665530204773, 0.4323333203792572, 0.4363333284854889, 0.44333332777023315, 0.44699999690055847, 0.44999998807907104, 0.4519999921321869, 0.45399999618530273, 0.4560000002384186, 0.4580000042915344, 0.4620000123977661, 0.46833333373069763, 0.47099998593330383, 0.47833332419395447, 0.4830000102519989, 0.4896666705608368, 0.4933333396911621, 0.4970000088214874, 0.5009999871253967, 0.5049999952316284, 0.5083333253860474, 0.5166666507720947, 0.5210000276565552, 0.5230000019073486, 0.5270000100135803, 0.5303333401679993, 0.5353333353996277, 0.5393333435058594, 0.5426666736602783, 0.5429999828338623, 0.5453333258628845, 0.5496666431427002, 0.5523333549499512, 0.5569999814033508, 0.5606666803359985, 0.5643333196640015, 0.5663333535194397, 0.5686666369438171, 0.5683333277702332, 0.5736666917800903, 0.5759999752044678, 0.5776666402816772, 0.5803333520889282, 0.5826666951179504, 0.5839999914169312, 0.5876666903495789, 0.5889999866485596, 0.5916666388511658, 0.5929999947547913, 0.5953333377838135, 0.5953333377838135, 0.5983333587646484, 0.6003333330154419, 0.6023333072662354, 0.6043333411216736, 0.6053333282470703, 0.6073333621025085, 0.6100000143051147, 0.6113333106040955, 0.6119999885559082, 0.6136666536331177, 0.6156666874885559, 0.6233333349227905, 0.6263333559036255, 0.6290000081062317, 0.6306666731834412, 0.6333333253860474, 0.637666642665863, 0.6389999985694885, 0.640666663646698, 0.6439999938011169, 0.6449999809265137, 0.6463333368301392]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.11542857438325882, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, sigma)))", "other_info": {"loss": [173.60086416124338, 8787.756339723534, 138534.67649996697, 212963877.82716945, 18501517760526.152, 298263203800722.56], "accuracy": [0.09708096832036972, 0.08796724677085876, 0.10566636174917221, 0.09945846349000931, 0.08532558381557465, 0.09391097724437714], "val_loss": [792.4440046037946, 14943.51060267857, 178202.32589285713, 106973549.71428572, 307847101715017.1, 293146809186011.44], "val_accuracy": [0.1276666671037674, 0.12333333492279053, 0.10233332961797714, 0.10133333504199982, 0.08866667002439499, 0.08799999952316284]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 4, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [3, 8, 5, 8, 2, 5, 0, 3, 4, 4, 8, 4, 4, 4, 5, 4, 0, 9, 7, 7, 7, 3, 7, 7, 9, 3, 9, 8], [1, 1, 0, 0, 3, 0, 2, 1, 2, 2, 2, 0, 3, 3], [9, 63, 56, 12, 33, 7, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 42, 28, 14, 7], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(grad, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.sqrt(alpha))), tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.math.pow(tf.math.pow(tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), sigma), tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 8, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [49687363532.72653, 7666030917513.789, 130274806372133.16, 915896098751069.9, 4136507378815985.0, 1.3510368407937872e+16], "accuracy": [0.09840179979801178, 0.09694888442754745, 0.10394927859306335, 0.10421344637870789, 0.09866596013307571, 0.09906221181154251], "val_loss": [422659854921.1429, 22785938161664.0, 244578868414756.56, 1333054040852772.5, 4993546027569737.0, 1.4730217713640594e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [17, 96, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 16, 10, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [76119.81432617635, 15743911.389380531, 3015345900.55739, 575551897965.724, 109027732400002.75, 2.0846175217550788e+16], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [629276.0357142857, 121638157.71428572, 23257781979.42857, 4430537087853.714, 839295301133458.2, 1.604758229264817e+17], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [6, 9, 0, 1, 2, 2, 0, 0, 4, 1, 8, 3, 2, 2, 5, 1, 6, 0, 6, 3, 6, 9, 7, 9, 8, 2, 1, 9], [1, 0, 0, 2, 3, 0, 2, 1, 1, 0, 2, 1, 1, 0], [59, 63, 56, 12, 9, 93, 78, 8, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 42, 28, 14, 9], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.sqrt(beta), sigma), tf.math.multiply(tf.math.add(tf.math.add(tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.divide_no_nan(beta, alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.sqrt(alpha)), tf.math.add(tf.math.subtract(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 5, 8, 2, 5, 0, 3, 8, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 95, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 2, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 8, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.sqrt(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 6, 2, 5, 0, 8, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [42, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302845069902637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 3, 5, 8, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 1, 8, 2, 5, 0, 3, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302845069902637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 2, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 9, 0, 1, 4, 0, 8], [1, 2, 1, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7.150918345734014e+27, 2.9317312483804247e+29, Infinity, NaN, NaN, NaN], "accuracy": [0.09179764986038208, 0.09311848133802414, 0.0956280529499054, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.280532256152202e+28, 1.1552829313874675e+30, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [188.61315964651052, 22284.75544919553, 368187.53587703075, 2567590.0089816405, 11556604.296922468, 37682414.35530313], "accuracy": [0.09800554811954498, 0.09694888442754745, 0.10381719470024109, 0.10421344637870789, 0.09893012791872025, 0.09866596013307571], "val_loss": [1346.666015625, 65101.12053571428, 687805.0535714285, 3730046.285714286, 13938420.0, 41061445.71428572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [26, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302845069902637, 2.3025846438495443, 2.3025851251584286, 2.302585160648818, 2.3025851252529015, 2.302584999761152], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644733428955, 1.9736450059073312, 1.9736449377877372, 1.973644801548549, 1.9736450740269251], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [7, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 1, 2, 5, 0, 6, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 77, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09325055778026581, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 1, 2, 2, 0, 0, 4, 1, 8, 3, 2, 2, 5, 1, 6, 0, 6, 3, 6, 9, 7, 9, 8, 9], [3, 3, 0, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302750997413592, 2.302234713868411, 2.302763234260548, 2.3021567932854965, 2.3028160811509784, 2.302549520267582], "accuracy": [0.09113723784685135, 0.08981640636920929, 0.08942015469074249, 0.09509972482919693, 0.09760929644107819, 0.08466517180204391], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [3, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302750997413592, 2.302234713868411, 2.302763234260548, 2.3021567932854965, 2.3028160811509784, 2.302549520267582], "accuracy": [0.09113723784685135, 0.08981640636920929, 0.08942015469074249, 0.09509972482919693, 0.09760929644107819, 0.08466517180204391], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]