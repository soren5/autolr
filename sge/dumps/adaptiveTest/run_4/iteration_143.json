[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.7885714173316956, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.248183587885111, 1.9619761308296686, 1.4312634395806703, 1.1525842640708859, 1.0248141140277123, 0.9629049770127608, 0.8697612011327153, 0.8527152704021099, 0.8170561825893716, 0.8008576458424089, 0.7742979745854791, 0.7473053936756141, 0.7393975655841412, 0.7375314506195193, 0.7278765680814825, 0.7077749920102347, 0.6937488066427396, 0.6876405591363873, 0.6754468255716308, 0.660042618747873, 0.6516156758866558, 0.6499613792101752, 0.6451075942272901, 0.6379584224547503, 0.6243330073268454, 0.620901560440134, 0.6156208045950907, 0.6091858636685775], "accuracy": [0.20578522980213165, 0.41170254349708557, 0.5284639000892639, 0.5926561951637268, 0.6440364718437195, 0.6567164063453674, 0.6870955228805542, 0.6951525807380676, 0.6992471218109131, 0.7077004313468933, 0.7169462442398071, 0.7276449799537659, 0.7276449799537659, 0.7310791015625, 0.7357020378112793, 0.741909921169281, 0.7465327978134155, 0.7440232634544373, 0.7499669790267944, 0.7535332441329956, 0.7565711140632629, 0.7577598690986633, 0.7563069462776184, 0.7621186375617981, 0.7631752490997314, 0.7714964747428894, 0.7701756954193115, 0.7700436115264893], "val_loss": [1.8138629368373327, 1.3250487872532435, 0.9259100300925118, 0.7582077298845563, 0.7679943527494159, 0.6513500894818988, 0.6010226011276245, 0.5878162724631173, 0.5617155688149589, 0.559366260256086, 0.5433544261114938, 0.5126706872667585, 0.5167706864220756, 0.5128325734819684, 0.5028810841696603, 0.4874802146639143, 0.49903370652879986, 0.4908744437353952, 0.47409309659685406, 0.46351172242845806, 0.4956371103014265, 0.4506326062338693, 0.4459137405667986, 0.454495940889631, 0.4388688973018101, 0.4466931309018816, 0.4435007061277117, 0.44531372615269255], "val_accuracy": [0.5099999904632568, 0.5856666564941406, 0.6539999842643738, 0.6919999718666077, 0.6703333258628845, 0.7323333621025085, 0.746666669845581, 0.7319999933242798, 0.753000020980835, 0.7720000147819519, 0.765999972820282, 0.781333327293396, 0.7770000100135803, 0.7636666893959045, 0.7793333530426025, 0.7833333611488342, 0.7763333320617676, 0.7789999842643738, 0.793666660785675, 0.8036666512489319, 0.7683333158493042, 0.8106666803359985, 0.8183333277702332, 0.8136666417121887, 0.8140000104904175, 0.7960000038146973, 0.8043333292007446, 0.8163333535194397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3169122607307098, 1.8273452181841923, 1.981749862995382, 1.7833577107917111, 1.3407839194674298, 1.062086661037374, 0.8537491197599286, 0.783865785145284, 0.7366889438388559, 0.6855367145770104, 0.6789748493423079, 0.6193837866397692, 0.6236557578838985, 0.6215704094070911, 0.5971540532737534, 0.5835962395201333, 0.5742964991772447], "accuracy": [0.2425042986869812, 0.3603222966194153, 0.3401135802268982, 0.42649585008621216, 0.5242372155189514, 0.6236956715583801, 0.683000922203064, 0.7120591998100281, 0.7273808121681213, 0.7461365461349487, 0.7486461400985718, 0.7732135653495789, 0.7697794437408447, 0.7692511081695557, 0.7724210619926453, 0.7816668748855591, 0.7854973077774048], "val_loss": [1.8387244769505091, 1.5641576562608992, 0.9491166046687535, 1.0545907361166817, 0.8545877082007272, 0.6649316549301147, 0.6239265544073922, 0.589886018208095, 0.47964743205479216, 0.5425778797694615, 0.4765680858067104, 0.44155919551849365, 0.4200544272150312, 0.45048430987766813, 0.41396955081394743, 0.4526773691177368, 0.4725496939250401], "val_accuracy": [0.3186666667461395, 0.3109999895095825, 0.6226666569709778, 0.5929999947547913, 0.6433333158493042, 0.7153333425521851, 0.722000002861023, 0.7296666502952576, 0.7796666622161865, 0.753000020980835, 0.7826666831970215, 0.809333324432373, 0.8040000200271606, 0.7946666479110718, 0.8090000152587891, 0.7870000004768372, 0.7850000262260437]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.13857142627239227, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2596028941953974, 2.304165331978194, 2.303936201741021, 2.303126816484418, 2.3006049996558557, 2.3167659518363184, 2.305418640725475, 2.3035080487686237, 2.3029527244409156, 2.302939456955569], "accuracy": [0.24303261935710907, 0.10038304328918457, 0.0956280529499054, 0.09417514503002167, 0.11742173880338669, 0.1534803807735443, 0.09774138033390045, 0.09826971590518951, 0.09866596013307571, 0.09536388516426086], "val_loss": [1.9760896818978446, 1.9739486149379186, 1.973466464451381, 1.9731293405805315, 1.9541938645499093, 1.976386410849435, 1.9740255900791712, 1.9735963685171944, 1.973597185952323, 1.9735244342258997], "val_accuracy": [0.09666666388511658, 0.10300000011920929, 0.10300000011920929, 0.10199999809265137, 0.2266666740179062, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [7, 5, 1, 4, 6, 4, 0, 2, 4, 8, 6, 6], [0, 5, 0, 1, 5, 3, 5, 2, 4, 2], [7, 30, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 2, 1, 1, 0, 1, 0, 13, 8, 5, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, grad), grad))))), tf.math.add(beta, beta)))), tf.math.add(beta, grad))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), tf.math.negative(sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1], [0, 0, 1, 0], [3, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 55], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 3, 2, 3, 0, 2], [25, 42, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1], [1, 1, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 3, 0, 2, 3, 2, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4089129684371655, 3.5401964393573397, 6.465028120778287, 11.252760463402712, 17.774436158117382, 26.324893574531384, 37.586666662427554], "accuracy": [0.09272222965955734, 0.09708096832036972, 0.09549596905708313, 0.09972262382507324, 0.10170386731624603, 0.09893012791872025, 0.09192973375320435], "val_loss": [2.1865222113473073, 3.3608007431030273, 5.77220276423863, 9.331202643258232, 14.088420867919922, 20.15018735613142, 27.636838095528738], "val_accuracy": [0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0], [0, 1], [5, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 3, 0, 2, 3, 2, 2], [77, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 13, 9, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(beta))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 3, 9, 0, 6, 4, 0, 2, 4, 5, 3, 4, 9], [0, 5, 0, 3, 5, 0, 0], [7, 22, 61, 2, 50, 7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [3, 4, 2, 6, 2, 5, 0, 0, 4, 0, 8, 2, 3, 5, 8, 8], [1, 1, 0, 3, 0, 0, 2, 3, 0], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 6, 1, 1, 0, 1, 0, 25, 16, 9, 4], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, alpha), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(sigma, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.square(tf.math.sqrt(tf.math.sqrt(beta))), sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [1, 1], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [6, 2, 0, 6, 2, 5, 0, 6, 4, 0, 8], [1, 1, 0, 1, 0, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(alpha), alpha), tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303894744777818, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9703851427350725, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), alpha)", "other_info": {"loss": [2.3053103737811593, 2.3444405752418063, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.055871088057756424, 0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9808909552437919, 2.0688229969569614, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.016333334147930145, 0.0963333323597908, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1], [1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 33, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 6, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 13, 8, 5, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), grad), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), beta)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0], [0, 1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 0, 3, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5438509933732174, 5.122288982991955, 11.29551048024361, 21.2831657915036, 35.141204991691446, 53.70735787293537], "accuracy": [0.09298639744520187, 0.09840179979801178, 0.0948355570435524, 0.09919429570436478, 0.10289261490106583, 0.09879804402589798], "val_loss": [2.5205255235944475, 5.271517753601074, 10.360534123011998, 17.894487108503068, 28.19148690359933, 41.58956800188337], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 8, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 2, 3, 0, 2, 3, 2, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.302774967251043, 2.3029200832967542, 2.303018085299356, 2.303102213519833, 2.302907882916409, 2.302895855610759, 2.3029904281773415, 2.303066015180548], "accuracy": [0.09311848133802414, 0.09536388516426086, 0.09509972482919693, 0.09219389408826828, 0.09391097724437714, 0.09311848133802414, 0.09285431355237961, 0.09826971590518951], "val_loss": [1.9736247062683105, 1.973588330405099, 1.9735992976597376, 1.9737212998526437, 1.9736865588596888, 1.9736610821315221, 1.97360474722726, 1.9736510685511999], "val_accuracy": [0.10000000149011612, 0.10300000011920929, 0.10366666316986084, 0.10100000351667404, 0.10100000351667404, 0.10000000149011612, 0.10300000011920929, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 1], [0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [52, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302442614554477, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [53, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [16.3579618711954, 3.044150007192609e+31, 26639.616049251978, 6779635.244815744, 1730771231.4167216, 445265241098.4145, 113687338245017.61], "accuracy": [0.19891692698001862, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1488541.2142857143, 848.4262346540179, 216193.74107142858, 55343539.428571425, 14167942875.428572, 3626993376109.7144, 928510304284086.9], "val_accuracy": [0.06499999761581421, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0], [0, 0, 0, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 30, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 2, 1, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [4.153695027778776, 94.1863213709049, 1042.061855966641, 6577.276691719431, 27716.75863492273, 90031.29972510236], "accuracy": [0.09417514503002167, 0.09919429570436478, 0.0940430611371994, 0.09893012791872025, 0.10302469879388809, 0.09972262382507324], "val_loss": [11.553870337350029, 211.74756731305803, 1793.7866908482142, 9202.54994419643, 33674.830357142855, 98182.375], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 1, 2], [96, 12, 93], [1, 0, 0], [0, 1, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 0, 1, 3, 3, 0, 2], [96, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [1, 1, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 3, 5, 5, 0, 0, 4, 0, 8], [1, 1, 0, 2, 2, 0, 2], [61, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 10, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.square(tf.math.negative(alpha))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(beta, tf.math.negative(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]