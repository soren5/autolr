[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8288571238517761, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.9835405019390553, 1.3799913295145756, 1.0223676262593397, 0.8615345399078361, 0.7644732928216229, 0.701523005797044, 0.7457199916863533, 0.6749229792196989, 0.6438477725447949, 0.6304199010263644, 0.6337113711245387, 0.5791671687680275, 0.5612822117397357, 0.5664717272729008, 0.534130296167397, 0.5454456194627082, 0.5142592057623112, 0.4944903424442436, 0.5027891571109856, 0.4975732159715334, 0.4680380836579904, 0.4620900761260805, 0.48659885249290924, 0.4529088437635948, 0.4525985999381963, 0.43410684363386337, 0.42452950736062717, 0.4217624445562082, 0.4025884726225125, 0.42176017071891847, 0.3932337488370439], "accuracy": [0.3267732262611389, 0.5209351181983948, 0.6098269820213318, 0.6778497099876404, 0.6983225345611572, 0.7301545143127441, 0.7080966830253601, 0.7384757399559021, 0.7446836829185486, 0.754589855670929, 0.7534011602401733, 0.7741381525993347, 0.7792893648147583, 0.7807422876358032, 0.7928939461708069, 0.793422281742096, 0.8012151718139648, 0.8129705190658569, 0.8078193068504333, 0.8105930685997009, 0.8215559124946594, 0.8256505131721497, 0.8104609847068787, 0.8255184292793274, 0.8304054737091064, 0.8310658931732178, 0.8358209133148193, 0.8405758738517761, 0.8466516733169556, 0.8411042094230652, 0.8519350290298462], "val_loss": [1.2904701232910156, 0.7892748628343854, 0.8641775335584369, 0.5800156423023769, 0.5661866324288505, 0.6892732552119664, 0.5121901205607823, 0.488312874521528, 0.5364256756646293, 0.47749420574733187, 0.4409359097480774, 0.4549330302647182, 0.4364576169422695, 0.46801042556762695, 0.5053245850971767, 0.4052984118461609, 0.3946653263909476, 0.3940641624586923, 0.40755614212581087, 0.3954697677067348, 0.3788319911275591, 0.3792311634336199, 0.3647797107696533, 0.3917986069406782, 0.3536299892834255, 0.3469677822930472, 0.34374486548560007, 0.3624670335224697, 0.3570686663900103, 0.3438641684395926, 0.3517073563167027], "val_accuracy": [0.5303333401679993, 0.6423333287239075, 0.6783333420753479, 0.749666690826416, 0.7620000243186951, 0.6639999747276306, 0.7490000128746033, 0.7839999794960022, 0.749666690826416, 0.7893333435058594, 0.8059999942779541, 0.793666660785675, 0.7996666431427002, 0.7850000262260437, 0.750333309173584, 0.8240000009536743, 0.8203333616256714, 0.8316666483879089, 0.8193333148956299, 0.8256666660308838, 0.8399999737739563, 0.8386666774749756, 0.8413333296775818, 0.8259999752044678, 0.8496666550636292, 0.8573333621025085, 0.8523333072662354, 0.840666651725769, 0.8399999737739563, 0.847000002861023, 0.843999981880188]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [39, 63, 57, 12]], "fitness": -0.8014285564422607, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.186529354176202, 1.499391653313849, 1.1422630373859417, 0.9657908511152357, 0.8990781785490459, 0.8312157209775136, 0.783760941582837, 0.7403191576119286, 0.723416300080377, 0.7253609068043212, 0.7069961838498013, 0.6672040744464568, 0.6620169118836005, 0.6450052805281334, 0.643892145758339, 0.63537462592802, 0.6067986576910803, 0.6143075326776712, 0.6046676379483941, 0.5965184898046438, 0.5883655087303225, 0.5764923433444409, 0.5883906796749762, 0.588886574896776, 0.5660799562797224, 0.5544140327088569, 0.5577849478312865, 0.5427753751493007, 0.5336871855782638, 0.5296940154025362, 0.5267390781909468, 0.5207515537400271, 0.5190504976960221, 0.5176190803426053], "accuracy": [0.27261921763420105, 0.50350022315979, 0.5831462144851685, 0.654999315738678, 0.6671509742736816, 0.6914542317390442, 0.7077004313468933, 0.7220974564552307, 0.733060359954834, 0.7272487282752991, 0.7238145470619202, 0.7464007139205933, 0.7417778372764587, 0.7572315335273743, 0.7503632307052612, 0.7588165402412415, 0.7667415142059326, 0.7663452625274658, 0.774270236492157, 0.7725531458854675, 0.776251494884491, 0.785101056098938, 0.7746664881706238, 0.7692511081695557, 0.7869502305984497, 0.7902522683143616, 0.7872143983840942, 0.7959318161010742, 0.7938185334205627, 0.7959318161010742, 0.8014793395996094, 0.8050455451011658, 0.8058380484580994, 0.806630551815033], "val_loss": [1.5418092182704382, 0.948404175894601, 0.7164380890982491, 0.6247691256659371, 0.6146994829177856, 0.5966858693531581, 0.5624300752367292, 0.566839303289141, 0.5205377680914742, 0.5103318180356707, 0.5004966088703701, 0.48925040449414936, 0.48652163573673796, 0.49285684313092915, 0.5151907546179635, 0.464432886668614, 0.45612384591783794, 0.4544788599014282, 0.4498247078486851, 0.4675135612487793, 0.44790494441986084, 0.43369982072285246, 0.43873588527951923, 0.4298755271094186, 0.43235245772770475, 0.42202833720615934, 0.4188105719430106, 0.42091974190303255, 0.40457838773727417, 0.4121092047010149, 0.4186378036226545, 0.41522836685180664, 0.4055789623941694, 0.40798844609941753], "val_accuracy": [0.5059999823570251, 0.5920000076293945, 0.6963333487510681, 0.7396666407585144, 0.7506666779518127, 0.7293333411216736, 0.7486666440963745, 0.7289999723434448, 0.7736666798591614, 0.7820000052452087, 0.7773333191871643, 0.7860000133514404, 0.7756666541099548, 0.7699999809265137, 0.7613333463668823, 0.8056666851043701, 0.7906666398048401, 0.8069999814033508, 0.8106666803359985, 0.7786666750907898, 0.8113333582878113, 0.8169999718666077, 0.8086666464805603, 0.8209999799728394, 0.8063333630561829, 0.8230000138282776, 0.8233333230018616, 0.8180000185966492, 0.8296666741371155, 0.8196666836738586, 0.812333345413208, 0.8136666417121887, 0.8240000009536743, 0.8136666417121887]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 1, 3, 0, 2], [49, 63, 3, 12]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.214765890131789, 2.05042851202681, 1.652287793559421, 1.2141517798788182, 1.010624063155119, 0.9535693620504909, 0.8509650570510826, 0.7887114335706189, 0.7954486501750662, 0.6964335985596878, 0.6810639705782033, 0.6435463865356612, 0.6622140559742653, 0.6075205496982136, 0.582656557029973, 0.5806901670009263, 0.5634506579718302, 0.5510244967836383, 0.5399058835932513], "accuracy": [0.26218464970588684, 0.3109232485294342, 0.44868576526641846, 0.5560691952705383, 0.6277902722358704, 0.6439043879508972, 0.6742834448814392, 0.700171709060669, 0.6935675740242004, 0.7325320243835449, 0.746268630027771, 0.7539294958114624, 0.7514199018478394, 0.7691190242767334, 0.7824593782424927, 0.7740060687065125, 0.7902522683143616, 0.7956677079200745, 0.7965922355651855], "val_loss": [1.923308985573905, 1.5217018808637346, 0.8623033251081195, 0.7016421215874808, 0.6503202404294696, 0.6170030321393695, 0.5879547936575753, 0.5703963381903512, 0.5346041406903949, 0.4729708433151245, 0.5181394304547992, 0.5295277833938599, 0.4474515404020037, 0.4252577338899885, 0.44174751213618685, 0.40411906582968576, 0.4434163400105068, 0.426204902785165, 0.4347076416015625], "val_accuracy": [0.25333333015441895, 0.38600000739097595, 0.6293333172798157, 0.7083333134651184, 0.7136666774749756, 0.6990000009536743, 0.7450000047683716, 0.7336666584014893, 0.7556666731834412, 0.784333348274231, 0.7573333382606506, 0.7559999823570251, 0.8023333549499512, 0.8203333616256714, 0.79666668176651, 0.8203333616256714, 0.8109999895095825, 0.8133333325386047, 0.8076666593551636]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.214765330567698, 2.0575433675214017, 1.5945317583344851, 1.289119909027265, 1.0721399047749154, 0.9184055342461376, 0.8380429222048108, 0.8121711831004029, 0.7730012851274087, 0.7280180621314059, 0.6850365587213587, 0.6617896754224271, 0.6275215829132004, 0.6223617903135393, 0.5889372610145194, 0.5767723488817126, 0.5759080382952868, 0.5538798072405495, 0.540842403226824, 0.533490223863956, 0.5206775542625646], "accuracy": [0.26218464970588684, 0.3143574297428131, 0.4768194556236267, 0.5381059050559998, 0.5983357429504395, 0.6608110070228577, 0.6832650899887085, 0.6914542317390442, 0.7055870890617371, 0.7187954187393188, 0.7346453666687012, 0.7479857206344604, 0.7592127919197083, 0.7668735980987549, 0.7771760821342468, 0.78113853931427, 0.7792893648147583, 0.7910447716712952, 0.7991018295288086, 0.8005547523498535, 0.8076872229576111], "val_loss": [1.923360756465367, 1.4405828544071742, 0.8274464947836739, 0.7937743834086827, 0.6871165548052106, 0.604348863874163, 0.6282327856336322, 0.5512885195868356, 0.5187030690056937, 0.49410918780735563, 0.4669194221496582, 0.44646070684705463, 0.5022515910012382, 0.4248324121747698, 0.4536844491958618, 0.3976446730749948, 0.4448076231139047, 0.4211810146059309, 0.4391211611883981, 0.39468601771763395, 0.5409142119543893], "val_accuracy": [0.2536666691303253, 0.48533332347869873, 0.6353333592414856, 0.6296666860580444, 0.7126666903495789, 0.7296666502952576, 0.7073333263397217, 0.7446666955947876, 0.765333354473114, 0.7706666588783264, 0.7956666946411133, 0.7886666655540466, 0.7643333077430725, 0.8173333406448364, 0.7860000133514404, 0.8266666531562805, 0.8153333067893982, 0.8153333067893982, 0.8080000281333923, 0.8256666660308838, 0.7720000147819519]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7857142686843872, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2656081823735206, 2.1306966919672883, 1.8257886360602025, 1.441687389497728, 1.219186630640772, 1.0733596123031668, 0.9997124693113753, 0.9460591188259349, 0.9030143895074912, 0.8672436252954755, 0.8431732112138562, 0.8023913517100322, 0.7955420686269339, 0.7841630627718175, 0.7778257684480276, 0.7654702891101769, 0.750723985444128, 0.7370971769090531, 0.7318995713935694, 0.7173325766299646, 0.6999519987743071, 0.7016028509541841, 0.686063156632101, 0.6826681824187718, 0.6773009043816232, 0.6704578565852107, 0.6550005641296602, 0.6587953607498489, 0.645976926223587, 0.6425088175047563, 0.641279632562439, 0.6351981452584913, 0.6333707901055645, 0.6281465259147532, 0.6240158564205797, 0.6240246992116875], "accuracy": [0.1826707124710083, 0.3520010709762573, 0.45383700728416443, 0.5274072289466858, 0.5799762010574341, 0.6248844265937805, 0.6482630968093872, 0.6643772125244141, 0.6816800832748413, 0.6859067678451538, 0.6939638257026672, 0.7131158113479614, 0.7160216569900513, 0.7191916704177856, 0.7121912837028503, 0.7224937081336975, 0.7223616242408752, 0.7304186820983887, 0.7333245277404785, 0.7395324110984802, 0.7466648817062378, 0.7424382567405701, 0.7500990629196167, 0.7464007139205933, 0.7465327978134155, 0.755118191242218, 0.7582882046699524, 0.7534011602401733, 0.7626469135284424, 0.7600052952766418, 0.765949010848999, 0.7630431652069092, 0.7692511081695557, 0.769911527633667, 0.7705719470977783, 0.7692511081695557], "val_loss": [1.87925842830113, 1.6663187912532262, 1.261972086770194, 0.9580535888671875, 0.805668694632394, 0.7257872309003558, 0.6954063688005719, 0.6347605671201434, 0.6093299729483468, 0.5932271139962333, 0.5838941165379116, 0.5578262465340751, 0.5499858345304217, 0.5325864042554583, 0.524771009172712, 0.5335832834243774, 0.5099940981183734, 0.5090217760631016, 0.4960352863584246, 0.49375297342027935, 0.4996532542364938, 0.48386645317077637, 0.47689965793064665, 0.48382714816502165, 0.484067508152553, 0.46298839364733013, 0.4633270331791469, 0.4571891001292637, 0.4633199828011649, 0.4483780860900879, 0.452149544443403, 0.4511986970901489, 0.44128991876329693, 0.46290106432778494, 0.4371595212391445, 0.4418713705880301], "val_accuracy": [0.4076666533946991, 0.5533333420753479, 0.6209999918937683, 0.6676666736602783, 0.6990000009536743, 0.7056666612625122, 0.7099999785423279, 0.7353333234786987, 0.7423333525657654, 0.7543333172798157, 0.7390000224113464, 0.7633333206176758, 0.7666666507720947, 0.7766666412353516, 0.7749999761581421, 0.7609999775886536, 0.7856666445732117, 0.7816666960716248, 0.7823333144187927, 0.7726666927337646, 0.7663333415985107, 0.800000011920929, 0.8019999861717224, 0.7796666622161865, 0.7823333144187927, 0.7996666431427002, 0.8066666722297668, 0.800000011920929, 0.784333348274231, 0.8140000104904175, 0.8183333277702332, 0.8009999990463257, 0.8090000152587891, 0.7896666526794434, 0.8149999976158142, 0.8036666512489319]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 3, 1, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [5.275880659624125e+22, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2117353641470213e+26, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 1, 0, 2, 2, 2, 0, 2, 2, 6, 7], [2, 5, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 7, 7, 5, 6, 2, 7, 9, 9, 0, 8], [0, 1, 2, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302180575814308, 2.302231909056948, 2.302804366488262, 2.3050792256618426, 2.314845363052372, 2.3569440642651505], "accuracy": [0.10857218503952026, 0.10381719470024109, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737702778407507, 1.9741397585187639, 1.975362913949149, 1.9805336679731096, 2.0000839233398438, 2.083578314099993], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [5465377468.356153, 824762136706.6543, 14362437152527.25, 99118922385244.89, 441731748273991.0, 1422701508315661.0], "accuracy": [0.09906221181154251, 0.10051512718200684, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09879804402589798], "val_loss": [45230968246.85714, 2438159251163.4287, 26168501731328.0, 142660449711835.44, 534378009442011.44, 1576217525803885.8], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 7, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 2, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [14, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [123870059.02845475, 2352584193.825915, 11147760895.763308, 30497887471.80346, 65670589794.768456, 118718394850.04147], "accuracy": [0.09906221181154251, 0.10051512718200684, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09866596013307571], "val_loss": [463477293.71428573, 3705407707.428571, 12503091785.142857, 29633739044.57143, 57874412105.14286, 100002707163.42857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(sigma, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)))", "other_info": {"loss": [2.302519137754479, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [61, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [263987029.08597183, 2.319158259887957, 2.3043455194252327, 2.303141107207764, 2.3035269296558196, 2.303319505271564, 2.302972681093147], "accuracy": [0.09087307006120682, 0.10130762308835983, 0.09668471664190292, 0.09496764093637466, 0.09813763201236725, 0.09285431355237961, 0.09734513610601425], "val_loss": [2.0024466514587402, 1.9765338897705078, 1.9738258634294783, 1.9743142809186662, 1.9736374446323939, 1.9737180982317244, 1.974062783377511], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.09733333438634872, 0.09733333438634872, 0.10066666454076767, 0.0963333323597908, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 1, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 26, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025647682552215, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 0, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [75, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 1, 0, 2], [49, 63, 57, 12]], "fitness": -0.09971428662538528, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [52705947716.58888, 7866837569482.439, 136413336840581.8, 936866331299734.5, 4167072444439263.5, 1.3395900267878962e+16, 3.683906543569151e+16, 8.61574508467711e+16, 1.8107403892011117e+17, 3.5620669436632096e+17, 6.487875038851116e+17, 1.1009523952241578e+18], "accuracy": [0.09668471664190292, 0.09615638852119446, 0.09496764093637466, 0.09826971590518951, 0.1010434553027153, 0.09747721254825592, 0.09615638852119446, 0.10077928751707077, 0.10302469879388809, 0.09853387624025345, 0.10579843819141388, 0.1014397069811821], "val_loss": [436152715556.5714, 23075414044086.855, 246028908813165.72, 1338436631920640.0, 5009679458650405.0, 1.4781333039780426e+16, 3.696109207143804e+16, 8.188738506333506e+16, 1.6531009576737178e+17, 3.0994592714164986e+17, 5.4740191656602125e+17, 9.202993217126307e+17], "val_accuracy": [0.09099999815225601, 0.09399999678134918, 0.09666666388511658, 0.09833333641290665, 0.09933333098888397, 0.10000000149011612, 0.1003333330154419, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022063493634164, 2.3017734518266546, 2.30344085185724, 2.3022706353070794, 2.3015728506980837, 2.3021442531169507], "accuracy": [0.08796724677085876, 0.09866596013307571, 0.08981640636920929, 0.08955223858356476, 0.09893012791872025, 0.08968432247638702], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [69, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(beta)), sigma)", "other_info": {"loss": [2.3022063493634164, 2.3017734518266546, 2.30344085185724, 2.3022706353070794, 2.3015728506980837, 2.3021442531169507], "accuracy": [0.08796724677085876, 0.09866596013307571, 0.08981640636920929, 0.08955223858356476, 0.09893012791872025, 0.08968432247638702], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [7, 2, 0, 2, 2, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 1, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [6, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(beta), tf.math.add(beta, grad))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), alpha), tf.math.add(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022063493634164, 2.3017734518266546, 2.30344085185724, 2.3022706353070794, 2.3015728506980837, 2.3021442531169507], "accuracy": [0.08796724677085876, 0.09866596013307571, 0.08981640636920929, 0.08955223858356476, 0.09893012791872025, 0.08968432247638702], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3022063493634164, 2.3017734518266546, 2.30344085185724, 2.3022706353070794, 2.3015728506980837, 2.3021442531169507], "accuracy": [0.08796724677085876, 0.09866596013307571, 0.08981640636920929, 0.08955223858356476, 0.09893012791872025, 0.08968432247638702], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]