[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.8054285645484924, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(beta), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.141879886888699, 1.475928646320554, 1.1286097306695675, 0.9414765844570568, 0.835351830853951, 0.8032624561552674, 0.7664549716585553, 0.740865280646784, 0.7226851620788761, 0.6934331071973555, 0.667049498180782, 0.6607086764760005, 0.6466281346404998, 0.638250160045659, 0.647249408598668, 0.6293397339784458, 0.5944660729216295, 0.5878394772080288, 0.5821520100259007, 0.5895118158821889, 0.5704172542853804, 0.5798945621240565, 0.5652521564157144, 0.5592880418799446, 0.532607700696884, 0.5613870320381852, 0.5301268842116071, 0.5310846957327777, 0.5295299077944088], "accuracy": [0.2926958203315735, 0.49465063214302063, 0.6013736724853516, 0.6580372452735901, 0.6907938122749329, 0.6993792057037354, 0.7161537408828735, 0.7161537408828735, 0.7207766771316528, 0.7326641082763672, 0.7503632307052612, 0.7457403540611267, 0.746268630027771, 0.7613261342048645, 0.7474573850631714, 0.7573636174201965, 0.7717606425285339, 0.7778365015983582, 0.7795535326004028, 0.776251494884491, 0.7901201844215393, 0.7779685854911804, 0.7814027070999146, 0.7808743715286255, 0.8001585006713867, 0.7828556299209595, 0.8018755912780762, 0.7979130744934082, 0.8001585006713867], "val_loss": [1.377988576889038, 0.860973732812064, 0.6984557083674839, 0.683359180177961, 0.6394464118140084, 0.6055065904344831, 0.5745443957192558, 0.5378073113305228, 0.5388221911021641, 0.5112415041242327, 0.5189622810908726, 0.4830070563725063, 0.46769271578107563, 0.4969606910433088, 0.4801532881600516, 0.45065583501543316, 0.44893407821655273, 0.4494147300720215, 0.44850242137908936, 0.45456055232456755, 0.44311276503971647, 0.42745344979422434, 0.42965246949877056, 0.41681772470474243, 0.4199585574013846, 0.4157082097870963, 0.41202172211238314, 0.420614983354296, 0.4089506779398237], "val_accuracy": [0.5616666674613953, 0.6513333320617676, 0.6943333148956299, 0.6903333067893982, 0.7146666646003723, 0.7289999723434448, 0.7383333444595337, 0.7549999952316284, 0.7429999709129333, 0.7820000052452087, 0.7680000066757202, 0.8009999990463257, 0.7906666398048401, 0.7726666927337646, 0.7863333225250244, 0.8113333582878113, 0.8106666803359985, 0.8080000281333923, 0.7956666946411133, 0.7963333129882812, 0.8116666674613953, 0.8216666579246521, 0.8180000185966492, 0.8309999704360962, 0.8243333101272583, 0.8309999704360962, 0.8173333406448364, 0.8216666579246521, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1397755155001557, 1.5031277586393164, 1.096114628665467, 0.9728605813039151, 0.8716791639821152, 0.7893202866561314, 0.7940568983861878, 0.7264611653333106, 0.7082291665944472, 0.7050571647759174, 0.7090951953471502, 0.6853885303052535, 0.6517184872306679, 0.6352326726129326, 0.6215767016059388, 0.6389641051893268, 0.6123692602245894, 0.595217180628393, 0.5789260030769008, 0.6082824560487747], "accuracy": [0.3016774654388428, 0.47972527146339417, 0.6096948981285095, 0.6373002529144287, 0.6762647032737732, 0.7135120630264282, 0.7014925479888916, 0.7209087014198303, 0.7367587089538574, 0.7280412316322327, 0.735041618347168, 0.7329282760620117, 0.7592127919197083, 0.7601373791694641, 0.7663452625274658, 0.7602694630622864, 0.7622507214546204, 0.7725531458854675, 0.7829877138137817, 0.770439863204956], "val_loss": [1.357344423021589, 0.8411074876785278, 0.7368043831416539, 0.6315552166530064, 0.6319864307131086, 0.5609261989593506, 0.5265064239501953, 0.5590704509190151, 0.5098401989255633, 0.6491935934339251, 0.5704091787338257, 0.49015261445726666, 0.4636757033211844, 0.4742439474378313, 0.4499842609677996, 0.46422295910971506, 0.4506349563598633, 0.44976227624075754, 0.4673604794910976, 0.4680236577987671], "val_accuracy": [0.5839999914169312, 0.6653333306312561, 0.6850000023841858, 0.7056666612625122, 0.7266666889190674, 0.7606666684150696, 0.7613333463668823, 0.749666690826416, 0.7823333144187927, 0.7200000286102295, 0.7490000128746033, 0.7886666655540466, 0.7950000166893005, 0.7886666655540466, 0.8086666464805603, 0.7786666750907898, 0.7839999794960022, 0.8036666512489319, 0.7886666655540466, 0.7806666493415833]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.682285726070404, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.294546436876149, 2.1873369992228073, 1.6643794499462654, 1.3583258399244125, 0.9985043054652992, 0.8875106753469726, 0.8422375445541626, 0.7594155054271277, 0.7234046018559778, 0.670711304926995, 0.6715757723387442, 0.6581785144145856, 0.6335358341151791, 0.6351925516172627, 0.6346417029126603, 0.6404243702145931, 0.6506518302356185, 0.6615870263220344, 0.702542303654307], "accuracy": [0.11002509295940399, 0.30603620409965515, 0.46585655212402344, 0.5802403688430786, 0.637828528881073, 0.6723021864891052, 0.6869634389877319, 0.7165499925613403, 0.7349095344543457, 0.7449478507041931, 0.7540615797042847, 0.7474573850631714, 0.7625148296356201, 0.7574957013130188, 0.7718927264213562, 0.7601373791694641, 0.759080708026886, 0.7565711140632629, 0.7568352818489075], "val_loss": [1.934202057974679, 1.6705058642796107, 0.8807351929800851, 0.6744612966264997, 0.6453463179724557, 0.585533687046596, 0.5788052082061768, 0.4828975200653076, 0.4873037508555821, 0.470279335975647, 0.44215037141527447, 0.43066838809422087, 0.4322082315172468, 0.44512014729636057, 0.46715971401759554, 0.4261643205370222, 0.45419793469565256, 0.5833199875695365, 0.4809046472821917], "val_accuracy": [0.34299999475479126, 0.4713333249092102, 0.6423333287239075, 0.7086666822433472, 0.7269999980926514, 0.734333336353302, 0.7553333044052124, 0.7900000214576721, 0.7933333516120911, 0.7923333048820496, 0.8003333210945129, 0.809333324432373, 0.8186666369438171, 0.8196666836738586, 0.7906666398048401, 0.8146666884422302, 0.8146666884422302, 0.7903333306312561, 0.7973333597183228]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [9, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [40, 63, 4, 45, 89, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024873947974416, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8, 4, 0, 0, 2, 9, 6, 1, 2, 8, 4, 3, 6], [1, 3, 0, 0, 0, 0, 2, 0, 3, 0, 2, 3, 2], [75, 63, 56, 45, 65, 1, 93]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 36, 23, 13, 7], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(sigma), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.subtract(tf.math.add(tf.math.sqrt(beta), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)), tf.math.pow(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(sigma, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024873947974416, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8, 5, 7, 6, 1, 0, 3, 6, 4, 4, 3, 6, 4, 3, 2, 2, 8, 5, 0, 1, 7, 7, 9, 4, 4, 1, 8, 5, 7, 5, 4, 7, 1, 8, 3, 9, 1, 7, 5, 0, 5, 9], [1, 2, 0, 0, 3, 0, 2, 2, 1, 2, 3, 2, 2, 1, 1, 3, 2, 1, 2, 3, 3, 2, 0, 2, 0, 0, 3, 3, 0], [40, 63, 56, 61, 41, 50, 78, 67, 28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 81, 52, 29, 10], "tree_depth": 42, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(tf.math.negative(tf.math.sqrt(beta)), tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.pow(sigma, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.sqrt(beta)), alpha))), tf.math.square(tf.math.negative(tf.math.subtract(beta, tf.math.add(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), sigma), beta))))), beta), alpha)), tf.math.pow(tf.math.pow(alpha, tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.add(sigma, tf.math.square(beta)))), tf.math.pow(tf.math.add(tf.math.subtract(alpha, beta), tf.math.sqrt(tf.math.multiply(sigma, sigma))), beta))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.square(sigma)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), sigma), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09259014576673508, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 8, 0, 0, 4, 0, 8], [1, 0, 0, 2, 0, 2, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))), tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1], [3, 6, 0, 6, 2, 3, 0, 0, 4, 0, 8, 3, 8, 3], [1, 2, 0, 2, 3, 0, 2, 2, 1], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 23, 14, 9, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, beta), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta), tf.math.pow(tf.math.negative(sigma), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(beta), tf.math.multiply(beta, alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 6, 2, 5, 1, 9, 4, 0, 8], [0, 2, 3, 2, 3, 0, 0, 2, 2, 0, 1, 0, 1, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(beta)))", "other_info": {"loss": [2.3024873947974416, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 3, 0, 1, 0, 5, 0, 0, 3, 4, 8, 1, 9, 1, 0, 2, 2, 2, 0, 4, 8, 1, 3], [1, 3, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.multiply(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 1], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 2, 2, 3, 0, 2], [75, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022173909053922, 2.3097823566811635, 6459222066084.236, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.08994849026203156, 0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9711480140686035, 1.9750806263514928, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.024666666984558105, 0.023666666820645332, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))), sigma))", "other_info": {"loss": [1.3261396213252247e+28, 8.249538956978348, 15.432391170843827, 22.63075737152684, 29.832412944446546, 37.041713887926235], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.568514960152762, 10.682253973824638, 16.851885659354075, 23.024097442626953, 29.203453063964844, 35.380196707589285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3024873947974416, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 2, 0, 2, 3, 0, 2], [7, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 12, 7, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.subtract(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1, 0, 1, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [7, 5], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 3, 0, 0, 4, 0, 8], [1, 2, 0, 2, 0, 1, 2], [40, 63, 40, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(alpha, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 0, 6, 2, 5, 1, 9, 4, 0, 8], [1, 3, 1, 0, 0, 0, 2], [42, 63, 4, 45, 89, 83]], "fitness": -0.07885714620351791, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 13, 8, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(sigma, tf.math.square(alpha)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1093725427.280788, 15291023025.38423, 47654723929.1655, 99761544248.67097, 174095827292.41156, 269876802816.57483, 394448214459.35913, 517904725198.80176, 669353202746.5646, 834543449792.5326, 1084756241487.9344, 1315085913655.927, 1517293313235.4004, 1841094032676.552, 2125120269705.7212, 2539810716414.8843, 2756026604218.717, 3200056404838.2173], "accuracy": [0.09325055778026581, 0.061154406517744064, 0.05943732708692551, 0.062475234270095825, 0.06392814964056015, 0.06379606574773788, 0.06524897366762161, 0.06524897366762161, 0.06656980514526367, 0.06524897366762161, 0.0676264688372612, 0.07290978729724884, 0.07370228320360184, 0.06987188011407852, 0.07251353561878204, 0.07224937528371811, 0.06973979622125626, 0.07898560166358948], "val_loss": [5490863104.0, 27021970870.857143, 64538364196.57143, 118169094436.57143, 188185364772.57144, 274884919296.0, 378637694683.4286, 499837810395.4286, 639019871670.8572, 796782100480.0, 973623338130.2858, 1169986607981.7144, 1386357569243.4285, 1623212724809.1428, 1881064491300.5715, 2160483893248.0, 2461922979254.857, 2785867577051.4287], "val_accuracy": [0.03433333337306976, 0.029999999329447746, 0.0273333340883255, 0.030666666105389595, 0.03566666692495346, 0.0403333343565464, 0.04866666719317436, 0.057999998331069946, 0.06966666877269745, 0.0793333351612091, 0.08366666734218597, 0.08399999886751175, 0.0846666693687439, 0.08366666734218597, 0.0833333358168602, 0.0833333358168602, 0.0833333358168602, 0.08266666531562805]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [3, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 1], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [14], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 2, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301745697239906, 2.3024911913243833, 2.3025213525185353, 2.3023458973543596, 2.3016938747211517, 2.302646956691306], "accuracy": [0.09113723784685135, 0.09140139818191528, 0.0886276587843895, 0.09060890227556229, 0.09391097724437714, 0.09259014576673508], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 2, 0, 2, 3, 0, 2], [92, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.3017434840189104, 2.302483260718162, 2.302507622807868, 2.3023243813608554, 2.3016679785144865, 2.3026151481699464, 2.303823528225553], "accuracy": [0.09113723784685135, 0.09166556596755981, 0.08849557489156723, 0.09047681838274002, 0.09417514503002167, 0.09272222965955734, 0.08942015469074249], "val_loss": [1.9703824179513114, 1.9703797612871443, 1.970376968383789, 1.970374243600028, 1.9703717912946428, 1.9703689983912878, 1.9703664098467146], "val_accuracy": [0.03633333370089531, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03633333370089531, 0.03633333370089531, 0.035999998450279236]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [25], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 6, 2, 5, 1, 9, 4, 0, 8], [1, 3, 0, 0, 0, 0, 2], [40, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))), alpha)), tf.math.add(alpha, tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017456657488773, 2.3024908854520207, 2.302520371824916, 2.302343558169249, 2.3016894167881317, 2.3026403707835055], "accuracy": [0.09113723784685135, 0.09140139818191528, 0.0886276587843895, 0.09060890227556229, 0.09391097724437714, 0.09272222965955734], "val_loss": [1.9703850746154785, 1.9703847340175085, 1.9703837122235979, 1.9703822135925293, 1.9703804424830846, 1.9703784670148576], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]