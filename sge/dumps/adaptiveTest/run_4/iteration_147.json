[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7985714077949524, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2733796588213466, 2.1797816568535113, 1.9786607400065068, 1.656179612763979, 1.3752324644600664, 1.1973678155298704, 1.09528649664196, 1.0226414025640758, 0.9592255568066608, 0.9195048440606477, 0.8846730043261105, 0.8642295815248405, 0.8384748582259901, 0.819327668286491, 0.8082901464555997, 0.780406682900056, 0.7764604970401446, 0.7668728406686572, 0.7515846208779094, 0.7416330095547349, 0.7366687945166379, 0.7280090245131756, 0.7161787352573288, 0.6994318710168937, 0.7049267249116178, 0.692955809648184, 0.6936126413236378, 0.6708747936498062, 0.6724419300157192, 0.6775927807298775, 0.671155836981805, 0.6554617938537481, 0.6582861095135474, 0.6494047801256211, 0.6418130070683569, 0.6420811101225437, 0.628152008746924, 0.6292126550256868, 0.63435522248921, 0.6199826612810748, 0.6265936556147106, 0.6174920356552347, 0.6197184230421261, 0.6075611508375995, 0.6164371644847538, 0.6042288086276092, 0.6063011302656391, 0.5994354849714472, 0.5975930186987648, 0.5970173793430452, 0.58698910582634, 0.5863889907770279, 0.5904714516471673, 0.5844372327081153, 0.5827939946732391, 0.5778289686309317, 0.582771020574246, 0.5714059521210051, 0.5735962539301132, 0.574572884072843], "accuracy": [0.15876370668411255, 0.3249240517616272, 0.4209483563899994, 0.48870691657066345, 0.5414080023765564, 0.5872408151626587, 0.6139215230941772, 0.6336019039154053, 0.6606789231300354, 0.6709813475608826, 0.6823405027389526, 0.6892088055610657, 0.6947563290596008, 0.7063795924186707, 0.709021270275116, 0.7174745798110962, 0.7187954187393188, 0.724210798740387, 0.7318716049194336, 0.7288337349891663, 0.7323999404907227, 0.7320036888122559, 0.7376832365989685, 0.7436270117759705, 0.7408532500267029, 0.7423061728477478, 0.7498348951339722, 0.755118191242218, 0.7547219395637512, 0.7498348951339722, 0.7555144429206848, 0.7601373791694641, 0.7572315335273743, 0.7581561207771301, 0.7677981853485107, 0.763967752456665, 0.7652885913848877, 0.7656848430633545, 0.7707040309906006, 0.7784969210624695, 0.7664773464202881, 0.7750627398490906, 0.7713643908500671, 0.7765156626701355, 0.7737419009208679, 0.7775723338127136, 0.7759873270988464, 0.7783648371696472, 0.7848368883132935, 0.7784969210624695, 0.787082314491272, 0.7827235460281372, 0.7864218950271606, 0.7889314293861389, 0.7882710099220276, 0.7886672616004944, 0.7841764688491821, 0.7897239327430725, 0.7905164361000061, 0.7901201844215393], "val_loss": [1.9004395348685128, 1.765617983681815, 1.4845376695905412, 1.1464109080178397, 0.9296778610774449, 0.8080172368458339, 0.7350467954363141, 0.6952929496765137, 0.6506767613547189, 0.6254244361604963, 0.605243444442749, 0.5965045860835484, 0.5815282378877912, 0.5680516958236694, 0.5691649573189872, 0.5426262446812221, 0.5383896657398769, 0.5400502852031163, 0.5150619574955532, 0.5144741705485752, 0.5192469017846244, 0.4997698409216745, 0.5034675938742501, 0.4915449619293213, 0.4860925163541521, 0.4802342653274536, 0.4809578997748239, 0.4715193510055542, 0.47397254194532124, 0.46903084005628315, 0.4605924231665475, 0.4583702087402344, 0.46075609752110075, 0.45182933126177105, 0.45014837809971403, 0.44973628861563547, 0.4534632478441511, 0.45090952941349577, 0.4418660742895944, 0.4384825314794268, 0.43732693365642, 0.4396305424826486, 0.4335295983723232, 0.42749059200286865, 0.42778509855270386, 0.43680258308138165, 0.42084382261548725, 0.4188809650284903, 0.42788052558898926, 0.4230802059173584, 0.41950301613126484, 0.4173115406717573, 0.4185378636632647, 0.413820173059191, 0.4127260872295925, 0.4124892609460013, 0.4149484634399414, 0.41088398013796124, 0.41171269757407053, 0.40708042042596], "val_accuracy": [0.4233333468437195, 0.5199999809265137, 0.5776666402816772, 0.6179999709129333, 0.6830000281333923, 0.6863333582878113, 0.7160000205039978, 0.7116666436195374, 0.7353333234786987, 0.7379999756813049, 0.7453333139419556, 0.7423333525657654, 0.7593333125114441, 0.7583333253860474, 0.7396666407585144, 0.7553333044052124, 0.7733333110809326, 0.7546666860580444, 0.7816666960716248, 0.7823333144187927, 0.7593333125114441, 0.7929999828338623, 0.7906666398048401, 0.7910000085830688, 0.7919999957084656, 0.7993333339691162, 0.7913333177566528, 0.793666660785675, 0.7960000038146973, 0.8016666769981384, 0.8103333115577698, 0.8080000281333923, 0.800000011920929, 0.812333345413208, 0.8153333067893982, 0.8043333292007446, 0.8009999990463257, 0.8073333501815796, 0.8153333067893982, 0.8206666707992554, 0.8203333616256714, 0.8046666383743286, 0.8236666917800903, 0.8226666450500488, 0.8209999799728394, 0.8130000233650208, 0.828000009059906, 0.8226666450500488, 0.8130000233650208, 0.8190000057220459, 0.8183333277702332, 0.831333339214325, 0.8256666660308838, 0.8299999833106995, 0.8326666951179504, 0.8316666483879089, 0.8190000057220459, 0.8306666612625122, 0.8276666402816772, 0.8326666951179504]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2471666612865713, 1.9608116239966686, 1.434613529984914, 1.144220952281642, 1.0162362722342182, 0.9459592236299178, 0.8975448533056151, 0.8439445889322057, 0.8219600995266206, 0.787020621101665, 0.7671863856946693, 0.769969389895564, 0.7384497693674266, 0.7252907394071721, 0.7162786604249325, 0.6998330097881211, 0.6927690954649878, 0.684154176905706, 0.6684499454299897, 0.6630928024419341, 0.6558483707953626, 0.6537866430543339, 0.6377926420352997, 0.6244463456887862, 0.6416676383307581, 0.623274084331652, 0.6247443760296357], "accuracy": [0.21278563141822815, 0.4167217016220093, 0.5283318161964417, 0.599128246307373, 0.6474705934524536, 0.6604147553443909, 0.674679696559906, 0.6921146512031555, 0.7010962963104248, 0.7112666964530945, 0.7181349992752075, 0.7129837274551392, 0.7272487282752991, 0.7318716049194336, 0.7409853339195251, 0.739400327205658, 0.7474573850631714, 0.7478536367416382, 0.7531369924545288, 0.7543256878852844, 0.7556465268135071, 0.7567031979560852, 0.7622507214546204, 0.7687227725982666, 0.761590301990509, 0.7655527591705322, 0.7689869403839111], "val_loss": [1.8145954949515206, 1.319875751222883, 0.8912843295506069, 0.7478070769991193, 0.6844577789306641, 0.6489656823022025, 0.6131779296057565, 0.5821303469794137, 0.5549434082848685, 0.5453002282551357, 0.5355026381356376, 0.5270450115203857, 0.5245004551751273, 0.5122676406587873, 0.5236584459032331, 0.49779198850904194, 0.49589518138340544, 0.49000699179513113, 0.46223086970193045, 0.47276445797511507, 0.47875326020377024, 0.45610097476414274, 0.46971055439540316, 0.47300277437482563, 0.44157741750989643, 0.43697817836488995, 0.4453651990209307], "val_accuracy": [0.5046666860580444, 0.6196666955947876, 0.687666654586792, 0.7046666741371155, 0.7110000252723694, 0.7099999785423279, 0.7310000061988831, 0.7456666827201843, 0.7649999856948853, 0.7590000033378601, 0.7609999775886536, 0.7586666941642761, 0.762333333492279, 0.7793333530426025, 0.7523333430290222, 0.7616666555404663, 0.7836666703224182, 0.7689999938011169, 0.8069999814033508, 0.7996666431427002, 0.7770000100135803, 0.8163333535194397, 0.796999990940094, 0.8009999990463257, 0.8109999895095825, 0.8136666417121887, 0.812333345413208]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.7845714092254639, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.247167605167178, 1.9608342962305323, 1.4347485626504375, 1.1442485024286315, 1.0158656572212301, 0.9456676603733446, 0.8985349452884489, 0.8442644990981609, 0.8229833175603504, 0.7858965587480555, 0.7690959929113044, 0.7694969366270994, 0.7381157520944416, 0.7241723206553083, 0.7174401243979102, 0.6990426413812311, 0.6929217509432334, 0.6832549224408736, 0.6669952036241389, 0.6635236612652365, 0.6560829796763994, 0.6535792148675366, 0.6377880175068645, 0.6236897527722792, 0.6424076552514497, 0.6225417609290991, 0.6265870126687839], "accuracy": [0.21278563141822815, 0.4169858694076538, 0.5284639000892639, 0.599128246307373, 0.6474705934524536, 0.6616035103797913, 0.6754721999168396, 0.6917183995246887, 0.6999075412750244, 0.713379979133606, 0.7157574892044067, 0.7120591998100281, 0.7288337349891663, 0.7334566116333008, 0.7392682433128357, 0.7401928305625916, 0.7453441023826599, 0.7483819723129272, 0.7530049085617065, 0.7541936039924622, 0.757099449634552, 0.7582882046699524, 0.763967752456665, 0.770439863204956, 0.7621186375617981, 0.7666094303131104, 0.7656848430633545], "val_loss": [1.8146085739135742, 1.3199524879455566, 0.8913846356528146, 0.7479599033083234, 0.6829886436462402, 0.6493255751473563, 0.6132903950554984, 0.5835056815828595, 0.5537796701703753, 0.5476969310215541, 0.536011951310294, 0.5271729741777692, 0.5233887434005737, 0.5111497981207711, 0.5226091827665057, 0.49960316930498394, 0.4920757327760969, 0.4870973825454712, 0.46172310624803814, 0.4716705254146031, 0.47899554456983295, 0.45739008699144634, 0.46744041783469065, 0.4721748317990984, 0.44207535471235004, 0.4360174707004002, 0.44636641229901997], "val_accuracy": [0.5046666860580444, 0.6193333268165588, 0.6880000233650208, 0.7046666741371155, 0.7139999866485596, 0.7099999785423279, 0.7306666374206543, 0.7443333268165588, 0.7643333077430725, 0.7540000081062317, 0.7580000162124634, 0.7596666812896729, 0.7639999985694885, 0.781333327293396, 0.750333309173584, 0.7633333206176758, 0.7866666913032532, 0.7706666588783264, 0.8086666464805603, 0.8023333549499512, 0.7789999842643738, 0.8173333406448364, 0.8003333210945129, 0.8036666512489319, 0.809333324432373, 0.8166666626930237, 0.8090000152587891]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 1, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 38], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 3, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.7842857241630554, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.247166499359701, 1.960808391521289, 1.4347230179781265, 1.1443677487673776, 1.0163162724453114, 0.9459541049914951, 0.89780528379107, 0.843936358098388, 0.8222868559682027, 0.7858260336836741, 0.7671961687134241, 0.7691096094274691, 0.7384184079084571, 0.7240720510624498, 0.7164778996531076, 0.6996116143616986, 0.6945058426458948, 0.6833856367337438, 0.667463352667295, 0.6636467408337188, 0.6560418383399053, 0.6535955852977887, 0.6368839262483174, 0.6252999487349606, 0.6416001891289972, 0.6226575000332394, 0.623626572022018], "accuracy": [0.21265354752540588, 0.4171179533004761, 0.5285959839820862, 0.599128246307373, 0.6474705934524536, 0.6602826714515686, 0.6750759482383728, 0.6923788189888, 0.7008321285247803, 0.7128516435623169, 0.7172104120254517, 0.7129837274551392, 0.7272487282752991, 0.733588695526123, 0.7401928305625916, 0.7392682433128357, 0.7452120184898376, 0.7479857206344604, 0.752740740776062, 0.752740740776062, 0.7560427784919739, 0.757099449634552, 0.7651565074920654, 0.7691190242767334, 0.7629110813140869, 0.7652885913848877, 0.7696473598480225], "val_loss": [1.8145905222211565, 1.319876296179635, 0.8914873600006104, 0.7481487648827689, 0.6829464776175362, 0.6489637408937726, 0.6122993741716657, 0.5826056344168526, 0.5534424611500331, 0.5461758375167847, 0.5364391463143485, 0.5271311487470355, 0.5240288972854614, 0.5122971705027989, 0.5219100202832904, 0.4999297005789621, 0.49439678873334614, 0.4890170097351074, 0.46193645681653706, 0.4716442823410034, 0.47926601341792513, 0.4565066269465855, 0.470400265284947, 0.4726101670946394, 0.44135723795209614, 0.436643864427294, 0.4446498155593872], "val_accuracy": [0.5046666860580444, 0.6190000176429749, 0.687333345413208, 0.7043333053588867, 0.7133333086967468, 0.7099999785423279, 0.7319999933242798, 0.7453333139419556, 0.7663333415985107, 0.7556666731834412, 0.7573333382606506, 0.7599999904632568, 0.762333333492279, 0.7803333401679993, 0.7526666522026062, 0.7603333592414856, 0.7863333225250244, 0.7710000276565552, 0.8069999814033508, 0.8013333082199097, 0.7796666622161865, 0.8169999718666077, 0.7983333468437195, 0.8006666898727417, 0.8100000023841858, 0.8143333196640015, 0.8106666803359985]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 22], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.551714301109314, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1307148564178333, 1.27811842526994, 0.9069199269836007, 0.8151307401325188, 0.7608742161733032, 0.6907799259357607, 0.6458212751297352, 0.6114413904917002, 0.5844625995978231, 0.5652950940083645, 0.5436087070895759, 0.5243201203759414, 0.5275702723233675, 0.5030423102086293, 0.5001984042986556, 0.4998361899742219, 0.48881309679738283, 0.473054359176801, 0.4664469392363264, 0.4674683323767459, 0.4644847817275156, 0.45254939106855063, 0.45905252608955655, 0.4581049493416945, 0.4519214916616588, 0.4537803804389458], "accuracy": [0.2801479399204254, 0.5612204670906067, 0.6671509742736816, 0.6901333928108215, 0.7129837274551392, 0.7395324110984802, 0.7528728246688843, 0.7695152759552002, 0.7769119143486023, 0.7792893648147583, 0.7985734939575195, 0.7985734939575195, 0.8018755912780762, 0.8074230551719666, 0.805177628993988, 0.8017435073852539, 0.8109893202781677, 0.8204993009567261, 0.8208954930305481, 0.8191784620285034, 0.8212917447090149, 0.8255184292793274, 0.8173292875289917, 0.8265751004219055, 0.8294808864593506, 0.8187822103500366], "val_loss": [1.0992349215916224, 0.7525426660265241, 0.5809077194758824, 0.5574707984924316, 0.4882659230913435, 0.46187705653054373, 0.44823150975363596, 0.42548997913088116, 0.40438807010650635, 0.39476499387196134, 0.3871392777987889, 0.38350486755371094, 0.38246881110327585, 0.358569187777383, 0.3804548042161124, 0.3846006989479065, 0.37076285055705477, 0.3504066637584141, 0.3662190692765372, 0.356538610798972, 0.35430710656302317, 0.36235359736851286, 0.34935793706348967, 0.36428676332746235, 0.3440351741654532, 0.39105451107025146], "val_accuracy": [0.5996666550636292, 0.6956666707992554, 0.7390000224113464, 0.7549999952316284, 0.784333348274231, 0.7886666655540466, 0.8059999942779541, 0.8059999942779541, 0.8183333277702332, 0.8309999704360962, 0.8356666564941406, 0.8366666436195374, 0.8413333296775818, 0.8496666550636292, 0.8370000123977661, 0.8403333425521851, 0.8399999737739563, 0.8603333234786987, 0.8496666550636292, 0.8560000061988831, 0.8610000014305115, 0.8546666502952576, 0.8606666922569275, 0.8560000061988831, 0.8550000190734863, 0.856333315372467]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0, 0, 1, 2], [96, 12, 93], [0, 0, 1], [1, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [95], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [1.4857441275281296e+23, 1.7654066827191373e+23, 1.736171139933454e+23, 1.7630882571843596e+23, 1.718598066063007e+23, 1.6907572536401797e+23], "accuracy": [0.10236428678035736, 0.09840179979801178, 0.10157178342342377, 0.1018359512090683, 0.10170386731624603, 0.10038304328918457], "val_loss": [1.3447956939653911e+23, 1.3447956939653911e+23, 1.3447956939653911e+23, 1.3447956939653911e+23, 1.3447956939653911e+23, 1.3447956939653911e+23], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 12, 8, 4, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17369.120979350555, 2.3027473897068584, 2.302747885281179, 2.302747795689202, 2.302748584098599, 2.3027483053085214], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973592826298305, 1.973592690059117, 1.973592962537493, 1.973593030657087, 1.973592826298305, 1.973593303135463], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 0, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 3, 0, 1, 2, 2, 1, 1, 0, 9, 6, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.negative(tf.math.add(tf.math.square(alpha), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21820102632045746, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [67], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 2, 2, 1, 0, 2, 3, 2, 2, 2, 3, 2, 2, 0, 1], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298168.52111826156, 5526135.965658434, 25263510.896314885, 70601478.32096156, 152769817.5691454, 279351748.7592128], "accuracy": [0.09179764986038208, 0.09893012791872025, 0.10328886657953262, 0.10196803510189056, 0.09893012791872025, 0.09549596905708313], "val_loss": [1083665.5, 8624500.285714285, 29058834.285714287, 68822998.85714285, 134353019.42857143, 232085435.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [3, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [8, 7, 1, 0, 6, 4, 0, 2, 4], [0, 5, 0, 5, 0], [7, 1, 19], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 6, 0, 4, 0, 8], [3, 1, 2, 2, 1, 0, 2, 3, 2, 2, 2, 3, 2, 2, 0, 1], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 12, 7, 2, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(alpha))), alpha))))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), grad))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0], [1, 1, 1, 0], [1, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [62, 79], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 2, 0, 0, 3, 0, 2, 3, 2, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [42209253224.08708, 6093380943183.833, 102869378018223.8, 734656853365346.8, 3282340992500757.0, 1.0709974947969208e+16], "accuracy": [0.09179764986038208, 0.09893012791872025, 0.10315678268671036, 0.1022322028875351, 0.09932637959718704, 0.0956280529499054], "val_loss": [335523385929.1429, 18087702916534.855, 194145972312941.72, 1058442728664502.9, 3964415415306532.5, 1.1693490844991488e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 62], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4.33099702793011, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.035926561802625656, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1236.743896484375, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [67], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [7, 3], [0, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [298168.52111826156, 5526135.965658434, 25263510.896314885, 70601478.32096156, 152769817.5691454, 279351748.7592128], "accuracy": [0.09179764986038208, 0.09893012791872025, 0.10328886657953262, 0.10196803510189056, 0.09893012791872025, 0.09549596905708313], "val_loss": [1083665.5, 8624500.285714285, 29058834.285714287, 68822998.85714285, 134353019.42857143, 232085435.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 1, 2, 2, 2], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8, 5, 7, 3, 8, 4, 8, 2, 4, 2, 0, 4, 4, 4, 4, 8, 8], [3, 1, 2, 3, 2, 0, 2, 3, 2, 2, 2, 3, 2, 2, 0, 1], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 3, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 11, 6, 5, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(alpha, tf.math.pow(grad, grad))))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.negative(sigma), alpha), tf.math.divide_no_nan(tf.math.add(beta, sigma), tf.math.square(beta)))", "other_info": {"loss": [2.3032074371711246, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 3, 0, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 3, 3, 3, 3, 0, 1, 2, 2, 1, 1, 0, 12, 8, 4, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(sigma)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032429039108284, 2.30339857864657, 2.3053571565386455, 2.3175065514276434, 2.352945148196943, 2.5112275714493855, 3.107059690190533, 3.6416678798984403, 5.632375224391467, 9.934778918018273, 17.594156573870873, 35.28743557620751, 58.049475873796744, 65.7064542597815, 93.29039810557549, 123.34753695291346], "accuracy": [0.09628847241401672, 0.09721305221319199, 0.09866596013307571, 0.09615638852119446, 0.09668471664190292, 0.09470347315073013, 0.10130762308835983, 0.09787346422672272, 0.10394927859306335, 0.09708096832036972, 0.09813763201236725, 0.09919429570436478, 0.09906221181154251, 0.1010434553027153, 0.10011887550354004, 0.1014397069811821], "val_loss": [1.973776068006243, 1.9751456805637904, 1.9789280210222517, 1.9880599975585938, 2.073808397565569, 2.2756649426051547, 3.0559403555733815, 3.596296582903181, 6.736636161804199, 17.2597165788923, 23.095720563616073, 43.16326686314174, 64.42514256068638, 59.64799935477121, 103.07657078334263, 126.80211966378349], "val_accuracy": [0.10000000149011612, 0.09733333438634872, 0.10000000149011612, 0.10133333504199982, 0.10000000149011612, 0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0963333323597908, 0.10366666316986084, 0.10300000011920929, 0.10366666316986084, 0.10000000149011612, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [1, 0, 0], [8, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [67], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 3, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1.2856032916108904e+21, 1.4567072562641161e+21, 1.4534933947401647e+21, 1.4460383195356607e+21, 1.4445221935361997e+21, 1.4492634086060547e+21], "accuracy": [0.09417514503002167, 0.09589222073554993, 0.10117553919553757, 0.09496764093637466, 0.09628847241401672, 0.1022322028875351], "val_loss": [1.0890048906881884e+21, 1.0890048906881884e+21, 1.0890048906881884e+21, 1.0890048906881884e+21, 1.0890048906881884e+21, 1.0890048906881884e+21], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 1, 1], [0, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.302390804632134, 2.3030176974558447, 2.302617452053614, 2.3032521653279274, 2.3026234488272475, 2.304553601846026], "accuracy": [0.08757099509239197, 0.09285431355237961, 0.08994849026203156, 0.08677849918603897, 0.09126931428909302, 0.0882314071059227], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [0, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302390804632134, 2.3030176974558447, 2.302617452053614, 2.3032521653279274, 2.3026234488272475, 2.304553601846026], "accuracy": [0.08757099509239197, 0.09285431355237961, 0.08994849026203156, 0.08677849918603897, 0.09126931428909302, 0.0882314071059227], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [85, 78], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 0, 1, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [36, 63, 56, 11]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), sigma)", "other_info": {"loss": [2.302390804632134, 2.3030176974558447, 2.302617452053614, 2.3032521653279274, 2.3026234488272475, 2.304553601846026], "accuracy": [0.08757099509239197, 0.09285431355237961, 0.08994849026203156, 0.08677849918603897, 0.09126931428909302, 0.0882314071059227], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 7, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.03628571331501007, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [2.3024854062649363, 2.3034394769904134, 2.303349443698178, 2.3042867736667767, 2.30392502749585, 2.3064736472522704], "accuracy": [0.08730682730674744, 0.09232597798109055, 0.08757099509239197, 0.08691058307886124, 0.08809932321310043, 0.08611807972192764], "val_loss": [1.9705470630100794, 1.9707541465759277, 1.9709625244140625, 1.97117280960083, 1.9713923590523856, 1.9716717175074987], "val_accuracy": [0.03466666489839554, 0.033666666597127914, 0.03266666829586029, 0.029666665941476822, 0.03033333271741867, 0.029333332553505898]}}]