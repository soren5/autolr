[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.02160212115337, 1.6500701884772437, 1.1097810255884415, 0.9659392294425848, 0.8247938146523166, 0.7756332481982858, 0.7275798321400084, 0.6993701547805454, 0.6664626638509216, 0.6512184444750462, 0.632254122916214, 0.5969439403822772, 0.5764724559567277, 0.569844772157227, 0.5557411909497031, 0.5226890962231885, 0.5329549235674715], "accuracy": [0.3214899003505707, 0.45344075560569763, 0.6000528335571289, 0.637432336807251, 0.6922467350959778, 0.7033417224884033, 0.7219653725624084, 0.724739134311676, 0.7442874312400818, 0.7475894689559937, 0.759080708026886, 0.7647602558135986, 0.7791573405265808, 0.7771760821342468, 0.7837802171707153, 0.8021397590637207, 0.7947431206703186], "val_loss": [1.806530135018485, 0.9374991485050747, 0.6470234223774501, 0.6127208982195173, 0.5678272247314453, 0.5724145174026489, 0.5688583680561611, 0.6035068716321673, 0.4718816450663975, 0.5247619322368077, 0.45803933484213694, 0.4370483585766384, 0.45140726225716726, 0.4551478454044887, 0.41492741448538645, 0.435397744178772, 0.4134844626699175], "val_accuracy": [0.3556666672229767, 0.5730000138282776, 0.7283333539962769, 0.7236666679382324, 0.7523333430290222, 0.746999979019165, 0.737333357334137, 0.7269999980926514, 0.8053333163261414, 0.746999979019165, 0.7979999780654907, 0.8226666450500488, 0.8046666383743286, 0.7876666784286499, 0.8166666626930237, 0.8090000152587891, 0.8223333358764648]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [75, 63, 57, 12]], "fitness": -0.5117142796516418, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(sigma, alpha)))", "other_info": {"loss": [3.201544299369412, 2.3399605039025437, 2.312317346742424, 2.3129878456975805, 2.3031946063718745, 2.3028179571345464, 2.3025199905315397, 2.3013554408235035, 2.267749933062165, 2.2145313676542626, 2.1211254366510786, 2.320415504352528, 2.3469250816883838, 3.4034289583758657, 2.3072035767697954, 2.303567226867414], "accuracy": [0.17976489663124084, 0.146479994058609, 0.1842557191848755, 0.09734513610601425, 0.09576013684272766, 0.10210011899471283, 0.108440101146698, 0.11293092370033264, 0.17659489810466766, 0.20631356537342072, 0.258090078830719, 0.17910447716712952, 0.13155461847782135, 0.15955619513988495, 0.09866596013307571, 0.09998679161071777], "val_loss": [1.9795092173985072, 1.9752087593078613, 2.019386495862688, 1.9735609463282995, 1.9736131259373255, 1.9734025682721819, 1.9728817258562361, 1.9699174336024694, 1.9736309051513672, 1.9640651430402483, 1.6105516978672572, 1.7135363987513952, 1.9615471703665597, 1.9805487905229842, 1.9745939799717493, 1.973966121673584], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10366666316986084, 0.10300000011920929, 0.09666666388511658, 0.09700000286102295, 0.1353333294391632, 0.20033332705497742, 0.10499999672174454, 0.10700000077486038, 0.4983333349227905, 0.31566667556762695, 0.18266665935516357, 0.10000000149011612, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 4, 6, 7, 2, 0, 4], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 5, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [89, 63, 57, 12]], "fitness": -0.326285719871521, "mapping_values": [1, 1, 1, 0, 1, 0, 36, 36, 21, 15, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(grad, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [3.2181051031252994, 2.328180399616208, 2.2732003559887985, 2.303180662427738, 2.2995075021579265, 2.230599128244229, 2.301631543394156, 2.1349590360024004, 1.986847759584284, 1.9878294509494183, 2.0494093618152354, 2.1337824397162044, 2.3120607113589418], "accuracy": [0.17857614159584045, 0.15097081661224365, 0.11530841141939163, 0.09760929644107819, 0.12191256135702133, 0.18095363676548004, 0.10157178342342377, 0.2569013237953186, 0.3427552580833435, 0.34447231888771057, 0.30722492933273315, 0.294148713350296, 0.10236428678035736], "val_loss": [1.977757113320487, 1.9632671901157923, 1.9740737506321497, 1.9732856750488281, 1.92859833581107, 1.9740712983267648, 1.9574176924569267, 1.593487058367048, 1.778742722102574, 1.640655824116298, 1.8089748110089983, 1.9836501393999373, 1.9730008670261927], "val_accuracy": [0.09666666388511658, 0.09333333373069763, 0.07566666603088379, 0.1366666704416275, 0.3553333282470703, 0.10366666316986084, 0.1993333399295807, 0.41333332657814026, 0.28200000524520874, 0.34700000286102295, 0.31700000166893005, 0.10366666316986084, 0.10733333230018616]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 4, 1, 3, 1, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [4, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 57, 12]], "fitness": -0.11228571087121964, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302193356857733, 2.302977267509564, 2.301606611789194, 2.303006533161839, 2.301280448874777, 2.3028114603778485, 2.301934545696089, 2.302410885610947, 2.3012418890232422, 2.3008661098830405, 2.3003772438446357, 2.300621706528387, 2.301308538337126, 2.3023194813252816, 2.2986923195918663, 2.3008783412190663, 2.301486474081132, 2.301244563682283, 2.3010814417276118, 2.3004619421472072, 2.3006810915862186, 2.30301675669285, 2.3012268134174945, 2.297690161498562, 2.2992074676020398, 2.300076704707994, 2.2997939861556085, 2.30000828005587, 2.2981557256242366, 2.2991218342678406, 2.2999869973793983, 2.2982704260597737, 2.2993301816856415, 2.2985952020463, 2.297064708224251, 2.297919839616654, 2.299556717565897, 2.300093052015958, 2.297799552641115, 2.2980128567468503, 2.298217563612775, 2.297375876590828, 2.298997338736739, 2.297157231890026, 2.298219514419028, 2.298234425200731, 2.2974302769337096, 2.297051826661462, 2.297089914273529, 2.2965291496186664, 2.2962658179198367, 2.296669997685243, 2.29664105654802, 2.2955912468282538, 2.2956000026568857, 2.2968908064810356, 2.295806966075461, 2.295255462869189, 2.294515804261296, 2.294657177566742, 2.296426374079954, 2.2953213204671172, 2.2944316846063786, 2.2961444863238905, 2.2958970027372363, 2.2954931239945746, 2.293406679582728, 2.2949469602811825, 2.295271945494104, 2.2947616420638024, 2.2939669428689213, 2.2951624547769174, 2.294164451295044, 2.29300574984895, 2.2940072065740607, 2.2937376228982997, 2.2928676034607167, 2.293808780877251, 2.2935833698565444, 2.2940661558905266, 2.2937054161413895, 2.294257309836419, 2.292988603582094, 2.293458249071066, 2.2937394862224743, 2.2932423468294902, 2.2926702046233745, 2.2914891240146766, 2.2932553329110035, 2.292334942628112, 2.292734514437237, 2.290495761397209, 2.2910150747257627, 2.291554586967032, 2.2918400688886864, 2.2932018190405827, 2.2908998553180706, 2.2911203806946037, 2.2907664681690214, 2.2904948515269137], "accuracy": [0.09377889335155487, 0.0948355570435524, 0.09628847241401672, 0.0882314071059227, 0.08796724677085876, 0.0882314071059227, 0.09391097724437714, 0.08875974267721176, 0.09615638852119446, 0.09311848133802414, 0.09470347315073013, 0.09813763201236725, 0.09536388516426086, 0.09060890227556229, 0.09602430462837219, 0.0956280529499054, 0.09430722147226334, 0.08955223858356476, 0.09377889335155487, 0.09998679161071777, 0.09219389408826828, 0.08915598690509796, 0.09272222965955734, 0.09972262382507324, 0.1018359512090683, 0.09589222073554993, 0.10077928751707077, 0.09800554811954498, 0.10408136248588562, 0.09787346422672272, 0.0956280529499054, 0.10540219396352768, 0.10474177449941635, 0.09945846349000931, 0.10566636174917221, 0.1006472036242485, 0.09879804402589798, 0.09628847241401672, 0.10236428678035736, 0.10421344637870789, 0.1088363528251648, 0.109232597053051, 0.09879804402589798, 0.10487385839223862, 0.10328886657953262, 0.10421344637870789, 0.10355303436517715, 0.10077928751707077, 0.10711926966905594, 0.11147800832986832, 0.10949676483869553, 0.10711926966905594, 0.10711926966905594, 0.09866596013307571, 0.10870426893234253, 0.10249637067317963, 0.10500594228506088, 0.10500594228506088, 0.10527011007070541, 0.1150442510843277, 0.10381719470024109, 0.10593052208423615, 0.11147800832986832, 0.10566636174917221, 0.10421344637870789, 0.10645885765552521, 0.1088363528251648, 0.10421344637870789, 0.10487385839223862, 0.10632677376270294, 0.11253467202186584, 0.11398758739233017, 0.10857218503952026, 0.11002509295940399, 0.11134592443704605, 0.11438383162021637, 0.11702549457550049, 0.11081759631633759, 0.11834631860256195, 0.11953506618738174, 0.107647605240345, 0.11398758739233017, 0.11200633645057678, 0.11491216719150543, 0.11187426000833511, 0.11174217611551285, 0.11438383162021637, 0.11610091477632523, 0.11028926074504852, 0.1138555034995079, 0.11372341960668564, 0.11993131786584854, 0.120459645986557, 0.11768590658903122, 0.1258750557899475, 0.1154404953122139, 0.11861048638820648, 0.12032756209373474, 0.11715757846832275, 0.12429005652666092], "val_loss": [1.970275810786656, 1.9701661382402693, 1.970057487487793, 1.9699489048549108, 1.9698397091456823, 1.9697307859148299, 1.969621045248849, 1.969510214669364, 1.9694020407540458, 1.9692931175231934, 1.9691838536943709, 1.969073976789202, 1.9689649854387556, 1.9688564709254675, 1.968747820172991, 1.9686382157461983, 1.9685300418308802, 1.9684210504804338, 1.9683124678475517, 1.9682037489754813, 1.9680952344621931, 1.9679861749921526, 1.96787657056536, 1.967768601008824, 1.9676604270935059, 1.96755279813494, 1.9674437386648995, 1.967334542955671, 1.9672260284423828, 1.9671190125601632, 1.9670113836015974, 1.9669023241315569, 1.9667951720101493, 1.9666878155299596, 1.9665782111031669, 1.9664713995797294, 1.9663637706211634, 1.9662555967058455, 1.9661481721060616, 1.966041088104248, 1.9659342765808105, 1.9658267838614327, 1.9657199042184013, 1.9656105722699846, 1.9655026708330428, 1.9653949056352888, 1.965287344796317, 1.9651802607945033, 1.965071746281215, 1.9649641854422433, 1.964855466570173, 1.964747360774449, 1.9646400724138533, 1.9645321709769112, 1.9644247463771276, 1.964318002973284, 1.9642101696559362, 1.9641028812953405, 1.9639957291739327, 1.9638888495309013, 1.9637817655290877, 1.9636753627232142, 1.963569096156529, 1.9634626933506556, 1.9633566311427526, 1.9632491384233748, 1.9631433486938477, 1.9630357878548759, 1.9629298618861608, 1.962822709764753, 1.9627149445669991, 1.9626082692827498, 1.9625016621180944, 1.9623950549534388, 1.9622891289847237, 1.9621821812220983, 1.9620754378182548, 1.961970397404262, 1.9618636540004186, 1.961756706237793, 1.9616492816380091, 1.9615411077226912, 1.9614345005580358, 1.9613263947623116, 1.9612204006740026, 1.9611129760742188, 1.9610067776271276, 1.960900170462472, 1.9607935632978166, 1.9606870242527552, 1.960580621446882, 1.9604732649666923, 1.960367270878383, 1.9602605274745397, 1.96015351159232, 1.9600461551121302, 1.9599401610238212, 1.9598335538591658, 1.9597268104553223, 1.9596197945731026], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.03799999877810478, 0.038333334028720856, 0.03933333232998848, 0.041333332657814026, 0.04233333468437195, 0.04233333468437195, 0.04333333298563957, 0.04399999976158142, 0.04466666653752327, 0.04533333331346512, 0.04600000008940697, 0.04699999839067459, 0.04699999839067459, 0.04800000041723251, 0.04899999871850014, 0.049666665494441986, 0.050999999046325684, 0.05166666582226753, 0.052666667848825455, 0.052666667848825455, 0.05400000140070915, 0.056333333253860474, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.05999999865889549, 0.06066666543483734, 0.06133333221077919, 0.06233333423733711, 0.06266666948795319, 0.06400000303983688, 0.06499999761581421, 0.06533333659172058, 0.0663333311676979, 0.06666667014360428, 0.06800000369548798, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.06933332979679108, 0.06966666877269745, 0.07100000232458115, 0.07266666740179062, 0.07333333045244217, 0.07400000095367432, 0.07599999755620956, 0.07699999958276749, 0.07800000160932541, 0.07866666465997696, 0.0806666687130928, 0.08166666328907013, 0.08266666531562805, 0.08366666734218597, 0.0833333358168602, 0.08399999886751175, 0.08500000089406967, 0.08533333241939545, 0.08699999749660492, 0.08699999749660492, 0.08766666799783707, 0.08900000154972076, 0.08966666460037231, 0.09099999815225601, 0.09166666865348816, 0.09200000017881393, 0.09300000220537186, 0.09333333373069763, 0.09433333575725555, 0.09533333033323288, 0.09533333033323288, 0.09566666930913925, 0.0963333323597908, 0.09666666388511658, 0.0976666659116745, 0.0989999994635582, 0.10066666454076767, 0.10100000351667404, 0.10199999809265137, 0.10300000011920929, 0.10366666316986084, 0.10466666519641876, 0.10633333027362823, 0.1066666692495346, 0.10766666382551193, 0.10866666585206985, 0.109333336353302, 0.10999999940395355, 0.11133333295583725, 0.1120000034570694, 0.11299999803304672, 0.11433333158493042, 0.11566666513681412, 0.11699999868869781, 0.11800000071525574, 0.11900000274181366, 0.11999999731779099, 0.12033333629369736, 0.12300000339746475]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10057143121957779, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 9, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [25.603688759464298, 188416833.38767236, 2150435516.160398, 2.3070012287708748, 123019397.06107616, 10431538721.852144], "accuracy": [0.0948355570435524, 0.1022322028875351, 0.09536388516426086, 0.09998679161071777, 0.0944393053650856, 0.09192973375320435], "val_loss": [1.9743950707571847, 1.9775065694536482, 1.9770545959472656, 1.975564956665039, 1.974632671901158, 1.9740516798836845], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 5, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [75, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 5, 8, 3, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [32, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 14, 9, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.negative(sigma), alpha), tf.math.add(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 5, 8, 3, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [75, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030914872030555, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 5, 8, 3, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50203134180.28932, 7816793414055.883, 131109947062149.45, 941011693907006.6, 4081298230357691.0, 1.3522513375628502e+16], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.09972262382507324, 0.10249637067317963, 0.10593052208423615, 0.09932637959718704], "val_loss": [422412653129.1429, 22772119128356.57, 244417073737142.84, 1332512529842176.0, 4991023808025161.0, 1.471862559690869e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 0, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(alpha)))", "other_info": {"loss": [1.5643828398327045e+18, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05494650825858116, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 4, 3, 5, 2, 8, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 25, 25, 15, 10, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(grad, grad), tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), beta))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1008287886.4861206, 19669242870.39704, 90420841968.51353, 255633171497.79315, 539608183136.19867, 999013112842.1439], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.09972262382507324, 0.10249637067317963, 0.10606260597705841, 0.09972262382507324], "val_loss": [3831912740.571429, 30645497270.857143, 103417092973.71428, 245123888859.42856, 478744515145.1429, 827248401261.7142], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [5, 4, 1, 2, 5, 2, 1, 1, 5, 6, 7, 0, 7, 8, 6, 6, 5, 4, 4, 7, 8, 0, 9], [5, 3, 4, 3, 3, 2, 2, 4, 2, 4, 1, 3, 3, 5], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 23, 14, 1, 1, 0, 0, 0, 0, 3, 3, 0, 2], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.negative(tf.math.add(beta, alpha))))), grad)))))))))), grad))))))))), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030914872030555, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [75, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 5, 8, 3, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 1, 2, 1, 0, 8, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [53, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(sigma, tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma))))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [85588885326.24416, 8004704803441.139, 109920741503429.9, 710076153420853.4, 2888686560400092.0, 9172824681762054.0], "accuracy": [0.10038304328918457, 0.09932637959718704, 0.09972262382507324, 0.10249637067317963, 0.10606260597705841, 0.09972262382507324], "val_loss": [582253992813.7142, 21105457908004.57, 193658728405869.72, 970621730010843.4, 3448997788254208.0, 9814632551902646.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 2, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022412714972678, 2.3031428839631007, 2.301888969517371, 2.303405958695135, 2.3017982018543446, 2.3034423118758087], "accuracy": [0.0936468094587326, 0.0944393053650856, 0.09576013684272766, 0.08717474341392517, 0.08717474341392517, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 9, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 4, 1, 3, 3, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [4, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302289114116819, 2.3033088333083023, 2.3021717051378943, 2.3038055596649527, 2.302316782544113, 2.3040743823914935], "accuracy": [0.0936468094587326, 0.09391097724437714, 0.09509972482919693, 0.08691058307886124, 0.08558975160121918, 0.08440100401639938], "val_loss": [1.9704946790422713, 1.970604487827846, 1.9707134110586983, 1.9708223342895508, 1.9709316662379675, 1.971040998186384], "val_accuracy": [0.03633333370089531, 0.03533333167433739, 0.03500000014901161, 0.03466666489839554, 0.032999999821186066, 0.03266666829586029]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 5, 8, 3, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 4, 0, 0, 9, 0, 8], [1, 1, 0, 3, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), sigma), tf.math.pow(tf.math.negative(tf.math.negative(sigma)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022412714972678, 2.3031428839631007, 2.301888969517371, 2.303405958695135, 2.3017982018543446, 2.3034423118758087], "accuracy": [0.0936468094587326, 0.0944393053650856, 0.09576013684272766, 0.08717474341392517, 0.08717474341392517, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [7, 3, 4, 2, 5, 2, 8, 1, 5, 6, 7, 4, 7, 8, 9], [3, 4, 1, 2, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 2, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [6, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 0, 3, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(alpha, beta)))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))), grad)), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), alpha), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022412714972678, 2.3031428839631007, 2.301888969517371, 2.303405958695135, 2.3017982018543446, 2.3034423118758087], "accuracy": [0.0936468094587326, 0.0944393053650856, 0.09576013684272766, 0.08717474341392517, 0.08717474341392517, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [72, 63, 57, 12]], "fitness": -0.012000000104308128, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, sigma)))", "other_info": {"loss": [4.072647811777289, 4.238724689284619, 2.862116983868679, 2.9093498863391023, 2.6055020088406917, 2.610765555184893], "accuracy": [0.18002906441688538, 0.10896842926740646, 0.10170386731624603, 0.09853387624025345, 0.09945846349000931, 0.09826971590518951], "val_loss": [1.9252039364406042, 2.383544717516218, 2.6315344401768277, 2.2869061061314175, 2.3633977345057895, 2.3992198535374234], "val_accuracy": [0.19333332777023315, 0.10333333164453506, 0.10133333504199982, 0.09666666388511658, 0.10333333164453506, 0.09733333438634872]}}]