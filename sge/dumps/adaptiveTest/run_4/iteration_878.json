[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8377143144607544, "mapping_values": [1, 12, 12, 6, 6, 1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.045065940331789, 1.111595604350743, 0.7959897167190443, 0.7060117601891708, 0.649743236366154, 0.5913294248687372, 0.5591871674979415, 0.5259331675127529, 0.49674243173027993, 0.4763108692967802, 0.4580874775127098, 0.45213387800859595, 0.4282654526762407, 0.4173418450207522, 0.3985329456317379, 0.38526568995679705, 0.37549901941527686, 0.36866741123893526, 0.3697235355712892, 0.3447581288710939, 0.3333382692358765, 0.3240499594357697, 0.3165208281440632, 0.2977539838745987, 0.2901883447576492, 0.2854207325463502, 0.2752043336625931, 0.2773765666909017, 0.27071111370087175, 0.265277922612061, 0.2536023072696649, 0.2501532337637531, 0.23618944367956507, 0.231843615012036, 0.22527023145134076, 0.22053787275595735, 0.21123168138724907, 0.2238756397837708, 0.20293639690616835, 0.20787623388270313, 0.2043392360918967, 0.18460176185043087, 0.1886639503825846, 0.19013403194486944, 0.1752474115229774, 0.17827805852326326, 0.17566930300224853, 0.1700576872810507, 0.16270332777851276, 0.1581537690416634, 0.16178287460016394, 0.1540188476799533, 0.14830774260730853], "accuracy": [0.3032624423503876, 0.6164311170578003, 0.6970016956329346, 0.7272487282752991, 0.7498348951339722, 0.7646281719207764, 0.7852331399917603, 0.798309326171875, 0.8086118102073669, 0.8166688680648804, 0.8267071843147278, 0.8298771381378174, 0.8446704745292664, 0.8470479249954224, 0.8511425256729126, 0.8568220734596252, 0.8569541573524475, 0.8643507957458496, 0.856689989566803, 0.869502067565918, 0.8739928603172302, 0.8782195448875427, 0.8804649114608765, 0.8899748921394348, 0.8918240666389465, 0.8902390599250793, 0.8976356983184814, 0.8911636471748352, 0.8968431949615479, 0.8960506916046143, 0.9063531756401062, 0.9045040011405945, 0.9097873568534851, 0.9085986018180847, 0.9111081957817078, 0.9153348207473755, 0.9192973375320435, 0.9111081957817078, 0.9236560463905334, 0.9182406663894653, 0.9178444147109985, 0.930260181427002, 0.9269581437110901, 0.9260335564613342, 0.9318451881408691, 0.9334301948547363, 0.9310526847839355, 0.9321093559265137, 0.937656819820404, 0.934751033782959, 0.9381851553916931, 0.9395059943199158, 0.9414872527122498], "val_loss": [0.9254753930228097, 0.6209504944937569, 0.5656067132949829, 0.5074095896312169, 0.4667626789637974, 0.4397404023579189, 0.41309384788785664, 0.38993838003703524, 0.3707337975502014, 0.35719770193099976, 0.3528414879526411, 0.34454519408089773, 0.33267394985471455, 0.32154292719704763, 0.31885591575077604, 0.31180507796151297, 0.31401398352214266, 0.3176697407449995, 0.3037885172026498, 0.29755276441574097, 0.29985188586371286, 0.29334560462406706, 0.293722288949149, 0.29893394878932406, 0.28567439317703247, 0.2815930502755301, 0.2918104614530291, 0.2879658171108791, 0.28629662309374126, 0.2907743879726955, 0.290354243346623, 0.28273569686072214, 0.287298892225538, 0.2863784602710179, 0.2947092226573399, 0.29744759627750944, 0.2930745226996286, 0.29924820150647846, 0.2998606392315456, 0.28918832540512085, 0.2928189975874765, 0.2967925752912249, 0.29311815329960417, 0.30615215642111643, 0.3005343590463911, 0.297221907547542, 0.3127624137060983, 0.2966231788907732, 0.3055754729679653, 0.3148463112967355, 0.3270236338887896, 0.30861169951302664, 0.31636318138667513], "val_accuracy": [0.6430000066757202, 0.7443333268165588, 0.7253333330154419, 0.7706666588783264, 0.7889999747276306, 0.8069999814033508, 0.8243333101272583, 0.8289999961853027, 0.8426666855812073, 0.8556666374206543, 0.859666645526886, 0.8610000014305115, 0.8693333268165588, 0.8703333139419556, 0.8669999837875366, 0.8740000128746033, 0.8636666536331177, 0.8646666407585144, 0.8683333396911621, 0.874666690826416, 0.8793333172798157, 0.8803333044052124, 0.8833333253860474, 0.8773333430290222, 0.8826666474342346, 0.8806666731834412, 0.8859999775886536, 0.8809999823570251, 0.8853333592414856, 0.8776666522026062, 0.8796666860580444, 0.8866666555404663, 0.8846666812896729, 0.8846666812896729, 0.8793333172798157, 0.8840000033378601, 0.887666642665863, 0.8863333463668823, 0.8870000243186951, 0.8893333077430725, 0.8920000195503235, 0.8916666507720947, 0.8949999809265137, 0.8866666555404663, 0.8916666507720947, 0.893666684627533, 0.8913333415985107, 0.8960000276565552, 0.8896666765213013, 0.8886666893959045, 0.887333333492279, 0.8889999985694885, 0.8866666555404663]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.833142876625061, "mapping_values": [1, 12, 12, 6, 6, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0450661492590196, 1.1115809244455175, 0.7950838914857233, 0.7033146595469933, 0.646270892418859, 0.5880415252076636, 0.5583642705745543, 0.5270390800119092, 0.4988491241139286, 0.47711493040450637, 0.459306648544049, 0.44921794651033636, 0.42523224297342616, 0.41325370645195564, 0.3991791769112295, 0.3843294846076283, 0.3710828298087039, 0.3657857274626539, 0.35944244701707084, 0.3438229577660387, 0.33200079718317577, 0.32651932618054635, 0.3118085370142824, 0.2973945844702481, 0.2876651620883763, 0.28249984795800637, 0.27950858380957966, 0.28016379485040876, 0.2718599829077327, 0.264564909770142], "accuracy": [0.3032624423503876, 0.6161669492721558, 0.6960771083831787, 0.7308149337768555, 0.752212405204773, 0.7681944370269775, 0.7823272943496704, 0.7981772422790527, 0.8094043135643005, 0.8195747137069702, 0.8255184292793274, 0.8296129703521729, 0.8455950617790222, 0.8510104417800903, 0.850350022315979, 0.8561616539955139, 0.8613129258155823, 0.8672566413879395, 0.863558292388916, 0.8704266548156738, 0.8757099509239197, 0.8747853636741638, 0.8833707571029663, 0.8881257176399231, 0.889578640460968, 0.8944657444953918, 0.8980319499969482, 0.8898428082466125, 0.8969752788543701, 0.8990886211395264], "val_loss": [0.9254753249032157, 0.6206354073115757, 0.5626804147447858, 0.5034552471978324, 0.46467738492148264, 0.4363513333456857, 0.41332038811274935, 0.3882611393928528, 0.3720347711018154, 0.35966031891959055, 0.3587659937994821, 0.3451075383595058, 0.3306186965533665, 0.32193875312805176, 0.32485718386513845, 0.3137227041380746, 0.31026715891701834, 0.31048869235175, 0.2976629137992859, 0.29781883103506906, 0.3046452913965498, 0.2933908700942993, 0.28898779835019794, 0.2959318586758205, 0.2859163539750235, 0.2880869507789612, 0.2958931752613613, 0.2855240447180612, 0.2903596077646528, 0.2933055673326765], "val_accuracy": [0.6430000066757202, 0.7443333268165588, 0.7273333072662354, 0.7713333368301392, 0.7906666398048401, 0.8109999895095825, 0.8206666707992554, 0.8343333601951599, 0.8376666903495789, 0.8569999933242798, 0.8533333539962769, 0.8610000014305115, 0.8690000176429749, 0.8673333525657654, 0.8646666407585144, 0.8696666955947876, 0.871666669845581, 0.8726666569709778, 0.8709999918937683, 0.8759999871253967, 0.8706666827201843, 0.8843333125114441, 0.8823333382606506, 0.875333309173584, 0.8866666555404663, 0.8803333044052124, 0.8823333382606506, 0.8809999823570251, 0.8830000162124634, 0.8763333559036255]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 0, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [5, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.831428587436676, "mapping_values": [1, 21, 21, 12, 9, 3, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.045065996370075, 1.1116118472344556, 0.7953034175259484, 0.7030455999213155, 0.6476382849837149, 0.5882747938934964, 0.5571420347418184, 0.5271921521007203, 0.49928923917799234, 0.4770685096915057, 0.45938020347053066, 0.44840336162825745, 0.42583839171566684, 0.41620882666578635, 0.40227649566078894, 0.3929020189109999, 0.3771592280718597, 0.3646463386103336, 0.3616509439844135, 0.34465629316639074, 0.3390549525781913, 0.33116821841383653, 0.3163578379281744, 0.3018697169415624, 0.2939217841195361, 0.2825359652000191, 0.27794858443659876, 0.2764094416507247, 0.2685808526243059, 0.2707488161874973, 0.257073699617115, 0.2474043655310482, 0.23596176893806192, 0.2293198704404633, 0.22670592027545966, 0.22504635973967707, 0.21614725296728174, 0.22094905772827653, 0.20545297384206976], "accuracy": [0.3032624423503876, 0.616299033164978, 0.6960771083831787, 0.7305507659912109, 0.7541936039924622, 0.7697794437408447, 0.7845727205276489, 0.7996301651000977, 0.8094043135643005, 0.8189142942428589, 0.828820526599884, 0.8293488025665283, 0.8454629778862, 0.8515387773513794, 0.8467837572097778, 0.8562937378883362, 0.856689989566803, 0.8646149635314941, 0.859199583530426, 0.868049144744873, 0.8710870146751404, 0.8749174475669861, 0.8791441321372986, 0.8862766027450562, 0.8879936337471008, 0.8916919827461243, 0.8942015767097473, 0.8926165699958801, 0.8997490406036377, 0.895918607711792, 0.9035794734954834, 0.90423983335495, 0.910711944103241, 0.9101836085319519, 0.9134856462478638, 0.9167877435684204, 0.9159952402114868, 0.913089394569397, 0.9198256731033325], "val_loss": [0.9254735537937709, 0.620451535497393, 0.5611852577754429, 0.5031666074480329, 0.46421752657209125, 0.4372834989002773, 0.4129260182380676, 0.3891820992742266, 0.37191643033708843, 0.3609107732772827, 0.35730826003210886, 0.34566415207726614, 0.3335369569914682, 0.32248451880046297, 0.32565427677971975, 0.3142073580196926, 0.31143912247249056, 0.3159548469952175, 0.3022788677896772, 0.29715389013290405, 0.30966932432992117, 0.2941330671310425, 0.2928711771965027, 0.29796590975352694, 0.2874635713441031, 0.2838310088430132, 0.28825491666793823, 0.2861485651561192, 0.29307843106133596, 0.28729546070098877, 0.2831362656184605, 0.28428594555173603, 0.28167980909347534, 0.28824654647282194, 0.2906522410256522, 0.2993106927190508, 0.28785490138190134, 0.2911897046225412, 0.29903815473829], "val_accuracy": [0.6430000066757202, 0.7450000047683716, 0.7303333282470703, 0.7723333239555359, 0.7910000085830688, 0.8103333115577698, 0.8226666450500488, 0.8306666612625122, 0.8383333086967468, 0.8546666502952576, 0.8533333539962769, 0.8600000143051147, 0.8673333525657654, 0.8673333525657654, 0.8659999966621399, 0.8653333187103271, 0.871666669845581, 0.8723333477973938, 0.8683333396911621, 0.8796666860580444, 0.8690000176429749, 0.8833333253860474, 0.8799999952316284, 0.8763333559036255, 0.8813333511352539, 0.8833333253860474, 0.8840000033378601, 0.8786666393280029, 0.8836666941642761, 0.8809999823570251, 0.8820000290870667, 0.887333333492279, 0.8843333125114441, 0.8896666765213013, 0.8843333125114441, 0.8830000162124634, 0.8840000033378601, 0.8886666893959045, 0.8870000243186951]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [45, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8265714049339294, "mapping_values": [1, 12, 12, 6, 6, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027426356322036, 1.9922104747524318, 1.9546509896129618, 1.2216277468269054, 0.8266867592885525, 0.682256692719576, 0.6184045437729795, 0.5997357289190574, 0.581686715219377, 0.543514484341087, 0.5164892405661231, 0.5054179512750613, 0.49793541982126366, 0.4680592409135675, 0.46119793333539305, 0.4421597566146105, 0.4461579809036426, 0.42457743038858453, 0.42429538786986, 0.4037742269446963, 0.39727577326587793, 0.3826103319093268, 0.39251265523770956, 0.3770207125772779, 0.3700441551435231, 0.3725830441484236, 0.3509163258294892], "accuracy": [0.2985074520111084, 0.3535860478878021, 0.299299955368042, 0.5735041499137878, 0.6934354901313782, 0.7337207794189453, 0.7614582180976868, 0.7765156626701355, 0.785629391670227, 0.7959318161010742, 0.8123101592063904, 0.8107251524925232, 0.8142913579940796, 0.82683926820755, 0.8255184292793274, 0.8309338092803955, 0.8310658931732178, 0.8384625315666199, 0.8404437899589539, 0.8453308939933777, 0.8482366800308228, 0.8548408150672913, 0.8521991968154907, 0.8555012345314026, 0.8595958352088928, 0.8598600029945374, 0.8617091774940491], "val_loss": [1.9252852712358748, 1.9567348616463798, 1.1862812382834298, 0.6162261962890625, 0.5340551819120135, 0.47001666682107107, 0.44451976673943655, 0.4209457721029009, 0.40091086285454886, 0.39577373436519075, 0.4123686637197222, 0.3768990295273917, 0.37626120873859953, 0.3632825698171343, 0.3449471763202122, 0.34146460465022493, 0.35793642486844746, 0.3486486077308655, 0.32401606014796663, 0.3367206794875009, 0.3371119924954006, 0.31750904662268503, 0.3296442372458322, 0.3217902438981192, 0.31900863136563984, 0.3134453977857317, 0.33394605772835867], "val_accuracy": [0.2436666637659073, 0.10866666585206985, 0.48133334517478943, 0.7316666841506958, 0.7613333463668823, 0.7953333258628845, 0.8040000200271606, 0.8216666579246521, 0.831333339214325, 0.8376666903495789, 0.8029999732971191, 0.8460000157356262, 0.840666651725769, 0.8483333587646484, 0.8576666712760925, 0.859333336353302, 0.8513333201408386, 0.8543333411216736, 0.8700000047683716, 0.8666666746139526, 0.8586666584014893, 0.875, 0.8696666955947876, 0.8700000047683716, 0.8633333444595337, 0.8713333606719971, 0.8679999709129333]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 8, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [1, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8257142901420593, "mapping_values": [1, 14, 14, 8, 6, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0450662302224547, 1.1113284184648975, 0.7960971598029373, 0.704700212649634, 0.6485404325687276, 0.5918157416847419, 0.5583841469640257, 0.5268323523745387, 0.49786072726168445, 0.4789831741075663, 0.45885377385439635, 0.4509245652438249, 0.4276286195990684, 0.41112991904916385, 0.3962592250910953, 0.384842067307422, 0.3746223810121856, 0.3676015867407233, 0.3697157427225729, 0.34617513082818174, 0.3358038255937221, 0.3239338419433, 0.3170048128958659, 0.30187331822412583, 0.2970407732788598, 0.29060747278695565, 0.283517384644056, 0.2735904287888846, 0.26331149758270406, 0.26388448025682393, 0.2530462048458716, 0.24572002710195154, 0.23595665517484413, 0.22535778250849842, 0.22384405345917377, 0.2228372315681212, 0.21306376233982324, 0.2192191080394564, 0.19806006080194818, 0.20202294916697874, 0.19784267092417135, 0.18569125858012633, 0.18598314913870748], "accuracy": [0.3032624423503876, 0.616299033164978, 0.6956809163093567, 0.7284374833106995, 0.7519482374191284, 0.7647602558135986, 0.785101056098938, 0.7984414100646973, 0.8096684813499451, 0.8140271902084351, 0.8251221776008606, 0.8297450542449951, 0.8453308939933777, 0.8500858545303345, 0.8504821062088013, 0.8555012345314026, 0.8558974862098694, 0.8647470474243164, 0.857218325138092, 0.8696341514587402, 0.872407853603363, 0.8776912093162537, 0.8805969953536987, 0.8879936337471008, 0.8856161832809448, 0.8894465565681458, 0.8928807377815247, 0.8938053250312805, 0.8992207050323486, 0.897899866104126, 0.9027869701385498, 0.9068815112113953, 0.9096552729606628, 0.9124290347099304, 0.9141460657119751, 0.91559898853302, 0.9177123308181763, 0.9146744012832642, 0.9235239624977112, 0.9255052208900452, 0.9227314591407776, 0.9280148148536682, 0.9269581437110901], "val_loss": [0.9254305022103446, 0.6205130304609027, 0.5644360440117973, 0.5067836727414813, 0.4676241874694824, 0.4384442056928362, 0.4140680432319641, 0.3897814665521894, 0.3722318410873413, 0.36036079270499094, 0.35648064953940256, 0.3448013492992946, 0.3321979982512338, 0.3216176799365452, 0.32251507895333426, 0.3161160094397409, 0.312023401260376, 0.3219928230558123, 0.3073608364377703, 0.29695441893168856, 0.3059756415230887, 0.29442513840539114, 0.2915541785103934, 0.2972099610737392, 0.2881692477634975, 0.2826219541685922, 0.2954793742724827, 0.287420996597835, 0.2842344982283456, 0.28690054586955477, 0.28802424669265747, 0.2805280259677342, 0.2823256935392107, 0.2868806038584028, 0.29228306668145315, 0.2938319018908909, 0.28818108354296, 0.28908755098070416, 0.30639632259096417, 0.289460437638419, 0.29432791471481323, 0.2922303336007254, 0.29066980736596243], "val_accuracy": [0.6430000066757202, 0.7450000047683716, 0.7256666421890259, 0.7710000276565552, 0.7876666784286499, 0.8100000023841858, 0.8163333535194397, 0.8303333520889282, 0.8396666646003723, 0.8583333492279053, 0.8560000061988831, 0.8603333234786987, 0.8683333396911621, 0.8709999918937683, 0.8673333525657654, 0.8686666488647461, 0.8726666569709778, 0.8643333315849304, 0.8673333525657654, 0.875, 0.875, 0.8809999823570251, 0.8806666731834412, 0.8799999952316284, 0.8813333511352539, 0.8833333253860474, 0.8826666474342346, 0.8796666860580444, 0.8886666893959045, 0.8813333511352539, 0.8830000162124634, 0.8820000290870667, 0.890333354473114, 0.8863333463668823, 0.8853333592414856, 0.8859999775886536, 0.8856666684150696, 0.8926666378974915, 0.8849999904632568, 0.8853333592414856, 0.8893333077430725, 0.8880000114440918, 0.890666663646698]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 1, 6, 3, 5, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 0, 2, 0, 1, 0, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [84, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [12, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7334285974502563, "mapping_values": [1, 14, 14, 7, 7, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302496353680227, 2.2937739666316643, 2.278435032334011, 2.2531427777186677, 2.2212788021370815, 2.1778872082372303, 2.1205166690558364, 2.0318767606558628, 1.9130546146962684, 1.7578361942752037, 1.604598834514303, 1.4701762483765846, 1.408923395368732, 1.363308559177637, 1.3848096986472598, 1.3389182515573257, 1.2361888846291715, 1.1314270188543603, 1.0403416146691669, 0.951045156643139, 0.9073931420909069, 0.9116214853251977, 0.9089025913873888, 0.9091411428113955, 0.8873487637106297, 0.8580996026499649, 0.8327412233219139, 0.8223312204351136, 0.8201665446160256, 0.8022424709669367, 0.8027515436648504, 0.7994018673991262, 0.8029137858940137, 0.7934527263082707], "accuracy": [0.09245806187391281, 0.11240258812904358, 0.1612732857465744, 0.2238806039094925, 0.2921674847602844, 0.34962356090545654, 0.37485140562057495, 0.4017963409423828, 0.42266544699668884, 0.45383700728416443, 0.4581957459449768, 0.4986131191253662, 0.5138026475906372, 0.537709653377533, 0.5451063513755798, 0.5646545886993408, 0.5904107689857483, 0.629111111164093, 0.6407343745231628, 0.6491876840591431, 0.6551313996315002, 0.6571126580238342, 0.6692643165588379, 0.6859067678451538, 0.6841896772384644, 0.6925109028816223, 0.6939638257026672, 0.6955488324165344, 0.6956809163093567, 0.6980583667755127, 0.6984546184539795, 0.698718786239624, 0.7013604640960693, 0.7034738063812256], "val_loss": [1.965865203312465, 1.953742436000279, 1.9346368653433663, 1.9090963091169084, 1.8758351462227958, 1.8295563289097376, 1.7613727705819267, 1.660851240158081, 1.519240209034511, 1.3418524265289307, 1.1593574796404158, 1.0071535110473633, 0.8949644224984306, 0.8137018510273525, 0.7706470830099923, 0.7231169257845197, 0.7063700812203544, 0.6894887856074742, 0.6431159121649606, 0.6362845727375576, 0.6548892770494733, 0.6689325230462211, 0.676209671156747, 0.6623200518744332, 0.6323013135365078, 0.6025621039526803, 0.5823367323194232, 0.5704033034188407, 0.5608802352632795, 0.5552545615604946, 0.5537423917225429, 0.5549958433423724, 0.556258133479527, 0.5549216611044747], "val_accuracy": [0.0689999982714653, 0.18666666746139526, 0.3336666524410248, 0.3863333463668823, 0.42366665601730347, 0.44433334469795227, 0.46700000762939453, 0.4963333308696747, 0.5350000262260437, 0.5716666579246521, 0.6006666421890259, 0.640999972820282, 0.6663333177566528, 0.6790000200271606, 0.684333324432373, 0.7046666741371155, 0.7046666741371155, 0.7116666436195374, 0.7210000157356262, 0.7323333621025085, 0.7110000252723694, 0.7243333458900452, 0.7423333525657654, 0.7383333444595337, 0.7350000143051147, 0.7333333492279053, 0.7390000224113464, 0.746666669845581, 0.7549999952316284, 0.753333330154419, 0.7516666650772095, 0.7490000128746033, 0.7483333349227905, 0.7536666393280029]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 1, 6, 3, 0, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.666857123374939, "mapping_values": [1, 22, 22, 12, 10, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)), tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.add(alpha, alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.035285662461612, 1.1255551191006732, 0.8378348007115233, 0.7849235306751647, 0.6925967534015742, 0.6418738654497167, 0.5985463587064092, 0.5859507991574491, 0.5519261059192949, 0.5289691024059003, 0.5152318111862315, 0.5107180988823244, 0.48550945055908323, 0.4794462786303724, 0.4690013804951868, 0.4676866160210932, 0.4633504738070473, 0.4620714776425581, 0.47067572214836145, 0.4804714636449344, 0.49731969438948886, 0.49458229238677415, 0.5129861184721216, 0.5030181104827315, 0.5389854007031167, 0.5873946836910795], "accuracy": [0.31303659081459045, 0.6071853041648865, 0.6873596906661987, 0.7120591998100281, 0.7415136694908142, 0.7660810947418213, 0.7754589915275574, 0.7774402499198914, 0.7924976944923401, 0.7985734939575195, 0.8047813773155212, 0.8098005652427673, 0.8165367841720581, 0.819442629814148, 0.8219521641731262, 0.8171972036361694, 0.8269713521003723, 0.832650899887085, 0.8219521641731262, 0.8244617581367493, 0.809140145778656, 0.8164047002792358, 0.8181217908859253, 0.8133667707443237, 0.8107251524925232, 0.7985734939575195], "val_loss": [0.8456924642835345, 0.6012060301644462, 0.6042628799165998, 0.5160409552710397, 0.47571888991764616, 0.43721435751233784, 0.41618778875895907, 0.4104448642049517, 0.37140782390322, 0.36922891650881084, 0.36256420612335205, 0.3618853007044111, 0.38139006069728304, 0.36368593147822786, 0.3531861390386309, 0.35971152782440186, 0.36692460094179424, 0.3403977836881365, 0.35978662967681885, 0.35648336580821444, 0.38938306059156147, 0.4054896490914481, 0.43072430576596943, 0.4150790401867458, 0.5157651049750192, 0.46544764723096577], "val_accuracy": [0.6449999809265137, 0.7463333606719971, 0.7403333187103271, 0.7596666812896729, 0.781000018119812, 0.812666654586792, 0.8216666579246521, 0.8230000138282776, 0.840666651725769, 0.8496666550636292, 0.8483333587646484, 0.8516666889190674, 0.8450000286102295, 0.847000002861023, 0.8513333201408386, 0.8519999980926514, 0.8493333458900452, 0.8600000143051147, 0.8519999980926514, 0.8476666808128357, 0.8663333058357239, 0.8363333344459534, 0.8460000157356262, 0.843666672706604, 0.8433333039283752, 0.8386666774749756]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 1, 6, 3, 0, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 1, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [63, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.2680000066757202, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6081660401630615, 2.306752910640466, 2.415630725459526, 2.2911264374271565, 2.277151538837288, 2.3046930698182653, 2.303772525922135], "accuracy": [0.22018226981163025, 0.10342095047235489, 0.23840972781181335, 0.11359133571386337, 0.13010171055793762, 0.10289261490106583, 0.09259014576673508], "val_loss": [1.9867967196873255, 1.967909472329276, 1.984485694340297, 1.9722497122628349, 1.9756509917122977, 1.9737958908081055, 1.973738329751151], "val_accuracy": [0.10066666454076767, 0.1809999942779541, 0.10366666316986084, 0.10066666454076767, 0.10066666454076767, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [69, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.23314285278320312, "mapping_values": [1, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.square(alpha)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.7788920462989632, 2.9243502987216825, 2.439269382499228, 2.3897253718783653, 2.447086602280153, 2.4817205455088738], "accuracy": [0.19574692845344543, 0.12693171203136444, 0.10857218503952026, 0.10236428678035736, 0.10038304328918457, 0.1014397069811821], "val_loss": [3.109835829053606, 2.0042410578046526, 2.1088547706604004, 2.078619888850621, 2.014920779636928, 2.0597409520830428], "val_accuracy": [0.18766666948795319, 0.10300000011920929, 0.10100000351667404, 0.10000000149011612, 0.10366666316986084, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 55, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 9, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 2, 6, 0, 5, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 9, 8, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302620095505045, 2.3029600606539686, 2.3028541777694795, 2.3030744534851366, 2.302861383357745, 2.3029519671446548, 2.3030141252709924, 2.302882213445151, 2.303034925473412, 2.3028674728409677, 2.3028805988686134], "accuracy": [0.09285431355237961, 0.09826971590518951, 0.09866596013307571, 0.09866596013307571, 0.09681680053472519, 0.09800554811954498, 0.09774138033390045, 0.09747721254825592, 0.09232597798109055, 0.09721305221319199, 0.09589222073554993], "val_loss": [1.9737044743129186, 1.9737332207815987, 1.9736347198486328, 1.973661286490304, 1.97360018321446, 1.9735644204275948, 1.973651545388358, 1.9737245695931571, 1.973701340811593, 1.9736896923610143, 1.973630155835833], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10366666316986084, 0.09666666388511658, 0.10000000149011612, 0.09666666388511658, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 1, 6, 3, 5, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [3, 1, 1, 0, 2, 1, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [95, 55, 25, 53, 26, 73, 46, 33, 24], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [44, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302350540045246, 2.3026194128110316, 2.302614417546587, 2.3026450289364866, 2.302605743815067, 2.3026067408525304, 2.302622413150292, 2.3026069678713568, 2.302624518262586, 2.3026180445258295, 2.302607640015876], "accuracy": [0.09285431355237961, 0.0948355570435524, 0.0948355570435524, 0.09655263274908066, 0.09972262382507324, 0.09972262382507324, 0.09549596905708313, 0.09760929644107819, 0.09496764093637466, 0.09536388516426086, 0.09285431355237961], "val_loss": [1.9736508641924178, 1.9736438478742326, 1.9736413955688477, 1.9736452102661133, 1.9736458914620536, 1.9736345836094447, 1.9736470494951521, 1.9736484800066267, 1.9736402375357491, 1.9736427579607283, 1.9736366953168596], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.0963333323597908, 0.10133333504199982, 0.10366666316986084, 0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.09733333438634872, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 4, 1, 6, 3, 8, 6, 2, 5, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 0, 0, 2, 2, 2, 0, 1, 1, 0, 0, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 16, 15, 5, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026201584871027, 2.3029601236360264, 2.3028541777694795, 2.3030744219941077, 2.302861365376368, 2.3029519671446548, 2.3030141252709924, 2.302882276427209, 2.303034925473412, 2.3028673783678815, 2.3028805988686134], "accuracy": [0.09285431355237961, 0.09826971590518951, 0.09866596013307571, 0.09866596013307571, 0.09681680053472519, 0.09800554811954498, 0.09774138033390045, 0.09747721254825592, 0.09232597798109055, 0.09721305221319199, 0.09589222073554993], "val_loss": [1.9737046105521066, 1.9737332207815987, 1.9736347198486328, 1.973661286490304, 1.97360018321446, 1.9735644204275948, 1.973651545388358, 1.973724365234375, 1.9737011364528112, 1.9736896242414201, 1.973630155835833], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10366666316986084, 0.09666666388511658, 0.10000000149011612, 0.09666666388511658, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 0, 5, 3, 4, 1, 4, 4, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 2, 0, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 16, 14, 2, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.square(tf.math.add(alpha, grad))), tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(grad, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad)))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 1, 6, 8, 8, 6, 0, 5, 3, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [42, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.303730651608327, 2.303011905940737, 2.30313390013942, 2.300907826017411, 2.300050462383431, 2.2986878479287576, 2.2997286004822377, 2.2983768534871327, 2.2987467410967195, 2.2995182293564524, 2.299309455928014, 2.299168426756531, 2.299013241989706, 2.2979827161478315, 2.298456874647633, 2.2983232031975755, 2.298634941520283, 2.2979583279835536], "accuracy": [0.08928807079792023, 0.08928807079792023, 0.09338264167308807, 0.09285431355237961, 0.09642054885625839, 0.1014397069811821, 0.09694888442754745, 0.10619468986988068, 0.10077928751707077, 0.10738343745470047, 0.10394927859306335, 0.09668471664190292, 0.1006472036242485, 0.10579843819141388, 0.1006472036242485, 0.10210011899471283, 0.10645885765552521, 0.10249637067317963], "val_loss": [1.970273562840053, 1.9698478153773717, 1.9692457062857491, 1.9687401907784599, 1.968440123966762, 1.9682844706944056, 1.9682460512433733, 1.9682491847446986, 1.9682666233607702, 1.9682465280805315, 1.9681693485804967, 1.9680710520063127, 1.968026774270194, 1.9680560656956263, 1.9681456429617745, 1.9682953698294503, 1.9685089247567313, 1.9687320845467704], "val_accuracy": [0.03733333200216293, 0.044333335012197495, 0.049666665494441986, 0.0533333346247673, 0.06133333221077919, 0.06700000166893005, 0.0716666653752327, 0.07366666942834854, 0.07500000298023224, 0.08166666328907013, 0.08399999886751175, 0.08866667002439499, 0.08933333307504654, 0.08866667002439499, 0.08533333241939545, 0.08500000089406967, 0.08366666734218597, 0.08100000023841858]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 1, 9, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [49, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 7, 7, 4, 3, 1, 13, 13, 8, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303760462811185, 2.3033660839986743, 2.304197459818586, 2.3026466336248417, 2.3025771284525374, 2.3010529536203292], "accuracy": [0.08928807079792023, 0.08809932321310043, 0.08928807079792023, 0.08730682730674744, 0.09126931428909302, 0.09628847241401672], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 1, 1, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 0, 2, 1, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [47, 55, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [44, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303760462811185, 2.3033660839986743, 2.304197459818586, 2.3026466336248417, 2.3025771284525374, 2.3010529536203292], "accuracy": [0.08928807079792023, 0.08809932321310043, 0.08928807079792023, 0.08730682730674744, 0.09126931428909302, 0.09628847241401672], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 2, 1, 9, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 1, 1, 0, 2, 1, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [47, 55, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 6, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [44, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), beta), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303760462811185, 2.3033660839986743, 2.304197459818586, 2.3026466336248417, 2.3025771284525374, 2.3010529536203292], "accuracy": [0.08928807079792023, 0.08809932321310043, 0.08928807079792023, 0.08730682730674744, 0.09126931428909302, 0.09628847241401672], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 6, 3, 8, 6, 3, 5, 3, 4, 1, 4, 1, 2, 1, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 0, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [16, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [9, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 12, 12, 6, 6, 1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), grad)))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.303760462811185, 2.303366115489703, 2.3041974283275573, 2.3026466380965678, 2.3025772544166525, 2.3010531605478795], "accuracy": [0.08928807079792023, 0.08809932321310043, 0.08928807079792023, 0.08730682730674744, 0.09126931428909302, 0.09628847241401672], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703852108546667, 1.9703851427350725, 1.9703852108546667, 1.9703854833330428], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]