[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.081704560067471, 1.3979182292473173, 1.0573885999004902, 0.9688152090559358, 0.8286685930219828, 0.8137870788448255, 0.7532825754964514, 0.7246623778025141, 0.6952296520315535, 0.6880162453465631, 0.6710548822701237, 0.6472160845006918, 0.6591330214561394, 0.6353080814950076, 0.6151351482246876, 0.60285600026711, 0.5996878956365957, 0.5961010261234464, 0.591839896319423], "accuracy": [0.32003697752952576, 0.5003302097320557, 0.6259410977363586, 0.6502443552017212, 0.696209192276001, 0.698718786239624, 0.7191916704177856, 0.7297582626342773, 0.7354378700256348, 0.7384757399559021, 0.7494386434555054, 0.7586844563484192, 0.750759482383728, 0.763967752456665, 0.7728173136711121, 0.7725531458854675, 0.7777044177055359, 0.7765156626701355, 0.7769119143486023], "val_loss": [1.1451175212860107, 0.7755839654377529, 0.7565891231809344, 0.6038942337036133, 0.6167624848229545, 0.5614867550986153, 0.5759348358426776, 0.5316477332796369, 0.5431917905807495, 0.5447194746562413, 0.49798578875405447, 0.49140558923993793, 0.48390088762555805, 0.464945273739951, 0.4982837268284389, 0.4631128992353167, 0.47946849891117643, 0.4513344424111502, 0.5396867649895805], "val_accuracy": [0.6356666684150696, 0.6776666641235352, 0.6470000147819519, 0.7316666841506958, 0.7286666631698608, 0.7386666536331177, 0.7506666779518127, 0.7666666507720947, 0.7463333606719971, 0.7473333477973938, 0.7760000228881836, 0.7789999842643738, 0.793666660785675, 0.8009999990463257, 0.7770000100135803, 0.7956666946411133, 0.7883333563804626, 0.7993333339691162, 0.7443333268165588]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0], [0, 1, 0, 1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [27], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3, 7, 2, 2, 3, 1, 6], [1, 7], [], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 4, 0, 0, 2, 2, 0, 1, 2, 9, 4], [1, 1, 3, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 4, 0, 9, 4, 0], [1, 2, 0, 0, 3, 3, 0, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [58.78144954756471, 727.9825353515367, 3024.9440869921, 8112.613142975663, 17307.737508874325, 31112.65935240143], "accuracy": [0.1002509593963623, 0.1026284471154213, 0.10196803510189056, 0.09589222073554993, 0.0940430611371994, 0.10513802617788315], "val_loss": [171.36250959123885, 1072.588134765625, 3400.492606026786, 7850.821707589285, 15115.17578125, 25883.868303571428], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 1, 9], [2, 1, 1, 0], [73], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [8, 1, 0, 5, 2, 2, 0, 4], [1, 2, 0, 0, 2, 1], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [5, 1, 0, 2, 2, 2, 0], [1, 3, 0, 0, 3], [43, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 0], [5, 2, 5, 8, 9], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 2, 2, 0, 8, 0, 4, 4, 6], [2, 2, 0, 0, 3, 3, 1, 3, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 12, 9, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(beta), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)))), tf.math.pow(tf.math.pow(sigma, alpha), tf.math.divide_no_nan(sigma, sigma)))", "other_info": {"loss": [2.302255958661175, 2.3023589020785624, 2.302598843563817, 2.30489637142852, 2.316185457768489, 2.4100735596284073], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736852645874023, 1.9737562452043806, 1.974492141178676, 1.9783869470868791, 2.003961903708322, 2.312467506953648], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1], [5, 2, 5, 4, 1, 2, 2, 8, 6, 0, 9], [1, 1, 1, 0, 0, 1, 3], [96, 12, 93], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4, 6, 3, 8, 6, 8, 5, 6, 6, 5, 5, 3, 5, 7, 3, 0, 2, 7, 8], [2, 5, 1, 1, 0, 1, 3, 3, 5, 0, 5, 1], [10, 55, 72, 28, 30, 13], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [3, 2, 0, 0, 3], [30, 89, 29, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(sigma), beta), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.358812647504483, 3134.193713091557, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0478140264749527, 0.0400211326777935, 0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.220052514757429, 12042529060.571428, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [0, 1, 1, 0], [73], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [3, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 9, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3025060331092426, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0], [3, 1, 0, 2, 2, 2, 0, 8, 1, 4, 6, 5, 2, 3, 0, 4, 7, 3, 5, 5, 2, 4, 5, 6, 5, 4, 3, 3, 4, 5, 5, 0, 6, 8, 5, 9], [1, 2, 0, 0, 3, 1, 3, 1, 1, 0, 1, 3, 0, 2, 2, 2, 3, 0, 0, 0, 1], [41, 60, 56, 45, 83, 20, 61, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 57, 36, 21, 8], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.sqrt(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.divide_no_nan(sigma, alpha), tf.math.square(tf.math.add(sigma, alpha)))), tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(alpha), tf.math.square(tf.math.add(sigma, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(beta, tf.math.square(tf.math.divide_no_nan(beta, tf.math.square(beta))))))))), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.math.pow(tf.math.square(sigma), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(alpha)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 1, 0, 2, 0, 2, 0, 7, 1, 9], [1, 2, 0, 0, 3, 3, 3, 2], [32, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.negative(alpha), tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma)))))))", "other_info": {"loss": [2.3021307560620037, 2.3033708467333622, 2.325241280836499, 3.2383003906252017, 8.739504222368536, 15.43321193840683], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739814485822404, 1.977879251752581, 2.0673768860953197, 5.127073151724679, 10.840657097952706, 16.566635131835938], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [6, 8, 5, 8, 2, 2, 3, 7, 3, 8, 2, 7, 8, 5, 1, 3, 8], [1, 2, 0, 0, 3], [41, 60, 56, 45, 56, 15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(alpha)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0, 7, 4, 0], [1, 2, 0, 0, 3, 3, 3, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302543040201129, 2.305243645141374, 2.306324385475599, 2.309027922514045, 2.3115099269039106, 2.3149791599941794, 2.318704794237658, 2.32701971303864, 2.3321839936767446, 2.3413773066395103, 2.363502700079103, 55752.885106562, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.0874389111995697, 0.08241976052522659, 0.08215559273958206, 0.08545766770839691, 0.07753269374370575, 0.07674019038677216, 0.07634394615888596, 0.07845727354288101, 0.07515519857406616, 0.07674019038677216, 0.09021265059709549, 0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9703327587672643, 1.9718804359436035, 1.9732920782906669, 1.9753203392028809, 1.9777064323425293, 1.9801032883780343, 1.982701369694301, 1.986884934561593, 1.992849349975586, 2.003600937979562, 2.0333706310817172, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.02433333359658718, 0.023666666820645332, 0.027666667476296425, 0.028333334252238274, 0.03266666829586029, 0.04066666588187218, 0.05700000002980232, 0.07333333045244217, 0.09600000083446503, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 2, 5, 1, 1, 3, 6, 2, 4, 3, 6, 5, 7, 9, 3, 4, 6, 7, 3, 5], [1, 1, 1, 0, 3, 2, 0, 1, 0, 1, 2, 1, 2, 2, 2], [96, 12, 93, 33], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0, 7, 4, 0], [1, 2, 0, 0, 3, 3, 3, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 20, 15, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.divide_no_nan(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha))))), grad))))), tf.math.square(tf.math.add(alpha, grad))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [], [0, 1, 1, 0], [96, 12, 93], [1], [1], [4, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [27], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 0, 0, 2, 2, 0, 1, 2, 9, 4, 3, 8], [1, 2, 0, 0, 3, 0, 0, 0], [41, 60, 56, 45, 33, 53]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 13, 8, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(tf.math.negative(alpha)), beta), tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.sqrt(sigma), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [73], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3, 1], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 8, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(alpha)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [2, 2, 0, 0, 3], [80, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [2.3023168979902247, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 2, 2, 0, 3, 7, 3], [1, 2, 0, 0, 0, 3, 3, 2, 2], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 10, 9, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, sigma)))), tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302172968117096, 2.3032103416516936, 2.3025349987464856, 2.3026035835619822, 2.30241663565237, 2.3026440043758645], "accuracy": [0.09140139818191528, 0.09021265059709549, 0.09074098616838455, 0.0886276587843895, 0.09219389408826828, 0.09021265059709549], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, beta), tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302172968117096, 2.3032103416516936, 2.3025349987464856, 2.3026035835619822, 2.30241663565237, 2.3026440043758645], "accuracy": [0.09140139818191528, 0.09021265059709549, 0.09074098616838455, 0.0886276587843895, 0.09219389408826828, 0.09021265059709549], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0, 7, 4, 0], [1, 2, 0, 0, 3, 3, 3, 2], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302172968117096, 2.3032103416516936, 2.3025349987464856, 2.3026035835619822, 2.30241663565237, 2.3026440043758645], "accuracy": [0.09140139818191528, 0.09021265059709549, 0.09074098616838455, 0.0886276587843895, 0.09219389408826828, 0.09021265059709549], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]