[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.028882061721878, 1.910519143782744, 1.2433919202319352, 0.9229748921781058, 0.8727687621522873, 0.7593258170403856, 0.7304948590466563, 0.7314328118290774, 0.6891047192318974, 0.6406937033556015, 0.6351462799670469, 0.6121921988526167, 0.5828124871107219, 0.5880285320013049, 0.564579572313576, 0.558564205368701, 0.544213266389056, 0.5391554468579658, 0.4874875047864726, 0.5405465904330502, 0.49345369950545037, 0.4904786570079102, 0.48552794814534933, 0.47302806823796223, 0.45426825194736087], "accuracy": [0.31739532947540283, 0.445779949426651, 0.5739004015922546, 0.6583014130592346, 0.6690001487731934, 0.7066437602043152, 0.7153612375259399, 0.7147008180618286, 0.7302865982055664, 0.7469290494918823, 0.755118191242218, 0.7593448758125305, 0.7744023203849792, 0.7745344042778015, 0.7841764688491821, 0.7876105904579163, 0.7915731072425842, 0.7931581139564514, 0.8124422430992126, 0.7950072884559631, 0.8092722296714783, 0.8150838613510132, 0.8185180425643921, 0.8241975903511047, 0.8278959393501282], "val_loss": [1.839416572025844, 1.032653536115374, 0.7117988211768014, 0.6914444650922503, 0.5923362459455218, 0.5538815430232457, 0.5457650423049927, 0.515519210270473, 0.4845100981848581, 0.4836109365735735, 0.4735418217522757, 0.46423590183258057, 0.4856101785387312, 0.4310938375336783, 0.4523799589702061, 0.43254986831120085, 0.4314247284616743, 0.38892039230891634, 0.49538183212280273, 0.3688668693814959, 0.39007021699632916, 0.3725302219390869, 0.39078000613621305, 0.4221967032977513, 0.4063298872538975], "val_accuracy": [0.4076666533946991, 0.6286666393280029, 0.706333339214325, 0.6913333535194397, 0.7229999899864197, 0.7543333172798157, 0.7406666874885559, 0.7536666393280029, 0.7860000133514404, 0.8013333082199097, 0.7829999923706055, 0.7766666412353516, 0.7636666893959045, 0.8140000104904175, 0.7943333387374878, 0.800000011920929, 0.7866666913032532, 0.8373333215713501, 0.7773333191871643, 0.8473333120346069, 0.8370000123977661, 0.8420000076293945, 0.828000009059906, 0.796999990940094, 0.8233333230018616]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.028199940152282, 1.9001372533939802, 1.2185429825585643, 0.9478777729288745, 0.8419487328813406, 0.7539543972952554, 0.761676233182604, 0.693116414713869, 0.6903471915461462, 0.6592272317577993, 0.6213338649535869, 0.6258421369815121, 0.5917411828242619, 0.5891834960527361, 0.5755350211308758, 0.5638016665443185, 0.5429795988404976, 0.5220013177311416, 0.497240070850464, 0.5189164522899975, 0.49958893218611716, 0.4873091610210793, 0.47947632729526934, 0.47780698663790655, 0.4540217407013305, 0.4631306472006979, 0.4533529730284644], "accuracy": [0.3175274133682251, 0.4492141008377075, 0.5729758143424988, 0.651168942451477, 0.6800950765609741, 0.7051908373832703, 0.6973979473114014, 0.7273808121681213, 0.7331924438476562, 0.7401928305625916, 0.7619865536689758, 0.7556465268135071, 0.7728173136711121, 0.7728173136711121, 0.7761194109916687, 0.7819310426712036, 0.7898560166358948, 0.8012151718139648, 0.8119139075279236, 0.8017435073852539, 0.8059701323509216, 0.817989706993103, 0.8238013386726379, 0.8193105459213257, 0.8249900937080383, 0.826310932636261, 0.8321225643157959], "val_loss": [1.8381774084908622, 1.026728970663888, 0.7468031304223197, 0.6729632105146136, 0.5908438989094326, 0.5556962490081787, 0.5473427602222988, 0.49714514187404085, 0.5079343318939209, 0.4875585011073521, 0.5224268777029855, 0.4466392312731062, 0.4441426226070949, 0.44774058886936735, 0.47898926053728375, 0.40884481157575336, 0.40642398595809937, 0.38744508368628366, 0.4606761932373047, 0.37086296933037893, 0.3987155982426235, 0.37130846296037945, 0.4111397181238447, 0.3864670140402658, 0.432538526398795, 0.3758529169218881, 0.42944479840142386], "val_accuracy": [0.40833333134651184, 0.6326666474342346, 0.6673333048820496, 0.7036666870117188, 0.7276666760444641, 0.7506666779518127, 0.7609999775886536, 0.7743333578109741, 0.7760000228881836, 0.800000011920929, 0.7526666522026062, 0.8076666593551636, 0.8076666593551636, 0.7866666913032532, 0.7749999761581421, 0.8130000233650208, 0.8206666707992554, 0.8373333215713501, 0.7903333306312561, 0.8463333249092102, 0.8370000123977661, 0.8489999771118164, 0.8086666464805603, 0.8203333616256714, 0.8146666884422302, 0.8386666774749756, 0.7953333258628845]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [9, 63, 57, 12]], "fitness": -0.1340000033378601, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 9, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3064851794244747, 2.3227012008172707, 2.359357587539477, 2.42669716027466, 2.5214942099317157, 2.640689511230483, 2.757822867445013, 2.854511730926951, 2.9465996912992893, 3.012981853150043, 3.049508490692812, 3.037215804411294, 3.0108966279763587, 2.9929808514418306, 2.9020613881779886, 2.870615843847333, 2.8030470700516537, 2.7588849755452056, 2.710000325093227, 2.6565714055646947, 2.6397026530535244, 2.5913731856290076, 2.550151111427441, 2.5317738329524992, 2.495377115302035, 2.474588468200448, 2.466027273840168, 2.445777015852308, 2.4367720519609897, 2.424868037876688, 2.413417079397999], "accuracy": [0.08942015469074249, 0.09655263274908066, 0.09272222965955734, 0.1010434553027153, 0.09826971590518951, 0.1026284471154213, 0.09972262382507324, 0.1026284471154213, 0.10196803510189056, 0.10698718577623367, 0.10408136248588562, 0.09919429570436478, 0.10474177449941635, 0.09866596013307571, 0.10513802617788315, 0.10553427785634995, 0.10659094154834747, 0.10421344637870789, 0.10210011899471283, 0.10447761416435242, 0.10632677376270294, 0.1072513535618782, 0.11028926074504852, 0.1022322028875351, 0.1088363528251648, 0.11147800832986832, 0.11015717685222626, 0.107647605240345, 0.10077928751707077, 0.10474177449941635, 0.11240258812904358], "val_loss": [1.9734396934509277, 1.9810943603515625, 2.002455711364746, 2.0367189134870256, 2.080849988119943, 2.1291507312229703, 2.173853669847761, 2.208965914590018, 2.229782853807722, 2.2357970646449496, 2.2272044590541293, 2.2103028978620256, 2.1881697518484935, 2.162851333618164, 2.1399132183619907, 2.1170401573181152, 2.096419266292027, 2.07781491960798, 2.061744144984654, 2.047985008784703, 2.034703459058489, 2.0242601122174944, 2.0156654630388533, 2.0081748962402344, 2.0028298241751537, 1.9981951032366072, 1.9943430764334542, 1.99129090990339, 1.988675253731864, 1.9867525100708008, 1.9850749969482422], "val_accuracy": [0.052000001072883606, 0.09533333033323288, 0.09866666793823242, 0.10000000149011612, 0.10166666656732559, 0.10199999809265137, 0.10266666859388351, 0.10366666316986084, 0.10633333027362823, 0.10866666585206985, 0.1120000034570694, 0.11533333361148834, 0.11933333426713943, 0.12066666781902313, 0.12666666507720947, 0.13066667318344116, 0.13633333146572113, 0.140666663646698, 0.14433333277702332, 0.1496666669845581, 0.15199999511241913, 0.15600000321865082, 0.15733332931995392, 0.1576666682958603, 0.1576666682958603, 0.15833333134651184, 0.15800000727176666, 0.15666666626930237, 0.15566666424274445, 0.15600000321865082, 0.15600000321865082]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10657142847776413, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 9, 3, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [23.886211959205017, 29108.18281120039, 2.305689995708624, 613.1946558683399, 2.3483125268507625, 9.003639122790403e+21], "accuracy": [0.10236428678035736, 0.10196803510189056, 0.09576013684272766, 0.09377889335155487, 0.09826971590518951, 0.09311848133802414], "val_loss": [3.3955515452793668, 1.977013383592878, 1.9758475848606654, 1.9750772203717912, 1.9744393484933036, 1.9793655531747], "val_accuracy": [0.10466666519641876, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 2, 4, 6, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [23, 19, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 77, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [24.670218290480893, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09008057415485382, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [31216758236306.285, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0963333323597908, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 5, 2, 5, 5, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 3, 6], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta))))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [61, 12, 39, 21, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [5, 3, 1, 2, 5, 2, 9, 1, 5, 1, 7, 4, 7, 8, 9], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 5, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [55, 76, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022357814772696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 5, 2, 5, 5, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 77, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [24, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022357814772696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 9, 7, 1, 9, 2, 5, 3, 8, 5, 4, 0, 6, 9, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [61, 12, 41, 21, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 1, 2, 9, 2, 2, 3, 0, 6, 7, 4, 7, 8, 9], [4, 3, 4, 2, 2, 2, 1, 0, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [5, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 3, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad)))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022357814772696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [4, 0, 5, 7, 2, 2, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 9, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [41, 83, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 9, 1, 9, 2, 8, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [62, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08572183549404144, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [0, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 5, 2, 5, 5, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9, 4, 5, 6, 8, 6, 8, 5, 4, 2, 0], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 4, 4], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 3, 3, 0, 2], [41, 7, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 40, 40, 25, 15, 1, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta))))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, tf.math.negative(sigma)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3051148363470384, 2.3537692768919216, 7593175.150656091, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09060890227556229, 0.11834631860256195, 0.11121384054422379, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9785549300057548, 4.184666224888393, 3623686729.142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02199999988079071, 0.033666666597127914, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 5, 2, 5, 5, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [5, 4, 1, 2, 5, 2, 2, 3, 5, 6, 7, 4, 7, 8, 9, 7, 4, 6, 5, 5, 8, 4, 7, 8], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 0, 0, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [1, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 24, 15, 3, 5, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7535.794648451749, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04411570355296135, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [531806225207881.1, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4403570.544442129, 84207604.76343945, 389164089.04292697, 1078588329.4212124, 2307173262.624224, 4269801382.530181], "accuracy": [0.09708096832036972, 0.10381719470024109, 0.1006472036242485, 0.09826971590518951, 0.09589222073554993, 0.09945846349000931], "val_loss": [16429441.142857144, 131171414.85714285, 442409563.4285714, 1048330020.5714285, 2047115117.7142856, 3536946980.571429], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.07428571581840515, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))), grad)), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [1.21152985061819e+22, 1.3954546467858467e+22, 1.3801372377169766e+22, 1.3684807248523997e+22, 1.3845076900066357e+22, 1.4320037002018451e+22], "accuracy": [0.09800554811954498, 0.10408136248588562, 0.09998679161071777, 0.10500594228506088, 0.10527011007070541, 0.1026284471154213], "val_loss": [1.124492499790502e+22, 1.124492499790502e+22, 1.124492499790502e+22, 1.124492499790502e+22, 1.124492499790502e+22, 1.124492499790502e+22], "val_accuracy": [0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288, 0.09533333033323288]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [4, 0, 5, 7, 2, 2, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [0, 85, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 2, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.square(grad)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30235601463464, 2.304630942269717, 2.3029203815797787, 2.3044352185346697, 2.302794603796966, 2.304088253969246], "accuracy": [0.0948355570435524, 0.09351472556591034, 0.09034473448991776, 0.0878351628780365, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9703850064958846, 1.9703849383762904, 1.9703847340175085, 1.9703846658979143, 1.9703844615391322, 1.9703843934195382], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [0, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302356208052539, 2.3046314460317046, 2.3029214971809653, 2.304436586064087, 2.3027962592173687, 2.3040904311330137], "accuracy": [0.0948355570435524, 0.09351472556591034, 0.09034473448991776, 0.08796724677085876, 0.09008057415485382, 0.09100515395402908], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [6, 2, 2, 5, 7, 1, 9, 2, 5, 2, 0, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 2, 0, 0, 3, 0, 2], [0, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 9, 5, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023601078070732, 2.304642371434766, 2.302940102206749, 2.3044639999179037, 2.3028277164877933, 2.30413232774247], "accuracy": [0.09496764093637466, 0.09338264167308807, 0.09047681838274002, 0.08770307898521423, 0.08994849026203156, 0.09100515395402908], "val_loss": [1.970388344355992, 1.9703912734985352, 1.9703937258039201, 1.970395905630929, 1.970397676740374, 1.9703989710126604], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.035999998450279236, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 2, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 9, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 1, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 4, 7, 8, 9], [4, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [0, 83, 57, 12]], "fitness": -0.0357142873108387, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024690178926703, 2.305487883105144, 2.3053037708996937, 2.3091308469423417, 2.3105460751908504, 2.315814250306903], "accuracy": [0.0944393053650856, 0.09166556596755981, 0.08532558381557465, 0.07845727354288101, 0.07238145917654037, 0.06670188903808594], "val_loss": [1.970787593296596, 1.9719023704528809, 1.97374050957816, 1.9763179506574358, 1.979644707271031, 1.9837444850376673], "val_accuracy": [0.03433333337306976, 0.030666666105389595, 0.025333333760499954, 0.018333332613110542, 0.014999999664723873, 0.009999999776482582]}}]