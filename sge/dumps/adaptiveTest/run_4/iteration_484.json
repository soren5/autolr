[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 2, 4, 3, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [7, 9, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.224026668844852, 1.725020369203603, 1.2070550399292037, 1.0850522429195804, 0.9255411967688296, 0.8801697752006837, 0.8372159150172345, 0.7892243489062136, 0.7555424706684899, 0.7603000623596311, 0.7431216675607583, 0.7069257269634972, 0.7034681668182043, 0.6867887705403107, 0.6712990536697316, 0.6883367798142918, 0.6550753401286566, 0.6497716323385591, 0.6464402001405736, 0.6301200941821068, 0.6250900977150072, 0.616034613679413, 0.6367124343560813, 0.6053739611294133, 0.5952638850519449, 0.585621805608926, 0.5920783248811806, 0.5923611207834056, 0.5731877801424917], "accuracy": [0.24580636620521545, 0.46506404876708984, 0.5842028856277466, 0.613789439201355, 0.6765288710594177, 0.6798309087753296, 0.6959450244903564, 0.7147008180618286, 0.7214370369911194, 0.7190595865249634, 0.7259278893470764, 0.7430986762046814, 0.7403249144554138, 0.7460044622421265, 0.7508915662765503, 0.7368907928466797, 0.757099449634552, 0.7601373791694641, 0.7561748623847961, 0.7746664881706238, 0.7646281719207764, 0.7738739848136902, 0.7576277852058411, 0.7741381525993347, 0.7857614755630493, 0.7828556299209595, 0.7753269076347351, 0.7786290049552917, 0.7878747582435608], "val_loss": [1.7140679018838065, 1.0109963757651192, 0.7779819454465594, 0.6871397154671806, 0.6468218905585152, 0.6059953144618443, 0.5688012838363647, 0.5431406157357352, 0.591540949685233, 0.5335418667112078, 0.5023006200790405, 0.5440371036529541, 0.5107922383717128, 0.47366304056985037, 0.5182964972087315, 0.4859000103814261, 0.48236567633492605, 0.4629183156149728, 0.458485552242824, 0.4540552411760603, 0.44734157834734234, 0.438303428036826, 0.44159931795937674, 0.4317580376352583, 0.4371339338166373, 0.48598863397325787, 0.43329486676624845, 0.4309929098401751, 0.44294726848602295], "val_accuracy": [0.47600001096725464, 0.6489999890327454, 0.687666654586792, 0.7083333134651184, 0.7179999947547913, 0.7423333525657654, 0.7553333044052124, 0.7576666474342346, 0.7273333072662354, 0.762666642665863, 0.7853333353996277, 0.753333330154419, 0.7693333625793457, 0.793666660785675, 0.7570000290870667, 0.7866666913032532, 0.7793333530426025, 0.8006666898727417, 0.7983333468437195, 0.8016666769981384, 0.8026666641235352, 0.8100000023841858, 0.8076666593551636, 0.8206666707992554, 0.812666654586792, 0.7833333611488342, 0.8053333163261414, 0.8140000104904175, 0.7889999747276306]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 2, 1, 3, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2663879891459686, 2.1345456090853308, 1.826815110722931, 1.4319103226575396, 1.2011516654118255, 1.0811301986255728, 0.982641907455332, 0.9266166643554099, 0.8949110210847231, 0.8537203279925281, 0.8326423419480783, 0.8174868543008535, 0.7804268103753729, 0.7754257520853395, 0.757023827392884, 0.7434980112091425, 0.7199651528547909, 0.7146636063963462, 0.715406913035235, 0.6939426106531795, 0.6988262696792704, 0.6804595987526906, 0.669853333752342, 0.6738952603070586, 0.6694151043514014, 0.6536307809312252, 0.6466248904662031, 0.6400992393477907, 0.6408890974268134, 0.6257243756573387, 0.6350476788791132, 0.6250954094957824, 0.6061718482713595, 0.6194763142340503, 0.619376789789788], "accuracy": [0.17936864495277405, 0.34420815110206604, 0.4427420496940613, 0.5252938866615295, 0.5844670534133911, 0.6194690465927124, 0.6499801874160767, 0.6650376319885254, 0.6806234121322632, 0.6930392384529114, 0.6959450244903564, 0.7005679607391357, 0.7121912837028503, 0.7162858247756958, 0.7206445932388306, 0.7300224304199219, 0.7347774505615234, 0.733060359954834, 0.7390040755271912, 0.7416457533836365, 0.7413815855979919, 0.7408532500267029, 0.7490423917770386, 0.752212405204773, 0.750759482383728, 0.7523444890975952, 0.7573636174201965, 0.7622507214546204, 0.7577598690986633, 0.7675340175628662, 0.7607977986335754, 0.7671377658843994, 0.774798572063446, 0.7642319202423096, 0.770439863204956], "val_loss": [1.8807967049734933, 1.669431550162179, 1.2627673489706857, 0.9528070858546666, 0.7995123182024274, 0.725358418055943, 0.6722654615129743, 0.6570455687386649, 0.6159724167415074, 0.5914072649819511, 0.5698153291429792, 0.5610103266579765, 0.5440511873790196, 0.5593629564557757, 0.5271343163081578, 0.5286508287702288, 0.5111478226525443, 0.5163107429231916, 0.5008899654660907, 0.4964335135051182, 0.48858061858585905, 0.4780151503426688, 0.4759676626750401, 0.4716788019452776, 0.46902687208993094, 0.46376706872667584, 0.4620757784162249, 0.4540869508470808, 0.4522844893591745, 0.4474781240735735, 0.4564107486179897, 0.45310657364981516, 0.44955882004329134, 0.44897305965423584, 0.4437922239303589], "val_accuracy": [0.429666668176651, 0.5370000004768372, 0.593666672706604, 0.6726666688919067, 0.6913333535194397, 0.7089999914169312, 0.7239999771118164, 0.7066666483879089, 0.7456666827201843, 0.7400000095367432, 0.7606666684150696, 0.7620000243186951, 0.765999972820282, 0.7570000290870667, 0.7763333320617676, 0.7749999761581421, 0.7829999923706055, 0.7760000228881836, 0.7793333530426025, 0.7836666703224182, 0.7953333258628845, 0.7919999957084656, 0.7923333048820496, 0.8013333082199097, 0.8040000200271606, 0.7993333339691162, 0.8013333082199097, 0.8059999942779541, 0.8100000023841858, 0.8133333325386047, 0.8026666641235352, 0.8043333292007446, 0.8056666851043701, 0.8029999732971191, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 1, 4, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 25, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 5, 2, 4, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 1, 4, 3, 2, 1, 0, 5, 2, 3, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), tf.math.add(beta, tf.math.square(beta)))), tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.266388088090781, 2.134544429651829, 1.8268076223767178, 1.4319136507711736, 1.2011354929577989, 1.0811466791248434, 0.9826114616452616, 0.9266381873950321, 0.8950069055203291, 0.8536360647227739, 0.8325883084993005, 0.8170635581268468, 0.7801425545962889, 0.7755103197788692, 0.757298348665143, 0.7436678085140092, 0.7204430421518848, 0.7154554388920203, 0.7151303927675765, 0.6934349691516704, 0.6992965340299409, 0.6805284846460405, 0.6697329156402867, 0.6740296124829404, 0.6687399203892885, 0.6532629665492659, 0.646149686141462, 0.6400043983595514, 0.6412811485405658, 0.6260234243472049, 0.6351724606164301, 0.6250489303826687, 0.6053876872264855, 0.6183407456410984, 0.6189585917220534], "accuracy": [0.17936864495277405, 0.34420815110206604, 0.442609965801239, 0.5252938866615295, 0.5849953889846802, 0.6199973821640015, 0.6494518518447876, 0.6653017997741699, 0.6802271604537964, 0.6942279934883118, 0.695813000202179, 0.7021529674530029, 0.7127195596694946, 0.7164179086685181, 0.7217012047767639, 0.7310791015625, 0.7331924438476562, 0.7322678565979004, 0.7372870445251465, 0.7420420050621033, 0.7415136694908142, 0.7423061728477478, 0.748249888420105, 0.7515519857406616, 0.7516840696334839, 0.750759482383728, 0.7580240368843079, 0.7629110813140869, 0.7584202885627747, 0.7677981853485107, 0.7617223858833313, 0.767401933670044, 0.7773081660270691, 0.7663452625274658, 0.7711002230644226], "val_loss": [1.880796023777553, 1.6694302899496896, 1.2626968451908656, 0.9527513299669538, 0.7995072943823678, 0.7251763684409005, 0.6722239766802106, 0.6568596363067627, 0.6158822774887085, 0.5914538587842669, 0.5695801803043911, 0.5607975891658238, 0.5438789299556187, 0.5592262744903564, 0.5271176951272147, 0.5300412007740566, 0.5113508701324463, 0.5151747805731637, 0.5028153147016253, 0.496976511819022, 0.4887544427599226, 0.47757256031036377, 0.4763628584997995, 0.4722180536815098, 0.46938603264944895, 0.46423026493617464, 0.46119276114872526, 0.4549450533730643, 0.45207970482962473, 0.447456887790135, 0.4549135310309274, 0.45121918405805317, 0.4486258881432669, 0.4478616884776524, 0.44347374779837473], "val_accuracy": [0.4300000071525574, 0.5376666784286499, 0.5946666598320007, 0.6726666688919067, 0.6919999718666077, 0.7096666693687439, 0.7239999771118164, 0.7073333263397217, 0.7450000047683716, 0.7416666746139526, 0.7603333592414856, 0.7613333463668823, 0.765999972820282, 0.7576666474342346, 0.7756666541099548, 0.7739999890327454, 0.7836666703224182, 0.7770000100135803, 0.7763333320617676, 0.7826666831970215, 0.7950000166893005, 0.7946666479110718, 0.7923333048820496, 0.8006666898727417, 0.8040000200271606, 0.8006666898727417, 0.8036666512489319, 0.8063333630561829, 0.8090000152587891, 0.8133333325386047, 0.8033333420753479, 0.8066666722297668, 0.8046666383743286, 0.8043333292007446, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7848571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.266387971164591, 2.1345411866427004, 1.8267934082080628, 1.4318991947199264, 1.2011164715576323, 1.0812241084949452, 0.9824644310001086, 0.9266619864487613, 0.8948622712165043, 0.8532926772469307, 0.8325733383570082, 0.8175405576527945, 0.7801377522301413, 0.7754455918586171, 0.7570330139636805, 0.7439495820678567, 0.7198598067821245, 0.7146672822181748, 0.7148849709615606, 0.6942315222942723, 0.6996538040660328, 0.6802200846321877, 0.6700489900650963, 0.6737032195108127, 0.6684466994055951, 0.6527132361304601, 0.6460282479641287, 0.6400290879717025, 0.6407957778725216, 0.6264010983341012, 0.6357570348587711, 0.6243705482310339, 0.6058420452459409, 0.6197107442775344], "accuracy": [0.17936864495277405, 0.34420815110206604, 0.442609965801239, 0.5251618027687073, 0.5849953889846802, 0.6199973821640015, 0.6498481035232544, 0.6653017997741699, 0.6802271604537964, 0.6923788189888, 0.6960771083831787, 0.7016246318817139, 0.7111346125602722, 0.7168141603469849, 0.7201162576675415, 0.7305507659912109, 0.7338528633117676, 0.7331924438476562, 0.7380794882774353, 0.7417778372764587, 0.7429665923118591, 0.7416457533836365, 0.748778223991394, 0.7531369924545288, 0.7524765729904175, 0.7528728246688843, 0.7578919529914856, 0.7635715007781982, 0.7578919529914856, 0.767930269241333, 0.7602694630622864, 0.7691190242767334, 0.7773081660270691, 0.7644960880279541], "val_loss": [1.8807957512991769, 1.6694238867078508, 1.2626726627349854, 0.9527398177555629, 0.7995165075574603, 0.725225533757891, 0.6719208444867816, 0.6570233958108085, 0.615506683077131, 0.5918270519801548, 0.5693820374352592, 0.5612108026232038, 0.543941855430603, 0.5601776497704642, 0.5269608157021659, 0.5290268318993705, 0.5112314905439105, 0.5163203477859497, 0.5018043347767421, 0.4973903383527483, 0.4891584941319057, 0.47792857033865793, 0.47479030064174105, 0.47204911708831787, 0.46967148780822754, 0.46319624355861116, 0.46151329789842876, 0.4546202080590384, 0.4521106651851109, 0.44796364648001535, 0.4554636648723057, 0.45205208233424593, 0.44974001816340853, 0.4482981136866978], "val_accuracy": [0.4300000071525574, 0.5376666784286499, 0.5943333506584167, 0.6723333597183228, 0.6916666626930237, 0.7093333601951599, 0.7236666679382324, 0.7083333134651184, 0.7459999918937683, 0.7400000095367432, 0.7609999775886536, 0.7603333592414856, 0.7666666507720947, 0.7553333044052124, 0.7756666541099548, 0.7739999890327454, 0.784333348274231, 0.7766666412353516, 0.7789999842643738, 0.7826666831970215, 0.7943333387374878, 0.7910000085830688, 0.7956666946411133, 0.8016666769981384, 0.8013333082199097, 0.7973333597183228, 0.8019999861717224, 0.8066666722297668, 0.8106666803359985, 0.8106666803359985, 0.8036666512489319, 0.8046666383743286, 0.8043333292007446, 0.8040000200271606]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 1, 4, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7785714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2677474441372123, 2.136938856703305, 1.8309601193421616, 1.4354515001837131, 1.219311422219035, 1.093448414778618, 0.9992940322897138, 0.9531470950190511, 0.9036832243428491, 0.8778924962407043, 0.8447805348719273, 0.8212884990940036, 0.8061347528376899, 0.7839203477456915, 0.7645035845697076, 0.7647388178312452, 0.7388480257647873, 0.7376873401791869, 0.7321059090932757, 0.7174043307026001, 0.7002166416808489, 0.6986067275471297, 0.6992459639723841, 0.6810295903655942, 0.6729516695597861, 0.6717323317047218, 0.6634467331457132, 0.6632459312854521, 0.6579955980967002, 0.6424915386764144, 0.6555237969891144], "accuracy": [0.1842557191848755, 0.35107648372650146, 0.4501386880874634, 0.5307092666625977, 0.5851274728775024, 0.6181482076644897, 0.6524897813796997, 0.6625280380249023, 0.6782459616661072, 0.6915863156318665, 0.6996433734893799, 0.7082287669181824, 0.7120591998100281, 0.7190595865249634, 0.7256637215614319, 0.7240787148475647, 0.7253995537757874, 0.7360982894897461, 0.7358341217041016, 0.7354378700256348, 0.7478536367416382, 0.7518161535263062, 0.7478536367416382, 0.7504953145980835, 0.7548540234565735, 0.7588165402412415, 0.7623828053474426, 0.7631752490997314, 0.763967752456665, 0.7701756954193115, 0.7646281719207764], "val_loss": [1.8816805567060197, 1.6726720333099365, 1.2731006486075265, 0.9561869076320103, 0.8129815374101911, 0.7307737214224679, 0.6846103157315936, 0.6943028824669975, 0.6161839280809674, 0.5920374393463135, 0.5892821039472308, 0.5631928784506661, 0.5484341723578317, 0.5423044988087246, 0.5290722676685878, 0.5206451756613595, 0.5291622706821987, 0.50836295740945, 0.5110754455838885, 0.49917175088609966, 0.48590162822178434, 0.4827573469706944, 0.4865741729736328, 0.46589931419917513, 0.4688267537525722, 0.46014041560036795, 0.4732276201248169, 0.47049171583993094, 0.4540727990014212, 0.46334922313690186, 0.4576304129191807], "val_accuracy": [0.4169999957084656, 0.5223333239555359, 0.5903333425521851, 0.6706666946411133, 0.6793333292007446, 0.7110000252723694, 0.7233333587646484, 0.6963333487510681, 0.7429999709129333, 0.7526666522026062, 0.7536666393280029, 0.7620000243186951, 0.7583333253860474, 0.7590000033378601, 0.778333306312561, 0.7829999923706055, 0.7563333511352539, 0.777999997138977, 0.7829999923706055, 0.7853333353996277, 0.7919999957084656, 0.8036666512489319, 0.7860000133514404, 0.8056666851043701, 0.8029999732971191, 0.8113333582878113, 0.7956666946411133, 0.7919999957084656, 0.8100000023841858, 0.8003333210945129, 0.7963333129882812]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.38600000739097595, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.23329241561411, 2.207577514232756, 2.295853561335362, 2.298636833721731, 2.303988701064967, 2.3189223595834476], "accuracy": [0.25201427936553955, 0.2903183102607727, 0.1562541276216507, 0.13868708908557892, 0.09576013684272766, 0.09853387624025345], "val_loss": [1.8286427089146204, 1.9648141860961914, 1.9691998617989677, 1.9741331509181432, 1.9776779583522253, 2.034258093152727], "val_accuracy": [0.3959999978542328, 0.23633334040641785, 0.15066666901111603, 0.08366666734218597, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [1, 7], [71], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, alpha))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(beta)))), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 4, 4, 8, 2, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 29, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [6, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 5, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 2, 0, 3, 0, 2], [34, 26, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 11, 5, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(sigma, tf.math.negative(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(beta)))), tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [5261521.035352633, 25627.800048743855, 13.966038975119197, 19.510710405494088, 29.022658441674835, 44.302974835961265, 67.93672292435001, 102.86233101400008], "accuracy": [0.09853387624025345, 0.09721305221319199, 0.09549596905708313, 0.09774138033390045, 0.1002509593963623, 0.09998679161071777, 0.10500594228506088, 0.10421344637870789], "val_loss": [177778.47767857142, 10.441613061087471, 14.068475995744977, 20.717654091971262, 31.76581355503627, 49.25287083217076, 75.13898577008929, 120.14266967773438], "val_accuracy": [0.09666666388511658, 0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.09733333438634872, 0.0963333323597908, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 0, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 2, 4, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 14, 9, 5, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.add(sigma, tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7912295976598022e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14542332291603088, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 1, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.divide_no_nan(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 25, 93, 63, 40, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 6, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 0, 2, 2, 1, 0, 5, 9, 0, 8], [1, 2, 1, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(alpha, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.subtract(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(sigma)))))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 1, 4, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 25, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 5, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [40, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 1, 4, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [4, 4, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 2, 2, 0, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 26, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 20, 11, 4, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(alpha, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.107647605240345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 6, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 0, 2, 2, 1, 0, 5, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(alpha, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, sigma)", "other_info": {"loss": [2.3034486269607615, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 25, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 4, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 25, 25, 15, 10, 2, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta)))))))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), grad)), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, sigma), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3033566917048596, 2.3021601122824773, 2.3018322577329755, 2.3012837732252334, 2.3033756742450966, 2.3020902806426777], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.09285431355237961, 0.0936468094587326, 0.08030643314123154, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 2, 2, 0, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 2, 2, 2, 1, 0, 9, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, tf.math.add(beta, grad)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3033566917048596, 2.3021601122824773, 2.3018322577329755, 2.3012837732252334, 2.3033756742450966, 2.3020902806426777], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.09285431355237961, 0.0936468094587326, 0.08030643314123154, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(sigma), sigma))", "other_info": {"loss": [2.3033566917048596, 2.3021601122824773, 2.3018322577329755, 2.3012837732252334, 2.3033756742450966, 2.3020902806426777], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.09285431355237961, 0.0936468094587326, 0.08030643314123154, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 1, 4, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 8, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [1, 7], [71], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 2, 2, 1, 0, 0, 9, 0, 8], [3, 3, 0, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 21, 21, 13, 8, 4, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.subtract(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3033566917048596, 2.3021601122824773, 2.3018322577329755, 2.3012837732252334, 2.3033756742450966, 2.3020902806426777], "accuracy": [0.08809932321310043, 0.09140139818191528, 0.09285431355237961, 0.0936468094587326, 0.08030643314123154, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]