[{"genotype": [[0], [0], [1], [], [2], [], [0], [1], [], [1], [], [0], [1], [], [4], [], [1], [], [2], []], "fitness": -0.6154285669326782, "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.468200661613012, 2.163711552890127, 2.008813015741679, 1.8047825773362833, 1.7019469065988038, 1.8138384985145939, 1.4933292726720282, 1.3610515612274854, 2.003303326604357, 1.875035248050254, 1.5687292012650622, 1.2930078813192347], "accuracy": [0.19257694482803345, 0.2222955971956253, 0.3065645098686218, 0.3961167633533478, 0.43745872378349304, 0.4107779562473297, 0.48712190985679626, 0.5275393128395081, 0.37366265058517456, 0.37181350588798523, 0.47906485199928284, 0.5851274728775024], "val_loss": [1.826725959777832, 1.803208555494036, 1.5172042506081718, 1.1813043526240758, 1.9521750041416712, 1.1359134401593889, 0.9235801696777344, 1.3026905741010393, 1.5665435450417655, 1.6290863241468156, 0.8987369367054531, 1.0370557989392961], "val_accuracy": [0.2993333339691162, 0.33000001311302185, 0.4126666784286499, 0.534333348274231, 0.4659999907016754, 0.5263333320617676, 0.653333306312561, 0.45633333921432495, 0.42100000381469727, 0.3553333282470703, 0.625333309173584, 0.5816666483879089]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 2, 1, 7, 5], [0, 3, 0, 3, 1], [64, 95], [0, 0, 1, 1, 0], [0, 0, 1, 1, 1], [6, 7], [2, 0, 5], [51], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 10, 10, 5, 5, 2, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [0], [87], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 8, 4, 7, 4], [3, 4, 3, 1, 1], [], [1], [], [], [], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1249679835.853499, 23885812040.935146, 109956411317.8814, 309378368178.331, 655816507710.1149, 1217526964610.2825], "accuracy": [0.10011887550354004, 0.10447761416435242, 0.09932637959718704, 0.10328886657953262, 0.09945846349000931, 0.1014397069811821], "val_loss": [4691340434.285714, 37519633846.85714, 126615388160.0, 300110006564.5714, 586150313984.0, 1012839406445.7142], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [0], [30], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], [3, 8, 4, 3, 7, 6, 2, 5, 5, 2, 4, 1, 1, 7, 6, 9, 5], [3, 2, 2, 0, 3, 4, 1, 4, 1, 2, 5, 3], [7, 70], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, beta), beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 1, 29, 29, 17, 12, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [0], [22], [1], [1], [], [1], [], [0, 1, 0], [0, 1], [4], [7], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3025968217452943, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [0], [87], [0], [1], [], [1], [], [1], [], [], [], [], [0, 0, 1, 1], [4, 0], [1, 0], [67]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(alpha), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302219370274008, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1]}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1], [7, 1, 2], [2, 2, 0, 3], [29], [0, 1, 0], [0, 1, 1], [3], [0, 3], [2], [0, 1], [0], [5], [], [], [0], [9], [], [25]], "fitness": -0.10000000149011612, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, grad)), tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029333663701603, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 7, 7, 3, 4, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 1, 1, 0, 1]}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 0, 0, 7, 5, 7, 8, 1, 2], [2, 3, 2, 0, 0, 2], [35, 30], [1], [1], [], [0], [71], [0], [1], [], [0], [5], [1], [], [3], []], "fitness": -0.10000000149011612, "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.subtract(grad, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3383775120161907, 2.76390925679996, 3.931969853188179, 5.866081739634004, 8.813060091880523, 12.317704406947886, 16.856959036737777], "accuracy": [0.09060890227556229, 0.09708096832036972, 0.09800554811954498, 0.09774138033390045, 0.09760929644107819, 0.09589222073554993, 0.10249637067317963], "val_loss": [2.0379908425467357, 2.4320810862949918, 3.3583600180489674, 4.84561961037772, 6.849581173488072, 9.366300855364118, 12.421066284179688], "val_accuracy": [0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 15, 15, 9, 6, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [1], [], [0], [1], [], [1], [], [1], [], [], [], [], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [2, 2, 5, 8, 2, 4, 2, 1, 7, 1, 7, 2, 9], [1, 2, 1, 2, 1, 0, 2, 1, 0, 2], [83, 92, 1]], "fitness": -0.10000000149011612, "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.add(tf.math.square(beta), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(alpha, tf.math.add(tf.math.subtract(beta, alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta), alpha), tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), beta))))))", "other_info": {"loss": [2.3022165360814153, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 23, 13, 10, 3]}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [4, 2, 8, 4, 4, 1, 8, 8], [3, 1, 3, 3, 3, 3], [], [1], [1], [], [5], [], [1], [], [], [], [], [0, 1, 1], [1], [1, 1], []], "fitness": -0.10000000149011612, "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), grad)))), tf.math.pow(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0]}, {"genotype": [[0], [1], [1], [], [3], [], [0, 0, 1, 0], [0, 0, 0, 1], [5, 5, 8], [5], [], [1], [], [], [], [], [0, 0, 1, 0, 0, 1], [7, 1, 9, 8], [0, 0], [93, 98, 2]], "fitness": -0.10000000149011612, "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024852175392008, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 3]}, {"genotype": [[0], [1], [1], [], [2], [], [0], [1], [], [0], [43], [0], [1], [], [4], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [11542180.8798912, 228476149.24316472, 1046450451.39189, 2914524919.343812, 6285444193.787875, 11606770329.850218], "accuracy": [0.09708096832036972, 0.09866596013307571, 0.09628847241401672, 0.1014397069811821, 0.10117553919553757, 0.1006472036242485], "val_loss": [44845941.71428572, 358254756.5714286, 1208540854.857143, 2864004315.428571, 5592987355.428572, 9663795492.571428], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 4, 1, 9, 4, 5, 9, 8, 3, 8, 7, 5], [3, 3, 1, 2, 3], [93, 61], [0, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [8, 2, 1], [3, 4, 2], [], [0, 0], [0, 1], [0], [1], [], [1], [], [0], [82]], "fitness": -0.10000000149011612, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.add(tf.math.square(grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.subtract(grad, grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022969641689897, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 17, 17, 12, 5, 2, 6, 6, 3, 3, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1]}, {"genotype": [[0], [0, 1], [0, 1], [5], [2], [], [0], [1], [], [5], [], [0, 1, 1], [0], [2], [], [], [1], [], [0], [63]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033043936715702, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [0, 1, 0], [0, 1, 1], [3], [3, 3], [], [0], [1], [], [2], [], [1], [], [], [], [], [0, 1], [0], [0], [10]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.7501889392133276, 7.296526473416566, 18.201750362427983, 35.40841316663515, 61.198674280692906, 94.66577850712635], "accuracy": [0.09734513610601425, 0.09734513610601425, 0.10130762308835983, 0.10077928751707077, 0.10434553027153015, 0.10249637067317963], "val_loss": [3.067376068660191, 8.019066401890345, 16.98589379446847, 30.58084215436663, 49.56302751813616, 74.8021000453404], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1]}, {"genotype": [[0], [0], [1], [], [1], [], [1, 0], [0, 1], [5], [2], [], [0], [1], [], [7], [], [0, 1, 1], [6], [0, 0], [15, 76]], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024305806042196, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 2]}, {"genotype": [[0], [0, 0], [0, 1], [5], [2], [], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 7, 4, 0, 5, 6, 1, 1], [2, 3, 0, 2, 2, 2, 2], [41], [0], [1], [], [6], [], [0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 1, 7, 1], [2, 1, 2, 2, 0], [55]], "fitness": -0.03685714304447174, "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.math.add(alpha, beta), tf.math.subtract(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302780161790718, 2.302083646711058, 2.3022361962456097, 2.3022521976246226, 2.302670995053236, 2.3024511739735622], "accuracy": [0.09602430462837219, 0.09113723784685135, 0.0956280529499054, 0.08677849918603897, 0.08757099509239197, 0.08611807972192764], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 9, 4, 5, 1]}, {"genotype": [[0], [1], [1], [], [1], [], [0], [1], [], [2], [], [1], [], [], [], [], [0, 0, 1, 1], [7, 5], [1, 3], []], "fitness": -0.03685714304447174, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(alpha), sigma)", "other_info": {"loss": [2.3013565491187715, 2.3024183431904253, 2.301645940998054, 2.3019078780536906, 2.3019985241298553, 2.302145896255852], "accuracy": [0.09615638852119446, 0.09087307006120682, 0.09153348207473755, 0.08836349099874496, 0.08889182657003403, 0.0956280529499054], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0]}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0], [3, 7, 2, 7, 3, 6, 7, 6, 6, 7, 6, 9, 1, 8, 4, 3, 2, 4, 7, 4, 0, 6, 1, 4, 9, 0, 8, 9], [3, 2, 2, 0, 2, 1, 1, 1, 3, 0, 0, 0, 3, 0, 0, 0, 2, 1, 1], [60, 68, 22, 28, 65, 90, 47, 62, 2, 17], [0], [1], [], [5], [], [0, 1, 1], [0], [7], [], [], [1], [], [3], []], "fitness": -0.03685714304447174, "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, alpha))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))), tf.math.negative(tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, alpha)), alpha), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302453366536443, 2.3038587687022147, 2.3044378697958763, 2.3022062762097564, 2.3028399335898744, 2.3005327945372147], "accuracy": [0.09311848133802414, 0.09219389408826828, 0.0956280529499054, 0.0948355570435524, 0.09192973375320435, 0.09140139818191528], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}, "mapping_values": [1, 47, 47, 28, 19, 10, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [3], [], [1], [1], [], [2], [], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.03685714304447174, "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3030200690767155, 2.3015077912717716, 2.302269525563224, 2.303570563121479, 2.3031778591593355, 2.3027536391959984], "accuracy": [0.08849557489156723, 0.0940430611371994, 0.09311848133802414, 0.09245806187391281, 0.0878351628780365, 0.08915598690509796], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}]