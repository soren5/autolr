[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2559039707685176, 2.0569446533426334, 1.630816806891591, 1.282352821749152, 1.09498267960413, 0.9846629072898383, 0.9362441186246115, 0.8935152347045977, 0.8684512056836425, 0.824673216167521, 0.8053235744189247, 0.7825448059324008, 0.7718912476026434, 0.7559493698416888, 0.735145461919868, 0.7277495653921224, 0.7063974164826853, 0.689939021741426, 0.6992295367952981, 0.6733476534464167, 0.6740421548952217, 0.6791808735330769, 0.6634950444383738, 0.6528606451718153, 0.6523763108184198, 0.6407605156670504, 0.6507233600291468, 0.6260835026879085, 0.6275601847029129], "accuracy": [0.1962752640247345, 0.3821159601211548, 0.4839519262313843, 0.5563333630561829, 0.6147140264511108, 0.650640606880188, 0.6716417670249939, 0.6812838315963745, 0.6882842183113098, 0.702681303024292, 0.7092854380607605, 0.7106062769889832, 0.7181349992752075, 0.7224937081336975, 0.7310791015625, 0.7362303733825684, 0.7411174178123474, 0.7466648817062378, 0.7471932172775269, 0.7486461400985718, 0.7494386434555054, 0.7454761862754822, 0.7532690763473511, 0.76106196641922, 0.7569673657417297, 0.7652885913848877, 0.7600052952766418, 0.77677983045578, 0.7681944370269775], "val_loss": [1.8500353268214635, 1.5165445463997977, 1.0598813806261336, 0.8321756635393415, 0.7271768535886493, 0.666816098349435, 0.6324237244469779, 0.6132210833685738, 0.5912093605313983, 0.5653649227959769, 0.547312719481332, 0.5448862825121198, 0.5302285807473319, 0.5300217696598598, 0.5256698642458234, 0.5183864661625454, 0.5250090871538434, 0.4913571391786848, 0.4882403782435826, 0.4770748955862863, 0.4936901160648891, 0.4665858745574951, 0.4698308195386614, 0.45901009014674593, 0.4688417060034616, 0.4594935178756714, 0.45697505133492605, 0.4446474994931902, 0.44140662465776714], "val_accuracy": [0.4493333399295807, 0.5876666903495789, 0.6439999938011169, 0.6949999928474426, 0.7023333311080933, 0.7250000238418579, 0.7473333477973938, 0.7440000176429749, 0.7390000224113464, 0.7559999823570251, 0.7613333463668823, 0.7590000033378601, 0.7730000019073486, 0.7526666522026062, 0.7689999938011169, 0.7670000195503235, 0.7553333044052124, 0.7826666831970215, 0.7879999876022339, 0.8040000200271606, 0.768666684627533, 0.8100000023841858, 0.8003333210945129, 0.8153333067893982, 0.7853333353996277, 0.7963333129882812, 0.7990000247955322, 0.8136666417121887, 0.8109999895095825]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.5248571634292603, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.5428597926148777, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2957337200641632, 0.18584071099758148, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15.233666011265345, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4193333387374878, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10914285480976105, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [149.74053236112744, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2645621597766876, 0.10989301651716232, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [11522.471261160714, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.18433333933353424, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [38, 70], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 0, 4, 4, 5, 1, 0, 4, 0, 8], [2, 2, 2, 0, 3, 0, 2], [29, 57, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.pow(tf.math.pow(beta, tf.math.square(beta)), tf.math.subtract(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), sigma))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [1, 6, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [9.849581176958523e+22, 17.524028715094115, 17.322638944848308, 17.357384817396504, 17.37135381579572, 17.509643336423178], "accuracy": [0.0940430611371994, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [26.600525992257253, 26.603768484933035, 26.61167471749442, 26.625598907470703, 26.64460209437779, 26.66492244175502], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30250987939201, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [71, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 16, 9, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [21159138545190.496, 2.5116681510336787, 2.6426230431421796, 3.662449902106333, 6.711714146238323, 12.748255456207199], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.10011887550354004, 0.09774138033390045, 0.09721305221319199, 0.09893012791872025], "val_loss": [2.1262222017560686, 2.1542206491742815, 2.5524914605276927, 4.247012683323452, 8.063351222446986, 14.94798333304269], "val_accuracy": [0.10366666316986084, 0.09733333438634872, 0.10100000351667404, 0.10066666454076767, 0.10366666316986084, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30250987939201, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.30250987939201, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 0, 0], [63, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 0, 0, 1], [38, 70], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 0, 1, 0, 1, 0, 3, 0], [96, 96, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3112304661614376, 9.43988191868887, 91.37938594150505, 288.11541531993225, 600.0773364686695, 1026.9884349060662], "accuracy": [0.10117553919553757, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.101569720676967, 33.67047446114676, 161.0716334751674, 386.7788609095982, 710.7403215680804, 1132.976353236607], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [4, 3, 0], [17, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1285755.4583678779, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21833311021327972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0, 3], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30250987939201, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [2, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.09942857176065445, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), sigma), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.324516292576304, 90924.91685549829, 90904806287.51816, 8.388439841437403e+16, 9.060933051888392e+22, NaN], "accuracy": [0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.1002509593963623], "val_loss": [4.796275820050921, 3643647.285714286, 3778860435748.5713, 3.919090528488297e+18, 4.0645251191328265e+24, NaN], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.055714286863803864, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3025712014630235, 2.3025749018163633, 2.301295629440124, 2.302262697615376, 2.30274729271449, 2.3007310158887386, 2.3018779202600936, 2.3016399864538895, 2.301968294946572, 2.3013758366181314, 2.3019998034214093, 2.3035856825942296, 2.300781574735489, 2.3016636892789077, 2.300599953596382, 2.3021754841873157, 2.301839683317568, 2.3035042054145216, 2.299844093578461, 2.302304764181915, 2.301951001049773, 2.302787393201627, 2.3009370269241303, 2.3012647702158278, 2.300828610995757, 2.3006831890776835, 2.302856946334768, 2.3022935620356924, 2.3003734187868212, 2.3020129018629136, 2.3007737241164805, 2.301528427216985, 2.3005946688978915, 2.301056906563211, 2.3004868184539227, 2.2993200848115483, 2.3000339954095574, 2.3005907923207545, 2.299922151210333, 2.3018927304594508, 2.300531887627076, 2.300922894758114, 2.300824120154612, 2.300780824713656, 2.2998672876973996, 2.300438902617729, 2.3017539865919283, 2.30114788213001, 2.3001140756472274, 2.300810594537302, 2.2995335738326044, 2.300481732369351, 2.3010330817734386, 2.3006114760693497, 2.301004316891504, 2.300512163725039, 2.299915558468979, 2.2991390430443888, 2.3004384079566487, 2.3006597476911868, 2.299934989221029, 2.300759191069668, 2.301113931809308, 2.2997794624301404, 2.299969630014029, 2.299689187003385, 2.3006306237800325, 2.300226017468641, 2.30085243610044, 2.300729026820886, 2.2999810369149207, 2.2999492174976646, 2.3010763276790063, 2.300352647115274, 2.2998223139420633, 2.3000160844145574, 2.299577244930043, 2.3002057499999555, 2.2997362576203653, 2.3002515968440655, 2.299875942849212, 2.299809529781027], "accuracy": [0.09536388516426086, 0.08928807079792023, 0.09840179979801178, 0.08915598690509796, 0.09496764093637466, 0.0952318087220192, 0.09272222965955734, 0.09179764986038208, 0.09140139818191528, 0.09509972482919693, 0.08770307898521423, 0.09285431355237961, 0.09589222073554993, 0.09589222073554993, 0.09047681838274002, 0.09008057415485382, 0.09153348207473755, 0.09166556596755981, 0.09549596905708313, 0.08915598690509796, 0.09087307006120682, 0.09166556596755981, 0.09021265059709549, 0.09377889335155487, 0.10038304328918457, 0.09615638852119446, 0.09602430462837219, 0.09813763201236725, 0.09430722147226334, 0.09694888442754745, 0.09417514503002167, 0.09681680053472519, 0.09893012791872025, 0.09576013684272766, 0.0948355570435524, 0.09708096832036972, 0.1014397069811821, 0.09126931428909302, 0.1002509593963623, 0.08809932321310043, 0.09232597798109055, 0.09589222073554993, 0.09430722147226334, 0.09153348207473755, 0.09853387624025345, 0.09391097724437714, 0.0944393053650856, 0.09840179979801178, 0.09708096832036972, 0.09377889335155487, 0.09179764986038208, 0.09285431355237961, 0.09179764986038208, 0.09721305221319199, 0.09113723784685135, 0.09800554811954498, 0.09126931428909302, 0.10011887550354004, 0.08849557489156723, 0.09206181764602661, 0.09668471664190292, 0.0948355570435524, 0.09760929644107819, 0.09959053993225098, 0.09694888442754745, 0.09721305221319199, 0.0940430611371994, 0.09272222965955734, 0.09272222965955734, 0.09681680053472519, 0.09959053993225098, 0.09430722147226334, 0.09866596013307571, 0.09734513610601425, 0.1002509593963623, 0.0952318087220192, 0.10249637067317963, 0.10091137140989304, 0.09840179979801178, 0.09893012791872025, 0.09549596905708313, 0.09906221181154251], "val_loss": [1.970344066619873, 1.9703004700796944, 1.9702554430280412, 1.9702142306736536, 1.9701764924185616, 1.970142160143171, 1.970104694366455, 1.9700707026890345, 1.97003139768328, 1.9700042179652624, 1.9699670246669225, 1.9699193409511022, 1.9698888233729772, 1.9698604856218611, 1.9698257446289062, 1.9697884150913783, 1.9697586468287878, 1.9697204317365373, 1.9696973391941615, 1.9696662085396903, 1.96964693069458, 1.9696222032819475, 1.9695999281747, 1.9695803097316198, 1.9695516995021276, 1.9695265633719308, 1.969494002205985, 1.9694643020629883, 1.9694409370422363, 1.9694125992911202, 1.9693883487156458, 1.9693824904305595, 1.9693661417279924, 1.9693512235369002, 1.9693398475646973, 1.9693259511675154, 1.9693073545183455, 1.9692930494035994, 1.969280174800328, 1.9692646435328893, 1.9692437989371163, 1.9692320142473494, 1.9692144393920898, 1.969205379486084, 1.969198363167899, 1.969191414969308, 1.9691740444728307, 1.9691593987601144, 1.9691510881696428, 1.969134943825858, 1.969123227255685, 1.969113826751709, 1.9691050393240792, 1.9690990447998047, 1.9690896442958288, 1.9690814018249512, 1.9690749304635184, 1.9690687315804618, 1.9690636226109095, 1.9690544264657157, 1.969050407409668, 1.9690418243408203, 1.969038418361119, 1.969031742640904, 1.9690281323024206, 1.9690287453787667, 1.9690220696585519, 1.9690189361572266, 1.9690120560782296, 1.9690051759992326, 1.9690025874546595, 1.9690018381391252, 1.968996320452009, 1.9689909390040807, 1.9689901896885462, 1.968984740121024, 1.9689868518284388, 1.9689829008919852, 1.9689853531973702, 1.968979835510254, 1.968987124306815, 1.9689905984061105], "val_accuracy": [0.03633333370089531, 0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03933333232998848, 0.04100000113248825, 0.0416666679084301, 0.04233333468437195, 0.0430000014603138, 0.043666668236255646, 0.04333333298563957, 0.043666668236255646, 0.044333335012197495, 0.04500000178813934, 0.04633333161473274, 0.04699999839067459, 0.04699999839067459, 0.047333333641290665, 0.04766666516661644, 0.04766666516661644, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.04866666719317436, 0.04866666719317436, 0.04933333396911621, 0.04933333396911621, 0.04899999871850014, 0.049666665494441986, 0.049666665494441986, 0.05000000074505806, 0.05000000074505806, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.050333332270383835, 0.05133333429694176, 0.050999999046325684, 0.050999999046325684, 0.052000001072883606, 0.05233333259820938, 0.0533333346247673, 0.05433333292603493, 0.054666668176651, 0.05533333495259285, 0.055666666477918625, 0.055666666477918625, 0.055666666477918625, 0.0560000017285347, 0.05700000002980232, 0.0573333315551281, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.05833333358168602, 0.05833333358168602, 0.05900000035762787, 0.059333331882953644, 0.059333331882953644, 0.05999999865889549, 0.060333333909511566, 0.06133333221077919, 0.06133333221077919, 0.061000000685453415, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06199999898672104, 0.06233333423733711, 0.06266666948795319, 0.06300000101327896, 0.06300000101327896, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06499999761581421, 0.06466666609048843, 0.06466666609048843, 0.06400000303983688, 0.06433333456516266]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [38, 70], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302595725668546, 2.3026538794586418, 2.3014407241664085, 2.3024626013436227, 2.3030100548350814, 2.3010302324021703], "accuracy": [0.0952318087220192, 0.08928807079792023, 0.09787346422672272, 0.08836349099874496, 0.09391097724437714, 0.09509972482919693], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302595725668546, 2.3026538794586418, 2.3014407241664085, 2.3024626013436227, 2.3030100548350814, 2.3010302324021703], "accuracy": [0.0952318087220192, 0.08928807079792023, 0.09787346422672272, 0.08836349099874496, 0.09391097724437714, 0.09509972482919693], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 4, 0], [17, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.302595725668546, 2.3026538794586418, 2.3014407241664085, 2.3024626013436227, 2.3030100548350814, 2.3010302324021703], "accuracy": [0.0952318087220192, 0.08928807079792023, 0.09787346422672272, 0.08836349099874496, 0.09391097724437714, 0.09509972482919693], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]