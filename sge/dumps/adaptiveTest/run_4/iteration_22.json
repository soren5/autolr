[{"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.767714262008667, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.0735007105817127, 1.5000121215897906, 1.1022753502163416, 0.9337483567726091, 0.8283278569962922, 0.8054157450545214, 0.7580998626288769, 0.7179330246260516, 0.690660280849735, 0.6762826113243617, 0.6661057311152392, 0.6427485331520979, 0.6208546620712084, 0.6291940232640197], "accuracy": [0.31501781940460205, 0.48448026180267334, 0.6062607169151306, 0.6510368585586548, 0.6911900639533997, 0.6921146512031555, 0.709021270275116, 0.7285695672035217, 0.7383436560630798, 0.743891179561615, 0.7470611333847046, 0.7588165402412415, 0.7685906887054443, 0.7607977986335754], "val_loss": [1.1313679899488176, 0.8711328676768711, 0.717990687915257, 0.6140874113355365, 0.6083534104483468, 0.5768205268042428, 0.5384515183312553, 0.5300415073122297, 0.5141701698303223, 0.5167120524815151, 0.5088953120367867, 0.4902630703789847, 0.49617918900081087, 0.5027516910008022], "val_accuracy": [0.5243333578109741, 0.637333333492279, 0.668666660785675, 0.7183333039283752, 0.7336666584014893, 0.7293333411216736, 0.7590000033378601, 0.7633333206176758, 0.7789999842643738, 0.7630000114440918, 0.7723333239555359, 0.7716666460037231, 0.7766666412353516, 0.7696666717529297]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 1], [0, 1, 0, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.767714262008667, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.0735007105817127, 1.5000121215897906, 1.1022753502163416, 0.9337483567726091, 0.8283278569962922, 0.8054157450545214, 0.7580998626288769, 0.7179330246260516, 0.690660280849735, 0.6762826113243617, 0.6661057311152392, 0.6427485331520979, 0.6208546620712084, 0.6291940232640197], "accuracy": [0.31501781940460205, 0.48448026180267334, 0.6062607169151306, 0.6510368585586548, 0.6911900639533997, 0.6921146512031555, 0.709021270275116, 0.7285695672035217, 0.7383436560630798, 0.743891179561615, 0.7470611333847046, 0.7588165402412415, 0.7685906887054443, 0.7607977986335754], "val_loss": [1.1313679899488176, 0.8711328676768711, 0.717990687915257, 0.6140874113355365, 0.6083534104483468, 0.5768205268042428, 0.5384515183312553, 0.5300415073122297, 0.5141701698303223, 0.5167120524815151, 0.5088953120367867, 0.4902630703789847, 0.49617918900081087, 0.5027516910008022], "val_accuracy": [0.5243333578109741, 0.637333333492279, 0.668666660785675, 0.7183333039283752, 0.7336666584014893, 0.7293333411216736, 0.7590000033378601, 0.7633333206176758, 0.7789999842643738, 0.7630000114440918, 0.7723333239555359, 0.7716666460037231, 0.7766666412353516, 0.7696666717529297]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0], [7, 3, 2, 6, 8, 0], [2, 0], [16], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0], [2, 3, 0, 0, 3], [41, 60]], "fitness": -0.46142858266830444, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.246995018048451, 2.31007474534122, 2.2152516057919267, 2.3089448288053553, 2.526578761992469, 2.3101984667598514, 2.3038501622355327, 2.3037094119486006], "accuracy": [0.19231277704238892, 0.13749834895133972, 0.2234843522310257, 0.16814158856868744, 0.19561484456062317, 0.10276053100824356, 0.10091137140989304, 0.09800554811954498], "val_loss": [1.619961908885411, 1.968118327004569, 1.553626639502389, 1.9644239289419991, 1.9855140277317591, 1.975569793156215, 1.9741903032575334, 1.9738005910600935], "val_accuracy": [0.43433332443237305, 0.14900000393390656, 0.4390000104904175, 0.13433332741260529, 0.0989999994635582, 0.0989999994635582, 0.09933333098888397, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [1, 3], [4, 1], [40], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 2, 2, 2, 2, 0, 2, 5, 7, 6, 3, 0], [2, 2, 0, 0, 3, 1, 1, 3, 0, 2, 2], [35, 66, 29, 23]], "fitness": -0.30399999022483826, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 24, 13, 11, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(sigma), alpha)), tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), beta))))))", "other_info": {"loss": [3.0152369125911886, 2.2178913728199805, 2.316505623405415, 2.3065388072294377, 2.3050134503814634, 2.3040252906173024], "accuracy": [0.16457535326480865, 0.23233389854431152, 0.10527011007070541, 0.09536388516426086, 0.09985470771789551, 0.1014397069811821], "val_loss": [2.0034781183515276, 1.99447843006679, 1.975862979888916, 1.9739367621285575, 1.9735379219055176, 1.9711496489388602], "val_accuracy": [0.18733333051204681, 0.1003333330154419, 0.10133333504199982, 0.1003333330154419, 0.12200000137090683, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [3, 1, 8, 3, 4, 6, 2], [2, 1, 0], [87], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 0, 1, 1], [1, 1, 0], [7, 3], [4], [], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 0, 5, 9, 4, 4, 0, 7, 6, 0, 8, 3, 1, 6, 7, 2, 8, 8, 9, 9, 4, 0, 5, 7, 7, 2], [1, 3, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1], [7, 3, 8, 4, 5, 5, 4, 3], [4, 1, 3], [], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0, 5, 7, 9, 5, 2, 4, 6, 5, 1, 2, 6, 5], [3, 2, 0, 0, 3, 1, 0, 2, 3, 2, 0, 2], [41, 60, 85, 26, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 11, 8, 3, 0, 31, 19, 12, 5], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, sigma))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.square(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.subtract(beta, tf.math.add(tf.math.divide_no_nan(sigma, beta), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.math.square(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1], [], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3, 5], [4, 1], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 0, 0, 2, 2, 2, 0], [1, 0, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.766119485207804e+20, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05692775174975395, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1], [1], [6, 1, 8, 2], [0, 3, 3], [13], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 1, 0, 0, 1], [7, 3, 5], [4, 5], [], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 4, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028811227533685, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0], [7, 3], [4, 1], [], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 0, 2, 2, 2, 0], [1, 3, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 8, 2], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1], [7, 0, 5], [4, 7], [], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [3, 2, 0, 0, 3], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.305299836693974, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.08453308790922165, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9803521973746163, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.020999999716877937, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [6, 1, 8, 3, 4, 6, 2, 3, 9, 0, 0, 9, 0, 4], [2, 1, 2, 3, 0, 1, 3], [25, 90, 36], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3], [4], [], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 3, 8, 9, 8, 9], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 14, 7, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(grad), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))))), tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 1, 1, 1], [1], [], [0], [73], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 1, 1, 1], [0, 1], [7, 3], [4, 1], [], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 0, 0, 2, 2, 3, 4], [2, 2, 0, 3, 3, 0, 1], [41, 60, 37]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(beta), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma), sigma), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), alpha)", "other_info": {"loss": [2.3028811227533685, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1], [6, 1, 8, 2], [2, 0, 0, 0], [51, 33], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1], [0, 1, 0, 0, 1], [7, 3], [7], [], [0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 2, 0, 2, 2, 2, 0], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028811227533685, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [1, 1, 0], [0, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [3, 2, 0, 2, 2, 2, 0, 1, 3, 3, 1, 2, 9, 9, 9], [1, 2, 0, 0, 3, 2, 0, 0], [41, 60, 39, 27, 54, 90, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 23, 15, 8, 7], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, tf.math.multiply(tf.math.subtract(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15176330506801605, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 0, 1, 1], [8, 4], [2, 2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [17], [0, 1, 1, 1], [1, 1], [2, 3], [4, 2], [], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 3, 8, 9, 8, 9], [0, 0, 0, 0, 3, 0, 1, 1, 2, 2, 2], [35, 60, 29, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [161585.4684605158, 3142145.719323735, 14601122.108572183, 40527253.042398624, 86729420.16431119, 158517247.42728832], "accuracy": [0.09985470771789551, 0.09972262382507324, 0.1002509593963623, 0.1026284471154213, 0.09906221181154251, 0.09800554811954498], "val_loss": [620461.5714285715, 4932423.142857143, 16613008.0, 39339344.0, 76788608.0, 132637353.14285715], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0], [4, 3, 7], [4, 0], [41], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 0, 0, 2, 2, 2, 0, 1], [1, 2, 0, 0, 3, 0], [41, 60, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 4, 3, 1, 0, 14, 8, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1534803807735443, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 5, 3, 9, 1, 8], [2, 1, 1, 0, 2, 0, 1], [56, 82], [1], [1, 0, 1, 1, 0, 1], [0, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [17], [0, 1, 0], [0, 1], [7, 3], [4, 3], [], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [9, 1, 3, 8, 9, 8, 9], [1, 2, 0, 3, 1], [41, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(alpha)))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028811227533685, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 1], [7, 3], [4, 1], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 2, 0, 2, 2, 2, 0, 6, 0], [1, 2, 0, 0, 3, 1, 3], [41, 60]], "fitness": -0.06828571110963821, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 16, 9, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma))), tf.math.negative(alpha)), sigma))))", "other_info": {"loss": [1.8871331149592285e+28, 2.820362465095353e+31, 5.257491524371832e+31, 7.291799009523952e+31, 8.67887473837695e+31, 8.878894006408191e+31, 9.126394758531283e+31], "accuracy": [0.1088363528251648, 0.10328886657953262, 0.08426892012357712, 0.07779685407876968, 0.07779685407876968, 0.07594769448041916, 0.07977809756994247], "val_loss": [3.8490734432769615e+29, 2.0692586390396097e+31, 3.1660996266441603e+31, 4.4760989674149655e+31, 4.906220266924015e+31, 5.034916983162156e+31, 4.897568226618197e+31], "val_accuracy": [0.08566666394472122, 0.09033333510160446, 0.03500000014901161, 0.04333333298563957, 0.03633333370089531, 0.04766666516661644, 0.049666665494441986]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1], [6, 8, 4], [1, 0, 0, 0], [51, 33], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 1, 1], [7, 3, 5], [4, 1], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [3, 2, 0, 2, 2, 2, 0, 0, 0, 2, 3, 4, 2], [1, 2, 0, 0, 3, 1, 2, 1, 3, 2], [41, 60]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 23, 13, 10, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)))), tf.math.add(alpha, tf.math.multiply(beta, tf.math.pow(tf.math.add(alpha, sigma), beta))))", "other_info": {"loss": [2.3030301840266594, 2.304161362880414, 2.3027795562182343, 2.303059412362065, 2.304472659509951, 2.3022319578680426], "accuracy": [0.08757099509239197, 0.0882314071059227, 0.09126931428909302, 0.09206181764602661, 0.09206181764602661, 0.08994849026203156], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1], [], [2, 0, 0, 0], [], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0], [7, 3, 5], [4, 1], [], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1], [3, 2, 0, 2, 2, 2, 0], [3, 2, 0, 0, 3], [41, 60]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030301840266594, 2.304161362880414, 2.3027795562182343, 2.303059412362065, 2.304472659509951, 2.3022319578680426], "accuracy": [0.08757099509239197, 0.0882314071059227, 0.09126931428909302, 0.09206181764602661, 0.09206181764602661, 0.08994849026203156], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]