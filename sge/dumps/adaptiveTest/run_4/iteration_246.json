[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2599785501741856, 2.0663712244023738, 1.639362513160882, 1.282227021607709, 1.0907146170894781, 0.9895966393741965, 0.9380193488031976, 0.881503759830572, 0.8554554983467678, 0.8160774655597809, 0.8000102917736454, 0.7920872797787765, 0.7639739011115307, 0.7372464005185975, 0.7350804876138065, 0.7286102591787803, 0.7056796777249957, 0.6952362184542801, 0.6880881172350102, 0.7030386959305056, 0.6745618410145744, 0.6791840068746977, 0.6629448573287956, 0.6491555899220246, 0.6544826329108699, 0.6522429492479586, 0.634499433837027, 0.6284183679302812, 0.619999174475906, 0.6163846040367215, 0.6093748292792601, 0.6060688390219767, 0.6050210833124371, 0.5945839151226376, 0.5951959031794317, 0.5936969584320294, 0.5909848429145531, 0.5912602288438628, 0.5839532774752157, 0.5780334810240079, 0.5854780986529173, 0.5664301334103227, 0.58007501747315, 0.5611901709495235, 0.5633331430098478, 0.5590918858793543, 0.5591323733991085], "accuracy": [0.1916523575782776, 0.3769647479057312, 0.48448026180267334, 0.5576542019844055, 0.6238277554512024, 0.6532822847366333, 0.6631884574890137, 0.685510516166687, 0.6922467350959778, 0.7062475085258484, 0.7173424959182739, 0.7143045663833618, 0.7206445932388306, 0.7325320243835449, 0.7331924438476562, 0.7321357727050781, 0.7434949278831482, 0.7420420050621033, 0.7460044622421265, 0.7425703406333923, 0.7495707273483276, 0.7555144429206848, 0.7537974119186401, 0.7560427784919739, 0.7541936039924622, 0.7569673657417297, 0.7671377658843994, 0.7677981853485107, 0.7693831920623779, 0.774270236492157, 0.7751948237419128, 0.7708360552787781, 0.7750627398490906, 0.7750627398490906, 0.7778365015983582, 0.7827235460281372, 0.7832518815994263, 0.783119797706604, 0.785101056098938, 0.7944789528846741, 0.7827235460281372, 0.791969358921051, 0.7864218950271606, 0.7924976944923401, 0.7946110367774963, 0.7980451583862305, 0.7944789528846741], "val_loss": [1.8545611245291573, 1.526461124420166, 1.0532368591853551, 0.8281763792037964, 0.7269672325679234, 0.6681156839643206, 0.6352828400475639, 0.606776203427996, 0.5856235538210187, 0.5631121397018433, 0.5536496979849679, 0.5406370673860822, 0.5262629815510341, 0.5411683661597115, 0.5149303844996861, 0.49213710853031706, 0.49625745841435026, 0.48625762122017996, 0.4867077384676252, 0.4732634850910732, 0.48837406294686453, 0.4734879050936018, 0.4616785390036447, 0.45537582465580534, 0.4614525522504534, 0.4527420146124704, 0.44976540974208284, 0.44035213334219797, 0.4441901445388794, 0.43235476527895245, 0.4375110183443342, 0.4378080112593515, 0.4242296304021563, 0.4350381408418928, 0.4219722832952227, 0.4318857874189104, 0.42320098195757183, 0.41792960677828106, 0.41575370516095844, 0.41151298795427593, 0.41023069620132446, 0.4114527532032558, 0.4145676578794207, 0.40566312415259226, 0.4093530603817531, 0.4250117710658482, 0.4060171842575073], "val_accuracy": [0.4036666750907898, 0.6039999723434448, 0.6586666703224182, 0.6783333420753479, 0.7013333439826965, 0.7179999947547913, 0.7260000109672546, 0.7429999709129333, 0.7443333268165588, 0.7556666731834412, 0.7540000081062317, 0.7649999856948853, 0.7796666622161865, 0.753000020980835, 0.7730000019073486, 0.7879999876022339, 0.7726666927337646, 0.7829999923706055, 0.79666668176651, 0.7963333129882812, 0.7893333435058594, 0.7943333387374878, 0.8040000200271606, 0.8050000071525574, 0.7976666688919067, 0.8086666464805603, 0.7946666479110718, 0.8083333373069763, 0.8173333406448364, 0.8176666498184204, 0.8209999799728394, 0.8173333406448364, 0.8226666450500488, 0.8053333163261414, 0.8203333616256714, 0.8116666674613953, 0.8130000233650208, 0.8243333101272583, 0.8203333616256714, 0.8336666822433472, 0.831333339214325, 0.8343333601951599, 0.8206666707992554, 0.8326666951179504, 0.8299999833106995, 0.812333345413208, 0.8299999833106995]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2599778711646223, 2.066341079441847, 1.639283367765893, 1.2823227026585056, 1.0907820167558508, 0.9895768526081932, 0.9380880130390685, 0.8809826597089166, 0.8558777578282334, 0.8160629411336374, 0.8010494925988081, 0.7906850229212165, 0.7639093554770989, 0.7376120462629852, 0.7348389167512303, 0.7272785869981193, 0.7057171325799481, 0.6930502391116589, 0.6892229634709977, 0.7033362223991487, 0.6734131382141824, 0.6783411640690113, 0.662627004707935, 0.6486922700517543, 0.6532062605198553, 0.6524072345127251, 0.6349927163426399, 0.629620488388128, 0.6194135754446328, 0.6157282000409299, 0.6092961589579317, 0.6057753633388423, 0.6057865266408808, 0.5936249083122321, 0.5954223535143074, 0.5941457940508361, 0.5916769793241126, 0.5909565087669104, 0.5839406112717002, 0.5782538713591368, 0.5858476013634042, 0.5668519994743654, 0.5802081810988771, 0.5614649152333757, 0.5630414977742539, 0.5588088903082612], "accuracy": [0.1916523575782776, 0.3769647479057312, 0.48487651348114014, 0.5569937825202942, 0.6236956715583801, 0.6534143686294556, 0.6634526252746582, 0.6872276067733765, 0.6923788189888, 0.7058512568473816, 0.7168141603469849, 0.7164179086685181, 0.7210407853126526, 0.7320036888122559, 0.7338528633117676, 0.7296261787414551, 0.7423061728477478, 0.7448157668113708, 0.744419515132904, 0.7425703406333923, 0.7516840696334839, 0.7568352818489075, 0.7535332441329956, 0.7564390301704407, 0.7534011602401733, 0.7572315335273743, 0.7663452625274658, 0.7675340175628662, 0.7689869403839111, 0.7741381525993347, 0.7736098170280457, 0.7721568942070007, 0.7738739848136902, 0.7757231593132019, 0.7783648371696472, 0.7823272943496704, 0.7841764688491821, 0.7843085527420044, 0.7841764688491821, 0.7923656105995178, 0.7816668748855591, 0.7909126877784729, 0.785101056098938, 0.7909126877784729, 0.7936864495277405, 0.7961959838867188], "val_loss": [1.8545605114528112, 1.5264151436941964, 1.05336822782244, 0.8281360694340297, 0.7271661758422852, 0.6684114592415946, 0.6350931780678886, 0.6077664920261928, 0.5848446573529925, 0.5648845263889858, 0.5533332824707031, 0.5415380852563041, 0.5257556949343, 0.5412491049085345, 0.5131199189594814, 0.49255875178745817, 0.4942836420876639, 0.4872869423457554, 0.48549795150756836, 0.4734350783484323, 0.4848839044570923, 0.47311738559177946, 0.4626548630850656, 0.4530888625553676, 0.45959341526031494, 0.45207233088357107, 0.45067923409598215, 0.43886421407972065, 0.4416942766734532, 0.43251135519572664, 0.43747077669416157, 0.43831792899540495, 0.4240807976041521, 0.43461605480739046, 0.42170330456324984, 0.434248685836792, 0.422252893447876, 0.41728365421295166, 0.4163619875907898, 0.4116197143282209, 0.40928705249513897, 0.410829450402941, 0.4137469785554068, 0.40495110409600393, 0.40894001722335815, 0.42099580594471525], "val_accuracy": [0.4033333361148834, 0.6043333411216736, 0.6586666703224182, 0.6793333292007446, 0.7016666531562805, 0.7183333039283752, 0.7266666889190674, 0.7396666407585144, 0.7450000047683716, 0.753333330154419, 0.7543333172798157, 0.762666642665863, 0.7796666622161865, 0.753333330154419, 0.7760000228881836, 0.7893333435058594, 0.7753333449363708, 0.7836666703224182, 0.7956666946411133, 0.7973333597183228, 0.7919999957084656, 0.7956666946411133, 0.8019999861717224, 0.8130000233650208, 0.7983333468437195, 0.809333324432373, 0.7929999828338623, 0.8109999895095825, 0.8209999799728394, 0.8183333277702332, 0.8220000267028809, 0.8176666498184204, 0.8233333230018616, 0.8066666722297668, 0.8216666579246521, 0.812666654586792, 0.8169999718666077, 0.8236666917800903, 0.8183333277702332, 0.8316666483879089, 0.8343333601951599, 0.8339999914169312, 0.8216666579246521, 0.8316666483879089, 0.8296666741371155, 0.8143333196640015]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.6945714354515076, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302349542220507, 2.2963246914059052, 2.293014649528601, 2.2879507472376233, 2.2827304514281708, 2.278317330457027, 2.274331433378458, 2.2706757243346263, 2.265789682524095, 2.2604031474000474, 2.255177791234194, 2.250619302604019, 2.246958959371879, 2.2400153010449846, 2.2363609277561216, 2.229536438410261, 2.222841431042459, 2.217905192185607, 2.2092680934870232, 2.2039163520764116, 2.193846609047328, 2.188618082081275, 2.180215950954419, 2.170480876503651, 2.164207076289477, 2.1519264519222503, 2.142491388818481, 2.1337359672083345, 2.120745259851686, 2.1073321450923364, 2.095306349310814, 2.0832573351307695, 2.0717297835419948, 2.055328017228378, 2.043185792311292, 2.024860016784144, 2.013387635273468, 1.9887615900627926, 1.9772153730956776, 1.9592474826086688, 1.938774156249226, 1.918593914107939, 1.9014089044688824, 1.8766467369243596, 1.858755998812363, 1.8336982729255153, 1.8151963978962513, 1.7948247869457818, 1.7716825390850879, 1.7436098733110168, 1.7329969455568845, 1.711271964516449, 1.6837752687932634, 1.6622377495487934, 1.6430955359082668, 1.6174069670732736, 1.598318740629076, 1.5792970168292955, 1.565750670691271, 1.545007314081788, 1.520340835571037, 1.5040669675516398, 1.4848795135684725, 1.4727139322749219, 1.4498352674744495, 1.4304211145189885, 1.4190666900098663, 1.4015598988819589, 1.3824945376486495, 1.375365696216634, 1.353208196193094, 1.3449510700588354, 1.3360676544059962, 1.3215351303287264, 1.3062520740432446, 1.293360886178894, 1.2894407081692179, 1.2811666014109149, 1.2661463521207408, 1.2404815952901622, 1.2471429272854349, 1.2367756316659, 1.2318406413968497, 1.2195647097754991, 1.1986368652725925, 1.1948459766260968, 1.1992627203094488, 1.176270393726297, 1.1726365216167896, 1.1788826232825005, 1.1626384967133323, 1.161965562383717, 1.1441090124126723, 1.1450031828083587, 1.1331963499287383, 1.1250330396788766, 1.1169536178453079, 1.1151986266202805, 1.1116886298260622, 1.097183028751943], "accuracy": [0.09153348207473755, 0.10408136248588562, 0.11808215826749802, 0.13036586344242096, 0.13815876841545105, 0.14912164211273193, 0.1644432693719864, 0.1744815707206726, 0.18650111556053162, 0.19759608805179596, 0.2164839506149292, 0.22057852149009705, 0.230484738945961, 0.24620261788368225, 0.2545238435268402, 0.26641130447387695, 0.2847708463668823, 0.28820499777793884, 0.2949412167072296, 0.30101704597473145, 0.31422534584999084, 0.31660282611846924, 0.32399946451187134, 0.3362831771373749, 0.3451327383518219, 0.349359393119812, 0.3568881154060364, 0.3575485348701477, 0.3691718280315399, 0.37643641233444214, 0.37828555703163147, 0.3899088501930237, 0.3831726312637329, 0.4029850661754608, 0.39545634388923645, 0.404570072889328, 0.40285298228263855, 0.42028793692588806, 0.4130233824253082, 0.422929584980011, 0.4287412464618683, 0.433760404586792, 0.44406285881996155, 0.44908201694488525, 0.44327038526535034, 0.44908201694488525, 0.4616298973560333, 0.45845991373062134, 0.46506404876708984, 0.4772156774997711, 0.47008320689201355, 0.4761590361595154, 0.48474442958831787, 0.48527276515960693, 0.48791441321372986, 0.49808478355407715, 0.4955752193927765, 0.49953770637512207, 0.5068022608757019, 0.5085193514823914, 0.5222559571266174, 0.5107647776603699, 0.5200105905532837, 0.5185576677322388, 0.5365209579467773, 0.5385021567344666, 0.5406154990196228, 0.5484083890914917, 0.5481442213058472, 0.544710099697113, 0.5460308790206909, 0.5461629629135132, 0.5528992414474487, 0.5575221180915833, 0.5638620853424072, 0.5670320987701416, 0.5694096088409424, 0.5643904209136963, 0.5727116465568542, 0.5786554217338562, 0.5698058605194092, 0.5732399821281433, 0.5732399821281433, 0.5756174921989441, 0.5954299569129944, 0.5852595567703247, 0.5835424661636353, 0.5982036590576172, 0.5967507362365723, 0.5880332589149475, 0.5949016213417053, 0.6000528335571289, 0.5995244979858398, 0.6038832664489746, 0.611411988735199, 0.6082419753074646, 0.6061286330223083, 0.6065248847007751, 0.611940324306488, 0.6188086271286011], "val_loss": [1.9662601607186454, 1.9622208731515067, 1.958209446498326, 1.9541824204581124, 1.9500936780657088, 1.9460229192461287, 1.9418651035853796, 1.937652928488595, 1.933351721082415, 1.9288803509303503, 1.9243134089878626, 1.9195686067853654, 1.9146804809570312, 1.9095450810023717, 1.9042955126081194, 1.8987163134983607, 1.8929202897208077, 1.8868205206734794, 1.8803683008466447, 1.8736029352460588, 1.8664262635367257, 1.8588901247297014, 1.8509609358651298, 1.8425209862845284, 1.8337407112121582, 1.8243442262922014, 1.8144730840410506, 1.804187638419015, 1.7933055332728796, 1.7816989762442452, 1.7696301596505302, 1.756916114262172, 1.7437177385602678, 1.7297640527997697, 1.7152714729309082, 1.7000332900456019, 1.684267827442714, 1.667428663798741, 1.6502436910356795, 1.6324103900364466, 1.6138744694846017, 1.594737972532, 1.5752078465053014, 1.5548240457262312, 1.5342255660465784, 1.5128743648529053, 1.4915447575705392, 1.4698391982487269, 1.447805949619838, 1.4253125190734863, 1.4031123433794295, 1.3810861110687256, 1.3587544986179896, 1.3365587506975447, 1.3146118777138847, 1.292764663696289, 1.2713417666299003, 1.2503814356667655, 1.2301838397979736, 1.210219349179949, 1.1905629975455148, 1.1716837201799666, 1.1532342093331474, 1.1353957312447684, 1.1180919579097204, 1.1011200291769845, 1.0849389348711287, 1.0691749708993095, 1.0539162499564034, 1.039609091622489, 1.0255720274788993, 1.0120220184326172, 0.9993455750601632, 0.9871103082384381, 0.9750686713627407, 0.9634066309247699, 0.9523810999734061, 0.9418778419494629, 0.9314056805201939, 0.9213228566305978, 0.9116810389927456, 0.9026297160557338, 0.8942013808659145, 0.8855556760515485, 0.8770636149815151, 0.8688504695892334, 0.8612629686083112, 0.8537698984146118, 0.8464019809450422, 0.8396280833653041, 0.8331878355571202, 0.8268213953290667, 0.8204773834773472, 0.8147459711347308, 0.808564407484872, 0.8026952062334333, 0.7967726162501744, 0.7913803032466343, 0.7862194606236049, 0.7809274026325771], "val_accuracy": [0.06700000166893005, 0.09833333641290665, 0.1340000033378601, 0.18333333730697632, 0.21833333373069763, 0.2523333430290222, 0.28466665744781494, 0.3089999854564667, 0.33033332228660583, 0.3479999899864197, 0.3646666705608368, 0.37299999594688416, 0.38499999046325684, 0.3903333246707916, 0.39633333683013916, 0.40566667914390564, 0.41466665267944336, 0.42766666412353516, 0.43066665530204773, 0.43566668033599854, 0.4429999887943268, 0.4476666748523712, 0.4516666531562805, 0.4560000002384186, 0.4606666564941406, 0.4676666557788849, 0.47600001096725464, 0.4816666543483734, 0.4873333275318146, 0.49533334374427795, 0.5026666522026062, 0.5083333253860474, 0.515666663646698, 0.5220000147819519, 0.5286666750907898, 0.5346666574478149, 0.5386666655540466, 0.5416666865348816, 0.546999990940094, 0.5506666898727417, 0.5553333163261414, 0.5613333582878113, 0.565666675567627, 0.5699999928474426, 0.5733333230018616, 0.5786666870117188, 0.5830000042915344, 0.5860000252723694, 0.5879999995231628, 0.5916666388511658, 0.5933333039283752, 0.596666693687439, 0.6003333330154419, 0.6033333539962769, 0.6066666841506958, 0.609666645526886, 0.6106666922569275, 0.6136666536331177, 0.6156666874885559, 0.621999979019165, 0.6256666779518127, 0.6313333511352539, 0.6336666941642761, 0.6386666893959045, 0.6420000195503235, 0.6449999809265137, 0.6456666588783264, 0.6499999761581421, 0.652999997138977, 0.6589999794960022, 0.6629999876022339, 0.6656666398048401, 0.6663333177566528, 0.6696666479110718, 0.6729999780654907, 0.6729999780654907, 0.675000011920929, 0.6769999861717224, 0.6769999861717224, 0.6813333630561829, 0.684333324432373, 0.6859999895095825, 0.6863333582878113, 0.6866666674613953, 0.6890000104904175, 0.6893333196640015, 0.6899999976158142, 0.690666675567627, 0.6903333067893982, 0.6916666626930237, 0.6916666626930237, 0.6916666626930237, 0.6933333277702332, 0.6940000057220459, 0.6933333277702332, 0.6936666369438171, 0.6943333148956299, 0.6949999928474426, 0.6956666707992554, 0.6973333358764648]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.6657142639160156, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1666088756584707, 1.3593469040819903, 0.9337925444725026, 0.821073910705386, 0.7813854935209843, 0.7234245481948969, 0.6702000475940671, 0.6276770074448456, 0.6060130164497611, 0.5794658472099954, 0.5596256166826449, 0.5346787906499224, 0.5154918056862654, 0.5004500622534245, 0.49128934112774175, 0.4777728863293705, 0.4730219078566247, 0.4691995135458658, 0.4588381280287807, 0.4402579230174822, 0.4272582969054916, 0.4146435959125633, 0.4140755172182682, 0.43024008106152456, 0.42305303870127925, 0.4211376908905297, 0.41433302751700357, 0.41830726449499983, 0.4274529546259133, 0.4516675245012385, 0.44672183899705625], "accuracy": [0.26244881749153137, 0.5443138480186462, 0.659490168094635, 0.6921146512031555, 0.71100252866745, 0.7243428826332092, 0.7577598690986633, 0.7675340175628662, 0.7677981853485107, 0.7841764688491821, 0.7858935594558716, 0.7988376617431641, 0.8006868362426758, 0.8095363974571228, 0.8117818236351013, 0.8219521641731262, 0.8222163319587708, 0.8238013386726379, 0.8285563588142395, 0.8330471515655518, 0.8315942287445068, 0.8413683772087097, 0.8433496356010437, 0.8383304476737976, 0.8392550349235535, 0.8341038227081299, 0.850350022315979, 0.8358209133148193, 0.8450667262077332, 0.8334434032440186, 0.8330471515655518], "val_loss": [1.2758471625191825, 0.7225627047674996, 0.5920541797365461, 0.589261497770037, 0.526451553617205, 0.4758542265210833, 0.4637847627912249, 0.45767034803118023, 0.4052332469395229, 0.40467381477355957, 0.39365902968815397, 0.38562192235674175, 0.3731952565056937, 0.3642060330935887, 0.36535303933279856, 0.3762224997792925, 0.35580399206706453, 0.34383801903043476, 0.3442961147853306, 0.3405762995992388, 0.3412996700831822, 0.33726300512041363, 0.3325922318867275, 0.3382316827774048, 0.33724520036152433, 0.339586113180433, 0.34362173080444336, 0.3647306561470032, 0.3675991552216666, 0.39801712547029766, 0.36538400820323397], "val_accuracy": [0.5633333325386047, 0.6613333225250244, 0.7360000014305115, 0.7453333139419556, 0.768666684627533, 0.7726666927337646, 0.7956666946411133, 0.7943333387374878, 0.8216666579246521, 0.8180000185966492, 0.8309999704360962, 0.8370000123977661, 0.8450000286102295, 0.8476666808128357, 0.8420000076293945, 0.8349999785423279, 0.8579999804496765, 0.8569999933242798, 0.8579999804496765, 0.859666645526886, 0.8586666584014893, 0.8640000224113464, 0.8700000047683716, 0.8693333268165588, 0.8650000095367432, 0.8743333220481873, 0.8640000224113464, 0.859333336353302, 0.8696666955947876, 0.856333315372467, 0.8633333444595337]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 1, 2, 3, 4, 0, 1, 4, 2, 4, 1], [74, 45, 28], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 99, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302712902054732, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [16, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 1, 0, 0, 1], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 3, 7, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(grad, grad), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.778926561411267, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02813366800546646, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [36.9973384312221, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1], [1, 2, 5, 6, 3, 4, 0, 2, 5, 4, 2, 9, 4, 0], [2, 0, 1, 0, 1, 2, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [44, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [8, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 4, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [46, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302712902054732, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 3, 1, 0], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 3, 3, 3, 1, 0, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [71, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 15, 10, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [7, 3, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93, 10], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [24, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 4, 5, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1216175967.7368317, 22950531963.58737, 106463293467.5916, 293909449934.53125, 624856140610.5106, 1148531822198.6846], "accuracy": [0.09325055778026581, 0.09549596905708313, 0.1014397069811821, 0.10355303436517715, 0.10011887550354004, 0.10117553919553757], "val_loss": [4464626980.571428, 35706215277.71429, 120496460361.14285, 285605990985.1429, 557810506605.7142, 963879857590.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45, 87], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [6, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302712902054732, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06868313252925873, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 1, 0, 0, 1], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(grad, grad), tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302712902054732, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [2, 3, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [0, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1263866574.04617, 23850633632.308544, 110638512053.06987, 305436039801.7953, 649363054950.1498, 1193576818019.58], "accuracy": [0.09325055778026581, 0.09536388516426086, 0.1014397069811821, 0.10355303436517715, 0.10011887550354004, 0.10117553919553757], "val_loss": [4639720886.857142, 37106607250.28571, 125221610642.28572, 296810840064.0, 579684925440.0, 1001683306788.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 3, 1, 0], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 2, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 15, 15, 8, 7, 2, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3041625590671435, 2.302509146154895, 2.303501962434504, 2.3026444082797997, 2.3018676911866613, 2.3015647826650123], "accuracy": [0.0874389111995697, 0.08955223858356476, 0.09259014576673508, 0.08942015469074249, 0.09272222965955734, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.304162586086446, 2.3025091146638665, 2.303501611561461, 2.302643468115135, 2.3018659053304176, 2.3015614312952537], "accuracy": [0.0874389111995697, 0.08955223858356476, 0.09259014576673508, 0.08942015469074249, 0.09272222965955734, 0.08625016361474991], "val_loss": [1.9703851427350725, 1.9703850064958846, 1.9703847340175085, 1.970384120941162, 1.9703830310276575, 1.970381396157401], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 0, 3, 2, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [19, 63, 56, 12]], "fitness": -0.0231428574770689, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3059913892913504, 2.3088437240546673, 2.31444384887659, 2.3182737567500036, 2.322583742334449, 2.3273681654607015], "accuracy": [0.08268392831087112, 0.07753269374370575, 0.07145687192678452, 0.059173159301280975, 0.05507858842611313, 0.04543653503060341], "val_loss": [1.9745659828186035, 1.978795051574707, 1.9831418991088867, 1.9876259395054408, 1.9923361369541712, 1.997183050428118], "val_accuracy": [0.023000000044703484, 0.015333333052694798, 0.009999999776482582, 0.007666666526347399, 0.007333333138376474, 0.007000000216066837]}}]