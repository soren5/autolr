[{"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 2, 4, 0, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [50, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8425714373588562, "mapping_values": [1, 16, 16, 8, 8, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8826716038466225, 1.4390254337963033, 0.8667852076651508, 0.7318626193007647, 0.6432123053201422, 0.5732111312127179, 0.5391398601134566, 0.5111917095130162, 0.483446918041195, 0.46348689594729825, 0.44745779083137577, 0.4237360165867398, 0.41181554977431856, 0.39262547715465074, 0.37987054862586844, 0.3613042520801263, 0.3594020644254247, 0.34748259610299026, 0.32855807396131437, 0.326028131026287, 0.3337666257662843, 0.30894546089722197, 0.305076299310754, 0.2986929962081113, 0.28377472880793253, 0.27128596058878773, 0.2843446778725198, 0.2689337034731525, 0.26297174173890325, 0.2522008569111299, 0.23709118645133878, 0.2411991347647488, 0.244966707063814], "accuracy": [0.3653414249420166, 0.5297846794128418, 0.6651697158813477, 0.7172104120254517, 0.7498348951339722, 0.7778365015983582, 0.7930260300636292, 0.8107251524925232, 0.8224804997444153, 0.8219521641731262, 0.8367455005645752, 0.8442742228507996, 0.8469158411026001, 0.8506141901016235, 0.8565579056739807, 0.8651432991027832, 0.8615770936012268, 0.871879518032074, 0.8758420348167419, 0.8768987059593201, 0.8779553771018982, 0.8809932470321655, 0.8845595121383667, 0.8881257176399231, 0.8951261639595032, 0.8994848728179932, 0.8905032277107239, 0.8981640338897705, 0.9009377956390381, 0.9037115573883057, 0.910711944103241, 0.9039757251739502, 0.902390718460083], "val_loss": [1.4739671094076974, 0.7894943611962455, 0.5807515553065709, 0.5070633547646659, 0.4504190172467913, 0.42448398045131136, 0.41542375087738037, 0.38098433188029696, 0.36128791740962435, 0.35641105685915264, 0.35839041641780306, 0.33306450503213064, 0.32921007701328825, 0.3228682109287807, 0.3092958331108093, 0.3271006941795349, 0.3064507075718471, 0.29797384568623136, 0.30060999734061106, 0.29572291885103497, 0.30530416113989695, 0.3027820331709726, 0.2971098508153643, 0.2886836188180106, 0.30169269868305754, 0.2935114162308829, 0.28645606551851543, 0.28530546597072054, 0.2914395162037441, 0.28293120861053467, 0.28908503907067434, 0.29504503522600445, 0.29223854201180594], "val_accuracy": [0.5036666393280029, 0.6536666750907898, 0.7379999756813049, 0.7566666603088379, 0.7879999876022339, 0.8113333582878113, 0.8203333616256714, 0.8429999947547913, 0.8510000109672546, 0.859333336353302, 0.8560000061988831, 0.8646666407585144, 0.859666645526886, 0.8676666617393494, 0.8709999918937683, 0.8583333492279053, 0.871999979019165, 0.878000020980835, 0.8786666393280029, 0.8730000257492065, 0.8766666650772095, 0.8703333139419556, 0.8793333172798157, 0.8803333044052124, 0.878333330154419, 0.8776666522026062, 0.8820000290870667, 0.8899999856948853, 0.8823333382606506, 0.8840000033378601, 0.8843333125114441, 0.8816666603088379, 0.8836666941642761]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [41, 55, 80, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8357142806053162, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8826734714378313, 1.4391234787369227, 0.867057992663791, 0.7325046252045476, 0.6441449591228912, 0.5724417372048098, 0.5400220482356639, 0.5098008096115764, 0.48352206408339815, 0.46378028141650796, 0.44350858342299576, 0.4248339526956548, 0.4076521978236901, 0.3951375051149996, 0.3784343163610654, 0.362990893452096, 0.35377175138217426, 0.3508750057223608, 0.3254100355009566, 0.3234413003664857, 0.3316094743545738, 0.3055202527651461, 0.3013002456903552], "accuracy": [0.3653414249420166, 0.5295205116271973, 0.6647734642028809, 0.7153612375259399, 0.7478536367416382, 0.7784969210624695, 0.7926297783851624, 0.8092722296714783, 0.8212917447090149, 0.8208954930305481, 0.8354246616363525, 0.8442742228507996, 0.8500858545303345, 0.8477083444595337, 0.8597279191017151, 0.8625016212463379, 0.8658037185668945, 0.8696341514587402, 0.8750495314598083, 0.8794082403182983, 0.8747853636741638, 0.8812574148178101, 0.8850878477096558], "val_loss": [1.4740149974822998, 0.789857132094247, 0.579377395766122, 0.5072569506508964, 0.4506586790084839, 0.42318689823150635, 0.41425998721803936, 0.38277379104069303, 0.3609857218606131, 0.3577443105833871, 0.34846895933151245, 0.3272395815168108, 0.33223603452954975, 0.32441207340785433, 0.30855109861918856, 0.31737239020211355, 0.3077917865344456, 0.29755829913275583, 0.2978728072983878, 0.29801550933292936, 0.3047478709902082, 0.2997843197413853, 0.2953096032142639], "val_accuracy": [0.5040000081062317, 0.652999997138977, 0.7379999756813049, 0.7593333125114441, 0.7889999747276306, 0.8109999895095825, 0.8190000057220459, 0.8389999866485596, 0.8536666631698608, 0.8586666584014893, 0.8579999804496765, 0.8686666488647461, 0.8606666922569275, 0.862666666507721, 0.8740000128746033, 0.8673333525657654, 0.8693333268165588, 0.8799999952316284, 0.8796666860580444, 0.8756666779518127, 0.875, 0.874666690826416, 0.8799999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3, 4, 8, 5, 3, 8, 6, 5, 0, 5, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 8, 6, 0, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 1, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [2, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.647428572177887, "mapping_values": [1, 58, 58, 34, 24, 4, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.square(alpha)), tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.215461902142264, 1.6086699605665156, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.23339056968688965, 0.49689605832099915, 0.34367984533309937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.546382222856794, 0.8369644199098859, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.4893333315849304, 0.6773333549499512, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [9, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [23, 55, 80, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.42257142066955566, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8761821084601327, 1.3273889088218145, 1.0423253285272356, 0.878030623348555, 0.7915482739604869, 0.709652648421169, 0.7297454980134239, 0.6590315972919462, 0.7268993442147683, 0.7303084602224954, 0.6933179903323262, 0.6967111816731867, 0.7473451322835938, 1.1339010419059565, 1.314339130750784, 1.3530754163957717, 1.4511940957627292, 1.6585550295946039], "accuracy": [0.3691718280315399, 0.587769091129303, 0.6252806782722473, 0.6845859289169312, 0.7037379741668701, 0.733060359954834, 0.7306828498840332, 0.7478536367416382, 0.735569953918457, 0.724739134311676, 0.7397965788841248, 0.7380794882774353, 0.7310791015625, 0.6839255094528198, 0.6112799048423767, 0.5926561951637268, 0.5680887699127197, 0.5246334671974182], "val_loss": [1.1546195915767126, 0.8894950321742466, 0.610661404473441, 0.5732544830867222, 0.5062299626214164, 0.49482718535832, 0.47408149923597065, 0.5311803647450039, 0.49044786180768696, 0.478946362222944, 0.4773456709725516, 0.47516163757869173, 0.45106195552008493, 0.7877596616744995, 0.7375726529530117, 0.7509984970092773, 0.8115187202181134, 1.0473416192190987], "val_accuracy": [0.6119999885559082, 0.6589999794960022, 0.7319999933242798, 0.7676666378974915, 0.7689999938011169, 0.778333306312561, 0.7793333530426025, 0.7770000100135803, 0.7676666378974915, 0.7833333611488342, 0.8009999990463257, 0.7833333611488342, 0.8029999732971191, 0.7160000205039978, 0.7036666870117188, 0.6556666493415833, 0.6899999976158142, 0.6033333539962769]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 2, 2, 0, 6, 2, 0, 9, 4, 8, 4, 0, 2, 6, 2, 4, 3, 4, 0, 5, 6, 3, 5, 2, 2, 7, 2, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [0, 2, 2, 0, 2, 1, 2, 1, 1, 2, 0, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 2, 1, 2, 3, 3, 2, 2, 2, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [70, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.2785714268684387, "mapping_values": [1, 20, 20, 12, 8, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.116503347636938, 2.341697342501907, 2.2771405953898674, 2.2913425986509535, 2.3031416605366313, 2.302594014351567], "accuracy": [0.18121780455112457, 0.13855500519275665, 0.12336547672748566, 0.11900673806667328, 0.09879804402589798, 0.09879804402589798], "val_loss": [1.8936958312988281, 1.9748218400137765, 1.5645487308502197, 1.973555564880371, 1.9735537937709264, 1.972628389086042], "val_accuracy": [0.3323333263397217, 0.10000000149011612, 0.3256666660308838, 0.10366666316986084, 0.10366666316986084, 0.156333327293396]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 4, 6, 2, 2, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 4, 0, 5, 6, 3, 9, 2, 2, 7, 8, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [94, 55, 80, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.25914284586906433, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.4621045090314215, 3.7921749600770847, 2.433323984652494, 2.6323762741134216, 2.475805168280339, 2.548704237151281, 2.517857175918224], "accuracy": [0.1752740740776062, 0.13551710546016693, 0.13274335861206055, 0.09760929644107819, 0.09721305221319199, 0.09879804402589798, 0.1002509593963623], "val_loss": [2.0073466300964355, 2.147825377328055, 2.047144753592355, 2.1315275600978305, 2.1090170996529713, 2.005098274775914, 2.2120182854788646], "val_accuracy": [0.10333333164453506, 0.10366666316986084, 0.09666666388511658, 0.09733333438634872, 0.10366666316986084, 0.09666666388511658, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 4, 6, 2, 2, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 1, 1, 4, 0, 5, 6, 3, 9, 2, 2, 7, 9, 9, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 23, 73, 34, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.2508571445941925, "mapping_values": [1, 49, 49, 30, 19, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.subtract(grad, alpha)))), grad))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))))))))), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.462102431095886, 4.010273588268968, 2.457930715470471, 2.5256096605359604, 2.4426037002438017, 2.517288337687869, 2.511569669139289], "accuracy": [0.1752740740776062, 0.13393211364746094, 0.1328754425048828, 0.09906221181154251, 0.09470347315073013, 0.09655263274908066, 0.1002509593963623], "val_loss": [2.007770129612514, 2.150871685573033, 2.065617425101144, 2.1372708593096053, 2.1276666777474538, 2.0149773188999722, 2.1461165291922435], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.09666666388511658, 0.10133333504199982, 0.10366666316986084, 0.09666666388511658, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 4, 6, 2, 2, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 4, 0, 5, 6, 3, 9, 2, 2, 7, 8, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.24171428382396698, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.462146244217864, 3.1082157984133865, 2.9517868404390946, 2.3881817591456436, 2.3610673048051907, 2.356345936039955, 2.3429277028232565], "accuracy": [0.17514199018478394, 0.14832915365695953, 0.1398758441209793, 0.09998679161071777, 0.09602430462837219, 0.09708096832036972, 0.10117553919553757], "val_loss": [2.0118607112339566, 1.9846440042768205, 2.035395690373012, 2.0199887411934987, 2.0108888489859447, 2.000185080936977, 2.0095932143075124], "val_accuracy": [0.10300000011920929, 0.16866666078567505, 0.10133333504199982, 0.09666666388511658, 0.0963333323597908, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 2, 2, 0, 4, 2, 0, 9, 4, 1, 4, 1, 2, 6, 6, 3, 3, 5, 9, 3, 6, 3, 4, 2, 3, 7, 1, 6, 5, 7, 3, 7, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 1, 1, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 2, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [70, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.18485714495182037, "mapping_values": [1, 61, 61, 34, 27, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad))))))), grad), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.462103121190291, 3.756535553834568, 2.422529708754983, 2.6706618373388658, 2.520308147883135, 2.5205041115168396, 2.5164710438372735, 2.4873957613503], "accuracy": [0.1752740740776062, 0.13657376170158386, 0.13129045069217682, 0.09866596013307571, 0.1010434553027153, 0.09787346422672272, 0.1002509593963623, 0.1022322028875351], "val_loss": [2.0073436328342984, 2.1719434601919994, 2.0349884714399065, 2.0709385190691267, 2.148375988006592, 2.008655411856515, 2.182836191994803, 2.2007053239004954], "val_accuracy": [0.10333333164453506, 0.10366666316986084, 0.10400000214576721, 0.10300000011920929, 0.10366666316986084, 0.09666666388511658, 0.09733333438634872, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 4, 4, 1, 2, 6, 3, 4, 3, 5, 0, 5, 4, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1, 1, 2, 2, 7, 5, 7, 6, 8, 0, 4], [2, 2, 2, 0, 1, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 2, 1, 0, 2, 2, 1, 2, 2, 2, 3, 2, 2, 3, 3, 1, 0, 1, 3, 2, 1], [23, 55, 80, 65, 26, 73, 40, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.1485714316368103, "mapping_values": [1, 83, 83, 48, 35, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 76, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.multiply(grad, tf.math.add(alpha, alpha)), grad)))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))))))), alpha))))), tf.math.negative(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))))))))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.214322879660509, 2.386858825686113, 2.305525628378237, 2.3037272532224624, 2.3032528028008237, 2.3028541207392266, 2.30286716835421], "accuracy": [0.17131158709526062, 0.14132875204086304, 0.09774138033390045, 0.09694888442754745, 0.09470347315073013, 0.09430722147226334, 0.09893012791872025], "val_loss": [1.9685188702174596, 1.9762753077915736, 1.9738014084952218, 1.973560197012765, 1.9736223220825195, 1.973639760698591, 1.9737066541399275], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [1, 4, 6, 2, 2, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 4, 0, 5, 6, 3, 9, 2, 2, 7, 8, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.14228571951389313, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2143230145680763, 2.3941612390715448, 2.3055620546495876, 2.3037041835875605, 2.3033186085015367, 2.3028604789668887, 2.3028634258028915], "accuracy": [0.17131158709526062, 0.14080041646957397, 0.09721305221319199, 0.09708096832036972, 0.09338264167308807, 0.09298639744520187, 0.09919429570436478], "val_loss": [1.968533992767334, 1.9763482638767786, 1.9738086291721888, 1.9735644204275948, 1.9736309051513672, 1.9736408506120955, 1.9737059729439872], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [41, 55, 80, 53, 26, 73, 46, 33, 24], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.1379999965429306, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2143245700989356, 2.382804300271446, 2.305512773488349, 2.3037037550576405, 2.303265425160954, 2.302856497587608, 2.3028587174532107], "accuracy": [0.1710474193096161, 0.1418570876121521, 0.09774138033390045, 0.09694888442754745, 0.09470347315073013, 0.09232597798109055, 0.09774138033390045], "val_loss": [1.9686272484915597, 1.9762426785060339, 1.9738110133579798, 1.9735565185546875, 1.973625591823033, 1.9736343792506628, 1.973691122872489], "val_accuracy": [0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 2, 4, 0, 6, 3, 0, 9, 8, 1, 4, 1, 2, 6, 3, 3, 3, 5, 9, 3, 6, 3, 4, 2, 2, 7, 3, 6, 8, 7, 6, 7, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 2, 2, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 3, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [50, 55, 25, 53, 89, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [70, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 62, 62, 35, 27, 4, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))), grad)), tf.math.add(alpha, grad)))), alpha)), tf.math.add(alpha, grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 6, 2, 8, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 4, 4, 3, 4, 0, 5, 6, 3, 9, 0, 2, 7, 8, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 0, 2, 1, 3, 2, 1, 0, 0, 2, 2, 1, 0, 2, 2, 0, 1, 2, 3, 3, 2, 2, 2, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 0, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [70, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 18, 14, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(grad)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(grad, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), alpha)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 4, 3, 2, 2, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 4, 0, 5, 6, 3, 9, 2, 2, 7, 8, 6, 8, 4, 6, 7, 6, 7, 9, 1, 7, 7, 6, 1, 0], [2, 2, 2, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 0, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [50, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [70, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023447330365516, 2.3028391993765376, 2.303359523882026, 2.303662795369273, 2.303234840506938, 2.3067934964988304], "accuracy": [0.10091137140989304, 0.10091137140989304, 0.09760929644107819, 0.10487385839223862, 0.1080438494682312, 0.10196803510189056], "val_loss": [1.97360931124006, 1.9736670766557967, 1.9739490236554826, 1.9744298798697335, 1.975343908582415, 1.9778037071228027], "val_accuracy": [0.10133333504199982, 0.10100000351667404, 0.10100000351667404, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 8, 5, 2, 3, 8, 6, 1, 0, 9, 4, 1, 4, 1, 4, 9, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [23, 55, 80, 53, 26, 73, 46, 33, 24], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [56, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 6, 8, 8, 5, 0, 0, 4, 5, 8], [2, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, sigma), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(beta)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 0, 1, 0, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 0, 2, 3, 3, 1, 0, 1, 3], [50, 55, 25, 53, 26, 73, 34, 33, 24], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [7, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.06914285570383072, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3020316294832726, 2.3013435287750186, 2.30100121083686, 2.300378010840133, 2.3013101337041366, 2.299822883016445, 2.300537480748703, 2.3001853134874275, 2.2994519667524025, 2.299332395536458, 2.2991329973336962, 2.29771318112571, 2.2993942800687366], "accuracy": [0.09245806187391281, 0.09245806187391281, 0.09166556596755981, 0.0956280529499054, 0.09866596013307571, 0.09906221181154251, 0.10328886657953262, 0.09893012791872025, 0.10315678268671036, 0.10368511080741882, 0.09787346422672272, 0.10711926966905594, 0.09866596013307571], "val_loss": [1.9696384157453264, 1.9691450255257743, 1.9689517702375139, 1.9688901901245117, 1.9687963894435339, 1.9689154624938965, 1.9688767024448939, 1.9687720707484655, 1.9687585830688477, 1.9687093326023646, 1.9687907355172294, 1.969024385724749, 1.9692354202270508], "val_accuracy": [0.04833333194255829, 0.0560000017285347, 0.06433333456516266, 0.070333331823349, 0.07533333450555801, 0.07833333313465118, 0.0820000022649765, 0.08666666597127914, 0.08666666597127914, 0.08666666597127914, 0.0820000022649765, 0.08166666328907013, 0.08433333039283752]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [1, 2, 2, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [41, 55, 80, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.30249390197767, 2.3028487042822716, 2.3031312592072712, 2.3028092216806106, 2.3042426294481215, 2.3024339865164403], "accuracy": [0.09272222965955734, 0.08875974267721176, 0.0874389111995697, 0.09192973375320435, 0.0886276587843895, 0.09087307006120682], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 4, 8, 2, 3, 8, 6, 2, 0, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [94, 55, 80, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.03228571265935898, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030674188931575, 2.305102259176534, 2.30722351333075, 2.3092636299045126, 2.3136485346304254, 2.3142524792486414], "accuracy": [0.09259014576673508, 0.0866464152932167, 0.08109892904758453, 0.0820235088467598, 0.07660810649394989, 0.08294808864593506], "val_loss": [1.9714667456490653, 1.9727150372096471, 1.9742346491132463, 1.9761411121913366, 1.9784511838640486, 1.9807368687220983], "val_accuracy": [0.029333332553505898, 0.02566666714847088, 0.024666666984558105, 0.023333333432674408, 0.021666666492819786, 0.02800000086426735]}}]