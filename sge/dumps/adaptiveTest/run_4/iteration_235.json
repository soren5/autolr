[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [76, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7985714077949524, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2576734032440084, 2.0663964107697588, 1.6372751942746564, 1.2802571440259496, 1.1039321156635167, 1.0041149808998042, 0.9449493271909952, 0.8977277412579564, 0.8459027356569871, 0.8175277801127466, 0.7998740095204807, 0.7801147530485437, 0.7605668738092713, 0.7486826677001809, 0.7362692172044556, 0.7281194262500799, 0.7099420829314314, 0.6957164305139133, 0.6864748658395131, 0.6905017475945807, 0.6746331762958905, 0.6846621752320626, 0.6631581248104643, 0.6697194744976614, 0.649037049848327, 0.6443602341576464, 0.631492116526527, 0.6383028676197781, 0.6291162416746335, 0.6239459447620757, 0.616260646954976, 0.61054313089145, 0.6141637024736486, 0.6095974530683705, 0.5998045429971162, 0.5932756278099496, 0.6035045518725225, 0.5880885331811151, 0.5892334124588806, 0.5742544258322619], "accuracy": [0.19838859140872955, 0.38488972187042236, 0.48487651348114014, 0.5651829242706299, 0.6085061430931091, 0.6458855867385864, 0.6650376319885254, 0.6725663542747498, 0.7010962963104248, 0.7054550051689148, 0.7111346125602722, 0.7157574892044067, 0.7236824631690979, 0.7235503792762756, 0.7327961921691895, 0.7238145470619202, 0.7388719916343689, 0.7491744756698608, 0.7510236501693726, 0.7452120184898376, 0.7534011602401733, 0.7494386434555054, 0.7614582180976868, 0.7524765729904175, 0.76542067527771, 0.763967752456665, 0.7651565074920654, 0.7626469135284424, 0.7613261342048645, 0.7713643908500671, 0.7732135653495789, 0.7749306559562683, 0.776251494884491, 0.7703077793121338, 0.7795535326004028, 0.7812706232070923, 0.7791573405265808, 0.7862898111343384, 0.7769119143486023, 0.7847048044204712], "val_loss": [1.8531481197902135, 1.524679388318743, 1.0499960354396276, 0.8350329569407872, 0.7210171903882708, 0.7266890832356044, 0.6624166795185634, 0.6022826092583793, 0.5927900416510445, 0.5606690474918911, 0.5529963629586356, 0.5431204012462071, 0.5368117604936872, 0.5266454901014056, 0.5223157746451241, 0.5231985364641462, 0.500009434563773, 0.4856881243841989, 0.4853464194706508, 0.47606565271105084, 0.49014830589294434, 0.4767972571509225, 0.4678210701261248, 0.46356379985809326, 0.46726836477007183, 0.4577198198863438, 0.4490232297352382, 0.4563910450254168, 0.44443721430642263, 0.43379037720816477, 0.4404775244849069, 0.4318265914916992, 0.435440651008061, 0.43925632749285015, 0.4215198074068342, 0.4239680937358311, 0.42603330101285664, 0.4308257443564279, 0.421013457434518, 0.41439898524965557], "val_accuracy": [0.47466665506362915, 0.5709999799728394, 0.6420000195503235, 0.684333324432373, 0.6990000009536743, 0.6880000233650208, 0.7113333344459534, 0.75, 0.7323333621025085, 0.7616666555404663, 0.762333333492279, 0.7603333592414856, 0.7663333415985107, 0.7746666669845581, 0.7603333592414856, 0.7516666650772095, 0.7823333144187927, 0.7976666688919067, 0.7933333516120911, 0.7986666560173035, 0.7889999747276306, 0.7946666479110718, 0.7903333306312561, 0.809333324432373, 0.7933333516120911, 0.8153333067893982, 0.8090000152587891, 0.7946666479110718, 0.812333345413208, 0.8263333439826965, 0.8103333115577698, 0.8243333101272583, 0.8166666626930237, 0.8119999766349792, 0.8339999914169312, 0.8223333358764648, 0.8259999752044678, 0.8066666722297668, 0.8320000171661377, 0.8289999961853027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7979999780654907, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2576734032440084, 2.066397275481919, 1.6372766802103418, 1.2802332966413639, 1.1040704720024388, 1.0035311064825965, 0.9450978237041755, 0.8970137773377627, 0.845131651442899, 0.8175541400720477, 0.8002939503647317, 0.7801346552370404, 0.7603187460972413, 0.7484844280051328, 0.7357137564261198, 0.7287991060840298, 0.7091590863382025, 0.6952279330150185, 0.6869544574314057, 0.6903964614887058, 0.6747684551346587, 0.6864165542006351, 0.6623315818478891, 0.6696214181651623, 0.648331243254017, 0.6437412814976847, 0.6311838858241906, 0.6370349258337952, 0.6295435766045758, 0.6242822833962491, 0.6162805874444364, 0.610437475954773, 0.61564647272798, 0.6087465704691928, 0.5986033327323477, 0.5937758883102899, 0.602815042287131, 0.5872369322007154, 0.5886825400651516, 0.5747378698476726], "accuracy": [0.19838859140872955, 0.38488972187042236, 0.48514068126678467, 0.5658433437347412, 0.6078457236289978, 0.6468101739883423, 0.6646413803100586, 0.6737551093101501, 0.7016246318817139, 0.7067758440971375, 0.7111346125602722, 0.7157574892044067, 0.7238145470619202, 0.7236824631690979, 0.7321357727050781, 0.724210798740387, 0.739400327205658, 0.7486461400985718, 0.7512878179550171, 0.7458723783493042, 0.7534011602401733, 0.7474573850631714, 0.7627789974212646, 0.7520803213119507, 0.7664773464202881, 0.7631752490997314, 0.7655527591705322, 0.763439416885376, 0.761590301990509, 0.7721568942070007, 0.7724210619926453, 0.7730814814567566, 0.7734777331352234, 0.7716285586357117, 0.7790252566337585, 0.7804781198501587, 0.7781006693840027, 0.7868181467056274, 0.778232753276825, 0.7839123010635376], "val_loss": [1.8531481197902135, 1.5246740409306117, 1.0499915736062186, 0.8349633727754865, 0.7212966169629779, 0.7248649767466954, 0.662971990449088, 0.6020708935601371, 0.591650128364563, 0.5606323140008109, 0.5547612054007394, 0.5422707114900861, 0.5366856711251395, 0.5275144577026367, 0.5236395938055856, 0.5217116219656808, 0.49901189122881207, 0.4864238500595093, 0.48491612502506803, 0.47628516810280935, 0.4937383106776646, 0.4757148708615984, 0.4659830502101353, 0.46499104159218924, 0.46657189301082064, 0.45872470310756136, 0.4472780057362148, 0.4598337241581508, 0.4446017401559012, 0.4331605689866202, 0.4405513490949358, 0.4347830755370004, 0.4343511973108564, 0.4389629874910627, 0.42155578306743074, 0.4233558603695461, 0.42549834081104826, 0.4327598980494908, 0.42125775132860455, 0.4133498157773699], "val_accuracy": [0.47466665506362915, 0.5713333487510681, 0.6423333287239075, 0.6836666464805603, 0.6983333230018616, 0.687333345413208, 0.7126666903495789, 0.7506666779518127, 0.7336666584014893, 0.7630000114440918, 0.7616666555404663, 0.7630000114440918, 0.7673333287239075, 0.7723333239555359, 0.7590000033378601, 0.7549999952316284, 0.781333327293396, 0.7960000038146973, 0.793666660785675, 0.7973333597183228, 0.7846666574478149, 0.7956666946411133, 0.793666660785675, 0.8040000200271606, 0.793666660785675, 0.8136666417121887, 0.8113333582878113, 0.7913333177566528, 0.8106666803359985, 0.8263333439826965, 0.812666654586792, 0.8163333535194397, 0.8169999718666077, 0.8136666417121887, 0.8316666483879089, 0.8233333230018616, 0.8253333568572998, 0.8059999942779541, 0.8316666483879089, 0.8309999704360962]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 7, 1, 2, 6, 4, 0, 2, 4, 6, 7], [2, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [32, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.7837142944335938, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 11, 11, 2, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), grad)), alpha)), tf.math.pow(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, beta), grad)), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.206126349366903, 1.6440340767069233, 1.2202459525564453, 1.0084141670295574, 0.962421306962618, 0.8610667198908217, 0.8479138709897016, 0.7782574990296077, 0.7620503231282751, 0.7334897378337791, 0.7099709351930983, 0.693713919448185, 0.6845432431029291, 0.6624934264477045, 0.6595520450926854, 0.6312902844136401, 0.6400635040840846, 0.6179773631726967, 0.6283830703525117, 0.6027189388235468, 0.6047939729885796, 0.6057011012498178, 0.6074466637144188, 0.5911042153591242, 0.5756789278344802], "accuracy": [0.2685246467590332, 0.4744419455528259, 0.5802403688430786, 0.6415268778800964, 0.6491876840591431, 0.6845859289169312, 0.6868313550949097, 0.7111346125602722, 0.7145687341690063, 0.7243428826332092, 0.7371549606323242, 0.7424382567405701, 0.7449478507041931, 0.7465327978134155, 0.750759482383728, 0.7667415142059326, 0.7516840696334839, 0.7658169269561768, 0.7629110813140869, 0.7728173136711121, 0.7676661014556885, 0.7733456492424011, 0.7672698497772217, 0.7744023203849792, 0.785629391670227], "val_loss": [1.6512226377214705, 0.9308879034859794, 0.7731625352587018, 0.8338038069861275, 0.6419929947171893, 0.6122944695608956, 0.5722604819706508, 0.5891378096171788, 0.5211596659251622, 0.5278928450175694, 0.5091911724635533, 0.523723806653704, 0.5119274854660034, 0.4921118702207293, 0.49016412666865755, 0.45979647977011545, 0.45754383291516987, 0.4504953282220023, 0.4540747744696481, 0.444808874811445, 0.4767498629433768, 0.442659718649728, 0.46311698641095844, 0.4307823266301836, 0.43741233008248465], "val_accuracy": [0.46033334732055664, 0.671999990940094, 0.690666675567627, 0.6173333525657654, 0.718999981880188, 0.7143333554267883, 0.7543333172798157, 0.7323333621025085, 0.7673333287239075, 0.7746666669845581, 0.7743333578109741, 0.765999972820282, 0.7673333287239075, 0.7743333578109741, 0.7963333129882812, 0.8066666722297668, 0.8050000071525574, 0.8080000281333923, 0.7993333339691162, 0.809333324432373, 0.7910000085830688, 0.7956666946411133, 0.7799999713897705, 0.8029999732971191, 0.809333324432373]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 8, 4, 0, 2, 4], [2, 3, 3, 3], [0, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.6574285626411438, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0325474300719586, 1.2262837145354029, 0.9025747904042526, 0.8027518267298356, 0.6928278123068063, 0.6655517697350035, 0.6426825427013917, 0.6004640172343795, 0.5955152861934375, 0.5712172637022308, 0.5821253545390396, 0.5518291243047542, 0.5425547487338016, 0.551643476612485, 0.5391007539870449, 0.5180789615184939, 0.5441516807460042, 0.5541796794956103, 0.5641042419617376], "accuracy": [0.31726324558258057, 0.5872408151626587, 0.6690001487731934, 0.7128516435623169, 0.7390040755271912, 0.755118191242218, 0.7561748623847961, 0.7655527591705322, 0.7732135653495789, 0.7816668748855591, 0.7738739848136902, 0.785101056098938, 0.796328067779541, 0.7858935594558716, 0.7948752045631409, 0.8006868362426758, 0.7931581139564514, 0.791441023349762, 0.7961959838867188], "val_loss": [1.0032428673335485, 0.6930559362683978, 0.5783818789890834, 0.5275700432913644, 0.46387127467564176, 0.47813379764556885, 0.422183666910444, 0.4072416765349252, 0.3962071282523019, 0.41382505212511334, 0.38285780804497854, 0.3867384195327759, 0.38722301380974905, 0.37968078681400846, 0.3839021325111389, 0.4119069831711905, 0.398611239024571, 0.40741825103759766, 0.40178206137248446], "val_accuracy": [0.5706666707992554, 0.7110000252723694, 0.7400000095367432, 0.7603333592414856, 0.7850000262260437, 0.7913333177566528, 0.8059999942779541, 0.8136666417121887, 0.8199999928474426, 0.8169999718666077, 0.8333333134651184, 0.8353333473205566, 0.8293333053588867, 0.8426666855812073, 0.8226666450500488, 0.8336666822433472, 0.8416666388511658, 0.8336666822433472, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [76, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [66, 63, 56, 12]], "fitness": -0.4405714273452759, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2772668525921023, 2.4679706857787336, 2.29438109949611, 2.2446316574322407, 2.3061456657624313, 2.239314071947258, 2.352745414614725, 2.304432173415166], "accuracy": [0.21582353115081787, 0.15731078386306763, 0.12812046706676483, 0.19244486093521118, 0.10355303436517715, 0.1534803807735443, 0.14568749070167542, 0.09998679161071777], "val_loss": [2.5880035672869, 1.9739651679992676, 1.830592427934919, 1.976105008806501, 1.974853447505406, 1.9330299241202218, 1.9759725843157088, 1.9740204811096191], "val_accuracy": [0.21566666662693024, 0.10366666316986084, 0.37966665625572205, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0, 2], [96, 12, 93], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [4, 2, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8, 6, 8, 8, 0, 3, 2, 4, 3, 5, 4, 8, 5, 2, 5, 7, 7, 5, 4, 4, 7, 8, 6, 2, 7, 1, 4, 4, 1, 0, 5, 2, 8, 8, 0, 5, 6, 3, 0, 8, 5, 8, 9], [1, 1, 0, 0, 3, 0, 2, 1, 3, 1, 2, 0, 1, 2, 3, 2, 0, 2, 3, 2, 3, 3, 2, 1, 0, 2, 2], [87, 89, 56, 12, 97, 83, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 1, 1, 0, 0, 80, 53, 27, 7], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))), sigma)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.square(tf.math.pow(beta, alpha)), tf.math.sqrt(sigma)), tf.math.square(tf.math.add(alpha, beta))), tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.pow(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(beta, sigma)), beta), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.subtract(tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.negative(beta), tf.math.square(sigma)), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.square(beta)))), sigma)), tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(sigma), tf.math.sqrt(beta)), tf.math.square(alpha))), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0, 3], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [4, 3, 2, 0, 6, 4, 0, 2, 4], [0, 3, 0, 3, 0], [17, 45, 49], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 3, 1, 1, 1, 0, 1, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 8, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [96, 63, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 1, 4, 0, 2, 4], [0, 3, 0, 1], [11, 92], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 9, 2, 0, 6, 3, 0, 8], [2, 1, 0, 0, 3, 0, 2, 1, 1, 1, 1], [35, 63, 56, 12, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.304699803230045, 2.3140622159635167, 2.330706252460986, 2.358570727343415, 2.397558814514708, 2.4430096926958083, 2.5324616119484027, 2.6178658233106473, 2.7320261342319845, 2.8695831388262647, 3.0406345775681336, 3.2384280752212993, 3.4338537832969815, 3.681700417079379, 3.9452440451164885], "accuracy": [0.08849557489156723, 0.08994849026203156, 0.08558975160121918, 0.09021265059709549, 0.09589222073554993, 0.09681680053472519, 0.09272222965955734, 0.10011887550354004, 0.09694888442754745, 0.09919429570436478, 0.09840179979801178, 0.09655263274908066, 0.09840179979801178, 0.09826971590518951, 0.10051512718200684], "val_loss": [1.9731111526489258, 1.9769270079476493, 1.9843026569911413, 1.9984820910862513, 2.0199050222124373, 2.0495315279279436, 2.088641847882952, 2.138586793627058, 2.200697217668806, 2.276158400944301, 2.3660715648106168, 2.4713123185294017, 2.5925658770969937, 2.7303410938807895, 2.884906768798828], "val_accuracy": [0.025333333760499954, 0.06733333319425583, 0.09399999678134918, 0.0949999988079071, 0.0963333323597908, 0.09666666388511658, 0.0989999994635582, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0, 4], [19, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 8, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3], [32, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 6, 2, 5, 0, 5, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 2, 1, 1, 0, 0, 16, 11, 5, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.square(beta))), tf.math.pow(tf.math.negative(alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [51, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [4, 7, 8, 0, 7, 4, 0, 2, 4], [2, 3, 4, 3], [32, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3], [32, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 2, 6, 0, 5, 0, 0, 4, 0, 8], [1, 1, 0, 1, 3, 0, 2], [64, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.square(alpha)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0820235088467598, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3], [76, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 1, 2, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.sqrt(beta), grad), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.492866721214352, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.029322413727641106, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.1453977312360495, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0820000022649765, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 0, 0], [2, 1, 1, 1, 2, 3, 2, 3], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 5, 6, 0, 6, 4, 0, 2, 4], [2, 3, 3, 2, 3], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 8, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 1, 4, 4, 2, 2, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), grad)))), tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 3, 0, 1, 1, 2, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 7, 8, 5, 6, 4, 0, 2, 4], [2, 3, 0], [11, 0, 72], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1262940978.1852849, 23555705596.179104, 109025616366.48474, 308299334099.43414, 664159145352.6393, 1194796545797.782], "accuracy": [0.09945846349000931, 0.09642054885625839, 0.09879804402589798, 0.10170386731624603, 0.09866596013307571, 0.1006472036242485], "val_loss": [4639720886.857142, 37106607250.28571, 125221610642.28572, 296810840064.0, 579684925440.0, 1001683306788.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 0], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [0, 3, 0, 1], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 8, 0, 8, 2, 5, 0, 0, 4, 0, 8], [3, 0, 0, 0, 3, 0, 2], [85, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 4], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.sqrt(grad), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302917562408407, 2.302632202168088, 2.3026275457786043, 2.3026313371410176, 2.302634144755182, 2.302626621611382, 2.3026332904980436, 2.302628107389612, 2.3026378511547994], "accuracy": [0.09536388516426086, 0.09615638852119446, 0.09628847241401672, 0.09721305221319199, 0.0944393053650856, 0.09655263274908066, 0.09919429570436478, 0.09417514503002167, 0.09919429570436478], "val_loss": [1.9736371040344238, 1.973630360194615, 1.9736315863473075, 1.9736337661743164, 1.9736457552228654, 1.9736415318080358, 1.9736371040344238, 1.9736300195966447, 1.9736364909580775], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10300000011920929, 0.10366666316986084, 0.10000000149011612, 0.09733333438634872, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [1, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302462792021802, 2.303441585125846, 2.3047864990085736, 2.303893155331121, 2.303578369401119, 2.3020989520123702], "accuracy": [0.09047681838274002, 0.09140139818191528, 0.0870426595211029, 0.09126931428909302, 0.09153348207473755, 0.09338264167308807], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]