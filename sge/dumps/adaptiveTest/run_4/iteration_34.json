[{"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.015524141131265, 1.5904268045876366, 1.0647683305400883, 0.9079478778670319, 0.7814045176687431, 0.7973575652976156, 0.7206592107524552, 0.6800069330611234, 0.6477072221916964, 0.6387758822473222, 0.616302365073281, 0.612583265509572, 0.5858728336289637, 0.5764153763177514, 0.5534929997452404, 0.5410678883301757, 0.5252242858982074, 0.5170710547772444], "accuracy": [0.31303659081459045, 0.4744419455528259, 0.6042794585227966, 0.6544709801673889, 0.7079645991325378, 0.7043983340263367, 0.7298903465270996, 0.739928662776947, 0.7531369924545288, 0.7622507214546204, 0.7652885913848877, 0.7644960880279541, 0.7823272943496704, 0.7877426743507385, 0.791969358921051, 0.7968564033508301, 0.7975168228149414, 0.8090080618858337], "val_loss": [1.2128851413726807, 0.8493489708219256, 0.7341149364198957, 0.571456926209586, 0.6890570606504168, 0.5490050486155919, 0.5305707454681396, 0.5279488733836583, 0.4817360298974173, 0.5114086014883858, 0.5162221363612584, 0.48422040258135113, 0.43691294533865793, 0.44263663462230135, 0.44292830569403513, 0.4564695273126875, 0.4431470036506653, 0.42779883316584993], "val_accuracy": [0.48899999260902405, 0.6430000066757202, 0.6543333530426025, 0.7393333315849304, 0.6589999794960022, 0.7566666603088379, 0.7616666555404663, 0.7406666874885559, 0.784333348274231, 0.7636666893959045, 0.7566666603088379, 0.7796666622161865, 0.8090000152587891, 0.8040000200271606, 0.8016666769981384, 0.7916666865348816, 0.8023333549499512, 0.7979999780654907]}}, {"genotype": [[0], [1, 0, 1], [1], [], [3, 1, 2, 3, 1, 3, 2], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [5, 3, 1, 8, 0], [6, 7], [], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 7, 0, 2, 2, 2, 0, 3, 2, 3, 3, 5], [1, 2, 0, 0, 3, 1, 3, 1, 1, 1], [41, 60, 56, 45]], "fitness": -0.62371426820755, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 22, 12, 10, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), beta), tf.math.add(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, alpha)))), tf.math.multiply(sigma, tf.math.multiply(alpha, alpha))), tf.math.square(alpha)))", "other_info": {"loss": [1.9672611809646008, 1.536635351360529, 4.064874374914579e+30, NaN, NaN, NaN, NaN], "accuracy": [0.3497556447982788, 0.5322942733764648, 0.3943996727466583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.5637976782662528, 1.0274879251207625, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.5086666941642761, 0.6480000019073486, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [0, 1], [0, 2, 9, 1, 8, 3, 0, 3, 1, 4, 3, 9, 3, 5, 6, 9], [2, 1], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [5, 3, 1, 8, 0], [6, 7], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 3, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.44514286518096924, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.1964476029193634, 268986513.6722484, NaN, NaN, NaN, NaN], "accuracy": [0.24025888741016388, 0.24937260150909424, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.9954090118408203, 2.6690664398398612e+16, NaN, NaN, NaN, NaN], "val_accuracy": [0.4336666762828827, 0.08733333647251129, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [0, 1], [62, 78], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [42], [0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1], [6, 2, 2, 5, 4], [6, 7], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [45, 60, 56, 45]], "fitness": -0.1022857129573822, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 8, 6, 4, 2, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3802503229667.29, 4281037931563602.5, 2.5465453887883888e+17, 4.4539146083856143e+18, 3.951778441579972e+19, 2.3286646273831328e+20, 1.0725596405097322e+21, 3.989871665695809e+21, 1.2969939630041277e+22], "accuracy": [0.09272222965955734, 0.10355303436517715, 0.10289261490106583, 0.09774138033390045, 0.09311848133802414, 0.1018359512090683, 0.09879804402589798, 0.09734513610601425, 0.10289261490106583], "val_loss": [57564671321234.29, 2.102059951164153e+16, 7.196321078175148e+17, 9.063929028395363e+18, 6.820873033808078e+19, 3.695001435434925e+20, 1.5351696297402095e+21, 5.644514052842242e+21, 1.7821114950788623e+22], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10266666859388351, 0.10300000011920929, 0.10266666859388351, 0.09133332967758179, 0.09966666996479034, 0.0949999988079071, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [3, 4, 3, 9, 0, 5, 7], [3, 1, 1, 0], [86, 5], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [43], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [3, 3, 7, 7], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [0, 1, 0, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), alpha), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1], [6, 3, 2, 5, 4], [6, 7], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [0, 1], [0], [0, 1], [32], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0, 1, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [3, 7, 0, 2, 2, 2, 0, 6, 9, 7, 6, 7, 5, 5, 7, 2, 0, 2, 7, 7, 1, 8, 1, 2, 1, 4, 7, 8, 7, 4, 2, 0, 3, 2], [3, 2, 0, 0, 3, 1, 2, 1, 3, 0, 0, 1, 0, 0, 0, 0, 1, 0, 3, 1, 2, 0, 1, 2, 3], [45, 60, 56, 45, 88, 50, 51, 85, 56, 73, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 59, 34, 25, 11], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.add(tf.math.square(tf.math.square(alpha)), tf.math.add(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.subtract(tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.negative(alpha)))))), beta)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, beta), sigma))))))))", "other_info": {"loss": [2.3020854152472356, 2.303035924935684, 2.3018782666614106, 2.302615428723522, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09377889335155487, 0.08611807972192764, 0.09100515395402908, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0], [0, 1, 0, 1], [4, 0], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 3, 0, 2, 2, 2, 0], [0, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302185958292443, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [0, 1], [72], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 1, 0, 0], [0, 1, 0, 0, 0], [0, 8, 0], [7, 7], [], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 9, 9, 2, 2, 2, 0], [2, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302185958292443, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [], [0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 7, 9, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302185958292443, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [1, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 7, 0, 2, 2, 2, 0], [0, 2, 3, 0, 3, 0, 0, 2, 2, 2, 1, 0, 2, 3, 3, 3, 3, 1, 3, 1, 0, 3, 2, 1, 2, 2, 0, 0, 0, 0, 0, 3, 3, 1, 2, 3, 0, 2, 0, 1], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), beta), sigma)", "other_info": {"loss": [4433638.405682497, 84343762.59305243, 390486216.8506142, 1086440985.9685643, 2340809811.9244485, 4249162108.9399023], "accuracy": [0.09259014576673508, 0.10368511080741882, 0.10315678268671036, 0.09826971590518951, 0.09232597798109055, 0.10051512718200684], "val_loss": [16633510.285714285, 132801453.71428572, 447909339.4285714, 1061360018.2857143, 2072567222.857143, 3580927634.285714], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [5, 2, 2, 1, 1, 7, 1], [3, 1, 2, 3, 1, 3, 2], [], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 1, 0, 0], [0, 1, 0], [5, 3, 1, 8, 0], [6, 7], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), grad), grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302525542525882, 2.304424776991266, 2.3043605329936536, 2.306851300203159, 2.309113072586916, 2.312690634091989, 2.3167868622573393, 2.317447774052195, 2.324841412413374, 2.3312069724469278, 2.3362288635011046, 2.361405442876114, 2.4788726079953642, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09192973375320435, 0.09153348207473755, 0.08809932321310043, 0.08215559273958206, 0.07977809756994247, 0.0812310129404068, 0.07819310575723648, 0.0796460211277008, 0.08268392831087112, 0.07792893797159195, 0.07594769448041916, 0.08334434032440186, 0.08968432247638702, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700319426400321, 1.970813478742327, 1.971762044089181, 1.9730243682861328, 1.9745674133300781, 1.9764424051557268, 1.9786168507167272, 1.9808144569396973, 1.9843149866376604, 1.9896152360098702, 1.9988231658935547, 2.0234009878976003, 8.047124590192523, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03200000151991844, 0.027666667476296425, 0.02566666714847088, 0.025333333760499954, 0.027666667476296425, 0.033666666597127914, 0.0430000014603138, 0.055666666477918625, 0.06599999964237213, 0.0806666687130928, 0.0963333323597908, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 1, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06075815483927727, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1], [1], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [5, 3, 1, 8, 0], [6, 7], [], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3, 2, 5, 4], [6, 7], [], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [3, 2, 0, 0, 3], [53, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [2.302767894177027, 2.3054105943267404, 2.3060044032739153, 2.3092095102411707, 2.3125833804030163, 2.317317205728116, 2.3228371910777437, 2.325244169886464, 2.3363397373672585, 2.3506166374111817, 2.3862926696726454, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.09074098616838455, 0.08360850811004639, 0.07713644206523895, 0.07475894689559937, 0.0758156105875969, 0.07370228320360184, 0.0754193663597107, 0.07766477018594742, 0.07290978729724884, 0.08149518072605133, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9706641605922155, 1.9721365656171526, 1.9736873762948173, 1.975731372833252, 1.978219781603132, 1.9810080528259277, 1.9845029285975866, 1.9885447365897042, 1.9962549209594727, 2.0120881625584195, 2.1055054664611816, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.023666666820645332, 0.022333333268761635, 0.02033333294093609, 0.023000000044703484, 0.03033333271741867, 0.046666666865348816, 0.06566666811704636, 0.08566666394472122, 0.1003333330154419, 0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [8, 8, 9, 5, 2, 1, 2, 4, 7, 4, 4, 6, 1, 7, 6, 1, 8, 0, 4, 3, 3, 9, 5, 5], [3, 1, 0, 0, 2, 2, 1, 0, 0, 0, 2, 0, 3, 0, 2], [96, 12, 93, 29, 70, 71, 17, 39, 22], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0], [3, 2, 7, 7], [6, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [0, 8, 0], [6, 7], [], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], [3, 7, 0, 2, 2, 2, 0, 2, 9, 3, 3, 8], [1, 2, 2, 0, 3, 1, 3, 1, 1], [41, 48, 13, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 0, 0], [0, 1, 0, 1, 1], [6, 3], [3, 1, 0], [58], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [1, 0, 0], [0, 1, 0], [0, 3], [6, 7], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [2, 3, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020854152472356, 2.303035924935684, 2.3018782666614106, 2.302615428723522, 2.302628732895917, 2.303260270614886], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09377889335155487, 0.08611807972192764, 0.0886276587843895, 0.08981640636920929], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1], [], [3, 1], [], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 1, 0], [0, 1, 0], [0, 3], [6, 7], [], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [3, 7, 0, 2, 2, 2, 0, 5, 3, 5, 6, 6, 1, 8, 8, 0], [1, 2, 0, 0, 3, 1, 0, 0, 3, 3], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 26, 16, 10, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma))), tf.math.multiply(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma)), tf.math.negative(sigma)))))", "other_info": {"loss": [2.3020854152472356, 2.303035924935684, 2.3018782666614106, 2.302615428723522, 2.302628732895917, 2.303260270614886], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09377889335155487, 0.08611807972192764, 0.0886276587843895, 0.08981640636920929], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1], [1], [], [1, 1], [], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [1, 5, 0], [30], [0, 0, 0, 1, 0], [0, 1, 0, 1], [6, 3, 7, 7], [2, 2], [], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 7, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3020854152472356, 2.303035924935684, 2.3018782666614106, 2.302615428723522, 2.302628732895917, 2.303260270614886], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09377889335155487, 0.08611807972192764, 0.0886276587843895, 0.08981640636920929], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]