[{"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8288571238517761, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.037054232397824, 1.2023182534160646, 0.83575909993652, 0.7081403878103268, 0.6460552001752087, 0.5968689502679031, 0.5559860078602923, 0.5218860539447173, 0.5030311863333589, 0.471496475044416, 0.44300932387681513, 0.4371316387330253, 0.4290700792290075, 0.40638370172080895, 0.39573104782127166, 0.3757688726266897, 0.3703871983869941, 0.3532485840201236, 0.35047994786092335, 0.33254171646723046, 0.31951614753004265, 0.3137823958690408, 0.30701967799479324, 0.3086837233529981, 0.3017053828814467, 0.28961349729108554, 0.2778125418695272, 0.26779956406511574, 0.26548259684737524], "accuracy": [0.30563995242118835, 0.585391640663147, 0.6864351034164429, 0.7288337349891663, 0.7458723783493042, 0.7740060687065125, 0.7823272943496704, 0.7994980812072754, 0.8084797263145447, 0.8249900937080383, 0.8363492488861084, 0.8337075710296631, 0.8366134166717529, 0.8491612672805786, 0.8494254350662231, 0.8601241707801819, 0.8584070801734924, 0.8710870146751404, 0.8648791313171387, 0.8794082403182983, 0.8787478804588318, 0.8798044919967651, 0.8838990926742554, 0.8835028409957886, 0.8878615498542786, 0.8932769894599915, 0.8993527889251709, 0.9014661312103271, 0.8996169567108154], "val_loss": [0.9069037437438965, 0.6500961610249111, 0.5641212122780936, 0.5066688571657453, 0.45815125533512663, 0.4296046495437622, 0.4029378465243748, 0.3924795814922878, 0.3654402324131557, 0.3577365279197693, 0.3613901308604649, 0.3362814358302525, 0.3256178413118635, 0.329186064856393, 0.3220771721431187, 0.3118189828736441, 0.3072726385934012, 0.3094675030027117, 0.30687406233378817, 0.297092752797263, 0.29238381556102205, 0.30022392102650236, 0.29887306690216064, 0.2889749152319772, 0.2870340773037502, 0.29752423082079205, 0.28875499963760376, 0.2975037268229893, 0.288176817553384], "val_accuracy": [0.640999972820282, 0.7260000109672546, 0.7483333349227905, 0.7606666684150696, 0.7933333516120911, 0.8149999976158142, 0.8196666836738586, 0.8266666531562805, 0.8500000238418579, 0.8519999980926514, 0.8443333506584167, 0.8616666793823242, 0.8633333444595337, 0.859333336353302, 0.8646666407585144, 0.875, 0.8713333606719971, 0.8679999709129333, 0.8776666522026062, 0.8759999871253967, 0.8793333172798157, 0.8726666569709778, 0.8786666393280029, 0.8806666731834412, 0.8803333044052124, 0.8743333220481873, 0.878000020980835, 0.8759999871253967, 0.878000020980835]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 6, 9, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [19, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8220000267028809, "mapping_values": [1, 5, 5, 3, 2, 1, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0355035678160394, 1.2758936264322513, 0.9153470567283283, 0.7490199812651153, 0.666973297472533, 0.6145629049796061, 0.573870235942122, 0.5379593836444008, 0.5146052756124971, 0.4915577839780021, 0.46406143441207814, 0.4490144574497323, 0.44193708760044625, 0.42078827441785754, 0.40766822792645757, 0.3865951902799288, 0.3926597574383528, 0.3695145075024552, 0.3552363258366414, 0.342532316431661, 0.3327852228196101, 0.32256325912072503, 0.3238857052998851, 0.3094646533159705, 0.3057953723393978], "accuracy": [0.30524370074272156, 0.5663716793060303, 0.6679434776306152, 0.7166820764541626, 0.7456082701683044, 0.7637035846710205, 0.7876105904579163, 0.7927618622779846, 0.8049134612083435, 0.8156121969223022, 0.8236692547798157, 0.8271034359931946, 0.8358209133148193, 0.8436138033866882, 0.8457271456718445, 0.8543124794960022, 0.852331280708313, 0.8615770936012268, 0.8642187118530273, 0.8739928603172302, 0.8767666220664978, 0.8765024542808533, 0.8779553771018982, 0.885219931602478, 0.8864086866378784], "val_loss": [0.9017258031027657, 0.7409866537366595, 0.589440141405378, 0.5220906223569598, 0.4737554447991507, 0.44451734849384855, 0.418163537979126, 0.3972199984959194, 0.37195960112980436, 0.3732589142663138, 0.3657943436077663, 0.3422454425266811, 0.3376686487879072, 0.32765925782067434, 0.3277353048324585, 0.3156563299042838, 0.30897527081625803, 0.3070563333375113, 0.3110103947775705, 0.2963033403669085, 0.293393748147147, 0.3119406870433262, 0.29277599709374563, 0.2953936287334987, 0.28748435633523123], "val_accuracy": [0.6393333077430725, 0.6956666707992554, 0.7446666955947876, 0.7540000081062317, 0.7833333611488342, 0.8109999895095825, 0.8133333325386047, 0.8320000171661377, 0.8429999947547913, 0.8489999771118164, 0.8496666550636292, 0.8566666841506958, 0.859333336353302, 0.8606666922569275, 0.8650000095367432, 0.8733333349227905, 0.8703333139419556, 0.8683333396911621, 0.875333309173584, 0.8840000033378601, 0.878333330154419, 0.8740000128746033, 0.8809999823570251, 0.8803333044052124, 0.8816666603088379]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7928571701049805, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2847050142294507, 2.1382193346033636, 1.6780161210621793, 1.3551255945894207, 1.0784880871297882, 0.9486869414169806, 0.8957420755386857, 0.8349572997193342, 0.7923331333819067, 0.7588697148745542, 0.7281736093206082, 0.6981932165726317, 0.6885821483532325, 0.6420427844540444, 0.6232460844219164, 0.6000796538365437, 0.5868927418138562, 0.5844096948347544, 0.5709854588926176, 0.5684131843901077, 0.6285060688079765, 0.7043081007188322, 0.7690635276051749, 0.8652100000934452], "accuracy": [0.1430458277463913, 0.34381189942359924, 0.4451195299625397, 0.5461629629135132, 0.6301677227020264, 0.6384889483451843, 0.6651697158813477, 0.6914542317390442, 0.7053229212760925, 0.7206445932388306, 0.7268524765968323, 0.7372870445251465, 0.7436270117759705, 0.7622507214546204, 0.7687227725982666, 0.7786290049552917, 0.7802139520645142, 0.7779685854911804, 0.7911768555641174, 0.791441023349762, 0.772288978099823, 0.7523444890975952, 0.7366266250610352, 0.7161537408828735], "val_loss": [1.904533794948033, 1.6043627602713448, 0.9011004311697823, 0.7366106680461338, 0.62858133656638, 0.6376804964882987, 0.6045116867337909, 0.5781548193522862, 0.5573448453630719, 0.5165189845221383, 0.5056347846984863, 0.48335742950439453, 0.4668309688568115, 0.4466503007071359, 0.4326020394052778, 0.4264181341443743, 0.4047567163194929, 0.41483873980385916, 0.39557379484176636, 0.4269037587302072, 0.4405299254826137, 0.46078414576394217, 0.4879489115306309, 0.49509261335645405], "val_accuracy": [0.375, 0.4909999966621399, 0.6556666493415833, 0.6800000071525574, 0.7253333330154419, 0.7099999785423279, 0.7390000224113464, 0.7429999709129333, 0.7609999775886536, 0.765666663646698, 0.7756666541099548, 0.7866666913032532, 0.7953333258628845, 0.7943333387374878, 0.8146666884422302, 0.8159999847412109, 0.8213333487510681, 0.8230000138282776, 0.8326666951179504, 0.812666654586792, 0.8169999718666077, 0.8180000185966492, 0.8086666464805603, 0.8166666626930237]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7894285917282104, "mapping_values": [1, 16, 16, 9, 7, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.subtract(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.284704996248073, 2.138219622494349, 1.6780265928369709, 1.3551030312357892, 1.0782917271342496, 0.9483700367705602, 0.8948657927795283, 0.8345665162848191, 0.7928001718939319, 0.7597961797139208, 0.727918189884476, 0.6971434523337836, 0.6875596831991467, 0.6421562159979395, 0.6252015170372709, 0.6011287015049039, 0.5874892128551515, 0.5835696000307149, 0.5732289585990361, 0.5776940217390981, 0.6001559421528347, 0.6159134856965863, 0.618370045280066, 0.6552590175453447, 0.751963926422881, NaN, NaN], "accuracy": [0.1430458277463913, 0.34381189942359924, 0.44525161385536194, 0.5464271306991577, 0.6304318904876709, 0.6392814517021179, 0.6660943031311035, 0.6922467350959778, 0.7049266695976257, 0.7195879220962524, 0.7255316376686096, 0.7367587089538574, 0.7436270117759705, 0.7617223858833313, 0.7687227725982666, 0.7779685854911804, 0.7815347909927368, 0.7763835787773132, 0.7905164361000061, 0.7852331399917603, 0.7820631265640259, 0.7759873270988464, 0.7816668748855591, 0.76542067527771, 0.7423061728477478, 0.17078325152397156, 0.09998679161071777], "val_loss": [1.904533794948033, 1.604361125401088, 0.90111586025783, 0.7365006889615741, 0.6285433939525059, 0.6364794799259731, 0.6040613651275635, 0.5785997935703823, 0.5571764877864293, 0.516210845538548, 0.5048379046576363, 0.4831280878611973, 0.466700622013637, 0.4469829116548811, 0.434303275176457, 0.42694996084485737, 0.40587845018931795, 0.416075553212847, 0.3981684786932809, 0.41220749276024954, 0.4149111935070583, 0.4012273464884077, 0.421590975352696, 0.4512102007865906, 0.8839702606201172, NaN, NaN], "val_accuracy": [0.375, 0.4909999966621399, 0.6556666493415833, 0.6800000071525574, 0.7263333201408386, 0.7106666564941406, 0.7413333058357239, 0.7429999709129333, 0.7580000162124634, 0.765666663646698, 0.7753333449363708, 0.7873333096504211, 0.793666660785675, 0.793666660785675, 0.8140000104904175, 0.8119999766349792, 0.8236666917800903, 0.8253333568572998, 0.8339999914169312, 0.8243333101272583, 0.8193333148956299, 0.8383333086967468, 0.8236666917800903, 0.8166666626930237, 0.7096666693687439, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 6, 2, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7471428513526917, "mapping_values": [1, 12, 12, 6, 6, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), grad))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.negative(beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2969575514961558, 2.2775722041247843, 2.2627170027333667, 2.2411124544404424, 2.22117500764315, 2.188127083312944, 2.1502309824261197, 2.1007217692031426, 2.0276605570872133, 1.9479551156907742, 1.8531170928357001, 1.743089822966425, 1.6366012182375538, 1.5395147153934736, 1.46362960796787, 1.3875246424921248, 1.3164538864477862, 1.2755160734653788, 1.2340067436571969, 1.1994644214668924, 1.1449956638843566, 1.1278695974210156, 1.0973470780859218, 1.0712063634368831, 1.0540240526104867, 1.035498483731148, 1.0203698618442565, 0.9888571557619505, 0.9795157077951423, 0.9746727230227336, 0.952915268842775, 0.9433619897158674, 0.9444033634928727, 0.9240144104879483, 0.9093300469279715, 0.9075371289234341, 0.9001524513974843, 0.8880763363608312, 0.886473172392119, 0.8726862617660712, 0.8637960935391613, 0.8615757315355033, 0.8515077902577604, 0.8493257843508082, 0.8416884533874961, 0.8231216317800215, 0.8338296422002937, 0.8295212081079832, 0.8252101350280949, 0.8146977311804972, 0.8176028196522903, 0.8031871080351323, 0.8020066231658446, 0.7978609729169021, 0.793867116937422, 0.7896003440591275, 0.78746051623632, 0.7766650412549054, 0.7790281794578517, 0.7786750299362789, 0.7796217420428357, 0.7673732831871442, 0.7695648053444734, 0.7555517096718494, 0.7597746560051142, 0.7555559420976121], "accuracy": [0.10540219396352768, 0.14859332144260406, 0.19495442509651184, 0.24105137586593628, 0.2712983787059784, 0.3121120035648346, 0.34420815110206604, 0.3597939610481262, 0.3953242599964142, 0.4239862561225891, 0.4291374981403351, 0.46083739399909973, 0.46968695521354675, 0.4935939908027649, 0.5127459764480591, 0.5309734344482422, 0.5519746541976929, 0.5610883831977844, 0.5653150081634521, 0.5842028856277466, 0.5975432395935059, 0.6090344786643982, 0.6126006841659546, 0.6229031682014465, 0.6312243938446045, 0.6276581883430481, 0.637432336807251, 0.6440364718437195, 0.6556597352027893, 0.657508909702301, 0.6635847091674805, 0.6608110070228577, 0.6647734642028809, 0.6720380187034607, 0.6723021864891052, 0.6767930388450623, 0.6744155287742615, 0.6785101294517517, 0.685510516166687, 0.687491774559021, 0.6947563290596008, 0.6884163022041321, 0.6977941989898682, 0.6913221478462219, 0.7009642124176025, 0.7057191729545593, 0.7024171352386475, 0.6968696117401123, 0.7020208835601807, 0.7033417224884033, 0.7042662501335144, 0.7125874757766724, 0.7140403985977173, 0.713379979133606, 0.717870831489563, 0.7161537408828735, 0.7164179086685181, 0.7236824631690979, 0.7190595865249634, 0.7123233675956726, 0.7144366502761841, 0.7194558382034302, 0.7185312509536743, 0.7226257920265198, 0.7246070504188538, 0.7244749665260315], "val_loss": [1.955099037715367, 1.938955511365618, 1.921598298209054, 1.900719165802002, 1.8756133488246374, 1.8423592022487096, 1.7986033984592982, 1.7410635948181152, 1.6645503725324358, 1.5710758822304862, 1.4649387087140764, 1.350581101008824, 1.2430790151868547, 1.1440293448311942, 1.0631602832249232, 0.9944545882088798, 0.93963623046875, 0.8938513483319964, 0.8551891190665108, 0.8242596558162144, 0.7954798936843872, 0.7724276440484183, 0.751599635396685, 0.734510030065264, 0.7185720035008022, 0.7047861814498901, 0.6926777873720441, 0.68032853943961, 0.672396046774728, 0.6622203247887748, 0.652134827205113, 0.642774088042123, 0.6366908720561436, 0.629757182938712, 0.6248877218791417, 0.6174261740275792, 0.612069845199585, 0.6049516711916242, 0.6009765863418579, 0.5969915900911603, 0.5917910507747105, 0.5886050633021763, 0.5847729103905814, 0.5791807855878558, 0.578606367111206, 0.5703711339405605, 0.5675231558935983, 0.5641637870243618, 0.5621985367366246, 0.5579184804643903, 0.5547767536980766, 0.5525747537612915, 0.5484109606061663, 0.5456834350313459, 0.5444686583110264, 0.5411543675831386, 0.538941775049482, 0.536184549331665, 0.5323550701141357, 0.5314137935638428, 0.5288268838609967, 0.5269831078393119, 0.5255992242268154, 0.5246156283787319, 0.5214091198784965, 0.5183625391551426], "val_accuracy": [0.17100000381469727, 0.2983333468437195, 0.3726666569709778, 0.4013333320617676, 0.42933332920074463, 0.44600000977516174, 0.46933332085609436, 0.5163333415985107, 0.5419999957084656, 0.5706666707992554, 0.5886666774749756, 0.609333336353302, 0.628333330154419, 0.640333354473114, 0.6523333191871643, 0.6690000295639038, 0.6850000023841858, 0.6833333373069763, 0.6863333582878113, 0.6903333067893982, 0.6956666707992554, 0.7016666531562805, 0.7053333520889282, 0.7093333601951599, 0.7096666693687439, 0.715666651725769, 0.715666651725769, 0.7256666421890259, 0.722000002861023, 0.7266666889190674, 0.7350000143051147, 0.7440000176429749, 0.7356666922569275, 0.7390000224113464, 0.7379999756813049, 0.7516666650772095, 0.7483333349227905, 0.7483333349227905, 0.7559999823570251, 0.750333309173584, 0.7566666603088379, 0.7549999952316284, 0.7513333559036255, 0.7570000290870667, 0.7563333511352539, 0.7616666555404663, 0.7593333125114441, 0.7639999985694885, 0.7570000290870667, 0.765333354473114, 0.7676666378974915, 0.7636666893959045, 0.7646666765213013, 0.7676666378974915, 0.7710000276565552, 0.7753333449363708, 0.7716666460037231, 0.7693333625793457, 0.7716666460037231, 0.7693333625793457, 0.7786666750907898, 0.7749999761581421, 0.777999997138977, 0.7716666460037231, 0.7706666588783264, 0.7773333191871643]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7277143001556396, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303484851185672, 2.2997758156430406, 2.299837781327701, 2.2954387753599623, 2.29357530969623, 2.2858617521469164, 2.279766263144285, 2.2724260008802757, 2.2618853222692428, 2.253292105406062, 2.241791725788512, 2.2286444782281767, 2.2112145503876373, 2.19192704929573, 2.170336378532362, 2.140076685984688, 2.0981824607456114, 2.058809075136982, 2.0091848561571983, 1.950677490993309, 1.8685242310648564, 1.788992996150319, 1.724559800011717, 1.6546340587982775, 1.5816775933075353, 1.5477814709647393, 1.5469666637087605, 1.4676848286887076, 1.4400229674950094, 1.4417272646980452, 1.3791391797872534, 1.3355139214931746, 1.3220252581496736, 1.2741817003070497, 1.239691699390414, 1.2197554284523917, 1.1802930858834009, 1.1646273521431654, 1.1224206107529697, 1.1024615035443148, 1.0703955870955737, 1.0308694980242439, 1.0249123936709694, 1.0031820802546259, 0.9784670443252061, 0.969017505094659, 0.9692516992309735, 0.945811081737213, 0.93271856488427, 0.924665436319876, 0.9114951238010569, 0.9028401535972235, 0.8912841848661996, 0.8869861581652723, 0.8869820834308363, 0.8789005187272301, 0.8778676276965274, 0.8580744984505466, 0.8701861908548875], "accuracy": [0.09140139818191528, 0.09153348207473755, 0.09879804402589798, 0.109232597053051, 0.11068551242351532, 0.13498876988887787, 0.15057456493377686, 0.16800950467586517, 0.19680359959602356, 0.21133272349834442, 0.22335226833820343, 0.2542596757411957, 0.2802800238132477, 0.29639413952827454, 0.3121120035648346, 0.3155461549758911, 0.33760401606559753, 0.32862237095832825, 0.3319244384765625, 0.35081231594085693, 0.3695680797100067, 0.39466384053230286, 0.4053625762462616, 0.4163254499435425, 0.44908201694488525, 0.45344075560569763, 0.4644036591053009, 0.48672565817832947, 0.50350022315979, 0.5211992859840393, 0.5337471961975098, 0.5439175963401794, 0.551050066947937, 0.5752212405204773, 0.5856558084487915, 0.5956941246986389, 0.5995244979858398, 0.6118082404136658, 0.609430730342865, 0.6281865239143372, 0.6192048788070679, 0.643772304058075, 0.6404702067375183, 0.6373002529144287, 0.648659348487854, 0.6519614458084106, 0.6482630968093872, 0.652621865272522, 0.6634526252746582, 0.6627922058105469, 0.6692643165588379, 0.6708492636680603, 0.672698438167572, 0.6750759482383728, 0.6769251227378845, 0.6814159154891968, 0.6803592443466187, 0.695813000202179, 0.6845859289169312], "val_loss": [1.9698137555803572, 1.9682292257036482, 1.9656218120029993, 1.9619908332824707, 1.9573488916669572, 1.9516401290893555, 1.9448943819318498, 1.9370735713413783, 1.9280967031206404, 1.9178642545427596, 1.9061173030308314, 1.8923587799072266, 1.8757027217320033, 1.8548922538757324, 1.8281816755022322, 1.7935147285461426, 1.749469484601702, 1.6961795943123954, 1.6317657402583532, 1.5514824390411377, 1.4551506383078439, 1.3453704970223563, 1.2286928721836634, 1.112290552684239, 1.0046701431274414, 0.9481166090284076, 0.9144725799560547, 0.8405014276504517, 0.8351474148886544, 0.7924986396517072, 0.7826404571533203, 0.7754053388323102, 0.753093923841204, 0.7570302486419678, 0.738443102155413, 0.7433515616825649, 0.7319499254226685, 0.6991470370973859, 0.7002284867422921, 0.6750885588782174, 0.6687779596873692, 0.6712031534739903, 0.654560923576355, 0.648493834904262, 0.6430051837648664, 0.6362134218215942, 0.6379501138414655, 0.6413773468562535, 0.6415882791791644, 0.6329446860722133, 0.6247100489480155, 0.6183693408966064, 0.6127672876630511, 0.6080961397715977, 0.603235159601484, 0.5971168960843768, 0.5885097639901298, 0.5804980652672904, 0.5752435752323696], "val_accuracy": [0.0403333343565464, 0.05133333429694176, 0.070333331823349, 0.09966666996479034, 0.14266666769981384, 0.2043333351612091, 0.25699999928474426, 0.30566665530204773, 0.3310000002384186, 0.34966665506362915, 0.35733333230018616, 0.36800000071525574, 0.38100001215934753, 0.39533331990242004, 0.4033333361148834, 0.40933331847190857, 0.41366666555404663, 0.42266666889190674, 0.43299999833106995, 0.4673333466053009, 0.5223333239555359, 0.5726666450500488, 0.6060000061988831, 0.6356666684150696, 0.6579999923706055, 0.6453333497047424, 0.6156666874885559, 0.6756666898727417, 0.6693333387374878, 0.6710000038146973, 0.6656666398048401, 0.6713333129882812, 0.6869999766349792, 0.6793333292007446, 0.6933333277702332, 0.690666675567627, 0.6966666579246521, 0.6993333101272583, 0.6970000267028809, 0.7053333520889282, 0.715666651725769, 0.7256666421890259, 0.7223333120346069, 0.7273333072662354, 0.7273333072662354, 0.7333333492279053, 0.7256666421890259, 0.734333336353302, 0.7300000190734863, 0.7386666536331177, 0.7476666569709778, 0.7416666746139526, 0.7446666955947876, 0.75, 0.7426666617393494, 0.7396666407585144, 0.7446666955947876, 0.7456666827201843, 0.7480000257492065]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 6, 9, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.6499999761581421, "mapping_values": [1, 5, 5, 3, 2, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.28345071650641, 2.1319375597900008, 1.63851614261993, 1.337686611692494, 1.182647138743463, NaN, NaN, NaN, NaN], "accuracy": [0.1430458277463913, 0.3415665030479431, 0.45344075560569763, 0.5461629629135132, 0.6223748326301575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9029440879821777, 1.5716842923845564, 0.8883168016161237, 0.8876768520900181, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.37466666102409363, 0.5239999890327454, 0.6480000019073486, 0.6510000228881836, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 2, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.6171428561210632, "mapping_values": [1, 3, 3, 2, 1, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3033024451326716, 2.2983576836382564, 2.2960761293144967, 2.288335033206892, 2.2823206181413447, 2.268893114910496, 2.2561542614339887, 2.239659035856131, 2.2159320837974925, 2.190580587597445, 2.1535714914329205, 2.1017166821239583, 2.0341238143217013, 1.953619285565735, 1.8687122632420814, 1.7590363293496483, 1.646842918690752, 1.59405898540846, 1.5432616231022982, 1.473921388793127, 1.3431092093350188, 1.3092618018345448, 1.2715515501983192, 1.2331200648827907, 1.2191571354976247, 1.2187900319469132, 1.1813127156875987, 1.1566763837276717, 1.1451029168332902, 1.150966057278587, 1.1088995248130473, 1.0972159118259335, 1.1120313681852012, 1.086708602510376, 1.0438553045737886, 1.0330873629703907, 1.0152818476912873, 1.020713803318151, 1.0343599939437638, 1.0066651787897694, 0.9951446558411694, 0.9866717137664993, 0.9843249961983778, 0.9849938191694906, 0.9686616784341269, 0.9622898981508531, 0.971601556431049, 0.9847335687891021, 0.9810329818328799, 0.9669330961448233, 0.9763917850308084, 0.9758555664441149, 0.9622125870216918, 0.9680489163750813, 0.979339567897909, 0.9731426161467014, 0.9665506665480844, 0.9482577287478454], "accuracy": [0.09219389408826828, 0.09549596905708313, 0.1080438494682312, 0.12732796370983124, 0.13815876841545105, 0.1764628142118454, 0.20142649114131927, 0.22520142793655396, 0.2583542466163635, 0.27077004313468933, 0.287280410528183, 0.31541407108306885, 0.33324527740478516, 0.34962356090545654, 0.36903974413871765, 0.38621053099632263, 0.42028793692588806, 0.4233258366584778, 0.44802534580230713, 0.4826310873031616, 0.5144630670547485, 0.5304450988769531, 0.5411438345909119, 0.5572579503059387, 0.564258337020874, 0.5616167187690735, 0.5826178789138794, 0.5824857950210571, 0.5904107689857483, 0.588297426700592, 0.5992603302001953, 0.6069211363792419, 0.6046757102012634, 0.6096948981285095, 0.6176198720932007, 0.622639000415802, 0.6247523427009583, 0.6296393871307373, 0.6185444593429565, 0.6407343745231628, 0.6382247805595398, 0.6396777033805847, 0.6361114978790283, 0.6388852000236511, 0.6415268778800964, 0.6472064256668091, 0.6490556001663208, 0.6432439684867859, 0.6380926966667175, 0.6551313996315002, 0.6502443552017212, 0.6530181169509888, 0.651168942451477, 0.6584334969520569, 0.6650376319885254, 0.6561880707740784, 0.6696605682373047, 0.6602826714515686], "val_loss": [1.9691484315054757, 1.9657908167157854, 1.9603423391069685, 1.9529868534633092, 1.9437453406197684, 1.9323954582214355, 1.9182918412344796, 1.9002797944205148, 1.876079831804548, 1.8423262323651994, 1.7963683264596122, 1.7343855585370744, 1.6516267572130476, 1.5432297502245222, 1.4071814673287528, 1.2460097244807653, 1.0835671765463692, 0.9809723240988595, 0.8856059823717389, 0.8472171170370919, 0.8297525814601353, 0.8048875161579677, 0.7916032586778913, 0.7851732969284058, 0.791509747505188, 0.7866949183600289, 0.7850397314344134, 0.7694637945720127, 0.7534136090959821, 0.7366677182061332, 0.7173573970794678, 0.7113954680306571, 0.7078434228897095, 0.694567152432033, 0.6834874153137207, 0.6659336941582816, 0.6553798232759748, 0.6468584367207119, 0.6406123808452061, 0.6330320324216571, 0.6301566021783012, 0.6336837496076312, 0.6313170194625854, 0.6206038338797433, 0.6107816355569022, 0.6082499197551182, 0.6079435689108712, 0.6003564936774117, 0.5940630606242588, 0.5931853226252964, 0.5914818218776158, 0.5827200242451259, 0.5838794537952968, 0.583649720464434, 0.5833268335887364, 0.5762053387505668, 0.5801555940083095, 0.585293173789978], "val_accuracy": [0.04533333331346512, 0.0689999982714653, 0.11166666448116302, 0.18199999630451202, 0.24799999594688416, 0.3089999854564667, 0.3423333466053009, 0.3619999885559082, 0.3843333423137665, 0.4000000059604645, 0.4113333225250244, 0.42133334279060364, 0.4519999921321869, 0.49666666984558105, 0.5543333292007446, 0.6053333282470703, 0.6493333578109741, 0.6330000162124634, 0.6653333306312561, 0.6676666736602783, 0.6700000166893005, 0.6779999732971191, 0.6813333630561829, 0.6833333373069763, 0.6683333516120911, 0.6830000281333923, 0.6866666674613953, 0.7006666660308838, 0.7089999914169312, 0.7133333086967468, 0.7210000157356262, 0.7149999737739563, 0.7229999899864197, 0.7110000252723694, 0.7053333520889282, 0.7243333458900452, 0.7223333120346069, 0.7300000190734863, 0.7319999933242798, 0.7350000143051147, 0.7366666793823242, 0.7243333458900452, 0.7239999771118164, 0.7356666922569275, 0.7396666407585144, 0.7403333187103271, 0.7386666536331177, 0.7483333349227905, 0.750333309173584, 0.7440000176429749, 0.7450000047683716, 0.7576666474342346, 0.7596666812896729, 0.7553333044052124, 0.7570000290870667, 0.7563333511352539, 0.7570000290870667, 0.7519999742507935]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [39], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [925738.6923038695, 47443653409.5216, 31930066371577.1, 3051773136968716.5, 1.0293959077972034e+17, 1.8694437514371095e+18], "accuracy": [0.09668471664190292, 0.09919429570436478, 0.09628847241401672, 0.1010434553027153, 0.09932637959718704, 0.09919429570436478], "val_loss": [34829702.85714286, 504868878043.4286, 165785138439314.28, 1.070303702679552e+16, 2.778670372918582e+17, 4.030248091131202e+18], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.008508959246066, 2.7629547454520083, 2.5364625453319154, 2.380900821193271, 2.388694051675289, 2.3994577742208656, 2.3870942730866465], "accuracy": [0.18901069462299347, 0.12059172987937927, 0.1022322028875351, 0.0952318087220192, 0.09866596013307571, 0.09681680053472519, 0.09615638852119446], "val_loss": [1.9688099452427454, 2.0264500890459334, 2.0279408863612582, 2.0430004937308177, 2.026951789855957, 2.044175692967006, 2.086176872253418], "val_accuracy": [0.10066666454076767, 0.10733333230018616, 0.10333333164453506, 0.0963333323597908, 0.09666666388511658, 0.10300000011920929, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 5, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [45899132094.72899, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2044644057750702, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.954952069105874e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, beta)", "other_info": {"loss": [2.304755740996444, 2.3050304785884523, 2.3125799331115835, 2.3177959337651437, 2.331957417236044, 2.356878903217288, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.08215559273958206, 0.07766477018594742, 0.07700435817241669, 0.07211729139089584, 0.0746268630027771, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9723429679870605, 1.9751405715942383, 1.9795372145516532, 1.984447751726423, 1.9961144583565849, 2.0498386110578264, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.026333333924412727, 0.019999999552965164, 0.01666666753590107, 0.03099999949336052, 0.05700000002980232, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [516.8622481207948, 1.5422016664233934e+29, 4.228247037700391, 8.567316623018119, 14.462343097788043, 21.040438762257175], "accuracy": [0.0474177785217762, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [21045947830.857143, 2.6633321217128207, 5.536412920270648, 10.225769587925502, 15.707723345075335, 21.564186641148158], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 1, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [63, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 2, 4, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.3525169323046155e+25, 3073.591698489972, 796461.0870282162, 201586815.83093384, 51714436712.88866, 13300215159387.498], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [94.52354649135044, 25750.327008928572, 6595215.0, 1688379794.2857144, 432225227337.1429, 110649658198308.58], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [57, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [7, 4, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3031321567645744, 2.302650512626788, 2.3026450363998605, 2.30269285477132, 2.3026366757836403, 2.302696404408596, 2.3026740822447542, 2.3026747362504403, 2.3026598169031773, 2.302657413728296], "accuracy": [0.0940430611371994, 0.09972262382507324, 0.09470347315073013, 0.09166556596755981, 0.09800554811954498, 0.09126931428909302, 0.09774138033390045, 0.09708096832036972, 0.09826971590518951, 0.09998679161071777], "val_loss": [1.9736459595816476, 1.9736547470092773, 1.9736383301871163, 1.9736739567347936, 1.9736592429024833, 1.9736856733049666, 1.9736542020525252, 1.9736603328159876, 1.9736717769077845, 1.973695959363665], "val_accuracy": [0.10000000149011612, 0.0963333323597908, 0.10066666454076767, 0.0963333323597908, 0.10133333504199982, 0.0963333323597908, 0.10133333504199982, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 6, 9, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [57, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 20, 20, 12, 8, 2, 8, 8, 4, 4, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.multiply(alpha, alpha)))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(grad, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303643368742548, 2.301007413845241, 2.303188601095663, 2.3020616232081332, 2.3044194401751232, 2.302199208583688], "accuracy": [0.09100515395402908, 0.08902391046285629, 0.09074098616838455, 0.09338264167308807, 0.08400475233793259, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 5, 6, 6, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [4, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303643368742548, 2.301007413845241, 2.303188601095663, 2.3020616232081332, 2.3044194401751232, 2.302199208583688], "accuracy": [0.09100515395402908, 0.08902391046285629, 0.09074098616838455, 0.09338264167308807, 0.08400475233793259, 0.09298639744520187], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 5, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.03685714304447174, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.303670046147165, 2.301236870203508, 2.3039896388363137, 2.3036843445858133, 2.307542092197717, 2.3065649216689326], "accuracy": [0.09100515395402908, 0.08796724677085876, 0.08955223858356476, 0.09034473448991776, 0.08017434924840927, 0.08492933213710785], "val_loss": [1.970463820866176, 1.9707651819501604, 1.9713081632341658, 1.972102233341762, 1.9732121740068709, 1.974517754146031], "val_accuracy": [0.035999998450279236, 0.033666666597127914, 0.028999999165534973, 0.024666666984558105, 0.023000000044703484, 0.019999999552965164]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 9, 1, 6, 3, 8, 6, 0, 0, 3, 4, 1, 4, 1, 2, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 1, 2, 0, 2, 2, 2, 2, 1, 1, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [31, 55, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [57, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [6, 5], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.03257142752408981, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3041401504919183, 2.302715453520868, 2.3068510980622454, 2.3076414941654955, 2.31293372423925, 2.3129036550933755], "accuracy": [0.08942015469074249, 0.08440100401639938, 0.08598599582910538, 0.08268392831087112, 0.07409853488206863, 0.07753269374370575], "val_loss": [1.9712971959795271, 1.9724013464791434, 1.9739441871643066, 1.9755994251796178, 1.9778032984052385, 1.9798298563276018], "val_accuracy": [0.029999999329447746, 0.02566666714847088, 0.020666666328907013, 0.019999999552965164, 0.01733333244919777, 0.015666667371988297]}}]