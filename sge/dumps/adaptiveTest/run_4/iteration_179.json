[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.776285707950592, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2565008175292776, 2.065170554893679, 1.6259441070426897, 1.2781673690126778, 1.0926038009489627, 0.9971750576372365, 0.9281208308428632, 0.891038270642839, 0.8431600812419594, 0.8343379533664032, 0.8028696178287767, 0.7764911963923606, 0.7741487625252695, 0.7560646877926827, 0.7287346883504114, 0.7242469647541305, 0.7294223025695066, 0.7080608337090205, 0.6968049085403178, 0.6852794067026082, 0.6636691486846502, 0.6643906055723655, 0.6737182213566983, 0.6573723634204781, 0.6483700579230843, 0.643612735913241, 0.6250553424127538], "accuracy": [0.19719983637332916, 0.3803988993167877, 0.4934619069099426, 0.5669000148773193, 0.6176198720932007, 0.6490556001663208, 0.672170102596283, 0.6823405027389526, 0.6963412761688232, 0.6948884129524231, 0.7087571024894714, 0.7172104120254517, 0.7143045663833618, 0.7210407853126526, 0.7318716049194336, 0.7362303733825684, 0.7292299270629883, 0.743891179561615, 0.7384757399559021, 0.7449478507041931, 0.759080708026886, 0.7506273984909058, 0.7460044622421265, 0.7549861073493958, 0.7560427784919739, 0.759080708026886, 0.7685906887054443], "val_loss": [1.8525043215070451, 1.521336487361363, 1.0495751585279192, 0.8329324381692069, 0.7336947577340263, 0.6782457828521729, 0.6434463773454938, 0.6172962699617658, 0.5839838300432477, 0.569201009614127, 0.5590650013514927, 0.546881011554173, 0.5305764164243426, 0.5197588716234479, 0.5424808434077671, 0.5036950962884086, 0.5153746264321464, 0.5001860857009888, 0.48072002615247456, 0.47596297945295063, 0.46813849040440153, 0.47196134499141146, 0.46902079241616385, 0.47290572098323275, 0.4744873217173985, 0.45108004978724886, 0.4555111953190395], "val_accuracy": [0.4503333270549774, 0.5680000185966492, 0.6303333044052124, 0.6740000247955322, 0.7020000219345093, 0.718666672706604, 0.718666672706604, 0.7433333396911621, 0.7546666860580444, 0.7513333559036255, 0.753333330154419, 0.7493333220481873, 0.7673333287239075, 0.7773333191871643, 0.7433333396911621, 0.7856666445732117, 0.7643333077430725, 0.7839999794960022, 0.7973333597183228, 0.7903333306312561, 0.7933333516120911, 0.8056666851043701, 0.8056666851043701, 0.7850000262260437, 0.7900000214576721, 0.8023333549499512, 0.7926666736602783]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7599999904632568, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.27194036012155, 2.179755533250127, 1.976573724929982, 1.6581670864147044, 1.3652748912946817, 1.1992726806069505, 1.084440293943153, 1.0200997205883395, 0.9536592935164843, 0.9261158219795846, 0.8917723883097403, 0.8630361049056541, 0.8443183237456721, 0.8268232504532023, 0.7955326650593306, 0.7856579749985079, 0.7888240549211977, 0.7702863900700202, 0.753514918448383, 0.7455353159174518, 0.7226907112705174, 0.7221316439821074, 0.7240727357955073, 0.7116161045412802, 0.7003320732750928, 0.6909891537561267, 0.6776417598685316], "accuracy": [0.16457535326480865, 0.32162198424339294, 0.4220050275325775, 0.4835556745529175, 0.5404834151268005, 0.5864483118057251, 0.6217144131660461, 0.641791045665741, 0.6630563735961914, 0.6660943031311035, 0.6803592443466187, 0.6893408894538879, 0.6954167485237122, 0.7012283802032471, 0.7127195596694946, 0.7169462442398071, 0.7123233675956726, 0.7253995537757874, 0.7244749665260315, 0.7263241410255432, 0.7375511527061462, 0.7339849472045898, 0.7326641082763672, 0.7384757399559021, 0.739400327205658, 0.7411174178123474, 0.7493065595626831], "val_loss": [1.899219581059047, 1.7651147842407227, 1.4832052503313338, 1.1491867474147253, 0.9283044678824288, 0.8136621883937291, 0.7398149796894619, 0.6977819204330444, 0.6557044131415231, 0.6346551009586879, 0.6188444410051618, 0.5996686731066022, 0.5813674586159843, 0.5675389426095145, 0.5735721417835781, 0.5419822420392718, 0.5435730048588344, 0.5356665509087699, 0.5206153903688703, 0.512872576713562, 0.5054330144609723, 0.5050045762743268, 0.5014408826828003, 0.5022205795560565, 0.49788383075169157, 0.48640239238739014, 0.4823479652404785], "val_accuracy": [0.4099999964237213, 0.5093333125114441, 0.5709999799728394, 0.6213333606719971, 0.6726666688919067, 0.6803333163261414, 0.7020000219345093, 0.7166666388511658, 0.7329999804496765, 0.7333333492279053, 0.7303333282470703, 0.7383333444595337, 0.7459999918937683, 0.7603333592414856, 0.7406666874885559, 0.7736666798591614, 0.7563333511352539, 0.7643333077430725, 0.7766666412353516, 0.7749999761581421, 0.7820000052452087, 0.7913333177566528, 0.7820000052452087, 0.7760000228881836, 0.7850000262260437, 0.7820000052452087, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 9, 0, 9], [2, 1, 1, 0, 0, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0, 1], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.4334285855293274, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3033764153864595, 2.300941518615533, 2.299741807788229, 2.29928779945303, 2.2988392050555038, 2.2978579276871796, 2.296595223276544, 2.296723677009529, 2.2948860323518856, 2.293995096793406, 2.292452687458859, 2.2912936956339887, 2.2922218006520994, 2.290581901579517, 2.289559451769435, 2.288259395597602, 2.287360614553151, 2.2877214922959763, 2.28657875717938, 2.284735933034774, 2.286347023673329, 2.2847009324252787, 2.2851735363074615, 2.2823719832843965, 2.281107282909373, 2.281008756392195, 2.280348905498609, 2.279728640528749, 2.2779378193150013, 2.2780116044645218, 2.276204012356981, 2.2755562200396366, 2.2743777768675835, 2.2734423793459677, 2.2718162133535924, 2.2725418727191022, 2.2714280638129813, 2.270943294222077, 2.2697725938437494, 2.2682960296996657, 2.2693926320336106, 2.265543568104391, 2.266662448861139, 2.2656217036135775, 2.2622818567056573, 2.262721510201775, 2.262200142241047, 2.2607467736015074, 2.2594294778549, 2.2592619683496578, 2.258559316739178, 2.2559844271350356, 2.25718088418328, 2.2548277236372645, 2.2533218482733877, 2.255344744576376, 2.2506144349097323, 2.2513494371596328, 2.2514697951789326, 2.249438852540191, 2.2494182358674872, 2.247424747934116, 2.2476580791060226, 2.2456517622313714, 2.244294331168549, 2.24361014766086, 2.2414518503575294, 2.241032979397364, 2.2387393844157573, 2.238337969373734, 2.2380723891209744, 2.235368370112332, 2.2355060956859476, 2.2341817953583116, 2.2317917610534255, 2.231717023331775, 2.231594917339939, 2.232104658088538, 2.2275148125183564, 2.227651349431598, 2.227304717568894, 2.2254152069978583, 2.2240789991249543, 2.2221324298328584, 2.2219328415817383, 2.2197439483820944, 2.2187268215321025, 2.217068414741015, 2.215670661935087, 2.213893476714705, 2.212571566241245, 2.2128636455649255, 2.209447874258916, 2.209549921441623, 2.2073792485418635, 2.206228667277985, 2.20580362275355, 2.2035208422950925, 2.2027887962970123, 2.202688043206643], "accuracy": [0.08875974267721176, 0.0948355570435524, 0.09457138925790787, 0.1010434553027153, 0.10289261490106583, 0.1026284471154213, 0.10394927859306335, 0.10434553027153015, 0.10910051316022873, 0.10910051316022873, 0.11610091477632523, 0.11715757846832275, 0.11319508403539658, 0.12442214041948318, 0.1208558976650238, 0.1258750557899475, 0.12851670384407043, 0.12693171203136444, 0.13115836679935455, 0.13881917297840118, 0.1352529376745224, 0.13551710546016693, 0.13776251673698425, 0.14397041499614716, 0.15057456493377686, 0.1468762308359146, 0.14938580989837646, 0.14832915365695953, 0.1554616242647171, 0.15982036292552948, 0.15915995836257935, 0.1566503793001175, 0.16021661460399628, 0.16378284990787506, 0.1702549159526825, 0.16629242897033691, 0.17633073031902313, 0.1752740740776062, 0.18201030790805817, 0.18597279489040375, 0.17778365314006805, 0.1834632158279419, 0.18161405622959137, 0.18835029006004333, 0.19944524765014648, 0.20340773463249207, 0.20182274281978607, 0.20023775100708008, 0.19931316375732422, 0.2040681540966034, 0.21054022014141083, 0.21172896027565002, 0.20803064107894897, 0.21371020376682281, 0.21278563141822815, 0.2102760523557663, 0.22744683921337128, 0.22520142793655396, 0.22335226833820343, 0.22440892457962036, 0.22612600028514862, 0.23616431653499603, 0.23352265357971191, 0.23378682136535645, 0.2429005354642868, 0.23959846794605255, 0.24237221479415894, 0.24818386137485504, 0.24224013090133667, 0.24976885318756104, 0.2533350884914398, 0.25518426299095154, 0.2542596757411957, 0.25822216272354126, 0.26337340474128723, 0.26363757252693176, 0.2627129852771759, 0.26020342111587524, 0.2693171203136444, 0.2673358917236328, 0.26984545588493347, 0.2735437750816345, 0.26865673065185547, 0.27460044622421265, 0.2793554365634918, 0.2785629332065582, 0.282129168510437, 0.2891295850276947, 0.29058247804641724, 0.28780874609947205, 0.29626205563545227, 0.2946770489215851, 0.29520538449287415, 0.2985074520111084, 0.30141329765319824, 0.2999603748321533, 0.3008849620819092, 0.30643242597579956, 0.29863953590393066, 0.3066965937614441], "val_loss": [1.9695617130824499, 1.9687369210379464, 1.9679130145481654, 1.9671011652265276, 1.9662927900041853, 1.9654793739318848, 1.9646673202514648, 1.9638561521257674, 1.9630427360534668, 1.9622369493756975, 1.9614262580871582, 1.960625103541783, 1.9598218372889928, 1.9590131895882743, 1.9582071985517229, 1.957399504525321, 1.9565879958016532, 1.9557867731366838, 1.9549717903137207, 1.954155649457659, 1.953355039869036, 1.9525493213108607, 1.951737335750035, 1.9509220804486955, 1.9501142501831055, 1.9493077823093958, 1.9484893935067313, 1.9476773398263114, 1.946861403329032, 1.9460383142743791, 1.9452075277056013, 1.9443742888314384, 1.943558829171317, 1.942730154309954, 1.9419007982526506, 1.9410713059561593, 1.9402279172624861, 1.9393836430140905, 1.9385419573102678, 1.9376957075936454, 1.936857087271554, 1.9360087939671107, 1.9351485797337122, 1.9342939513070243, 1.9334283556256975, 1.93255581174578, 1.9316797937665666, 1.9308032308306013, 1.9299102510724748, 1.9290195873805456, 1.92813321522304, 1.927229404449463, 1.9263225282941545, 1.925403390611921, 1.9244743074689592, 1.9235580989292689, 1.9226162093026298, 1.921682698386056, 1.9207507542201452, 1.9198073659624373, 1.9188494682312012, 1.9178880964006697, 1.9169200488499232, 1.9159480503627233, 1.9149678094046456, 1.913980279650007, 1.912971360342843, 1.9119554247174944, 1.9109240940638952, 1.9098934446062361, 1.9088610240391322, 1.907818385532924, 1.9067674364362444, 1.905693667275565, 1.9046117918831962, 1.9035256930759974, 1.9024247441973006, 1.9013314928327287, 1.9002127647399902, 1.899096897670201, 1.8979757172720773, 1.8968358721051897, 1.8956904411315918, 1.8945286614554269, 1.8933562551225935, 1.8921788079398019, 1.8909789494105749, 1.889770439692906, 1.8885528019496374, 1.8873160226004464, 1.8860645294189453, 1.88481719153268, 1.8835360663277763, 1.8822439057486398, 1.880957875932966, 1.879645824432373, 1.8783262116568429, 1.876992634364537, 1.8756427764892578, 1.8742968014308385], "val_accuracy": [0.04233333468437195, 0.04699999839067459, 0.05400000140070915, 0.061000000685453415, 0.06733333319425583, 0.07266666740179062, 0.08166666328907013, 0.08566666394472122, 0.09333333373069763, 0.09799999743700027, 0.10633333027362823, 0.1133333370089531, 0.12033333629369736, 0.1276666671037674, 0.1353333294391632, 0.14399999380111694, 0.15433333814144135, 0.16599999368190765, 0.17733334004878998, 0.1836666613817215, 0.19033333659172058, 0.19566667079925537, 0.20266667008399963, 0.21133333444595337, 0.21799999475479126, 0.22366666793823242, 0.23333333432674408, 0.2423333376646042, 0.2473333328962326, 0.25333333015441895, 0.2603333294391632, 0.2653333246707916, 0.27133333683013916, 0.2796666622161865, 0.2866666615009308, 0.2903333306312561, 0.2966666519641876, 0.30133333802223206, 0.3050000071525574, 0.3096666634082794, 0.3136666715145111, 0.3166666626930237, 0.3230000138282776, 0.32633334398269653, 0.3306666612625122, 0.3343333303928375, 0.33933332562446594, 0.3449999988079071, 0.3476666808128357, 0.35100001096725464, 0.3556666672229767, 0.35866665840148926, 0.3596666753292084, 0.36266666650772095, 0.3659999966621399, 0.36800000071525574, 0.36933332681655884, 0.3720000088214874, 0.375, 0.3763333261013031, 0.37833333015441895, 0.3816666603088379, 0.382999986410141, 0.3853333294391632, 0.3869999945163727, 0.3889999985694885, 0.3893333375453949, 0.39100000262260437, 0.39266666769981384, 0.3933333456516266, 0.3943333327770233, 0.39533331990242004, 0.39533331990242004, 0.3970000147819519, 0.39766666293144226, 0.4009999930858612, 0.4023333191871643, 0.4033333361148834, 0.40566667914390564, 0.4073333442211151, 0.40966665744781494, 0.41200000047683716, 0.41466665267944336, 0.4153333306312561, 0.41733333468437195, 0.4189999997615814, 0.4203333258628845, 0.42233332991600037, 0.42500001192092896, 0.4269999861717224, 0.42800000309944153, 0.429666668176651, 0.43066665530204773, 0.4313333332538605, 0.4323333203792572, 0.4333333373069763, 0.4333333373069763, 0.4350000023841858, 0.43666666746139526, 0.43799999356269836]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [7, 63, 56, 45]], "fitness": -0.3199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.303576034624752, 2.3016300434134718, 2.3009240358985252, 2.3009418578998777, 2.300961954970606, 2.30047779047982, 2.29969221319678, 2.300300757363173, 2.2989655297115226, 2.2985239467285785, 2.2974839565414147, 2.296763443691761, 2.298154945843381, 2.2970241352457177, 2.2964628191829406, 2.295646653561434, 2.2952141216670077, 2.2959691258847297, 2.295469598527031, 2.2940861046385095, 2.296006973346211, 2.29486677590268, 2.295925347528847, 2.2935985623255, 2.292760970806323, 2.293026214734895, 2.2930190847565894, 2.292719080243144, 2.291471497352176, 2.2921106024598403, 2.2909627181506504, 2.2906845396283972, 2.2897282670186954, 2.289464022804324, 2.288323210876348, 2.289471645585739, 2.289053407028414, 2.2890267193892124, 2.2883112758709028, 2.2872683887925085, 2.2888128595298007, 2.285513276264038, 2.2873423666671253, 2.286609362963877, 2.2838463964022666, 2.2849549913702387, 2.2850135578502675, 2.283969551801146, 2.283323080028604, 2.283612550666949, 2.2833440910634617, 2.2816189511293716, 2.283388229015402, 2.281803491329394, 2.2807815976193897, 2.283012133421852, 2.279281448489718, 2.2804528073769488, 2.2810806492772855, 2.2796226123761443, 2.2804481492554585, 2.278959678510838, 2.279975270960451, 2.278367060207971, 2.277719044020903, 2.2775141926111564, 2.2764994035291792, 2.2765877177891336, 2.275351091162435, 2.275213996322636, 2.27582889440242, 2.2737005889344886, 2.274482957344675, 2.2742610379232784, 2.272577461234614, 2.2731177059257224, 2.273739065051378, 2.2746997422482975, 2.271538713809411, 2.2721281789785457, 2.27219865690873, 2.2714436635869037, 2.27083218855046, 2.269946311742339, 2.270315247189178, 2.268917901058396, 2.2692208996443872, 2.2682375791696052, 2.2677845374830268, 2.266993281769164, 2.2668873745421094, 2.26738733691688, 2.2656069502240364, 2.2666080171846836, 2.2647917319786406, 2.265184397616202, 2.2653153408094875, 2.264106639923279, 2.2643870879724877, 2.2651331118305427], "accuracy": [0.08849557489156723, 0.09325055778026581, 0.09060890227556229, 0.09787346422672272, 0.09853387624025345, 0.0956280529499054, 0.0952318087220192, 0.09668471664190292, 0.09945846349000931, 0.09800554811954498, 0.10249637067317963, 0.10315678268671036, 0.09747721254825592, 0.10540219396352768, 0.10394927859306335, 0.10527011007070541, 0.10962884873151779, 0.10527011007070541, 0.10672302544116974, 0.11134592443704605, 0.10949676483869553, 0.10672302544116974, 0.10645885765552521, 0.11319508403539658, 0.11702549457550049, 0.11438383162021637, 0.11517632752656937, 0.11491216719150543, 0.11900673806667328, 0.1220446452498436, 0.11861048638820648, 0.11610091477632523, 0.11927089840173721, 0.12376172095537186, 0.12270505726337433, 0.1212521493434906, 0.1290450394153595, 0.1290450394153595, 0.13010171055793762, 0.13538502156734467, 0.12679962813854218, 0.13247919082641602, 0.12442214041948318, 0.12693171203136444, 0.13934750854969025, 0.14251750707626343, 0.14040417969226837, 0.13512085378170013, 0.13419628143310547, 0.13630960881710052, 0.14132875204086304, 0.1442345827817917, 0.13895125687122345, 0.13881917297840118, 0.14132875204086304, 0.1340641975402832, 0.15031039714813232, 0.14872540533542633, 0.15070664882659912, 0.146479994058609, 0.1526878923177719, 0.15717871487140656, 0.151234969496727, 0.1546691358089447, 0.15651829540729523, 0.1542728841304779, 0.15612204372882843, 0.1578391194343567, 0.1608770340681076, 0.16470743715763092, 0.1624620258808136, 0.16602826118469238, 0.16034869849681854, 0.16272619366645813, 0.16417910158634186, 0.16853784024715424, 0.1710474193096161, 0.16721701622009277, 0.17197199165821075, 0.17302866280078888, 0.1702549159526825, 0.17144367098808289, 0.17012283205986023, 0.17712323367595673, 0.18016114830970764, 0.17421740293502808, 0.17514199018478394, 0.186104878783226, 0.18359529972076416, 0.17870822548866272, 0.18716153502464294, 0.18676528334617615, 0.18980319797992706, 0.18451987206935883, 0.19284109771251678, 0.18650111556053162, 0.18742570281028748, 0.19918107986450195, 0.19653943181037903, 0.19152027368545532], "val_loss": [1.970017910003662, 1.9696495873587472, 1.969280515398298, 1.968916961124965, 1.9685537474496024, 1.9681876046316964, 1.967822824205671, 1.9674572263445174, 1.9670905385698592, 1.9667274611336845, 1.966362135750907, 1.9660003525870187, 1.9656391824994768, 1.9652751513889857, 1.9649133001055037, 1.9645498139517648, 1.9641851016453333, 1.9638265201023646, 1.9634616715567452, 1.9630977085658483, 1.9627389907836914, 1.9623800005231584, 1.9620180130004883, 1.9616554805210658, 1.961296898978097, 1.9609407697405135, 1.9605793952941895, 1.9602219036647253, 1.9598626409258162, 1.9595016751970564, 1.9591374397277832, 1.9587757246834892, 1.9584220477512904, 1.9580653735569544, 1.9577078138078963, 1.9573508671351842, 1.9569899695260184, 1.9566295487540108, 1.9562723977225167, 1.9559147017342704, 1.955559321812221, 1.9552036012922014, 1.9548426355634416, 1.9544858251299178, 1.9541286059788294, 1.9537672315325056, 1.9534075600760323, 1.9530514989580428, 1.9526891708374023, 1.9523305211748396, 1.9519730976649694, 1.951612949371338, 1.9512513024466378, 1.9508857045854842, 1.9505228315080916, 1.9501659529549735, 1.949803147997175, 1.9494423185076033, 1.9490840094430106, 1.9487247467041016, 1.9483626229422433, 1.9479996136256628, 1.9476352419172014, 1.9472723007202148, 1.9469129017421178, 1.9465507779802596, 1.9461862019130163, 1.9458212852478027, 1.9454501696995325, 1.9450834138052804, 1.944718292781285, 1.9443517412458147, 1.9439869608197893, 1.9436155727931432, 1.9432450022016252, 1.9428728648594447, 1.9425013405936105, 1.942133903503418, 1.9417601994105749, 1.9413881301879883, 1.9410158566066198, 1.9406437873840332, 1.9402704920087541, 1.939896583557129, 1.9395243099757604, 1.9391511508396693, 1.9387737001691545, 1.9383974075317383, 1.9380201612200056, 1.9376397814069475, 1.9372584479195731, 1.9368795667375838, 1.9364957809448242, 1.9361114501953125, 1.93572998046875, 1.9353440829685755, 1.9349620682852608, 1.9345763070242745, 1.9341887065342493, 1.933804716382708], "val_accuracy": [0.038333334028720856, 0.041999999433755875, 0.044333335012197495, 0.046666666865348816, 0.04899999871850014, 0.05166666582226753, 0.054999999701976776, 0.058666665107011795, 0.06199999898672104, 0.06400000303983688, 0.06700000166893005, 0.0689999982714653, 0.07199999690055847, 0.07500000298023224, 0.07833333313465118, 0.08266666531562805, 0.08433333039283752, 0.0860000029206276, 0.08933333307504654, 0.09300000220537186, 0.09466666728258133, 0.09700000286102295, 0.10000000149011612, 0.10300000011920929, 0.10700000077486038, 0.10833333432674408, 0.11299999803304672, 0.11633333563804626, 0.11933333426713943, 0.12466666847467422, 0.1276666671037674, 0.12999999523162842, 0.13300000131130219, 0.13600000739097595, 0.14000000059604645, 0.1446666717529297, 0.15000000596046448, 0.15399999916553497, 0.15966667234897614, 0.16333332657814026, 0.16866666078567505, 0.1720000058412552, 0.1770000010728836, 0.1809999942779541, 0.18299999833106995, 0.1850000023841858, 0.18966667354106903, 0.1926666647195816, 0.19566667079925537, 0.1966666728258133, 0.20000000298023224, 0.2029999941587448, 0.20733332633972168, 0.2123333364725113, 0.21533332765102386, 0.21666666865348816, 0.21933333575725555, 0.22200000286102295, 0.22566667199134827, 0.22966666519641876, 0.2329999953508377, 0.2370000034570694, 0.24166665971279144, 0.24400000274181366, 0.24633333086967468, 0.24933333694934845, 0.2526666522026062, 0.25466665625572205, 0.25866666436195374, 0.26100000739097595, 0.26366665959358215, 0.26600000262260437, 0.2666666805744171, 0.2706666588783264, 0.2746666669845581, 0.27933332324028015, 0.28200000524520874, 0.28566667437553406, 0.28700000047683716, 0.2893333435058594, 0.28999999165534973, 0.2926666736602783, 0.2956666648387909, 0.2983333468437195, 0.2996666729450226, 0.3019999861717224, 0.3036666810512543, 0.3063333332538605, 0.3089999854564667, 0.31066668033599854, 0.312333345413208, 0.312666654586792, 0.3149999976158142, 0.3160000145435333, 0.3186666667461395, 0.32066667079925537, 0.3226666748523712, 0.3253333270549774, 0.32600000500679016, 0.32766667008399963]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [47, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1], [1, 2, 6, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 0, 0, 1, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06709814071655273, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [12.365707457923714, 1.127111553198215e+28, 1622.5118410218552, 410346.9198153315, 106585332.77717607, 27359773997.68168], "accuracy": [0.0338132344186306, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [22628.5546875, 52.982517787388396, 13490.65122767857, 3453683.0, 884142994.2857143, 226340606537.14285], "val_accuracy": [0.09666666388511658, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [48, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [4, 2, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.4422115583965223, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.035266146063804626, 0.0804385170340538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.3012353352137973, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [1, 7, 8, 0, 6, 4, 0, 2, 4], [1, 4, 0, 1], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 1, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [3.6618442444706227, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08281600475311279, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2711383625.142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [33, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [34, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.pow(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [56, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.442211927061997, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.035266146063804626, 0.0804385170340538, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.301257746560233, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [47090288258.96369, 6955747299471.368, 117500075298362.1, 822145008386002.5, 3709697416894085.0, 1.2333246061078976e+16], "accuracy": [0.09853387624025345, 0.1006472036242485, 0.09972262382507324, 0.10236428678035736, 0.10276053100824356, 0.10091137140989304], "val_loss": [380512370688.0, 20513101746761.145, 220185170242998.84, 1200350748999680.0, 4498298410593719.0, 1.3265479860448694e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 4, 4, 0, 9, 0, 9, 0, 6, 4, 6, 2, 8, 6, 3], [2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2, 3, 3, 3], [96, 12, 93, 28, 16, 37], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [3, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 2, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [13, 7, 7, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 39, 25, 14, 6, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), grad))), tf.math.sqrt(tf.math.add(alpha, alpha))))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(tf.math.negative(alpha), alpha)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [0, 2, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.0674285739660263, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3031667113981196, 2.300759039503346, 2.3001970233320166, 2.299968385016205, 2.300210869622473, 2.299996706724891, 2.2997424371679305, 2.300282027034586, 2.299296437410741, 2.299055192858205, 2.2984302579892106, 2.298542711508351, 2.29973832541579, 2.2997678148118244], "accuracy": [0.09008057415485382, 0.09391097724437714, 0.09509972482919693, 0.09945846349000931, 0.09866596013307571, 0.1014397069811821, 0.09787346422672272, 0.09840179979801178, 0.1026284471154213, 0.10011887550354004, 0.1022322028875351, 0.10474177449941635, 0.10421344637870789, 0.10276053100824356], "val_loss": [1.9694172314235143, 1.9692016329084123, 1.969069140298026, 1.9689610345023019, 1.9689724785940987, 1.9690829004560197, 1.9691478184291296, 1.9690932546343123, 1.9690564700535365, 1.9690604209899902, 1.9692491122654505, 1.9694781303405762, 1.9697461809430803, 1.9700823511396135], "val_accuracy": [0.047333333641290665, 0.05166666582226753, 0.058666665107011795, 0.06433333456516266, 0.070333331823349, 0.07400000095367432, 0.08033332973718643, 0.08299999684095383, 0.08733333647251129, 0.08699999749660492, 0.0860000029206276, 0.0860000029206276, 0.08699999749660492, 0.08266666531562805]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0, 0, 0], [96, 12, 93, 28, 16, 37], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.30373677629852, 2.302185371457121, 2.3018783157559244, 2.30227895615013, 2.302680785456637, 2.3026052159624424], "accuracy": [0.08770307898521423, 0.09179764986038208, 0.08809932321310043, 0.09496764093637466, 0.09430722147226334, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [2.30373677629852, 2.302185371457121, 2.3018783157559244, 2.30227895615013, 2.302680785456637, 2.3026052159624424], "accuracy": [0.08770307898521423, 0.09179764986038208, 0.08809932321310043, 0.09496764093637466, 0.09430722147226334, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 6, 3, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [60, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 16, 9, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.30373677629852, 2.302185371457121, 2.3018783157559244, 2.30227895615013, 2.302680785456637, 2.3026052159624424], "accuracy": [0.08770307898521423, 0.09179764986038208, 0.08809932321310043, 0.09496764093637466, 0.09430722147226334, 0.09034473448991776], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]