[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 3, 4, 4, 2, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 0, 2, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8362857103347778, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.857634418030551, 1.2064034114219666, 0.7863934118875879, 0.6745904889230825, 0.6094118091314067, 0.5724324919622903, 0.5342506703179762, 0.5011703186519488, 0.4848004684251738, 0.47304374427134727, 0.44279318321666006, 0.42852813683291785, 0.4137584650442506, 0.3884635299164716, 0.3836389918250808, 0.366927936919188, 0.3421395982276998, 0.3421994658304385, 0.33181115228738356, 0.3202837984898244, 0.3195984849108209, 0.3137361190700418, 0.29586024703036023, 0.28637269650428615, 0.2783404330984634, 0.27684862874502425, 0.2666469114512626, 0.2580290872344346], "accuracy": [0.3590014576911926, 0.5860520601272583, 0.698190450668335, 0.7420420050621033, 0.7600052952766418, 0.7848368883132935, 0.7973847389221191, 0.8117818236351013, 0.8193105459213257, 0.8183859586715698, 0.8367455005645752, 0.8388587832450867, 0.8466516733169556, 0.8605204224586487, 0.8621054291725159, 0.8618412613868713, 0.8705587387084961, 0.8714832663536072, 0.8780874609947205, 0.878879964351654, 0.8803328275680542, 0.880729079246521, 0.891559898853302, 0.8920882344245911, 0.8926165699958801, 0.8923524022102356, 0.8988244533538818, 0.897899866104126], "val_loss": [1.2346978868756975, 0.6065835782459804, 0.5250079802104405, 0.4726238421031407, 0.44019077505384174, 0.4132837568010603, 0.39564634220940725, 0.38528360639299664, 0.3729454619543893, 0.3493001971926008, 0.3378541725022452, 0.34175033228737967, 0.3203239696366446, 0.3207559415272304, 0.3194700138909476, 0.32040531294686453, 0.3077147603034973, 0.30734780005046297, 0.3000314576285226, 0.2987109678132193, 0.3035883903503418, 0.3016566293580191, 0.2934678537505014, 0.28957262209483553, 0.2977352482931955, 0.28939564738954815, 0.3016459516116551, 0.29711054052625385], "val_accuracy": [0.5199999809265137, 0.7436666488647461, 0.7563333511352539, 0.7960000038146973, 0.8066666722297668, 0.8033333420753479, 0.8326666951179504, 0.8360000252723694, 0.8363333344459534, 0.8619999885559082, 0.8650000095367432, 0.8629999756813049, 0.871666669845581, 0.8676666617393494, 0.8713333606719971, 0.862333357334137, 0.8769999742507935, 0.875333309173584, 0.8790000081062317, 0.8793333172798157, 0.878000020980835, 0.871999979019165, 0.8846666812896729, 0.8830000162124634, 0.8799999952316284, 0.8836666941642761, 0.8776666522026062, 0.8843333125114441]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8342857360839844, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.857637794199495, 1.2066675239408555, 0.7869940308012336, 0.6743025106760836, 0.6097501834401554, 0.5742345281391096, 0.5372985088278857, 0.5005455185881759, 0.48429357498911757, 0.474319582228112, 0.444998373023712, 0.4259995514564605, 0.41613127683462675, 0.39375924390572536, 0.3870384804702722, 0.3731490864005496, 0.34570332194489417, 0.34566845550686376, 0.3266151110887559, 0.3188873812026824, 0.3296716829702571, 0.31606592930948824, 0.2940892499349121, 0.2863481121410578], "accuracy": [0.3590014576911926, 0.5856558084487915, 0.6966054439544678, 0.7433628439903259, 0.7627789974212646, 0.7858935594558716, 0.7973847389221191, 0.8121780753135681, 0.8216879963874817, 0.819442629814148, 0.8362171649932861, 0.8397833704948425, 0.8469158411026001, 0.8521991968154907, 0.8568220734596252, 0.8556333184242249, 0.8702945709228516, 0.8660678863525391, 0.8808611631393433, 0.8802007436752319, 0.878351628780365, 0.8808611631393433, 0.8927486538887024, 0.891559898853302], "val_loss": [1.234823771885463, 0.6071922097887311, 0.5255331993103027, 0.47143398012433735, 0.4426983765193394, 0.41138789483479093, 0.3949350544384548, 0.3892608199800764, 0.3715951016971043, 0.3508705496788025, 0.3371540307998657, 0.33735425983156475, 0.32333687373570036, 0.3208625146320888, 0.32092205967221943, 0.3168659210205078, 0.3066043428012303, 0.3101022498948233, 0.29424548149108887, 0.3019139511244638, 0.3043935980115618, 0.29915933098111835, 0.2918604867798941, 0.29694513763700214], "val_accuracy": [0.5196666717529297, 0.7443333268165588, 0.7570000290870667, 0.7950000166893005, 0.8046666383743286, 0.8076666593551636, 0.8376666903495789, 0.8309999704360962, 0.8366666436195374, 0.859000027179718, 0.862666666507721, 0.8640000224113464, 0.871666669845581, 0.8679999709129333, 0.8703333139419556, 0.8619999885559082, 0.8726666569709778, 0.8743333220481873, 0.8823333382606506, 0.8736666440963745, 0.8790000081062317, 0.874666690826416, 0.8823333382606506, 0.8769999742507935]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7760000228881836, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2880427343277585, 2.1983156709024825, 1.919123521743591, 1.4685623034541602, 1.3102906137929222, 1.0248400873007981, 0.9146226992964225, 0.831165507855023, 0.8057900736234632, 0.8089826836908467, 0.7580570868764964, 0.7322424026906073, 0.7173767274617362, 0.6930546423683801, 0.66765860098228, 0.6634285002651625, 0.6461844603540781, 0.6216309280947231, 0.6024660261126714, 0.5932868327903646, 0.5751433624268334, 0.5721229809606867, 0.5472864737962263, 0.5412869304871247, 0.52896867378938, 0.5225011663445707, 0.50114245994405, 0.5001625196178906, 0.4838255831609864, 0.49067864354969, 0.478391426594628, 0.45788053912162907, 0.46092563914411877, 0.44698457607834363, 0.4455162081515643, 0.42719988062586123, 0.4263086626873261, 0.41399359017346815, 0.4063990390288154, 0.39734477184593814, 0.39328993721692285, 0.39102096312223344, 0.3911067527818359, 0.38061930627524343, 0.3741089034829992, 0.36677839425828523, 0.3699079929853333, 0.35672717445310176, 0.3536681484757256, 0.35517568073614697, 0.34566797121814086, 0.3381014596658565, 0.3344824961179346, 0.3316542180049626, 0.32963935904703784, 0.32777004044494606, 0.31676690832908205, 0.31249890452158086, 0.30746325411186903, 0.2994333669895572, 0.3056017624081685, 0.2910084987573179, 0.2847727484368314, 0.28328063316852853, 0.28050337570249884, 0.2777278810215979, 0.2696616998194011, 0.26807095790032176, 0.26261986229185413, 0.25908125925766334, 0.2571305543904638], "accuracy": [0.12429005652666092, 0.3069607615470886, 0.4263637661933899, 0.49372607469558716, 0.566239595413208, 0.6353189945220947, 0.6707172393798828, 0.693831741809845, 0.6985867023468018, 0.7108704447746277, 0.7152291536331177, 0.7234182953834534, 0.7367587089538574, 0.7383436560630798, 0.7498348951339722, 0.748778223991394, 0.7577598690986633, 0.7652885913848877, 0.7755910754203796, 0.7771760821342468, 0.7796856164932251, 0.7803460359573364, 0.7926297783851624, 0.7947431206703186, 0.7957997918128967, 0.8039889335632324, 0.8059701323509216, 0.8149517774581909, 0.8191784620285034, 0.8171972036361694, 0.8203672170639038, 0.8314621448516846, 0.8334434032440186, 0.835160493850708, 0.835160493850708, 0.8374059200286865, 0.8430854678153992, 0.8470479249954224, 0.845859169960022, 0.8488970994949341, 0.8545766472816467, 0.8541803956031799, 0.8519350290298462, 0.8577466607093811, 0.8599920868873596, 0.8636903762817383, 0.8601241707801819, 0.8605204224586487, 0.8623695969581604, 0.8685774803161621, 0.867520809173584, 0.8693699836730957, 0.8705587387084961, 0.8732003569602966, 0.8716153502464294, 0.8713511824607849, 0.8800686597824097, 0.8780874609947205, 0.8829745054244995, 0.8849557638168335, 0.8854840993881226, 0.8873332738876343, 0.8903711438179016, 0.8889182209968567, 0.8905032277107239, 0.8932769894599915, 0.8936732411384583, 0.8949940800666809, 0.8997490406036377, 0.8996169567108154, 0.8963148593902588], "val_loss": [1.922948224203927, 1.773784569331578, 1.2882160799843925, 0.8257481030055455, 0.7212737968989781, 0.666127119745527, 0.6397136279514858, 0.5651722124644688, 0.555275389126369, 0.5493807962962559, 0.5314959457942418, 0.5282924345561436, 0.5155848434993199, 0.48799407482147217, 0.48049460138593403, 0.4650074243545532, 0.4567756823131016, 0.4401014106614249, 0.4331665975706918, 0.4223200338227408, 0.4175986477306911, 0.40441168206078665, 0.39417294945035664, 0.38833461488996235, 0.38447244678224834, 0.37576124497822355, 0.37382932220186504, 0.3635533537183489, 0.36264187949044363, 0.3555720363344465, 0.3469272255897522, 0.34324673243931364, 0.3399118185043335, 0.3357882414545332, 0.33218419551849365, 0.32651448249816895, 0.3217563544000898, 0.31913067613329205, 0.316865154675075, 0.3093634247779846, 0.3072695476668222, 0.3093699557440622, 0.3050913725580488, 0.3056485652923584, 0.3038392152105059, 0.3005798118455069, 0.29853562797818867, 0.2957106573241098, 0.2961843524660383, 0.29258752720696585, 0.28979469197137014, 0.2849546756063189, 0.2874134693826948, 0.28551779474530903, 0.2893675906317575, 0.2866754106112889, 0.2889521632875715, 0.2844594291278294, 0.2850460239819118, 0.2868274280003139, 0.2868327668734959, 0.2799969570977347, 0.27821830340794157, 0.2760599000113351, 0.28421487127031597, 0.2816819208008902, 0.27885070868900846, 0.2788417339324951, 0.2867966294288635, 0.28609107221875874, 0.28516721725463867], "val_accuracy": [0.35899999737739563, 0.46666666865348816, 0.5826666951179504, 0.6676666736602783, 0.7039999961853027, 0.715666651725769, 0.7239999771118164, 0.7513333559036255, 0.7556666731834412, 0.765999972820282, 0.7549999952316284, 0.7756666541099548, 0.7683333158493042, 0.7820000052452087, 0.7826666831970215, 0.7940000295639038, 0.7916666865348816, 0.8046666383743286, 0.8166666626930237, 0.8140000104904175, 0.8113333582878113, 0.8233333230018616, 0.8316666483879089, 0.8336666822433472, 0.8309999704360962, 0.8443333506584167, 0.8479999899864197, 0.8543333411216736, 0.8443333506584167, 0.8526666760444641, 0.8616666793823242, 0.8606666922569275, 0.8583333492279053, 0.8600000143051147, 0.8629999756813049, 0.8666666746139526, 0.8693333268165588, 0.871999979019165, 0.8703333139419556, 0.871666669845581, 0.8733333349227905, 0.8683333396911621, 0.875, 0.8726666569709778, 0.8736666440963745, 0.8713333606719971, 0.8740000128746033, 0.8763333559036255, 0.8776666522026062, 0.878333330154419, 0.8796666860580444, 0.8803333044052124, 0.8786666393280029, 0.8799999952316284, 0.8790000081062317, 0.8816666603088379, 0.8790000081062317, 0.8836666941642761, 0.8856666684150696, 0.8823333382606506, 0.8796666860580444, 0.8836666941642761, 0.8836666941642761, 0.8863333463668823, 0.8833333253860474, 0.887333333492279, 0.8866666555404663, 0.8853333592414856, 0.8846666812896729, 0.8866666555404663, 0.8863333463668823]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 9, 2, 4, 2, 7, 4, 8, 9, 0, 8, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 1, 2, 2, 3, 3, 0, 0, 1], [9, 37, 5, 49, 40, 73, 46, 82, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [19, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7580000162124634, "mapping_values": [1, 8, 8, 5, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2967143710956064, 2.2640042525114965, 2.199096747550667, 2.0728306481866885, 1.8254883447737034, 1.5303538752868113, 1.3865165485130908, 1.3373615393596412, 1.1734216703384182, 0.9769636865273726, 0.9077905660386666, 0.91209812257835, 0.8779013501796362, 0.8112596808218638, 0.8044731759392054, 0.8121039159482796, 0.7992844185289406, 0.7643190891735463, 0.731633279852942, 0.7310955532081155, 0.7240181642122839, 0.7202017720916157, 0.7041701781530862, 0.6787042280765115, 0.6708311120264913, 0.6786817989218993, 0.657042413914539, 0.6444949271136964, 0.6411148226807508, 0.6371589439215363, 0.6102116304759604, 0.605047484036875, 0.6058245741255043, 0.5880411186978455, 0.5734254733021265, 0.5773246776174324, 0.5636503890190205, 0.5533209853262996, 0.5478595574581392, 0.5388630287301791, 0.540058419193023, 0.5264549234980652, 0.5292094546286438, 0.523766514206638, 0.5194774200777414, 0.5179493192825901, 0.5086671279453252, 0.49917087957938083, 0.48842551994474886, 0.4851593691179104, 0.4817434972886003, 0.4880094540558471, 0.4757813831574535, 0.46454935938045094, 0.45823947606053983, 0.4532832128772363, 0.44687479547442793, 0.43607289231590324, 0.44515266577171814, 0.42910853327855836, 0.43803855450854656, 0.4293124354306056, 0.42416891457618516, 0.4200242608490401, 0.4187366722471222, 0.41594312675892636, 0.3966737053240327, 0.4033545240387862, 0.408489955493472, 0.4056893069754187, 0.39132435372823327, 0.3919705111848806, 0.39031481260652506, 0.38232142161841187, 0.3700515879710526, 0.3746845911341478, 0.3785046715274101, 0.370755329671049, 0.35647201310956894, 0.36257523466740554, 0.3630389297178566, 0.3611688410184009, 0.3487648983885662, 0.34942728361323244, 0.3356867015692442, 0.3354603912395462, 0.3330447053503067, 0.32866759780312665, 0.3231874426924998, 0.323725877224163, 0.3208977576921393], "accuracy": [0.09985470771789551, 0.19310526549816132, 0.313300758600235, 0.38647469878196716, 0.43547746539115906, 0.47668737173080444, 0.5322942733764648, 0.559899628162384, 0.6127327680587769, 0.6473385095596313, 0.6641130447387695, 0.6845859289169312, 0.6909258961677551, 0.7003037929534912, 0.6979262828826904, 0.7047945857048035, 0.7096816897392273, 0.7168141603469849, 0.7220974564552307, 0.7273808121681213, 0.7341170310974121, 0.735569953918457, 0.7403249144554138, 0.7442874312400818, 0.7432307600975037, 0.7481178045272827, 0.7532690763473511, 0.7621186375617981, 0.7578919529914856, 0.7630431652069092, 0.7667415142059326, 0.7746664881706238, 0.7766477465629578, 0.7740060687065125, 0.7821952104568481, 0.778761088848114, 0.7857614755630493, 0.7877426743507385, 0.7872143983840942, 0.7951393723487854, 0.798309326171875, 0.8016114234924316, 0.7979130744934082, 0.8012151718139648, 0.8035926818847656, 0.8043851256370544, 0.8031964302062988, 0.8109893202781677, 0.8132346868515015, 0.8119139075279236, 0.8119139075279236, 0.8185180425643921, 0.8195747137069702, 0.8241975903511047, 0.8227446675300598, 0.8257825970649719, 0.8319904804229736, 0.8363492488861084, 0.8334434032440186, 0.8358209133148193, 0.8384625315666199, 0.8403117060661316, 0.8383304476737976, 0.8421608805656433, 0.8498216867446899, 0.8457271456718445, 0.8506141901016235, 0.8481045961380005, 0.8445383906364441, 0.8477083444595337, 0.8543124794960022, 0.8520671129226685, 0.8519350290298462, 0.8519350290298462, 0.8594637513160706, 0.8598600029945374, 0.857218325138092, 0.8599920868873596, 0.8659358024597168, 0.8623695969581604, 0.8631620407104492, 0.8685774803161621, 0.8697662353515625, 0.8713511824607849, 0.8737286925315857, 0.8733324408531189, 0.876370370388031, 0.8714832663536072, 0.8762382864952087, 0.876370370388031, 0.8772949576377869], "val_loss": [1.9522273881094796, 1.9061062676565987, 1.8218457358224052, 1.6413169588361467, 1.3081474304199219, 0.9817390782492501, 0.7962969200951713, 0.7123500449316842, 0.6729821137019566, 0.6509384257452828, 0.6667755161012922, 0.6590421540396554, 0.5928101028714862, 0.5617355959756034, 0.5563359601157052, 0.5531478439058576, 0.5512960297720773, 0.5311956916536603, 0.5285007613045829, 0.5297220775059291, 0.533816763332912, 0.5278248105730329, 0.5086839199066162, 0.4979699509484427, 0.49398151465824675, 0.48073387145996094, 0.46616690499441965, 0.45923141070774626, 0.4526956932885306, 0.4415286438805716, 0.4397126947130476, 0.44130825996398926, 0.4343141828264509, 0.427783157144274, 0.42724867377962383, 0.42459912811006817, 0.41318955591746737, 0.40381420510155813, 0.40239663634981426, 0.3964089410645621, 0.38974020310810636, 0.3875365172113691, 0.38778068338121685, 0.3841183951922825, 0.37756495816367014, 0.3736900346619742, 0.3728476422173636, 0.3699254478727068, 0.36466909306389944, 0.36120238474437166, 0.3604007874216352, 0.35759166308811735, 0.35198916707720074, 0.3466038193021502, 0.34312230348587036, 0.3411962730543954, 0.33967086247035433, 0.33836011375699726, 0.3379655310085842, 0.3375055193901062, 0.3361806188310896, 0.3335431218147278, 0.33059885672160555, 0.3273065345627921, 0.32253752435956684, 0.3178766199520656, 0.31550218377794537, 0.3140331506729126, 0.3129564012799944, 0.3128932799611773, 0.31297447851725985, 0.3109698125294277, 0.3083178060395377, 0.30759721994400024, 0.3070100631032671, 0.30662040199552265, 0.3064114110810416, 0.3044968247413635, 0.3029579520225525, 0.30421977383749826, 0.30415197781154085, 0.30112050260816303, 0.30069238798958914, 0.298078145299639, 0.29503137724740164, 0.2928274018423898, 0.2914570825440543, 0.289737914289747, 0.29083227259772165, 0.2916175127029419, 0.2902986322130476], "val_accuracy": [0.20633333921432495, 0.37966665625572205, 0.4300000071525574, 0.4963333308696747, 0.5823333263397217, 0.6499999761581421, 0.67166668176651, 0.7043333053588867, 0.7139999866485596, 0.7176666855812073, 0.734333336353302, 0.7383333444595337, 0.7433333396911621, 0.7519999742507935, 0.7563333511352539, 0.762333333492279, 0.7559999823570251, 0.7620000243186951, 0.7613333463668823, 0.765666663646698, 0.768666684627533, 0.7693333625793457, 0.7746666669845581, 0.777999997138977, 0.777999997138977, 0.7889999747276306, 0.7953333258628845, 0.7983333468437195, 0.8023333549499512, 0.8086666464805603, 0.8043333292007446, 0.8080000281333923, 0.812333345413208, 0.8080000281333923, 0.8063333630561829, 0.8083333373069763, 0.8176666498184204, 0.8253333568572998, 0.8236666917800903, 0.8296666741371155, 0.8323333263397217, 0.8273333311080933, 0.8270000219345093, 0.831333339214325, 0.8356666564941406, 0.8386666774749756, 0.8416666388511658, 0.8433333039283752, 0.8473333120346069, 0.8513333201408386, 0.8503333330154419, 0.8486666679382324, 0.8516666889190674, 0.8556666374206543, 0.8556666374206543, 0.8586666584014893, 0.8613333106040955, 0.8619999885559082, 0.8619999885559082, 0.862333357334137, 0.8633333444595337, 0.862666666507721, 0.8629999756813049, 0.8656666874885559, 0.8683333396911621, 0.8686666488647461, 0.8676666617393494, 0.8669999837875366, 0.8690000176429749, 0.8700000047683716, 0.8700000047683716, 0.871666669845581, 0.871999979019165, 0.8726666569709778, 0.8713333606719971, 0.8740000128746033, 0.8726666569709778, 0.8743333220481873, 0.8773333430290222, 0.874666690826416, 0.8743333220481873, 0.878333330154419, 0.8773333430290222, 0.8776666522026062, 0.878333330154419, 0.8790000081062317, 0.8790000081062317, 0.878000020980835, 0.8766666650772095, 0.8773333430290222, 0.8759999871253967]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 7, 3, 9, 5, 6, 6, 6, 0, 9, 1, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 16, 5, 1, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.12285714596509933, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2799.5620190435634, 3.760081402444018e+31, 2.8410171342327484, 2.8576668587343144, 2.8680490720635787, 2.9896370229971736], "accuracy": [0.17157575488090515, 0.09628847241401672, 0.09840179979801178, 0.09959053993225098, 0.09866596013307571, 0.09628847241401672], "val_loss": [2907.1340680803573, 2.541327340262277, 2.3052589552743092, 2.2302117347717285, 2.4522620609828403, 2.4770218985421315], "val_accuracy": [0.13199999928474426, 0.10100000351667404, 0.10366666316986084, 0.09733333438634872, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 1, 5, 6, 6, 6, 0, 9, 1, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 16, 5, 1, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.12114285677671432, "mapping_values": [1, 38, 38, 23, 15, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(grad, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2829.9147357862576, 1.2226339781439102e+30, 2.987275854723407, 2.766342235861705, 2.8948090241459523, 2.9862145884413964], "accuracy": [0.17144367098808289, 0.09642054885625839, 0.1002509593963623, 0.10276053100824356, 0.09549596905708313, 0.09576013684272766], "val_loss": [3865.3669084821427, 2.5565642629350935, 2.3188186373029436, 2.4467615400041853, 2.448920113699777, 2.469876221248082], "val_accuracy": [0.1276666671037674, 0.10000000149011612, 0.10366666316986084, 0.0963333323597908, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 9, 5, 6, 6, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 1, 40, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4730477673.590106, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17936864495277405, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.450258681686432e+21, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 9, 8, 6, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 40, 40, 25, 15, 8, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.square(grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07079645991325378, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 9, 3, 9, 5, 6, 6, 6, 0, 9, 1, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3, 0], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 19, 14, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))))), grad)), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 2, 3, 9, 5, 6, 6, 4, 5, 4, 8, 9, 6, 2, 1, 0, 2, 4, 3, 7, 4, 2, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 0, 2, 0, 1, 2, 2, 0, 0, 2, 2, 3, 3, 0, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 4, 8, 9, 0, 2, 6, 6, 3, 4, 3, 4, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [4, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 4, 3, 9, 5, 6, 6, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [4, 37, 5, 1, 40, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [7, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 12, 4, 4, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07079645991325378, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 6, 9, 5, 2, 2, 6, 5, 4, 8, 9, 6, 2, 0, 6, 2, 4, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 2, 2, 0, 1], [9, 37, 84, 49, 71, 73, 1, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 38, 38, 25, 13, 8, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))))), grad))), tf.math.add(alpha, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.07028571516275406, "mapping_values": [1, 40, 40, 25, 15, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.square(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3014400224833045, 2.300569409943685, 2.3001425043624297, 2.300743847790175, 2.3001671119561964, 2.3009288307540627, 2.300180164011415, 2.2989280105755077, 2.2992585984833283, 2.3002269837708598, 2.299366138110843, 2.298170080400335, 2.298772184934756, 2.2996037720279796, 2.299806025522323], "accuracy": [0.08994849026203156, 0.08849557489156723, 0.09774138033390045, 0.09496764093637466, 0.09945846349000931, 0.09734513610601425, 0.1006472036242485, 0.09945846349000931, 0.09721305221319199, 0.09721305221319199, 0.09760929644107819, 0.10513802617788315, 0.10751552134752274, 0.09853387624025345, 0.10011887550354004], "val_loss": [1.9696056502205985, 1.969263689858573, 1.969151224408831, 1.9690577643258231, 1.969088077545166, 1.969055448259626, 1.9690571512494768, 1.9690116473606654, 1.9690212522234236, 1.9689783368791853, 1.9691096714564733, 1.9693476131984167, 1.9695685931614466, 1.9698658670697893, 1.9701273100716727], "val_accuracy": [0.04833333194255829, 0.055666666477918625, 0.06133333221077919, 0.06700000166893005, 0.0716666653752327, 0.07800000160932541, 0.08133333176374435, 0.0860000029206276, 0.08433333039283752, 0.08733333647251129, 0.08233333379030228, 0.07999999821186066, 0.07866666465997696, 0.07633333653211594, 0.07400000095367432]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 3, 9, 5, 6, 6, 6, 5, 4, 8, 9, 6, 2, 6, 6, 2, 6, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 57, 49, 40, 73, 46, 83, 24, 85], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.04285714402794838, "mapping_values": [1, 42, 42, 26, 16, 10, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(grad, grad))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.30096431812039, 2.299651864434372, 2.301136460491317, 2.302317309514989, 2.302443776415985, 2.3027569393613447, 2.3030999623206565, 2.303652745794705, 2.3046377179739483, 2.3066687263344665, 2.311637614176746], "accuracy": [0.09087307006120682, 0.09232597798109055, 0.09417514503002167, 0.0804385170340538, 0.09338264167308807, 0.10857218503952026, 0.11332716792821884, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.969275951385498, 1.971085820879255, 1.9727634021214075, 1.9732675552368164, 1.9733580180576868, 1.9735732759748186, 1.973799364907401, 1.9742418016706194, 1.9752276965550013, 1.9777268001011439, 1.98606995173863], "val_accuracy": [0.06866666674613953, 0.09799999743700027, 0.06833333522081375, 0.0793333351612091, 0.11299999803304672, 0.1146666631102562, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [5, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301900984919413, 2.3019595293242303, 2.301849971877554, 2.303040791433312, 2.302528937227297, 2.3038600978440678], "accuracy": [0.08902391046285629, 0.08611807972192764, 0.09153348207473755, 0.08955223858356476, 0.09192973375320435, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301900984919413, 2.3019595293242303, 2.301849971877554, 2.303040791433312, 2.302528937227297, 2.3038600978440678], "accuracy": [0.08902391046285629, 0.08611807972192764, 0.09153348207473755, 0.08955223858356476, 0.09192973375320435, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 3, 9, 5, 6, 6, 6, 5, 2, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 3, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301900984919413, 2.3019595293242303, 2.301849971877554, 2.303040791433312, 2.302528937227297, 2.3038600978440678], "accuracy": [0.08902391046285629, 0.08611807972192764, 0.09153348207473755, 0.08955223858356476, 0.09192973375320435, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 4, 3, 9, 5, 6, 6, 2, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 0, 1], [9, 37, 5, 1, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 15, 15, 10, 5, 3, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301900984919413, 2.3019595293242303, 2.301849971877554, 2.303040791433312, 2.302528937227297, 2.3038600978440678], "accuracy": [0.08902391046285629, 0.08611807972192764, 0.09153348207473755, 0.08955223858356476, 0.09192973375320435, 0.08651433140039444], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]