[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7582857012748718, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.2980748989232196, 2.2754391747506038, 2.229301114989908, 2.1525429462507937, 2.021120639666748, 1.8137659898696716, 1.5777187192476247, 1.4096295072921845, 1.347428975009553, 1.3453970409859881, 1.3038391392890094, 1.179664860138914, 1.0338124703847658, 0.937025823062201, 0.9002563220131052, 0.8961392117056786, 0.8999115288485909, 0.8730596495090365, 0.8406799108345022, 0.805547832923086, 0.7981148930021706, 0.7848191875760203, 0.7703639910583562, 0.7696795348698484, 0.7489594252133775, 0.7272534088184017, 0.7156239070077975, 0.6974459555422735, 0.6950341703837905, 0.6916688032091065, 0.6812752212956596, 0.6847349829630309, 0.6632505907689292, 0.654987952130078, 0.652238354368327, 0.6505858716538333, 0.6412413975566118, 0.6415584839613777, 0.6373310046283529, 0.6214486535482592, 0.6175482338603147, 0.6138354468386581, 0.6053935302215528, 0.5985123828228643, 0.5928021411869929, 0.5838386094360745, 0.579949266977314, 0.582637329261222, 0.5812407901431623], "accuracy": [0.10421344637870789, 0.16140536963939667, 0.28160083293914795, 0.35239729285240173, 0.40523049235343933, 0.443798691034317, 0.4761590361595154, 0.5101043581962585, 0.5423325896263123, 0.5552766919136047, 0.5807687044143677, 0.613789439201355, 0.6527539491653442, 0.6653017997741699, 0.6690001487731934, 0.6832650899887085, 0.695813000202179, 0.6972658634185791, 0.6976621150970459, 0.7034738063812256, 0.7067758440971375, 0.7144366502761841, 0.7230220437049866, 0.711530864238739, 0.7140403985977173, 0.7219653725624084, 0.7301545143127441, 0.7293620109558105, 0.7368907928466797, 0.7450799345970154, 0.7461365461349487, 0.7456082701683044, 0.7511557340621948, 0.7547219395637512, 0.7473253011703491, 0.7499669790267944, 0.7565711140632629, 0.7564390301704407, 0.7577598690986633, 0.7662131786346436, 0.7684586048126221, 0.7691190242767334, 0.7663452625274658, 0.769911527633667, 0.7758552432060242, 0.7770439982414246, 0.78113853931427, 0.7724210619926453, 0.7766477465629578], "val_loss": [1.95753390448434, 1.9237872532435827, 1.8688997541155135, 1.773634706224714, 1.6060548169272286, 1.3595474447522844, 1.1057054655892509, 0.9309348038264683, 0.8198244231087821, 0.7516704627445766, 0.7020782232284546, 0.6714711018971035, 0.6260992799486432, 0.629224283354623, 0.6492659023829869, 0.6708817311695644, 0.6689921276909965, 0.6296760865620205, 0.5851106643676758, 0.5609464304787772, 0.5533297913415092, 0.5441928761346, 0.5356860501425607, 0.5322421107973371, 0.526834351675851, 0.5192369563238961, 0.5140403168542045, 0.5117119891302926, 0.5108091490609306, 0.5083213022777012, 0.5031080756868634, 0.494966949735369, 0.4844965083258493, 0.4762078693934849, 0.474447420665196, 0.4743060725075858, 0.46865010261535645, 0.4595438241958618, 0.4504093272345407, 0.44601793800081524, 0.448185784476144, 0.44773437295641216, 0.43937437874930246, 0.4327335442815508, 0.4313245585986546, 0.4294822130884443, 0.4301778759275164, 0.43345495632716585, 0.4339019741330828], "val_accuracy": [0.1433333307504654, 0.36766666173934937, 0.4166666567325592, 0.4516666531562805, 0.5076666474342346, 0.5799999833106995, 0.628000020980835, 0.6626666784286499, 0.6766666769981384, 0.6949999928474426, 0.7113333344459534, 0.7206666469573975, 0.7329999804496765, 0.7329999804496765, 0.7356666922569275, 0.7429999709129333, 0.7383333444595337, 0.7433333396911621, 0.746666669845581, 0.7473333477973938, 0.7523333430290222, 0.7580000162124634, 0.7643333077430725, 0.7620000243186951, 0.765666663646698, 0.7696666717529297, 0.7699999809265137, 0.7713333368301392, 0.777999997138977, 0.7799999713897705, 0.781333327293396, 0.7799999713897705, 0.7860000133514404, 0.778333306312561, 0.781000018119812, 0.7776666879653931, 0.781000018119812, 0.7940000295639038, 0.8009999990463257, 0.8013333082199097, 0.796999990940094, 0.7953333258628845, 0.7983333468437195, 0.8046666383743286, 0.7993333339691162, 0.7996666431427002, 0.8006666898727417, 0.8006666898727417, 0.8016666769981384]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 2, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.6674285531044006, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha)))))", "other_info": {"loss": [2.297839290760984, 2.273474921891718, 2.222259366107639, 2.1298797096889315, 1.95794620678929, 1.7366161673312426, 1.5156635093084336, 1.3903647528002054, 1.3827483038372603, 3.7161015818982217, 1.752749163555573, 1.6342244309803373, 1.40829007716274, 1.3133937765688803], "accuracy": [0.10474177449941635, 0.1686699241399765, 0.2864879071712494, 0.3575485348701477, 0.3881917893886566, 0.4060229957103729, 0.4655923843383789, 0.5297846794128418, 0.5567296147346497, 0.5169726610183716, 0.4205521047115326, 0.4154008626937866, 0.49808478355407715, 0.5476158857345581], "val_loss": [1.956678799220494, 1.9200585910252161, 1.8551912988935197, 1.736757755279541, 1.4736152717045374, 1.1224321637834822, 0.8656071935381208, 0.8265310866492135, 0.7832571949277606, 1.0044662952423096, 1.0627827644348145, 0.8919041156768799, 0.8259060212544033, 0.840874433517456], "val_accuracy": [0.15299999713897705, 0.37299999594688416, 0.41499999165534973, 0.4663333296775818, 0.5559999942779541, 0.6263333559036255, 0.6536666750907898, 0.6613333225250244, 0.6733333468437195, 0.6046666502952576, 0.5770000219345093, 0.6389999985694885, 0.6326666474342346, 0.6473333239555359]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 8, 2, 2, 6, 7, 8, 0, 9], [3, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [0, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.6517142653465271, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 1, 11, 8, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.3004225930989994, 2.298241459540782, 2.294322423616247, 2.2909099743303574, 2.2893936365130334, 2.28533965819201, 2.2834582295415897, 2.279156984953502, 2.2768665035528954, 2.27436916882635, 2.2712974129509163, 2.2670544908503656, 2.263674322860651, 2.261680832974836, 2.2561172580580435, 2.253603045021806, 2.249676378222662, 2.246563262817268, 2.2430689064676357, 2.2373703656620463, 2.236549362892551, 2.229658181593954, 2.225968664002031, 2.2218554124163283, 2.2156946301979867, 2.212598106848833, 2.2079955815103753, 2.202957310208618, 2.200593627187255, 2.192166509220172, 2.189069071717943, 2.1829512037101626, 2.1769233240884103, 2.1679927309852753, 2.1645970955154508, 2.158070925566593, 2.1508273497044748, 2.1437891665828888, 2.136080498173252, 2.126107244695639, 2.1178453607550387, 2.109020087886181, 2.103025366585756, 2.0926529077286293, 2.078437096564651, 2.0728526743033684, 2.0618299435567797, 2.0564547612635278, 2.041722287717292, 2.030599883991131, 2.0194008698663093, 2.0103414014912775, 1.9962716667549154, 1.982074476362235, 1.9734453145050967, 1.9537172967637173, 1.9446662123240122, 1.936907440160228, 1.9181085785287735, 1.9068185117313685, 1.8875899726310663, 1.8704096999512907, 1.8632266238821873, 1.8427141574017676, 1.827008335613351, 1.8075854980619654, 1.7935717409596452, 1.782697344956822, 1.7658094283753791, 1.7485473594330463, 1.7368541593486135, 1.718549885518043, 1.6988654544309083, 1.6920690647189989, 1.6734782513090805, 1.659789545519351, 1.6439577205983198, 1.6299223935268716, 1.6095734570146378, 1.597380284226377, 1.58433620066234, 1.5732084392257386, 1.553365293526615, 1.5474645836541303, 1.5226599087316472, 1.5166650274253053, 1.5054921643168084, 1.4885909792265604, 1.4703772115575136, 1.4731324681390499, 1.4495071950542644, 1.4477718589391217, 1.4258098618985167, 1.4137193470614666, 1.4065214586043795, 1.3872596007202123, 1.3865680626716912, 1.3665969210404132, 1.3637705782952168, 1.355468979506618], "accuracy": [0.09615638852119446, 0.09840179979801178, 0.11359133571386337, 0.11900673806667328, 0.12508255243301392, 0.13578127324581146, 0.14093250036239624, 0.15321621298789978, 0.16034869849681854, 0.16682076454162598, 0.17250032722949982, 0.18663319945335388, 0.1954827606678009, 0.19284109771251678, 0.21437062323093414, 0.21582353115081787, 0.22678641974925995, 0.2378813922405243, 0.2429005354642868, 0.24818386137485504, 0.25241050124168396, 0.2665433883666992, 0.2694492042064667, 0.28001585602760315, 0.2925637364387512, 0.2938845455646515, 0.29665830731391907, 0.29626205563545227, 0.3015453815460205, 0.31541407108306885, 0.31541407108306885, 0.3213578164577484, 0.3349623680114746, 0.34064191579818726, 0.3357548415660858, 0.34645357728004456, 0.3473781645298004, 0.3531897962093353, 0.3609826862812042, 0.3641526997089386, 0.3711530864238739, 0.37683266401290894, 0.369700163602829, 0.37762513756752014, 0.387399286031723, 0.3887201249599457, 0.3945317566394806, 0.39149385690689087, 0.4049663245677948, 0.40774005651474, 0.409721314907074, 0.40787214040756226, 0.4177783727645874, 0.42028793692588806, 0.41751420497894287, 0.4295337498188019, 0.4333641529083252, 0.43270373344421387, 0.4299300014972687, 0.43059042096138, 0.44089287519454956, 0.44168537855148315, 0.4439307749271393, 0.45766741037368774, 0.45185577869415283, 0.46189406514167786, 0.46070531010627747, 0.46704530715942383, 0.46453574299812317, 0.474970281124115, 0.46691322326660156, 0.4835556745529175, 0.48329150676727295, 0.47906485199928284, 0.4831594228744507, 0.4826310873031616, 0.48685774207115173, 0.48751816153526306, 0.4966318905353546, 0.49689605832099915, 0.5037643909454346, 0.5036323070526123, 0.514198899269104, 0.5044247508049011, 0.516180157661438, 0.5160480737686157, 0.5190860033035278, 0.5264826416969299, 0.5238409638404846, 0.516708493232727, 0.5281997323036194, 0.5292563438415527, 0.5263505578041077, 0.5304450988769531, 0.5345396995544434, 0.542728841304779, 0.544710099697113, 0.5501254796981812, 0.5419363379478455, 0.5457667708396912], "val_loss": [1.9674726213727678, 1.9645438194274902, 1.9616523470197404, 1.9587835584368025, 1.9558747836521693, 1.9529925073896135, 1.950125285557338, 1.9471991402762276, 1.9442337581089564, 1.9412743704659599, 1.938256127493722, 1.935248647417341, 1.9321518625531877, 1.929037230355399, 1.925816331590925, 1.9225234985351562, 1.919135366167341, 1.9156825201851981, 1.912106990814209, 1.908425739833287, 1.9046408789498466, 1.9007441656930106, 1.8967114857264928, 1.8925446101597376, 1.8881797109331404, 1.8836916514805384, 1.8790739604404993, 1.8742410114833288, 1.8693032264709473, 1.8640933718000139, 1.8587634222848075, 1.8532374245779855, 1.847454002925328, 1.8413936751229423, 1.8351613453456335, 1.8286786760602678, 1.8219264575413294, 1.8149803706577845, 1.8077423913138253, 1.8001351356506348, 1.7922648702348982, 1.784140178135463, 1.7757513863699776, 1.766998222896031, 1.757815224783761, 1.7484266417367118, 1.7386667387826102, 1.7286921228681291, 1.7183033398219518, 1.7076193264552526, 1.6966111319405692, 1.68525310925075, 1.6734820774623327, 1.661374262401036, 1.6490799358912878, 1.636162315096174, 1.6231121335710799, 1.609924282346453, 1.596210173198155, 1.5824164663042342, 1.5682263033730643, 1.5536589281899589, 1.5391467298780168, 1.524158579962594, 1.509009531566075, 1.4936154229300362, 1.478043488093785, 1.4624637876238142, 1.446836199079241, 1.4310221672058105, 1.4152486324310303, 1.3993737016405379, 1.3834082739693778, 1.3676167556217738, 1.3518421990530831, 1.3362039497920446, 1.3206731932503837, 1.305302279336112, 1.2899136202675956, 1.274637290409633, 1.2596820422581263, 1.2449142932891846, 1.230227061680385, 1.2160207884652274, 1.2019408089773995, 1.1882415158408028, 1.1747096947261266, 1.1615396227155412, 1.1484838213239397, 1.135915926524571, 1.1234899588993617, 1.111300093787057, 1.0994857719966344, 1.087848424911499, 1.0766747679029192, 1.0655602046421595, 1.05497864314488, 1.0443695613316126, 1.0342324120657784, 1.024508340018136], "val_accuracy": [0.05900000035762787, 0.0820000022649765, 0.10300000011920929, 0.1289999932050705, 0.16433332860469818, 0.19300000369548798, 0.2173333317041397, 0.24266666173934937, 0.2666666805744171, 0.28866666555404663, 0.30566665530204773, 0.32100000977516174, 0.33666667342185974, 0.35066667199134827, 0.3630000054836273, 0.3726666569709778, 0.37933334708213806, 0.38600000739097595, 0.3916666805744171, 0.39533331990242004, 0.39933332800865173, 0.4050000011920929, 0.41333332657814026, 0.4189999997615814, 0.4259999990463257, 0.43299999833106995, 0.4350000023841858, 0.44066667556762695, 0.445333331823349, 0.4490000009536743, 0.4503333270549774, 0.4546666741371155, 0.45766666531562805, 0.4606666564941406, 0.46266666054725647, 0.46666666865348816, 0.4713333249092102, 0.4763333201408386, 0.4833333194255829, 0.48500001430511475, 0.4906666576862335, 0.49533334374427795, 0.5, 0.5043333172798157, 0.5073333382606506, 0.5136666893959045, 0.518666684627533, 0.5239999890327454, 0.5299999713897705, 0.5326666831970215, 0.5389999747276306, 0.5419999957084656, 0.5433333516120911, 0.5463333129882812, 0.5479999780654907, 0.5519999861717224, 0.5550000071525574, 0.5596666932106018, 0.5633333325386047, 0.5649999976158142, 0.5680000185966492, 0.5693333148956299, 0.5730000138282776, 0.5763333439826965, 0.5789999961853027, 0.5816666483879089, 0.5826666951179504, 0.5853333473205566, 0.5876666903495789, 0.5893333554267883, 0.5913333296775818, 0.5929999947547913, 0.593999981880188, 0.5983333587646484, 0.6010000109672546, 0.6033333539962769, 0.6046666502952576, 0.6066666841506958, 0.6103333234786987, 0.6106666922569275, 0.6143333315849304, 0.6146666407585144, 0.6176666617393494, 0.6230000257492065, 0.6263333559036255, 0.628333330154419, 0.6303333044052124, 0.6333333253860474, 0.6363333463668823, 0.6393333077430725, 0.6420000195503235, 0.6433333158493042, 0.6439999938011169, 0.6446666717529297, 0.6473333239555359, 0.6489999890327454, 0.6539999842643738, 0.659333348274231, 0.6600000262260437, 0.6636666655540466]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 2, 1, 2, 5, 4, 8, 4, 2, 6, 2, 3, 9, 9], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [3, 7], [71], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 0, 2, 5, 7, 0, 4, 0, 8], [1, 1, 2, 0, 3, 0, 2], [30, 63, 56, 12]], "fitness": -0.11999999731779099, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.299706365044689, 2.3007702717235015, 2.303024974938129, 2.303112897985033, 2.303810506149794, 2.3105884161702144], "accuracy": [0.1014397069811821, 0.08928807079792023, 0.07357019931077957, 0.08294808864593506, 0.10210011899471283, 0.09576013684272766], "val_loss": [1.9691129411969865, 1.9736522265842982, 1.9738099915640694, 1.9740086964198522, 1.9760360717773438, 1.999720914023263], "val_accuracy": [0.11933333426713943, 0.06333333253860474, 0.06700000166893005, 0.11433333158493042, 0.10300000011920929, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1], [0, 5, 1, 2, 5, 4, 8, 4, 2, 6, 2, 3, 9, 9], [5, 2, 3, 3, 1, 2, 3, 4, 2, 4, 1], [52, 62, 64, 63], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 3, 2, 0, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, beta))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302838204858357, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 4, 8, 6, 2, 3, 9, 9], [3, 3, 3, 3, 1, 2, 2, 3, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [0, 7], [71], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 9, 0, 7, 0, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [1, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1255640119.2604015, 23681116502.189934, 111707001652.71483, 303518784108.811, 658180614014.4277, 1204990025590.583], "accuracy": [0.09774138033390045, 0.10091137140989304, 0.10236428678035736, 0.09959053993225098, 0.09866596013307571, 0.09893012791872025], "val_loss": [4639768868.571428, 37111390208.0, 125243335826.28572, 296865927753.1429, 579807552658.2858, 1001893770971.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [15, 45, 44, 59, 21, 63], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [5, 3], [7, 7], [71], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.302838204858357, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 2, 1, 2, 5, 4, 8, 4, 2, 6, 2, 3, 9, 9], [5, 0, 0, 3, 0, 2, 0, 4, 2, 4, 1], [15, 45, 44, 59, 21, 63], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [3, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 6, 2, 0, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 2, 2, 3, 8, 2, 4, 2, 8, 0, 0], [5, 1, 0, 3, 1, 2, 3, 4, 2, 4, 1, 3, 3], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 9, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 15, 12, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, beta)))))))))), tf.math.add(beta, grad)))), tf.math.pow(alpha, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 2, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 2, 2, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 2, 1, 2, 5, 4, 8, 4, 2, 6, 2, 3, 9, 9], [5, 0, 0, 3, 0, 2, 0, 4, 2, 4, 1], [15, 45, 44, 59, 21, 63], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 6, 2, 0, 0, 0, 4, 0, 8], [1, 1, 1, 0, 3, 0, 2], [30, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 5, 1, 2, 5, 2, 0, 2, 2, 8, 7, 5, 5, 3, 4, 4, 3, 9], [5, 5, 0, 3, 1, 2, 1, 4, 2, 0, 1, 0], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 9, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.305140106543542, 2.3304711119720194, 2.385895013840695, 2.508145326132693, 2.9123403094841773, 7.249497462131438, 42063.9712284659, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08611807972192764, 0.046889446675777435, 0.018491612747311592, 0.010038304142653942, 0.009113723412156105, 0.027605336159467697, 0.09853387624025345, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9828392437526159, 2.020006997244699, 2.093105043683733, 2.2650318826947893, 3.0669617652893066, 23.706077030726842, 1460551387.4285715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.009999999776482582, 0.005333333276212215, 0.004666666500270367, 0.005333333276212215, 0.009666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [4, 5, 1, 2, 5, 2, 8, 2, 2, 6, 7, 8, 0, 9], [5, 0, 1, 3, 1, 2, 0, 4, 2, 4, 1], [47, 45, 85], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 21, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 15, 11, 4, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(alpha)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [0, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [76, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19828229229571.617, 8.712757835118699e+16, 1.6634642089671218e+24, 3.304283444395975e+32, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09708096832036972, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1666602658281179.5, 1.0122295085451182e+18, 1.3803618215257678e+26, 2.889043910731442e+34, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 2, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 1, 0, 3, 0, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [3, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 6, 2, 0, 0, 0, 4, 0, 8], [1, 1, 1, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [52515520230.98884, 7665776661932.616, 134511909207484.03, 924440278482366.2, 4121195963505137.5, 1.3467389094257526e+16], "accuracy": [0.09721305221319199, 0.10077928751707077, 0.10236428678035736, 0.09959053993225098, 0.09893012791872025, 0.09866596013307571], "val_loss": [422595601554.2857, 22781758837321.145, 244524308908324.56, 1333134648185417.2, 4994454106369463.0, 1.4726545823385892e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [4, 5, 1, 2, 5, 4, 8, 4, 2, 9, 2, 3, 9, 9, 0, 8, 5, 9], [0, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45, 92, 39, 65, 24], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 23, 23, 18, 5, 6, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, alpha)))))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [52455440673.197266, 7662519395694.4, 134484926861500.81, 924362259069716.5, 4120637694624715.5, 1.346727347817414e+16], "accuracy": [0.09760929644107819, 0.10091137140989304, 0.1022322028875351, 0.09972262382507324, 0.09906221181154251, 0.09879804402589798], "val_loss": [422528221184.0, 22782287319625.145, 244535262033627.44, 1332998359669613.8, 4993139539593509.0, 1.4727868980096438e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 4, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 6, 9, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 0, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [15, 45, 44, 59, 21, 63], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 6, 2, 0, 0, 0, 4, 0, 8], [1, 1, 1, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07198520749807358, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 3, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(beta, tf.math.add(tf.math.square(sigma), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.3016905927261293, 2.3026530624868817, 2.3018684255889443, 2.3014973436820902, 2.303204131746777, 2.3021001264387984], "accuracy": [0.09285431355237961, 0.08849557489156723, 0.09747721254825592, 0.09206181764602661, 0.09272222965955734, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703850746154785], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 9, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [23, 63, 56, 12]], "fitness": -0.014000000432133675, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.305728049026961, 2.317149209151131, 2.327780822894482, 2.3396410176845635, 2.3561661425141955, 2.370885299826972], "accuracy": [0.08572183549404144, 0.0614185705780983, 0.05124818533658981, 0.038304053246974945, 0.030246995389461517, 0.021793685853481293], "val_loss": [1.9797321728297643, 1.9898790631975447, 2.000770160130092, 2.0128248078482494, 2.026685987200056, 2.042352948869978], "val_accuracy": [0.014666666276752949, 0.007333333138376474, 0.006666666828095913, 0.006000000052154064, 0.005333333276212215, 0.004666666500270367]}}]