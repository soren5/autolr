[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [77], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.078194486277687, 1.4131933363941067, 1.1033494610119459, 0.9001367312333587, 0.858243520446284, 0.7964110868387471, 0.7746157419601247, 0.741086921711104, 0.7068203964001625, 0.7247976226939533, 0.6581004995081671, 0.6552242785396987, 0.6522906207295142, 0.6448622131076833, 0.6382901068250847, 0.613414128931081, 0.6059105356434601, 0.5884794691109371, 0.576478812696439, 0.5744709372205536, 0.6048391716685891, 0.5604714060330419], "accuracy": [0.3185840845108032, 0.50350022315979, 0.6079778075218201, 0.6675472259521484, 0.6793025732040405, 0.707040011882782, 0.707568347454071, 0.7271166443824768, 0.7351737022399902, 0.7231541275978088, 0.7534011602401733, 0.7584202885627747, 0.7565711140632629, 0.7567031979560852, 0.7637035846710205, 0.7697794437408447, 0.7788931727409363, 0.7794214487075806, 0.785629391670227, 0.7854973077774048, 0.7751948237419128, 0.7960638999938965], "val_loss": [1.1437177658081055, 0.9336233139038086, 0.713231120790754, 0.6312505858285087, 0.6232452733176095, 0.5546251705714634, 0.5827787944248745, 0.5328133446829659, 0.5223611422947475, 0.49484777450561523, 0.48184999397822786, 0.4912606818335397, 0.48990774154663086, 0.5144121476582119, 0.4581059387751988, 0.46361255645751953, 0.4272076317242214, 0.479925342968532, 0.4336839403424944, 0.4284008485930307, 0.43000008378710064, 0.44634766238076345], "val_accuracy": [0.6326666474342346, 0.5596666932106018, 0.6953333616256714, 0.7160000205039978, 0.7310000061988831, 0.7519999742507935, 0.7296666502952576, 0.7573333382606506, 0.750333309173584, 0.7943333387374878, 0.7786666750907898, 0.7739999890327454, 0.7663333415985107, 0.7540000081062317, 0.7993333339691162, 0.796999990940094, 0.8180000185966492, 0.7760000228881836, 0.7956666946411133, 0.8119999766349792, 0.7960000038146973, 0.8040000200271606]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [48], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [6, 1, 0, 2, 2, 2, 0, 9, 6, 1, 2, 1, 3, 7, 8, 9, 5], [2, 0, 0, 0, 3], [26, 60, 56, 45]], "fitness": -0.24714285135269165, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.683042920607271, 2.2635295666314357, 2.266816177262354, 2.3041874806264673, 2.30458883290687, 2.302851309409121], "accuracy": [0.18042530119419098, 0.17633073031902313, 0.14132875204086304, 0.16114120185375214, 0.09840179979801178, 0.09972262382507324], "val_loss": [1.8727352959769112, 1.8655001776559013, 1.9736860139029366, 1.9760193824768066, 1.973815645490374, 1.9733636719839913], "val_accuracy": [0.2423333376646042, 0.10633333027362823, 0.09799999743700027, 0.10300000011920929, 0.10300000011920929, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [77], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0, 9, 6, 0, 2, 2, 5, 7, 8, 9, 0], [1, 2, 2, 0, 3, 1, 3, 1, 3, 3], [41, 73, 56, 45]], "fitness": -0.13457143306732178, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 23, 14, 9, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(beta), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(sigma, alpha)), tf.math.add(sigma, tf.math.square(tf.math.add(alpha, sigma)))))", "other_info": {"loss": [3.6260526260633082e+25, 4.953531996206281e+25, 4.965444308413875e+25, 5.153483513616644e+25, 5.007778332788175e+25, 4.862550385382891e+25, 5.0267394120330835e+25, 5.080772763947874e+25, 4.978850132894532e+25, 4.929904053408035e+25], "accuracy": [0.0936468094587326, 0.09126931428909302, 0.09192973375320435, 0.09457138925790787, 0.09272222965955734, 0.09615638852119446, 0.09245806187391281, 0.09245806187391281, 0.09866596013307571, 0.09259014576673508], "val_loss": [4.065547760507413e+25, 4.06552588793944e+25, 4.065565680201656e+25, 4.065603759551922e+25, 4.065660285646263e+25, 4.065708247180854e+25, 4.065752914654004e+25, 4.06579270691622e+25, 4.065832103891063e+25, 4.065870842053618e+25], "val_accuracy": [0.11100000143051147, 0.11100000143051147, 0.11100000143051147, 0.11100000143051147, 0.11133333295583725, 0.11133333295583725, 0.11133333295583725, 0.11133333295583725, 0.11133333295583725, 0.11133333295583725]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [0, 1, 1, 0], [16, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [35], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 1, 0, 2, 2, 2, 0, 8, 1], [1, 2, 3, 0, 3, 3, 0], [9, 60, 56, 45]], "fitness": -0.1225714311003685, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 16, 9, 7, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.math.add(tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), sigma), tf.math.subtract(sigma, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [22.53733800371105, 2.304697937575534, 2.307110613678204, 2.307004011160725, 2.3045262799775044, 2.3027537316851503], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.09879804402589798, 0.09642054885625839], "val_loss": [1.9742962973458427, 1.9766241482325964, 1.977764674595424, 1.9762238093784876, 1.9742943218776159, 1.9744891439165388], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.0963333323597908, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [83], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [77], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [6, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301973569567933, 2.3025855838252633, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [43], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [3, 1, 0, 2, 2, 2, 0], [0, 2, 3, 0, 3], [41, 60, 56, 37, 36, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), beta), sigma)", "other_info": {"loss": [1730191.5095317296, 261547691.30207372, 4393876462.822877, 31511515332.92828, 137573775601.02075, 458390661780.3049], "accuracy": [0.09760929644107819, 0.1006472036242485, 0.1026284471154213, 0.0952318087220192, 0.09628847241401672, 0.09998679161071777], "val_loss": [14260272.857142856, 766468004.5714285, 8222030701.714286, 44815224246.85714, 167848986916.57144, 495085589065.1429], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [77], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [9, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302650927710039, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 1], [0, 0, 1, 0], [2, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [37], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [8], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [3, 3, 2, 2, 2, 6, 8, 8, 7, 5, 2, 9, 9], [1, 2, 1, 0, 3, 0, 0, 0], [41, 60, 56, 45, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 1, 20, 12, 8, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, beta), tf.math.add(tf.math.divide_no_nan(alpha, tf.math.sqrt(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 2, 5, 9, 1, 3, 5, 8, 1, 0, 6, 5], [3, 1, 1, 0, 2], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [77], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 12, 5, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 6, 3, 3, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [77], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 3, 0, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [0, 3], [0, 7], [77], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [3, 1, 0, 2, 2, 2, 0], [1, 2, 3, 0, 3], [9, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [77], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [3, 1, 0, 2, 2, 2, 2, 9, 6, 1, 2, 1, 3, 7, 8, 9, 5, 8], [1, 0, 2, 0, 3, 0, 3, 1, 2, 3, 3], [9, 23, 56, 45, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 29, 18, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(sigma, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.multiply(tf.math.add(alpha, beta), tf.math.sqrt(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), tf.math.square(sigma))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [1], [1], [6, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [43], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], [4, 1, 3, 2, 2, 2, 2, 1, 7, 9], [1, 2, 2, 0, 3, 3, 1, 2, 1], [41, 60, 56, 37, 36, 21]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 19, 10, 9, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.subtract(tf.math.multiply(beta, beta), tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(sigma, tf.math.subtract(sigma, alpha)), tf.math.add(beta, alpha))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [93], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [77], [1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [2, 1, 3, 2, 2, 2, 0, 9, 6, 8], [1, 2, 2, 0, 3, 2], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07806102186441422, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 1], [0, 0, 1, 0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [37], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [8], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [7, 1, 0, 2, 2, 2, 0, 8, 0], [1, 2, 2, 0, 3, 0, 0, 0], [41, 60, 56, 45, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 15, 9, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), sigma))), tf.math.sqrt(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [7, 7, 0, 2, 2, 2, 0, 9, 5], [1, 1, 2, 0, 3], [41, 60, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(alpha), alpha), beta)", "other_info": {"loss": [9101.51550520989, 165339.1933199049, 708836.8787313433, 2223499.3309008055, 5240126.03942676, 14407726.588033285, 26648520.43772289, 36937600.92986395, 49347868.39572051], "accuracy": [0.09774138033390045, 0.10196803510189056, 0.10011887550354004, 0.1022322028875351, 0.09787346422672272, 0.10632677376270294, 0.1002509593963623, 0.10302469879388809, 0.1006472036242485], "val_loss": [33876.19642857143, 129407.13392857143, 1128023.5, 2142864.9285714286, 6407289.0, 18295526.285714287, 26272493.14285714, 34512440.0, 44981155.428571425], "val_accuracy": [0.10000000149011612, 0.0963333323597908, 0.09733333438634872, 0.10300000011920929, 0.10000000149011612, 0.10133333504199982, 0.10100000351667404, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [8], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [6, 1, 0, 2, 2, 2, 0, 9, 6, 1, 2, 1, 3, 7, 8, 9, 5], [1, 2, 1, 0, 3, 0, 0, 0], [41, 60, 56, 45, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 13, 8, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [49251.91882270079, 478821.1045766742, 1413667.4239532426, 2847610.403348303, 4792099.773477744, 7244251.190199445], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [190174.14732142858, 814499.3392857143, 1872013.2857142857, 3364733.785714286, 5290754.857142857, 7649467.428571428], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [33], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 7, 6, 4, 6, 2, 2, 0, 0, 7, 8, 8, 9, 3, 1, 4, 8, 3, 8, 0, 8, 9, 6, 2, 6, 5, 9, 3, 5, 4, 0, 0, 5], [1, 1, 3, 0, 3, 0, 2, 0, 0, 2, 1, 1, 2, 0, 1, 2, 0, 0, 0], [41, 60, 56, 45, 36, 83, 23, 14, 25, 73, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 58, 39, 19, 11], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), alpha), tf.math.add(tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), sigma))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.negative(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.sqrt(beta), alpha)), tf.math.negative(tf.math.sqrt(alpha))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.square(alpha), beta))))), tf.math.pow(tf.math.negative(tf.math.negative(tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [43], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [4, 1, 3, 2, 2, 2, 2, 1, 7, 9], [2, 2, 0, 0, 3, 0, 0, 3, 0], [41, 60, 56, 37, 36, 21]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3018813871704373, 2.303766753711028, 2.30371338961194, 2.303133385103644, 2.303300095303593, 2.303033044262333], "accuracy": [0.09272222965955734, 0.08757099509239197, 0.09232597798109055, 0.08915598690509796, 0.09140139818191528, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [77], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 0, 7, 3, 0], [1, 2, 0, 0, 3, 0, 1, 2], [41, 60, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 19, 11, 8, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, beta)), tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.multiply(tf.math.negative(sigma), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha))), beta)", "other_info": {"loss": [2.3018813871704373, 2.303766753711028, 2.30371338961194, 2.303133385103644, 2.303300095303593, 2.303033044262333], "accuracy": [0.09272222965955734, 0.08757099509239197, 0.09232597798109055, 0.08915598690509796, 0.09140139818191528, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]