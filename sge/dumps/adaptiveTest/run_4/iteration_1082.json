[{"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 4, 2, 2, 4, 1, 5, 0, 0, 2, 4, 6, 2, 4, 3, 2, 5, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [44], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8374285697937012, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9158992476986698, 1.0896553002674787, 0.758863774729663, 0.6620146793349859, 0.6014405793171234, 0.5546846709561906, 0.5152177430060498, 0.49363909880435697, 0.4690060338733408, 0.4437777115180429, 0.4380510192088416, 0.41255662341978194, 0.388119704341372, 0.3741748917923155, 0.36437155486034944, 0.3530801730172635, 0.34993862430684997, 0.3374895796114821, 0.3220796330123766, 0.31433096465464866, 0.3096990296751233, 0.29944881431934556, 0.29136326907490695, 0.28549033722636913, 0.26833931827164126, 0.2657261007867548, 0.25375522384790306, 0.25165042013477074, 0.24297812590903264, 0.24083074850767452, 0.22698335107866138], "accuracy": [0.3435477614402771, 0.6156386137008667, 0.7054550051689148, 0.7374191284179688, 0.7677981853485107, 0.7840443849563599, 0.8059701323509216, 0.8152159452438354, 0.822348415851593, 0.832650899887085, 0.8301413059234619, 0.8449346423149109, 0.8499537706375122, 0.8590674996376038, 0.8687095642089844, 0.8669924736022949, 0.8681812286376953, 0.8735966086387634, 0.8819178342819214, 0.880729079246521, 0.8865407705307007, 0.8824461698532104, 0.8886540532112122, 0.8916919827461243, 0.8975036144256592, 0.9000132083892822, 0.9039757251739502, 0.9026548862457275, 0.9054285883903503, 0.9022586345672607, 0.9115044474601746], "val_loss": [1.0843534469604492, 0.611871634210859, 0.523435149874006, 0.4744195427213396, 0.4396603448050363, 0.4033853667122977, 0.38777979782649447, 0.3729059951645987, 0.3581328902925764, 0.36218557187489103, 0.3438256297792707, 0.3249473656926836, 0.32238079820360455, 0.30286628007888794, 0.3092956372669765, 0.3032650521823338, 0.3053535223007202, 0.3006541814122881, 0.29265977655138287, 0.30086507967540194, 0.2990608385631016, 0.2877386212348938, 0.3025829110826765, 0.3007738334792001, 0.2865015353475298, 0.2913863829204014, 0.2867005893162319, 0.29024926253727507, 0.28847125598362516, 0.30102277653557913, 0.29042461940220426], "val_accuracy": [0.5789999961853027, 0.7336666584014893, 0.7526666522026062, 0.7873333096504211, 0.7973333597183228, 0.8259999752044678, 0.8366666436195374, 0.846666693687439, 0.8433333039283752, 0.8446666598320007, 0.8543333411216736, 0.8686666488647461, 0.8703333139419556, 0.8759999871253967, 0.871999979019165, 0.8743333220481873, 0.8740000128746033, 0.8756666779518127, 0.8786666393280029, 0.878000020980835, 0.8823333382606506, 0.8816666603088379, 0.875, 0.875333309173584, 0.8816666603088379, 0.8866666555404663, 0.8813333511352539, 0.8830000162124634, 0.8843333125114441, 0.8796666860580444, 0.8840000033378601]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 4, 2, 2, 4, 1, 5, 0, 0, 2, 4, 6, 2, 4, 3, 2, 5, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8320000171661377, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9159023047217825, 1.089048833194237, 0.7593603555662694, 0.661788698523477, 0.6025555648697901, 0.5551660257150406, 0.5144385031390388, 0.4953326727964182, 0.4695747932265416, 0.4443302527001159, 0.4356937809013152, 0.41034388322525367, 0.3881158364124585, 0.37141561382608235, 0.36432999948768124, 0.3523756862828256, 0.348346797758011, 0.33746522349719876, 0.32069758755766153, 0.30948282856400205, 0.3043996466818487, 0.3064487020431839, 0.2867914456827388, 0.2779627110601936, 0.2653740802697376, 0.26509807443952577, 0.24847031174602288, 0.24451822341629983, 0.23719055391282232, 0.23907410949685112, 0.22626232598806023, 0.23467921479314216, 0.2215954933747041, 0.2135783899627137, 0.19955841262051457, 0.1947505800298271, 0.19461332804585776, 0.19452406552410742], "accuracy": [0.3435477614402771, 0.6153744459152222, 0.7055870890617371, 0.7396644949913025, 0.7677981853485107, 0.7853652238845825, 0.8043851256370544, 0.816008448600769, 0.8227446675300598, 0.833179235458374, 0.8359529972076416, 0.8488970994949341, 0.8474441766738892, 0.8607845902442932, 0.8654074668884277, 0.8658037185668945, 0.869502067565918, 0.8734645247459412, 0.8828424215316772, 0.8850878477096558, 0.883238673210144, 0.8787478804588318, 0.8906353116035461, 0.89552241563797, 0.8973715305328369, 0.89988112449646, 0.90423983335495, 0.9070135951042175, 0.9076740145683289, 0.9033153057098389, 0.9125610589981079, 0.9079381823539734, 0.9142781496047974, 0.9212785363197327, 0.9216747879981995, 0.9220710396766663, 0.9253731369972229, 0.9236560463905334], "val_loss": [1.0829026358468192, 0.6129202161516462, 0.5232349804469517, 0.4757364136832101, 0.44189654077802387, 0.40290444237845285, 0.3916389686720712, 0.37451217004231047, 0.3600532497678484, 0.3618098327091762, 0.3440407770020621, 0.32683304377964567, 0.31822387661252705, 0.30761539936065674, 0.30885802847998484, 0.3034956880978176, 0.3061883534703936, 0.29827782937458586, 0.2885020971298218, 0.29298813002450125, 0.30936944484710693, 0.28580102750233244, 0.2981578026499067, 0.2959957889148167, 0.29063184772218975, 0.28933110407420565, 0.2875180074146816, 0.2873380780220032, 0.2895236611366272, 0.28992256947926115, 0.2986178398132324, 0.2848401495388576, 0.28289248262132916, 0.29814938988004414, 0.2939520222800119, 0.2972189784049988, 0.2925472004073007, 0.30609247514179777], "val_accuracy": [0.5796666741371155, 0.7323333621025085, 0.7513333559036255, 0.784333348274231, 0.7943333387374878, 0.8266666531562805, 0.8360000252723694, 0.8453333377838135, 0.8479999899864197, 0.8473333120346069, 0.8556666374206543, 0.8679999709129333, 0.8669999837875366, 0.8690000176429749, 0.875333309173584, 0.875333309173584, 0.8740000128746033, 0.8759999871253967, 0.8830000162124634, 0.8816666603088379, 0.875333309173584, 0.8843333125114441, 0.8803333044052124, 0.8763333559036255, 0.8793333172798157, 0.8859999775886536, 0.8840000033378601, 0.8883333206176758, 0.8813333511352539, 0.8896666765213013, 0.8843333125114441, 0.8886666893959045, 0.8920000195503235, 0.8843333125114441, 0.8896666765213013, 0.890999972820282, 0.8859999775886536, 0.8840000033378601]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 4, 2, 2, 4, 1, 5, 0, 0, 2, 4, 6, 2, 4, 3, 2, 5, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8302857279777527, "mapping_values": [1, 33, 33, 18, 15, 4, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, alpha)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), grad)))), grad))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9159170715737384, 1.0887521566212248, 0.7585847750709608, 0.6623762260181179, 0.6012174599930563, 0.5527798031787547, 0.5141864597891866, 0.4930817059018215, 0.4659912625654672, 0.44441071040106644, 0.4376880885697847, 0.41147868954636213, 0.3883869768708468, 0.37339628893370796, 0.3655150843617655, 0.35608059869718245, 0.34700868117448724, 0.33603454650967834, 0.3237648790089871, 0.3086544421402187, 0.30710720304626565, 0.2988463381514211, 0.2833208590529425, 0.27671890007018285, 0.26700989369624295, 0.26133597539345416, 0.24561075742029637], "accuracy": [0.3435477614402771, 0.6161669492721558, 0.7059833407402039, 0.7383436560630798, 0.7677981853485107, 0.7864218950271606, 0.8062343001365662, 0.8150838613510132, 0.8261788487434387, 0.8327829837799072, 0.8330471515655518, 0.8475762605667114, 0.8512746095657349, 0.8603883385658264, 0.86553955078125, 0.8663320541381836, 0.8696341514587402, 0.8757099509239197, 0.8767666220664978, 0.8835028409957886, 0.8869370222091675, 0.8821820020675659, 0.8916919827461243, 0.8931449055671692, 0.8981640338897705, 0.89988112449646, 0.9071456789970398], "val_loss": [1.0837007931300573, 0.6109228815351214, 0.5225821052278791, 0.4743378162384033, 0.43778506347111296, 0.4031691295760019, 0.38848109756197247, 0.3711783971105303, 0.3580415759767805, 0.3604864307812282, 0.3423933982849121, 0.32621610164642334, 0.31740832328796387, 0.30375060013362337, 0.3078191024916513, 0.29996706758226666, 0.3033725449017116, 0.2994407755987985, 0.2889717902456011, 0.2981905596596854, 0.2985191174915859, 0.2853558829852513, 0.29961863585880827, 0.3056031124932425, 0.287976154259273, 0.2926508869443621, 0.2838401368686131], "val_accuracy": [0.5793333053588867, 0.7350000143051147, 0.7523333430290222, 0.7860000133514404, 0.7996666431427002, 0.8259999752044678, 0.8349999785423279, 0.8496666550636292, 0.846666693687439, 0.8463333249092102, 0.8576666712760925, 0.862666666507721, 0.8690000176429749, 0.878000020980835, 0.8740000128746033, 0.878333330154419, 0.878000020980835, 0.8769999742507935, 0.8836666941642761, 0.8846666812896729, 0.8803333044052124, 0.8849999904632568, 0.8766666650772095, 0.8776666522026062, 0.8836666941642761, 0.8826666474342346, 0.8843333125114441]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 7, 5, 5, 2, 1, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 2, 9, 2, 5, 2, 1, 2, 2, 7, 1, 6, 8, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [44], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.826285719871521, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9159061613493529, 1.088834837482527, 0.7581310633497624, 0.6615773421063824, 0.6006314150488151, 0.5523825800492858, 0.512073330048793, 0.4928950496030726, 0.4692218687792244, 0.4426927552239266, 0.43964983227073146, 0.41062260540075557, 0.3882312564219403, 0.37290164636205203, 0.3676764735094135, 0.3543740557035545, 0.34490761912698836, 0.3442354184163166, 0.3246966334397625, 0.3161059394488639, 0.3085694999593108, 0.2999283708066138, 0.28875297044230774, 0.2771715986305114, 0.2659773431859075, 0.2600882394206585, 0.24896802705875115], "accuracy": [0.3435477614402771, 0.6155065298080444, 0.7062475085258484, 0.7400607466697693, 0.7677981853485107, 0.7864218950271606, 0.8062343001365662, 0.8165367841720581, 0.8234050869941711, 0.8323867321014404, 0.8334434032440186, 0.8475762605667114, 0.8498216867446899, 0.8595958352088928, 0.8618412613868713, 0.867520809173584, 0.8717474341392517, 0.8728041052818298, 0.8800686597824097, 0.882710337638855, 0.8860124349594116, 0.8844274282455444, 0.8907673954963684, 0.8911636471748352, 0.8981640338897705, 0.9021265506744385, 0.9049002528190613], "val_loss": [1.083237648010254, 0.6120506525039673, 0.5225282907485962, 0.47392027718680246, 0.4383782829557146, 0.40432095527648926, 0.388071494443076, 0.3708199773515974, 0.35577055386134554, 0.36482173204421997, 0.34351793357304167, 0.3247506959097726, 0.32078373432159424, 0.3052337169647217, 0.308135918208531, 0.30672075918742586, 0.3069095867020743, 0.299490009035383, 0.2941755737577166, 0.30221314089638845, 0.30050388404301237, 0.2821136031832014, 0.29435462611062185, 0.3059083138193403, 0.2853086675916399, 0.2905277098928179, 0.28560699735369], "val_accuracy": [0.5793333053588867, 0.734666645526886, 0.753000020980835, 0.7856666445732117, 0.8003333210945129, 0.8243333101272583, 0.8373333215713501, 0.8489999771118164, 0.8500000238418579, 0.847000002861023, 0.8556666374206543, 0.8690000176429749, 0.8703333139419556, 0.8693333268165588, 0.8733333349227905, 0.8759999871253967, 0.8756666779518127, 0.8713333606719971, 0.878000020980835, 0.8809999823570251, 0.8803333044052124, 0.8846666812896729, 0.8793333172798157, 0.875, 0.8836666941642761, 0.8836666941642761, 0.8816666603088379]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [9, 7, 5, 5, 2, 5, 4, 2, 8, 3, 4, 5, 4, 1, 2, 1, 3, 5, 2, 2, 9, 2, 5, 0, 2, 2, 2, 7, 3, 2, 8, 4, 0, 3, 9, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [2, 2, 1, 2, 0, 2, 2, 2, 0, 1, 1, 2, 2, 2, 0, 1, 2, 0, 2, 0, 0, 2, 2, 1, 3, 1, 2, 1, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [57, 75, 25, 22, 83, 73, 46, 33, 24, 64, 59], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8259999752044678, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9174167213186752, 1.0932535600306383, 0.7623863430496188, 0.6636032907245748, 0.6027792142980906, 0.5537520977626025, 0.5164536310224769, 0.49651868368782276, 0.47424229246167743, 0.4518250616242967, 0.4415669375997351, 0.4125365608396028, 0.3924565769386581, 0.37564795385844924, 0.3689413191092532, 0.3513420756033871, 0.35110569772561623, 0.3478853574337315, 0.3283593294139016, 0.31481408430852625, 0.30950614647023855, 0.2994202333765102, 0.2836400740505005, 0.2792885920485296, 0.2699633385991502, 0.2581546705463669, 0.250035628182399, 0.24763818337318683, 0.2442782843873454, 0.24510716338002403, 0.2304433883496122, 0.2439788016507245, 0.22613052118644897, 0.20686200086537637], "accuracy": [0.3427552580833435, 0.6116761565208435, 0.7043983340263367, 0.7415136694908142, 0.7668735980987549, 0.7848368883132935, 0.8045172095298767, 0.8142913579940796, 0.822348415851593, 0.8260467648506165, 0.8364813327789307, 0.8469158411026001, 0.8515387773513794, 0.8585391640663147, 0.8643507957458496, 0.8668603897094727, 0.8661999702453613, 0.8685774803161621, 0.8778232932090759, 0.8813894987106323, 0.8854840993881226, 0.8811253309249878, 0.8899748921394348, 0.8951261639595032, 0.8947299122810364, 0.9005415439605713, 0.9014661312103271, 0.9075419306755066, 0.9039757251739502, 0.9009377956390381, 0.9126931428909302, 0.9051644206047058, 0.9133535623550415, 0.9224672913551331], "val_loss": [1.0803778171539307, 0.6070881400789533, 0.5253055606569562, 0.480565002986363, 0.43920017991747173, 0.4058940240315029, 0.39483375208718435, 0.3789856093270438, 0.3581885780606951, 0.3586107577596392, 0.3429802230426243, 0.33199550424303326, 0.3237937092781067, 0.3088628479412624, 0.3109838707106454, 0.3065550242151533, 0.307143645627158, 0.3035385438374111, 0.2942017231668745, 0.3032823886190142, 0.29842359679085867, 0.2915139028004238, 0.2956554463931492, 0.2986728549003601, 0.2887812852859497, 0.2925453100885664, 0.28745497124535696, 0.2915665592466082, 0.28299624579293386, 0.29530714239392963, 0.3044238601412092, 0.2850805265562875, 0.28397893054144724, 0.29982138531548636], "val_accuracy": [0.5713333487510681, 0.7286666631698608, 0.7473333477973938, 0.7846666574478149, 0.7953333258628845, 0.8266666531562805, 0.8323333263397217, 0.8453333377838135, 0.8483333587646484, 0.8463333249092102, 0.8576666712760925, 0.862666666507721, 0.8673333525657654, 0.8726666569709778, 0.8723333477973938, 0.8713333606719971, 0.8726666569709778, 0.8743333220481873, 0.8806666731834412, 0.8759999871253967, 0.8790000081062317, 0.8820000290870667, 0.8816666603088379, 0.8793333172798157, 0.878333330154419, 0.8859999775886536, 0.8833333253860474, 0.8840000033378601, 0.8889999985694885, 0.8846666812896729, 0.8776666522026062, 0.8863333463668823, 0.8863333463668823, 0.8836666941642761]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 1, 5, 1, 1, 4, 2, 8, 3, 2, 5, 4, 1, 2, 1, 3, 0, 6, 9, 9, 2, 8, 2, 1, 2, 2, 7, 5, 6, 8, 4, 0, 3, 2, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [0, 2, 1, 2, 0, 2, 2, 1, 1, 1, 1, 2, 2, 2, 0, 1, 2, 0, 2, 1, 2, 2, 1, 1, 3, 1, 2, 1, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [57, 75, 25, 22, 83, 73, 46, 33, 24, 64, 59], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8162857294082642, "mapping_values": [1, 51, 51, 30, 21, 6, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(alpha, alpha))), alpha)), tf.math.add(alpha, alpha))), alpha))), grad)), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.917416676129049, 1.0931908283424479, 0.7623687641905, 0.6645008751020581, 0.6013414712551168, 0.5540216625752371, 0.5174618006744531, 0.49430377393461034, 0.4727676983806105, 0.45156219342617454, 0.44055714094407367, 0.41448087780671805, 0.3939105157626382, 0.37446834149928754, 0.3666631038619417, 0.35279904420286706, 0.34444177388877223, 0.33879405869831103, 0.3253499596598535, 0.3132172660812836, 0.3090512651840394, 0.3017532455804656, 0.28758898943469763, 0.27599491488585587, 0.26904288859352254, 0.26601601154568677, 0.2548641619145705, 0.25088444580459923, 0.24253380333648272, 0.2386315717334682, 0.23343341890390382, 0.2411884523996068, 0.22690111986398226, 0.21371518982407786, 0.19917657067195976, 0.1951568783345145, 0.19770602372344206], "accuracy": [0.3427552580833435, 0.6116761565208435, 0.7045304179191589, 0.7417778372764587, 0.7687227725982666, 0.7848368883132935, 0.8043851256370544, 0.8162726163864136, 0.8211596608161926, 0.8293488025665283, 0.8334434032440186, 0.8444063067436218, 0.8500858545303345, 0.8584070801734924, 0.8660678863525391, 0.8669924736022949, 0.869502067565918, 0.8739928603172302, 0.876370370388031, 0.878879964351654, 0.8864086866378784, 0.8815215826034546, 0.8906353116035461, 0.8942015767097473, 0.8972394466400146, 0.8989565372467041, 0.902390718460083, 0.906749427318573, 0.9050323367118835, 0.9058248400688171, 0.9080702662467957, 0.90423983335495, 0.9104477763175964, 0.919561505317688, 0.9222031235694885, 0.9229956269264221, 0.9231277108192444], "val_loss": [1.080367122377668, 0.6071094444819859, 0.5259441818509784, 0.47756995473589214, 0.4391160181590489, 0.4065217205456325, 0.39493054151535034, 0.3754774417196001, 0.3584371634892055, 0.3573529975754874, 0.3437352776527405, 0.3273438385554722, 0.3210609384945461, 0.3081309029034206, 0.30874437945229666, 0.30465548379080637, 0.30540129968098234, 0.2999013832637242, 0.292989833014352, 0.3020923563412258, 0.2986604315893991, 0.2855630431856428, 0.2964919124330793, 0.3010070323944092, 0.2951779450689043, 0.2931947793279375, 0.28537330457142424, 0.2948707001549857, 0.2871746676308768, 0.29459639957972933, 0.3044494645936148, 0.2839089972632272, 0.28254527705056326, 0.2955364840371268, 0.2928401061466762, 0.29530087539127897, 0.30017917496817453], "val_accuracy": [0.5713333487510681, 0.7279999852180481, 0.7453333139419556, 0.7866666913032532, 0.800000011920929, 0.8246666789054871, 0.8320000171661377, 0.8450000286102295, 0.8479999899864197, 0.8483333587646484, 0.8576666712760925, 0.8673333525657654, 0.8693333268165588, 0.8723333477973938, 0.875, 0.875333309173584, 0.875, 0.874666690826416, 0.8816666603088379, 0.8786666393280029, 0.8806666731834412, 0.8853333592414856, 0.8806666731834412, 0.8759999871253967, 0.8773333430290222, 0.8846666812896729, 0.8856666684150696, 0.8883333206176758, 0.8896666765213013, 0.8866666555404663, 0.8836666941642761, 0.8939999938011169, 0.887666642665863, 0.8886666893959045, 0.8920000195503235, 0.890333354473114, 0.8896666765213013]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 9, 5, 4, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 9, 5, 2, 7, 1, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [2, 2, 1, 2, 0, 2, 2, 2, 1, 1, 1, 2, 2, 2, 0, 1, 2, 0, 2, 0, 2, 2, 2, 1, 2, 1, 2, 1, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [46, 75, 25, 70, 83, 90, 46, 33, 24, 64, 59], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [1, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8137142658233643, "mapping_values": [1, 56, 56, 37, 19, 9, 3, 3, 2, 1, 1, 9, 8, 5, 3, 0, 2, 1, 1, 0], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(alpha, grad)))))), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.square(tf.math.add(grad, tf.math.add(alpha, grad)))))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.square(alpha))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), alpha), grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, alpha))), grad)), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.917415347506798, 1.0932038472927226, 0.7624732037230474, 0.6644295765314089, 0.6014914420523018, 0.5534749393764818, 0.5178790425210344, 0.49488683556836466, 0.47607119907524764, 0.45078948337356917, 0.43623677970332997, 0.41393578115896446, 0.3928832893421338, 0.3745945788739836, 0.36833651392388383, 0.3564073401175438, 0.34837361523866056, 0.33973668521783607, 0.32347883816880796, 0.31901047753226475, 0.3068218421328258, 0.3031965407870465, 0.289173567724927, 0.280537371063245, 0.2711033949156353, 0.2608638013028009, 0.2532997493770034], "accuracy": [0.3427552580833435, 0.6116761565208435, 0.7042662501335144, 0.7408532500267029, 0.7696473598480225, 0.783119797706604, 0.8042530417442322, 0.8153480291366577, 0.8227446675300598, 0.8277638554573059, 0.837537944316864, 0.8449346423149109, 0.8511425256729126, 0.8594637513160706, 0.8643507957458496, 0.8647470474243164, 0.8673887252807617, 0.8726720213890076, 0.8796724081039429, 0.878879964351654, 0.8864086866378784, 0.8836349248886108, 0.8939374089241028, 0.8914278149604797, 0.8947299122810364, 0.897899866104126, 0.9037115573883057], "val_loss": [1.080373764038086, 0.6075734070369175, 0.5252840008054461, 0.47799176829201834, 0.43898948601314, 0.40535459348133634, 0.3943292328289577, 0.37859954152788433, 0.3591749838420323, 0.35333491223199026, 0.3461765306336539, 0.3304595351219177, 0.32473838329315186, 0.30813688039779663, 0.30995225054877146, 0.30229662145887104, 0.3049602678843907, 0.3017080341066633, 0.29136423553739277, 0.30152052640914917, 0.3042162231036595, 0.2891035165105547, 0.30303140197481426, 0.3082303915705, 0.28454772915158955, 0.29485889843532015, 0.2856962765966143], "val_accuracy": [0.5713333487510681, 0.7273333072662354, 0.746999979019165, 0.7856666445732117, 0.7976666688919067, 0.8270000219345093, 0.8306666612625122, 0.843999981880188, 0.8493333458900452, 0.8516666889190674, 0.8556666374206543, 0.8619999885559082, 0.8679999709129333, 0.8726666569709778, 0.8730000257492065, 0.8769999742507935, 0.8726666569709778, 0.8706666827201843, 0.8803333044052124, 0.878000020980835, 0.8796666860580444, 0.887333333492279, 0.8776666522026062, 0.875, 0.8846666812896729, 0.8826666474342346, 0.8823333382606506]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 5, 5, 2, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 1, 2, 2, 7, 2, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 0, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.091541806925022, 1.3819909220783544, 1.0679669418607043, 0.9405935302685753, 0.8357539717484428, 0.7607280649230024, 0.724254753705832, 0.7150365098072884, 0.7321796593113724, 0.6769328468967942, 0.6644387340517313, 0.6490930707431692, 0.6329470921847579, 0.6355943349626133, 0.6162939537643772, 0.6001310320956093, 0.5951513293995251, 0.5869718224475444, 0.5692828816429751, 0.5709652798743595, 0.562088303530709, 0.5482721193166472, 0.5467878960268829, 0.5462530678872025, 0.5366042106694171, 0.5232530474277015, 0.5292476728261344], "accuracy": [0.3065645098686218, 0.5068022608757019, 0.6263373494148254, 0.6514331102371216, 0.6930392384529114, 0.711530864238739, 0.7292299270629883, 0.7191916704177856, 0.7129837274551392, 0.7388719916343689, 0.7427024245262146, 0.7470611333847046, 0.7528728246688843, 0.7490423917770386, 0.7648923397064209, 0.7672698497772217, 0.7688548564910889, 0.7716285586357117, 0.7802139520645142, 0.7841764688491821, 0.7906485199928284, 0.7922335267066956, 0.7922335267066956, 0.7930260300636292, 0.7976489067077637, 0.8005547523498535, 0.8001585006713867], "val_loss": [1.2167604650769914, 0.9061564036778041, 0.6955752713339669, 0.7383985349110195, 0.5890523195266724, 0.587110195841108, 0.543456895010812, 0.5253479310444423, 0.5225764513015747, 0.4990366016115461, 0.4884758847100394, 0.4775054454803467, 0.5011024475097656, 0.47983488014766146, 0.46918679986681255, 0.4675194876534598, 0.4618702786309378, 0.43421185868127005, 0.4682290554046631, 0.451589720589774, 0.42009593759264263, 0.40975027424948557, 0.41802648987088886, 0.41240776436669485, 0.4165075421333313, 0.40837966544287546, 0.42380696535110474], "val_accuracy": [0.5370000004768372, 0.6553333401679993, 0.7016666531562805, 0.6943333148956299, 0.7273333072662354, 0.722000002861023, 0.7490000128746033, 0.7553333044052124, 0.7673333287239075, 0.7876666784286499, 0.7910000085830688, 0.7919999957084656, 0.749666690826416, 0.7816666960716248, 0.7786666750907898, 0.8003333210945129, 0.7879999876022339, 0.8206666707992554, 0.7820000052452087, 0.7926666736602783, 0.8209999799728394, 0.8296666741371155, 0.8213333487510681, 0.8149999976158142, 0.8116666674613953, 0.8246666789054871, 0.8063333630561829]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [9, 7, 7, 9, 2, 9, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 8, 9, 2, 5, 2, 1, 2, 2, 7, 2, 6, 6, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 16, 72, 98, 26, 9, 46, 33, 24, 64], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [4, 4, 3], [44], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.3248571455478668, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4074316770802744, 2.3166551292375597, 2.3035438461641293, 2.3703703435971644, 2.302133608047028, 2.2990547984960514], "accuracy": [0.204860657453537, 0.12429005652666092, 0.10896842926740646, 0.17619864642620087, 0.12296922504901886, 0.15295206010341644], "val_loss": [1.8624590465000697, 1.9769293240138464, 1.969263689858573, 1.9763984680175781, 1.9528447559901647, 1.9738501821245467], "val_accuracy": [0.25099998712539673, 0.09733333438634872, 0.1483333259820938, 0.10100000351667404, 0.21199999749660492, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 7, 5, 5, 2, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 1, 2, 2, 7, 2, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [0, 2, 2, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [59, 95, 54, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [44], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.2337142825126648, "mapping_values": [1, 6, 6, 3, 3, 1, 11, 11, 6, 5, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1930018781970095, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1966715157032013, 0.149649977684021, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.631401538848877, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.28299999237060547, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 5, 5, 2, 1, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 2, 9, 2, 5, 2, 1, 2, 2, 7, 1, 6, 8, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [76, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.302985960765522, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 5, 5, 2, 1, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 2, 9, 2, 5, 2, 1, 2, 2, 7, 1, 6, 8, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [44], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [63236243.30344447, 80269411558.60626, 4601316862811.397, 83212847311127.44, 745592292144001.5, 4421913438653631.5], "accuracy": [0.09681680053472519, 0.09879804402589798, 0.10460969805717468, 0.10051512718200684, 0.1018359512090683, 0.10368511080741882], "val_loss": [958300818.2857143, 377590260882.2857, 13267180041947.428, 168830692079323.44, 1224265893862253.8, 6201447290727863.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 5, 5, 2, 1, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 2, 9, 2, 5, 2, 1, 2, 2, 7, 1, 6, 8, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [3, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 19, 24, 96, 26, 73, 46, 33, 24, 64], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [27, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303696776677148, 2.3032382421048876, 2.3040590375689405, 2.3070637581449507, 2.309685650376942, 2.32206020262641], "accuracy": [0.09232597798109055, 0.09840179979801178, 0.09945846349000931, 0.09734513610601425, 0.1006472036242485, 0.09774138033390045], "val_loss": [1.9740098544529505, 1.9745053563799178, 1.9756486756461007, 1.9784954616001673, 1.9837913513183594, 1.9971827098301478], "val_accuracy": [0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 4, 2, 2, 4, 1, 5, 0, 0, 2, 4, 6, 2, 4, 3, 2, 5, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], [3, 6, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 0, 0], [94, 95, 54, 66, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 39, 39, 24, 15, 5, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [9, 7, 1, 9, 2, 9, 4, 1, 8, 3, 4, 5, 4, 1, 2, 1, 3, 3, 2, 8, 9, 2, 5, 2, 1, 2, 2, 7, 2, 6, 6, 4, 0, 3, 4, 5, 8, 1, 8, 0, 6, 1, 0, 6, 3, 8, 7, 9, 4, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 1, 2, 0, 2, 2, 0, 1, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 0, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 2, 3, 0, 3, 1, 2, 0, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [57, 19, 24, 96, 26, 73, 46, 33, 24, 64], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [0, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302985960765522, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 6, 5, 4, 2, 2, 4, 1, 5, 0, 0, 3, 4, 6, 2, 4, 3, 2, 5, 5, 0, 2, 5, 3, 1, 2, 7, 2, 5, 2, 8, 4, 2, 3, 4, 8, 5, 8, 8, 0, 0, 2, 9, 5, 3, 8, 7, 7, 3, 9, 2, 2, 6, 3, 1, 3, 6, 7, 6, 2, 3, 2, 5, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 2, 0, 2, 2, 0, 1, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 0, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 2, 3, 0, 3, 1, 2, 2, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [43, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 1, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 18, 15, 4, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, grad)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, grad)))), grad)))), grad))), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, grad), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 6, 5, 5, 2, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 1, 2, 2, 7, 2, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 1, 2, 2, 2, 2, 0, 1, 1, 1, 2, 2, 3, 0, 1, 1, 1, 2, 0, 1, 2, 2, 2, 3, 0, 2, 1, 2, 2, 1, 2, 3, 0, 3, 1, 2, 0, 3, 3, 1, 1, 1, 2, 3, 2, 2, 3, 0, 0, 0, 3, 2], [57, 75, 25, 22, 26, 73, 48, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 1, 2, 3, 5, 9, 8], [7, 4, 2], [72], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.1824143771824093e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05534275621175766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 5, 4, 2, 2, 4, 1, 5, 0, 0, 2, 4, 6, 2, 4, 3, 2, 5, 5, 9, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 77, 25, 22, 10, 73, 46, 33, 24, 64, 59], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 2, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3, 5], [7, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 9, 7, 3, 9, 4, 8], [5, 4, 3], [72], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 16, 14, 0, 7, 5, 4, 1, 1, 4, 2, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.square(grad), tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.303258538639793, 2.3035691264377625, 2.3016304336817917, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.08413683623075485, 0.08875974267721176, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9703822817121233, 1.9701974732535226, 1.9680421011788505, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.038333334028720856, 0.08133333176374435, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1], [3, 7, 5, 5, 2, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 1, 2, 2, 7, 2, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [53, 39, 72, 98, 26, 9, 46, 33, 24, 64], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [6, 6, 0, 3, 5, 9, 8], [5, 4, 3], [44], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303257013938651, 2.3036053424750054, 2.302374728587892, 2.301472610565083, 2.302876865323729, 2.3028095098865062], "accuracy": [0.08889182657003403, 0.08374059200286865, 0.08875974267721176, 0.08968432247638702, 0.0882314071059227, 0.0948355570435524], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 7, 5, 5, 2, 2, 4, 1, 8, 3, 4, 2, 4, 1, 2, 1, 3, 3, 5, 2, 9, 2, 5, 2, 1, 2, 2, 7, 2, 9, 0, 4, 0, 3, 4, 9, 9, 6, 8, 0, 6, 1, 0, 2, 3, 8, 7, 9, 1, 9, 2, 4, 2, 4, 2, 3, 4, 7, 2, 9, 4, 2, 7, 1, 5, 8, 4, 8, 2, 7, 7, 9, 3, 2, 0, 8, 8], [1, 2, 0, 1, 0, 2, 0, 2, 1, 1, 0, 2, 2, 3, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 1, 2, 1, 3, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 75, 25, 22, 83, 73, 46, 33, 24, 64, 59], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 9, 0, 3, 9, 4, 8], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.03400000184774399, "mapping_values": [1, 6, 6, 3, 3, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3034587998856897, 2.304912651282701, 2.305110787734411, 2.3062161438185793, 2.3098439720281285, 2.3120903529196273], "accuracy": [0.08955223858356476, 0.0812310129404068, 0.08545766770839691, 0.08070268481969833, 0.07885351777076721, 0.08057060092687607], "val_loss": [1.9708677700587682, 1.9718724659511022, 1.9732520239693778, 1.9747734069824219, 1.9765366145542689, 1.9784266608101981], "val_accuracy": [0.032999999821186066, 0.0273333340883255, 0.023333333432674408, 0.021666666492819786, 0.019999999552965164, 0.018333332613110542]}}]