[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [12, 1, 57, 12, 41]], "fitness": -0.7885714173316956, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2846100524967343, 2.2337667970703956, 2.1553718468705503, 2.0201665916463027, 1.8196170290683822, 1.595193298202165, 1.4089208528932846, 1.2756642979747976, 1.1801139597627606, 1.1037206541923499, 1.0527493243267223, 1.0013788615660566, 0.969420722683171, 0.9344310522268414, 0.8995557925279476, 0.8829496014765336, 0.8714607218001198, 0.8476553774623193, 0.8324511594791864, 0.8191824285440189, 0.8096174104590662, 0.7972232096892118, 0.7938800987912648, 0.791851458611222, 0.7682077709977589, 0.7682453384567576, 0.7592606099054027, 0.7550901675488829, 0.7444750344386395, 0.7394723283805238, 0.7237979740026431, 0.7233366317532365, 0.7251034754929588, 0.7129778293743897, 0.7168874947260463, 0.7041763683997283, 0.699666427740914, 0.6966425718459408, 0.6912738434658421, 0.6833451056618969, 0.6905262262247116, 0.6750546126569723, 0.6760516266356118, 0.6732219007776996, 0.6674230284127798, 0.6641749642654543, 0.6590249966148529, 0.6541281761022182, 0.656110942977814, 0.6537754736902723, 0.6509609173758469, 0.653217774395772, 0.6464749230306854, 0.6383503097757892, 0.6398483448890789, 0.6385734893028305, 0.6314278921714438, 0.6329834558361982, 0.6264975433493838, 0.6234105861717605, 0.6171499593949762, 0.6170606989870612, 0.6225221191950289, 0.6144446725417688, 0.6171915396927937, 0.6125143660908252, 0.5997488817613138, 0.6034473453955549, 0.6048958674791608, 0.6074032211631217], "accuracy": [0.13881917297840118, 0.258090078830719, 0.34803855419158936, 0.40549466013908386, 0.45925241708755493, 0.49808478355407715, 0.5378417372703552, 0.564258337020874, 0.5934486985206604, 0.6176198720932007, 0.6279223561286926, 0.6560559868812561, 0.659490168094635, 0.6656980514526367, 0.6827367544174194, 0.6905296444892883, 0.6921146512031555, 0.6942279934883118, 0.6988508701324463, 0.7029454708099365, 0.713379979133606, 0.7181349992752075, 0.7168141603469849, 0.7189275026321411, 0.7173424959182739, 0.72672039270401, 0.7284374833106995, 0.728701651096344, 0.7239466309547424, 0.7338528633117676, 0.735569953918457, 0.7372870445251465, 0.7382115721702576, 0.7424382567405701, 0.7403249144554138, 0.7425703406333923, 0.7465327978134155, 0.7489103078842163, 0.7510236501693726, 0.7503632307052612, 0.7466648817062378, 0.7547219395637512, 0.7506273984909058, 0.7534011602401733, 0.7576277852058411, 0.759609043598175, 0.7572315335273743, 0.761590301990509, 0.7631752490997314, 0.7592127919197083, 0.7640998363494873, 0.7576277852058411, 0.7627789974212646, 0.7642319202423096, 0.7585523724555969, 0.7718927264213562, 0.7724210619926453, 0.767401933670044, 0.7728173136711121, 0.7714964747428894, 0.7758552432060242, 0.7697794437408447, 0.7651565074920654, 0.7758552432060242, 0.7773081660270691, 0.7781006693840027, 0.7790252566337585, 0.7758552432060242, 0.7796856164932251, 0.7788931727409363], "val_loss": [1.9260646275111608, 1.8681584085736955, 1.7682632037571497, 1.5996836594172887, 1.3728327751159668, 1.1529805660247803, 0.9919886248452323, 0.8832652228219169, 0.8105431624821254, 0.7543403250830514, 0.7166961601802281, 0.6869871275765556, 0.6614138739449638, 0.6414198534829276, 0.6233569724219186, 0.6130561998912266, 0.6070974213736398, 0.5895692450659615, 0.5794157470975604, 0.5675802912030902, 0.5616095747266497, 0.5540328025817871, 0.5483364718300956, 0.5396497079304287, 0.5366812944412231, 0.5283867291041783, 0.5259368079049247, 0.5176192351749965, 0.5141268117087228, 0.5106504814965385, 0.5085641316005162, 0.5026072263717651, 0.502377952848162, 0.49630159991128103, 0.49014828886304584, 0.48514252049582346, 0.4864445073263986, 0.47928004605429514, 0.483413679259164, 0.4737532479422433, 0.47240921429225374, 0.46779496329171316, 0.46830505984170095, 0.46574718611580984, 0.4673795529774257, 0.46136869703020367, 0.4575899839401245, 0.45519944599696566, 0.45745764459882465, 0.4553162711007254, 0.4519634246826172, 0.45130237511226107, 0.446032064301627, 0.4489304508481707, 0.4504192216055734, 0.4448744058609009, 0.4435770000730242, 0.4408348798751831, 0.4369429775646755, 0.4341110076223101, 0.4350605181285313, 0.43681464876447407, 0.4316159997667585, 0.42994290590286255, 0.4307678427015032, 0.4294667499405997, 0.4294360194887434, 0.42593655415943693, 0.4245678186416626, 0.4231133886745998], "val_accuracy": [0.3713333308696747, 0.4466666579246521, 0.5026666522026062, 0.5529999732971191, 0.5879999995231628, 0.6323333382606506, 0.6726666688919067, 0.684333324432373, 0.6990000009536743, 0.7073333263397217, 0.7183333039283752, 0.715666651725769, 0.7200000286102295, 0.7419999837875366, 0.7419999837875366, 0.7353333234786987, 0.7416666746139526, 0.7509999871253967, 0.7549999952316284, 0.7630000114440918, 0.7603333592414856, 0.762666642665863, 0.7736666798591614, 0.7699999809265137, 0.7643333077430725, 0.7663333415985107, 0.7683333158493042, 0.7760000228881836, 0.7850000262260437, 0.7826666831970215, 0.7726666927337646, 0.7886666655540466, 0.7786666750907898, 0.7883333563804626, 0.7903333306312561, 0.7956666946411133, 0.7826666831970215, 0.7990000247955322, 0.7856666445732117, 0.8009999990463257, 0.8026666641235352, 0.8036666512489319, 0.7943333387374878, 0.8040000200271606, 0.7973333597183228, 0.7983333468437195, 0.8080000281333923, 0.8106666803359985, 0.8059999942779541, 0.8086666464805603, 0.8090000152587891, 0.8103333115577698, 0.8119999766349792, 0.8163333535194397, 0.8023333549499512, 0.8169999718666077, 0.812666654586792, 0.8176666498184204, 0.8196666836738586, 0.8216666579246521, 0.8223333358764648, 0.8119999766349792, 0.8243333101272583, 0.8209999799728394, 0.8270000219345093, 0.8220000267028809, 0.8213333487510681, 0.8193333148956299, 0.8230000138282776, 0.8253333568572998]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 9, 5, 0, 0, 9, 0, 8], [1, 2, 3, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.7354285717010498, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 4, 3, 2, 1, 0, 6, 3, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(beta), sigma))", "other_info": {"loss": [2.3036930869362844, 2.3033606205885957, 2.300580978897411, 2.2997723368605794, 2.2972065207035848, 2.297608130108238, 2.2955571858480766, 2.293196479295774, 2.2919745321806633, 2.2912910127242982, 2.289624694819936, 2.2866531763377838, 2.2848627540838797, 2.2837991044978265, 2.2817074932269197, 2.280075271698651, 2.280195058250251, 2.2768407739022813, 2.2769141389614775, 2.27420803345174, 2.273362225135871, 2.2713056009333163, 2.2706151895708238, 2.2689576749205824, 2.267000534090116, 2.2654202526051215, 2.2610292840296835, 2.2605841266575144, 2.2584109867820494, 2.2542554741097227, 2.253521387650431, 2.2487221907284503, 2.2473497875079094, 2.2427829077467076, 2.2411773140561766, 2.2335960131909602, 2.2317631050044864, 2.2235152650550214, 2.2208230229038777, 2.2122130784155782, 2.2079666006944563, 2.197703426760642, 2.186949109231256, 2.1781550398466214, 2.165903518826907, 2.1547216466546706, 2.1332350341226007, 2.114865538214554, 2.095740536877571, 2.0685481159143193, 2.037638339384152, 2.0061186521343974, 1.960205108120205, 1.8962931167085835, 1.8476298008895962, 1.775586143870159, 1.6956695118568923, 1.6171566432634947, 1.5424632925981576, 1.4812171147751723, 1.422151808505045, 1.3638983810614003, 1.3244701106676477, 1.2865216460100113, 1.243683305194176, 1.2167610798561026, 1.1690296191958829, 1.137838816299509, 1.123273755439347, 1.0952620053603082, 1.0753012810243419, 1.0574666240888895, 1.0434421699879397, 1.0264297046713022, 1.0000144602159358, 0.9819163512150688, 0.9785248528161714, 0.9774938452796472, 0.963668203223194, 0.9548964927130686, 0.9359538176308188, 0.9316701700643006, 0.9117152709624613, 0.9212838723092361, 0.9005925948703923, 0.8939489044879863, 0.8872681816555427, 0.8764783153365774, 0.880231508103659, 0.8646476633749335, 0.8602663975318724, 0.8530985290789097, 0.8597475857294435, 0.8441188436032538, 0.8534375565115959, 0.8392034335977854, 0.8384082796724481, 0.8343136835769025, 0.8191331988706124, 0.8253017000360984], "accuracy": [0.08558975160121918, 0.09206181764602661, 0.09655263274908066, 0.09853387624025345, 0.10593052208423615, 0.10447761416435242, 0.109232597053051, 0.11319508403539658, 0.1208558976650238, 0.12098798155784607, 0.12891295552253723, 0.12957337498664856, 0.13578127324581146, 0.1414608359336853, 0.1472724825143814, 0.14859332144260406, 0.14436666667461395, 0.1604807823896408, 0.151234969496727, 0.16259410977363586, 0.1628582775592804, 0.17236824333667755, 0.16893409192562103, 0.17223615944385529, 0.17884030938148499, 0.17461365461349487, 0.18597279489040375, 0.1884823739528656, 0.1868973672389984, 0.19614318013191223, 0.20116232335567474, 0.2094835489988327, 0.2110685557126999, 0.21621978282928467, 0.21542729437351227, 0.22652225196361542, 0.22242768108844757, 0.23880596458911896, 0.2382776439189911, 0.2448817789554596, 0.25280675292015076, 0.2538634240627289, 0.26760005950927734, 0.27024170756340027, 0.2769779562950134, 0.27777042984962463, 0.29797911643981934, 0.3074890971183777, 0.31118741631507874, 0.31501781940460205, 0.3319244384765625, 0.3349623680114746, 0.3603222966194153, 0.38185179233551025, 0.3800026476383209, 0.40589091181755066, 0.421740859746933, 0.4431383013725281, 0.45964866876602173, 0.47166821360588074, 0.48725399374961853, 0.5090476870536804, 0.516708493232727, 0.5354642868041992, 0.5453705191612244, 0.561880886554718, 0.5795799493789673, 0.5879011750221252, 0.5915995240211487, 0.6090344786643982, 0.6148461103439331, 0.6242240071296692, 0.6199973821640015, 0.624620258808136, 0.6304318904876709, 0.6421872973442078, 0.6530181169509888, 0.6454893946647644, 0.6557918190956116, 0.6539427042007446, 0.6641130447387695, 0.6662263870239258, 0.669792652130127, 0.6643772125244141, 0.6740192770957947, 0.6789063811302185, 0.6794346570968628, 0.6826046705245972, 0.6814159154891968, 0.687491774559021, 0.6852463483810425, 0.687491774559021, 0.6872276067733765, 0.694360077381134, 0.6868313550949097, 0.6915863156318665, 0.6948884129524231, 0.6971337795257568, 0.6973979473114014, 0.6971337795257568], "val_loss": [1.9700749261038644, 1.9692369869777135, 1.968095030103411, 1.9667796407427107, 1.9653738566807337, 1.963968140738351, 1.9625983919416154, 1.9611101831708635, 1.9597255843026298, 1.9583890097481864, 1.957010132925851, 1.9556305749075753, 1.9542310578482491, 1.9528368541172572, 1.951486587524414, 1.9501098224094935, 1.9487358501979284, 1.947239943913051, 1.945727961403983, 1.9440678868974959, 1.9423881939479284, 1.9406625883919852, 1.9388506071908134, 1.9369750022888184, 1.9349891117640905, 1.93289429800851, 1.930652414049421, 1.9282639367239816, 1.9256948743547713, 1.9229629380362374, 1.9199822970799036, 1.9167323112487793, 1.91337251663208, 1.9096101352146693, 1.905576297215053, 1.901038714817592, 1.8961477960859026, 1.8905972753252303, 1.884565830230713, 1.877638271876744, 1.8699958665030343, 1.8613958358764648, 1.8515726498195104, 1.8404077802385603, 1.8274190766470773, 1.8125040190560477, 1.7945806639535087, 1.7734176090785436, 1.7482055936540877, 1.7178921699523926, 1.681154830115182, 1.637906210763114, 1.5843864168439592, 1.5175923619951521, 1.4425674506596156, 1.3572744301387243, 1.2693171501159668, 1.1851238863808768, 1.107318673815046, 1.0441860130855016, 0.989166293825422, 0.9395692348480225, 0.9005887508392334, 0.8647525991712298, 0.8352807419640678, 0.8107364348002842, 0.7867907115391323, 0.7625495876584735, 0.7460858310971942, 0.7293755156653268, 0.7149522304534912, 0.7056766067232404, 0.6917761904852731, 0.677922112601144, 0.6693676710128784, 0.6598338399614606, 0.6496106556483677, 0.6426111119134086, 0.6400305884225028, 0.6361997468130929, 0.6255372422082084, 0.6162675108228411, 0.6103207724434989, 0.6049773522785732, 0.60140061378479, 0.5986132621765137, 0.5906645059585571, 0.5870932000023978, 0.5859781503677368, 0.5826033183506557, 0.5787143536976406, 0.5745598929268974, 0.5737549066543579, 0.5701471056256976, 0.5674311774117606, 0.5632842608860561, 0.5609652996063232, 0.5575999873025077, 0.5550604718072074, 0.5520598718098232], "val_accuracy": [0.03766666725277901, 0.04500000178813934, 0.05299999937415123, 0.061000000685453415, 0.07533333450555801, 0.09000000357627869, 0.10166666656732559, 0.11699999868869781, 0.12733332812786102, 0.1366666704416275, 0.14800000190734863, 0.15800000727176666, 0.1693333387374878, 0.18066667020320892, 0.18933333456516266, 0.19699999690055847, 0.20333333313465118, 0.2136666625738144, 0.2226666659116745, 0.23333333432674408, 0.24300000071525574, 0.2523333430290222, 0.26466667652130127, 0.2720000147819519, 0.2866666615009308, 0.2956666648387909, 0.30666667222976685, 0.3163333237171173, 0.32466667890548706, 0.335999995470047, 0.3463333249092102, 0.35333332419395447, 0.36500000953674316, 0.37299999594688416, 0.3776666522026062, 0.3866666555404663, 0.3933333456516266, 0.39800000190734863, 0.39933332800865173, 0.4036666750907898, 0.4073333442211151, 0.4113333225250244, 0.41600000858306885, 0.4216666519641876, 0.42899999022483826, 0.43666666746139526, 0.4403333365917206, 0.4493333399295807, 0.4580000042915344, 0.46966665983200073, 0.4819999933242798, 0.5053333044052124, 0.527999997138977, 0.546999990940094, 0.5563333630561829, 0.562666654586792, 0.5733333230018616, 0.5883333086967468, 0.6029999852180481, 0.6200000047683716, 0.637666642665863, 0.6506666541099548, 0.6639999747276306, 0.6853333115577698, 0.6903333067893982, 0.6996666789054871, 0.7016666531562805, 0.7089999914169312, 0.7099999785423279, 0.7120000123977661, 0.7223333120346069, 0.7193333506584167, 0.734000027179718, 0.7353333234786987, 0.7303333282470703, 0.7273333072662354, 0.737333357334137, 0.7350000143051147, 0.7353333234786987, 0.7296666502952576, 0.7419999837875366, 0.737666666507721, 0.7423333525657654, 0.7506666779518127, 0.746999979019165, 0.7446666955947876, 0.753333330154419, 0.750333309173584, 0.7486666440963745, 0.7566666603088379, 0.7509999871253967, 0.7563333511352539, 0.7570000290870667, 0.7606666684150696, 0.7630000114440918, 0.7636666893959045, 0.7620000243186951, 0.762333333492279, 0.7606666684150696, 0.765999972820282]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 0, 0, 0, 3, 0, 2], [51, 1, 57, 12, 41]], "fitness": -0.7251428365707397, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(grad)))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3009389634964377, 2.2943343916242904, 2.2859986164094024, 2.279760597278382, 2.2720645495598517, 2.266590389640434, 2.2590937650655603, 2.2508105479998597, 2.2433979968510727, 2.235803952290791, 2.2266626380390857, 2.215533209136763, 2.2048119342936467, 2.193614159939138, 2.1808929214419597, 2.167238728465689, 2.1553914470758264, 2.136110440567736, 2.1207100907651864, 2.1021077223520677, 2.0839562508660285, 2.0598732760994585, 2.03923815088092, 2.0161381380637686, 1.988671196796607, 1.9621813230825658, 1.9286658866703708, 1.9020473013590544, 1.871015793249639, 1.8369709296296413, 1.8058818057543566, 1.7688394022844471, 1.7420176072379523, 1.7029951499705427, 1.67856257139117, 1.6374164289093571, 1.6098085378910871, 1.5751468090569543, 1.546759787142442, 1.5145296106847397, 1.4988592343953275, 1.4618371933867917, 1.4433330243305522, 1.4133611557080903, 1.396060311720277, 1.372212766797992, 1.3415649628768334, 1.3264046965053509, 1.3108034806244597, 1.2946144682525595, 1.2764171286974568, 1.263790718820416, 1.2470974715284115, 1.2281186306213643, 1.2228920490136157, 1.2016972014932679, 1.1895170689038534, 1.1782832862741643, 1.166864480923164, 1.159553595931381, 1.1421586790293938, 1.124542342169473, 1.1277153494965524, 1.1097946955370093, 1.1081978752156132, 1.1019176568778404, 1.0781104171658709, 1.0710280754342292, 1.0768254432286475, 1.0597997962397165, 1.0520836507104188, 1.0407509780468611, 1.0419042918502914, 1.0317480161976993, 1.0169543370421474, 1.019530329902993, 1.0092058016277339, 1.0089806773092265, 1.0062505865707971, 1.006069904950789, 0.9897192083313922, 0.9928428169412227, 0.9778155763198703, 0.9875147921093357, 0.968641470058357, 0.9588097683773411, 0.9567078194598071, 0.9527124542097893, 0.9508864070603624, 0.9365559841159659, 0.9368723284503835, 0.943714402355239, 0.9382350144133104, 0.92236926053824, 0.9222745652117544, 0.9146130090108747, 0.9165281251421253, 0.9103954845274035, 0.8980506301445811, 0.9096893793902676], "accuracy": [0.09206181764602661, 0.11200633645057678, 0.13247919082641602, 0.15731078386306763, 0.1732928305864334, 0.18518029153347015, 0.20657773315906525, 0.22678641974925995, 0.2413155436515808, 0.25716549158096313, 0.2685246467590332, 0.2915070652961731, 0.30458328127861023, 0.3131686747074127, 0.33020737767219543, 0.34328359365463257, 0.3461894094944, 0.36586976051330566, 0.37062475085258484, 0.37868180871009827, 0.3851538896560669, 0.4039096534252167, 0.39968299865722656, 0.4081363081932068, 0.41909918189048767, 0.431779146194458, 0.43864747881889343, 0.4391758143901825, 0.4468366205692291, 0.45225200057029724, 0.4616298973560333, 0.468630313873291, 0.47087571024894714, 0.4807819426059723, 0.478140264749527, 0.48910316824913025, 0.49649980664253235, 0.50350022315979, 0.5144630670547485, 0.5160480737686157, 0.521067202091217, 0.5272751450538635, 0.5215955376625061, 0.5278034806251526, 0.5391625761985779, 0.5453705191612244, 0.5506538152694702, 0.5572579503059387, 0.5558050274848938, 0.5581825375556946, 0.5643904209136963, 0.5692775249481201, 0.5740324854850769, 0.5777308344841003, 0.5774666666984558, 0.585919976234436, 0.5879011750221252, 0.5915995240211487, 0.5954299569129944, 0.5997886657714844, 0.6085061430931091, 0.6053361296653748, 0.5999207496643066, 0.6159027814865112, 0.6090344786643982, 0.6197332143783569, 0.6262052655220032, 0.6301677227020264, 0.6262052655220032, 0.6326773166656494, 0.6330735683441162, 0.6366398334503174, 0.6375643610954285, 0.6392814517021179, 0.64231938123703, 0.6419231295585632, 0.6473385095596313, 0.6473385095596313, 0.6507726907730103, 0.6446968913078308, 0.6535464525222778, 0.6483951807022095, 0.6560559868812561, 0.6538106203079224, 0.656980574131012, 0.6627922058105469, 0.6597543358802795, 0.666358470916748, 0.6653017997741699, 0.6662263870239258, 0.6682076454162598, 0.6608110070228577, 0.6711134314537048, 0.6723021864891052, 0.6670188903808594, 0.6749438643455505, 0.6736230254173279, 0.6733588576316833, 0.6738871932029724, 0.67666095495224], "val_loss": [1.9639626230512346, 1.957676615033831, 1.9514158793858118, 1.9450693811689104, 1.9386074202401298, 1.93192686353411, 1.9249532563345773, 1.9175870077950614, 1.9098544120788574, 1.9016996792384557, 1.892932755606515, 1.8833979197910853, 1.8730745996747697, 1.8618662697928292, 1.8497201374598913, 1.8364183562142509, 1.8222909654889787, 1.8066322462899345, 1.7897669928414481, 1.7715596471514021, 1.7521627971104212, 1.7308366639273507, 1.7081122398376465, 1.6840743677956718, 1.6579952580588204, 1.6305464335850306, 1.6016237054552351, 1.571554252079555, 1.5402604852403914, 1.5080861704690116, 1.47486526625497, 1.4410548891339983, 1.407362699508667, 1.3732075691223145, 1.3397908891950334, 1.306046724319458, 1.2730679171425956, 1.241224936076573, 1.2103535447801863, 1.1801799024854387, 1.1523114613124303, 1.1250866481236048, 1.099799564906529, 1.075427872794015, 1.0524036884307861, 1.0303376061575753, 1.009507349559239, 0.9902352946145194, 0.9717388834272113, 0.954472541809082, 0.9379394735608783, 0.9228159700121198, 0.9081684180668422, 0.8942419801439557, 0.8816261291503906, 0.8688349042619977, 0.8571699517113822, 0.846172741481236, 0.8354692118508475, 0.8257563965661185, 0.8163542066301618, 0.806783812386649, 0.7984027181352887, 0.7897651195526123, 0.7819149664470127, 0.7747360808508736, 0.7674962793077741, 0.7599856342588153, 0.753837023462568, 0.7471038954598563, 0.7406365701130458, 0.7346658366067069, 0.7290903329849243, 0.7233925036021641, 0.7182328871318272, 0.7129499912261963, 0.707702602658953, 0.703430005482265, 0.6990848439080375, 0.6951854739870343, 0.6909733159201485, 0.6870208808353969, 0.6830271993364606, 0.679319943700518, 0.6753231116703579, 0.6718526227133614, 0.6681554317474365, 0.664763195174081, 0.6611807346343994, 0.6578133446829659, 0.6550046716417585, 0.652407169342041, 0.6498931135450091, 0.6468793494360787, 0.643663900239127, 0.6409503221511841, 0.6383908476148333, 0.635751553944179, 0.6325992345809937, 0.6303074700491769], "val_accuracy": [0.0860000029206276, 0.14100000262260437, 0.20633333921432495, 0.2613333463668823, 0.3059999942779541, 0.343666672706604, 0.36666667461395264, 0.3776666522026062, 0.39133334159851074, 0.4020000100135803, 0.4166666567325592, 0.429666668176651, 0.43299999833106995, 0.4423333406448364, 0.4493333399295807, 0.45766666531562805, 0.4703333377838135, 0.4790000021457672, 0.4906666576862335, 0.503000020980835, 0.5130000114440918, 0.5230000019073486, 0.5303333401679993, 0.5413333177566528, 0.5486666560173035, 0.5563333630561829, 0.5640000104904175, 0.5680000185966492, 0.5720000267028809, 0.578000009059906, 0.5823333263397217, 0.5893333554267883, 0.5933333039283752, 0.5993333458900452, 0.6036666631698608, 0.6066666841506958, 0.6119999885559082, 0.6173333525657654, 0.6243333220481873, 0.6299999952316284, 0.6346666812896729, 0.640999972820282, 0.6456666588783264, 0.6523333191871643, 0.6570000052452087, 0.6629999876022339, 0.668666660785675, 0.6706666946411133, 0.6713333129882812, 0.6740000247955322, 0.6776666641235352, 0.6809999942779541, 0.6833333373069763, 0.6859999895095825, 0.6880000233650208, 0.6893333196640015, 0.6890000104904175, 0.6893333196640015, 0.6913333535194397, 0.6913333535194397, 0.6926666498184204, 0.6919999718666077, 0.6940000057220459, 0.6946666836738586, 0.6959999799728394, 0.6996666789054871, 0.6986666917800903, 0.7006666660308838, 0.7006666660308838, 0.7023333311080933, 0.7046666741371155, 0.7043333053588867, 0.7093333601951599, 0.7089999914169312, 0.7123333215713501, 0.7113333344459534, 0.7113333344459534, 0.7126666903495789, 0.7149999737739563, 0.7146666646003723, 0.7183333039283752, 0.718666672706604, 0.7206666469573975, 0.7229999899864197, 0.7246666550636292, 0.7233333587646484, 0.7269999980926514, 0.7260000109672546, 0.7286666631698608, 0.7319999933242798, 0.7326666712760925, 0.734000027179718, 0.7350000143051147, 0.7379999756813049, 0.7386666536331177, 0.7386666536331177, 0.7400000095367432, 0.7419999837875366, 0.7423333525657654, 0.7433333396911621]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [75, 1, 57, 12, 41]], "fitness": -0.22514285147190094, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 10, 7, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.4119576863357026, 2.260116053987976, 2.315694504756623, 2.3050303881777086, 2.3035946604031237, 2.3032392478653656, 2.3030684933985515], "accuracy": [0.17897239327430725, 0.204860657453537, 0.13261127471923828, 0.09734513610601425, 0.09602430462837219, 0.1026284471154213, 0.09219389408826828], "val_loss": [1.964474814278739, 1.9408008711678642, 1.9771699224199568, 1.9743052210126604, 1.9736549513680595, 1.9735807010105677, 1.9737751143319267], "val_accuracy": [0.11733333021402359, 0.24433332681655884, 0.10300000011920929, 0.10300000011920929, 0.10000000149011612, 0.10300000011920929, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 0, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 2, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [12, 1, 57, 12, 41]], "fitness": -0.2208571434020996, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 14, 8, 6, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3095528361441797, 2.1720068264536616, 2.293849313232357, 2.979285395581567, 2.3077372984406876, 2.303573178293966, 2.2528702266747533, 2.2301722678525997], "accuracy": [0.20882314443588257, 0.23140932619571686, 0.12230881303548813, 0.15229164063930511, 0.09694888442754745, 0.09800554811954498, 0.17170783877372742, 0.2008981704711914], "val_loss": [1.5886109215872628, 1.9752796718052454, 1.8249937466212682, 1.9806187493460519, 1.9750170707702637, 1.9719760077340263, 1.8845594269888741, 1.9755078043256487], "val_accuracy": [0.24533332884311676, 0.10133333504199982, 0.24699999392032623, 0.09600000083446503, 0.07366666942834854, 0.10533333569765091, 0.22366666793823242, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 6, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 6, 5, 5, 0, 0, 9, 0, 8], [1, 3, 2, 0, 3, 0, 2], [12, 1, 57, 12, 41]], "fitness": -0.1282857209444046, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.math.negative(beta)))", "other_info": {"loss": [2.3037496060585663, 5218767490.238141, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08506141602993011, 0.08638224750757217, 0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9702563967023576, 1.533884216408599e+30, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03766666725277901, 0.10766666382551193, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [52, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 8, 5, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.sqrt(alpha)), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 4, 4, 8, 4, 4, 9, 6, 0, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 1, 0, 0, 2, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 72, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 2, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, grad)))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302812886071196, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 5, 5, 0, 0, 9, 0, 8], [2, 0, 0, 0, 3, 0, 2], [12, 31, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 4, 3, 3, 2, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [4.359712197370911, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.031964074820280075, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [460.590087890625, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 4, 9, 6, 8, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 2, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.square(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.348550785172019, 3.144070155836918, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04068154841661453, 0.017434949055314064, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.095787593296596, 35.04255240304129, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [3, 3], [1, 7], [71], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [60, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 4, 9, 6, 8, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 6, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 9, 0, 0, 0, 1, 0, 8], [1, 0, 1, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(grad), grad)), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.5361729884396422, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03077532723546028, 0.08611807972192764, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6.944129262651716, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.014000000432133675, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 0, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 5, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.302812886071196, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 4, 9, 6, 8, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 6, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 9, 0, 0, 0, 1, 0, 8], [0, 1, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302812886071196, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 4, 9, 6, 8, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 6, 5, 5, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 57, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 2, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.square(grad))), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3485508526258023, 3.1439717293667395, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04068154841661453, 0.01756703294813633, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0957890238080705, 35.034296308244976, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 4, 9, 6, 8, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 6, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3, 0, 0], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 2, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [12, 1, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 11, 7, 4, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 10, 6, 4, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(grad, tf.math.divide_no_nan(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.add(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 0, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 1, 2, 1, 0, 0, 9, 0, 8], [3, 2, 0, 0, 3, 0, 2], [12, 1, 60, 12, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 15, 10, 5, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.subtract(beta, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)))", "other_info": {"loss": [2.3037816703500624, 2.304079440921415, 2.302330451508586, 2.302921571153392, 2.3018484619771957, 2.3037232746458827], "accuracy": [0.08506141602993011, 0.09008057415485382, 0.09021265059709549, 0.09206181764602661, 0.0940430611371994, 0.08902391046285629], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 4, 1, 8, 4, 8, 9, 6, 0, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 0, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3, 0, 0], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 2, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 11, 11, 7, 4, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, grad)))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.3037816703500624, 2.304079440921415, 2.302330451508586, 2.302921571153392, 2.3018484619771957, 2.3037232746458827], "accuracy": [0.08506141602993011, 0.09008057415485382, 0.09021265059709549, 0.09206181764602661, 0.0940430611371994, 0.08902391046285629], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 7, 0, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 8, 5, 5, 0, 0, 9, 0, 8], [1, 0, 1, 0, 3, 0, 2], [34, 14, 57, 12, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037816703500624, 2.304079440921415, 2.302330451508586, 2.302921571153392, 2.3018484619771957, 2.3037232746458827], "accuracy": [0.08506141602993011, 0.09008057415485382, 0.09021265059709549, 0.09206181764602661, 0.0940430611371994, 0.08902391046285629], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]