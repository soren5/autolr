[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2738375580935917, 2.1780161578279555, 1.980941705259082, 1.6623261793808237, 1.3732517247092313, 1.1943158065764155, 1.0904687749963191, 1.0211320556449286, 0.9683305170510533, 0.9168900040713567, 0.8802656779325775, 0.8748191937936091, 0.8411418255042122, 0.8224100152877155, 0.8072278003777023, 0.7937846644333152, 0.7621799624118949, 0.7614056246234379, 0.7430512102178343, 0.7435828823974624, 0.7415569661914113, 0.7326651313490383, 0.7207592946505896, 0.7028183192861016, 0.7047632348583107, 0.7037091634733613, 0.6866604799780911, 0.6882125225285687, 0.6827222873915487, 0.6699020077193087, 0.6675920661225405, 0.6612707652656425, 0.6543632995151746, 0.6538728496354758, 0.6473616935778225, 0.6508395657279882, 0.6312587340872254, 0.6286006816043483, 0.6338520580672663, 0.6275357463025713, 0.6273183917734743, 0.6228235477721608, 0.6159072759569975, 0.6160451995225835, 0.6192900799741331, 0.6049899438809662, 0.601973775394872, 0.6112406292469935, 0.5975222887222589, 0.5985000472515329, 0.5848179091520439, 0.5887166673024538, 0.588089321015801, 0.5830044357642176, 0.5823018618027421, 0.5787749929891649, 0.5671956814464372, 0.577003579365815, 0.5798866390756817, 0.5727566670763683, 0.5722720640257696, 0.5686750260830367], "accuracy": [0.16140536963939667, 0.31660282611846924, 0.41183462738990784, 0.47787609696388245, 0.5482763051986694, 0.5869766473770142, 0.6196011304855347, 0.6408664584159851, 0.6535464525222778, 0.6737551093101501, 0.6868313550949097, 0.6890767216682434, 0.6989829540252686, 0.7018887996673584, 0.7087571024894714, 0.7129837274551392, 0.7224937081336975, 0.7265883088111877, 0.7346453666687012, 0.7283053994178772, 0.7313432693481445, 0.7264562249183655, 0.737022876739502, 0.7378153204917908, 0.7423061728477478, 0.7432307600975037, 0.7460044622421265, 0.7456082701683044, 0.7515519857406616, 0.7519482374191284, 0.7556465268135071, 0.7601373791694641, 0.7625148296356201, 0.7613261342048645, 0.7642319202423096, 0.7602694630622864, 0.7707040309906006, 0.7716285586357117, 0.7688548564910889, 0.7677981853485107, 0.7700436115264893, 0.7757231593132019, 0.7798177003860474, 0.7775723338127136, 0.7696473598480225, 0.77677983045578, 0.7765156626701355, 0.78113853931427, 0.7798177003860474, 0.7819310426712036, 0.7866860628128052, 0.78113853931427, 0.78113853931427, 0.78113853931427, 0.7835160493850708, 0.7862898111343384, 0.7909126877784729, 0.7927618622779846, 0.783119797706604, 0.785101056098938, 0.7880068421363831, 0.7909126877784729], "val_loss": [1.9000180108206612, 1.7658465249197823, 1.4857302393232072, 1.1511990342821394, 0.9281531742640904, 0.8084789514541626, 0.7356624603271484, 0.6894504172461373, 0.6524475812911987, 0.6236400263650077, 0.6213094336645943, 0.58903055531638, 0.581172091620309, 0.5674699034009661, 0.5595513411930629, 0.5443628004619053, 0.5356451783861432, 0.5241485493523734, 0.5200163296290806, 0.5243621894291469, 0.5042962176459176, 0.5027999877929688, 0.5022473335266113, 0.4848303624561855, 0.5036380120686123, 0.4798171009336199, 0.476976786340986, 0.4723800761359079, 0.47148759024483816, 0.47124089513506207, 0.47317285197121756, 0.4607945169721331, 0.4572394234793527, 0.4531125170843942, 0.4508000271660941, 0.4520222118922642, 0.4459074395043509, 0.44402410302843365, 0.4404667445591518, 0.43716446842466083, 0.44047932965414865, 0.4349642140524728, 0.43585771322250366, 0.4287229095186506, 0.43578167472566876, 0.4283859559467861, 0.43043430362428936, 0.434627286025456, 0.42257695538657053, 0.4218556795801435, 0.42179044655391146, 0.4204908609390259, 0.42692082268851145, 0.4139782701219831, 0.41899876083646503, 0.4107283524104527, 0.4072706869670323, 0.4141483647482736, 0.4124490363257272, 0.40427290541785105, 0.41289391687938143, 0.4063332421439035], "val_accuracy": [0.38100001215934753, 0.5143333077430725, 0.5746666789054871, 0.6336666941642761, 0.6703333258628845, 0.6826666593551636, 0.7036666870117188, 0.7120000123977661, 0.7416666746139526, 0.7403333187103271, 0.7369999885559082, 0.7519999742507935, 0.7553333044052124, 0.7559999823570251, 0.7620000243186951, 0.7599999904632568, 0.7713333368301392, 0.7760000228881836, 0.7723333239555359, 0.7749999761581421, 0.7796666622161865, 0.7833333611488342, 0.7889999747276306, 0.7886666655540466, 0.7713333368301392, 0.7940000295639038, 0.7943333387374878, 0.8003333210945129, 0.7956666946411133, 0.79666668176651, 0.7889999747276306, 0.8019999861717224, 0.8066666722297668, 0.8130000233650208, 0.8153333067893982, 0.7943333387374878, 0.8056666851043701, 0.8029999732971191, 0.8173333406448364, 0.8186666369438171, 0.8073333501815796, 0.812666654586792, 0.8203333616256714, 0.8186666369438171, 0.8203333616256714, 0.8256666660308838, 0.8176666498184204, 0.8140000104904175, 0.8273333311080933, 0.8273333311080933, 0.8259999752044678, 0.8326666951179504, 0.8040000200271606, 0.8299999833106995, 0.8096666932106018, 0.8270000219345093, 0.8353333473205566, 0.8166666626930237, 0.8343333601951599, 0.8336666822433472, 0.8196666836738586, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7814285755157471, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2738374771301566, 2.1780184155772657, 1.9809339627015388, 1.6623223555196687, 1.3732665799565051, 1.1942304875541752, 1.0903299250827567, 1.0210010006821089, 0.9681856911715546, 0.9168652352041587, 0.8807452698236349, 0.8745062470813989, 0.841175837578822, 0.821779924660248, 0.8067317947798465, 0.7943568277069292, 0.7618789713238807, 0.7608476874378332, 0.742980347797934, 0.7434781305290185, 0.7413186666169076, 0.7328270759801068, 0.7213454507660353, 0.7022625798436519, 0.7040591356760916, 0.7039632430134543, 0.686567211210956, 0.6883084968238254, 0.682688207713573, 0.6702866867753445, 0.6677556774005631, 0.6614505237497595, 0.6549898060620531, 0.654318636922694, 0.6477831281832794, 0.6505667188809674, 0.6314665109505664, 0.6289134377643433, 0.6341016810205807, 0.6287898939314961], "accuracy": [0.16140536963939667, 0.31660282611846924, 0.41183462738990784, 0.4780081808567047, 0.5484083890914917, 0.5868445634841919, 0.6194690465927124, 0.6409985423088074, 0.6528860330581665, 0.6742834448814392, 0.6880200505256653, 0.6889446377754211, 0.6979262828826904, 0.7036058902740479, 0.7099458575248718, 0.7123233675956726, 0.7239466309547424, 0.7263241410255432, 0.7346453666687012, 0.7281733155250549, 0.7302865982055664, 0.7269845604896545, 0.7376832365989685, 0.7364945411682129, 0.7420420050621033, 0.7415136694908142, 0.746268630027771, 0.7454761862754822, 0.7519482374191284, 0.7519482374191284, 0.7556465268135071, 0.7605336308479309, 0.7631752490997314, 0.7597411274909973, 0.7651565074920654, 0.7586844563484192, 0.7700436115264893, 0.7708360552787781, 0.7681944370269775, 0.765949010848999], "val_loss": [1.9000180789402552, 1.7658501352582658, 1.4857087135314941, 1.1512557779039656, 0.9280924797058105, 0.8082977533340454, 0.7355451924460275, 0.689429521560669, 0.6524828331811088, 0.6241260937282017, 0.6217695304325649, 0.5898760386875698, 0.5811947073255267, 0.5666411604200091, 0.5595661401748657, 0.5439224243164062, 0.535037466457912, 0.5252022913524083, 0.5199585471834455, 0.52303603717259, 0.5053660699299404, 0.5021893126623971, 0.5021459715706962, 0.484660199710301, 0.5062397718429565, 0.4798461709703718, 0.4768055166516985, 0.47187042236328125, 0.4714818171092442, 0.47252300807407926, 0.47368787016187397, 0.4606348105839321, 0.45772400924137663, 0.45385674067905973, 0.45088446140289307, 0.4525245087487357, 0.4462047645023891, 0.4434490885053362, 0.4407734360013689, 0.4381104367119925], "val_accuracy": [0.38100001215934753, 0.5146666765213013, 0.5746666789054871, 0.6336666941642761, 0.6710000038146973, 0.6816666722297668, 0.7043333053588867, 0.7126666903495789, 0.7413333058357239, 0.7413333058357239, 0.7383333444595337, 0.7540000081062317, 0.7573333382606506, 0.7556666731834412, 0.7620000243186951, 0.7593333125114441, 0.7726666927337646, 0.7743333578109741, 0.7739999890327454, 0.7773333191871643, 0.7796666622161865, 0.7816666960716248, 0.7879999876022339, 0.7876666784286499, 0.7706666588783264, 0.7923333048820496, 0.7960000038146973, 0.8029999732971191, 0.796999990940094, 0.7960000038146973, 0.7883333563804626, 0.8040000200271606, 0.8069999814033508, 0.812666654586792, 0.8180000185966492, 0.7933333516120911, 0.8046666383743286, 0.8046666383743286, 0.8180000185966492, 0.8180000185966492]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.21485714614391327, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [17.971694638495748, 2.5150808719926743, 2.3483309722170302, 2.6681787170958855, 2.363349368023976, 2.387256658497645, 2.375941256049633, 2.39113669426308], "accuracy": [0.17580240964889526, 0.09628847241401672, 0.14198917150497437, 0.12191256135702133, 0.10289261490106583, 0.09919429570436478, 0.10315678268671036, 0.09430722147226334], "val_loss": [2.0608085904802596, 1.9681542260306222, 2.2898192405700684, 2.0521422113691057, 2.0378407750810896, 2.095907688140869, 2.0954484258379256, 2.111710888998849], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.16766667366027832, 0.09666666388511658, 0.10300000011920929, 0.09666666388511658, 0.10300000011920929, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [66, 77, 82], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 3, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.301171491773074, 2.3009467735550015, 2.3021603844279483, 2.30291076938411, 2.3057448305647212, 2.341295292411797], "accuracy": [0.08981640636920929, 0.08928807079792023, 0.07819310575723648, 0.08730682730674744, 0.10038304328918457, 0.10196803510189056], "val_loss": [1.9687200954982214, 1.9735639435904366, 1.9731941223144531, 1.9747498376028878, 1.9816961288452148, 2.1234230313982283], "val_accuracy": [0.11833333224058151, 0.027000000700354576, 0.10733333230018616, 0.09700000286102295, 0.0949999988079071, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [44, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [98, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 3, 2, 5, 2, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 48, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(alpha, tf.math.negative(alpha)), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [79, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3384854150501777, 2.5390539234497953, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0478140264749527, 0.010566635988652706, 0.08030643314123154, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.063011033194406, 2.6682424545288086, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.015333333052694798, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 2, 5, 0, 2, 4], [1, 1, 0, 5], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [8, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3020295201826717, 2.302584937534879, 2.302585525503878, 2.302585259782577, 2.3025861417203295, 2.302584056195456], "accuracy": [0.1006472036242485, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736418724060059, 1.9736413955688477, 1.9736418724060059, 1.9736412593296595, 1.973642008645194, 1.9736436435154505], "val_accuracy": [0.10100000351667404, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 4, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, alpha)))", "other_info": {"loss": [52096.91675306503, 983912.0033020737, 4502105.6776515655, 12609439.776251486, 26955804.31171576, 48823430.28767666], "accuracy": [0.09866596013307571, 0.10117553919553757, 0.09774138033390045, 0.09311848133802414, 0.09628847241401672, 0.10500594228506088], "val_loss": [193017.25892857142, 1529698.7857142857, 5147331.571428572, 12183216.57142857, 23774658.85714286, 41059004.571428575], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.447132072397085, 1.7879078478508237e+26, 2.554700510518552, 3.93197576632164, 7.528410229968231, 13.21369709891099, 20.91428138255254], "accuracy": [0.03605864569544792, 0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.467984063284738, 2.0327019010271346, 2.6262987681797574, 4.888242040361677, 9.076713562011719, 14.98920658656529, 22.60511670793806], "val_accuracy": [0.009333333000540733, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 0, 6, 4, 0, 2, 4], [1, 1, 0, 5], [66, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [8, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 3, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 2, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [43, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [73, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 2, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.447131672146109, 1.7860935322376885e+26, 2.554696921013633, 3.9319572062020636, 7.5283709679612265, 13.213639789017483, 20.914206168623554], "accuracy": [0.03605864569544792, 0.08136309683322906, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.467979294913156, 2.0327013560703824, 2.6262901851109097, 4.888215065002441, 9.076670510428292, 14.989146641322545, 22.60504150390625], "val_accuracy": [0.009333333000540733, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [7, 5, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 2, 3, 2, 5, 2, 2, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), sigma)), tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3018780039632483, 2.3025145367577156, 2.3026097103935648, 2.302939317544784, 2.3047292853516517, 2.313682553412624], "accuracy": [0.10421344637870789, 0.1006472036242485, 0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9736197335379464, 1.9735969134739466, 1.973668098449707, 1.9743385996137346, 1.9776453290666853, 1.9958810125078474], "val_accuracy": [0.10366666316986084, 0.10133333504199982, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 2, 2, 4, 0, 8], [3, 0, 0, 0, 3, 0, 2], [50, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3032366065238334, 2.3029608113686044, 2.303147002139411, 2.3038022458325003, 2.3027483734236167, 2.300559630719599], "accuracy": [0.08638224750757217, 0.09074098616838455, 0.09074098616838455, 0.08625016361474991, 0.09325055778026581, 0.09549596905708313], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 2, 2, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3032366065238334, 2.3029608113686044, 2.303147002139411, 2.3038022458325003, 2.3027483734236167, 2.300559630719599], "accuracy": [0.08638224750757217, 0.09074098616838455, 0.09074098616838455, 0.08625016361474991, 0.09325055778026581, 0.09549596905708313], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]