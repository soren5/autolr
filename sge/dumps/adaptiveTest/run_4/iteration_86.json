[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 0, 3, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(sigma), tf.math.negative(beta)))), alpha))", "other_info": {"loss": [2.139834564375509, 1.4251314785659683, 1.1112322709689821, 0.9773321135987884, 0.8864645787422857, 0.81898638434839, 0.7637922432775023, 0.750272117239247, 0.7339180963796128, 0.6888909293691701, 0.6948716635197665, 0.6857181792057044, 0.6650760483275693, 0.6794967576497266, 0.6368996110243993, 0.630053225320643, 0.6105087725729785, 0.6361117475084137, 0.6004277370420382, 0.5874717148256308, 0.5786647949441077, 0.585423166662742], "accuracy": [0.2937524616718292, 0.5033681392669678, 0.6096948981285095, 0.6495839357376099, 0.6742834448814392, 0.6931713223457336, 0.719852089881897, 0.726192057132721, 0.7294940948486328, 0.743891179561615, 0.7403249144554138, 0.7425703406333923, 0.7452120184898376, 0.7372870445251465, 0.7605336308479309, 0.7626469135284424, 0.7650244235992432, 0.7573636174201965, 0.7791573405265808, 0.7821952104568481, 0.7868181467056274, 0.7741381525993347], "val_loss": [1.3528571469443185, 0.8374096155166626, 0.9129157066345215, 0.6841002532414028, 0.6627566984721592, 0.5708111694880894, 0.5480672972542899, 0.5489982536860875, 0.5162792716707502, 0.48902290207999094, 0.4913824626377651, 0.48431711537497385, 0.5219598667962211, 0.4848375490733555, 0.4562839610236032, 0.46179114069257465, 0.4546977962766375, 0.44674980640411377, 0.44030843462262836, 0.436740551676069, 0.43996262550354004, 0.43451946122305735], "val_accuracy": [0.5143333077430725, 0.6809999942779541, 0.5713333487510681, 0.703000009059906, 0.7149999737739563, 0.7606666684150696, 0.7586666941642761, 0.7596666812896729, 0.7706666588783264, 0.7733333110809326, 0.768666684627533, 0.7683333158493042, 0.7559999823570251, 0.7850000262260437, 0.7976666688919067, 0.7883333563804626, 0.8140000104904175, 0.809333324432373, 0.8100000023841858, 0.8103333115577698, 0.8063333630561829, 0.8066666722297668]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 1, 2, 2, 5, 9, 0, 4, 0, 8], [1, 0, 0, 2, 1, 0, 2], [3, 63, 56, 45, 68]], "fitness": -0.17571428418159485, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), beta), alpha)", "other_info": {"loss": [253363713.53945848, 7.457361749929313e+27, 8.636467350008243e+27, 8.534962782413209e+27, 9.480946896399097e+27, 1.1175236544664722e+28, 1.1009012162342549e+28, 1.107566749949146e+28, 1.108325828196167e+28, 1.0850406750889303e+28], "accuracy": [0.151234969496727, 0.10606260597705841, 0.10527011007070541, 0.11094967275857925, 0.11808215826749802, 0.12851670384407043, 0.12296922504901886, 0.1294412910938263, 0.1258750557899475, 0.1258750557899475], "val_loss": [5.821589737686396e+16, 6.681077608004612e+27, 6.675211585553158e+27, 6.652591787412104e+27, 8.474505400271302e+27, 8.464549639789738e+27, 8.455949873112541e+27, 8.44844771933072e+27, 8.577862148922413e+27, 8.579918402213811e+27], "val_accuracy": [0.09666666388511658, 0.12700000405311584, 0.12800000607967377, 0.12800000607967377, 0.16233333945274353, 0.1616666615009308, 0.16200000047683716, 0.16233333945274353, 0.1599999964237213, 0.1599999964237213]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [3, 9, 0, 2, 2, 4, 0, 7, 6, 0, 8], [1, 2, 3, 0, 3, 3, 0, 0, 0, 3, 1, 2, 2, 2], [3, 63, 56, 45, 68]], "fitness": -0.157428577542305, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.304077048925849, 2.3025679538562045, 2.3024961738034704, 2.3014795857649815, 2.301105262801443, 2.3019545051195305, 2.3019854468188314, 2.300980334394659, 2.3003462092782905, 2.2998527680972565, 2.299259449433909, 2.300409741704616, 2.3006587955284394, 2.3007462885653447, 2.3010533802607873, 2.300321130358296, 2.300363782217096, 2.300530185473987, 2.3000572380876623, 2.2985332043352633, 2.29794937590283, 2.298187420935348, 2.2985664988867818, 2.2969841717760464, 2.298836692291842, 2.296490845946651, 2.2966787595916434, 2.2976410732828567, 2.296673766531571, 2.298575268760412, 2.2971574350701442, 2.2972915963001728, 2.2974445273170474, 2.2966701849623914, 2.2963872295659784, 2.295503391550044, 2.2960696488386603, 2.295209269781217, 2.2953571465509506, 2.2949169671861425, 2.29453379895945, 2.2958454813986817, 2.296180287340865, 2.295913091283417, 2.2944607140129554, 2.294694092358423, 2.293484938095873, 2.2942727115947523, 2.293321152404787, 2.2945765541088248, 2.294249264130487, 2.293443969117652, 2.2948424787474755, 2.293071305133002, 2.294127858278695, 2.293036474039715, 2.2942168142313437, 2.291908263089461, 2.293702506622256, 2.2933205519338498, 2.2933651950648746, 2.2916879347837864, 2.29216585888634, 2.29363003046033, 2.293073382312753, 2.292276315590835, 2.2903609631981405, 2.2918747329220652, 2.290928540716649, 2.2910791287379983, 2.2901912653183247, 2.289738408106193, 2.29052602632281, 2.2908892536742766, 2.289724102109698, 2.28925051243235, 2.2890224847275866, 2.290017203915593, 2.2893192997666523, 2.2884179782779257, 2.2888630917201094, 2.2871653646951056, 2.288353592917085, 2.288325729875233, 2.2889923691954266, 2.2881575400378047, 2.2883520792692944, 2.2892175023078036, 2.288060328523008, 2.285406182171599, 2.288435589572804, 2.2877824564714473, 2.2869866485404238, 2.285929595348684, 2.286765097249154, 2.2869090519372137, 2.2850942828982435, 2.2845028388013677, 2.2844315147702217, 2.2853873999772873], "accuracy": [0.09047681838274002, 0.09166556596755981, 0.08955223858356476, 0.0936468094587326, 0.09760929644107819, 0.09166556596755981, 0.09126931428909302, 0.09787346422672272, 0.09813763201236725, 0.09536388516426086, 0.10210011899471283, 0.09602430462837219, 0.09628847241401672, 0.09021265059709549, 0.09853387624025345, 0.09219389408826828, 0.09879804402589798, 0.1006472036242485, 0.09866596013307571, 0.09998679161071777, 0.10157178342342377, 0.10421344637870789, 0.10170386731624603, 0.10698718577623367, 0.09417514503002167, 0.10870426893234253, 0.10170386731624603, 0.09642054885625839, 0.10659094154834747, 0.09985470771789551, 0.09800554811954498, 0.09998679161071777, 0.10434553027153015, 0.11411966383457184, 0.10249637067317963, 0.10645885765552521, 0.10566636174917221, 0.10579843819141388, 0.11161009222269058, 0.11042134463787079, 0.109232597053051, 0.10896842926740646, 0.10645885765552521, 0.10830801725387573, 0.10289261490106583, 0.11081759631633759, 0.11662924289703369, 0.10619468986988068, 0.11279883980751038, 0.11161009222269058, 0.11438383162021637, 0.10711926966905594, 0.11293092370033264, 0.11161009222269058, 0.11491216719150543, 0.10896842926740646, 0.11187426000833511, 0.11662924289703369, 0.11979923397302628, 0.1162329912185669, 0.11517632752656937, 0.11742173880338669, 0.11451591551303864, 0.10962884873151779, 0.11266675591468811, 0.11728965491056442, 0.12151630967855453, 0.11187426000833511, 0.12072381377220154, 0.1262712925672531, 0.11940298229455948, 0.11781799048185349, 0.12429005652666092, 0.1138555034995079, 0.12112006545066833, 0.12376172095537186, 0.12429005652666092, 0.12217672914266586, 0.12217672914266586, 0.12376172095537186, 0.12851670384407043, 0.12468630075454712, 0.12032756209373474, 0.12455421686172485, 0.12230881303548813, 0.12613920867443085, 0.12891295552253723, 0.12481838464736938, 0.1258750557899475, 0.13340377807617188, 0.12032756209373474, 0.12798838317394257, 0.12917712330818176, 0.13300752639770508, 0.12693171203136444, 0.1270637959241867, 0.14172500371932983, 0.13617752492427826, 0.13868708908557892, 0.13274335861206055], "val_loss": [1.9702205657958984, 1.970057419368199, 1.9698967252458846, 1.9697330338614327, 1.9695697511945451, 1.9694071497235979, 1.9692440714154924, 1.9690813337053572, 1.9689186641148158, 1.9687576975141252, 1.9685942786080497, 1.9684295654296875, 1.9682658059256417, 1.968102250780378, 1.9679412160600935, 1.9677792276654924, 1.9676173073904855, 1.9674553871154785, 1.9672905376979284, 1.9671269144330705, 1.9669648579188757, 1.9668050493512834, 1.9666438783918108, 1.9664818899972099, 1.966319969722203, 1.9661585944039481, 1.9659960610525948, 1.965834481375558, 1.9656734466552734, 1.9655113220214844, 1.9653502873011999, 1.9651895250592912, 1.9650303976876395, 1.9648665019444056, 1.9647046497889928, 1.964545590536935, 1.9643850326538086, 1.9642222949436732, 1.964059489113944, 1.9638985906328474, 1.9637391226632255, 1.9635766574314661, 1.963416644505092, 1.9632551329476493, 1.9630930083138602, 1.9629326547895158, 1.9627722331455775, 1.9626120839800154, 1.9624506405421667, 1.9622901507786341, 1.962130069732666, 1.9619697162083216, 1.9618110656738281, 1.9616493497576033, 1.9614906992231096, 1.9613287789481026, 1.9611671311514718, 1.9610064370291573, 1.9608469690595354, 1.9606877054486955, 1.9605293273925781, 1.960369382585798, 1.9602112770080566, 1.9600532395499093, 1.9598942484174455, 1.959733554295131, 1.9595725195748466, 1.9594121660505022, 1.9592503820146834, 1.9590870312282018, 1.9589251790727888, 1.9587657792227608, 1.9586059706551688, 1.9584471157618932, 1.9582876477922713, 1.9581266130719865, 1.957967758178711, 1.9578070640563965, 1.9576471873692103, 1.957488741193499, 1.9573275021144323, 1.9571672167096819, 1.9570081574576241, 1.9568495750427246, 1.956691128867013, 1.9565300941467285, 1.9563702855791365, 1.9562108857291085, 1.9560507365635462, 1.9558902468000139, 1.9557313237871443, 1.955571515219552, 1.9554129328046526, 1.9552533967154366, 1.9550938606262207, 1.9549357550484794, 1.9547741753714425, 1.9546141624450684, 1.9544564655848913, 1.9542945453098841], "val_accuracy": [0.036666665226221085, 0.03799999877810478, 0.039000000804662704, 0.04100000113248825, 0.04233333468437195, 0.0430000014603138, 0.044333335012197495, 0.04533333331346512, 0.04633333161473274, 0.04699999839067459, 0.04800000041723251, 0.049666665494441986, 0.050999999046325684, 0.052666667848825455, 0.05299999937415123, 0.0560000017285347, 0.05833333358168602, 0.05900000035762787, 0.06066666543483734, 0.061666667461395264, 0.06300000101327896, 0.06400000303983688, 0.06499999761581421, 0.0663333311676979, 0.06733333319425583, 0.06833333522081375, 0.06833333522081375, 0.06933332979679108, 0.07100000232458115, 0.07333333045244217, 0.07400000095367432, 0.07599999755620956, 0.07666666805744171, 0.07833333313465118, 0.08166666328907013, 0.08266666531562805, 0.08366666734218597, 0.08366666734218597, 0.08533333241939545, 0.08566666394472122, 0.08699999749660492, 0.08833333104848862, 0.08966666460037231, 0.09166666865348816, 0.09233333170413971, 0.09366666525602341, 0.0949999988079071, 0.09533333033323288, 0.09600000083446503, 0.09700000286102295, 0.09799999743700027, 0.10066666454076767, 0.10133333504199982, 0.10300000011920929, 0.10433333367109299, 0.10599999874830246, 0.10733333230018616, 0.1080000028014183, 0.109333336353302, 0.11033333092927933, 0.1120000034570694, 0.11400000005960464, 0.11566666513681412, 0.11800000071525574, 0.11933333426713943, 0.12033333629369736, 0.12333333492279053, 0.12566666305065155, 0.12700000405311584, 0.12800000607967377, 0.1289999932050705, 0.12966667115688324, 0.1313333362340927, 0.13300000131130219, 0.1340000033378601, 0.13466666638851166, 0.1366666704416275, 0.13899999856948853, 0.14033333957195282, 0.14266666769981384, 0.1446666717529297, 0.14666666090488434, 0.14933332800865173, 0.1509999930858612, 0.15299999713897705, 0.15466666221618652, 0.15666666626930237, 0.1599999964237213, 0.1613333374261856, 0.16366666555404663, 0.16566666960716248, 0.16833333671092987, 0.16966666281223297, 0.17100000381469727, 0.1720000058412552, 0.17299999296665192, 0.1756666600704193, 0.17733334004878998, 0.17900000512599945, 0.18199999630451202]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 1, 1, 2, 2, 5, 0, 0, 4, 0, 8], [3, 2, 3, 0, 2, 3, 0, 0, 0, 3, 1, 2, 2, 2], [40, 63, 56, 45]], "fitness": -0.10428571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 4, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.subtract(tf.math.add(sigma, beta), sigma), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.2571860516960343e+21, 2.6097795836661035e+21, 2.6435889899396095e+21, 2.6780367626110265e+21, 2.707114212002912e+21, 2.8326713768750534e+21], "accuracy": [0.08770307898521423, 0.08981640636920929, 0.08902391046285629, 0.09047681838274002, 0.08809932321310043, 0.08466517180204391], "val_loss": [2.0943458481487618e+21, 2.1025896068452416e+21, 2.1309779666749497e+21, 2.1744595777058363e+21, 2.2285063117768467e+21, 2.2916172638907374e+21], "val_accuracy": [0.10233332961797714, 0.09933333098888397, 0.09733333438634872, 0.0963333323597908, 0.09733333438634872, 0.09700000286102295]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 1, 0, 2, 5, 0, 0, 4, 0, 8], [3, 0, 3, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(sigma), tf.math.add(tf.math.square(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma))), beta), tf.math.pow(tf.math.negative(alpha), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 1, 0, 2, 2, 4, 0, 7, 6, 0, 8, 4, 4, 5], [1, 0, 3, 2, 1, 0, 2, 1, 2, 3], [51, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 24, 14, 10, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, beta))), alpha)), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.math.sqrt(tf.math.pow(alpha, tf.math.pow(tf.math.square(beta), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [5, 2, 5, 6, 7, 0, 0, 0, 2, 7, 8, 7, 5, 6, 9, 2, 9], [1, 1, 1, 0, 2, 3, 1], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1], [3, 1, 0, 2, 4, 5, 0, 0, 4, 1, 8, 7, 0, 1, 5, 1, 5, 4, 6, 4, 7, 6, 7], [2, 2, 3, 2, 0, 1, 3, 1, 3, 1, 2, 3, 2, 0, 0, 1], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 17, 7, 3, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 39, 23, 16, 3], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))))), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(beta), tf.math.add(tf.math.pow(tf.math.square(tf.math.negative(beta)), tf.math.negative(tf.math.pow(sigma, tf.math.subtract(tf.math.sqrt(beta), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.negative(tf.math.subtract(alpha, tf.math.square(tf.math.subtract(tf.math.square(tf.math.pow(sigma, tf.math.divide_no_nan(tf.math.pow(alpha, sigma), alpha))), beta)))), sigma))), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], [3, 1, 1, 2, 2, 5, 0, 0, 4, 0, 8, 9], [1, 2, 3, 2, 1, 0, 3], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 12, 6, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.negative(beta))), tf.math.negative(sigma)), beta), alpha), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 1, 2, 2, 5, 0, 0, 4, 0, 8], [1, 2, 3, 2, 1, 0, 3], [48, 8, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(beta)), sigma), tf.math.negative(beta)), tf.math.negative(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12719587981700897, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 9, 0, 1, 2, 4, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 3], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 2, 6, 5, 0, 0, 4, 0, 8], [1, 0, 3, 2, 3, 0, 2], [3, 8, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 2, 0, 2, 2, 5, 9, 0, 6, 0, 8], [1, 2, 2, 0, 1, 0, 3], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 11, 8, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(beta)), beta)))", "other_info": {"loss": [2.302997549464123, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 3, 0, 3, 3, 0, 0, 0, 3, 1, 2, 2, 2], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 9, 4, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(alpha, beta), sigma), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [3, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 4, 6, 0, 0, 4, 0, 8], [2, 2, 3, 0, 0, 0, 3], [3, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 16, 9, 7, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(beta), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 1, 2, 9, 2, 0, 0, 4, 0, 8], [1, 1, 3, 2, 1, 0, 3], [3, 63, 56, 45, 68]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.subtract(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta)), alpha)))", "other_info": {"loss": [2.301036513130411, 2.301305033543075, 2.3025218106815135, 2.3082282961698146, 2.4803896484405232, 4.080554812512834, 9.138696745102983, 19.90388721299288, 37.60421664049408, 65.22288896819903, 104.0869311029255, 157.50147128102014], "accuracy": [0.1006472036242485, 0.07515519857406616, 0.08611807972192764, 0.08453308790922165, 0.09060890227556229, 0.09906221181154251, 0.09826971590518951, 0.09813763201236725, 0.10038304328918457, 0.10368511080741882, 0.10170386731624603, 0.10077928751707077], "val_loss": [1.9705358913966589, 1.9730652400425501, 1.974649293082101, 1.9968460627964564, 2.5876896721976146, 5.432240077427456, 12.29960114615304, 24.78231975010463, 44.956820896693635, 74.41011047363281, 114.9331534249442, 168.10828944614954], "val_accuracy": [0.06666667014360428, 0.04233333468437195, 0.07500000298023224, 0.10066666454076767, 0.09733333438634872, 0.10100000351667404, 0.10366666316986084, 0.10100000351667404, 0.10300000011920929, 0.0963333323597908, 0.10366666316986084, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [18], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 1, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 2, 1, 0, 2], [40, 63, 56, 45]], "fitness": -0.06457142531871796, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303703529550383, 2.3015822536673576, 2.301091155670795, 2.300173351714608, 2.2998323461020926, 2.3003752485100684, 2.3002820352852353, 2.299788556881805, 2.299074272705721, 2.2992961442292628, 2.2987767400176, 2.2995343277908162, 2.3002694749624313], "accuracy": [0.09100515395402908, 0.09338264167308807, 0.0952318087220192, 0.0936468094587326, 0.09747721254825592, 0.0956280529499054, 0.09681680053472519, 0.09787346422672272, 0.10447761416435242, 0.10011887550354004, 0.10236428678035736, 0.0956280529499054, 0.09589222073554993], "val_loss": [1.9696944100516183, 1.9692589214869909, 1.969120638711112, 1.9691809245518275, 1.969261850629534, 1.9692374638148717, 1.9691075597490584, 1.9691525868007116, 1.9691176414489746, 1.969280174800328, 1.9696363040379115, 1.9699384144374303, 1.970160961151123], "val_accuracy": [0.04899999871850014, 0.052000001072883606, 0.05533333495259285, 0.05999999865889549, 0.06233333423733711, 0.06700000166893005, 0.0729999989271164, 0.07400000095367432, 0.07400000095367432, 0.07199999690055847, 0.070333331823349, 0.06966666877269745, 0.07000000029802322]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [1, 1, 0], [0, 1, 1], [2, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 9, 2, 5, 0, 0, 4, 2, 8], [2, 2, 1, 2, 0, 0, 3], [48, 59, 56, 45, 68]], "fitness": -0.061714284121990204, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 10, 7, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.square(tf.math.negative(beta)), alpha))", "other_info": {"loss": [2.3036896913531213, 2.301798181668595, 2.3016054821430085, 2.3011740558671128, 2.3006099120988948, 2.3009471450861594, 2.301106674323827, 2.3010343299203657, 2.3005654492540097, 2.3010835884395546], "accuracy": [0.09034473448991776, 0.09338264167308807, 0.09140139818191528, 0.09100515395402908, 0.09760929644107819, 0.09549596905708313, 0.09021265059709549, 0.09325055778026581, 0.09694888442754745, 0.09219389408826828], "val_loss": [1.9698920249938965, 1.969865390232631, 1.9700531959533691, 1.9703585079738073, 1.9703726087297713, 1.970663206917899, 1.970888682774135, 1.9712177004132951, 1.9715179715837752, 1.9717175619942802], "val_accuracy": [0.050333332270383835, 0.05433333292603493, 0.05766666680574417, 0.05833333358168602, 0.05900000035762787, 0.055666666477918625, 0.055666666477918625, 0.052000001072883606, 0.050999999046325684, 0.052000001072883606]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 3, 0, 0, 4, 0, 8], [3, 0, 3, 2, 1, 0, 2], [3, 8, 56, 45, 68]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))", "other_info": {"loss": [2.3041493122399115, 2.3028170519249236, 2.302914504723983, 2.3020784180980898, 2.301877524480844, 2.3028977605975647], "accuracy": [0.09021265059709549, 0.09100515395402908, 0.08889182657003403, 0.09153348207473755, 0.0952318087220192, 0.08942015469074249], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], [1, 5, 0, 2, 2, 2, 0, 0, 4, 0, 8], [1, 0, 3, 2, 1, 0, 2], [3, 63, 56, 45, 68]], "fitness": -0.037142857909202576, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041497890770697, 2.3028186217212188, 2.302917599599312, 2.3020820391885106, 2.301883323018451, 2.302905065854936], "accuracy": [0.09021265059709549, 0.09100515395402908, 0.08875974267721176, 0.09166556596755981, 0.09536388516426086, 0.08942015469074249], "val_loss": [1.9703857558114188, 1.970386300768171, 1.9703867776053292, 1.9703873906816756, 1.9703878675188338, 1.970388412475586], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [0], [1], [1, 5, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [80], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 1, 0, 2, 2, 5, 0, 0, 4, 0, 8], [1, 0, 3, 2, 1, 0, 2], [64, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3041493122399115, 2.3028170519249236, 2.302914504723983, 2.3020784180980898, 2.301877524480844, 2.3028977605975647], "accuracy": [0.09021265059709549, 0.09100515395402908, 0.08889182657003403, 0.09153348207473755, 0.0952318087220192, 0.08942015469074249], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]