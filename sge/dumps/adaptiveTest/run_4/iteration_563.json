[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.826285719871521, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.1145079038272585, 1.9699762932707243, 1.8230898157323057, 1.0838595858859097, 0.8566463385134042, 0.7679272665008814, 0.6912903885532128, 0.6666214410749488, 0.6290216554330719, 0.6112912771818645, 0.5842474344825039, 0.5754532630433181, 0.5492484361630043, 0.5461531550286547, 0.5397610770492443, 0.5290116758756571, 0.507812668319549, 0.5058664679330463, 0.484369856436428, 0.47936355341789255, 0.4669073014179981, 0.45220461810946766, 0.4631332233361186, 0.4447450000163413, 0.44344891669759345, 0.44518031184038137, 0.4119256477684409, 0.4376206131123785, 0.406404036466141, 0.395609482825629, 0.4274828298893965, 0.3882544484703438, 0.39839161606733087], "accuracy": [0.2934883236885071, 0.36983224749565125, 0.3679831027984619, 0.591731607913971, 0.6826046705245972, 0.7119271159172058, 0.7320036888122559, 0.7428345084190369, 0.7582882046699524, 0.7663452625274658, 0.7725531458854675, 0.7819310426712036, 0.7935543656349182, 0.7954035401344299, 0.7821952104568481, 0.798309326171875, 0.807158887386322, 0.807158887386322, 0.817461371421814, 0.8195747137069702, 0.8269713521003723, 0.8302733898162842, 0.8330471515655518, 0.8342359066009521, 0.8315942287445068, 0.8265751004219055, 0.8471800088882446, 0.8318583965301514, 0.8450667262077332, 0.8524633646011353, 0.8404437899589539, 0.8541803956031799, 0.8500858545303345], "val_loss": [1.8672020775931222, 1.580235821860177, 0.9466123240334647, 0.6330076456069946, 0.6319071735654559, 0.5063456126621791, 0.5013109615870884, 0.5021888869149345, 0.46992203167506624, 0.5440880060195923, 0.4957013300486973, 0.4218165704182216, 0.40103598151888165, 0.3890580024038042, 0.42985403537750244, 0.38677832909992765, 0.4010388595717294, 0.37662640639713835, 0.38486295086996897, 0.35081885542188374, 0.381520892892565, 0.41274644647325787, 0.3473315153803144, 0.34739107745034353, 0.34998174224581036, 0.34060150384902954, 0.3756592273712158, 0.33122787305286955, 0.3938206859997341, 0.35948898111070904, 0.3302552103996277, 0.38413422448294504, 0.3197904484612601], "val_accuracy": [0.429666668176651, 0.3763333261013031, 0.57833331823349, 0.7446666955947876, 0.7126666903495789, 0.7643333077430725, 0.765333354473114, 0.7853333353996277, 0.7943333387374878, 0.7440000176429749, 0.7519999742507935, 0.8133333325386047, 0.824999988079071, 0.8259999752044678, 0.8036666512489319, 0.8366666436195374, 0.8119999766349792, 0.8349999785423279, 0.8376666903495789, 0.8546666502952576, 0.8446666598320007, 0.8190000057220459, 0.8583333492279053, 0.8576666712760925, 0.8486666679382324, 0.8543333411216736, 0.8276666402816772, 0.8650000095367432, 0.8176666498184204, 0.8389999866485596, 0.8650000095367432, 0.8253333568572998, 0.8633333444595337]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 4, 4, 1, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.8117142915725708, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.018857677662141, 1.449038868944926, 1.062420995724184, 0.8775649126400139, 0.8162380092966873, 0.7932113106177389, 0.7353349175467042, 0.727672094383008, 0.6814447380390779, 0.6821151441823001, 0.6506276990774994, 0.6359106841623948, 0.613371675796418, 0.6103433351853048, 0.6307742579612182, 0.5934786002523533, 0.5798508497654974, 0.5706530168638757, 0.5652744617003649, 0.5478562111544997, 0.5498461122006442, 0.5252934049353891, 0.5405242364120962, 0.5400237219366084, 0.5091799630968877, 0.5090553366339612, 0.5221234870120723, 0.49435806258668546, 0.4947236273322107], "accuracy": [0.3319244384765625, 0.49253731966018677, 0.614317774772644, 0.674679696559906, 0.6980583667755127, 0.6944921612739563, 0.7191916704177856, 0.724210798740387, 0.7384757399559021, 0.733588695526123, 0.7512878179550171, 0.7561748623847961, 0.7681944370269775, 0.7666094303131104, 0.7572315335273743, 0.7738739848136902, 0.7738739848136902, 0.7788931727409363, 0.7820631265640259, 0.7917051911354065, 0.7893276810646057, 0.7951393723487854, 0.7924976944923401, 0.793422281742096, 0.8087438941001892, 0.8095363974571228, 0.802271842956543, 0.8149517774581909, 0.807158887386322], "val_loss": [1.6532555648258753, 0.8945038318634033, 0.7063338756561279, 0.629386135510036, 0.5872278383799961, 0.5571061372756958, 0.5712877511978149, 0.525412746838161, 0.5011099917548043, 0.5061866385596139, 0.5046940190451485, 0.4654979876109532, 0.45000151225498747, 0.48139876978737967, 0.4781921420778547, 0.4388540472303118, 0.457656843321664, 0.44318221296582905, 0.4306286573410034, 0.42134631531579153, 0.4114603229931423, 0.425010689667293, 0.4355153867176601, 0.3976372906139919, 0.400357791355678, 0.3901647244180952, 0.39303973742893766, 0.3964794703892299, 0.3897755912372044], "val_accuracy": [0.28999999165534973, 0.6363333463668823, 0.690666675567627, 0.746666669845581, 0.7310000061988831, 0.7323333621025085, 0.7253333330154419, 0.781000018119812, 0.7836666703224182, 0.7806666493415833, 0.7739999890327454, 0.8046666383743286, 0.8076666593551636, 0.7603333592414856, 0.7860000133514404, 0.8203333616256714, 0.7786666750907898, 0.7923333048820496, 0.7986666560173035, 0.8270000219345093, 0.8289999961853027, 0.8043333292007446, 0.8216666579246521, 0.8373333215713501, 0.8253333568572998, 0.8346666693687439, 0.8343333601951599, 0.8253333568572998, 0.8293333053588867]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 4, 4, 1, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [35, 42, 57, 12, 41]], "fitness": -0.6894285678863525, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.280548806077753, 2.1262463851611786, 1.620408754527624, 1.3563188075893322, 1.032365779567467, 0.9188413601179227, 0.8525178078269253, 0.8173451658883004, 0.7750954383620339, 0.7597282561942839, 0.7382751176496145, 0.7202861638526402, 0.6880799474386791, 0.6633959751103328, 0.6346924494774334, 0.6329663651037714, 0.6124212871909755, 0.6034610367501495, 0.58759383393348, 0.5742726259857609, 0.5564565339722669, 0.5520130776379638, 0.5382775861935735, 0.5383145611882288, 0.5212166121197792, 0.5149612517924341, 0.5025827258907966, 0.4935592702902256, 0.49417310363470746, 0.4730404187478504, 0.47613394322601277, 0.4660837272170544, 0.4591488152951014, 0.45570258026456223, 0.45114165745265195, 0.4480708110223845, 0.42501694237582827, 0.4238056926096844, 0.4253228173917547, 0.4281480472794204, 0.41732270865471227, 0.40507159429833467, 0.420810988570217], "accuracy": [0.14872540533542633, 0.3549068868160248, 0.47232863306999207, 0.5440496802330017, 0.6429798007011414, 0.6672830581665039, 0.6884163022041321, 0.6907938122749329, 0.707568347454071, 0.7137762308120728, 0.7194558382034302, 0.7312111854553223, 0.7380794882774353, 0.7416457533836365, 0.7656848430633545, 0.7675340175628662, 0.7696473598480225, 0.7730814814567566, 0.7798177003860474, 0.7845727205276489, 0.7877426743507385, 0.7841764688491821, 0.7889314293861389, 0.7918372750282288, 0.7984414100646973, 0.7947431206703186, 0.8050455451011658, 0.8120459914207458, 0.8150838613510132, 0.8211596608161926, 0.8216879963874817, 0.8214238286018372, 0.8227446675300598, 0.8259146809577942, 0.8245938420295715, 0.8289526104927063, 0.8368775844573975, 0.8385946154594421, 0.837537944316864, 0.834632158279419, 0.8441421389579773, 0.8421608805656433, 0.8400475382804871], "val_loss": [1.8973815100533622, 1.5779914855957031, 0.9129773548671177, 0.7235213007245745, 0.6709689753396171, 0.6376880066735404, 0.5545315061296735, 0.5576560837881905, 0.5408746174403599, 0.5621441943304879, 0.5224518094744001, 0.49374864782605854, 0.4739288943154471, 0.45662195341927664, 0.4577119009835379, 0.4480079071862357, 0.426411645753043, 0.4239793760435922, 0.416602577481951, 0.417837347303118, 0.4013150760105678, 0.3890283703804016, 0.3856908679008484, 0.3868417739868164, 0.37238645553588867, 0.36631002596446444, 0.36631338936941965, 0.3670191594532558, 0.3636053034237453, 0.35589578322001864, 0.35142827885491507, 0.3528796689850943, 0.34863790443965365, 0.34061430181775776, 0.333494884627206, 0.33359783036368235, 0.33216860464641024, 0.3264716523034232, 0.31575993980680195, 0.3172162856374468, 0.3248035567147391, 0.3225788474082947, 0.3315930111067636], "val_accuracy": [0.3726666569709778, 0.49166667461395264, 0.6690000295639038, 0.7036666870117188, 0.7016666531562805, 0.7246666550636292, 0.7553333044052124, 0.7519999742507935, 0.7590000033378601, 0.7613333463668823, 0.7633333206176758, 0.7773333191871643, 0.7820000052452087, 0.8036666512489319, 0.7889999747276306, 0.800000011920929, 0.8193333148956299, 0.8193333148956299, 0.8220000267028809, 0.8203333616256714, 0.8270000219345093, 0.828000009059906, 0.8259999752044678, 0.8276666402816772, 0.8386666774749756, 0.8410000205039978, 0.8450000286102295, 0.8460000157356262, 0.843999981880188, 0.8496666550636292, 0.8516666889190674, 0.8543333411216736, 0.8600000143051147, 0.859666645526886, 0.8629999756813049, 0.862333357334137, 0.8700000047683716, 0.8713333606719971, 0.8713333606719971, 0.8686666488647461, 0.8679999709129333, 0.8713333606719971, 0.8703333139419556]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 0, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 0, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [33, 84, 57, 12, 41]], "fitness": -0.6105714440345764, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(beta), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.21840049376215, 1.5396864842965445, 1.0632184801116171, 0.8898900825082036, 0.8200650177438419, 0.7643387031010381, 0.712689093862621, 0.6539398016096374, 0.6416776439910866, 0.6044501189022898, 0.5735473353093437, 0.5561057396371839, 0.5391201878409612, 0.5266450727305565, 0.5065921123324447, 0.5074493888661752, 0.4997772371622518, 0.5010627460257725, 0.47814607943415943, 0.46984573336655927, 0.46463180857406333, 0.4525690723868441, 0.43907010751692627, 0.4438488567352547, 0.4355602567741632, 0.44243697678612964, 0.4342928535871187, 0.4420971173840806, 0.42507227766767325, 0.42217756180542176, 0.41328888780421047, 0.4316081516912128, 0.41042377121019297, 0.41630933095340983], "accuracy": [0.23682472109794617, 0.49214106798171997, 0.632941484451294, 0.6732267737388611, 0.6892088055610657, 0.7180029153823853, 0.7296261787414551, 0.7518161535263062, 0.76542067527771, 0.7662131786346436, 0.7758552432060242, 0.7862898111343384, 0.7865539789199829, 0.8013472557067871, 0.8088759779930115, 0.8067626357078552, 0.8127063512802124, 0.8055738806724548, 0.8201030492782593, 0.8215559124946594, 0.8257825970649719, 0.8251221776008606, 0.8355567455291748, 0.8348963260650635, 0.8335754871368408, 0.8333113193511963, 0.8355567455291748, 0.8362171649932861, 0.8281601071357727, 0.8405758738517761, 0.8364813327789307, 0.8376700282096863, 0.8455950617790222, 0.8330471515655518], "val_loss": [1.5902599947793143, 0.7648934807096209, 0.7197550364903041, 0.5797696454184396, 0.5921028511864799, 0.5211865391050067, 0.4739805119378226, 0.45697144099644255, 0.4420343467167446, 0.4224029523985727, 0.40139550822121756, 0.3956370949745178, 0.39023970706122263, 0.36955740622111727, 0.35504617009844097, 0.3685619831085205, 0.3652817947523935, 0.3502397962978908, 0.3612342817442758, 0.3396196024758475, 0.3426787427493504, 0.34055693660463604, 0.3606568489755903, 0.3364790081977844, 0.34358099528721403, 0.33893139021737234, 0.33302342891693115, 0.35264367716653006, 0.34508218084062847, 0.3456666725022452, 0.3684647594179426, 0.35411239521844046, 0.34189821992601666, 0.3625099999564035], "val_accuracy": [0.4936666786670685, 0.6833333373069763, 0.6930000185966492, 0.7356666922569275, 0.7559999823570251, 0.7649999856948853, 0.7866666913032532, 0.7979999780654907, 0.8113333582878113, 0.8113333582878113, 0.8266666531562805, 0.8309999704360962, 0.8306666612625122, 0.8460000157356262, 0.8519999980926514, 0.8456666469573975, 0.8456666469573975, 0.8573333621025085, 0.8566666841506958, 0.859000027179718, 0.859333336353302, 0.8586666584014893, 0.8610000014305115, 0.8640000224113464, 0.859666645526886, 0.8569999933242798, 0.8646666407585144, 0.8616666793823242, 0.8659999966621399, 0.856333315372467, 0.8496666550636292, 0.8613333106040955, 0.8629999756813049, 0.8606666922569275]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.3691428601741791, "mapping_values": [1, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [3.3846398045783346, 2.3052983703771996, 2.3027019647165705, 2.2555691807607947, 2.424292298828244, 2.304904694192524, 2.3034750768112042, 2.3031051723224265, 2.3032344882167988], "accuracy": [0.15651829540729523, 0.09325055778026581, 0.10408136248588562, 0.16457535326480865, 0.17223615944385529, 0.09853387624025345, 0.10460969805717468, 0.1010434553027153, 0.09919429570436478], "val_loss": [1.9765588896615165, 1.9741598537990026, 1.9697206360953194, 1.7417616844177246, 1.9768690381731306, 1.9739277022225517, 1.9736225945608956, 1.9736685071672713, 1.9738012041364397], "val_accuracy": [0.10066666454076767, 0.10300000011920929, 0.12066666781902313, 0.33000001311302185, 0.09733333438634872, 0.09733333438634872, 0.10366666316986084, 0.10133333504199982, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 4, 4, 1, 9, 6, 5, 5, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.16171428561210632, "mapping_values": [1, 16, 16, 10, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 7, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.448482748193354, 2.5878129845297866, 2.474556388415366, 2.3477265850238953, 2.3370817010239873, 2.3463243441165416], "accuracy": [0.26178839802742004, 0.17474573850631714, 0.09615638852119446, 0.10579843819141388, 0.09879804402589798, 0.09853387624025345], "val_loss": [1.939046927860805, 1.9970664978027344, 2.0174031938825334, 1.9950059482029505, 2.020693847111293, 2.0194411958966936], "val_accuracy": [0.1589999943971634, 0.10066666454076767, 0.10300000011920929, 0.10000000149011612, 0.10433333367109299, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 8, 0, 4, 0, 8], [2, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 10, 7, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, beta), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.3024700122848873, 2.3058313752492943, 2.3048795268772113, 2.3075376958296583, 2.3116836989040874, 2.3130023835625204, 2.317390780234145, 2.3228284046398318, 2.329486297058974, 2.337486373151629, 2.3553168611157416, 6790.829712800346, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.08506141602993011, 0.09192973375320435, 0.08241976052522659, 0.0812310129404068, 0.08096684515476227, 0.07290978729724884, 0.07845727354288101, 0.07528728246688843, 0.07621186226606369, 0.08492933213710785, 0.09113723784685135, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9713709013802665, 1.9726908547537667, 1.9742210933140345, 1.9757755143301827, 1.977820873260498, 1.979914665222168, 1.982619149344308, 1.985964638846261, 1.9913124356951033, 2.0014335087367465, 2.028316157204764, 2.4441792803214486e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.026333333924412727, 0.02266666665673256, 0.02199999988079071, 0.023333333432674408, 0.029999999329447746, 0.03999999910593033, 0.05900000035762787, 0.07333333045244217, 0.09099999815225601, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 1, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 6, 2, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 10, 6, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 0, 1, 1, 4, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 3, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [66, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, alpha)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 1, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 2, 0, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.math.negative(alpha)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 1, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 9, 8, 8, 2, 4, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 86, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(grad, tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 0, 1, 8, 9, 6, 5, 4, 8, 1, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [36, 12, 93, 18, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [1, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 2, 5, 0, 0, 4, 0, 8], [0, 2, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 16, 11, 5, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 0, 8, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [0, 2, 3, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(sigma))", "other_info": {"loss": [2.3024699178118007, 2.30583098394177, 2.304875608952353, 2.3075253162338685, 2.311668512229481, 2.3129819602447337, 2.317382476018357, 2.3228222875704683, 2.3294761486655577, 2.337471420896241, 2.3552856385479544, 5172.88711900022, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.08506141602993011, 0.09192973375320435, 0.08241976052522659, 0.08149518072605133, 0.08096684515476227, 0.07277770340442657, 0.07845727354288101, 0.0754193663597107, 0.07621186226606369, 0.08506141602993011, 0.09100515395402908, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9713707651410783, 1.9726883343287878, 1.974215303148542, 1.9757605961390905, 1.9778072493416923, 1.9799092837742396, 1.9826226234436035, 1.9859696115766252, 1.9913152285984583, 2.001429966517857, 2.02825859614781, 4.6787030182278697e+30, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.026333333924412727, 0.02266666665673256, 0.022333333268761635, 0.023000000044703484, 0.03033333271741867, 0.03999999910593033, 0.05900000035762787, 0.07366666942834854, 0.09099999815225601, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 4, 4, 1, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 0, 0, 0, 4, 0, 8], [0, 0, 0, 0, 3, 0, 2], [33, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30290228910198, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 3, 4, 4, 1, 9, 6, 5, 4, 2, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 2, 0, 1, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 5, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 24, 17, 6, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 2], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.negative(grad))))), tf.math.add(alpha, tf.math.multiply(grad, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4431118.504014329, 83882432.59807159, 384966885.8961828, 1085195750.9443932, 2310833220.0660415, 4281994774.519614], "accuracy": [0.10091137140989304, 0.09906221181154251, 0.09853387624025345, 0.10791176557540894, 0.09826971590518951, 0.09985470771789551], "val_loss": [16586080.57142857, 132422953.14285715, 446631890.28571427, 1058332891.4285715, 2066646601.142857, 3570693485.714286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 0, 1, 8, 2, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 3, 5, 0, 0, 4, 0, 8], [0, 0, 0, 0, 3, 0, 2], [92, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 10, 5, 4], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.pow(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 9, 4, 0, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 2, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [2, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [90, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 2, 5, 4, 4, 1, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [2, 0, 0, 0, 3, 0, 2], [96, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 11, 4, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 1, 1, 1, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 3, 0, 8, 8, 3, 0, 0, 4, 0, 8], [0, 3, 1, 0, 3, 0, 2, 3, 1, 3, 3, 2, 0, 3, 1, 3, 0, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 16, 11, 6, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))), tf.math.square(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]