[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 5, 6, 5, 9, 2, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8354285955429077, "mapping_values": [1, 16, 16, 12, 4, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8991277934443351, 1.168119452310166, 0.7889224828950733, 0.6750469385058164, 0.6274205426561393, 0.5660714444514546, 0.5220116855619197, 0.5084383320720236, 0.4680523116354614, 0.4563104649655115, 0.4318649937778715, 0.4399306695018194, 0.41392686500556874, 0.3885766731206342, 0.3843186501231034, 0.37195507593757016, 0.3582987886937287, 0.346838333260791, 0.3316476082623894, 0.3343898142097397, 0.3316668416798438, 0.32016964242789314, 0.3052202432170725, 0.2889425037496393, 0.27918205135384444, 0.2727748149295666, 0.27277692746980675, 0.26771001896255475], "accuracy": [0.3517369031906128, 0.5980715751647949, 0.6984546184539795, 0.7363624572753906, 0.7598732113838196, 0.7781006693840027, 0.7998943328857422, 0.8082155585289001, 0.8239334225654602, 0.8234050869941711, 0.8399154543876648, 0.8350284099578857, 0.8437458872795105, 0.8520671129226685, 0.854708731174469, 0.8638224601745605, 0.8626337051391602, 0.8705587387084961, 0.8757099509239197, 0.8778232932090759, 0.872407853603363, 0.8786157965660095, 0.8845595121383667, 0.8868049383163452, 0.8914278149604797, 0.8944657444953918, 0.8960506916046143, 0.8960506916046143], "val_loss": [1.0913146904536657, 0.646350451878139, 0.5284386362348285, 0.48936356816973003, 0.44645064217703684, 0.4179604649543762, 0.3961982641901289, 0.3739471009799412, 0.3689747026988438, 0.3440420627593994, 0.35739741155079435, 0.33916822501591276, 0.32623053448540823, 0.31792448248182026, 0.31248198236737934, 0.3068199413163321, 0.3229963609150478, 0.30746390989848543, 0.2919608865465437, 0.3212009923798697, 0.3396823746817453, 0.2909923366137913, 0.28257287400109427, 0.29199033975601196, 0.2952833431107657, 0.28598592962537495, 0.29260891675949097, 0.305493814604623], "val_accuracy": [0.6150000095367432, 0.7203333377838135, 0.7609999775886536, 0.7716666460037231, 0.7953333258628845, 0.8149999976158142, 0.8133333325386047, 0.8473333120346069, 0.8389999866485596, 0.8539999723434448, 0.8433333039283752, 0.8560000061988831, 0.8606666922569275, 0.8679999709129333, 0.8736666440963745, 0.875333309173584, 0.8633333444595337, 0.8743333220481873, 0.8823333382606506, 0.8619999885559082, 0.8610000014305115, 0.8756666779518127, 0.8830000162124634, 0.8799999952316284, 0.8826666474342346, 0.8830000162124634, 0.8816666603088379, 0.875333309173584]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 5, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8308571577072144, "mapping_values": [1, 17, 17, 13, 4, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad))))))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8991300073108968, 1.1675732930684999, 0.7887527329999505, 0.674586422927407, 0.626435735009649, 0.5661383961500698, 0.5226734660289323, 0.5064782479955315, 0.4663290287785133, 0.45880832036472724, 0.4263350547910949, 0.44128541413976563, 0.41131629197589004, 0.384010340256257, 0.3812653232661567, 0.3724610321848636, 0.3615220462161127, 0.34711756426440005, 0.3319327548715055, 0.3329859215034517, 0.32164976023223185, 0.3158966671710379, 0.3011257045021178, 0.2941288490809344, 0.2804529338960933, 0.270720197524314, 0.2654580174459521, 0.2683337547456773, 0.253343296799331, 0.2446490543834317, 0.23559507514271266, 0.2436031476263483, 0.23352492940290462], "accuracy": [0.3517369031906128, 0.5979394912719727, 0.7000396251678467, 0.7371549606323242, 0.759080708026886, 0.7781006693840027, 0.8001585006713867, 0.8095363974571228, 0.8230088353157043, 0.8219521641731262, 0.8396512866020203, 0.8345000743865967, 0.8455950617790222, 0.852331280708313, 0.8560295701026917, 0.8623695969581604, 0.8648791313171387, 0.8684453964233398, 0.8729361891746521, 0.8775591254234314, 0.8782195448875427, 0.8828424215316772, 0.8861445188522339, 0.8848236799240112, 0.8916919827461243, 0.8994848728179932, 0.9006736278533936, 0.895918607711792, 0.90423983335495, 0.9059569239616394, 0.9099194407463074, 0.9078060984611511, 0.909259021282196], "val_loss": [1.0905401366097587, 0.6468539578574044, 0.5280513933726719, 0.48902952671051025, 0.4468860285622733, 0.4177596994808742, 0.39402542795453754, 0.37594964674540926, 0.3670045222554888, 0.3392840794154576, 0.3588616592543466, 0.33382731676101685, 0.3201741405895778, 0.31433787516185213, 0.3115175025803702, 0.3096248507499695, 0.32327254329408917, 0.30957105330058504, 0.29777707372392925, 0.30897289514541626, 0.33631913151059833, 0.2893520678792681, 0.28655376604625155, 0.2872472490583147, 0.2908943125179836, 0.2829204968043736, 0.3009158287729536, 0.2908883946282523, 0.284150949546269, 0.2920040317944118, 0.30183615003313335, 0.28808886664254324, 0.2890561648777553], "val_accuracy": [0.6153333187103271, 0.7196666598320007, 0.762666642665863, 0.7733333110809326, 0.7946666479110718, 0.8146666884422302, 0.8119999766349792, 0.8429999947547913, 0.8386666774749756, 0.8579999804496765, 0.8456666469573975, 0.8573333621025085, 0.8683333396911621, 0.8709999918937683, 0.8736666440963745, 0.8703333139419556, 0.8629999756813049, 0.8736666440963745, 0.8773333430290222, 0.8700000047683716, 0.8643333315849304, 0.8799999952316284, 0.871999979019165, 0.8820000290870667, 0.8806666731834412, 0.8826666474342346, 0.8786666393280029, 0.8849999904632568, 0.8813333511352539, 0.8813333511352539, 0.8823333382606506, 0.8840000033378601, 0.8836666941642761]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 5, 6, 5, 9, 8, 6, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 0, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [96, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.19828571379184723, "mapping_values": [1, 41, 41, 26, 15, 6, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(tf.math.divide_no_nan(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.810571032586965, 2.4081022861910504, 2.3318907759208813, 2.301241576002416, 2.3609356897508054, 2.4176222292376455, 2.394491710525541, 2.45048962658454], "accuracy": [0.1752740740776062, 0.10051512718200684, 0.13802668452262878, 0.1640470176935196, 0.12653546035289764, 0.09787346422672272, 0.10117553919553757, 0.09615638852119446], "val_loss": [2.039268902369908, 2.0088089534214566, 1.8832146780831474, 1.9030460630144392, 2.1487657683236256, 2.071106501988002, 2.037583214896066, 2.1539137022835866], "val_accuracy": [0.09666666388511658, 0.09799999743700027, 0.1653333306312561, 0.15533334016799927, 0.10100000351667404, 0.10366666316986084, 0.09733333438634872, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 2, 3, 1, 0, 6, 5, 6, 5, 9, 1, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [60, 64, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [20, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.14714285731315613, "mapping_values": [1, 18, 18, 12, 6, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))))), tf.math.subtract(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7583971137557093, 2.354278223279319, 2.2581317329986175, 2153499.9749254873, NaN, NaN, NaN, NaN], "accuracy": [0.1748778223991394, 0.1026284471154213, 0.15097081661224365, 0.189274862408638, 0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.024247850690569, 1.9159960065569197, 1.821108068738665, 6.5438616973307765e+19, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.15333333611488342, 0.18199999630451202, 0.10366666316986084, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 5, 6, 8, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 13, 4, 2, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(grad)))))))), tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.square(grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 0, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 1, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1], [6, 2, 2, 1, 2, 9, 0, 2, 9, 2, 3, 5, 7, 3, 2, 9, 4, 8, 8, 2, 3, 4, 5, 9, 6, 9], [3, 2, 3, 2, 2, 3, 3, 4, 3, 4, 0, 3, 3, 0, 5], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 10, 5, 2, 31, 31, 20, 11, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.square(beta)))))))))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 2, 8, 0, 6, 0, 6, 5, 9, 8, 2, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [93, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [0, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 26, 15, 7, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(tf.math.divide_no_nan(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)))))))))))), tf.math.add(alpha, tf.math.add(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302809390566998, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 2, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3, 3, 3, 0, 0, 3, 2, 3, 4, 4, 3, 1, 1, 0, 2, 1, 2, 0, 0, 0, 1, 2, 1, 3, 4, 0, 3, 5], [42, 95, 54, 66, 58, 56, 76, 10, 80, 42, 84, 12, 59], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [0, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 4, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302809390566998, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 5, 3, 8, 0, 6, 5, 6, 5, 9, 0, 3, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 52, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [0, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 12, 5, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(grad))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(beta, beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302809390566998, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 1, 0, 6, 5, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [60, 14, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [52], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302809390566998, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 9, 6, 1, 0, 6, 5, 6, 5, 9, 8, 6, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 1, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [7.143183540154788, 9481.51843764366, 58388027.399336286, 403556698451.3496, 2617137238769196.5, 1.6855237887637768e+19], "accuracy": [0.16695284843444824, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [26.083218710763113, 164648.28125, 1080233910.857143, 7087415211739.429, 4.650052121923233e+16, 3.050899632531718e+20], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 2, 0, 3, 5, 9, 8, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [1, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 9, 4, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 0, 3, 1, 2, 6, 5, 6, 6, 6, 1, 5, 2, 2, 6, 6, 2, 5, 3, 8, 4, 8, 4, 3, 5, 2, 7, 7, 2, 9], [1, 2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 0, 3, 3, 3, 0, 1, 1, 2, 3, 0, 2], [9, 97, 97, 21, 50, 73, 46, 33, 24], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 30, 22, 7, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad))))))))))))), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [57343.336856248374, 401.46705700601365, 98615.17144573042, 26598718.37736098, 6917158923.513407, 1671194538011.5916], "accuracy": [0.10157178342342377, 0.10606260597705841, 0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [14.476177760532924, 3258.4153878348216, 833399.2678571428, 213348512.0, 54617219072.0, 13982008082432.0], "val_accuracy": [0.10300000011920929, 0.10100000351667404, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 8, 8, 8, 1, 6, 4, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 3, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 2, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 74, 70, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.09971428662538528, "mapping_values": [1, 17, 17, 12, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7584101153623, 2.350927945912837, 2.2513809332899872, 2.4320016560411535, NaN, NaN, NaN], "accuracy": [0.1748778223991394, 0.1022322028875351, 0.1578391194343567, 0.13855500519275665, 0.10936468094587326, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.024282319205148, 1.9079223360334123, 1.9157912390572684, 1.9870037351335799, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.16366666555404663, 0.14733333885669708, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 0, 3, 8, 1, 6, 4, 6, 5, 5, 3, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 6, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 0, 3, 3, 0, 1], [9, 81, 74, 71, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [20, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.09428571164608002, "mapping_values": [1, 18, 18, 11, 7, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.75840990843475, 2.350587502572641, 2.280368872983754, 2.2669774410573797, 2.2428490536135137, 2.2715888524083825, 2.3297896006040886, 2.3474094251111954, 2.355144408810109, 2.354701995660663, 2.351631141278911], "accuracy": [0.1748778223991394, 0.10249637067317963, 0.15559370815753937, 0.13498876988887787, 0.14542332291603088, 0.1476687341928482, 0.11530841141939163, 0.1010434553027153, 0.09906221181154251, 0.09325055778026581, 0.09787346422672272], "val_loss": [2.024282319205148, 1.8971214975629533, 1.9630637850080217, 1.8965915952410017, 1.8929236275809151, 1.8420062746320451, 2.0022987638201033, 2.001572949545724, 2.024200371333531, 2.0289036887032643, 2.0243564333234514], "val_accuracy": [0.10066666454076767, 0.16566666960716248, 0.11966666579246521, 0.16200000047683716, 0.16699999570846558, 0.1743333339691162, 0.10100000351667404, 0.10133333504199982, 0.10100000351667404, 0.10366666316986084, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 1, 0, 9, 5, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [60, 14, 50, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.08742856979370117, "mapping_values": [1, 13, 13, 10, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.7584091571217844, 2.3506903724584753, 2.281310045771107, 2.269819390331324, 2.2459610133611325, 2.301255655830342, 2.3334023888557343, 2.332899845728171, 2.3445306186741526, 2.3573456742996237], "accuracy": [0.1748778223991394, 0.10249637067317963, 0.15572579205036163, 0.13432836532592773, 0.1406683325767517, 0.13234710693359375, 0.1010434553027153, 0.09826971590518951, 0.09893012791872025, 0.09734513610601425], "val_loss": [2.024282932281494, 1.8974980626787459, 1.963406767163958, 1.8949841090611048, 1.9106548854282923, 1.993497371673584, 2.0207977976117815, 2.025362968444824, 1.9939319746834892, 1.9939862659999303], "val_accuracy": [0.10066666454076767, 0.16566666960716248, 0.11900000274181366, 0.16066665947437286, 0.17166666686534882, 0.10133333504199982, 0.10366666316986084, 0.10133333504199982, 0.10100000351667404, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 2, 6, 6, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 53, 10, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.08542857319116592, "mapping_values": [1, 41, 41, 26, 15, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), grad)))))), tf.math.add(alpha, tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.300700977856, 2.3005249645763213, 2.3022034321919627, 2.3025519006744495, 2.303403759015282, 2.307463725040523, 2.3762430785086806, 3.1597551702429607], "accuracy": [0.10236428678035736, 0.09721305221319199, 0.10817593336105347, 0.14093250036239624, 0.11940298229455948, 0.10196803510189056, 0.09760929644107819, 0.09866596013307571], "val_loss": [1.9700328963143485, 1.9731251171657018, 1.9735143525259835, 1.9740623065403529, 1.9752082824707031, 1.9883794103349959, 2.224118028368269, 3.888223648071289], "val_accuracy": [0.11500000208616257, 0.09700000286102295, 0.13966666162014008, 0.12166666984558105, 0.09600000083446503, 0.10333333164453506, 0.10000000149011612, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 5, 1, 0, 9, 5, 6, 5, 9, 4, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 0, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.081142857670784, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(grad, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.758518182181128, 2.349431997623426, 2.2508095770684595, 2.2340677214997746, 2.2192444952172594, 2.349571103543307, 2.2796221280756126, 2.292721541991339, 2.3211565306158017, 2.3054273011362896, 2.294526457046521], "accuracy": [0.17461365461349487, 0.1018359512090683, 0.16166952252388, 0.1508387327194214, 0.15797120332717896, 0.13419628143310547, 0.14581957459449768, 0.11900673806667328, 0.11728965491056442, 0.108440101146698, 0.1216483935713768], "val_loss": [2.0242013250078474, 1.9081436565944128, 1.8862201145717077, 1.861574445452009, 2.0213029044015065, 1.8787960324968611, 1.9699290139334542, 1.9508213315691267, 1.9487252916608537, 1.938030447278704, 2.0037121772766113], "val_accuracy": [0.10066666454076767, 0.1626666635274887, 0.1626666635274887, 0.16233333945274353, 0.140666663646698, 0.16699999570846558, 0.1316666603088379, 0.1613333374261856, 0.12666666507720947, 0.14100000262260437, 0.15133333206176758]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 5, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026504574230144, 2.3017078283015433, 2.3027053052849067, 2.302538926874437, 2.302548054486155, 2.300852146382975], "accuracy": [0.09272222965955734, 0.08730682730674744, 0.09219389408826828, 0.08928807079792023, 0.0936468094587326, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 5, 3, 8, 0, 6, 9, 6, 5, 9, 8, 9, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 42, 97, 49, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 6, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 8, 8, 5, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026504574230144, 2.3017078283015433, 2.3027053052849067, 2.302538926874437, 2.302548054486155, 2.300852146382975], "accuracy": [0.09272222965955734, 0.08730682730674744, 0.09219389408826828, 0.08928807079792023, 0.0936468094587326, 0.08928807079792023], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]