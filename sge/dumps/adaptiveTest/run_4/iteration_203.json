[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7971428632736206, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2560296285390193, 2.053872392398334, 1.610862436925636, 1.2801192344345074, 1.091760525503777, 1.0012360755573126, 0.9321426189318939, 0.8738833729144746, 0.8455326859630755, 0.8357264009748294, 0.8024222776165822, 0.7800577485786532, 0.7827371300376874, 0.7617319067392714, 0.7382270110565138, 0.7217288857453598, 0.7124960361108363, 0.7019035761240782, 0.7007915750313208, 0.6802917019156669, 0.6800543287599942, 0.6646441061892577, 0.6558599659023882, 0.6643173046761406, 0.6555969668196775, 0.6415575673598749, 0.6355070838791551, 0.6302946167552098, 0.6308476186982708, 0.6249435540549964, 0.6232824251006512, 0.6125832437650166, 0.6085935799736373, 0.6036004988493118, 0.6046773513641025, 0.6019589924903641, 0.5904167330874397, 0.5926830571136454, 0.5898913807164188, 0.5831835928090481, 0.5874529327651561, 0.5718412503212387, 0.5806398202934915], "accuracy": [0.201294407248497, 0.3897767663002014, 0.48949941992759705, 0.5624092221260071, 0.6106194853782654, 0.6473385095596313, 0.6654338836669922, 0.6889446377754211, 0.6963412761688232, 0.6989829540252686, 0.7094175219535828, 0.7210407853126526, 0.713379979133606, 0.7185312509536743, 0.7304186820983887, 0.7346453666687012, 0.7349095344543457, 0.7457403540611267, 0.7442874312400818, 0.7471932172775269, 0.7486461400985718, 0.7557786107063293, 0.757099449634552, 0.7510236501693726, 0.7585523724555969, 0.7607977986335754, 0.7646281719207764, 0.7668735980987549, 0.7667415142059326, 0.7705719470977783, 0.7662131786346436, 0.7700436115264893, 0.7734777331352234, 0.7750627398490906, 0.7790252566337585, 0.7802139520645142, 0.7814027070999146, 0.7781006693840027, 0.7823272943496704, 0.7821952104568481, 0.7790252566337585, 0.791969358921051, 0.7820631265640259], "val_loss": [1.849717276436942, 1.5091234956468855, 1.0441711630140031, 0.8383956125804356, 0.7386264971324376, 0.6902676820755005, 0.6314506360462734, 0.6032725913184029, 0.5853696550641742, 0.5824093648365566, 0.5566660846982684, 0.5562598534992763, 0.5443476097924369, 0.5273336342402867, 0.5094586440495082, 0.5012787069593158, 0.5037668432508197, 0.5078063181468419, 0.48454359599522184, 0.48452786036900114, 0.47129777499607634, 0.4702686241694859, 0.4635587079184396, 0.46864289896828787, 0.450642602784293, 0.4595247336796352, 0.44458212171282085, 0.4398612976074219, 0.44128446919577463, 0.4470718077250889, 0.4346396582467215, 0.4378555587359837, 0.4364381262234279, 0.43634068965911865, 0.43316069671085905, 0.4294150812285287, 0.4207017421722412, 0.4200221129826137, 0.4114180973597935, 0.42218007360185894, 0.41459116765431, 0.41486176422664095, 0.4111499786376953], "val_accuracy": [0.42633333802223206, 0.5643333196640015, 0.6643333435058594, 0.6883333325386047, 0.6869999766349792, 0.7043333053588867, 0.734000027179718, 0.7416666746139526, 0.7396666407585144, 0.7416666746139526, 0.7519999742507935, 0.7426666617393494, 0.7516666650772095, 0.7699999809265137, 0.7883333563804626, 0.7739999890327454, 0.7753333449363708, 0.7760000228881836, 0.7823333144187927, 0.7916666865348816, 0.7903333306312561, 0.8050000071525574, 0.7906666398048401, 0.7913333177566528, 0.8076666593551636, 0.7993333339691162, 0.8056666851043701, 0.8119999766349792, 0.8140000104904175, 0.8083333373069763, 0.8149999976158142, 0.8190000057220459, 0.8076666593551636, 0.8100000023841858, 0.8176666498184204, 0.8130000233650208, 0.8246666789054871, 0.8286666870117188, 0.828000009059906, 0.8226666450500488, 0.8270000219345093, 0.8236666917800903, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7831428647041321, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2567593247080207, 2.056724412660746, 1.6222829008933781, 1.279669340512441, 1.0981517061660035, 1.017881266326952, 0.9338849688313184, 0.8897492782850118, 0.8583691923011485, 0.8292024733289326, 0.8062851941029724, 0.770158019953589, 0.7737098572166321, 0.7515845351514563, 0.7246603107943652, 0.6958231576256481, 0.7265141524218014, 0.6977569674535465, 0.6989792849976294, 0.686178216506241, 0.672765665971655, 0.6778361090437894, 0.6570357752671379, 0.6545424728408671, 0.6695526651718267, 0.6432233484524148, 0.6317828808399538, 0.6332073315354134, 0.6234845004817356, 0.6190302677756649, 0.6095274464407964, 0.6133130159376162, 0.6006904904632332], "accuracy": [0.2032756507396698, 0.3875313699245453, 0.48989564180374146, 0.5633337497711182, 0.6190727949142456, 0.6382247805595398, 0.6634526252746582, 0.6811517477035522, 0.6921146512031555, 0.6995112895965576, 0.7055870890617371, 0.7162858247756958, 0.7144366502761841, 0.7265883088111877, 0.7322678565979004, 0.7464007139205933, 0.7317395210266113, 0.7494386434555054, 0.7432307600975037, 0.7506273984909058, 0.7530049085617065, 0.7506273984909058, 0.7622507214546204, 0.7611940503120422, 0.7589486241340637, 0.7640998363494873, 0.7613261342048645, 0.7667415142059326, 0.7697794437408447, 0.7692511081695557, 0.7761194109916687, 0.7754589915275574, 0.7799497842788696], "val_loss": [1.8502232687813895, 1.509847572871617, 1.0492058140890939, 0.8314699104854039, 0.721099887575422, 0.690879396029881, 0.6328239270618984, 0.5997950690133231, 0.5908653565815517, 0.5876347848347255, 0.5558392490659442, 0.5418107679912022, 0.533470869064331, 0.5187926803316388, 0.5042012759617397, 0.5042494194848197, 0.49609555516924175, 0.4842120238712856, 0.4860109942299979, 0.47819721698760986, 0.4757270302091326, 0.4709451368876866, 0.4676651103155954, 0.5026595081601825, 0.4539694275174822, 0.46305014405931744, 0.45350117342812674, 0.44316114698137554, 0.453221252986363, 0.43366330010550364, 0.45351575102124897, 0.431719286101205, 0.42890610865184237], "val_accuracy": [0.42800000309944153, 0.5849999785423279, 0.6196666955947876, 0.6866666674613953, 0.7163333296775818, 0.7053333520889282, 0.734000027179718, 0.7526666522026062, 0.7356666922569275, 0.7416666746139526, 0.7593333125114441, 0.7590000033378601, 0.7696666717529297, 0.7739999890327454, 0.781000018119812, 0.7726666927337646, 0.7846666574478149, 0.7923333048820496, 0.7903333306312561, 0.8003333210945129, 0.7770000100135803, 0.7953333258628845, 0.8026666641235352, 0.7596666812896729, 0.8023333549499512, 0.7839999794960022, 0.8133333325386047, 0.8196666836738586, 0.7983333468437195, 0.815666675567627, 0.7923333048820496, 0.8140000104904175, 0.8183333277702332]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [22, 63, 56, 45]], "fitness": -0.1128571406006813, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3016073195185753, 2.3011989109803657, 2.301170839027029, 2.301653774013577, 2.302134587543988, 2.302286753454827, 2.3024477551500198, 2.3025482543912057, 2.302577301968106, 2.3025885036419633, 2.3025846705854276], "accuracy": [0.08836349099874496, 0.09787346422672272, 0.10011887550354004, 0.10210011899471283, 0.10289261490106583, 0.10738343745470047, 0.09893012791872025, 0.10130762308835983, 0.09945846349000931, 0.09985470771789551, 0.09998679161071777], "val_loss": [1.9700609615870885, 1.9712049620492118, 1.9723686490740096, 1.9730415344238281, 1.973433494567871, 1.9735935074942452, 1.9736389432634627, 1.973644188472203, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0729999989271164, 0.10333333164453506, 0.10366666316986084, 0.0833333358168602, 0.10300000011920929, 0.11733333021402359, 0.10499999672174454, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [94, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.303087370821734, 2.3025853318970326, 2.3025852598770498, 2.302585313821182, 2.302585142856387, 2.3025851882349593, 2.3025851968949924, 2.302585390312891, 2.3025851697812163, 2.3025852192536225], "accuracy": [0.09496764093637466, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.9736439841134208, 1.9736439841134208, 1.9736439841134208, 1.9736440522330148, 1.9736439159938268, 1.973644188472203, 1.9736439841134208, 1.9736439841134208, 1.9736438478742326], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0, 5], [22, 45, 67], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1171904225.2175918, 22958158310.91058, 105919075918.92009, 294461391650.86145, 627625989907.8484, 1173943633008.1248], "accuracy": [0.09919429570436478, 0.09959053993225098, 0.09959053993225098, 0.10157178342342377, 0.09760929644107819, 0.10394927859306335], "val_loss": [4464626980.571428, 35706215277.71429, 120496460361.14285, 285605990985.1429, 557810506605.7142, 963879857590.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [26, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(sigma))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 9, 0, 6, 5, 5, 0, 0, 4, 0, 8], [3, 1, 0, 1, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.304878964069544, 2.5524868865322365, 7.503001047304955, 16.622885787302806, 25.835058122593825, 35.04612370416583], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.992586408342634, 3.4703027180262973, 10.998471941266741, 18.896107264927455, 26.78771209716797, 34.68550763811384], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.359649491993475, 1814.8079161252863, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03619072958827019, 0.03817197307944298, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1507013184683665, 101168391314.28572, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0063333334401249886, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [94, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 5, 5, 3, 2, 1, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19733192026615143, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0, 2], [11, 45, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [24, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030872988962243, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 1, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [94, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 0, 8, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [26, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3018124698096765, 2.3024962035310015, 2.3025852689149753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9734302929469518, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [18, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [53, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3596491151403334, 1818.7029654357127, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03619072958827019, 0.03803988918662071, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1506835392543246, 101819968950.85715, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0063333334401249886, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [11, 45, 36], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(sigma))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [6, 3, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.05285714194178581, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1412550421725787e+20, 2.547730824033285e+20, 2.445319652652612e+20, 2.4682402227673475e+20, 2.4525278290940382e+20, 2.513610265260144e+20], "accuracy": [0.08109892904758453, 0.0804385170340538, 0.07938185334205627, 0.08136309683322906, 0.08479725569486618, 0.08215559273958206], "val_loss": [1.007842616579478e+20, 1.007842616579478e+20, 1.007842616579478e+20, 1.007842616579478e+20, 1.007842616579478e+20, 1.007842616579478e+20], "val_accuracy": [0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986, 0.049666665494441986]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 0, 8, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 2, 2], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [7, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3021318199864123, 2.3028416310508, 2.302731402782228, 2.3037750713105027, 2.303306738241647, 2.302831036083104], "accuracy": [0.08519349992275238, 0.09232597798109055, 0.09681680053472519, 0.09615638852119446, 0.09021265059709549, 0.09153348207473755], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 0, 8, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 2], [96, 12, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3021318199864123, 2.3028416310508, 2.302731402782228, 2.3037750713105027, 2.303306738241647, 2.302831036083104], "accuracy": [0.08519349992275238, 0.09232597798109055, 0.09681680053472519, 0.09615638852119446, 0.09021265059709549, 0.09153348207473755], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]