[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8222857117652893, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9713739822600826, 1.4126095791156534, 1.0452281710273632, 0.868151416805017, 0.781180349717035, 0.7017487299724136, 0.6857782216623806, 0.6817161940533204, 0.6552720131214033, 0.6384614757684716, 0.6252924084206771, 0.5687209098582506, 0.566149866623476, 0.5726221840316436, 0.539591557841653, 0.53285473641419, 0.5239623372958809, 0.5272501297969199, 0.5035942001640994, 0.47573329285308746, 0.4927460023669078, 0.4712264600478427, 0.4579102238840698, 0.4547347121187693, 0.47541011153289653, 0.4483123391909984], "accuracy": [0.3357548415660858, 0.5303130149841309, 0.6206578016281128, 0.669792652130127, 0.6988508701324463, 0.7302865982055664, 0.7341170310974121, 0.7367587089538574, 0.7460044622421265, 0.7531369924545288, 0.7617223858833313, 0.7802139520645142, 0.7812706232070923, 0.7777044177055359, 0.7952714562416077, 0.7906485199928284, 0.8024039268493652, 0.796328067779541, 0.8035926818847656, 0.8201030492782593, 0.8115176558494568, 0.8228767514228821, 0.8248580098152161, 0.8278959393501282, 0.8215559124946594, 0.8264430165290833], "val_loss": [1.242532185145787, 0.829692006111145, 0.6292648485728672, 0.6616141966411045, 0.5632306167057582, 0.5540060997009277, 0.5206360816955566, 0.5258340154375348, 0.4859112160546439, 0.49005418164389475, 0.46831795147487093, 0.45962631702423096, 0.43766496011189054, 0.49873987265995573, 0.42327546221869333, 0.40584354741232737, 0.3850031665393284, 0.4169392841202872, 0.3929243343217032, 0.3863205313682556, 0.35592090232031687, 0.36717164516448975, 0.3975458911487034, 0.3816137824739729, 0.36419276680265156, 0.35811205421175274], "val_accuracy": [0.5820000171661377, 0.6396666765213013, 0.7396666407585144, 0.6926666498184204, 0.7523333430290222, 0.7480000257492065, 0.7603333592414856, 0.7379999756813049, 0.7710000276565552, 0.7693333625793457, 0.8033333420753479, 0.7763333320617676, 0.8113333582878113, 0.7786666750907898, 0.8133333325386047, 0.8233333230018616, 0.8309999704360962, 0.8096666932106018, 0.8276666402816772, 0.8306666612625122, 0.8556666374206543, 0.8433333039283752, 0.8226666450500488, 0.8356666564941406, 0.8496666550636292, 0.8510000109672546]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 8, 1, 2, 5, 2, 0, 6, 5, 2, 4, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7891428470611572, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 16, 8, 1, 5, 3, 2, 1, 0, 6, 3, 3, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, beta)))))), tf.math.add(beta, alpha))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), sigma), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0854912331516497, 1.3693020898337536, 1.0963203591709014, 0.9093816908532287, 0.8905847969150908, 0.8132711969834624, 0.7539943255500834, 0.8012199407681309, 0.7071783764408627, 0.7012400711374732, 0.6742785486247892, 0.6653068940464091, 0.656587005377981, 0.6325353356069656, 0.6360649068625438, 0.6019368804504118, 0.5931102464290705, 0.601565713265852], "accuracy": [0.31343284249305725, 0.5193501710891724, 0.6096948981285095, 0.6732267737388611, 0.6720380187034607, 0.7030775547027588, 0.724210798740387, 0.6991150379180908, 0.7403249144554138, 0.7400607466697693, 0.7549861073493958, 0.7531369924545288, 0.7536653280258179, 0.763439416885376, 0.7642319202423096, 0.7766477465629578, 0.7775723338127136, 0.7726852297782898], "val_loss": [1.1981982503618513, 0.8717614242008754, 0.6679867335728237, 0.6240528651646206, 0.6473064252308437, 0.5996039594922747, 0.6148228134427752, 0.5673352990831647, 0.5079137938363212, 0.4855786902563913, 0.510060020855495, 0.4924537454332624, 0.46108206680842806, 0.47386063848223003, 0.47251583848680767, 0.4395040614264352, 0.4367989982877459, 0.4410581077848162], "val_accuracy": [0.5803333520889282, 0.6486666798591614, 0.7289999723434448, 0.7146666646003723, 0.706333339214325, 0.7196666598320007, 0.7289999723434448, 0.7326666712760925, 0.7820000052452087, 0.793666660785675, 0.753000020980835, 0.7666666507720947, 0.8026666641235352, 0.7879999876022339, 0.7973333597183228, 0.79666668176651, 0.7929999828338623, 0.7943333387374878]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 3, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [0, 3, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [31, 63, 57, 12]], "fitness": -0.7671428322792053, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.square(tf.math.multiply(tf.math.add(beta, alpha), tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2824594806670637, 2.230094244199548, 2.1469785225877924, 2.006545156157799, 1.7971131245158745, 1.5635245941601976, 1.3733730705076315, 1.2532931131977116, 1.1598723779154838, 1.087206901072385, 1.0429753807825168, 0.9950950778927298, 0.9609948215215686, 0.9151167435227856, 0.9049147341497318, 0.8780795519913445, 0.8652531692947395, 0.8438344560735781, 0.825697141773177, 0.8132576574234993, 0.8116836272934881, 0.7899960700499777, 0.7762110316049563, 0.7710145485242124, 0.7583608006316248, 0.7590862248063859, 0.743158745720024, 0.7458321938362293, 0.735218678183953, 0.724810335779738, 0.7205582532223268, 0.7278631986203116, 0.7151838988912042, 0.7089324809336282, 0.7075230355716857, 0.6994511307096752, 0.695721913999523, 0.692886745838394, 0.6786697738206209, 0.6845709210956228, 0.679754458870697, 0.6804662700169248], "accuracy": [0.13815876841545105, 0.261260062456131, 0.3498877286911011, 0.4076079726219177, 0.45489367842674255, 0.502971887588501, 0.5448421835899353, 0.5683529376983643, 0.5946374535560608, 0.6174877882003784, 0.6305639743804932, 0.6509047746658325, 0.6553955674171448, 0.6676793098449707, 0.6758684515953064, 0.689869225025177, 0.683000922203064, 0.6997754573822021, 0.7016246318817139, 0.7065116763114929, 0.7077004313468933, 0.7169462442398071, 0.7211728692054749, 0.7256637215614319, 0.7264562249183655, 0.7235503792762756, 0.7273808121681213, 0.724210798740387, 0.7372870445251465, 0.7374191284179688, 0.7395324110984802, 0.7371549606323242, 0.7408532500267029, 0.7450799345970154, 0.743891179561615, 0.7434949278831482, 0.7442874312400818, 0.7440232634544373, 0.7526086568832397, 0.7498348951339722, 0.754589855670929, 0.7520803213119507], "val_loss": [1.924856730869838, 1.862842627934047, 1.7551994323730469, 1.576153005872454, 1.3436926773616247, 1.1248873642512731, 0.967933007649013, 0.8647298472268241, 0.7955467360360282, 0.7494758026940482, 0.7164443220411029, 0.6835663318634033, 0.6563106604984829, 0.6332903930119106, 0.6211878061294556, 0.6061645065035138, 0.5935051952089582, 0.5816607986177716, 0.5710823706218174, 0.5616101707730975, 0.5548176765441895, 0.5494752611432757, 0.5381765535899571, 0.5347538675580706, 0.5271827323096139, 0.5208519186292376, 0.5192777769906181, 0.5150247812271118, 0.5082741805485317, 0.505325334412711, 0.5003124986376081, 0.5019883939198085, 0.49539027895246235, 0.48905437333243235, 0.49404791423252653, 0.483249306678772, 0.47915189606802805, 0.47705537932259695, 0.47594426359449116, 0.46977150440216064, 0.47181849820273264, 0.46817989008767263], "val_accuracy": [0.3683333396911621, 0.44699999690055847, 0.512666642665863, 0.5596666932106018, 0.6023333072662354, 0.6363333463668823, 0.6733333468437195, 0.6816666722297668, 0.6923333406448364, 0.7116666436195374, 0.7133333086967468, 0.7260000109672546, 0.7369999885559082, 0.7419999837875366, 0.737333357334137, 0.7473333477973938, 0.7463333606719971, 0.7580000162124634, 0.7549999952316284, 0.7643333077430725, 0.7689999938011169, 0.7693333625793457, 0.7699999809265137, 0.768666684627533, 0.7749999761581421, 0.7736666798591614, 0.7789999842643738, 0.781333327293396, 0.781000018119812, 0.7850000262260437, 0.7893333435058594, 0.7829999923706055, 0.7896666526794434, 0.7863333225250244, 0.7710000276565552, 0.7973333597183228, 0.8013333082199097, 0.7956666946411133, 0.7993333339691162, 0.800000011920929, 0.7889999747276306, 0.800000011920929]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7099999785423279, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.916545818699444, 1.0496277129566665, 0.8354327593418459, 0.722933671084283, 0.662964479695883, 0.6360296059309799, 0.6054790395204622, 0.5929352893348793, 0.5812231193144938, 0.5669677599136776, 0.5486506891209671, 0.5594243193110455, 0.5618654579975192, 0.5790451272147097, 0.5771666070363463, 0.66038835575363, 0.6584271555327311, 0.6771547348271618, 0.7269544904069216, 0.8059331612611538], "accuracy": [0.3551710546016693, 0.6262052655220032, 0.6877558827400208, 0.7259278893470764, 0.7549861073493958, 0.7611940503120422, 0.7712323069572449, 0.7761194109916687, 0.7873464822769165, 0.7884030938148499, 0.7922335267066956, 0.7918372750282288, 0.7895918488502502, 0.7819310426712036, 0.7848368883132935, 0.767401933670044, 0.7745344042778015, 0.7528728246688843, 0.7523444890975952, 0.7354378700256348], "val_loss": [0.8839687960488456, 0.6151381049837384, 0.5396991627556937, 0.4752011128834316, 0.42922645807266235, 0.43019860131399973, 0.4299722739628383, 0.432593081678663, 0.3901083469390869, 0.4192903893334525, 0.39514734063829693, 0.3864233749253409, 0.41412150859832764, 0.406261077948979, 0.4088896172387259, 0.4532958354268755, 0.4355710915156773, 0.4658604690006801, 0.5198598418916974, 0.5589421136038644], "val_accuracy": [0.6489999890327454, 0.7273333072662354, 0.7486666440963745, 0.7786666750907898, 0.8133333325386047, 0.8019999861717224, 0.8033333420753479, 0.8009999990463257, 0.8316666483879089, 0.8166666626930237, 0.8376666903495789, 0.8346666693687439, 0.8276666402816772, 0.8306666612625122, 0.8403333425521851, 0.8199999928474426, 0.8246666789054871, 0.8080000281333923, 0.8176666498184204, 0.8006666898727417]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 8, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 0, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 3, 1, 0, 3, 0, 2], [54, 63, 57, 12]], "fitness": -0.3417142927646637, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), sigma), alpha)", "other_info": {"loss": [2.306612636844291, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19442610442638397, 0.1468762308359146, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.6817055429731096, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.328000009059906, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 3, 1, 9, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [6, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.2922857105731964, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 5, 3, 2, 1, 0, 6, 3, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.square(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), beta), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0351103033608196, 2125529791.8448002, NaN, NaN, NaN, NaN], "accuracy": [0.3000924587249756, 0.30405494570732117, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.4940400464194161, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.29733332991600037, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [1, 3, 1, 9, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 3, 3, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1], [6, 3, 5, 4, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 2, 2, 0, 1, 0, 0, 9, 0, 8], [0, 0, 0, 3, 3, 0, 2], [41, 63, 89, 12, 82]], "fitness": -0.11142857372760773, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 5, 2, 0, 14, 9, 5, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(sigma, tf.math.negative(tf.math.negative(sigma)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300821614350468, 2.3019730169318686, 2.3025123986743146, 2.302584639094399, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.10210011899471283, 0.1006472036242485, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972489561353411, 1.9736155101231165, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.1133333370089531, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [5, 3, 1, 2, 5, 2, 4, 1, 5, 2, 7, 2, 7, 5, 9, 8, 8, 3, 6, 3, 3, 4, 5, 9, 6, 9, 5, 9], [3, 3, 4, 3, 2, 2, 1, 1, 0, 3, 1, 3, 3, 3], [78, 95, 19, 66, 39], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 3, 0, 3, 1, 0, 0, 9, 0, 8], [1, 3, 1, 0, 2, 3, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 41, 41, 28, 13, 5, 1, 1, 0, 1, 0, 15, 10, 5, 2], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)))), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(tf.math.square(alpha), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, alpha)))), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))), grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(alpha, sigma), alpha), tf.math.negative(tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 6, 2, 2, 1, 9, 0, 9, 0, 8], [1, 3, 3, 0, 3, 0, 2], [37, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 2, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], [2, 3, 1, 6, 5, 2, 0, 8, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 4, 3, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [97, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 0, 0, 0, 0, 16, 10, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), grad), tf.math.square(grad))), tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.multiply(alpha, sigma), tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302135891933892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 1, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 1, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 19, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 11, 5, 3], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 8, 1, 2, 5, 2, 3, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 1, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 3, 3, 0, 2], [31, 69, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(alpha, beta), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 64, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [1, 3, 9, 9, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 0, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [2, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 0, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 2, 3, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302258612473155, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [2, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(alpha), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [13293.846104482192, 2.313487000012552, 2.305712764824638, 2.303663076080304, 2.3029866931838696, 2.3029409796412845], "accuracy": [0.09708096832036972, 0.09853387624025345, 0.09496764093637466, 0.09734513610601425, 0.09642054885625839, 0.09826971590518951], "val_loss": [1.9882653781345911, 1.9776797975812639, 1.9747390065874373, 1.9738975252423967, 1.973764283316476, 1.973658561706543], "val_accuracy": [0.10300000011920929, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [72, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 14, 9, 5, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.negative(tf.math.add(sigma, tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma))))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301895306079206, 2.3023622497323797, 2.3026085516181776, 2.303590202879487, 2.307014036644656, 2.31942680687905, 2.373279731444647], "accuracy": [0.10976093262434006, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737328120640345, 1.973881789616176, 1.97439786366054, 1.9760818481445312, 1.9820898600987025, 2.005064146859305, 2.1175782339913503], "val_accuracy": [0.09666666388511658, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [5, 3, 9, 4, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 1, 3, 3, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 7], [4, 7], [71], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [31, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, sigma), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3762098977027586, 1.053739341586391e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04477611929178238, 0.058512747287750244, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3480983461652483, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.006000000052154064, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 8, 2, 2, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [3, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.301809047459139, 2.3018344698202937, 2.3001518892558526, 2.30083448775708, 2.2998236213551064, 2.299801325801184, 2.2990369135441324, 2.300037689842584, 2.2997800133027075, 2.2988820531034135, 2.299397741090258, 2.29876680302346, 2.2998762525004985, 2.2987964522679563, 2.300024446290419], "accuracy": [0.09232597798109055, 0.08889182657003403, 0.09391097724437714, 0.09536388516426086, 0.10513802617788315, 0.10038304328918457, 0.09813763201236725, 0.10157178342342377, 0.1022322028875351, 0.10011887550354004, 0.10408136248588562, 0.1026284471154213, 0.10157178342342377, 0.1010434553027153, 0.09694888442754745], "val_loss": [1.9696600777762276, 1.9690514973231725, 1.9688169615609306, 1.9686024529593331, 1.9686878068106515, 1.9688667569841658, 1.9689527239118303, 1.9688192776271276, 1.9687562670026506, 1.9687724113464355, 1.968942097255162, 1.9692222050258092, 1.9695051738194056, 1.9698213168552943, 1.970055171421596], "val_accuracy": [0.047333333641290665, 0.052666667848825455, 0.06333333253860474, 0.06933332979679108, 0.07500000298023224, 0.0806666687130928, 0.08399999886751175, 0.09000000357627869, 0.09166666865348816, 0.09300000220537186, 0.09233333170413971, 0.09000000357627869, 0.09233333170413971, 0.09099999815225601, 0.09166666865348816]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [1, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 3, 9, 0, 8], [1, 3, 3, 1, 2, 0, 2], [41, 63, 18, 12]], "fitness": -0.054571427404880524, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), sigma), sigma)", "other_info": {"loss": [2.3022348332823923, 2.303263284148888, 2.3019744584337123, 2.3032649193520496, 2.30227805960054, 2.302112489501798, 2.3008450686482864, 2.3028316825939252, 2.3030161623311725, 2.301621190025633, 2.3018789665495256, 2.300961529526807, 2.3025356400297965, 2.3000694641017043, 2.3024090620284507, 2.3006364394172687, 2.3018848265576213, 2.299713602533367, 2.300566834449894, 2.3016596993340666, 2.300715767712153, 2.30109996119227, 2.301368691335186, 2.300652406439569, 2.2993099671218844, 2.299739637237577, 2.299757817417891, 2.299265783350497, 2.3011519739798203, 2.300583993344653, 2.299454139066552, 2.3005975310230267, 2.301093827212224, 2.299562000626854, 2.2982852446042537, 2.2989181273050625, 2.3004927144247733, 2.3014139658613386, 2.299583589364635, 2.2996672073674636, 2.2991888496649344, 2.3007394203089797, 2.2998398426989555, 2.298127230588928, 2.3001906852586127, 2.3006330409999127, 2.2998531127665665, 2.298882218620261, 2.299290701760718, 2.2978883801103662, 2.2991088243161273, 2.2987534433638714, 2.299807401806246, 2.2991571474572874, 2.298140187824659, 2.298449840496528, 2.299063196492123, 2.2981049040163417, 2.2975363871834267, 2.299267639494717, 2.297834735961559, 2.2983407569268532, 2.297798212351438, 2.2978505773346547, 2.299000071685674, 2.29857574405451, 2.2984121031906657, 2.297851371097527, 2.297048781069593, 2.298102434741791, 2.296688927761426, 2.296472705130123, 2.296965130725478, 2.2987103769886588, 2.2983731230283695, 2.297520205801693, 2.2979250840381185, 2.2968465087436147, 2.2966073557307394, 2.2972639227713323, 2.297169008243668, 2.2974701322946784, 2.29639895417986, 2.2959128378121263, 2.296961472727572, 2.29811876198997, 2.298905018754938, 2.296891022761421, 2.2959192965591524, 2.2972502635375873, 2.2959541707951487, 2.2967456528350363, 2.2968501737640206, 2.297381124885689, 2.2966956955299183, 2.29546789662587, 2.29552760150659, 2.2983107416306376, 2.2973193411561934, 2.297213697414577], "accuracy": [0.09166556596755981, 0.08625016361474991, 0.08928807079792023, 0.08492933213710785, 0.09338264167308807, 0.09192973375320435, 0.08849557489156723, 0.09192973375320435, 0.0882314071059227, 0.09192973375320435, 0.09232597798109055, 0.0952318087220192, 0.09298639744520187, 0.09615638852119446, 0.09232597798109055, 0.09853387624025345, 0.09377889335155487, 0.10328886657953262, 0.08981640636920929, 0.09391097724437714, 0.0956280529499054, 0.09694888442754745, 0.09153348207473755, 0.09642054885625839, 0.09998679161071777, 0.10077928751707077, 0.09272222965955734, 0.0944393053650856, 0.09457138925790787, 0.09245806187391281, 0.09615638852119446, 0.09813763201236725, 0.09338264167308807, 0.1002509593963623, 0.09945846349000931, 0.09853387624025345, 0.09866596013307571, 0.09351472556591034, 0.09694888442754745, 0.10051512718200684, 0.09879804402589798, 0.1018359512090683, 0.10342095047235489, 0.10051512718200684, 0.10315678268671036, 0.09774138033390045, 0.09919429570436478, 0.1018359512090683, 0.09866596013307571, 0.09972262382507324, 0.09866596013307571, 0.1006472036242485, 0.09694888442754745, 0.10170386731624603, 0.09536388516426086, 0.09959053993225098, 0.09866596013307571, 0.09932637959718704, 0.10355303436517715, 0.09972262382507324, 0.1002509593963623, 0.10513802617788315, 0.10672302544116974, 0.10579843819141388, 0.1022322028875351, 0.0956280529499054, 0.09866596013307571, 0.10394927859306335, 0.1018359512090683, 0.10196803510189056, 0.10711926966905594, 0.108440101146698, 0.1014397069811821, 0.1018359512090683, 0.10421344637870789, 0.10619468986988068, 0.10540219396352768, 0.10566636174917221, 0.10632677376270294, 0.10593052208423615, 0.10698718577623367, 0.10619468986988068, 0.10711926966905594, 0.10645885765552521, 0.10474177449941635, 0.10632677376270294, 0.09972262382507324, 0.10566636174917221, 0.10276053100824356, 0.10289261490106583, 0.10408136248588562, 0.10672302544116974, 0.10540219396352768, 0.10593052208423615, 0.10447761416435242, 0.10751552134752274, 0.10857218503952026, 0.10315678268671036, 0.10672302544116974, 0.10777968913316727], "val_loss": [1.9702991076878138, 1.9702108928135462, 1.970137323651995, 1.9700588498796736, 1.969982283455985, 1.9699017660958427, 1.9698247228349959, 1.969748088291713, 1.9696759496416365, 1.9696035385131836, 1.9695252009800501, 1.9694525854928153, 1.9693772452218192, 1.969311032976423, 1.9692373956952776, 1.9691733632768904, 1.96910183770316, 1.9690326963152205, 1.9689642361232214, 1.9688920293535506, 1.9688262258257185, 1.968756948198591, 1.9686878068106515, 1.968620436532157, 1.9685545648847307, 1.9684930528913225, 1.9684275899614607, 1.9683606284005302, 1.9682920319693429, 1.9682303837367467, 1.9681689398629325, 1.9681130136762346, 1.9680557250976562, 1.9679953030177526, 1.9679368564060755, 1.967878750392369, 1.9678202356610979, 1.9677580424717493, 1.9677023887634277, 1.967644350869315, 1.9675915581839425, 1.9675345420837402, 1.9674769810267858, 1.9674256869724818, 1.9673726899283273, 1.9673233032226562, 1.9672677857535226, 1.9672199657985143, 1.9671730995178223, 1.967120919908796, 1.9670731680733817, 1.9670213290623255, 1.966972759791783, 1.9669220788138253, 1.966877051762172, 1.9668214661734444, 1.966773850577218, 1.9667237826756068, 1.966676848275321, 1.966627734048026, 1.9665734427315849, 1.9665167672293526, 1.9664628165108817, 1.9664148603166853, 1.966362816946847, 1.9663151332310267, 1.9662716048104423, 1.9662224905831474, 1.9661732401166643, 1.966123376573835, 1.9660707201276506, 1.966027123587472, 1.9659739903041296, 1.9659301894051688, 1.9658797809055872, 1.965829849243164, 1.9657791001456124, 1.9657341412135534, 1.965684277670724, 1.965637138911656, 1.965588160923549, 1.9655354363577706, 1.9654861858912878, 1.965435300554548, 1.9653849601745605, 1.9653378214154924, 1.965292181287493, 1.9652468817574638, 1.9652047157287598, 1.9651603698730469, 1.96511595589774, 1.9650733811514718, 1.9650282859802246, 1.9649828502110072, 1.9649337359837122, 1.9648902075631278, 1.9648477009364538, 1.964803968157087, 1.9647625514439173, 1.964719567980085], "val_accuracy": [0.036666665226221085, 0.03700000047683716, 0.03766666725277901, 0.038333334028720856, 0.039000000804662704, 0.03966666758060455, 0.041333332657814026, 0.0416666679084301, 0.041999999433755875, 0.04266666620969772, 0.04333333298563957, 0.04399999976158142, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.04533333331346512, 0.045666664838790894, 0.04633333161473274, 0.04633333161473274, 0.046666666865348816, 0.047333333641290665, 0.04833333194255829, 0.04899999871850014, 0.049666665494441986, 0.049666665494441986, 0.05066666752099991, 0.05133333429694176, 0.05133333429694176, 0.05233333259820938, 0.05299999937415123, 0.05400000140070915, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.0560000017285347, 0.05700000002980232, 0.0573333315551281, 0.0573333315551281, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.05999999865889549, 0.05999999865889549, 0.05999999865889549, 0.060333333909511566, 0.06066666543483734, 0.06133333221077919, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06233333423733711, 0.06300000101327896, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06499999761581421, 0.06566666811704636, 0.06566666811704636, 0.0663333311676979, 0.06700000166893005, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.070333331823349, 0.070333331823349, 0.07066666334867477, 0.0716666653752327, 0.0729999989271164, 0.0729999989271164, 0.07333333045244217, 0.07433333247900009, 0.07566666603088379, 0.07633333653211594, 0.07699999958276749, 0.07699999958276749, 0.07733333110809326, 0.07733333110809326, 0.07766667008399963, 0.07800000160932541, 0.07800000160932541, 0.07866666465997696, 0.07866666465997696, 0.07900000363588333, 0.07900000363588333, 0.0793333351612091, 0.0793333351612091, 0.07966666668653488, 0.0806666687130928, 0.0806666687130928, 0.08100000023841858, 0.08133333176374435, 0.08133333176374435, 0.0820000022649765, 0.08266666531562805]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 3, 5, 4, 7, 1, 9, 2, 5, 2, 8, 5, 6, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 0, 1, 5, 2, 7, 2, 7, 5, 9, 8, 4, 3, 6, 3, 3, 4, 5, 9, 6, 9], [5, 3, 4, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 6, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [99, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3022699454331113, 2.303395324300671, 2.3021891893034896, 2.3035663333409624, 2.3026765112737704, 2.3025961499471768], "accuracy": [0.09166556596755981, 0.08558975160121918, 0.0886276587843895, 0.08506141602993011, 0.09259014576673508, 0.09074098616838455], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]