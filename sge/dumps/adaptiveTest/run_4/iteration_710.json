[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 2, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8334285616874695, "mapping_values": [1, 10, 10, 6, 4, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.9500554492208764, 1.5913507073168993, 0.940770380359363, 0.8145926474359735, 0.6886533502857872, 0.6279063304464784, 0.5967433431034846, 0.5489325070771653, 0.5266184514114618, 0.5048991401300076, 0.47914125006180935, 0.4734835855169791, 0.45216249504408673, 0.4428054197762605, 0.42578100966046817, 0.3972207307579369, 0.3869902964407317, 0.37351776238492984, 0.37202963721105026, 0.34789679667197354, 0.35907322108910905, 0.33387923935038805, 0.33663003150781606, 0.3135759906722507, 0.3222399350871279, 0.30740797570069484, 0.29906703480765995, 0.2978735578145176, 0.28403206456764074, 0.28166621577045337, 0.27427026226362766, 0.27118751287003706, 0.25356503975877925, 0.2508768072658605, 0.25093979383850173, 0.24161617600363575, 0.24217507515553832, 0.23764629342402954, 0.24371093661557447, 0.2175772105501218], "accuracy": [0.35147273540496826, 0.445779949426651, 0.6524897813796997, 0.6822084188461304, 0.728701651096344, 0.7519482374191284, 0.7709681391716003, 0.7936864495277405, 0.7991018295288086, 0.8075551390647888, 0.8173292875289917, 0.8144234418869019, 0.8271034359931946, 0.8358209133148193, 0.8399154543876648, 0.8519350290298462, 0.8527275323867798, 0.8614450097084045, 0.8599920868873596, 0.871879518032074, 0.8623695969581604, 0.8800686597824097, 0.8751816153526306, 0.8800686597824097, 0.8746532797813416, 0.8800686597824097, 0.8833707571029663, 0.887201189994812, 0.896446943283081, 0.8906353116035461, 0.896446943283081, 0.8961827754974365, 0.9039757251739502, 0.9014661312103271, 0.9064852595329285, 0.908730685710907, 0.9049002528190613, 0.9060890078544617, 0.9078060984611511, 0.9181085824966431], "val_loss": [1.93475307737078, 0.829154372215271, 0.649289608001709, 0.5460892064230782, 0.4895473378045218, 0.460428203855242, 0.43209647280829294, 0.42255053349903654, 0.3981743540082659, 0.3756095767021179, 0.349033602646419, 0.35703183923448834, 0.3444284626415798, 0.3412332705089024, 0.3272455504962376, 0.32135134083884104, 0.31051640851157053, 0.3141848274639675, 0.3097765530858721, 0.3170299785477774, 0.29925466435296194, 0.32549915994916645, 0.2926043782915388, 0.29758380140577045, 0.30153248991285053, 0.30669474601745605, 0.30184370279312134, 0.28179952076503206, 0.29779005902154104, 0.2861279674938747, 0.28552935804639545, 0.28669423716408865, 0.28341598170144217, 0.2929989865847996, 0.29601796184267315, 0.29451916898999897, 0.3040932161467416, 0.2938742552484785, 0.2905991928918021, 0.29101518222263884], "val_accuracy": [0.3773333430290222, 0.659333348274231, 0.7173333168029785, 0.7456666827201843, 0.7756666541099548, 0.7960000038146973, 0.8186666369438171, 0.8190000057220459, 0.8446666598320007, 0.8433333039283752, 0.8636666536331177, 0.856333315372467, 0.8613333106040955, 0.8576666712760925, 0.8673333525657654, 0.8659999966621399, 0.8730000257492065, 0.8736666440963745, 0.8709999918937683, 0.8663333058357239, 0.8743333220481873, 0.8636666536331177, 0.8823333382606506, 0.8763333559036255, 0.8686666488647461, 0.8690000176429749, 0.8696666955947876, 0.8830000162124634, 0.8733333349227905, 0.8830000162124634, 0.8809999823570251, 0.8803333044052124, 0.8833333253860474, 0.8799999952316284, 0.8846666812896729, 0.8830000162124634, 0.8773333430290222, 0.8766666650772095, 0.8836666941642761, 0.8843333125114441]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 5, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.950035633333544, 1.5920728770197974, 0.9402161140200044, 0.808534933433966, 0.6863808646461573, 0.6262288272593394, 0.5975308521721956, 0.5507029439747656, 0.525196250765756, 0.505640145766658, 0.47788801886118665, 0.46941210496238256, 0.45233751722236176, 0.4391329883190745, 0.42701916194878486, 0.39703565801706264, 0.38410214058490966, 0.3730759606613632, 0.37475836445878696, 0.3482812738783875, 0.35883793008483367, 0.33428726866181974, 0.3340916843178754, 0.3134593876510988, 0.31656413749224477, 0.30721371856584145, 0.2970613480842408, 0.2973953264106959], "accuracy": [0.35147273540496826, 0.445779949426651, 0.6528860330581665, 0.6845859289169312, 0.7297582626342773, 0.7547219395637512, 0.7729493975639343, 0.7942147850990295, 0.7997622489929199, 0.809140145778656, 0.8166688680648804, 0.8189142942428589, 0.8256505131721497, 0.8322546482086182, 0.8393871188163757, 0.8506141901016235, 0.8551049828529358, 0.8603883385658264, 0.8569541573524475, 0.870030403137207, 0.863558292388916, 0.8753136992454529, 0.872407853603363, 0.878351628780365, 0.8802007436752319, 0.8828424215316772, 0.886672854423523, 0.8882578015327454], "val_loss": [1.9391513551984514, 0.8290552922657558, 0.6464950016566685, 0.5468327147620065, 0.4893770728792463, 0.4577305998120989, 0.4332414524895804, 0.42127817017691477, 0.39366001742226736, 0.3720870784350804, 0.35528657266071867, 0.3553786107472011, 0.3483023813792637, 0.33975188221250263, 0.33157239641462055, 0.3222383345876421, 0.3126466529709952, 0.31056359836033415, 0.30939429998397827, 0.31368608134133474, 0.29484239646366667, 0.32035112380981445, 0.28699047224862234, 0.29236667496817453, 0.29504006249564035, 0.3009896618979318, 0.2989690899848938, 0.2838650516101292], "val_accuracy": [0.37700000405311584, 0.6600000262260437, 0.7203333377838135, 0.7423333525657654, 0.7723333239555359, 0.7960000038146973, 0.8209999799728394, 0.8146666884422302, 0.8463333249092102, 0.8503333330154419, 0.862666666507721, 0.8576666712760925, 0.859333336353302, 0.8616666793823242, 0.8676666617393494, 0.8700000047683716, 0.871999979019165, 0.8730000257492065, 0.871666669845581, 0.8650000095367432, 0.8713333606719971, 0.8666666746139526, 0.8853333592414856, 0.8813333511352539, 0.871999979019165, 0.8740000128746033, 0.8713333606719971, 0.8840000033378601]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 3, 9, 5, 1, 6, 2, 1, 2, 2, 9, 4, 2, 2, 6, 2, 4, 3, 4, 4, 8, 2, 3, 4, 2, 7, 7, 2, 6, 8, 7, 6, 7], [0, 1, 2, 1, 2, 0, 2, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [18, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8077142834663391, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.2237424304409426, 1.5296495862530521, 1.0316427374607253, 0.839199197755246, 0.7677462368420228, 0.7060560812850623, 0.6545783770618154, 0.6293893296878257, 0.5787983876036111, 0.5631140789036517, 0.5211508930036499, 0.5096864312032998, 0.48259368965953586, 0.49675445295422543, 0.47558510468825216, 0.45739905448983986, 0.43873390822661884, 0.41978234414017634, 0.4128864769528744, 0.41419474060005435, 0.42275666300142917, 0.40405081052113173, 0.4398078246871478, 0.42530000418436414, 0.41541497568570235], "accuracy": [0.23352265357971191, 0.49266940355300903, 0.6310923099517822, 0.6795667409896851, 0.7043983340263367, 0.7310791015625, 0.7412495017051697, 0.7578919529914856, 0.7773081660270691, 0.7823272943496704, 0.8006868362426758, 0.8033285140991211, 0.8119139075279236, 0.8156121969223022, 0.8214238286018372, 0.8281601071357727, 0.8341038227081299, 0.837141752243042, 0.8413683772087097, 0.8413683772087097, 0.8380662798881531, 0.8507462739944458, 0.8383304476737976, 0.8335754871368408, 0.8343679904937744], "val_loss": [1.6179724420819963, 0.789490989276341, 0.6410890987941197, 0.5874960081917899, 0.5423401253564017, 0.509442959512983, 0.47181762967790875, 0.44760118212018696, 0.42737843309129986, 0.40426188707351685, 0.3888234410967146, 0.38788812501089914, 0.38819078888211933, 0.3603858692305429, 0.36467383589063374, 0.3692331739834377, 0.36138237374169485, 0.34994107484817505, 0.34159958362579346, 0.33768937417439054, 0.3415643572807312, 0.3512214422225952, 0.3687916738646371, 0.35065516403743197, 0.3430553504398891], "val_accuracy": [0.47099998593330383, 0.6813333630561829, 0.7196666598320007, 0.7566666603088379, 0.7710000276565552, 0.7703333497047424, 0.7850000262260437, 0.7960000038146973, 0.8149999976158142, 0.8233333230018616, 0.8330000042915344, 0.840666651725769, 0.8433333039283752, 0.8516666889190674, 0.8560000061988831, 0.8533333539962769, 0.8616666793823242, 0.8556666374206543, 0.8659999966621399, 0.8663333058357239, 0.859333336353302, 0.862666666507721, 0.8506666421890259, 0.8613333106040955, 0.8633333444595337]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 6, 2, 0, 5, 9, 6, 2, 2, 2, 5, 1, 4, 2, 2, 1, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [0, 1, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [66, 60, 5, 49, 87, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [45755156943.77487, 6982036901386.482, 118495933270326.81, 833681888362398.6, 3709482334890711.5, 1.2151070382771048e+16], "accuracy": [0.09919429570436478, 0.09985470771789551, 0.09985470771789551, 0.09694888442754745, 0.09734513610601425, 0.09879804402589798], "val_loss": [380512370688.0, 20513101746761.145, 220185170242998.84, 1200350748999680.0, 4498298410593719.0, 1.3265479860448694e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 6, 3, 9, 5, 1, 6, 2, 1, 2, 2, 9, 4, 2, 2, 6, 2, 4, 3, 4, 4, 8, 2, 3, 4, 2, 7, 7, 2, 6, 8, 7, 6, 7], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [79, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 8, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [67, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [55, 31, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(alpha))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302714035731769, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [5, 6, 2, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 2, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 94, 5, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 6, 8, 9, 5, 1, 4, 2, 1, 6, 0, 4, 4, 4, 2, 4, 2, 4, 3, 4, 4, 8, 2, 3, 1, 2, 2, 7, 2, 6, 8, 0, 0, 7, 1, 8, 3, 2], [0, 2, 1, 2, 2, 1, 2, 2, 1, 0, 2, 2, 0, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 2, 1, 0, 0], [71, 60, 5, 49, 29, 73, 46, 33, 52, 29], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 1, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 4, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [28, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [26], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 3, 9, 5, 1, 6, 2, 1, 2, 2, 9, 4, 2, 2, 6, 9, 4, 3, 4, 4, 8, 4, 3, 3, 2, 7, 7, 2, 6, 8, 7, 6, 7, 3], [0, 0, 1, 2, 2, 0, 2, 2, 0, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [71, 60, 5, 49, 29, 15, 46, 33, 24, 73], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 98, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 62, 62, 35, 27, 10, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, grad)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(grad, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.multiply(grad, tf.math.add(grad, grad)), grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(grad, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))))), grad)))))))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [20, 77, 5, 49, 29, 57, 46, 33, 24], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [3, 5], [71], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(sigma, tf.math.pow(tf.math.sqrt(tf.math.sqrt(beta)), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [9, 6, 3, 9, 5, 1, 6, 2, 1, 2, 2, 9, 4, 2, 2, 6, 2, 4, 5, 4, 4, 8, 2, 3, 3, 9, 6, 7, 2, 6, 8, 5, 3, 7, 2, 0, 2, 3, 9, 2, 5, 9, 4, 5, 8, 0], [0, 2, 1, 2, 2, 0, 2, 2, 1, 0, 2, 1, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [71, 60, 5, 49, 29, 73, 25, 33, 24, 47], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 18, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [3, 6, 2, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 0, 5, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [0, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1183802727.4388535, 22982404449.55118, 105668853578.22005, 293690738804.047, 632980840946.8129, 1160586717701.4778], "accuracy": [0.09919429570436478, 0.09985470771789551, 0.09998679161071777, 0.09708096832036972, 0.09734513610601425, 0.09893012791872025], "val_loss": [4464626980.571428, 35706215277.71429, 120496460361.14285, 285605990985.1429, 557810506605.7142, 963879857590.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [7, 6, 1, 9, 9, 1, 6, 0, 1, 2, 2, 9, 4, 2, 2, 6, 2, 4, 3, 4, 4, 8, 2, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 7, 5, 5, 4, 8, 1, 9, 0, 7, 8, 8, 7, 8, 4, 7, 2, 9, 7, 6, 3, 7, 3, 5, 5], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 20, 5, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 5, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [3, 6, 2, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [0, 1, 1, 2, 2, 1, 2, 2, 1, 0, 2, 1, 2, 3, 2, 2, 2, 0, 2, 2, 1, 0, 1, 2, 2, 0, 0, 3], [71, 60, 5, 49, 29, 73, 38, 33, 24], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08572183549404144, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [2, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302714035731769, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [3, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [20, 77, 5, 49, 29, 57, 46, 33, 24], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [45.208135274832415, 532.8040983023471, 2144.0385258807764, 5680.405132841393, 11965.176484617496, 21643.741940102445], "accuracy": [0.09945846349000931, 0.09945846349000931, 0.09998679161071777, 0.09708096832036972, 0.09774138033390045, 0.09932637959718704], "val_loss": [126.5384041922433, 758.2385602678571, 2373.011300223214, 5447.365094866072, 10459.376674107143, 17882.321428571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [4, 5, 2, 4, 5, 9, 6, 2, 2, 9, 4, 1, 4, 1, 2, 6, 2, 4, 3, 5, 0, 5, 6, 3, 4, 2, 7, 7, 1, 6, 8, 7, 6, 7, 4, 7, 9, 1], [2, 2, 2, 0, 2, 2, 0, 2, 1, 2, 1, 2, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3], [55, 60, 5, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 4, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.0705714300274849, "mapping_values": [1, 9, 9, 5, 4, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.301824339849129, 2.3018719668181156, 2.3002928304728925, 2.300544111814639, 2.3007601765499235, 2.3000927350902445, 2.299249753598067, 2.299652548891883, 2.2993570100582508, 2.2996154206540087, 2.29863069715942, 2.299328235099187, 2.2993404823066914, 2.2995757886274157, 2.2997491884351233, 2.2992834904095942], "accuracy": [0.09681680053472519, 0.09417514503002167, 0.09787346422672272, 0.09893012791872025, 0.09060890227556229, 0.0948355570435524, 0.09866596013307571, 0.09615638852119446, 0.09919429570436478, 0.09694888442754745, 0.10527011007070541, 0.10236428678035736, 0.09536388516426086, 0.09945846349000931, 0.09945846349000931, 0.09985470771789551], "val_loss": [1.9697480201721191, 1.9692519732883997, 1.968987260546003, 1.9690401894705636, 1.968952247074672, 1.9689807891845703, 1.9689910752432687, 1.9689248629978724, 1.9688822201320104, 1.9688923699515206, 1.9690224102565221, 1.9691989081246513, 1.9695714541843958, 1.96993773324149, 1.9701804433550154, 1.9704410008021764], "val_accuracy": [0.04899999871850014, 0.05533333495259285, 0.06133333221077919, 0.06400000303983688, 0.06966666877269745, 0.07100000232458115, 0.07633333653211594, 0.07800000160932541, 0.07800000160932541, 0.07699999958276749, 0.07833333313465118, 0.07766667008399963, 0.07599999755620956, 0.07566666603088379, 0.0716666653752327, 0.07199999690055847]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [8, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 0, 1, 2, 2, 0, 2, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [8, 77, 5, 49, 29, 57, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022012400069745, 2.3031615889414097, 2.3022853409877118, 2.302348413172651, 2.303349359239239, 2.302612315488923], "accuracy": [0.09655263274908066, 0.08942015469074249, 0.09074098616838455, 0.09272222965955734, 0.08625016361474991, 0.08915598690509796], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 0, 3, 9, 4, 0, 6, 2, 1, 5, 2, 1, 4, 2, 0, 2, 2, 2, 9, 3, 0, 8, 2, 3, 4, 2, 8, 7, 2, 5, 4, 2, 9, 7, 4, 8, 6, 6, 0, 7, 5, 0, 7, 3, 8, 2, 4, 0, 2, 6, 5, 0, 6, 2, 4, 2, 6, 8, 9, 5, 9, 5], [0, 2, 2, 1, 2, 0, 2, 2, 1, 0, 2, 2, 3, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 3, 3, 3, 2, 2], [20, 77, 5, 49, 29, 57, 46, 33, 24], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 3, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [1, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.subtract(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3022012085159456, 2.3031616204324385, 2.3022854039697696, 2.30234844466368, 2.3033493907302676, 2.302612315488923], "accuracy": [0.09655263274908066, 0.08942015469074249, 0.09074098616838455, 0.09272222965955734, 0.08625016361474991, 0.08915598690509796], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703852108546667, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [3, 9, 3, 9, 5, 1, 6, 2, 8, 2, 2, 9, 4, 2, 2, 6, 2, 4, 3, 4, 4, 8, 2, 3, 2, 2, 6, 7, 2, 6, 8, 7, 6, 7], [0, 1, 1, 2, 2, 1, 2, 2, 1, 0, 2, 2, 0, 3, 2, 2, 1, 0, 2, 2, 1, 0, 1, 2, 1, 0, 0], [20, 77, 5, 49, 29, 57, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 1, 3, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [27, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 2, 1, 2, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3022012400069745, 2.3031615889414097, 2.3022853409877118, 2.302348413172651, 2.303349359239239, 2.302612315488923], "accuracy": [0.09655263274908066, 0.08942015469074249, 0.09074098616838455, 0.09272222965955734, 0.08625016361474991, 0.08915598690509796], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]