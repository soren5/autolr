[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [1, 3], [2, 5], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 0, 8], [1, 0, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.0441226373967747, 1.4163979502590875, 1.0445106641381188, 0.8604998975980394, 0.7987040400016955, 0.7677779141245202, 0.7009951978658153, 0.6818465575282568, 0.6505215384972456, 0.6489859045598926, 0.6248374874990819, 0.6320779854122989, 0.5782324042633272, 0.572342376092705, 0.533884874266908, 0.5513530634358386, 0.5333880264572322, 0.5353449714449906, 0.4947275533856906, 0.530697647338971, 0.48702100728244957, 0.47930777898758725, 0.4859409764214215, 0.459088322752896, 0.4339344872223498, 0.4436718783815067, 0.44964762311318074, 0.43912526602600827, 0.410439554198921], "accuracy": [0.3125082552433014, 0.49729230999946594, 0.6089023947715759, 0.6765288710594177, 0.6931713223457336, 0.7074362635612488, 0.722757875919342, 0.7342491149902344, 0.750759482383728, 0.7541936039924622, 0.7543256878852844, 0.7568352818489075, 0.7774402499198914, 0.7757231593132019, 0.8000264167785645, 0.7889314293861389, 0.7887993454933167, 0.7977809906005859, 0.817989706993103, 0.7985734939575195, 0.819442629814148, 0.8152159452438354, 0.8141592741012573, 0.8253863453865051, 0.8399154543876648, 0.8280280232429504, 0.8272355198860168, 0.8327829837799072, 0.8496896028518677], "val_loss": [1.2629290989467077, 0.9594782761165074, 0.7400203262056623, 0.5881968906947544, 0.623221925326756, 0.5271934952054705, 0.52735550062997, 0.5267701659883771, 0.5152689218521118, 0.44688561984470915, 0.4423285041536604, 0.44121237312044415, 0.4500241109303066, 0.40997579268046785, 0.48898983001708984, 0.41867323432649883, 0.41447411264692036, 0.3912338614463806, 0.4499567576817104, 0.38472419125693186, 0.38979544809886385, 0.41268835748944965, 0.4072164978299822, 0.34666634457451956, 0.3526319520814078, 0.38903647661209106, 0.3439615113394601, 0.3567488619259426, 0.3733682121549334], "val_accuracy": [0.46933332085609436, 0.5746666789054871, 0.6983333230018616, 0.749666690826416, 0.7106666564941406, 0.746999979019165, 0.7699999809265137, 0.7383333444595337, 0.7506666779518127, 0.8066666722297668, 0.8153333067893982, 0.8140000104904175, 0.7950000166893005, 0.8223333358764648, 0.7593333125114441, 0.8090000152587891, 0.8073333501815796, 0.8309999704360962, 0.7976666688919067, 0.8396666646003723, 0.8286666870117188, 0.8056666851043701, 0.8133333325386047, 0.859666645526886, 0.8463333249092102, 0.8230000138282776, 0.8550000190734863, 0.8473333120346069, 0.8413333296775818]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [1, 3], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 9, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0836286622897555, 1.3918171753390212, 1.0841507164085105, 0.9266658472725114, 0.8688895420123715, 0.7874281258945846, 0.737504168429694, 0.7423687902628675, 0.7057821022804466, 0.7082365631443115, 0.6611138921387995, 0.6718581642031969, 0.6398109316888849, 0.6357678549715777, 0.6201567561351518, 0.6109395618325982, 0.5860595566532663, 0.5906832259265958], "accuracy": [0.31541407108306885, 0.5226522088050842, 0.6139215230941772, 0.661471426486969, 0.6823405027389526, 0.7074362635612488, 0.7289658188819885, 0.7205125093460083, 0.7322678565979004, 0.7345132827758789, 0.7584202885627747, 0.7491744756698608, 0.7662131786346436, 0.7648923397064209, 0.7695152759552002, 0.7750627398490906, 0.7865539789199829, 0.7791573405265808], "val_loss": [1.144611018044608, 0.9676964964185443, 0.6998052937643868, 0.6215686457497733, 0.6126197065625872, 0.5408917324883598, 0.5728881018502372, 0.5282758814947945, 0.5170345817293439, 0.49188477652413504, 0.5073495081492833, 0.4810234478541783, 0.45130339690617155, 0.45655953884124756, 0.43645091567720684, 0.42929764304842266, 0.4425363370350429, 0.42958433287484304], "val_accuracy": [0.5640000104904175, 0.5920000076293945, 0.6919999718666077, 0.7396666407585144, 0.7300000190734863, 0.7609999775886536, 0.7329999804496765, 0.750333309173584, 0.7703333497047424, 0.784333348274231, 0.7606666684150696, 0.7799999713897705, 0.8153333067893982, 0.793666660785675, 0.8140000104904175, 0.8133333325386047, 0.8056666851043701, 0.8113333582878113]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [1, 3], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 5, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.7194285988807678, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 9, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.square(tf.math.negative(alpha))))))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3007239658661556, 2.2959513928455335, 2.2932422491758095, 2.2884440202565637, 2.2859009265458785, 2.2828718482889063, 2.2786563529534947, 2.274443656099849, 2.2716450320888644, 2.2679287608840353, 2.2637801226403154, 2.257489260208841, 2.254985552359377, 2.2483811171582944, 2.243312672223429, 2.2339738962467965, 2.2287565337951865, 2.2230736071234287, 2.210720382236203, 2.202059896315692, 2.1837814375708966, 2.168200830222278, 2.1477236502741497, 2.1260512938919542, 2.0895349956097276, 2.0559347638868464, 2.0009563863395528, 1.9333568554607286, 1.8514471422994552, 1.7672884248392913, 1.6726734942574906, 1.5801535770169117, 1.499780720392821, 1.4247767710493635, 1.3746971529016028, 1.3074223777763185, 1.2610964647861693, 1.215638618144251, 1.175728177838495, 1.1521275375402993, 1.1174349209509977, 1.0815053432530353, 1.0621622920492937, 1.0486690109243104, 1.033957289501566, 1.0176320288238303, 0.9948384396199458, 0.9754574837591418, 0.9716561588833534, 0.9420525088065871, 0.943822518418163, 0.9308973982144876, 0.9370168197534465, 0.9244148629122029, 0.9046246261880728], "accuracy": [0.08928807079792023, 0.10645885765552521, 0.11398758739233017, 0.13155461847782135, 0.13551710546016693, 0.14000792801380157, 0.14832915365695953, 0.16682076454162598, 0.16800950467586517, 0.18016114830970764, 0.18518029153347015, 0.19099193811416626, 0.19495442509651184, 0.21265354752540588, 0.22255976498126984, 0.2308809906244278, 0.24382512271404266, 0.24039097130298615, 0.2584863305091858, 0.26535463333129883, 0.28318583965301514, 0.28543123602867126, 0.29705455899238586, 0.31224408745765686, 0.3315281867980957, 0.3447364866733551, 0.36864352226257324, 0.37287017703056335, 0.39770177006721497, 0.4262316823005676, 0.44208163022994995, 0.4625544846057892, 0.4861973226070404, 0.5044247508049011, 0.5205389261245728, 0.5414080023765564, 0.5556729435920715, 0.5744287371635437, 0.5768062472343445, 0.5885615944862366, 0.6045436263084412, 0.6159027814865112, 0.6189407110214233, 0.6244881749153137, 0.6318848133087158, 0.6392814517021179, 0.6420552134513855, 0.658961832523346, 0.651168942451477, 0.6598864197731018, 0.6647734642028809, 0.6674151420593262, 0.6645092964172363, 0.6670188903808594, 0.6758684515953064], "val_loss": [1.9663124084472656, 1.962721688406808, 1.9592665944780623, 1.9558685847691126, 1.9526643753051758, 1.9495209966387068, 1.9461403574262346, 1.942652361733573, 1.939133780343192, 1.9354867253984724, 1.9314566339765276, 1.9269020898001534, 1.9220785413469588, 1.9165915080479212, 1.910590716770717, 1.9035863195146834, 1.8956398282732283, 1.8869627543858118, 1.8763196808951241, 1.8642727306910925, 1.8488240242004395, 1.82974031993321, 1.8060252325875419, 1.7774089404514857, 1.7393285887581962, 1.6914980070931571, 1.628504991531372, 1.550668716430664, 1.4566718850817, 1.3557767527444022, 1.2564998354230608, 1.1604041372026717, 1.0767581462860107, 1.006960664476667, 0.9521811008453369, 0.8973446573529925, 0.8602641650608608, 0.8270587410245623, 0.7943115064076015, 0.7691976513181414, 0.7465309756142753, 0.7307745388575962, 0.7098873683384487, 0.6972457000187465, 0.6849605355943952, 0.675739083971296, 0.6657253674098423, 0.6542118276868548, 0.6447613750185285, 0.6346028362001691, 0.6283088411603656, 0.6472504138946533, 0.6218949386051723, 0.6179252352033343, 0.6103332212993077], "val_accuracy": [0.06933332979679108, 0.09799999743700027, 0.12866666913032532, 0.16466666758060455, 0.19733333587646484, 0.2199999988079071, 0.23766666650772095, 0.2606666684150696, 0.28066667914390564, 0.2983333468437195, 0.3109999895095825, 0.3216666579246521, 0.33633333444595337, 0.3499999940395355, 0.36266666650772095, 0.37700000405311584, 0.38733333349227905, 0.3930000066757202, 0.4009999930858612, 0.40666666626930237, 0.4169999957084656, 0.43066665530204773, 0.4416666626930237, 0.4546666741371155, 0.4723333418369293, 0.4933333396911621, 0.5166666507720947, 0.5379999876022339, 0.5649999976158142, 0.5770000219345093, 0.5910000205039978, 0.6119999885559082, 0.640666663646698, 0.6536666750907898, 0.6616666913032532, 0.6666666865348816, 0.6830000281333923, 0.6986666917800903, 0.7049999833106995, 0.7013333439826965, 0.7139999866485596, 0.7076666951179504, 0.7236666679382324, 0.721666693687439, 0.7310000061988831, 0.737666666507721, 0.7269999980926514, 0.7269999980926514, 0.734666645526886, 0.7429999709129333, 0.737666666507721, 0.7110000252723694, 0.7419999837875366, 0.737666666507721, 0.737666666507721]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1], [1, 3], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [34, 1, 57, 12, 41]], "fitness": -0.6828571557998657, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 9, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302513538271665, 2.3015952269320223, 2.3024615135805058, 2.301001151791181, 2.300895004476523, 2.3001381512945356, 2.2986184715547613, 2.296776880913753, 2.295890087937131, 2.2944158034916047, 2.292831207483735, 2.2888435464351877, 2.288176181593182, 2.284971733323776, 2.282696126364226, 2.2781944542890997, 2.276971549311366, 2.275173389081863, 2.271012211393891, 2.2686954916051003, 2.263356515460908, 2.2597241760670093, 2.256670437437306, 2.253152814602351, 2.2480099663175785, 2.245268775330023, 2.240918751799624, 2.2357160686076734, 2.229436337121206, 2.225149870958027, 2.218903001147396, 2.213202490955847, 2.2066733635585103, 2.2011876879052052, 2.1960764849552814, 2.1882586740247643, 2.18057314720703, 2.1734052606624714, 2.1650697815577273, 2.157971924038737, 2.1497830542213077, 2.13876388794427, 2.1285534004226037, 2.12066637413172, 2.1085422041236352, 2.100165545491652, 2.083290157064927, 2.0694375474927544, 2.0589984690807657, 2.0418677407799932, 2.0283577187721678, 2.009114702757812, 1.9946961480675907, 1.9782007669083053, 1.9599341324150066, 1.9403627907453573, 1.9209737826521056, 1.8959651228585153, 1.8736310705705923, 1.8497331140850986, 1.8244220546963759, 1.8087451620785915, 1.780567420456372, 1.7581195462853791, 1.7265650337524323, 1.710160896668203, 1.681499501528631, 1.6527184619879631, 1.6338428946817398, 1.6088182780689426, 1.5885162322339506, 1.567090282870353, 1.5446459370014642, 1.5323234146234304, 1.5063367815947315, 1.4885758146744017, 1.4831101079863203, 1.4742382959903209, 1.4480840352075668, 1.4335484668925422, 1.4133591136880728, 1.4188494257183122, 1.4039070651893681, 1.4111125687440593, 1.4171658810875152, 1.3879620334522962, 1.3933581892745905, 1.3855540580627326, 1.3771136662018786, 1.377640738872694, 1.3697687603809798, 1.3654907419224613, 1.360501077401561, 1.3670481350506616, 1.3908298368608916, 1.388801033439228, 1.375055389523333, 1.3822320145764575, 1.3965157647221678, 1.3699326206113307], "accuracy": [0.08625016361474991, 0.09377889335155487, 0.09087307006120682, 0.09470347315073013, 0.09945846349000931, 0.09694888442754745, 0.09959053993225098, 0.10196803510189056, 0.1088363528251648, 0.11279883980751038, 0.1146479994058609, 0.1228371411561966, 0.12415797263383865, 0.13459251821041107, 0.14581957459449768, 0.15651829540729523, 0.16153743863105774, 0.1666886806488037, 0.17144367098808289, 0.18993528187274933, 0.19376568496227264, 0.20842689275741577, 0.2133139669895172, 0.22903183102607727, 0.23286223411560059, 0.24659886956214905, 0.251750111579895, 0.26139214634895325, 0.2797516882419586, 0.2833179235458374, 0.29097872972488403, 0.301281213760376, 0.30999869108200073, 0.31898030638694763, 0.31845200061798096, 0.3329811096191406, 0.3323206901550293, 0.33984941244125366, 0.3535860478878021, 0.3568881154060364, 0.3533218801021576, 0.36507725715637207, 0.372209757566452, 0.37062475085258484, 0.37022849917411804, 0.37405890226364136, 0.38568219542503357, 0.39162594079971313, 0.3947959244251251, 0.40483424067497253, 0.39730551838874817, 0.40668338537216187, 0.4041738212108612, 0.4167217016220093, 0.4099854826927185, 0.414608359336853, 0.410910040140152, 0.41725003719329834, 0.4239862561225891, 0.4299300014972687, 0.43970412015914917, 0.4263637661933899, 0.43825122714042664, 0.4427420496940613, 0.44564786553382874, 0.4519878625869751, 0.45449742674827576, 0.45885616540908813, 0.46030908823013306, 0.4600449204444885, 0.4651961326599121, 0.4695548713207245, 0.4744419455528259, 0.4695548713207245, 0.4827631711959839, 0.48606523871421814, 0.48210275173187256, 0.4846123456954956, 0.5028398036956787, 0.5057455897331238, 0.5064060091972351, 0.5013868808746338, 0.518161416053772, 0.5155197381973267, 0.5071985125541687, 0.5259543061256409, 0.5177651643753052, 0.523048460483551, 0.5278034806251526, 0.5268788933753967, 0.5279355645179749, 0.5330867767333984, 0.5433892607688904, 0.5375775694847107, 0.5354642868041992, 0.5355963706970215, 0.544181764125824, 0.5464271306991577, 0.5429930090904236, 0.5528992414474487], "val_loss": [1.9702844619750977, 1.9700072833469935, 1.9695521082196916, 1.9689173017229353, 1.968104294368199, 1.967116355895996, 1.9659558704921178, 1.964623246874128, 1.9631214823041643, 1.9614488737923759, 1.9596092360360282, 1.9576068605695451, 1.9554441996983118, 1.9531220027378626, 1.9506447655814034, 1.9480132375444685, 1.9452331406729562, 1.9423044749668665, 1.9392384801592146, 1.9360391071864538, 1.9327011108398438, 1.929213387625558, 1.9255783217293876, 1.9217994553702218, 1.9178836686270577, 1.913825443812779, 1.90961640221732, 1.9052393777029855, 1.9006959370204382, 1.89596768787929, 1.8910348755972726, 1.8858747482299805, 1.8804699352809362, 1.8747880799429757, 1.8688033648899622, 1.8624981471470423, 1.8558384350367956, 1.8487958226885115, 1.841336931501116, 1.8334221158708846, 1.8250314167567663, 1.8161276408604212, 1.8066832678658622, 1.796661036355155, 1.786029543195452, 1.7747606549944197, 1.7628214018685477, 1.750164576939174, 1.7367639541625977, 1.7225762094770158, 1.7075690882546561, 1.6917108467647008, 1.6749705246516637, 1.6573141642979212, 1.6387297085353307, 1.6192047595977783, 1.5987247739519392, 1.5772991861615862, 1.554940598351615, 1.531672648021153, 1.5075305189405168, 1.482562678200858, 1.4568370410374232, 1.4304569108145577, 1.4035212653023856, 1.3761296953473772, 1.3484312806810652, 1.3205760206495012, 1.2927136761801583, 1.2649925436292375, 1.237565585545131, 1.2105588572365897, 1.1841044766562325, 1.158325501850673, 1.1333263260977608, 1.1091880798339844, 1.0859379087175642, 1.0635904244014196, 1.0421772343771798, 1.0216803550720215, 1.0021280220576696, 0.9834973812103271, 0.9657670089176723, 0.9488584314073835, 0.9326954909733364, 0.9172199453626361, 0.9023741653987339, 0.8881097521100726, 0.8744031361171177, 0.8611727271761213, 0.8485498939241681, 0.8367059571402413, 0.8257028034755162, 0.8157680545534406, 0.8070403507777623, 0.799529893057687, 0.7933157171521869, 0.7883087056023734, 0.7840741702488491, 0.7800934825624738], "val_accuracy": [0.036666665226221085, 0.03799999877810478, 0.04233333468437195, 0.04633333161473274, 0.05233333259820938, 0.061666667461395264, 0.0689999982714653, 0.0820000022649765, 0.09266666322946548, 0.10566666722297668, 0.12399999797344208, 0.14366666972637177, 0.17266666889190674, 0.19433332979679108, 0.21766667068004608, 0.24266666173934937, 0.2643333375453949, 0.28833332657814026, 0.3086666762828827, 0.32233333587646484, 0.33633333444595337, 0.3449999988079071, 0.3529999852180481, 0.35600000619888306, 0.3623333275318146, 0.367333322763443, 0.37299999594688416, 0.37566667795181274, 0.38333332538604736, 0.390666663646698, 0.39800000190734863, 0.4036666750907898, 0.40533334016799927, 0.40933331847190857, 0.41200000047683716, 0.41466665267944336, 0.4166666567325592, 0.4203333258628845, 0.42366665601730347, 0.42800000309944153, 0.43166667222976685, 0.4336666762828827, 0.4386666715145111, 0.44466665387153625, 0.4483333230018616, 0.45233333110809326, 0.4573333263397217, 0.4623333215713501, 0.46666666865348816, 0.4713333249092102, 0.4753333330154419, 0.47833332419395447, 0.48633334040641785, 0.4909999966621399, 0.4946666657924652, 0.49966666102409363, 0.5076666474342346, 0.5149999856948853, 0.5196666717529297, 0.5270000100135803, 0.5326666831970215, 0.5403333306312561, 0.546999990940094, 0.5513333082199097, 0.5559999942779541, 0.562666654586792, 0.5683333277702332, 0.5756666660308838, 0.5830000042915344, 0.5856666564941406, 0.5926666855812073, 0.5976666808128357, 0.6013333201408386, 0.6079999804496765, 0.6150000095367432, 0.6190000176429749, 0.6256666779518127, 0.6326666474342346, 0.6383333206176758, 0.6439999938011169, 0.6489999890327454, 0.6539999842643738, 0.6573333144187927, 0.6620000004768372, 0.6669999957084656, 0.6683333516120911, 0.6660000085830688, 0.6706666946411133, 0.6713333129882812, 0.671999990940094, 0.6736666560173035, 0.675000011920929, 0.6753333210945129, 0.675000011920929, 0.675000011920929, 0.6756666898727417, 0.6763333082199097, 0.6763333082199097, 0.6769999861717224, 0.6806666851043701]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 3, 4, 8, 8, 0], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 4, 0, 3, 2, 8], [1, 0, 3, 0, 3, 0, 2], [55, 42, 7, 12, 41]], "fitness": -0.3199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 16, 10, 6, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), sigma))))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023814518595604, 2.3012620414237084, 2.3021098207000885, 2.3008205531027968, 2.301079797234596, 2.300870452747841, 2.300114115294433, 2.2992000326646114, 2.299434601685878, 2.299248731084362, 2.299145288628641, 2.296884498198145, 2.29796415404432, 2.2967764418658296, 2.296499609994441, 2.2945657533787465, 2.2957891431608695, 2.2965984566179265, 2.295557982256195, 2.295833734898535, 2.2939327583494378, 2.293923026267422, 2.293792272177764, 2.293594035836511, 2.2929733057756465, 2.293624286276238, 2.2939934577168475, 2.292728213491756, 2.291194442272375, 2.2913664168276098, 2.290420516418066, 2.289773395709893, 2.2894278545704627, 2.2892795855169834, 2.2898297745711327, 2.2891978999296465, 2.2882834655765247, 2.2877513773452964, 2.2875094861874663, 2.2870999982627533, 2.2871393496727883, 2.286545665052195, 2.2851404621616536, 2.286726954464805, 2.2851144349837993, 2.2868512323299153, 2.2852434524376912, 2.283371678716266, 2.284224702193674, 2.2832360274252275, 2.2836384618003622, 2.282738842842617, 2.282482675037931, 2.2829879957687083, 2.282674850521307, 2.2818459007387637, 2.281905606847634, 2.2803687659142557, 2.279286825551396, 2.2799655030101533, 2.278748640719973, 2.2804752232895833, 2.2781023019970275, 2.279061913663496, 2.2759454699712673, 2.277593174000867, 2.2764638483311757, 2.275636301473966, 2.2752910542717983, 2.2754422802069185, 2.275168138519648, 2.27411573859978, 2.2752867401268158, 2.275188615309202, 2.2744863393237136, 2.2736169837170177, 2.2727139073592197, 2.2728670603248657, 2.2723570751114104, 2.270933580751259, 2.271774722852444, 2.2714014362271717, 2.27088210702714, 2.2702521089675516, 2.2713398821932405, 2.2686514374507873, 2.269726511352271, 2.2676403743558478, 2.2686297756853104, 2.2684308667271726, 2.2690909032918647, 2.2670841052972754, 2.264598751521586, 2.267188325927809, 2.265737230720112, 2.266398170164091, 2.2648133708186484, 2.2651142856117725, 2.2644807853089066, 2.2637990891201274], "accuracy": [0.08651433140039444, 0.09457138925790787, 0.09153348207473755, 0.09496764093637466, 0.09919429570436478, 0.09509972482919693, 0.09589222073554993, 0.09681680053472519, 0.09919429570436478, 0.10077928751707077, 0.09800554811954498, 0.10077928751707077, 0.1006472036242485, 0.10355303436517715, 0.108440101146698, 0.10976093262434006, 0.10672302544116974, 0.10698718577623367, 0.107647605240345, 0.11134592443704605, 0.10870426893234253, 0.10989301651716232, 0.11610091477632523, 0.11557257920503616, 0.11174217611551285, 0.11966715008020401, 0.11662924289703369, 0.11147800832986832, 0.11662924289703369, 0.11662924289703369, 0.12138422578573227, 0.1254788041114807, 0.12151630967855453, 0.12561088800430298, 0.12270505726337433, 0.12508255243301392, 0.12640337646007538, 0.12561088800430298, 0.12600713968276978, 0.13432836532592773, 0.1298375427722931, 0.1294412910938263, 0.13591335713863373, 0.13049794733524323, 0.13551710546016693, 0.1328754425048828, 0.13089419901371002, 0.13776251673698425, 0.13895125687122345, 0.14555540680885315, 0.1406683325767517, 0.13974376022815704, 0.1534803807735443, 0.13908334076404572, 0.1398758441209793, 0.14159291982650757, 0.14370624721050262, 0.1500462293624878, 0.1476687341928482, 0.15361246466636658, 0.1570466309785843, 0.15149913728237152, 0.1570466309785843, 0.15453705191612244, 0.16378284990787506, 0.15915995836257935, 0.15612204372882843, 0.16814158856868744, 0.1624620258808136, 0.16299036145210266, 0.1682736724615097, 0.16774533689022064, 0.16312244534492493, 0.16391493380069733, 0.16351869702339172, 0.1640470176935196, 0.17144367098808289, 0.1620657742023468, 0.17117950320243835, 0.17263241112232208, 0.17421740293502808, 0.17738740146160126, 0.17699114978313446, 0.18438778817653656, 0.17540615797042847, 0.17712323367595673, 0.17593449354171753, 0.1802932173013687, 0.18412363529205322, 0.1826707124710083, 0.17197199165821075, 0.18042530119419098, 0.18412363529205322, 0.18663319945335388, 0.18570862710475922, 0.18293488025665283, 0.18821820616722107, 0.19323734939098358, 0.18835029006004333, 0.19152027368545532], "val_loss": [1.970020157950265, 1.9696571486336845, 1.96928984778268, 1.9689202308654785, 1.968552930014474, 1.968191691807338, 1.9678267751421248, 1.9674607004438127, 1.9670962606157576, 1.966735907963344, 1.9663757596697127, 1.9660098212105888, 1.9656480380467005, 1.9652862548828125, 1.9649295806884766, 1.9645671844482422, 1.9642054694039481, 1.9638467516217912, 1.9634846959795271, 1.9631265912737166, 1.9627649443490165, 1.962399618966239, 1.9620415142604284, 1.9616848400660925, 1.9613241468157088, 1.9609654290335519, 1.9606033052716936, 1.9602443831307548, 1.9598847116742815, 1.9595287186758858, 1.9591705458504813, 1.9588125092642648, 1.9584524972098214, 1.958094937460763, 1.9577366283961706, 1.9573770931788854, 1.957017081124442, 1.9566598619733537, 1.956296648297991, 1.9559386798313685, 1.9555813244410925, 1.9552197456359863, 1.954861845288958, 1.9545049667358398, 1.9541450909205846, 1.953789370400565, 1.953429903302874, 1.9530702318464006, 1.9527132170540946, 1.9523534774780273, 1.951991285596575, 1.9516263008117676, 1.9512645176478796, 1.9509053911481584, 1.9505464008876257, 1.9501865931919642, 1.9498254912240165, 1.9494589396885462, 1.9490937505449568, 1.94873012815203, 1.9483624867030553, 1.9479962076459612, 1.947634152003697, 1.947270393371582, 1.9469002314976283, 1.9465351785932268, 1.9461699213300432, 1.945803233555385, 1.9454364776611328, 1.9450681550162179, 1.9446990830557687, 1.9443279675074987, 1.9439591680254256, 1.943589687347412, 1.9432186399187361, 1.942849908556257, 1.942478861127581, 1.9421163286481584, 1.941751343863351, 1.9413798877171107, 1.9410076822553362, 1.9406349999564034, 1.9402621132986886, 1.9398894309997559, 1.9395179067339217, 1.9391459737505232, 1.9387690680367606, 1.9383926391601562, 1.9380156653267997, 1.9376376015799386, 1.9372589247567313, 1.9368799073355538, 1.9364930561610632, 1.9361134256635393, 1.9357341357639857, 1.9353552545819963, 1.9349734442574638, 1.9345909527369909, 1.9342042378016882, 1.9338231086730957], "val_accuracy": [0.038333334028720856, 0.04233333468437195, 0.04466666653752327, 0.04633333161473274, 0.04866666719317436, 0.052000001072883606, 0.055666666477918625, 0.05900000035762787, 0.06199999898672104, 0.06466666609048843, 0.06666667014360428, 0.06833333522081375, 0.07100000232458115, 0.07466666400432587, 0.07833333313465118, 0.08266666531562805, 0.08366666734218597, 0.0860000029206276, 0.08933333307504654, 0.09233333170413971, 0.09466666728258133, 0.09700000286102295, 0.09966666996479034, 0.10266666859388351, 0.10599999874830246, 0.10866666585206985, 0.11233333498239517, 0.11599999666213989, 0.11933333426713943, 0.12433333694934845, 0.12733332812786102, 0.12966667115688324, 0.13300000131130219, 0.13566666841506958, 0.1393333375453949, 0.14433333277702332, 0.1496666669845581, 0.15299999713897705, 0.1589999943971634, 0.16300000250339508, 0.16866666078567505, 0.17133332788944244, 0.17599999904632568, 0.18133333325386047, 0.18266665935516357, 0.18566666543483734, 0.18933333456516266, 0.19200000166893005, 0.195333331823349, 0.1966666728258133, 0.19966666400432587, 0.20366667211055756, 0.2070000022649765, 0.21266666054725647, 0.2150000035762787, 0.21666666865348816, 0.21933333575725555, 0.22100000083446503, 0.22599999606609344, 0.22966666519641876, 0.234333336353302, 0.23733332753181458, 0.24166665971279144, 0.2436666637659073, 0.2460000067949295, 0.24966666102409363, 0.2516666650772095, 0.2549999952316284, 0.25699999928474426, 0.2606666684150696, 0.2630000114440918, 0.26499998569488525, 0.26733332872390747, 0.27033331990242004, 0.27399998903274536, 0.2776666581630707, 0.2826666533946991, 0.2840000092983246, 0.28566667437553406, 0.28833332657814026, 0.289000004529953, 0.2906666696071625, 0.2930000126361847, 0.29633334279060364, 0.29899999499320984, 0.30033332109451294, 0.3023333251476288, 0.3050000071525574, 0.3076666593551636, 0.3089999854564667, 0.3109999895095825, 0.312333345413208, 0.31333333253860474, 0.3153333365917206, 0.3166666626930237, 0.31933334469795227, 0.3216666579246521, 0.32366666197776794, 0.32600000500679016, 0.3269999921321869]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 0, 0, 0, 1], [2, 3, 1, 6, 7], [2, 5], [71], [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [3, 0, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.10857142508029938, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.931493168100154, 2.9493961883432056, 2.5841767600246817, 2.387965642009287, 2.3718917201680436, 2.400407837649945], "accuracy": [0.16734910011291504, 0.09232597798109055, 0.09549596905708313, 0.09549596905708313, 0.09747721254825592, 0.09959053993225098], "val_loss": [2.7120254380362376, 2.3286794253758023, 1.991889204297747, 2.0262824467250278, 2.0783495221819197, 1.986443315233503], "val_accuracy": [0.10000000149011612, 0.09733333438634872, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1], [1, 3], [5, 5], [71], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [28, 21, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [2, 3, 1, 6, 7], [2, 5], [71], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 8, 5, 0, 0, 4, 0, 8], [1, 0, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [2, 3, 1, 6, 7], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 8, 8, 5, 8, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 8, 2, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.negative(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1], [9, 3], [0, 5], [71], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 8, 9, 2, 0, 0, 9, 0, 8], [1, 0, 0, 1, 3, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 0, 0, 1], [2, 3, 6, 4, 5, 3], [5, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 6, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [28, 21, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 10, 3, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 3, 0, 8, 9, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [1, 3], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [52, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 11, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), tf.math.negative(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [7.30820053777299e+24, 2.442293308005121, 2.7458550743281394, 3.819658364255777, 5.888748252837413, 8.267736864726084], "accuracy": [0.06498481333255768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0540158408028737, 2.1950363431658064, 2.7426342282976424, 4.250159399850028, 6.259240967886789, 8.330625806535993], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 9, 0, 8], [3, 0, 0, 0, 3, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0, 1], [2, 3, 1, 6, 7], [2, 5], [71], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 0, 8, 9, 2, 0, 0, 9, 0, 8], [1, 2, 0, 1, 3, 0, 2], [93, 74, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.sqrt(beta)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [2, 3, 1, 6, 7], [2, 5], [71], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 1, 0, 8, 9, 2, 0, 0, 9, 0, 8], [1, 0, 0, 1, 3, 0, 2], [94, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019834753544637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [8, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 0, 0, 0, 2, 0, 8], [0, 0, 0, 1, 3, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019834753544637, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 3, 4, 8, 8, 0], [2, 5], [71], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 0, 0, 6, 2, 0, 8], [1, 1, 0, 0, 3, 0, 2], [55, 42, 57, 12, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.sqrt(alpha))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [14, 95, 54, 66], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1], [2, 3, 4, 0, 6], [3, 5], [71], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 8, 5, 0, 0, 3, 0, 8], [2, 3, 0, 1, 3, 0, 2], [28, 42, 57, 12, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.subtract(tf.math.square(tf.math.add(beta, beta)), tf.math.square(grad))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.302541542771218, 2.301807352737933, 2.3030552710713397, 2.3021661759430563, 2.3028217577553223, 2.3029711097223], "accuracy": [0.08625016361474991, 0.09325055778026581, 0.08928807079792023, 0.09325055778026581, 0.09496764093637466, 0.09074098616838455], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 8, 9, 5, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [39, 42, 57, 12, 41]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302541542771218, 2.301807352737933, 2.3030552710713397, 2.3021661759430563, 2.3028217577553223, 2.3029711097223], "accuracy": [0.08625016361474991, 0.09325055778026581, 0.08928807079792023, 0.09325055778026581, 0.09496764093637466, 0.09074098616838455], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]