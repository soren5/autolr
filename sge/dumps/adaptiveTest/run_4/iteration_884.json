[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 8, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [3, 3, 3, 0, 5, 2], [6, 5, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 8, 6, 4, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0409764372645873, 1.0776920463934614, 0.7806684525257656, 0.6923140404782102, 0.646204248466323, 0.6002314157096102, 0.5606274353105316, 0.5360070983841749, 0.49591671700538065, 0.46981187264964314, 0.45686350303271883, 0.42272895973324853, 0.4119931995797828, 0.4021182649596303, 0.37870913094863945, 0.3821914592289638, 0.36331551715587945, 0.3602821658890812, 0.34914180894238744, 0.3342960889407783, 0.3292317708147011, 0.3161517869818401, 0.3106574553146559, 0.2974653317353288, 0.2819651013800906, 0.2823040219400978, 0.2741701326129648], "accuracy": [0.31039494276046753, 0.6234315037727356, 0.6983225345611572, 0.7312111854553223, 0.7506273984909058, 0.7707040309906006, 0.7835160493850708, 0.7965922355651855, 0.811649739742279, 0.8220842480659485, 0.8284242749214172, 0.8428213000297546, 0.8467837572097778, 0.8487650156021118, 0.8621054291725159, 0.8506141901016235, 0.8660678863525391, 0.8619733452796936, 0.8664641380310059, 0.8687095642089844, 0.8804649114608765, 0.8802007436752319, 0.8833707571029663, 0.887201189994812, 0.8901069760322571, 0.8911636471748352, 0.8963148593902588], "val_loss": [0.8713313170841762, 0.5923021691186088, 0.5458334684371948, 0.5065865346363613, 0.46430650779179167, 0.4342036928449358, 0.4271983333996364, 0.40262547561100553, 0.37589756080082487, 0.36277412516730173, 0.3456887773105076, 0.3363374386514936, 0.3326325842312404, 0.3225214992250715, 0.31892221314566477, 0.3125099539756775, 0.3164386408669608, 0.3215173142296927, 0.30260845593043734, 0.30182221106120516, 0.29791017941066195, 0.28261720282690866, 0.3031804987362453, 0.30037568296704975, 0.29187428099768503, 0.2923880049160549, 0.2949620911053249], "val_accuracy": [0.6573333144187927, 0.7483333349227905, 0.7546666860580444, 0.7746666669845581, 0.7883333563804626, 0.8076666593551636, 0.809333324432373, 0.8323333263397217, 0.8433333039283752, 0.8513333201408386, 0.859000027179718, 0.8640000224113464, 0.8646666407585144, 0.8679999709129333, 0.8709999918937683, 0.8756666779518127, 0.8713333606719971, 0.8709999918937683, 0.8763333559036255, 0.8793333172798157, 0.878000020980835, 0.8880000114440918, 0.8786666393280029, 0.8786666393280029, 0.878000020980835, 0.8836666941642761, 0.8799999952316284]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 2, 5, 2], [6, 4], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.833142876625061, "mapping_values": [1, 10, 10, 5, 5, 2, 3, 3, 2, 1, 1, 7, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0409752921248154, 1.0776787439530724, 0.7798499873584808, 0.6917214555637066, 0.6457737837611188, 0.5995397783856209, 0.5597980540851482, 0.5359769472710886, 0.4940502246207785, 0.4688779975263875, 0.4574894629701285, 0.4227882423586361, 0.4114863031835698, 0.4021378684675279, 0.38193300340027936, 0.37802751140902463, 0.35912023628975154, 0.3590499340637627, 0.3531723769782415, 0.3360918044272415, 0.3348984167072295, 0.3200094636326469, 0.3162454431949117, 0.30399526824347806, 0.28252978103508203, 0.2764255688009702, 0.2725727886587417], "accuracy": [0.31039494276046753, 0.6227710843086243, 0.6989829540252686, 0.7314753532409668, 0.7511557340621948, 0.7746664881706238, 0.7857614755630493, 0.7935543656349182, 0.8132346868515015, 0.8216879963874817, 0.8294808864593506, 0.8385946154594421, 0.846387505531311, 0.8469158411026001, 0.859199583530426, 0.8564258217811584, 0.8660678863525391, 0.8622375130653381, 0.8696341514587402, 0.8726720213890076, 0.8775591254234314, 0.8774270415306091, 0.8800686597824097, 0.8829745054244995, 0.8905032277107239, 0.8945978283882141, 0.8965790271759033], "val_loss": [0.8714662960597447, 0.5925913197653634, 0.5447193554469517, 0.5064289399555751, 0.466298120362418, 0.4335176348686218, 0.4285090480531965, 0.39765435457229614, 0.3738484297479902, 0.35993984767368864, 0.3479740193911961, 0.3363132391657148, 0.3351470487458365, 0.3249870368412563, 0.3171477573258536, 0.31113864694322857, 0.3163088134356907, 0.317983797618321, 0.302076484475817, 0.3007383176258632, 0.3101104327610561, 0.28726275478090557, 0.30902819122586933, 0.2977622491972787, 0.29013947929654804, 0.28998981203351704, 0.30078899008887156], "val_accuracy": [0.6573333144187927, 0.7490000128746033, 0.7546666860580444, 0.7763333320617676, 0.7853333353996277, 0.8066666722297668, 0.8116666674613953, 0.8326666951179504, 0.8423333168029785, 0.8529999852180481, 0.862666666507721, 0.8643333315849304, 0.8633333444595337, 0.8700000047683716, 0.8740000128746033, 0.8733333349227905, 0.8690000176429749, 0.8703333139419556, 0.875, 0.8726666569709778, 0.8703333139419556, 0.8836666941642761, 0.8773333430290222, 0.8759999871253967, 0.8796666860580444, 0.8816666603088379, 0.8773333430290222]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [6, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8320000171661377, "mapping_values": [1, 10, 10, 5, 5, 0, 3, 3, 2, 1, 1, 9, 7, 4, 3, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0409750853862114, 1.0776813123771276, 0.7805236814485297, 0.6909482912175833, 0.6453704274939887, 0.5999685339546003, 0.5611328731721906, 0.5353924380301673, 0.49447918325572077, 0.4691549298738397, 0.45655744362500966, 0.42358046576819636, 0.41239685801907994, 0.4033422692340709, 0.3792059761957328, 0.37961499987182645, 0.35913582252253157, 0.35460364752441836, 0.3439258078440164, 0.330957371281469, 0.3224092885456254, 0.3129793264728574, 0.31017034947517885, 0.2932489801863984, 0.280578335916141, 0.27606797970171065, 0.2673456112289189], "accuracy": [0.31039494276046753, 0.6227710843086243, 0.6980583667755127, 0.7317395210266113, 0.7512878179550171, 0.7693831920623779, 0.7843085527420044, 0.7938185334205627, 0.8120459914207458, 0.8226125836372375, 0.8276317715644836, 0.8408400416374207, 0.8465195894241333, 0.8455950617790222, 0.8590674996376038, 0.8570862412452698, 0.8642187118530273, 0.8665962219238281, 0.8717474341392517, 0.8737286925315857, 0.878879964351654, 0.883238673210144, 0.8856161832809448, 0.8860124349594116, 0.887597382068634, 0.893541157245636, 0.8989565372467041], "val_loss": [0.8714641843523298, 0.5927459001541138, 0.5444735288619995, 0.5033915213176182, 0.46460722173963276, 0.43198132514953613, 0.42706755229404997, 0.3991678697722299, 0.3750015752656119, 0.3622303434780666, 0.34959776060921804, 0.33944209132875713, 0.3347221868378775, 0.3237171173095703, 0.3168011818613325, 0.3138405850955418, 0.3137261356626238, 0.3144360269818987, 0.30025809151785715, 0.3002787487847464, 0.299764164856502, 0.286463873726981, 0.30134174653462004, 0.2996573618480137, 0.29034097705568584, 0.29178800753184725, 0.30001167740140644], "val_accuracy": [0.6570000052452087, 0.7486666440963745, 0.7566666603088379, 0.7786666750907898, 0.7870000004768372, 0.8076666593551636, 0.8130000233650208, 0.8326666951179504, 0.8433333039283752, 0.8510000109672546, 0.859666645526886, 0.8650000095367432, 0.8633333444595337, 0.8703333139419556, 0.8706666827201843, 0.8723333477973938, 0.8703333139419556, 0.8733333349227905, 0.8793333172798157, 0.8730000257492065, 0.8723333477973938, 0.8846666812896729, 0.8773333430290222, 0.8763333559036255, 0.8823333382606506, 0.8786666393280029, 0.8793333172798157]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8291428685188293, "mapping_values": [1, 10, 10, 5, 5, 2, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.040975240416546, 1.077660550822073, 0.7800084999082835, 0.6921301155971451, 0.6468002181074576, 0.6002422854837693, 0.5587700272847191, 0.5360869148923516, 0.49567549133958944, 0.47164593473039423, 0.4557705399516457, 0.42357408198556407, 0.41048725212113163, 0.4001875989598652, 0.3782718688615671, 0.37939733568750683, 0.36518748417317576, 0.35518173280802734, 0.34328692253979676, 0.3291830372627716, 0.33160488757600937, 0.3228922733903451, 0.31313871435910606, 0.29929428351884346, 0.2829184065704663, 0.28200172917828065, 0.27622727716540646, 0.26950887031385756, 0.2540453003854516, 0.2638436942454169, 0.24496654402688509, 0.23538948115679284, 0.23767977213705252, 0.22440695748266495, 0.22666149391293164, 0.21341215462386096, 0.21120005191206978], "accuracy": [0.31039494276046753, 0.6232994198799133, 0.6988508701324463, 0.7316074371337891, 0.7489103078842163, 0.7740060687065125, 0.7858935594558716, 0.7954035401344299, 0.8123101592063904, 0.8201030492782593, 0.8290846943855286, 0.8416325449943542, 0.8500858545303345, 0.847840428352356, 0.8599920868873596, 0.8556333184242249, 0.8650112152099609, 0.8664641380310059, 0.8717474341392517, 0.8755778670310974, 0.8759741187095642, 0.8758420348167419, 0.8840311765670776, 0.8833707571029663, 0.8886540532112122, 0.8911636471748352, 0.8977677822113037, 0.896446943283081, 0.9022586345672607, 0.8967111110687256, 0.9062210917472839, 0.9115044474601746, 0.9085986018180847, 0.9124290347099304, 0.9129573106765747, 0.9149385690689087, 0.9157310724258423], "val_loss": [0.8714648314884731, 0.5926775932312012, 0.5444204466683524, 0.505891067641122, 0.4648091793060303, 0.4329071470669338, 0.42838081291743685, 0.396840648991721, 0.37615749665669035, 0.3656000239508493, 0.3486269882747105, 0.33639547654560636, 0.33244718824114117, 0.3221943463597979, 0.31768438645771574, 0.31507433312279837, 0.3233916589191982, 0.32097963775907246, 0.30216563599450247, 0.30041838543755667, 0.3050802605492728, 0.29003725733075825, 0.2981197493416922, 0.2980718953268869, 0.2929795469556536, 0.2910979219845363, 0.30195313692092896, 0.29494638102395193, 0.30401461465018137, 0.2884618980543954, 0.2893851654870169, 0.29630766596112934, 0.2933404530797686, 0.29560347965785433, 0.2883645806993757, 0.3016345075198582, 0.28629201650619507], "val_accuracy": [0.6573333144187927, 0.7486666440963745, 0.7540000081062317, 0.7756666541099548, 0.7913333177566528, 0.8106666803359985, 0.8143333196640015, 0.8333333134651184, 0.8433333039283752, 0.8519999980926514, 0.859666645526886, 0.8669999837875366, 0.8669999837875366, 0.8730000257492065, 0.8733333349227905, 0.8733333349227905, 0.862333357334137, 0.871666669845581, 0.8769999742507935, 0.878333330154419, 0.8726666569709778, 0.8806666731834412, 0.875, 0.8766666650772095, 0.8769999742507935, 0.8840000033378601, 0.875, 0.8793333172798157, 0.8846666812896729, 0.8820000290870667, 0.8809999823570251, 0.8893333077430725, 0.8820000290870667, 0.8799999952316284, 0.8843333125114441, 0.8866666555404663, 0.887666642665863]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 6, 1, 6, 0, 6, 3, 4, 5, 4, 1, 6, 6, 3, 2, 8, 5, 9, 2, 5, 8, 1, 2, 7, 7, 2, 6, 8, 2, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [61, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1], [1, 3, 9, 3, 5, 2], [6, 5, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7951428294181824, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.218095487150707, 1.703990059332872, 1.3004660293520907, 1.0488868988878173, 0.9373552548634991, 0.8962361753860784, 0.8494711577018428, 0.8004012919294206, 0.7712857931234329, 0.7675761491819978, 0.71778129588942, 0.7246631995215471, 0.6904741954164199, 0.6920945246332058, 0.6832880511763798, 0.6664920474056082, 0.6495062606587559, 0.6398010727924961, 0.63899815570661, 0.6262685950752483, 0.6294557107060168, 0.619491854497801, 0.6333096909595439, 0.6074245888417533, 0.5921609136627146, 0.5828062125940868], "accuracy": [0.24976885318756104, 0.47232863306999207, 0.5276713967323303, 0.6310923099517822, 0.6610751748085022, 0.6733588576316833, 0.6812838315963745, 0.702681303024292, 0.7104741930961609, 0.707040011882782, 0.7316074371337891, 0.7256637215614319, 0.7421740889549255, 0.741909921169281, 0.7383436560630798, 0.7457403540611267, 0.7528728246688843, 0.7577598690986633, 0.7499669790267944, 0.7642319202423096, 0.7613261342048645, 0.7652885913848877, 0.7617223858833313, 0.7685906887054443, 0.7810064554214478, 0.7810064554214478], "val_loss": [1.6966790812356132, 1.0210345132010323, 0.8794846875326974, 0.6908770459038871, 0.6775482382093158, 0.6219275338309151, 0.6529099600655692, 0.5596999100276402, 0.5415573290416172, 0.5529618603842599, 0.5428244726998466, 0.5222666604178292, 0.4943011317934309, 0.5008791003908429, 0.5194927794592721, 0.47855842113494873, 0.4833055394036429, 0.5035733495439801, 0.47046819755009245, 0.46107685565948486, 0.4451538154057094, 0.45990095819745747, 0.4587791647229876, 0.4401210716792515, 0.4368785960333688, 0.4911172900881086], "val_accuracy": [0.5453333258628845, 0.609000027179718, 0.6503333449363708, 0.6909999847412109, 0.7123333215713501, 0.7369999885559082, 0.7129999995231628, 0.7583333253860474, 0.7636666893959045, 0.7609999775886536, 0.7543333172798157, 0.777999997138977, 0.7806666493415833, 0.762333333492279, 0.75, 0.800000011920929, 0.7903333306312561, 0.7643333077430725, 0.7893333435058594, 0.793666660785675, 0.8190000057220459, 0.7996666431427002, 0.79666668176651, 0.8180000185966492, 0.815666675567627, 0.7590000033378601]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [61, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [9, 3], [1, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7877143025398254, "mapping_values": [1, 9, 9, 4, 5, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.212688527228794, 1.6666359307192509, 1.3264693650965047, 1.1149608938055677, 0.9714559518256444, 0.8863185795306718, 0.8741592926009771, 0.7967744098442137, 0.7737122338445762, 0.7675954736203345, 0.7392109803724535, 0.7142086357504165, 0.7100435207863494, 0.7012526012918716, 0.681644312772674, 0.6819880006729321, 0.6603225222542113, 0.6569359190333962, 0.6483612528582291, 0.6318581893128836, 0.6220227408843695, 0.6152071720179849, 0.6171357003988418, 0.6246281052073468, 0.6002935733242184, 0.6151239816948187, 0.5954301800584245], "accuracy": [0.2569013237953186, 0.47087571024894714, 0.5341434478759766, 0.5937128663063049, 0.6452252268791199, 0.6760005354881287, 0.674679696559906, 0.7053229212760925, 0.7176066637039185, 0.7135120630264282, 0.7301545143127441, 0.7367587089538574, 0.7390040755271912, 0.741909921169281, 0.7430986762046814, 0.7434949278831482, 0.7560427784919739, 0.7588165402412415, 0.7584202885627747, 0.7680623531341553, 0.7724210619926453, 0.769911527633667, 0.7668735980987549, 0.7655527591705322, 0.7750627398490906, 0.7693831920623779, 0.7765156626701355], "val_loss": [1.672724757875715, 1.0120505946023124, 0.9501266138894218, 0.7693661621638707, 0.6320109367370605, 0.6428857019969395, 0.6317704405103411, 0.5527662719999041, 0.5487621000834874, 0.5339665753500802, 0.5317918062210083, 0.5494592019489833, 0.5126385688781738, 0.49035848890032085, 0.49424924169267925, 0.47978334767477854, 0.4780259132385254, 0.4690253734588623, 0.45783121245247976, 0.44969788619450163, 0.4511460065841675, 0.44140058755874634, 0.44569853373936247, 0.44357662541525705, 0.45039684431893484, 0.4427927391869681, 0.438987067767552], "val_accuracy": [0.5289999842643738, 0.6346666812896729, 0.57833331823349, 0.6263333559036255, 0.718999981880188, 0.7143333554267883, 0.7089999914169312, 0.7516666650772095, 0.7723333239555359, 0.7723333239555359, 0.7636666893959045, 0.7360000014305115, 0.7683333158493042, 0.7726666927337646, 0.7720000147819519, 0.7860000133514404, 0.7963333129882812, 0.8023333549499512, 0.8050000071525574, 0.8103333115577698, 0.7976666688919067, 0.8136666417121887, 0.8083333373069763, 0.8053333163261414, 0.7940000295639038, 0.8036666512489319, 0.8009999990463257]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 3, 3, 2, 5, 2, 1, 8, 5, 9], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7831428647041321, "mapping_values": [1, 31, 31, 18, 13, 4, 8, 8, 4, 4, 1, 16, 12, 10, 2, 1, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), alpha))))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, grad))))))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.282179116226537, 2.138315648954495, 1.6701685427328252, 1.3567527575405314, 1.0369683137076673, 0.9075405828279826, 0.8718724987211166, 0.8104893673113419, 0.7965085348905337, 0.7555242266479878, 0.7301244807596047, 0.7054434163837133, 0.6646578174776736, 0.6531904528421607, 0.6242949750996253, 0.6098251515895369, 0.5998784508041938, 0.6038313198870577, 0.617499666214934, 0.621281828539892, 0.6031530271305809, 0.7429031749458802, NaN, NaN, NaN, NaN], "accuracy": [0.14568749070167542, 0.33786818385124207, 0.4427420496940613, 0.5408796668052673, 0.629507303237915, 0.6606789231300354, 0.6812838315963745, 0.6993792057037354, 0.7071720957756042, 0.7181349992752075, 0.7259278893470764, 0.7306828498840332, 0.7514199018478394, 0.7520803213119507, 0.7617223858833313, 0.7737419009208679, 0.7779685854911804, 0.7817989587783813, 0.7770439982414246, 0.7732135653495789, 0.7775723338127136, 0.7448157668113708, 0.1072513535618782, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9032025337219238, 1.6011127063206263, 0.8941917760031564, 0.7199294396809169, 0.6437390531812396, 0.6162306070327759, 0.5806140218462262, 0.5523781606129238, 0.5433471032551357, 0.5203166859490531, 0.5065464121954781, 0.48716817583356586, 0.4702420064381191, 0.4575401544570923, 0.4510095034326826, 0.42493453196116854, 0.42284815652029856, 0.4299298184258597, 0.4241990957941328, 0.4206438660621643, 0.422681953225817, 1317.4002859933037, NaN, NaN, NaN, NaN], "val_accuracy": [0.3726666569709778, 0.4896666705608368, 0.6710000038146973, 0.6990000009536743, 0.7123333215713501, 0.734000027179718, 0.7450000047683716, 0.7609999775886536, 0.765666663646698, 0.7699999809265137, 0.7723333239555359, 0.7833333611488342, 0.7856666445732117, 0.8026666641235352, 0.8080000281333923, 0.8109999895095825, 0.8153333067893982, 0.8183333277702332, 0.8243333101272583, 0.8240000009536743, 0.8273333311080933, 0.19333332777023315, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 2, 1, 2, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [55, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1], [6, 5, 3, 0, 5, 2], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7774285674095154, "mapping_values": [1, 11, 11, 6, 5, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.217890342874392, 1.7125772928848337, 1.2735579002172783, 1.0916414888480461, 0.9786025125667671, 0.8892744721013478, 0.8750530096911767, 0.7912407223700595, 0.7808866763017307, 0.7701166531649468, 0.7671410689862838, 0.715030920866096, 0.7067544134285755, 0.6977137463550369, 0.7123759430176893, 0.6716161138503433, 0.6787591751272716, 0.6628886276090685, 0.6364315908110421, 0.6421300678945346, 0.6297909309363022], "accuracy": [0.24514594674110413, 0.4659886360168457, 0.5589750409126282, 0.6159027814865112, 0.6425835490226746, 0.6753401160240173, 0.6790384650230408, 0.7137762308120728, 0.7121912837028503, 0.7057191729545593, 0.7111346125602722, 0.7362303733825684, 0.7376832365989685, 0.7387399077415466, 0.7272487282752991, 0.743891179561615, 0.7430986762046814, 0.7602694630622864, 0.7635715007781982, 0.7593448758125305, 0.7685906887054443], "val_loss": [1.7000278404780798, 1.0429587023598808, 0.8331296443939209, 0.7242239883967808, 0.6635631322860718, 0.6436351367405483, 0.5810580934797015, 0.5744538136890956, 0.5743253571646554, 0.5475732939583915, 0.5333800315856934, 0.5246951239449638, 0.4963608809879848, 0.48984692777906147, 0.4931355374200003, 0.46232352937970844, 0.4776656797954014, 0.472044621195112, 0.46730618817465647, 0.4860715866088867, 0.4581107922962734], "val_accuracy": [0.5483333468437195, 0.624666690826416, 0.652999997138977, 0.6940000057220459, 0.7110000252723694, 0.7043333053588867, 0.7406666874885559, 0.7366666793823242, 0.734333336353302, 0.746999979019165, 0.7536666393280029, 0.7649999856948853, 0.7979999780654907, 0.7860000133514404, 0.7723333239555359, 0.8003333210945129, 0.781000018119812, 0.7879999876022339, 0.7799999713897705, 0.7746666669845581, 0.800000011920929]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 2, 1, 2, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [55, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1], [0, 4, 3, 0, 5, 2], [6, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7722856998443604, "mapping_values": [1, 14, 14, 9, 5, 1, 3, 3, 2, 1, 1, 8, 5, 5, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(sigma)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.217164801190857, 1.705026950708328, 1.282022700680088, 1.0682358090919417, 0.9566389513825067, 0.9158796940528801, 0.8385034261000486, 0.7926756902503741, 0.7645009358986383, 0.7377067734426463, 0.7294032653372254, 0.7080099736269612, 0.6987328240270265, 0.6733957099057994, 0.6658774297140719, 0.6530536190314993, 0.6518966923489342, 0.6411191024847664, 0.6264460792142827, 0.623085708744758], "accuracy": [0.24580636620521545, 0.4628186523914337, 0.5444459319114685, 0.618280291557312, 0.6514331102371216, 0.663848876953125, 0.6917183995246887, 0.703209638595581, 0.7156254053115845, 0.7271166443824768, 0.7211728692054749, 0.7290979027748108, 0.7363624572753906, 0.7430986762046814, 0.7464007139205933, 0.7531369924545288, 0.752740740776062, 0.7493065595626831, 0.7618544697761536, 0.763967752456665], "val_loss": [1.6930961949484689, 1.0342071396963937, 0.812438998903547, 0.6964986835207257, 0.6840542384556362, 0.6742643288203648, 0.5846202543803624, 0.5659283229282924, 0.542157769203186, 0.5369725908551898, 0.5357524667467389, 0.5109189919063023, 0.5023767948150635, 0.4895520380565098, 0.4788423776626587, 0.486066358430045, 0.4837878261293684, 0.47778916358947754, 0.46626852239881245, 0.47233697346278597], "val_accuracy": [0.47600001096725464, 0.5799999833106995, 0.6643333435058594, 0.6973333358764648, 0.6970000267028809, 0.6940000057220459, 0.7440000176429749, 0.7536666393280029, 0.7643333077430725, 0.7609999775886536, 0.7633333206176758, 0.7806666493415833, 0.765333354473114, 0.7956666946411133, 0.7963333129882812, 0.7743333578109741, 0.7799999713897705, 0.7793333530426025, 0.7946666479110718, 0.7943333387374878]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 4, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 2, 1, 2, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 0, 8, 6], [4, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7477142810821533, "mapping_values": [1, 10, 10, 5, 5, 2, 7, 7, 4, 3, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.03629249898812, 1.3658188435190846, 0.9725001778159836, 0.8240886391539693, 0.7462595609657485, NaN, NaN, NaN, NaN], "accuracy": [0.31145158410072327, 0.5614846348762512, 0.6383568644523621, 0.6929071545600891, 0.7162858247756958, 0.26337340474128723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [0.8562847035271781, 0.7687012808663505, 0.6293605736323765, 0.5304869072777885, 0.6440318141664777, NaN, NaN, NaN, NaN], "val_accuracy": [0.6510000228881836, 0.6523333191871643, 0.7276666760444641, 0.7459999918937683, 0.7379999756813049, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 9, 2, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [21, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [6, 6, 3, 0, 5, 2], [1, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [9, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1], [6, 3, 3, 3, 5, 2], [6, 5, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 1, 1, 1, 0, 1, 7, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad))))), lambda shape,  alpha, beta, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022307429126605, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 2, 2, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [79, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2], [0, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 3, 3, 2, 1, 1, 5, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30267503100647, 2.3030329086304717, 2.3029703295950434, 2.303012206239188, 2.3029387508637207, 2.3029635582365744, 2.303073560871925, 2.302969036164017, 2.302956916022814, 2.302978833936319], "accuracy": [0.09325055778026581, 0.09615638852119446, 0.09351472556591034, 0.09760929644107819, 0.09457138925790787, 0.09906221181154251, 0.09536388516426086, 0.09813763201236725, 0.0952318087220192, 0.09430722147226334], "val_loss": [1.9736733436584473, 1.9736734117780412, 1.9736743654523576, 1.9736693246023995, 1.973693915775844, 1.9737467084612166, 1.973738670349121, 1.9736713681902205, 1.973590646471296, 1.9735808372497559], "val_accuracy": [0.09733333438634872, 0.10066666454076767, 0.10000000149011612, 0.10100000351667404, 0.10300000011920929, 0.10133333504199982, 0.09733333438634872, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 8, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 2, 2, 1, 2, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [55, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1], [6, 5, 3, 0, 5, 2], [6, 5], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0], [6, 3, 3, 3, 5, 2], [4, 5, 5], [78], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 6, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 6, 1, 6, 0, 6, 3, 4, 5, 4, 1, 6, 6, 3, 2, 8, 5, 9, 2, 5, 8, 1, 2, 7, 7, 2, 6, 8, 2, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [73, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [56, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [9, 3], [1, 5], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302060426863949, 2.305572075598811, 2.308697638085269, 2.310525673035035, 2.315285030908399, 2.3161565866043317, 2.320132926187149, 2.3282969822390456, 2.3371704972226466, 2.3521714758769066, 2.4110584401372654, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.08387266844511032, 0.08440100401639938, 0.08308017253875732, 0.07832518965005875, 0.07621186226606369, 0.07528728246688843, 0.07660810649394989, 0.07132479548454285, 0.07119271159172058, 0.07938185334205627, 0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9713046210152763, 1.9727659906659807, 1.9743969781058175, 1.9765418597630091, 1.979074478149414, 1.9815635681152344, 1.9844903264726912, 1.9891839708600725, 1.9967991283961706, 2.0142062732151578, 2.348472458975656, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.02666666731238365, 0.025333333760499954, 0.02266666665673256, 0.02266666665673256, 0.03099999949336052, 0.04600000008940697, 0.06733333319425583, 0.08500000089406967, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 4, 2, 6, 1, 6, 0, 6, 3, 4, 5, 4, 1, 6, 6, 3, 2, 8, 5, 9, 2, 5, 8, 1, 2, 7, 7, 2, 6, 8, 2, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [61, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1], [9, 3], [6, 4], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 41, 41, 24, 17, 5, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.add(alpha, alpha)), grad)))))), grad)))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.sqrt(alpha))), alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1], [6, 3, 6, 2, 5, 2], [6, 4], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 7, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [239.0138695635863, 1.7597017503954786e+26, 4.141061487136153, 8.404680472764325, 14.264449056207921, 20.826926605371735], "accuracy": [0.04411570355296135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2178578285.714286, 2.6234557969229564, 5.4133501052856445, 10.066949844360352, 15.533956800188337, 21.382134573800222], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 0, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1], [2, 3, 3, 2, 5, 2], [6, 5, 4], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 3, 3, 2, 1, 1, 10, 8, 5, 3, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.negative(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11795007437467575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 2, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 2, 2, 2, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [61, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [3, 95, 54, 66], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [9, 3], [1, 5], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.054571427404880524, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301569084937877, 2.3032907639764097, 2.303976557336983, 2.3029799024584174, 2.3038813648694982, 2.302076644176946, 2.302276686749139, 2.3029041121176377, 2.3030101563621583, 2.3024589260571418, 2.302401580673246, 2.3010739875176736, 2.301332275770785, 2.3031323766979197, 2.3000804605485268, 2.301528051403047, 2.3001807610498304, 2.30160926793151, 2.3022247582630726, 2.300639354321368, 2.300370885428027, 2.3001261945287896, 2.3009587994750467, 2.3003286704442694, 2.3007993683319334, 2.299265582532206, 2.2989123495830253, 2.300306526015794, 2.2999648075723504, 2.300851763735484, 2.299727808892247, 2.2998140912880403, 2.2994218009920515, 2.302017624383558, 2.300660112262827, 2.2979522424996914, 2.3001160608731746, 2.3000218412265516, 2.2980871683004085, 2.297761741047916, 2.2998219009057297, 2.298131748606831, 2.299555070553599, 2.300664492444497, 2.2988379080974823, 2.299239971634262, 2.299132856096432, 2.2984364447797123, 2.2989440379346195, 2.2996787021283254, 2.3010225094792833, 2.2992714994131, 2.299120904684161, 2.299571929905692, 2.300412182794696, 2.2968793091694, 2.2993885213987717, 2.2990694194343253, 2.2965850029891084, 2.2977757250486412, 2.299340113546744, 2.2988928238855237, 2.298823748030415, 2.297507042173759, 2.298721999414152, 2.29719702647331, 2.298631430491008, 2.2977621935110175, 2.2989764361884757, 2.297736556381046, 2.2981920366699136, 2.2964176259351334, 2.2977685333164284, 2.2983996586288837, 2.296820313970505, 2.2979351938550248, 2.298526089472652, 2.296716590929718, 2.2984462429928882, 2.297407997786613, 2.2986003384850267, 2.296481282845496, 2.298528118660075, 2.296627321735806, 2.2982628623555286, 2.2984971002171366, 2.2969133158275525, 2.2964964193548933, 2.296958569569626, 2.2953921446096723, 2.2975160994345187, 2.2969857240003475, 2.2945584382017006, 2.2973910741613306, 2.2977847855529765, 2.297017251054892, 2.295576678605962, 2.2972387179816955, 2.295640274297764, 2.2972535159625336], "accuracy": [0.0948355570435524, 0.08730682730674744, 0.09285431355237961, 0.09245806187391281, 0.09285431355237961, 0.09087307006120682, 0.08928807079792023, 0.09496764093637466, 0.08717474341392517, 0.09602430462837219, 0.08968432247638702, 0.08902391046285629, 0.09417514503002167, 0.08413683623075485, 0.09760929644107819, 0.09166556596755981, 0.09298639744520187, 0.09642054885625839, 0.09074098616838455, 0.0936468094587326, 0.09470347315073013, 0.09734513610601425, 0.09536388516426086, 0.09615638852119446, 0.09417514503002167, 0.09272222965955734, 0.09787346422672272, 0.10157178342342377, 0.09311848133802414, 0.09153348207473755, 0.09576013684272766, 0.0948355570435524, 0.09826971590518951, 0.09377889335155487, 0.09932637959718704, 0.10619468986988068, 0.10157178342342377, 0.09866596013307571, 0.10236428678035736, 0.1018359512090683, 0.10170386731624603, 0.10474177449941635, 0.09893012791872025, 0.09945846349000931, 0.0952318087220192, 0.09985470771789551, 0.09787346422672272, 0.09998679161071777, 0.10130762308835983, 0.10289261490106583, 0.09708096832036972, 0.10434553027153015, 0.10038304328918457, 0.10051512718200684, 0.09100515395402908, 0.10447761416435242, 0.09721305221319199, 0.1018359512090683, 0.10632677376270294, 0.10117553919553757, 0.10249637067317963, 0.10355303436517715, 0.10249637067317963, 0.1022322028875351, 0.10196803510189056, 0.10579843819141388, 0.09840179979801178, 0.10249637067317963, 0.10011887550354004, 0.10342095047235489, 0.10527011007070541, 0.10408136248588562, 0.09985470771789551, 0.09932637959718704, 0.10751552134752274, 0.10368511080741882, 0.10672302544116974, 0.1072513535618782, 0.1014397069811821, 0.1014397069811821, 0.10381719470024109, 0.10910051316022873, 0.107647605240345, 0.1022322028875351, 0.10394927859306335, 0.10289261490106583, 0.10091137140989304, 0.10751552134752274, 0.10460969805717468, 0.11174217611551285, 0.10368511080741882, 0.10421344637870789, 0.10685510188341141, 0.10394927859306335, 0.09998679161071777, 0.10487385839223862, 0.11094967275857925, 0.10566636174917221, 0.10645885765552521, 0.10474177449941635], "val_loss": [1.97029447555542, 1.970202922821045, 1.9701079641069685, 1.9700243813650948, 1.969947678702218, 1.9698738370622908, 1.9697956357683455, 1.969719409942627, 1.9696457045418876, 1.969576699393136, 1.9694983618600028, 1.9694273131234306, 1.9693527221679688, 1.9692848069327218, 1.9692136219569616, 1.9691418239048548, 1.96907411302839, 1.969001225062779, 1.9689367839268275, 1.9688764299665178, 1.9688102858407157, 1.9687462534223283, 1.9686824253627233, 1.9686213902064733, 1.9685523850577218, 1.9684889657156808, 1.968425955091204, 1.9683631488255091, 1.96829925264631, 1.9682372638157435, 1.9681732995169503, 1.9681124005998885, 1.9680542945861816, 1.968001025063651, 1.9679282733372279, 1.9678647858755929, 1.9678004809788294, 1.9677397183009557, 1.967684064592634, 1.9676209858485632, 1.9675671713692802, 1.967510563986642, 1.9674598148890905, 1.9674031393868583, 1.9673499379839217, 1.9672980308532715, 1.9672441482543945, 1.9671878133501326, 1.9671365192958288, 1.967088290623256, 1.9670325687953405, 1.9669737815856934, 1.9669273240225655, 1.966874599456787, 1.9668200356619698, 1.9667669704982214, 1.9667154039655412, 1.966665812901088, 1.9666176523481096, 1.9665729658944267, 1.966519492013114, 1.9664685385567802, 1.9664218766348702, 1.9663738523210799, 1.9663288933890206, 1.9662844112941198, 1.9662363869803292, 1.9661920411246163, 1.9661427906581335, 1.9660906110491072, 1.9660414968218123, 1.9659904752458846, 1.9659446307591029, 1.9659017835344588, 1.9658543041774206, 1.965801511492048, 1.9657519885471888, 1.9657002176557268, 1.9656521252223425, 1.9656028066362654, 1.9655571665082658, 1.9655110495431083, 1.9654695647103446, 1.9654265131269182, 1.9653738566807337, 1.9653270585196358, 1.9652750151497977, 1.9652327128819056, 1.965188707624163, 1.9651408876691545, 1.9650978360857283, 1.9650543757847376, 1.9650085994175501, 1.9649624143327986, 1.964916774204799, 1.9648740632193429, 1.9648330552237374, 1.964789731161935, 1.9647444997514998, 1.9647010394505091], "val_accuracy": [0.036666665226221085, 0.03799999877810478, 0.039000000804662704, 0.03999999910593033, 0.03999999910593033, 0.0403333343565464, 0.0416666679084301, 0.04233333468437195, 0.0430000014603138, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.04699999839067459, 0.04699999839067459, 0.04866666719317436, 0.04866666719317436, 0.04899999871850014, 0.04933333396911621, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.05233333259820938, 0.0533333346247673, 0.05366666615009308, 0.05400000140070915, 0.05400000140070915, 0.054666668176651, 0.054666668176651, 0.054666668176651, 0.054999999701976776, 0.054999999701976776, 0.055666666477918625, 0.0560000017285347, 0.056333333253860474, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.057999998331069946, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.05999999865889549, 0.05999999865889549, 0.05999999865889549, 0.060333333909511566, 0.06133333221077919, 0.06233333423733711, 0.06266666948795319, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06433333456516266, 0.06533333659172058, 0.06599999964237213, 0.06666667014360428, 0.06700000166893005, 0.06700000166893005, 0.06833333522081375, 0.06866666674613953, 0.06966666877269745, 0.070333331823349, 0.07133333384990692, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.0729999989271164, 0.07333333045244217, 0.07400000095367432, 0.07466666400432587, 0.07500000298023224, 0.07500000298023224, 0.07566666603088379, 0.07599999755620956, 0.07633333653211594, 0.07699999958276749, 0.07733333110809326, 0.07733333110809326, 0.07766667008399963, 0.07766667008399963, 0.07733333110809326, 0.07766667008399963, 0.07766667008399963, 0.07833333313465118, 0.07999999821186066, 0.08033332973718643, 0.08033332973718643, 0.0806666687130928, 0.08100000023841858, 0.08133333176374435, 0.0820000022649765]}}]