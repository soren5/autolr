[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7705714106559753, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.260775058717618, 2.0695489540768968, 1.6374861268854852, 1.2770456589601926, 1.0934425754758739, 1.0099221897509434, 0.9344385783622892, 0.8923771769347649, 0.8593274579229545, 0.8263433454940821, 0.8074740279210542, 0.7888519531778924, 0.7591979485366795, 0.7524180198232212, 0.7387614531555448, 0.736560156206492, 0.7036358354003784, 0.7026272496102021, 0.6880291615337382, 0.6962746751621777, 0.6728396496012573, 0.6652632053218671, 0.6550032812543534, 0.6630038196904202, 0.6460881906729711, 0.6344513911943331, 0.6388556733501113], "accuracy": [0.19535067677497864, 0.37868180871009827, 0.48329150676727295, 0.5588429570198059, 0.6165632009506226, 0.6379606127738953, 0.6717738509178162, 0.6781138777732849, 0.6942279934883118, 0.7054550051689148, 0.7017567157745361, 0.7168141603469849, 0.7211728692054749, 0.726192057132721, 0.7296261787414551, 0.7244749665260315, 0.7413815855979919, 0.744419515132904, 0.7454761862754822, 0.7425703406333923, 0.7518161535263062, 0.7528728246688843, 0.7618544697761536, 0.7604015469551086, 0.7613261342048645, 0.7683265209197998, 0.7662131786346436], "val_loss": [1.8560126168387276, 1.532109328678676, 1.0573621817997523, 0.8314006328582764, 0.7210158279963902, 0.6858949661254883, 0.6317356995173863, 0.6231439113616943, 0.6032736812319074, 0.5682966538837978, 0.550991313798087, 0.535635232925415, 0.5260468891688755, 0.5235200950077602, 0.5165752172470093, 0.5086485147476196, 0.4886881113052368, 0.4861771719796317, 0.48404606751033236, 0.4734933376312256, 0.49025045122419086, 0.46246794291904997, 0.4665605681283133, 0.45893168449401855, 0.4525525059018816, 0.44981748717171804, 0.4486767053604126], "val_accuracy": [0.4440000057220459, 0.5463333129882812, 0.6233333349227905, 0.6916666626930237, 0.7153333425521851, 0.7173333168029785, 0.7383333444595337, 0.7286666631698608, 0.7406666874885559, 0.7573333382606506, 0.7670000195503235, 0.765333354473114, 0.7683333158493042, 0.765333354473114, 0.7816666960716248, 0.7736666798591614, 0.796999990940094, 0.7919999957084656, 0.7863333225250244, 0.8026666641235352, 0.7689999938011169, 0.8080000281333923, 0.7993333339691162, 0.8053333163261414, 0.8040000200271606, 0.7993333339691162, 0.7979999780654907]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7685714364051819, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.260775027226589, 2.069566890138755, 1.6375325820575442, 1.2771453173909095, 1.093616252436126, 1.010051271100133, 0.9341349206926832, 0.8917610986184576, 0.8599248792296623, 0.8263520513149599, 0.8088888429757737, 0.7884692005383073, 0.7589964545272234, 0.7522265159411438, 0.739110628871429, 0.7366585014455622, 0.7034124124949209, 0.7023063323139089, 0.6875108809849653, 0.6964350529571077, 0.6725407855118019, 0.6657515887051463, 0.6546100257425859, 0.6626918739284333, 0.645740439390793, 0.634129015705951, 0.6388320620222776], "accuracy": [0.19535067677497864, 0.37881389260292053, 0.48329150676727295, 0.5591071248054504, 0.6166952848434448, 0.6379606127738953, 0.6720380187034607, 0.6775855422019958, 0.6936996579170227, 0.7065116763114929, 0.7000396251678467, 0.7172104120254517, 0.7220974564552307, 0.7268524765968323, 0.7296261787414551, 0.7260599732398987, 0.7425703406333923, 0.7460044622421265, 0.7464007139205933, 0.7430986762046814, 0.7504953145980835, 0.7531369924545288, 0.761590301990509, 0.7602694630622864, 0.7618544697761536, 0.7687227725982666, 0.765949010848999], "val_loss": [1.8560114588056291, 1.5321649483272008, 1.0574566636766707, 0.8314598969050816, 0.721106903893607, 0.685588036264692, 0.6312224864959717, 0.6217073713030133, 0.6058592966624669, 0.5688485588346209, 0.5513383660997663, 0.5360945633479527, 0.5269290038517543, 0.5230591637747628, 0.516851646559579, 0.5070816619055611, 0.4883960655757359, 0.4847759859902518, 0.48374741418021067, 0.47291886806488037, 0.49264444623674664, 0.46267262526920866, 0.4666557822908674, 0.45927015372685026, 0.4523800952093942, 0.4505876473018101, 0.44959570680345806], "val_accuracy": [0.4440000057220459, 0.546999990940094, 0.6230000257492065, 0.690666675567627, 0.715666651725769, 0.7206666469573975, 0.7386666536331177, 0.7289999723434448, 0.7396666407585144, 0.7543333172798157, 0.7673333287239075, 0.7649999856948853, 0.7666666507720947, 0.7663333415985107, 0.7803333401679993, 0.7770000100135803, 0.7960000038146973, 0.7946666479110718, 0.7876666784286499, 0.8029999732971191, 0.7680000066757202, 0.8080000281333923, 0.7996666431427002, 0.8046666383743286, 0.8046666383743286, 0.8003333210945129, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [15, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [18, 63, 56, 12]], "fitness": -0.6745714545249939, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3029659493503916, 2.297419096768225, 2.2936106373085683, 2.2893623895396993, 2.2869127180912963, 2.2832156761904057, 2.278681919449088, 2.2758743014428218, 2.273371804643852, 2.2667487060641096, 2.2652601453811108, 2.2606911794022326, 2.2576870981885806, 2.253258447196143, 2.2506912604236113, 2.2467093872057213, 2.241046624397164, 2.2372090479858704, 2.2324399518897393, 2.2266278087092966, 2.2224684564303003, 2.2177594376907783, 2.213273022672708, 2.2069080812489243, 2.1987955754443465, 2.194343535214556, 2.1881852265850363, 2.1812254328218197, 2.174153608086087, 2.16758767123456, 2.1594364131367705, 2.1497223030511554, 2.142892256231513, 2.133817748150506, 2.1274570759340063, 2.1147452987589777, 2.103876725321417, 2.096542302974227, 2.0857202644597552, 2.070569129557642, 2.0648273920669626, 2.048919170760302, 2.0376003350658567, 2.023316700980333, 2.014465763962201, 2.002808951226208, 1.978681755528836, 1.9720120181685914, 1.951986709936593, 1.9395517448723325, 1.9243638013662867, 1.9093011246853657, 1.8857257505685678, 1.876710455793321, 1.856694014663505, 1.840585212288059, 1.8220256595185813, 1.8008084508012614, 1.7849535938928534, 1.7678101337848795, 1.748760896005556, 1.7400827453813816, 1.7105040813969299, 1.6968701264924693, 1.6734175602080659, 1.660689547203315, 1.642033802157679, 1.621945145753365, 1.6003017859483486, 1.592539378617654, 1.5703769263306693, 1.5580323067607031, 1.5458195751621235, 1.5286183131763003, 1.5204747646649468, 1.4964199974205925, 1.479398670969323, 1.4770239944927854, 1.4631546373459263, 1.4378553232921822, 1.4314873591547612, 1.4172853869280841, 1.410893714171296, 1.3901387753346184, 1.3827495512284025, 1.3676743264589422, 1.364769902054219, 1.3540710905177356, 1.3413436866911914, 1.329225954220925, 1.3091414676696995, 1.3056856978445037, 1.2974506271450732, 1.301115236466886, 1.2814078188654203, 1.2700471161315943, 1.2545769772651156, 1.2431977330386568, 1.2380446587823182, 1.2375169001109312], "accuracy": [0.08849557489156723, 0.10196803510189056, 0.11372341960668564, 0.12376172095537186, 0.13419628143310547, 0.1402720957994461, 0.15242372453212738, 0.16589617729187012, 0.1702549159526825, 0.18333113193511963, 0.19059570133686066, 0.20076608657836914, 0.2032756507396698, 0.22044643759727478, 0.2250693440437317, 0.23576806485652924, 0.24263638257980347, 0.25478801131248474, 0.25861841440200806, 0.2712983787059784, 0.2822612524032593, 0.2794875204563141, 0.2891295850276947, 0.29599788784980774, 0.3109232485294342, 0.3078853487968445, 0.3156782388687134, 0.32941487431526184, 0.3377360999584198, 0.3307357132434845, 0.34262317419052124, 0.35226520895957947, 0.3630960285663605, 0.3621714413166046, 0.35583147406578064, 0.3691718280315399, 0.3907013535499573, 0.3843613862991333, 0.38660678267478943, 0.3965130150318146, 0.3961167633533478, 0.40364548563957214, 0.40166425704956055, 0.4084004759788513, 0.414608359336853, 0.40945714712142944, 0.43125081062316895, 0.4231937527656555, 0.42649585008621216, 0.4270241856575012, 0.4348170757293701, 0.4295337498188019, 0.44089287519454956, 0.44023245573043823, 0.44591203331947327, 0.445779949426651, 0.4550257623195648, 0.4581957459449768, 0.4625544846057892, 0.46664905548095703, 0.46030908823013306, 0.4678378105163574, 0.48368775844573975, 0.4773477613925934, 0.4826310873031616, 0.4788006842136383, 0.48751816153526306, 0.4966318905353546, 0.4959714710712433, 0.4917448163032532, 0.4979526996612549, 0.5005943775177002, 0.5082551836967468, 0.5115572810173035, 0.5131422281265259, 0.5215955376625061, 0.5147272348403931, 0.5217276215553284, 0.5254259705543518, 0.533879280090332, 0.5340113639831543, 0.5390304923057556, 0.5342755317687988, 0.5390304923057556, 0.5416721701622009, 0.5481442213058472, 0.5414080023765564, 0.54655921459198, 0.5536917448043823, 0.5564654469490051, 0.5616167187690735, 0.5629374980926514, 0.5626733303070068, 0.5576542019844055, 0.5688812732696533, 0.5659754276275635, 0.5698058605194092, 0.5756174921989441, 0.5773345828056335, 0.5786554217338562], "val_loss": [1.9670416287013464, 1.963733400617327, 1.9604473114013672, 1.9571473939078194, 1.9538209778921944, 1.950498104095459, 1.947145598275321, 1.9437295368739538, 1.9403010095868791, 1.9367940085274833, 1.933271884918213, 1.9296724455697196, 1.9259698731558663, 1.922194344656808, 1.9183018548148019, 1.9142817769731795, 1.9101109504699707, 1.9058068820408411, 1.9014109883989607, 1.896778174809047, 1.892005239214216, 1.8870173181806291, 1.8818597112383162, 1.8764698164803642, 1.8707972935267858, 1.8649029731750488, 1.8587379455566406, 1.8522720336914062, 1.845536504473005, 1.8384780202593123, 1.8311310495649065, 1.8233530180794852, 1.815274715423584, 1.8068834032331194, 1.798252855028425, 1.7890875680106026, 1.7795130184718542, 1.7695439883640833, 1.7592365401131767, 1.748328617640904, 1.7372494425092424, 1.725538730621338, 1.7134880338396346, 1.7009056976863317, 1.6879819801875524, 1.6746541091373988, 1.660571609224592, 1.6463845797947474, 1.6315744263785226, 1.6163105283464705, 1.6007444517953056, 1.5848323617662703, 1.5683768817356654, 1.5517760004316057, 1.5349089418138777, 1.5177646023886544, 1.5002634525299072, 1.4823708874838692, 1.4645111560821533, 1.4466782297406877, 1.4285668645586287, 1.410534381866455, 1.3922416142054967, 1.3740733351026262, 1.3558573382241386, 1.3377902167184013, 1.319781984601702, 1.3018856729779924, 1.2841124534606934, 1.2668860980442591, 1.2496788501739502, 1.2329342705862862, 1.216519526072911, 1.2003604684557234, 1.1846698692866735, 1.1691694940839494, 1.154047863824027, 1.1396079744611467, 1.1255618163517542, 1.1115161350795202, 1.0979280812399728, 1.0846079758235387, 1.0720631054469518, 1.0596998419080461, 1.047862972532, 1.0360889775412423, 1.0249396392277308, 1.013932738985334, 1.0034259387425013, 0.9931815692356655, 0.9829063074929374, 0.9731066567557198, 0.963674817766462, 0.9549533980233329, 0.9460927077702114, 0.9377075263432094, 0.9293401922498431, 0.9210073266710553, 0.9130248342241559, 0.9054172039031982], "val_accuracy": [0.06300000101327896, 0.08699999749660492, 0.11233333498239517, 0.14766666293144226, 0.1860000044107437, 0.21433334052562714, 0.24433332681655884, 0.2669999897480011, 0.2919999957084656, 0.31299999356269836, 0.3293333351612091, 0.3463333249092102, 0.35866665840148926, 0.3709999918937683, 0.3776666522026062, 0.3866666555404663, 0.39100000262260437, 0.3956666588783264, 0.4009999930858612, 0.4090000092983246, 0.4169999957084656, 0.42500001192092896, 0.43066665530204773, 0.43533334136009216, 0.43966665863990784, 0.445333331823349, 0.4490000009536743, 0.4533333480358124, 0.4566666781902313, 0.4606666564941406, 0.46533334255218506, 0.46966665983200073, 0.47466665506362915, 0.47999998927116394, 0.48766666650772095, 0.49266666173934937, 0.49666666984558105, 0.5009999871253967, 0.5059999823570251, 0.5099999904632568, 0.5149999856948853, 0.5203333497047424, 0.5276666879653931, 0.5320000052452087, 0.5366666913032532, 0.5403333306312561, 0.5433333516120911, 0.5476666688919067, 0.5509999990463257, 0.5569999814033508, 0.5606666803359985, 0.5640000104904175, 0.5669999718666077, 0.5713333487510681, 0.5736666917800903, 0.5770000219345093, 0.5799999833106995, 0.5823333263397217, 0.5843333601951599, 0.5893333554267883, 0.5903333425521851, 0.5920000076293945, 0.5933333039283752, 0.5953333377838135, 0.597000002861023, 0.6006666421890259, 0.6039999723434448, 0.6060000061988831, 0.6073333621025085, 0.609666645526886, 0.6100000143051147, 0.6119999885559082, 0.6153333187103271, 0.6183333396911621, 0.6236666440963745, 0.6273333430290222, 0.6330000162124634, 0.6359999775886536, 0.6386666893959045, 0.6413333415985107, 0.6430000066757202, 0.6449999809265137, 0.6476666927337646, 0.6493333578109741, 0.6539999842643738, 0.6579999923706055, 0.6623333096504211, 0.6656666398048401, 0.668666660785675, 0.6696666479110718, 0.6706666946411133, 0.6723333597183228, 0.6733333468437195, 0.6753333210945129, 0.6766666769981384, 0.6793333292007446, 0.6823333501815796, 0.6836666464805603, 0.6853333115577698, 0.6859999895095825]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 0, 4, 0, 6, 4, 0, 2, 4], [2, 3, 0, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(beta)), tf.math.pow(grad, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [50, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [5, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [92, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 9, 5, 2, 4, 0, 9, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [100145.50459749144, 381573.1715592392, 605935.5408961828, 792311.9520291243, 964648.0343910976, 1108781.9157475894], "accuracy": [0.09998679161071777, 0.10751552134752274, 0.1018359512090683, 0.10302469879388809, 0.10328886657953262, 0.09826971590518951], "val_loss": [167066.7142857143, 320234.0625, 445421.5714285714, 552515.75, 646899.0535714285, 731776.5535714285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 1], [1, 3, 8, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2, 2, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 3, 2], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 3, 9, 5, 3, 3, 3, 4, 0, 8, 7, 5, 2, 6, 8, 7, 8, 5, 3, 9, 7], [2, 1, 0, 3, 3, 0, 2, 2, 3, 1, 0, 0, 1], [62, 63, 56, 12, 65, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.multiply(alpha, tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.multiply(sigma, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 2, 5, 3, 7, 0, 0, 3, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 1], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 8, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, alpha), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 3, 0, 2, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024907013554663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 1, 0], [50, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024907013554663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [4, 8, 7, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3024907013554663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 6, 8, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.negative(grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07211729139089584, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [3, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3044549855794165, 2.302634777504424, 2.3022722174163666, 2.301367709696836, 2.303867601494921, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.08981640636920929, 0.09576013684272766, 0.0956280529499054, 0.09774138033390045, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.970440183367048, 1.9704427037920271, 1.9700925690787179, 1.9691752706255232, 2.308080264500209, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03533333167433739, 0.033666666597127914, 0.03033333271741867, 0.027666667476296425, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 9, 5, 3, 7, 1, 0, 3, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 1], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [4, 7, 3, 3, 6, 4, 0, 2, 4], [3, 3, 0, 0, 2, 0], [11, 45, 79], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), beta))))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.37626217727635e+18, 6.891279944817175e+32, 287.68258750330045, 74276.9860892406, 19357315.79794611, 4883122424.552635], "accuracy": [0.09760929644107819, 0.09536388516426086, 0.09945846349000931, 0.10196803510189056, 0.10038304328918457, 0.10249637067317963], "val_loss": [4.451725226773174e+33, 18.64114706856864, 4784.232142857143, 1224789.4285714286, 313546093.71428573, 80267799990.85715], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 7, 7, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 1], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.5674339093394867, 684485.4423575471, 273536989807.9049, 1.0040515256788056e+17, 3.9894713681597495e+22, 1.5984209337900504e+28], "accuracy": [0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [70.58200073242188, 27429924.0, 10823749599232.0, 4.1700759692241797e+18, 1.6276566984973667e+24, 6.2684189694118864e+29], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [4, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [4, 3, 0], [11, 45], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1], [3, 3, 3, 6, 6, 7], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [4, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 13, 7, 6, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), sigma)), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3024907013554663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1], [1, 8, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [0, 3, 0, 2, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024907013554663, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0, 2], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [161356.7092063608, 3138522.535001981, 14377768.852199182, 39602377.16285828, 85893152.09826972, 157791564.82366925], "accuracy": [0.09985470771789551, 0.10751552134752274, 0.1018359512090683, 0.10302469879388809, 0.10315678268671036, 0.09826971590518951], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 1], [50, 12, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0, 0, 5, 0, 5, 5, 4, 1, 1, 0, 5, 3, 2, 2, 0, 0, 5, 2, 0, 1, 1, 0, 4, 3], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.304431676990588, 2.302441450047723, 2.3021196428149557, 2.301414981793419, 2.3026216222845948, 2.30243112974478], "accuracy": [0.0866464152932167, 0.08968432247638702, 0.0936468094587326, 0.09470347315073013, 0.09536388516426086, 0.09259014576673508], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 4, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [64, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 10, 10, 5, 5, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.304431676990588, 2.302441450047723, 2.3021196428149557, 2.301414981793419, 2.3026216222845948, 2.30243112974478], "accuracy": [0.0866464152932167, 0.08968432247638702, 0.0936468094587326, 0.09470347315073013, 0.09536388516426086, 0.09259014576673508], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [4, 3, 0], [11, 45], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1], [3, 3, 3, 6, 6, 7], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [76, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 13, 6, 6, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.304431676990588, 2.302441450047723, 2.3021196428149557, 2.301414981793419, 2.3026216222845948, 2.30243112974478], "accuracy": [0.0866464152932167, 0.08968432247638702, 0.0936468094587326, 0.09470347315073013, 0.09536388516426086, 0.09259014576673508], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]