[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8328571319580078, "mapping_values": [1, 4, 4, 2, 2, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8672502636043482, 1.4164919193945762, 0.8596304065169376, 0.7040635725809772, 0.6261196014919238, 0.5791117725213599, 0.5305220732843525, 0.5217716090824972, 0.49317725239932464, 0.47072039236954377, 0.4566026663799107, 0.432311133760676, 0.4148314564164446, 0.40081339156575696, 0.3949683060333981, 0.3830764385467003, 0.373166841164619, 0.36285795433378615, 0.35344507260927827, 0.3337517486406182, 0.322286247892182, 0.3260973980634314, 0.3125697064393421, 0.2939551587645498, 0.29240020842694525, 0.2908451600144678, 0.27486791675746747, 0.26382783694573364, 0.25976236939052344], "accuracy": [0.36666226387023926, 0.5205389261245728, 0.6740192770957947, 0.7250033020973206, 0.7535332441329956, 0.7777044177055359, 0.7951393723487854, 0.8033285140991211, 0.8166688680648804, 0.8261788487434387, 0.8274996876716614, 0.8393871188163757, 0.8412362933158875, 0.8449346423149109, 0.8490291833877563, 0.8565579056739807, 0.8581429123878479, 0.8668603897094727, 0.8659358024597168, 0.8704266548156738, 0.8808611631393433, 0.8804649114608765, 0.883238673210144, 0.8848236799240112, 0.8893144726753235, 0.8885219693183899, 0.8899748921394348, 0.901862382888794, 0.8996169567108154], "val_loss": [1.5265421867370605, 0.7285384110042027, 0.5475373608725411, 0.47687985215868267, 0.4574167217527117, 0.41073249919073923, 0.40045295442853657, 0.38223497356687275, 0.3801067556653704, 0.3633821521486555, 0.36266733918871197, 0.3296004278319223, 0.31707675967897686, 0.3190599765096392, 0.3254091569355556, 0.310298536505018, 0.31504958868026733, 0.31501141616276335, 0.2995539477893284, 0.31113074507032124, 0.3015561359269278, 0.2963131751332964, 0.293548515864781, 0.28638845682144165, 0.29203224182128906, 0.2994035397257124, 0.29538406644548687, 0.29491491828645977, 0.2809078778539385], "val_accuracy": [0.41366666555404663, 0.6826666593551636, 0.753000020980835, 0.7846666574478149, 0.79666668176651, 0.8196666836738586, 0.828000009059906, 0.8349999785423279, 0.8399999737739563, 0.8519999980926514, 0.847000002861023, 0.8690000176429749, 0.8663333058357239, 0.8686666488647461, 0.8606666922569275, 0.875, 0.8683333396911621, 0.8700000047683716, 0.8756666779518127, 0.8656666874885559, 0.8713333606719971, 0.878000020980835, 0.8813333511352539, 0.8889999985694885, 0.8813333511352539, 0.8793333172798157, 0.8773333430290222, 0.8823333382606506, 0.8870000243186951]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8305714130401611, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1.8670126569584424, 1.4164028638200579, 0.8599119447776906, 0.7036296625840209, 0.6272215447594635, 0.5789714246740305, 0.5288505059042155, 0.5232388722567495, 0.4944904234116151, 0.4752749128309239, 0.4608167749763779, 0.4324821121011507, 0.42232429321101, 0.40751658479425146, 0.40376554697795297, 0.3874368065336613, 0.37675302181151316, 0.3609694508143609, 0.3534754175299651, 0.3352283152528112, 0.32329955741934346, 0.32749453942379886, 0.3106111815073046, 0.3007229409591318, 0.2938115390938003, 0.2847381212637015, 0.2814150392898967, 0.270966886163246, 0.2654200269010451, 0.24970953544573998, 0.2480431300159994, 0.24764497770829805, 0.23896302414875714, 0.22753254861021402, 0.2236222210278081], "accuracy": [0.366530179977417, 0.5217276215553284, 0.6745476126670837, 0.7260599732398987, 0.755118191242218, 0.7779685854911804, 0.7961959838867188, 0.805177628993988, 0.8153480291366577, 0.8202351331710815, 0.8271034359931946, 0.8388587832450867, 0.8412362933158875, 0.843481719493866, 0.8506141901016235, 0.8539162874221802, 0.8576145768165588, 0.8672566413879395, 0.8628978729248047, 0.8698983192443848, 0.8776912093162537, 0.8767666220664978, 0.883238673210144, 0.8864086866378784, 0.8881257176399231, 0.8942015767097473, 0.8878615498542786, 0.895918607711792, 0.8980319499969482, 0.9068815112113953, 0.9091269373893738, 0.9055606722831726, 0.9055606722831726, 0.9128252267837524, 0.9159952402114868], "val_loss": [1.5278331552233015, 0.7275680814470563, 0.5485824005944389, 0.47619783878326416, 0.4567274195807321, 0.41190465859004427, 0.40035233327320646, 0.3832507814679827, 0.385588458606175, 0.36213670458112446, 0.3581236941473825, 0.3285163470676967, 0.3200915626117161, 0.3226845860481262, 0.33433531863348825, 0.32243478298187256, 0.3113806077412197, 0.320034384727478, 0.29949893270220074, 0.3094701000622341, 0.3068413478987558, 0.2966062000819615, 0.29920010907309397, 0.2923413174492972, 0.30055757079805645, 0.29680876220975605, 0.29841379608426777, 0.2978226627622332, 0.2823496971811567, 0.28645276171820505, 0.29503679275512695, 0.2959862947463989, 0.2881132108824594, 0.2915046896253313, 0.3097736920629229], "val_accuracy": [0.414000004529953, 0.6823333501815796, 0.7513333559036255, 0.7856666445732117, 0.7979999780654907, 0.8203333616256714, 0.8226666450500488, 0.8370000123977661, 0.8309999704360962, 0.8516666889190674, 0.8506666421890259, 0.8696666955947876, 0.8669999837875366, 0.8663333058357239, 0.859666645526886, 0.8659999966621399, 0.875333309173584, 0.8696666955947876, 0.8759999871253967, 0.862666666507721, 0.8763333559036255, 0.8773333430290222, 0.8773333430290222, 0.8809999823570251, 0.8790000081062317, 0.8849999904632568, 0.8759999871253967, 0.8820000290870667, 0.8880000114440918, 0.8893333077430725, 0.8799999952316284, 0.8809999823570251, 0.887666642665863, 0.8853333592414856, 0.8833333253860474]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 2, 3, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.656000018119812, "mapping_values": [1, 4, 4, 2, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3030403042985874, 2.3016596575454713, 2.300798276160072, 2.2991937244447027, 2.2982253266552326, 2.2952144429069925, 2.2928424588504357, 2.2919799916228722, 2.2887577605899363, 2.285982284972917, 2.2889496369085385, 2.283228705068227, 2.2768642669025745, 2.277313917887099, 2.2721220247182767, 2.269500207529407, 2.2619136126758463, 2.252752756256831, 2.2475145312820555, 2.238820229507535, 2.2254754494934224, 2.2102431466220125, 2.1863085181879063, 2.1535937586764082, 2.1065255954769135, 2.0313184117880385, 1.8891528226507024, 1.7209302912204336, 1.5401837508345577, 1.4018889873759337, 1.3884211986166628, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.09549596905708313, 0.09840179979801178, 0.09774138033390045, 0.10698718577623367, 0.10659094154834747, 0.10976093262434006, 0.11121384054422379, 0.12178047746419907, 0.12389380484819412, 0.12230881303548813, 0.13274335861206055, 0.14053626358509064, 0.12970545887947083, 0.1426495909690857, 0.14674416184425354, 0.1508387327194214, 0.16695284843444824, 0.16959451138973236, 0.17051908373832703, 0.1784440577030182, 0.19719983637332916, 0.20420023798942566, 0.2222955971956253, 0.2483159452676773, 0.27724209427833557, 0.33218860626220703, 0.39202219247817993, 0.43785497546195984, 0.4913485646247864, 0.5188218355178833, 0.44644036889076233, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9700233595711845, 1.9691038131713867, 1.9677199636186873, 1.9659560067313058, 1.9640462739127023, 1.9622077941894531, 1.9604003088814872, 1.9585655757359095, 1.9565197399684362, 1.9542107582092285, 1.9516305242265974, 1.9486501557486398, 1.9451863425118583, 1.941060951777867, 1.9360083171299525, 1.9293855939592635, 1.921339443751744, 1.911712578364781, 1.9003826550074987, 1.8860018593924386, 1.867443357195173, 1.8427656718662806, 1.808138711111886, 1.7571648870195662, 1.6762965066092355, 1.5408880370003837, 1.3300909655434745, 1.096787622996739, 0.9210536820547921, 0.8338676180158343, 0.8402729715619769, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.046666666865348816, 0.0560000017285347, 0.06700000166893005, 0.08500000089406967, 0.09700000286102295, 0.10733333230018616, 0.1106666699051857, 0.11833333224058151, 0.1263333261013031, 0.14399999380111694, 0.16366666555404663, 0.17633333802223206, 0.1823333352804184, 0.19066666066646576, 0.20366667211055756, 0.23066666722297668, 0.2436666637659073, 0.2516666650772095, 0.2683333456516266, 0.3173333406448364, 0.382999986410141, 0.4116666615009308, 0.43033334612846375, 0.44866666197776794, 0.49666666984558105, 0.531000018119812, 0.5886666774749756, 0.6363333463668823, 0.6650000214576721, 0.6510000228881836, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.604285717010498, "mapping_values": [1, 3, 3, 1, 2, 0, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(tf.math.square(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.222458267067055, 1.5543164230844742, 1.0552295458913559, 0.8880784333641849, 0.8154137211232657, 0.7652935877987548, 0.7182738753027054, 0.6553825945697361, 0.6273315022602971, 0.6089034582708553, 0.5857724392843946, 0.5524506012383484, 0.5460011267926573, 0.5234240887423611, 0.51654622062653, 0.5024029663556665, 0.5032582587459541, 0.4841865903791766, 0.47401342923693796, 0.45440212219241055, 0.453666854543992, 0.4512285986604503, 0.4392369986603903, 0.43808543336877986, 0.4245621298109268, 0.416151708214117, 0.41264480098505313, 0.41036832412125934, 0.3994573098659641, 0.3971872307274556, 0.4199674901842929, 0.4027351639715121, 0.4271266126535068, 0.41326115521788204, 0.407024233816889, 0.40978536677398325], "accuracy": [0.23484347760677338, 0.48368775844573975, 0.6263373494148254, 0.6738871932029724, 0.6831330060958862, 0.7136441469192505, 0.7277770638465881, 0.7511557340621948, 0.7622507214546204, 0.7677981853485107, 0.7771760821342468, 0.7872143983840942, 0.7924976944923401, 0.7985734939575195, 0.7977809906005859, 0.8109893202781677, 0.8054417967796326, 0.8144234418869019, 0.8269713521003723, 0.833179235458374, 0.8272355198860168, 0.8264430165290833, 0.8370096683502197, 0.8323867321014404, 0.8405758738517761, 0.8413683772087097, 0.8421608805656433, 0.8465195894241333, 0.8437458872795105, 0.8521991968154907, 0.8407079577445984, 0.8518029451370239, 0.8399154543876648, 0.8444063067436218, 0.8525954484939575, 0.8500858545303345], "val_loss": [1.614567756652832, 0.7473749262945992, 0.7120969125202724, 0.5954124246324811, 0.5726116725376674, 0.5281711135591779, 0.48448685237339567, 0.4629424640110561, 0.4424906628472464, 0.4253848280225481, 0.40431163140705656, 0.39680478402546476, 0.38496590512139456, 0.37742395060403006, 0.37181562185287476, 0.358055693762643, 0.35600521734782625, 0.34921514987945557, 0.34139009032930645, 0.3395943897111075, 0.336761406489781, 0.3344795789037432, 0.3419052106993539, 0.34055456093379427, 0.3385911158152989, 0.33112302848270964, 0.3569091558456421, 0.34607731444495066, 0.32861859457833426, 0.3329281806945801, 0.3216493896075657, 0.37091862303870066, 0.3388190524918692, 0.3404410311153957, 0.3769730159214565, 0.35882713965007235], "val_accuracy": [0.4983333349227905, 0.6913333535194397, 0.6779999732971191, 0.7133333086967468, 0.7543333172798157, 0.7666666507720947, 0.784333348274231, 0.7913333177566528, 0.8043333292007446, 0.8056666851043701, 0.8256666660308838, 0.8206666707992554, 0.824999988079071, 0.8353333473205566, 0.8293333053588867, 0.8479999899864197, 0.8453333377838135, 0.8546666502952576, 0.8616666793823242, 0.8616666793823242, 0.859000027179718, 0.8566666841506958, 0.8633333444595337, 0.8613333106040955, 0.8643333315849304, 0.8636666536331177, 0.8673333525657654, 0.8633333444595337, 0.8703333139419556, 0.8736666440963745, 0.8743333220481873, 0.8690000176429749, 0.8703333139419556, 0.8676666617393494, 0.8673333525657654, 0.8616666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 8, 3, 8, 1, 6, 4, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 3, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 74, 49, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [97, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.2288571447134018, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.9718992831353988, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15598995983600616, 0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [221.82378714425224, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.109333336353302, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10314285755157471, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.300435504137391, 2.3001914414526876, 2.302573010906048, 2.3030406871350246, 2.3045218484969485, 2.325067105971591, 2.636562907794967, 4.453294177553547, 9.614786853092442], "accuracy": [0.09972262382507324, 0.08374059200286865, 0.07885351777076721, 0.09509972482919693, 0.11438383162021637, 0.10038304328918457, 0.10091137140989304, 0.09945846349000931, 0.09813763201236725], "val_loss": [1.96901764188494, 1.97320590700422, 1.9738385336739677, 1.974355833871024, 1.9788330623081751, 2.0516431672232494, 2.8373793874468123, 5.848821095057896, 12.766585213797432], "val_accuracy": [0.08933333307504654, 0.04766666516661644, 0.08633333444595337, 0.1133333370089531, 0.09533333033323288, 0.11033333092927933, 0.10000000149011612, 0.09733333438634872, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 1, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3027921334832118, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 2, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 0, 2, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 3, 1, 2, 6, 0, 2, 3, 2, 7, 5, 7, 3, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [31, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [83], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 1, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, beta))), tf.math.square(tf.math.add(beta, tf.math.negative(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 4, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 4, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3027921334832118, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 8, 3, 8, 2, 6, 6, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 1, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 37, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [92, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 19, 13, 5, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.divide_no_nan(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1504424810409546, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 8, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [0, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [1, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.0917142853140831, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.7691110677533946, 2.5236775474210758, 4.7342898851026085, 2.982704231248099, 2.668250543251486, 2.552801597324644, 2.65151156338057], "accuracy": [0.15678246319293976, 0.13551710546016693, 0.11345925182104111, 0.09813763201236725, 0.09919429570436478, 0.1010434553027153, 0.10051512718200684], "val_loss": [2.1539786883762906, 2.6647259167262485, 2.244886875152588, 2.2704644884381975, 2.2786644526890347, 2.349691390991211, 2.236226831163679], "val_accuracy": [0.10066666454076767, 0.1393333375453949, 0.10000000149011612, 0.10366666316986084, 0.0963333323597908, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [4, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.06971428543329239, "mapping_values": [1, 16, 16, 11, 5, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3026098409238793, 2.3008817910612724, 2.3005827524721534, 2.300218193963408, 2.3007304287699974, 2.2998718970392864, 2.299217037253329, 2.2994097568701917, 2.298945875026767, 2.2984346110885956, 2.3002530451479717, 2.299089945160938, 2.298666890050757, 2.2995922714727683, 2.2995179037707056], "accuracy": [0.0956280529499054, 0.09919429570436478, 0.09906221181154251, 0.09576013684272766, 0.09853387624025345, 0.09457138925790787, 0.09813763201236725, 0.0956280529499054, 0.10157178342342377, 0.10593052208423615, 0.09496764093637466, 0.10500594228506088, 0.10566636174917221, 0.10236428678035736, 0.10130762308835983], "val_loss": [1.9695453643798828, 1.9690849440438407, 1.9688478197370256, 1.9687918254307337, 1.9687540190560477, 1.9687549046107702, 1.9686999320983887, 1.968649183000837, 1.9686750684465681, 1.9688055855887276, 1.968871797834124, 1.9690890312194824, 1.9694171633039201, 1.9697489738464355, 1.9700548308236259], "val_accuracy": [0.04699999839067459, 0.05066666752099991, 0.05666666850447655, 0.06233333423733711, 0.06666667014360428, 0.0716666653752327, 0.07699999958276749, 0.08033332973718643, 0.08399999886751175, 0.08633333444595337, 0.08566666394472122, 0.0833333358168602, 0.08233333379030228, 0.07766667008399963, 0.07633333653211594]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [18, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 4, 4, 2, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.303145501276978, 2.3023953004173707, 2.30276530136317, 2.3028792357164494, 2.303795660995395, 2.303221661290945], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09245806187391281, 0.09008057415485382, 0.09232597798109055, 0.08506141602993011], "val_loss": [1.9703852108546667, 1.970386028289795, 1.9703912734985352, 1.9704172270638602, 1.9705204282488142, 1.9709023066929408], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.035999998450279236, 0.03566666692495346]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 4, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 4, 4, 2, 2, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.303145501276978, 2.3023951384905006, 2.302762903951147, 2.302864540049964, 2.303730437217403, 2.3029449933933432], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09245806187391281, 0.09021265059709549, 0.09245806187391281, 0.08585391938686371], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 8, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 17, 17, 12, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303145501276978, 2.3023951384905006, 2.302762903951147, 2.302864540049964, 2.303730437217403, 2.3029449933933432], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09245806187391281, 0.09021265059709549, 0.09245806187391281, 0.08585391938686371], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 7, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 17, 17, 11, 6, 4, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(grad, beta))), tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303145501276978, 2.3023951384905006, 2.302762903951147, 2.302864540049964, 2.303730437217403, 2.3029449933933432], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09245806187391281, 0.09021265059709549, 0.09245806187391281, 0.08585391938686371], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 5, 3, 8, 2, 6, 5, 6, 5, 9, 8, 5, 6, 2, 6, 6, 2, 4, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 3, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [9, 81, 5, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 1, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 2, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [42, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 4, 8, 8, 5, 0, 0, 4, 5, 8], [3, 3, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 17, 17, 12, 5, 3, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))))))))))), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, beta)), tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.square(tf.math.add(beta, tf.math.negative(beta))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.303145501276978, 2.3023951384905006, 2.302762903951147, 2.302864540049964, 2.303730437217403, 2.3029449933933432], "accuracy": [0.09298639744520187, 0.09377889335155487, 0.09245806187391281, 0.09021265059709549, 0.09245806187391281, 0.08585391938686371], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]