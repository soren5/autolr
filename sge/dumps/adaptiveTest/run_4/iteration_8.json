[{"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.7748571634292603, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0845429150498602, 1.4094370286289286, 1.0794762858247335, 0.9390682809309732, 0.8353857041554696, 0.8163326390667236, 0.7630507397755593, 0.7503388901239278, 0.7215621693574238, 0.7112010910117064, 0.6711537386637008, 0.692280114342618, 0.6724924088437654, 0.6488633928218963, 0.642999320698767], "accuracy": [0.3139611780643463, 0.5032360553741455, 0.5984678268432617, 0.6560559868812561, 0.6933034062385559, 0.6975300312042236, 0.7172104120254517, 0.7181349992752075, 0.7260599732398987, 0.7329282760620117, 0.7427024245262146, 0.737947404384613, 0.748778223991394, 0.7520803213119507, 0.7602694630622864], "val_loss": [1.1483598096030099, 0.8739402975354876, 0.6765813997813633, 0.6244262116295951, 0.6357381343841553, 0.5623340947287423, 0.5566223008292062, 0.5608339820589338, 0.543285608291626, 0.4963874476296561, 0.5484144006456647, 0.5131303242274693, 0.5159578323364258, 0.4842879942485264, 0.5216854810714722], "val_accuracy": [0.5770000219345093, 0.5960000157356262, 0.6990000009536743, 0.7336666584014893, 0.7076666951179504, 0.7596666812896729, 0.7433333396911621, 0.7379999756813049, 0.7649999856948853, 0.7823333144187927, 0.7366666793823242, 0.765666663646698, 0.7549999952316284, 0.781333327293396, 0.7516666650772095]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [1], [], [0, 1, 0], [0, 1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.7748571634292603, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0845429150498602, 1.4094370286289286, 1.0794762858247335, 0.9390682809309732, 0.8353857041554696, 0.8163326390667236, 0.7630507397755593, 0.7503388901239278, 0.7215621693574238, 0.7112010910117064, 0.6711537386637008, 0.692280114342618, 0.6724924088437654, 0.6488633928218963, 0.642999320698767], "accuracy": [0.3139611780643463, 0.5032360553741455, 0.5984678268432617, 0.6560559868812561, 0.6933034062385559, 0.6975300312042236, 0.7172104120254517, 0.7181349992752075, 0.7260599732398987, 0.7329282760620117, 0.7427024245262146, 0.737947404384613, 0.748778223991394, 0.7520803213119507, 0.7602694630622864], "val_loss": [1.1483598096030099, 0.8739402975354876, 0.6765813997813633, 0.6244262116295951, 0.6357381343841553, 0.5623340947287423, 0.5566223008292062, 0.5608339820589338, 0.543285608291626, 0.4963874476296561, 0.5484144006456647, 0.5131303242274693, 0.5159578323364258, 0.4842879942485264, 0.5216854810714722], "val_accuracy": [0.5770000219345093, 0.5960000157356262, 0.6990000009536743, 0.7336666584014893, 0.7076666951179504, 0.7596666812896729, 0.7433333396911621, 0.7379999756813049, 0.7649999856948853, 0.7823333144187927, 0.7366666793823242, 0.765666663646698, 0.7549999952316284, 0.781333327293396, 0.7516666650772095]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1], [3, 2, 8, 7], [2, 2, 1, 1], [], [1], [1], [], [1], [], [0, 1, 0, 0, 1], [1, 1], [4], [4], [], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 9, 1, 8], [2, 1], [6, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, alpha))), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [0], [9], [1], [82], [0, 0, 0, 1, 1], [0, 1, 0], [7, 3], [7], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [87841.55907118146, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04873860627412796, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.532804753186208e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0], [1], [], [0, 2], [23], [1], [1], [], [3], [], [0, 1, 1], [0, 0, 1], [1], [4], [], [0, 0, 1, 1], [0, 2, 3, 3, 2], [2, 2, 1, 1], [6, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15876370668411255, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 1], [0, 0, 0, 1, 1], [9, 6], [2, 0, 0], [18, 54], [1], [1], [], [1], [], [1, 1, 1], [1], [7, 3], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 7, 6, 9], [2, 3, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.divide_no_nan(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma), beta)", "other_info": {"loss": [2.3032201236784813, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [1], [1], [], [4], [], [0, 1, 0, 0, 1], [0, 1], [7, 3], [6], [], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 9, 1, 5], [1, 2, 0], [6, 16]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [3], [2, 2], [], [0], [1], [], [1], [], [0, 0, 1, 1, 0, 1], [0, 0, 0], [7, 3, 5], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 6, 3, 4, 7, 5], [1, 2, 0, 2, 3, 2], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 12, 6, 6, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.pow(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, sigma)), tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 1, 0], [1, 0, 1], [1], [1, 3], [], [1], [1], [], [3], [98], [0, 0, 0], [0, 1, 1], [4], [5, 7], [], [1], [], [2, 2, 1, 1], [93, 98, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [9, 6, 8, 3, 0, 7, 1], [2, 0, 3, 2, 2, 3], [89, 82], [0], [1], [], [1], [], [0, 0, 1], [0, 1], [4], [0], [61], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 4, 8, 9], [2, 3, 3], [20]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.sqrt(beta), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1226822660.8579326, 23706931531.640205, 110446248950.93805, 307404932634.44196, 660478543007.7338, 1204402153664.8706], "accuracy": [0.09919429570436478, 0.10249637067317963, 0.09866596013307571, 0.10077928751707077, 0.10117553919553757, 0.10236428678035736], "val_loss": [4698575433.142858, 37577540754.28571, 126810048804.57143, 300570340790.8571, 587028365312.0, 1014377779785.1428], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1], [1], [], [2], [], [0, 1, 1], [0, 1, 1], [1], [1, 2], [], [0, 0, 1], [0, 1], [7, 3], [4], [], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 5, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(beta))", "other_info": {"loss": [2.3146230679744932, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08440100401639938, 0.09338264167308807, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0595886366707936, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1003333330154419, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 3, 7, 0, 2, 4, 1, 7, 9, 5, 0, 7, 1, 0, 5, 6, 3, 4, 3, 8, 7, 6, 8, 2, 4, 0, 7, 6], [0, 5, 0, 5, 0, 1, 3, 4, 1, 1], [91, 53, 89, 43], [0, 1, 1], [0], [8], [4], [], [0, 0, 1, 0, 1, 1, 1], [3, 1, 3], [1, 2, 0, 2], [29]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 4, 2, 1, 1, 0, 0, 7, 3, 4, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.square(grad)))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), alpha))), grad)), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), alpha), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.multiply(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1], [0, 1, 0, 1, 1], [6, 8], [2, 2], [], [0], [1], [], [1], [98], [0, 1, 1], [0], [4], [4], [], [1], [0, 2, 3, 3, 2], [0], [74]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3032201236784813, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464, 2.3025827767464464], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164, 1.973642349243164], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [1], [], [2], [], [0], [1], [], [4], [], [0, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 0], [7, 3, 5, 0], [4], [], [1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8], [2], [96], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [4, 3, 8, 7, 2, 2, 4, 1, 4, 9, 5, 0, 7, 1, 0, 5, 5, 3, 4, 3, 8, 7, 6, 8, 2, 4, 0, 7, 6, 3, 6, 8, 0, 3, 4, 7, 8, 0, 9, 6, 1, 1, 9, 4, 8, 1, 4, 0, 2], [1, 4, 0, 0, 4, 4, 3, 1, 2, 5, 0, 3, 0, 3, 2, 3, 3, 0, 5, 5, 5, 1, 3, 5, 0, 5, 5, 3, 2], [96, 53, 89, 43, 72, 19, 90, 4, 77], [0, 1, 1], [1], [7, 3], [4], [], [1], [3, 9, 0], [1, 2, 0], [29]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 78, 78, 49, 29, 9, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad))))))), grad))))))), tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.subtract(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), grad))), grad))))))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1], [1, 0, 8, 4, 2, 7, 2, 2, 1, 8, 5, 7, 2, 7, 9, 2, 5, 2, 6, 8], [2, 3, 1, 0, 3, 2, 2, 2, 2, 2, 3, 0, 1], [44, 16, 75], [0], [1], [], [1], [], [1, 1, 1], [0], [7, 3], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [1, 2, 0], [41]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.sqrt(tf.math.square(alpha))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.square(grad), grad)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 1, 1], [1], [5, 5, 7], [2, 2], [], [0], [1], [], [1], [], [0, 1, 1], [0], [6, 1], [2], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 2, 7, 9], [2, 1, 3], [0]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), alpha), sigma)", "other_info": {"loss": [2.303321862564016, 2.3032208121983353, 2.3027502183570303, 2.302804441877785, 2.302220661847063, 2.302462865269935], "accuracy": [0.09338264167308807, 0.09589222073554993, 0.08942015469074249, 0.0874389111995697, 0.0948355570435524, 0.09615638852119446], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 2, 2, 6, 6, 7, 6, 1, 7, 8, 2, 3, 0, 3, 4, 3, 8, 4, 9], [2, 0, 0, 1, 3, 3, 0, 3, 0, 0, 0, 0, 1, 2, 1], [42, 27, 77, 66, 60, 98, 92, 91], [0], [1], [], [2], [], [0, 1, 1], [1], [7, 3], [4], [], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 0], [2, 0, 3, 3, 0], [91, 30]], "fitness": -0.03685714304447174, "mapping_values": [1, 34, 34, 19, 15, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))))))))))))))), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.303321862564016, 2.3032208121983353, 2.3027502183570303, 2.302804441877785, 2.302220661847063, 2.302462865269935], "accuracy": [0.09338264167308807, 0.09589222073554993, 0.08942015469074249, 0.0874389111995697, 0.0948355570435524, 0.09615638852119446], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [0, 1, 0, 1, 1], [1], [], [2], [], [0], [1], [], [1], [98], [1, 0, 0, 1], [0, 0, 1], [4, 2], [4], [], [0, 1, 0], [3, 9, 0], [3, 2, 1, 1], [46]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303321862564016, 2.3032208121983353, 2.3027502183570303, 2.302804441877785, 2.302220661847063, 2.302462865269935], "accuracy": [0.09338264167308807, 0.09589222073554993, 0.08942015469074249, 0.0874389111995697, 0.0948355570435524, 0.09615638852119446], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}, {"genotype": [[0], [1, 0, 1], [1], [5, 5, 7], [1, 2], [], [1], [1], [], [1], [], [0, 1, 0, 0, 1], [0, 0, 1], [7, 7], [4], [], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 9, 1, 8], [1, 0, 0], [6, 16]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303321862564016, 2.3032208121983353, 2.3027502183570303, 2.302804441877785, 2.302220661847063, 2.302462865269935], "accuracy": [0.09338264167308807, 0.09589222073554993, 0.08942015469074249, 0.0874389111995697, 0.0948355570435524, 0.09615638852119446], "val_loss": [1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506, 1.9694886888776506], "val_accuracy": [0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663]}}]