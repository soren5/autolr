[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7782857418060303, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2737212342325375, 2.181569864878707, 1.9839549555109004, 1.6547079443254522, 1.3724019351557908, 1.2029245148686338, 1.0888678245320218, 1.0137200214449975, 0.968027801341101, 0.9206645149344451, 0.8851492732680627, 0.852337476465885, 0.8320038095598822, 0.818395735683411, 0.7999897896810498, 0.7907511476575423, 0.7668746268004474, 0.7709340479836535, 0.7496833108939263, 0.7449375718434442, 0.7294982055615692, 0.7155649307271382, 0.7069279343271615, 0.7109874972672338, 0.7011467803817273, 0.6926488519155779, 0.6806386467125973, 0.6868523245143726, 0.667409877688295, 0.6631885124802227, 0.6702259361877764, 0.6647349067919006, 0.6582470528123054, 0.6517332852744879, 0.6416853030422943, 0.6409680363351264, 0.6395051879826759], "accuracy": [0.16853784024715424, 0.3271694481372833, 0.4060229957103729, 0.48712190985679626, 0.5453705191612244, 0.5863162279129028, 0.6205257177352905, 0.6392814517021179, 0.6523576974868774, 0.669792652130127, 0.6926429867744446, 0.6926429867744446, 0.700700044631958, 0.7074362635612488, 0.7161537408828735, 0.7096816897392273, 0.7215691208839417, 0.7231541275978088, 0.72672039270401, 0.7285695672035217, 0.7386078238487244, 0.7333245277404785, 0.7471932172775269, 0.7466648817062378, 0.7466648817062378, 0.7497028112411499, 0.7543256878852844, 0.7506273984909058, 0.7568352818489075, 0.7549861073493958, 0.7556465268135071, 0.76106196641922, 0.7548540234565735, 0.7650244235992432, 0.7642319202423096, 0.76542067527771, 0.7652885913848877], "val_loss": [1.900374071938651, 1.7679787363324846, 1.4886268888201033, 1.147829532623291, 0.9271706512996128, 0.8101501294544765, 0.7276848043714251, 0.6935741049902779, 0.6577178921018328, 0.6253435952322823, 0.6086014338902065, 0.5839095115661621, 0.5777066775730678, 0.5596646240779332, 0.5574320895331246, 0.5404123067855835, 0.5344899211611066, 0.5264906542641776, 0.5174544368471418, 0.5113093682697841, 0.502857872417995, 0.49637188230242046, 0.49230609621320454, 0.4892736162458147, 0.4883370740073068, 0.4834753956113543, 0.47499373980930876, 0.4780392646789551, 0.47032647473471506, 0.4671109744480678, 0.46089039530072895, 0.46040827887398855, 0.45667786257607595, 0.4598339114870344, 0.45367235796792166, 0.4484189919063023, 0.45977488585880827], "val_accuracy": [0.4050000011920929, 0.5220000147819519, 0.578000009059906, 0.6413333415985107, 0.6703333258628845, 0.6853333115577698, 0.7133333086967468, 0.7133333086967468, 0.734000027179718, 0.737666666507721, 0.7463333606719971, 0.7536666393280029, 0.7459999918937683, 0.762666642665863, 0.7586666941642761, 0.7706666588783264, 0.7736666798591614, 0.778333306312561, 0.778333306312561, 0.7820000052452087, 0.7820000052452087, 0.7829999923706055, 0.7923333048820496, 0.7913333177566528, 0.7900000214576721, 0.7829999923706055, 0.8003333210945129, 0.7979999780654907, 0.8053333163261414, 0.7953333258628845, 0.8040000200271606, 0.812333345413208, 0.8069999814033508, 0.7973333597183228, 0.8063333630561829, 0.8066666722297668, 0.7919999957084656]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.6171428561210632, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2189151433953014, 1.5463807133635699, 1.0337705692406014, 0.8732748810310625, 0.8209246189020187, 0.7854242573844412, 0.7271826492718197, 0.6677486677967153, 0.6249061959168662, 0.6141337369962406, 0.5944105788165899, 0.5710750698507926, 0.5480151044190316, 0.5361049097715793, 0.5357000337001623, 0.5070256468972919, 0.5067226677333926, 0.48366299886445896, 0.46500371076710834, 0.45617944773681696, 0.4547734416518402, 0.4484490438530143, 0.443269893257389, 0.4591528197730521], "accuracy": [0.23339056968688965, 0.4900277256965637, 0.6382247805595398, 0.6816800832748413, 0.695813000202179, 0.7058512568473816, 0.7260599732398987, 0.7467969655990601, 0.7652885913848877, 0.7771760821342468, 0.7765156626701355, 0.7861577272415161, 0.7862898111343384, 0.7942147850990295, 0.7996301651000977, 0.8098005652427673, 0.8076872229576111, 0.8165367841720581, 0.8216879963874817, 0.8271034359931946, 0.8314621448516846, 0.8224804997444153, 0.8314621448516846, 0.828292191028595], "val_loss": [1.587944711957659, 0.7254693508148193, 0.6992865800857544, 0.5891075985772269, 0.5943166869027274, 0.5359185593468803, 0.483587418283735, 0.4694595847811018, 0.44131759234837126, 0.4146113991737366, 0.4136971575873239, 0.4031997833933149, 0.3932966334479196, 0.3861434204237802, 0.3727275814328875, 0.3647136092185974, 0.36488876172474455, 0.344641421522413, 0.34713163546153475, 0.3489924243518284, 0.3462626167706081, 0.34840970379965647, 0.34848546981811523, 0.3376274194036211], "val_accuracy": [0.5166666507720947, 0.7026666402816772, 0.7083333134651184, 0.7266666889190674, 0.7336666584014893, 0.7563333511352539, 0.777999997138977, 0.7839999794960022, 0.8019999861717224, 0.8203333616256714, 0.815666675567627, 0.8209999799728394, 0.8273333311080933, 0.8363333344459534, 0.8489999771118164, 0.8463333249092102, 0.8536666631698608, 0.862333357334137, 0.862666666507721, 0.8539999723434448, 0.8539999723434448, 0.8569999933242798, 0.8543333411216736, 0.862666666507721]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63, 23], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [83, 63, 56, 45]], "fitness": -0.33399999141693115, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.371359801862407, 2.3795393669940634, 2.256883481143724, 2.3261217952262707, 2.308143535515006, 2.3036518347592416], "accuracy": [0.204860657453537, 0.151234969496727, 0.18095363676548004, 0.13353586196899414, 0.09694888442754745, 0.09840179979801178], "val_loss": [1.5926518440246582, 1.9717556408473425, 2.0433568273271834, 1.9835644449506487, 1.9743454115731376, 1.9736477988106864], "val_accuracy": [0.2953333258628845, 0.10066666454076767, 0.11599999666213989, 0.10300000011920929, 0.10300000011920929, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.11228571087121964, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3019454751614927, 2.3014675870531853, 2.3017209249165678, 2.300742471474761, 2.3014472173016385, 2.3019170044057673, 2.3020579124312626, 2.3024162593975577, 2.3025286003992527, 2.302544568429266, 2.3025701752963585, 2.302576955377843, 2.302586384705108], "accuracy": [0.09549596905708313, 0.09642054885625839, 0.09298639744520187, 0.10645885765552521, 0.10355303436517715, 0.09813763201236725, 0.10210011899471283, 0.10157178342342377, 0.10210011899471283, 0.1026284471154213, 0.10196803510189056, 0.1006472036242485, 0.09972262382507324], "val_loss": [1.9699804442269462, 1.9705638204302107, 1.9716602734157018, 1.9724401065281458, 1.9729704856872559, 1.9733316557747977, 1.9735215050833566, 1.9736074720110213, 1.9736380577087402, 1.9736434391566686, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06666667014360428, 0.0989999994635582, 0.10400000214576721, 0.10100000351667404, 0.08533333241939545, 0.09166666865348816, 0.11400000005960464, 0.11533333361148834, 0.10499999672174454, 0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 3, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [60, 16], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 22], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 7, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [44, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026214206160462, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [78, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1260572536.507048, 23455833875.57786, 109352586955.08229, 303451318406.4414, 649777651449.0682, 1194678618998.4478], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09642054885625839, 0.09959053993225098, 0.0948355570435524, 0.1006472036242485], "val_loss": [4596015542.857142, 36757065142.85714, 124042515017.14285, 294012949065.1429, 574228472978.2858, 992244137984.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0, 4, 6], [3, 1, 1, 0, 3, 2, 1, 2, 1, 1], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [8, 1, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 83], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 1, 3, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 2, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [178964193655.67114, 2.305647283513013, 2.309481979565865, 2.318084769386893, 2.3382240485804915, 2.388428015243486], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9762230600629533, 1.9787963458469935, 1.984231880732945, 1.9965455872671944, 2.0261478424072266, 2.0988036564418246], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 15, 10, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))))", "other_info": {"loss": [2.302608740186458, 2.3025681987619357, 2.3025682303474375, 2.3025716078862413, 2.3025673296725224, 2.3025689936584848, 2.302570638120009, 2.3025681921173287, 2.3025685535398663], "accuracy": [0.10474177449941635, 0.10579843819141388, 0.10368511080741882, 0.10791176557540894, 0.10447761416435242, 0.10632677376270294, 0.09998679161071777, 0.107647605240345, 0.09998679161071777], "val_loss": [1.9736461639404297, 1.973646981375558, 1.9736465045383997, 1.9736456871032715, 1.9736487524850028, 1.973649297441755, 1.9736480712890625, 1.9736497061593192, 1.9736506598336356], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.09733333438634872, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [63], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [49, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.square(alpha), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [1, 2, 5, 6, 9, 0, 0, 2, 5, 2, 2, 9, 0, 0], [3, 1, 1, 0, 2, 3, 0, 0], [96, 12, 93, 44], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8, 5, 7, 3, 8, 4, 8, 2, 4, 2, 0, 4, 4, 4, 4, 8, 8], [3, 1, 2, 3, 2, 0, 2, 3, 2, 2, 2, 3, 2, 2, 0, 1], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(sigma), tf.math.negative(alpha)), tf.math.negative(beta))), sigma), beta)", "other_info": {"loss": [2.3026214206160462, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [95], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [6, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1272480098.1448765, 23677446719.366, 110385907693.8761, 306318694927.75696, 655910998503.4515, 1205954583226.7168], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09642054885625839, 0.09959053993225098, 0.0948355570435524, 0.1006472036242485], "val_loss": [4639443382.857142, 37104328704.0, 125214668507.42857, 296788857417.1429, 579643132196.5714, 1001610955044.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7, 22], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [9, 9, 7, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026214206160462, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 2, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma))))", "other_info": {"loss": [17.43260295506655, 55.37439521907453, 55.37799304190754, 55.37826846244549, 55.378354404234315, 55.378396631436594], "accuracy": [0.10460969805717468, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [46.609574454171316, 46.61883653913225, 46.619236537388396, 46.61931719098772, 46.61936623709543, 46.6193836757115], "val_accuracy": [0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1], [3, 6, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0, 3], [63, 33, 44], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.446052325888238, 1.7577697030859173e+26, 2.548059788488394, 3.8890500280284264, 7.435008541656885, 13.101568975311308, 20.75576961977355], "accuracy": [0.036586977541446686, 0.08017434924840927, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3.4562980788094655, 2.0317283357892717, 2.6096177101135254, 4.834898131234305, 8.990717206682477, 14.86370849609375, 22.44145475115095], "val_accuracy": [0.00800000037997961, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 3, 0, 6, 4, 0, 2, 4, 3, 4, 0, 7, 1, 0, 4, 4, 1, 1, 0, 8, 4, 8, 6, 2, 0, 8, 2, 1, 9, 3, 6, 2, 1, 0, 2, 3, 9, 5, 4, 1, 1], [2, 5, 0, 3, 2, 4, 2, 4, 3, 0, 1, 4, 2, 4, 4, 4, 1, 5, 3, 1, 4, 4, 0, 2, 5, 2, 5], [57, 88, 79, 99, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 0, 69, 69, 42, 27, 5, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.negative(beta), grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.pow(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))))))), grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad))), tf.math.negative(grad))))), alpha), tf.math.add(tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), grad))))))), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta))))))), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.30436156656071, 3575.65647226091, 227296963.97902358, 15069626717870.68, 9.989993164759484e+17, 6.5897836939745165e+22], "accuracy": [0.09615638852119446, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.5425524030412947, 100286.140625, 6571105865.142858, 430643591324818.3, 2.8222658401063293e+19, 1.849600140972084e+24], "val_accuracy": [0.10000000149011612, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [13, 63, 56, 45]], "fitness": -0.05057142674922943, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.302844747497484, 2.3038266841934782, 2.3077081402987853, 2.3113890710114458, 2.3362625934475876, 8215849.802464259, 404.56781051206457, 7239.52018934297, 40145.889705578855, 134224.09570235107], "accuracy": [0.0948355570435524, 0.08968432247638702, 0.0820235088467598, 0.08611807972192764, 0.080042265355587, 0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9704444749014718, 1.9714972632271903, 1.975433349609375, 1.9831260272434779, 2.007176331111363, NaN, 1878.0316685267858, 17096.764508928572, 70374.12276785714, 199481.29910714287], "val_accuracy": [0.03533333167433739, 0.029999999329447746, 0.03099999949336052, 0.0793333351612091, 0.13300000131130219, 0.10133333504199982, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [8, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [7], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 3, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [36, 63, 56, 45]], "fitness": -0.03971428424119949, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.303106318375438, 2.3049034673020414, 2.3079507468698077, 2.31611838405001, 2.3194631075641783, 2.3114808593616982, 2.3149050462672647, 2.3194666580202212, 2.315622042198821, 2.4063992126191756, 4.388354147083613, 17.922117504099216, 69.305819330907, 205.75795295502704, 521.5186183507716, 1118.6977228041983, 2203.616837880048, 3942.425136990913, 6810.901825221239], "accuracy": [0.09430722147226334, 0.0878351628780365, 0.08889182657003403, 0.09166556596755981, 0.08730682730674744, 0.10672302544116974, 0.09800554811954498, 0.09959053993225098, 0.09047681838274002, 0.08453308790922165, 0.0866464152932167, 0.107647605240345, 0.10236428678035736, 0.10474177449941635, 0.10381719470024109, 0.09800554811954498, 0.10038304328918457, 0.10579843819141388, 0.09694888442754745], "val_loss": [1.9713480813162667, 1.9694993836539132, 1.9793920516967773, 1.9813054629734583, 1.9796027456011092, 1.9725499834333147, 1.983881882258824, 1.9825574329921178, 1.990565368107387, 2.400404248918806, 7.815585000174386, 33.71736145019531, 113.53528703962054, 308.0361851283482, 702.0889195033482, 1437.3109305245537, 2684.454659598214, 4700.364397321428, 7718.688337053572], "val_accuracy": [0.029333332553505898, 0.041333332657814026, 0.0573333315551281, 0.06133333221077919, 0.06400000303983688, 0.10466666519641876, 0.10300000011920929, 0.10333333164453506, 0.11033333092927933, 0.08266666531562805, 0.09200000017881393, 0.10766666382551193, 0.0963333323597908, 0.19766665995121002, 0.09666666388511658, 0.0963333323597908, 0.10066666454076767, 0.10300000011920929, 0.09666666388511658]}}]