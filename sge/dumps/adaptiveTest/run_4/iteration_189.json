[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2572315198366497, 2.0599735186415233, 1.6189859647005147, 1.2616132051717053, 1.0952525912117193, 1.0005831209943437, 0.9365429972707949, 0.8817188689942058, 0.8445720450123303, 0.8165155696342996, 0.8031808258819227, 0.7833371033222605, 0.7707657940304904, 0.755272961311557, 0.7345606517861029, 0.7221298370504927, 0.7213673757571492, 0.6961543455556588, 0.6934336887658028, 0.695345152221131, 0.6900240836315434, 0.6675547903413235, 0.6654318350810952, 0.6570707338912187, 0.6643516708831148, 0.6400649275258232, 0.6413859615645876, 0.6361567971256383, 0.6391081531380681, 0.6330185148694244, 0.6170919975190823, 0.6156079613332657, 0.6134836496284625, 0.613672503926231, 0.5993545355656364, 0.6022920747474673, 0.5925485405467206, 0.5885529917197504, 0.5857128538334012, 0.5903174654210264, 0.5774619413593647], "accuracy": [0.19918107986450195, 0.3895126283168793, 0.49425438046455383, 0.570202112197876, 0.6135252714157104, 0.6510368585586548, 0.6671509742736816, 0.6847180128097534, 0.6968696117401123, 0.7054550051689148, 0.7136441469192505, 0.7117950320243835, 0.7172104120254517, 0.7260599732398987, 0.7322678565979004, 0.7358341217041016, 0.7366266250610352, 0.7458723783493042, 0.7466648817062378, 0.7432307600975037, 0.7467969655990601, 0.7604015469551086, 0.7547219395637512, 0.7577598690986633, 0.7585523724555969, 0.7663452625274658, 0.7637035846710205, 0.7656848430633545, 0.7655527591705322, 0.7617223858833313, 0.7707040309906006, 0.7713643908500671, 0.7820631265640259, 0.7729493975639343, 0.7820631265640259, 0.774798572063446, 0.7800818681716919, 0.783119797706604, 0.7872143983840942, 0.7857614755630493, 0.7887993454933167], "val_loss": [1.85267516544887, 1.5172366414751326, 1.046738590512957, 0.8233124188014439, 0.7340552977153233, 0.6822703906467983, 0.6380180971963065, 0.6112657785415649, 0.5897221054349627, 0.5641186237335205, 0.5436112369809832, 0.5406222002846854, 0.5308386598314557, 0.5304317474365234, 0.5219708170209613, 0.5100169352122715, 0.4928215742111206, 0.5049142837524414, 0.48677708421434673, 0.48328462668827604, 0.4702353136880057, 0.4815443754196167, 0.4611462524959019, 0.4602925777435303, 0.45133815492902485, 0.44910856655665804, 0.4469025135040283, 0.44843402930668425, 0.43822504792894634, 0.4453154632023403, 0.4400516748428345, 0.43086781672069, 0.4288112095424107, 0.4314658982413156, 0.42195102998188566, 0.4263696585382734, 0.4171440431049892, 0.41634438719068256, 0.4115831511361258, 0.41904635088784353, 0.4106148992265974], "val_accuracy": [0.43166667222976685, 0.5696666836738586, 0.6486666798591614, 0.6896666884422302, 0.6943333148956299, 0.7296666502952576, 0.7353333234786987, 0.7400000095367432, 0.7363333106040955, 0.7596666812896729, 0.7676666378974915, 0.7696666717529297, 0.762333333492279, 0.7516666650772095, 0.7570000290870667, 0.7720000147819519, 0.7850000262260437, 0.7699999809265137, 0.7933333516120911, 0.7940000295639038, 0.7929999828338623, 0.7776666879653931, 0.8056666851043701, 0.8036666512489319, 0.8050000071525574, 0.8080000281333923, 0.8109999895095825, 0.7976666688919067, 0.8133333325386047, 0.8029999732971191, 0.8009999990463257, 0.8263333439826965, 0.8216666579246521, 0.8096666932106018, 0.8246666789054871, 0.8306666612625122, 0.8270000219345093, 0.8273333311080933, 0.8293333053588867, 0.8213333487510681, 0.8243333101272583]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [3, 4, 0], [17, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.257231551327678, 2.05997284805581, 1.618996845134387, 1.2616445772746425, 1.095132426074971, 1.000420061698947, 0.9362607759774999, 0.8812470688260604, 0.8453830459397844, 0.8166402660230557, 0.8022929925204363, 0.7837915550275265, 0.7707300377307772, 0.7553167323615211, 0.7336590371395162, 0.7218526875054785, 0.7207964459162788, 0.6953040923361828, 0.6932224539906798, 0.6965562159264675, 0.6882433578118106, 0.6666718247134876, 0.6657333374417075, 0.6568408294471028, 0.6639412364325488, 0.6407655942410116, 0.6426950066222837, 0.6363307610951269, 0.6389386725227326, 0.6322903599028638, 0.6169623744533425, 0.6151638068716366, 0.6123455508179464, 0.6140962850778268, 0.5998927857960534, 0.6027801841824141, 0.5925804886284474, 0.5887144416582473, 0.5861318551585533, 0.5896011652994968, 0.5769177165722347], "accuracy": [0.19918107986450195, 0.3895126283168793, 0.49412229657173157, 0.5703341960906982, 0.6129969358444214, 0.6519614458084106, 0.666358470916748, 0.6845859289169312, 0.6970016956329346, 0.7057191729545593, 0.7135120630264282, 0.7127195596694946, 0.7162858247756958, 0.7251353859901428, 0.7338528633117676, 0.735041618347168, 0.7368907928466797, 0.7475894689559937, 0.7477215528488159, 0.7416457533836365, 0.7478536367416382, 0.7604015469551086, 0.7556465268135071, 0.7588165402412415, 0.7582882046699524, 0.7647602558135986, 0.7618544697761536, 0.7655527591705322, 0.7670056819915771, 0.7623828053474426, 0.7717606425285339, 0.7726852297782898, 0.7819310426712036, 0.7729493975639343, 0.7804781198501587, 0.7734777331352234, 0.7810064554214478, 0.7824593782424927, 0.7885351777076721, 0.7873464822769165, 0.7905164361000061], "val_loss": [1.8526753698076521, 1.5172411033085413, 1.0467453684125627, 0.8233694689614433, 0.7332878623689923, 0.681957653590611, 0.6371405294963292, 0.6117660318102155, 0.5882272039140973, 0.5630621910095215, 0.5437947000776019, 0.5414776972361973, 0.5317459447043282, 0.5260215146200997, 0.5222053187234061, 0.5091982398714338, 0.4923534223011562, 0.5056581156594413, 0.4879223959786551, 0.4829625061580113, 0.46974476746150423, 0.48377186911446707, 0.4619945628302438, 0.4605018411363874, 0.45140228952680317, 0.449667147227696, 0.44665585245404926, 0.44539298330034527, 0.438361542565482, 0.4451487234660557, 0.44035327434539795, 0.4306849070957729, 0.4290659853390285, 0.4310208133288792, 0.42409119435719084, 0.4261147379875183, 0.4167653577668326, 0.41759506293705534, 0.4116224816867283, 0.41983066286359516, 0.4101422684533255], "val_accuracy": [0.43166667222976685, 0.5696666836738586, 0.6483333110809326, 0.6903333067893982, 0.6936666369438171, 0.7289999723434448, 0.7353333234786987, 0.7393333315849304, 0.7363333106040955, 0.7609999775886536, 0.7683333158493042, 0.7696666717529297, 0.7630000114440918, 0.7570000290870667, 0.7580000162124634, 0.7770000100135803, 0.7876666784286499, 0.7699999809265137, 0.7919999957084656, 0.7926666736602783, 0.7933333516120911, 0.7746666669845581, 0.8066666722297668, 0.8046666383743286, 0.8080000281333923, 0.8069999814033508, 0.8113333582878113, 0.8066666722297668, 0.8133333325386047, 0.8033333420753479, 0.8026666641235352, 0.828000009059906, 0.8196666836738586, 0.8096666932106018, 0.8226666450500488, 0.8296666741371155, 0.8259999752044678, 0.8253333568572998, 0.8276666402816772, 0.8216666579246521, 0.8256666660308838]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [29, 63, 56, 45]], "fitness": -0.6871428489685059, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.265136318530515, 1.9220997457254863, 1.3847413249318752, 1.024446517248762, 0.9014658681578908, 0.8403749555927997, 0.8038371618728376, 0.7697886764066346, 0.7300004840463994, 0.7215973246587251, 0.6950879942204077, 0.6716337711851059, 0.6304851088147861, 0.6177480206859898, 0.5865200356863367, 0.5931989437458994, 0.5673125236104618, 0.5536208064674843, 0.540776344834223, 0.5275298908260347, 0.5255280125134846, 0.5159145056799875, 0.5095361987786475, 0.4971422915287998, 0.47337200524800366, 0.47292775982060153, 0.46690922953102804, 0.4564243065383472, 0.4532363841389117, 0.427498590051065, 0.42944699719502955, 0.4261462761465868, 0.4318216550761147, 0.41110957473843185, 0.4107812512205923], "accuracy": [0.1838594675064087, 0.41328755021095276, 0.5340113639831543, 0.6452252268791199, 0.6749438643455505, 0.6863030195236206, 0.6942279934883118, 0.7124554514884949, 0.7298903465270996, 0.7288337349891663, 0.7359662055969238, 0.7573636174201965, 0.7675340175628662, 0.7573636174201965, 0.7761194109916687, 0.7712323069572449, 0.7844406366348267, 0.7852331399917603, 0.7901201844215393, 0.7971205711364746, 0.8039889335632324, 0.8062343001365662, 0.7984414100646973, 0.8068947196006775, 0.8219521641731262, 0.8232730031013489, 0.8168009519577026, 0.8293488025665283, 0.8276317715644836, 0.8355567455291748, 0.8363492488861084, 0.8400475382804871, 0.8380662798881531, 0.844010055065155, 0.8413683772087097], "val_loss": [1.8401823043823242, 1.1002230303628104, 0.716920120375497, 0.6873829535075596, 0.5832456520625523, 0.5806980303355626, 0.5410614694867816, 0.5507824420928955, 0.5312754596982684, 0.500854355948312, 0.46649396419525146, 0.47182960169655935, 0.44476219585963656, 0.4251881752695356, 0.4274986812046596, 0.42276093789509367, 0.39902076550892424, 0.39780824525015696, 0.3893278326307024, 0.38677362884793964, 0.38288854701178415, 0.3707788331168039, 0.3820846165929522, 0.3543827533721924, 0.3546519534928458, 0.3502279945782253, 0.34402666773114887, 0.3348096864564078, 0.32781377860477995, 0.3335409334727696, 0.32941828455243793, 0.32576732124601093, 0.3259149023464748, 0.3277108243533543, 0.3245102252279009], "val_accuracy": [0.4126666784286499, 0.612333357334137, 0.6963333487510681, 0.6966666579246521, 0.7486666440963745, 0.734666645526886, 0.753000020980835, 0.7603333592414856, 0.7699999809265137, 0.7770000100135803, 0.7940000295639038, 0.7870000004768372, 0.8046666383743286, 0.8173333406448364, 0.8190000057220459, 0.8209999799728394, 0.8316666483879089, 0.8270000219345093, 0.8316666483879089, 0.8343333601951599, 0.8396666646003723, 0.8453333377838135, 0.8366666436195374, 0.8543333411216736, 0.8513333201408386, 0.8506666421890259, 0.8616666793823242, 0.8640000224113464, 0.8669999837875366, 0.8676666617393494, 0.8643333315849304, 0.8640000224113464, 0.8616666793823242, 0.862333357334137, 0.8640000224113464]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45, 26], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [55, 63, 56, 45]], "fitness": -0.18314285576343536, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 3, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [1112775.5693868247, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2024831622838974, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.967820047445244e+17, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.1783333271741867, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 61, 32, 20, 75], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 8, 8, 0, 6, 4, 0, 2, 4], [0, 3, 0], [14, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.791798983551114, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.032360322773456573, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [40.291592189243865, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [58, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [87, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 13, 9, 4, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1986.1307352963156, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.046229030936956406, 0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [136686043136.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 0, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 3, 1, 0], [96, 12, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0, 2], [14, 45, 49], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [84, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301456761287739, 2.304124219558337, 2.629511774050766, 9.150885878489742, 16.204728297207254, 20.765542716964866], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9743958881923132, 1.983731474195208, 5.697880336216518, 10.860027040754046, 15.756798880440849, 20.477310180664062], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [7, 7], [71], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 3, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.791797671005033, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.032360322773456573, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [40.29094042096819, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [29, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 16, 9, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 7, 8, 2, 1, 0, 0, 4, 0, 8], [1, 1, 0, 1, 3, 0, 2], [35, 8, 44, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 5, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [0, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 7, 0, 2, 6, 4, 0, 2, 4], [5, 0, 0, 1, 0], [66, 45, 73], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 3, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [29, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], [4, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [36, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [93, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 12, 8, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 7, 0, 6, 4, 0, 2, 4], [4, 3, 0, 3, 2, 2, 1, 3], [14, 97], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 2, 1, 1, 0, 0, 13, 9, 4, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), grad)), tf.math.negative(beta)))), tf.math.add(tf.math.pow(tf.math.add(beta, beta), alpha), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [38, 70], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [5, 0, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3018850957429358, 2.302718973399122, 2.300789712300752, 2.3026189789276366, 2.302704159011458, 2.300809166671074], "accuracy": [0.09087307006120682, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787, 0.09391097724437714, 0.09734513610601425], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 9, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [17, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3018850957429358, 2.302718973399122, 2.300789712300752, 2.3026189789276366, 2.302704159011458, 2.300809166671074], "accuracy": [0.09087307006120682, 0.09417514503002167, 0.09285431355237961, 0.09457138925790787, 0.09391097724437714, 0.09734513610601425], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]