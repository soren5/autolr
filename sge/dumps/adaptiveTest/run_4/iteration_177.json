[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2742783034781517, 2.1783986195534166, 1.9868309770703017, 1.6599940680840295, 1.3826007506850846, 1.206835934168249, 1.1059244522376381, 1.0241922022187557, 0.9552618035424922, 0.9279189865744393, 0.8876607800046482, 0.8566469632717975, 0.8472099706024746, 0.8084727065233491, 0.8098236793193835, 0.7938930409900296, 0.7744936293000637, 0.7524007452697865, 0.7523517191228991, 0.7528717998799521, 0.7253098392829824, 0.7262395906205883, 0.712492892896778, 0.707415705154821, 0.6993321087838731, 0.6962340285261278, 0.6911743048269987, 0.6803848393652118, 0.6769540056560679, 0.6805251697665113, 0.6755923063149463, 0.6664252651602192, 0.6542975841858415, 0.643916038592352, 0.6424967780671871, 0.642354869815762, 0.6386336652893416, 0.6323657996933836, 0.6266381938727367, 0.620687866672281, 0.6319032053606716, 0.6220919949944466, 0.6193801221468382, 0.614411254372217, 0.6130496492286353, 0.6072865009953428, 0.6117490130865247, 0.5949838839785266, 0.6129752742206541], "accuracy": [0.17250032722949982, 0.3218861520290375, 0.40245673060417175, 0.4855369031429291, 0.5387663245201111, 0.5914674401283264, 0.6151102781295776, 0.6424514651298523, 0.6616035103797913, 0.6756042838096619, 0.6798309087753296, 0.6950204968452454, 0.6970016956329346, 0.707040011882782, 0.7102100253105164, 0.7152291536331177, 0.7223616242408752, 0.728701651096344, 0.7293620109558105, 0.7260599732398987, 0.735569953918457, 0.735041618347168, 0.737022876739502, 0.7412495017051697, 0.7427024245262146, 0.7445515990257263, 0.7445515990257263, 0.7494386434555054, 0.7526086568832397, 0.7493065595626831, 0.7541936039924622, 0.7569673657417297, 0.763439416885376, 0.7619865536689758, 0.7670056819915771, 0.7597411274909973, 0.7680623531341553, 0.767401933670044, 0.7700436115264893, 0.7714964747428894, 0.7720248103141785, 0.7700436115264893, 0.7729493975639343, 0.7758552432060242, 0.7753269076347351, 0.7741381525993347, 0.7725531458854675, 0.7874785661697388, 0.7770439982414246], "val_loss": [1.9002461433410645, 1.7676578249250139, 1.4931940010615758, 1.1540586607796806, 0.9314611639295306, 0.8079155342919486, 0.7400541475840977, 0.6996956893375942, 0.6650369848523822, 0.6252081394195557, 0.6085803849356515, 0.5926947593688965, 0.5759815318243844, 0.5629838194165911, 0.5572509765625, 0.5419390712465558, 0.5330866234643119, 0.5244538102831159, 0.5242316211972918, 0.5134664944240025, 0.5102372169494629, 0.5014602627073016, 0.49463140964508057, 0.4908299275806972, 0.4913119077682495, 0.4784101588385446, 0.4837066786629813, 0.4694555827549526, 0.47496610028403147, 0.46945432254246305, 0.4636901787349156, 0.46278224672589985, 0.45576402119227816, 0.45181400435311453, 0.4483333485467093, 0.4460396426064627, 0.44746640750340055, 0.43991196155548096, 0.4408179521560669, 0.44407074792044504, 0.4403191123689924, 0.4337158799171448, 0.44102706227983746, 0.4316710489136832, 0.4305268440927778, 0.4304039478302002, 0.4279308489390782, 0.42851104055132183, 0.42196323190416607], "val_accuracy": [0.390666663646698, 0.5103333592414856, 0.5793333053588867, 0.609666645526886, 0.6673333048820496, 0.6930000185966492, 0.7013333439826965, 0.703000009059906, 0.7179999947547913, 0.7393333315849304, 0.7473333477973938, 0.7400000095367432, 0.7523333430290222, 0.7570000290870667, 0.765666663646698, 0.765999972820282, 0.7710000276565552, 0.7773333191871643, 0.7666666507720947, 0.7826666831970215, 0.7799999713897705, 0.7856666445732117, 0.7829999923706055, 0.7926666736602783, 0.7853333353996277, 0.7956666946411133, 0.7883333563804626, 0.7996666431427002, 0.7923333048820496, 0.7900000214576721, 0.8026666641235352, 0.8013333082199097, 0.8096666932106018, 0.8050000071525574, 0.8113333582878113, 0.8140000104904175, 0.809333324432373, 0.8166666626930237, 0.8143333196640015, 0.8090000152587891, 0.8130000233650208, 0.8203333616256714, 0.8023333549499512, 0.8240000009536743, 0.8199999928474426, 0.8223333358764648, 0.8196666836738586, 0.8220000267028809, 0.8209999799728394]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 8, 56, 45]], "fitness": -0.6602857112884521, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, beta), beta), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2190450264116115, 1.5501488057645305, 1.0284566285351657, 0.8824073943432375, 0.8015289135093245, 0.757953736862691, 0.715372816533177, 0.6865564411531397, 0.6256335151430135, 0.6071890622727734, 0.5807557146641493, 0.5740476784421437, 0.5517500920885228, 0.531516825640285, 0.5094964556674506, 0.50803336626692, 0.5033144560141759, 0.4755021329482533, 0.4740323679534719, 0.46642270942468683, 0.46020125855449767, 0.45032570887912515, 0.44163205892953733, 0.41857024690321076, 0.4473568659456352, 0.4229700957519535, 0.42381977248091063, 0.41687620637549416, 0.4134470607626314, 0.3994922641836468], "accuracy": [0.24065512418746948, 0.4916127324104309, 0.6380926966667175, 0.6819442510604858, 0.6963412761688232, 0.7253995537757874, 0.724210798740387, 0.7417778372764587, 0.7684586048126221, 0.772288978099823, 0.7779685854911804, 0.7817989587783813, 0.7861577272415161, 0.7993659973144531, 0.8049134612083435, 0.8058380484580994, 0.8127063512802124, 0.8181217908859253, 0.8203672170639038, 0.8286884427070618, 0.8251221776008606, 0.8338396549224854, 0.8337075710296631, 0.8400475382804871, 0.833179235458374, 0.8401796221733093, 0.842028796672821, 0.8411042094230652, 0.8432175517082214, 0.8451988101005554], "val_loss": [1.5962566648210799, 0.7053749731608799, 0.6989787135805402, 0.5806385278701782, 0.580054691859654, 0.5251658814293998, 0.4734949895313808, 0.46108877658843994, 0.4366177575928824, 0.41969183513096403, 0.3951586740357535, 0.40185353585651945, 0.3932423251015799, 0.38865634373256136, 0.37371457474572317, 0.36768131596701487, 0.3541279009410313, 0.35642061063221525, 0.35480464356286184, 0.34311305625098093, 0.35675679785864695, 0.3405343549592154, 0.33380510977336336, 0.3414837292262486, 0.3385927081108093, 0.3612694484846933, 0.34158572980335783, 0.3477857368332999, 0.3439290523529053, 0.33875868150166105], "val_accuracy": [0.4846666753292084, 0.70333331823349, 0.7453333139419556, 0.746999979019165, 0.7509999871253967, 0.7553333044052124, 0.796999990940094, 0.7960000038146973, 0.8069999814033508, 0.8186666369438171, 0.828000009059906, 0.8246666789054871, 0.8263333439826965, 0.8296666741371155, 0.8443333506584167, 0.8433333039283752, 0.8539999723434448, 0.8456666469573975, 0.8586666584014893, 0.8576666712760925, 0.8573333621025085, 0.8573333621025085, 0.859666645526886, 0.862666666507721, 0.8659999966621399, 0.8560000061988831, 0.862333357334137, 0.8606666922569275, 0.8539999723434448, 0.8650000095367432]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 3, 9, 0, 6, 4, 0, 2, 4], [4, 4, 0], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.43228572607040405, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.30290672836082, 2.300883432184748, 2.3019261028253015, 2.2998152874747695, 2.2986207041112485, 2.2994065560275505, 2.298068714148144, 2.296033496696715, 2.295492067313103, 2.2957738896308086, 2.2943669965852598, 2.292922008905145, 2.290958295802493, 2.2885021249521458, 2.290723155817383, 2.288974584259015, 2.2865692194599943, 2.2878747414352243, 2.286941114496703, 2.2855314472174806, 2.284897915801478, 2.2870400063098146, 2.282858160933672, 2.2822786966224844, 2.2812141844971525, 2.280524981791837, 2.280336635932474, 2.280057839178343, 2.2784795253473016, 2.2770089474588477, 2.277261284568826, 2.2753836021856655, 2.274046894140751, 2.2735613704341797, 2.270602226414779, 2.271064391902661, 2.271165635497295, 2.271494157499153, 2.2687639113446236, 2.2698290465514517, 2.2670102253597584, 2.2661895868784843, 2.2662379033435465, 2.2649067286187945, 2.2638044432878273, 2.26109761786168, 2.2631492079713516, 2.261679557399223, 2.261298235397077, 2.259345403578555, 2.2573969708993027, 2.256593303122399, 2.256855683099356, 2.255417103560184, 2.252728708951449, 2.2515828690083586, 2.2520467989070934, 2.2531439195833722, 2.2513157307369487, 2.249102059136198, 2.2489065975324745, 2.2469275796953494, 2.2480566286533703, 2.245743482466529, 2.244510042070634, 2.243276804886348, 2.2421338766982544, 2.24047902527581, 2.2396067674558995, 2.240782903185799, 2.2359510782829064, 2.236092628001096, 2.2359049138517713, 2.234045884203303, 2.232611844158916, 2.2331512789007633, 2.2314669386806143, 2.229642406635438, 2.2290153829979937, 2.227412917720738, 2.225255602717069, 2.2250832513086927, 2.223867969647721, 2.2232191308519984, 2.220684385224104, 2.221015592403006, 2.220011336723764, 2.218388160269227, 2.216413826596672, 2.2165188350382734, 2.214884228725884, 2.2109797144484102, 2.209234234836706, 2.2109234273835194, 2.2093961719729096, 2.2093171129263216, 2.2069877266269775, 2.201556441900737, 2.202256955994654, 2.2023851997769506], "accuracy": [0.09113723784685135, 0.10011887550354004, 0.08717474341392517, 0.10170386731624603, 0.09985470771789551, 0.09589222073554993, 0.10276053100824356, 0.10540219396352768, 0.10949676483869553, 0.10659094154834747, 0.11253467202186584, 0.1154404953122139, 0.12468630075454712, 0.13115836679935455, 0.11821424216032028, 0.12349755316972733, 0.12930920720100403, 0.12455421686172485, 0.13195087015628815, 0.13142253458499908, 0.1328754425048828, 0.12442214041948318, 0.13697001338005066, 0.14198917150497437, 0.14515915513038635, 0.14859332144260406, 0.14740456640720367, 0.14793290197849274, 0.15612204372882843, 0.15876370668411255, 0.15440496802330017, 0.15915995836257935, 0.16616034507751465, 0.16959451138973236, 0.18095363676548004, 0.1702549159526825, 0.1768590658903122, 0.17540615797042847, 0.18372738361358643, 0.1784440577030182, 0.18636904656887054, 0.186104878783226, 0.1842557191848755, 0.19244486093521118, 0.18874652683734894, 0.19931316375732422, 0.1978602558374405, 0.19984149932861328, 0.2001056671142578, 0.20499274134635925, 0.20776647329330444, 0.2114647924900055, 0.21120063960552216, 0.21754062175750732, 0.2211068570613861, 0.22520142793655396, 0.230484738945961, 0.22097477316856384, 0.21965394914150238, 0.22665433585643768, 0.227314755320549, 0.23035265505313873, 0.23299431800842285, 0.23286223411560059, 0.23405098915100098, 0.24382512271404266, 0.24105137586593628, 0.24646678566932678, 0.24659886956214905, 0.2417117953300476, 0.2603355050086975, 0.25861841440200806, 0.24725927412509918, 0.2608638107776642, 0.2604675590991974, 0.25980716943740845, 0.26958128809928894, 0.2615242302417755, 0.2674679756164551, 0.26284506916999817, 0.2744683623313904, 0.272090882062912, 0.27578920125961304, 0.2785629332065582, 0.2845066785812378, 0.27658170461654663, 0.2744683623313904, 0.2798837721347809, 0.2915070652961731, 0.28556331992149353, 0.2793554365634918, 0.2991678714752197, 0.2989037036895752, 0.28939375281333923, 0.29665830731391907, 0.2896578907966614, 0.2934883236885071, 0.30405494570732117, 0.30379077792167664, 0.3016774654388428], "val_loss": [1.9695626667567663, 1.9687394414629256, 1.96792847769601, 1.9671212605067663, 1.966301713671003, 1.9654888425554549, 1.9646838733128138, 1.963881492614746, 1.9630614689418249, 1.9622619492667062, 1.961456026349749, 1.9606576647077287, 1.9598563739231654, 1.9590488842555456, 1.9582371711730957, 1.9574333599635534, 1.956620352608817, 1.955812931060791, 1.955012593950544, 1.9542036737714494, 1.9533895083836146, 1.9525885581970215, 1.9517967360360282, 1.950993197304862, 1.9501756259373255, 1.9493622779846191, 1.9485460690089635, 1.9477310180664062, 1.9469154902866908, 1.9461003712245397, 1.945284298488072, 1.9444531032017298, 1.9436216354370117, 1.942791530064174, 1.9419585636683874, 1.9411190577915736, 1.940282208578927, 1.939446040562221, 1.938598564692906, 1.9377517018999373, 1.9369015012468611, 1.936051709311349, 1.9351904051644462, 1.9343346187046595, 1.9334659576416016, 1.9325932775224959, 1.9317295891898019, 1.930854048047747, 1.929968970162528, 1.9290849140712194, 1.9281810351780482, 1.927281720297677, 1.9263813155038017, 1.9254677636282784, 1.92453704561506, 1.9236115046909876, 1.9226788112095423, 1.9217546326773507, 1.9208194868905204, 1.919872760772705, 1.9189204488481795, 1.9179604394095284, 1.916989735194615, 1.9160098348345076, 1.9150265284946986, 1.9140403611319405, 1.9130354608808244, 1.9120325360979353, 1.9110027040754045, 1.9099918093000139, 1.9089507375444685, 1.9079177039010184, 1.9068618501935686, 1.9057917594909668, 1.9047222818647112, 1.9036357062203544, 1.9025310107639857, 1.9014263834272112, 1.9003115381513322, 1.8991930144173759, 1.8980667250497, 1.896930490221296, 1.8957810401916504, 1.8946161951337541, 1.893444265638079, 1.892263412475586, 1.8910786764962333, 1.8898778642926897, 1.888657706124442, 1.8874453135899134, 1.8862175941467285, 1.8849496160234724, 1.8836699894496374, 1.8824069840567452, 1.8811277662004744, 1.879845414842878, 1.8785394259861536, 1.877201693398612, 1.8758537428719657, 1.8745036806379045], "val_accuracy": [0.04233333468437195, 0.04766666516661644, 0.05400000140070915, 0.061666667461395264, 0.06800000369548798, 0.07333333045244217, 0.08133333176374435, 0.08633333444595337, 0.09200000017881393, 0.09666666388511658, 0.10533333569765091, 0.11033333092927933, 0.11966666579246521, 0.12800000607967377, 0.13433332741260529, 0.14366666972637177, 0.1550000011920929, 0.164000004529953, 0.17233332991600037, 0.18133333325386047, 0.1899999976158142, 0.19566667079925537, 0.20133332908153534, 0.21133333444595337, 0.21666666865348816, 0.22300000488758087, 0.23133333027362823, 0.23999999463558197, 0.2436666637659073, 0.25066667795181274, 0.2590000033378601, 0.2643333375453949, 0.27033331990242004, 0.2783333361148834, 0.2840000092983246, 0.2879999876022339, 0.2933333218097687, 0.30000001192092896, 0.30533334612846375, 0.31033334136009216, 0.31299999356269836, 0.3166666626930237, 0.32199999690055847, 0.3266666531562805, 0.3306666612625122, 0.335999995470047, 0.3383333384990692, 0.343666672706604, 0.3473333418369293, 0.3499999940395355, 0.35366666316986084, 0.3569999933242798, 0.35866665840148926, 0.36266666650772095, 0.3656666576862335, 0.36666667461395264, 0.3696666657924652, 0.3713333308696747, 0.3733333349227905, 0.37533333897590637, 0.3763333261013031, 0.37966665625572205, 0.38199999928474426, 0.3843333423137665, 0.38600000739097595, 0.38733333349227905, 0.3893333375453949, 0.39100000262260437, 0.3919999897480011, 0.39233332872390747, 0.39266666769981384, 0.39500001072883606, 0.3959999978542328, 0.3970000147819519, 0.398333340883255, 0.40166667103767395, 0.40299999713897705, 0.40400001406669617, 0.40566667914390564, 0.4076666533946991, 0.4090000092983246, 0.4116666615009308, 0.41333332657814026, 0.41466665267944336, 0.4163333475589752, 0.4183333218097687, 0.42133334279060364, 0.4233333468437195, 0.42633333802223206, 0.42766666412353516, 0.4300000071525574, 0.43166667222976685, 0.4326666593551636, 0.4326666593551636, 0.4346666634082794, 0.4350000023841858, 0.43533334136009216, 0.43533334136009216, 0.437333345413208, 0.4386666715145111]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 7, 8, 0, 6, 4, 0, 2, 4], [0, 4, 0, 1], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [3, 2, 8, 6, 5, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 1, 0, 2], [11, 63, 56, 45]], "fitness": -0.1477142870426178, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [5.362904981835611, 2.549080378018433e+27, 2062055.73731075, 13593282900.047022, 88758518845139.73, NaN], "accuracy": [0.09774138033390045, 0.10791176557540894, 0.1010434553027153, 0.09985470771789551, 0.10130762308835983, 0.09668471664190292], "val_loss": [553.3601946149554, 7850.009486607143, 51503747.428571425, 337916067840.0, 2217067563600164.5, NaN], "val_accuracy": [0.1733333319425583, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 0, 1, 0, 3], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302647148786582, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [3, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302647148786582, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [9, 7, 9, 0, 6, 4, 0, 2, 4], [0, 4, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 4, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.916288709974308, 9.131067833392187, 24.053128597837446, 47.007382553739475, 82.2983884749679, 131.53460815494182], "accuracy": [0.09800554811954498, 0.10170386731624603, 0.09576013684272766, 0.10117553919553757, 0.10236428678035736, 0.10328886657953262], "val_loss": [3.5586479731968472, 10.23084831237793, 22.357943398611887, 40.966037205287385, 67.26693943568638, 102.67148263113839], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 0, 0], [79, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [372.19142782551154, 2.3026363569054826, 2.3026361751077733, 2.302636179264589, 2.3026363216985124, 2.3026361667626505], "accuracy": [0.10328886657953262, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9735841069902693, 1.9735841751098633, 1.9735844475882394, 1.9735843794686454, 1.9735844475882394, 1.9735845838274275], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [7, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 2, 5, 0, 2, 4], [0, 4, 0], [66, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [8, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [11, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [8, 7, 9, 0, 6, 4, 0, 2, 4], [2, 2, 0], [66, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 4, 6, 2, 4, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [55, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 13, 8, 5, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.divide_no_nan(alpha, alpha), tf.math.add(tf.math.pow(tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), sigma)))", "other_info": {"loss": [2.302647148786582, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 7, 3, 0, 6, 4, 0, 2, 4], [0, 4, 0, 4, 1], [25, 77], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 2, 1, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 2, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [66, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(alpha)))), alpha)), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302647148786582, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 3, 2, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [13, 48, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [54.53460289064951, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14080041646957397, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [340097.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 8, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [66, 62, 55], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [13.187427167800502, 867.2972506753773, 5293.002492291722, 16239.63927682522, 36695.66829225003, 69548.44582328953], "accuracy": [0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [143.0647234235491, 2272.63525390625, 8982.038783482143, 22810.33426339286, 46288.734375, 81963.89285714286], "val_accuracy": [0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 0, 6, 4, 0, 2, 4], [0, 2, 0, 1], [66, 77, 3], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [13, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 6, 4, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [50512950090.67746, 7770396883355.98, 136320003133756.48, 912987954681849.2, 4077028724329561.5, 1.3464704493492824e+16], "accuracy": [0.1018359512090683, 0.1022322028875351, 0.09628847241401672, 0.10130762308835983, 0.10170386731624603, 0.10342095047235489], "val_loss": [422595601554.2857, 22781758837321.145, 244524308908324.56, 1333134648185417.2, 4994454106369463.0, 1.4726545823385892e+16], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [7, 2, 1, 0, 6, 4, 0, 2, 4], [3, 1, 0, 5, 5, 4], [66, 77], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 3, 2, 5, 2, 2, 4, 0, 8], [1, 1, 0, 3, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.negative(tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1232974467.3061755, 23682453402.28979, 113059001689.30075, 301376228246.90845, 652843360486.471, 1206983033727.9155], "accuracy": [0.1018359512090683, 0.1022322028875351, 0.09628847241401672, 0.10117553919553757, 0.1018359512090683, 0.10381719470024109], "val_loss": [4639720886.857142, 37106607250.28571, 125221610642.28572, 296810840064.0, 579684925440.0, 1001683306788.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0], [79, 45, 48], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [33, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302647148786582, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 3, 0], [66, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [3, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [98, 63, 56, 45]], "fitness": -0.07114285975694656, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))", "other_info": {"loss": [2.30271670947757, 2.301022336152661, 2.3018738917702333, 2.300432605860555, 2.2998370849035985, 2.301157054773899, 2.3003911551325755, 2.2991330152206007, 2.299466837351553, 2.2995078893086345, 2.299978899902215, 2.299141143212591, 2.2990679624388957, 2.298193385903043, 2.300040785788608], "accuracy": [0.09074098616838455, 0.09681680053472519, 0.08770307898521423, 0.10051512718200684, 0.09840179979801178, 0.09259014576673508, 0.09536388516426086, 0.09906221181154251, 0.09800554811954498, 0.1002509593963623, 0.1026284471154213, 0.10487385839223862, 0.09893012791872025, 0.10976093262434006, 0.0952318087220192], "val_loss": [1.9695842606680733, 1.969379493168422, 1.9690185274396623, 1.968968732016427, 1.9690055847167969, 1.9689789499555315, 1.9688916206359863, 1.9688145773751395, 1.9687788827078683, 1.9687509536743164, 1.9689482280186243, 1.9692202295575822, 1.9696130071367537, 1.9699576922825404, 1.9701975413731165], "val_accuracy": [0.04766666516661644, 0.05166666582226753, 0.05833333358168602, 0.06233333423733711, 0.06499999761581421, 0.07233333587646484, 0.07966666668653488, 0.08166666328907013, 0.08366666734218597, 0.08633333444595337, 0.0833333358168602, 0.07800000160932541, 0.07666666805744171, 0.07400000095367432, 0.07066666334867477]}}]