[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.8311428427696228, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2982919148135386, 2.033826173367423, 1.7715575132293158, 1.4025124329554486, 1.0076515083898092, 0.8882340760578049, 0.7864105925977568, 0.7442118839155712, 0.6795007417766, 0.6546758097223617, 0.6459226631422273, 0.6467647435028697, 0.6232731271382131, 0.5640282799397415, 0.5925108505246378, 0.5386754453473512, 0.54655912873169, 0.5212923479653337, 0.5370253093049605, 0.4927032758074508, 0.495751883725858, 0.5104723454088567, 0.4562229376033848, 0.4578099374828747, 0.45763349027256406, 0.4603698505520458, 0.4498567628216482, 0.4047246965529377, 0.4290686724853868, 0.4184180719229555, 0.42177902071341516, 0.41677169683445336], "accuracy": [0.2950733006000519, 0.36560559272766113, 0.4171179533004761, 0.5120856165885925, 0.628582775592804, 0.661471426486969, 0.7041342258453369, 0.7116629481315613, 0.7358341217041016, 0.7477215528488159, 0.752740740776062, 0.7561748623847961, 0.765949010848999, 0.7852331399917603, 0.7737419009208679, 0.7927618622779846, 0.7943468689918518, 0.7972526550292969, 0.800290584564209, 0.8153480291366577, 0.8112534880638123, 0.8121780753135681, 0.8315942287445068, 0.8231409192085266, 0.8235371708869934, 0.8255184292793274, 0.8285563588142395, 0.8519350290298462, 0.8401796221733093, 0.8424250483512878, 0.8401796221733093, 0.8403117060661316], "val_loss": [1.9182632991245814, 1.24928161076137, 1.3709369046347482, 0.8376671757016864, 0.6375747919082642, 0.6710841996329171, 0.6624518632888794, 0.4983691828591483, 0.5520776169640678, 0.5904276881899152, 0.5900562150137765, 0.47117856570652555, 0.44513700689588276, 0.46711574281964985, 0.4167134165763855, 0.46167004108428955, 0.3858201929501125, 0.510057841028486, 0.3952054721968515, 0.40004747254507883, 0.4318117414202009, 0.3853617565972464, 0.38035222462245394, 0.3772551247051784, 0.37783663613455637, 0.3438682641301836, 0.3343370131083897, 0.3370788608278547, 0.37821137053625925, 0.36950149706431795, 0.3512134381702968, 0.4207259586879185], "val_accuracy": [0.3089999854564667, 0.5540000200271606, 0.4336666762828827, 0.6323333382606506, 0.7173333168029785, 0.687333345413208, 0.7276666760444641, 0.7693333625793457, 0.7383333444595337, 0.6886666417121887, 0.734333336353302, 0.7820000052452087, 0.8023333549499512, 0.7873333096504211, 0.8243333101272583, 0.7860000133514404, 0.8316666483879089, 0.7799999713897705, 0.8346666693687439, 0.8286666870117188, 0.8026666641235352, 0.846666693687439, 0.8393333554267883, 0.8286666870117188, 0.8373333215713501, 0.8613333106040955, 0.8643333315849304, 0.8636666536331177, 0.8286666870117188, 0.8423333168029785, 0.8496666550636292, 0.7910000085830688]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 1, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.subtract(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2982876559038203, 2.056241519289592, 1.4587536919401967, 1.2522795489671728, 1.0208184051948248, 0.8814630532434761, 0.8852119328732881, 0.7586771363453733, 0.687206382867037, 0.663389910701842, 0.6493209257196394, 0.6194901525966401, 0.6314199496773586, 0.5603468343251417, 0.6011216251636934, 0.5496461616373648, 0.5400834873509587, 0.5348725200974789, 0.5301329245766975, 0.4886712147071298, 0.508586048788603, 0.4985582324783359, 0.46704470959353395, 0.468600617234796, 0.5046804137178589, 0.4748640257558645, 0.43230649700584883, 0.4358199419929304, 0.42414569286716897, 0.46799698933366585, 0.41845253705899665], "accuracy": [0.29520538449287415, 0.34803855419158936, 0.49148064851760864, 0.5501254796981812, 0.6147140264511108, 0.6795667409896851, 0.6713775992393494, 0.7073041796684265, 0.7253995537757874, 0.7429665923118591, 0.7425703406333923, 0.7559106945991516, 0.7581561207771301, 0.7857614755630493, 0.7675340175628662, 0.7927618622779846, 0.7993659973144531, 0.7977809906005859, 0.8010830879211426, 0.8186501264572144, 0.8042530417442322, 0.8120459914207458, 0.8259146809577942, 0.822348415851593, 0.8088759779930115, 0.8190463781356812, 0.8359529972076416, 0.8363492488861084, 0.8400475382804871, 0.8252542614936829, 0.8412362933158875], "val_loss": [1.9181481088910783, 1.5044470514569963, 1.1600187505994524, 0.8071751424244472, 0.7342478547777448, 0.828627211706979, 0.6711063214710781, 0.5214043004172189, 0.5460164376667568, 0.517028978892735, 0.46342853137425016, 0.4710932799748012, 0.4523817300796509, 0.46699821949005127, 0.4210495948791504, 0.46562647819519043, 0.3924874152456011, 0.4498530115400042, 0.3885257499558585, 0.3919051970754351, 0.4088607941355024, 0.3883666055543082, 0.37007021052496775, 0.466201867376055, 0.37450150081089567, 0.34290413345609394, 0.3486124447413853, 0.35087549686431885, 0.38899342502866474, 0.35293941838400705, 0.3862373488289969], "val_accuracy": [0.3226666748523712, 0.5203333497047424, 0.5506666898727417, 0.6726666688919067, 0.6893333196640015, 0.6700000166893005, 0.7166666388511658, 0.7556666731834412, 0.7356666922569275, 0.7630000114440918, 0.7863333225250244, 0.7976666688919067, 0.7979999780654907, 0.7903333306312561, 0.8113333582878113, 0.7803333401679993, 0.8353333473205566, 0.7929999828338623, 0.831333339214325, 0.8309999704360962, 0.8069999814033508, 0.8483333587646484, 0.8493333458900452, 0.7446666955947876, 0.8450000286102295, 0.8576666712760925, 0.8523333072662354, 0.847000002861023, 0.8199999928474426, 0.8516666889190674, 0.8336666822433472]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 2, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.square(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.298244662320121, 2.0501235785060445, 1.7249394824806852, 1.2657332439716105, 1.1633355017540368, 0.9221388972855799, 0.839085516920494, 0.84453894935815, 0.6967625625066438, 0.6474604543488905, 0.6408372333320282, 0.5998059860892567, 0.5967790281153815, 0.5639066034304294, 0.5899314029404767, 0.524316761700264, 0.5493430220896558, 0.5297992110346853, 0.5434008274237714, 0.49630802349013864, 0.4878985360865076, 0.5043072824653869, 0.47699725283072403, 0.4793897638341707, 0.4822802919170655, 0.46425438962907306, 0.4420112807989089, 0.4469091504784686, 0.4368257348319527, 0.46639748103646017, 0.4158991598780633, 0.41411405899001624, 0.4271382938215777, 0.38101510003478756, 0.38613351754398395, 0.37531673165439, 0.3818699923118722, 0.40417879911193977], "accuracy": [0.2953374683856964, 0.35385021567344666, 0.43349623680114746, 0.5457667708396912, 0.5766741633415222, 0.6617355942726135, 0.6919825673103333, 0.6848500967025757, 0.7310791015625, 0.7534011602401733, 0.7515519857406616, 0.7717606425285339, 0.7696473598480225, 0.7814027070999146, 0.7683265209197998, 0.7981772422790527, 0.7885351777076721, 0.7992339134216309, 0.7972526550292969, 0.8150838613510132, 0.8185180425643921, 0.8070268034934998, 0.8165367841720581, 0.8123101592063904, 0.8132346868515015, 0.8228767514228821, 0.833179235458374, 0.833179235458374, 0.8374059200286865, 0.8255184292793274, 0.8421608805656433, 0.8412362933158875, 0.8360850811004639, 0.856689989566803, 0.8543124794960022, 0.8562937378883362, 0.8539162874221802, 0.8448025584220886], "val_loss": [1.9184142521449499, 1.3938956941877092, 1.3130042212350028, 1.0622024876730782, 0.683551413672311, 0.6698822464261737, 0.6590463263647897, 0.5079625163759504, 0.4837460858481271, 0.47812325613839285, 0.4712870291301182, 0.4729669264384678, 0.46576241084507536, 0.4852597032274519, 0.41104118313108173, 0.42152732610702515, 0.3983439973422459, 0.47491257531302317, 0.4036895717893328, 0.3743141123226711, 0.4215443560055324, 0.3976987770625523, 0.35304224491119385, 0.4222378560474941, 0.36234149762562345, 0.34405882017953054, 0.39949252775737215, 0.3531575543539865, 0.3676167130470276, 0.3421676329204014, 0.38388106652668547, 0.36105465037482126, 0.32655892201832365, 0.38576184851782663, 0.3392624429294041, 0.3332341568810599, 0.3334483674594334, 0.36551566634859356], "val_accuracy": [0.3230000138282776, 0.5196666717529297, 0.44699999690055847, 0.48533332347869873, 0.6869999766349792, 0.7139999866485596, 0.7076666951179504, 0.7773333191871643, 0.7746666669845581, 0.7863333225250244, 0.8006666898727417, 0.7870000004768372, 0.7839999794960022, 0.7749999761581421, 0.8243333101272583, 0.79666668176651, 0.8323333263397217, 0.7870000004768372, 0.8233333230018616, 0.8526666760444641, 0.8016666769981384, 0.8233333230018616, 0.859000027179718, 0.7796666622161865, 0.8486666679382324, 0.8579999804496765, 0.8286666870117188, 0.8600000143051147, 0.8396666646003723, 0.859000027179718, 0.8253333568572998, 0.8403333425521851, 0.8633333444595337, 0.8216666579246521, 0.8579999804496765, 0.8560000061988831, 0.8600000143051147, 0.8339999914169312]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 0, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2982795644256777, 2.0540580959556882, 1.6753465271487353, 1.3490804799590932, 0.9605298584021786, 0.8791600884683947, 0.7952167620638091, 0.7349818443830034, 0.659886084196826, 0.6552662385248504, 0.6587515975017872, 0.6300394394614709, 0.5903696789638856, 0.5654559591505837, 0.5628475946379281, 0.5243871792621458, 0.5233929141550929, 0.5115984848083805, 0.5254458494394872, 0.4990293907097318, 0.4939282328036042, 0.4955826780153949, 0.45353075282889554, 0.4583988772202571, 0.4630947220224699, 0.46311299384167764, 0.42776986082326685, 0.4406149790917153, 0.4245661664412179, 0.44468188811727816, 0.41320821062259827], "accuracy": [0.2953374683856964, 0.3505481481552124, 0.4266279339790344, 0.5274072289466858, 0.6358473300933838, 0.6753401160240173, 0.6995112895965576, 0.7223616242408752, 0.7458723783493042, 0.7428345084190369, 0.7536653280258179, 0.759080708026886, 0.7757231593132019, 0.7790252566337585, 0.7812706232070923, 0.802271842956543, 0.8010830879211426, 0.8057059645652771, 0.8030643463134766, 0.8061022162437439, 0.813498854637146, 0.8158763647079468, 0.8280280232429504, 0.8231409192085266, 0.8178576231002808, 0.8252542614936829, 0.8348963260650635, 0.8333113193511963, 0.842028796672821, 0.8314621448516846, 0.8417646288871765], "val_loss": [1.9184239251273019, 1.4404428345816476, 1.0824269907815116, 0.782950758934021, 0.7151303461619786, 0.5805936881474086, 0.5992059877940586, 0.4975088834762573, 0.47777906485966276, 0.5080608470099313, 0.5267997469220843, 0.4311528376170567, 0.4696260520390102, 0.4853545767920358, 0.45408538409641813, 0.4436425822121756, 0.3806795222418649, 0.4931606224605015, 0.43974387645721436, 0.38092440366744995, 0.4240668160574777, 0.3714541367122105, 0.3632358823503767, 0.40524217912128996, 0.3795165078980582, 0.33164656162261963, 0.38495578936168123, 0.3630420906203134, 0.3731622099876404, 0.3369480626923697, 0.42017145667757305], "val_accuracy": [0.3233333230018616, 0.5216666460037231, 0.5490000247955322, 0.6603333353996277, 0.690666675567627, 0.7296666502952576, 0.7543333172798157, 0.7749999761581421, 0.7673333287239075, 0.7303333282470703, 0.7663333415985107, 0.8029999732971191, 0.7820000052452087, 0.7689999938011169, 0.7929999828338623, 0.8096666932106018, 0.8363333344459534, 0.7763333320617676, 0.7973333597183228, 0.8396666646003723, 0.8056666851043701, 0.8539999723434448, 0.8553333282470703, 0.8050000071525574, 0.8339999914169312, 0.8673333525657654, 0.8326666951179504, 0.8516666889190674, 0.8326666951179504, 0.8573333621025085, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [0, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [4, 5, 3, 2, 8, 2, 0, 2, 2, 6, 7, 0, 8, 6, 2], [1, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 1, 0, 0, 9, 0, 8], [0, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.8011428713798523, "mapping_values": [1, 2, 2, 1, 1, 0, 26, 26, 15, 11, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, alpha)), grad)), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))))))), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [2.298284134860398, 2.0469732401692524, 1.7850756636700058, 1.2533413449204152, 1.0719017310543082, 0.8244630218717353, 0.8298770895235417, 0.7455198090263189, 0.6769830467064525, 0.6623881291388961, 0.6514995979941548, 0.6263874578296453, 0.5962497712268081, 0.5822362518345187, 0.5541513803187551, 0.5304832906613434, 0.5483016776465437, 0.534344371937175, 0.5693459283674177, 0.5004790851531673], "accuracy": [0.2954695522785187, 0.35820895433425903, 0.3941355049610138, 0.5531634092330933, 0.6069211363792419, 0.6960771083831787, 0.6917183995246887, 0.7170783281326294, 0.7416457533836365, 0.7446836829185486, 0.7494386434555054, 0.76542067527771, 0.7763835787773132, 0.7750627398490906, 0.7865539789199829, 0.7960638999938965, 0.7877426743507385, 0.7940827012062073, 0.7884030938148499, 0.8034605979919434], "val_loss": [1.9175951140267509, 1.3900644779205322, 0.992967026574271, 0.7113051414489746, 0.6891965525490897, 0.6084667955126081, 0.6675853048052106, 0.49726137093135286, 0.4774618319102696, 0.5376188244138446, 0.5071673393249512, 0.4375836082867214, 0.4897746188299997, 0.4371214083262852, 0.4004092131342207, 0.41492644378117155, 0.41034406423568726, 0.5523392132350377, 0.4056068999426706, 0.4131492291178022], "val_accuracy": [0.3113333284854889, 0.531333327293396, 0.5803333520889282, 0.668666660785675, 0.7383333444595337, 0.7336666584014893, 0.7170000076293945, 0.7743333578109741, 0.7850000262260437, 0.734666645526886, 0.7746666669845581, 0.8133333325386047, 0.7770000100135803, 0.8059999942779541, 0.8240000009536743, 0.8090000152587891, 0.8193333148956299, 0.7746666669845581, 0.8183333277702332, 0.8116666674613953]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 4, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 0, 2, 4, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 4, 3, 4], [52, 41, 54, 66, 71, 44, 87], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [94, 63, 6, 12]], "fitness": -0.33314284682273865, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.9283694302353953, 2.308026169521335, 2.200031850095816, 2.214668652715621, 2.2472605676604394, 2.229115088869946, 2.396837523710679, 2.304161380420917, 2.303937148046437, 2.3027246918235518, 2.3005754621415293], "accuracy": [0.2102760523557663, 0.12455421686172485, 0.17817988991737366, 0.1776515692472458, 0.16457535326480865, 0.17170783877372742, 0.12336547672748566, 0.10474177449941635, 0.09945846349000931, 0.10196803510189056, 0.12072381377220154], "val_loss": [1.9950335366385323, 1.924766676766532, 1.9749750409807478, 1.9619931493486678, 1.9727556364876884, 2.3690384456089566, 1.9747644833156042, 1.973884173801967, 1.9734246390206474, 1.9725822721208846, 1.9691756112234933], "val_accuracy": [0.10300000011920929, 0.15199999511241913, 0.1003333330154419, 0.12966667115688324, 0.10066666454076767, 0.3373333215713501, 0.09666666388511658, 0.11599999666213989, 0.10100000351667404, 0.14166666567325592, 0.17233332991600037]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 3, 3, 2, 2, 3, 4, 2, 3, 1, 3, 3, 1, 1, 2, 2, 2, 2, 0, 3, 5, 4, 2, 3, 2, 3, 5, 4, 2, 0, 5, 1, 5, 4, 4, 4, 5], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 3, 3, 0, 2], [94, 63, 6, 12]], "fitness": -0.16828571259975433, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.936788916477611, 2.4497035248499066, 2.3888562685777925, 2.288001793471026, 2.579213217280686, 2.304556211381619, 2.30177284959222, 2.2478131120545974, 2.2005482653679707], "accuracy": [0.2145027071237564, 0.14212125539779663, 0.10408136248588562, 0.1328754425048828, 0.17659489810466766, 0.10051512718200684, 0.107647605240345, 0.148064985871315, 0.21595561504364014], "val_loss": [2.0123053959437778, 2.2797765050615584, 1.9720888137817383, 1.8344700677054269, 1.9758954729352678, 1.974024840763637, 1.9692411422729492, 1.9640566962105888, 1.9520882197788783], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.17033334076404572, 0.19833333790302277, 0.10366666316986084, 0.11533333361148834, 0.10599999874830246, 0.12866666913032532, 0.15933333337306976]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 4, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 5, 1, 3, 2, 0, 2, 4, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 4, 3, 4], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 2, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10114285349845886, "mapping_values": [1, 5, 5, 2, 3, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300987829605917, 2.3032024803887174, 2.302586116055141, 2.3027155490646494, 2.3024553209011818, 2.300940032333447, 2.300500817885252, 2.299992625015192, 2.3009301789479877, 2.300969886773487, 2.3008250555011496, 2.3003474117317344, 2.3000918828485317, 2.3009460696360344, 2.300708371351235, 2.301202039928988, 2.30107735718372, 2.3009231911201864, 2.3011687276795114], "accuracy": [0.09166556596755981, 0.08809932321310043, 0.08942015469074249, 0.09259014576673508, 0.08625016361474991, 0.09219389408826828, 0.09470347315073013, 0.10381719470024109, 0.09734513610601425, 0.09126931428909302, 0.0948355570435524, 0.09721305221319199, 0.09642054885625839, 0.09668471664190292, 0.09826971590518951, 0.09602430462837219, 0.09866596013307571, 0.09655263274908066, 0.09919429570436478], "val_loss": [1.9702447482517786, 1.9701434544154577, 1.9700607572283064, 1.9700044223240443, 1.969975403376988, 1.9699855531964983, 1.970026969909668, 1.9700977461678642, 1.9701920236860002, 1.9703136852809362, 1.9704635483878, 1.970635073525565, 1.9708121163504464, 1.9710030555725098, 1.9712034634181432, 1.9713976723807198, 1.9715899739946638, 1.971764360155378, 1.971925939832415], "val_accuracy": [0.04066666588187218, 0.04399999976158142, 0.04933333396911621, 0.0533333346247673, 0.061666667461395264, 0.06833333522081375, 0.07266666740179062, 0.07500000298023224, 0.08266666531562805, 0.08799999952316284, 0.09533333033323288, 0.1003333330154419, 0.10333333164453506, 0.10533333569765091, 0.10366666316986084, 0.10233332961797714, 0.10133333504199982, 0.10333333164453506, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 1, 5, 2, 0, 2, 2, 6, 7], [1, 3, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 41, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300987829605917, 2.3032024803887174, 2.302586116055141, 2.3027155490646494, 2.3024553209011818, 2.300940032333447, 2.300500817885252, 2.299992625015192, 2.3009301789479877, 2.300969886773487, 2.3008250555011496, 2.3003474117317344, 2.3000918828485317, 2.3009460696360344, 2.300708371351235, 2.301202039928988, 2.30107735718372, 2.3009231911201864, 2.3011687276795114], "accuracy": [0.09166556596755981, 0.08809932321310043, 0.08942015469074249, 0.09259014576673508, 0.08625016361474991, 0.09219389408826828, 0.09470347315073013, 0.10381719470024109, 0.09734513610601425, 0.09126931428909302, 0.0948355570435524, 0.09721305221319199, 0.09642054885625839, 0.09668471664190292, 0.09826971590518951, 0.09602430462837219, 0.09866596013307571, 0.09655263274908066, 0.09919429570436478], "val_loss": [1.9702447482517786, 1.9701434544154577, 1.9700607572283064, 1.9700044223240443, 1.969975403376988, 1.9699855531964983, 1.970026969909668, 1.9700977461678642, 1.9701920236860002, 1.9703136852809362, 1.9704635483878, 1.970635073525565, 1.9708121163504464, 1.9710030555725098, 1.9712034634181432, 1.9713976723807198, 1.9715899739946638, 1.971764360155378, 1.971925939832415], "val_accuracy": [0.04066666588187218, 0.04399999976158142, 0.04933333396911621, 0.0533333346247673, 0.061666667461395264, 0.06833333522081375, 0.07266666740179062, 0.07500000298023224, 0.08266666531562805, 0.08799999952316284, 0.09533333033323288, 0.1003333330154419, 0.10333333164453506, 0.10533333569765091, 0.10366666316986084, 0.10233332961797714, 0.10133333504199982, 0.10333333164453506, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 3, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 4, 4, 1, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 6, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 2, 1, 2, 5, 6, 0, 2, 2, 6, 0, 0, 2, 6, 4, 2, 1, 2, 7, 2, 0, 3, 7, 7, 9, 0, 7, 8, 3, 5, 5, 3, 5, 6, 2, 2, 6, 5, 0, 8, 1, 5, 8, 2, 8, 1, 2, 2, 0, 7, 6, 8, 0, 5, 5, 8, 0, 4, 3, 5, 0, 2, 4, 2, 0, 3, 5, 4, 5, 8], [2, 4, 4, 3, 2, 2, 3, 4, 2, 3, 1, 3, 3, 1, 1, 2, 2, 2, 2, 0, 3, 5, 4, 2, 3, 2, 3, 5, 4, 2, 0, 5, 1, 5, 4, 4, 4, 5], [52, 41, 54, 66, 71, 44, 87], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [94, 63, 6, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1], [8, 4, 1, 2, 5, 4, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 0, 2, 4, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 4, 3, 4], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [94, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.pow(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [3, 2, 1, 2, 4, 6, 0, 2, 2, 6, 0, 0, 2, 6, 4, 3, 1, 2, 7, 2, 0, 3, 7, 7, 2, 0, 7, 8, 3, 5, 5, 3, 5, 6, 2, 2, 6, 5, 0, 8, 1, 1, 8, 2, 8, 1, 2, 2, 0, 7, 5, 9, 0, 5, 5, 8, 0, 4, 3, 2, 0, 2, 4, 6, 0, 3, 5, 4, 5, 8], [2, 5, 1, 3, 2, 0, 2, 2, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 2, 2, 2, 4, 4, 3, 4], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [94, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 1, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), beta)), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [3, 5, 1, 1, 5, 2, 0, 2, 2, 6, 7], [2, 1, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, beta)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3019305704260673, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 1, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3023320136840524, 2.3029194935957484, 2.302976383115511, 2.302975739218445, 2.303016781539272, 2.3030558056945356, 2.302990491064926], "accuracy": [0.09813763201236725, 0.09259014576673508, 0.09589222073554993, 0.09457138925790787, 0.0886276587843895, 0.08928807079792023, 0.09087307006120682], "val_loss": [1.9735072680882044, 1.9736060414995467, 1.9736864907400948, 1.9737350600106376, 1.9737298829214913, 1.9737251826695033, 1.9737231390816825], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.10366666316986084, 0.09733333438634872, 0.09733333438634872, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [4, 2, 1, 2, 5, 6, 0, 2, 2, 6, 4, 0, 2, 6, 4, 2, 1, 2, 7, 1, 0, 3, 7, 7, 9, 0, 7, 8, 3, 5, 5, 3, 5, 6, 2, 2, 6, 5, 0, 8, 1, 5, 8, 2, 8, 6, 2, 2, 0, 7, 6, 8, 0, 6, 5, 8, 0, 4, 3, 5, 0, 2, 4, 2, 0, 3, 5, 4, 5, 8], [2, 3, 1, 3, 2, 3, 3, 0, 2, 4, 1, 3, 3, 2, 2, 1, 1, 1, 5, 3, 3, 3, 0, 0, 5, 2, 3, 4, 5, 0, 5, 2, 0, 3, 3, 2, 3, 1], [52, 41, 54, 66, 71, 44, 87], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 3, 3, 0, 2], [94, 63, 6, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 97, 97, 60, 37, 6, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 70, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, alpha)))))), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.square(tf.math.add(beta, alpha))))))), tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.add(beta, beta)))))))))))), tf.math.add(beta, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(grad, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3019305704260673, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [3, 0, 1, 2, 5, 2, 4, 2, 2, 6, 7, 9, 2, 8, 1, 3, 5], [2, 5, 1, 3, 2, 0, 2, 4, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 4, 3, 4], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 7, 8, 1, 7, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [94, 63, 57, 12]], "fitness": -0.07657142728567123, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 2, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, alpha)))))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [3.1515276585801027e+24, 3.6668382251650445e+24, 3.6114603858657314e+24, 3.6733499094528273e+24, 3.685565679508888e+24, 3.5498252448301353e+24], "accuracy": [0.10447761416435242, 0.109232597053051, 0.10077928751707077, 0.10249637067317963, 0.10170386731624603, 0.10632677376270294], "val_loss": [2.2423685863714199e+24, 2.2423685863714199e+24, 2.2423685863714199e+24, 2.2423685863714199e+24, 2.2423685863714199e+24, 2.2423685863714199e+24], "val_accuracy": [0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [4, 4, 1, 1, 5, 2, 0, 2, 2, 6, 7, 7, 6, 1, 3, 8, 2, 2, 2, 0, 4, 9, 2, 3, 8, 1, 8, 6, 8, 8, 7, 9, 6, 5], [2, 5, 1, 3, 2, 0, 2, 4, 2, 4, 1, 3, 3, 3, 0, 3, 4, 2, 5, 3, 1, 4, 2, 2, 2, 1, 0, 2, 4, 1, 2, 3, 4, 1, 2, 3, 4, 4, 3, 4], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [7, 7], [71], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 9, 0, 7, 8, 1, 7, 0, 9, 0, 8], [1, 2, 0, 0, 3, 0, 2], [94, 63, 57, 12]], "fitness": -0.07657142728567123, "mapping_values": [1, 1, 1, 0, 1, 0, 56, 56, 34, 22, 4, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.subtract(grad, tf.math.square(alpha)))), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))))))))))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(alpha), grad))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [3.1515762112553615e+24, 3.666902841915466e+24, 3.6115107062219865e+24, 3.6734079539339334e+24, 3.685631809859005e+24, 3.54987246858481e+24], "accuracy": [0.10447761416435242, 0.109232597053051, 0.10077928751707077, 0.10249637067317963, 0.10170386731624603, 0.10632677376270294], "val_loss": [2.2424650200201265e+24, 2.2424650200201265e+24, 2.2424650200201265e+24, 2.2424650200201265e+24, 2.2424650200201265e+24, 2.2424650200201265e+24], "val_accuracy": [0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104, 0.06199999898672104]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 3, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [49, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3010979478133433, 2.30376753645204, 2.3035290156215678, 2.3037795783380366, 2.303933934544402, 2.302078446502998], "accuracy": [0.09206181764602661, 0.08875974267721176, 0.08809932321310043, 0.09192973375320435, 0.08440100401639938, 0.09100515395402908], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]