[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 1, 2, 6, 1, 1, 5, 3, 8, 0, 5, 0, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [67, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8402857184410095, "mapping_values": [1, 24, 24, 14, 10, 3, 3, 3, 2, 1, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9032812865497477, 1.1612089076345748, 0.8028214363185185, 0.6768472699079184, 0.6183696875262333, 0.5685969695690962, 0.5223109932064522, 0.49783032543670863, 0.46815580153241687, 0.45744345989902463, 0.431056604334518, 0.4138408589514255, 0.3992520412748768, 0.39249470199355835, 0.3771424168341227, 0.35955776003578227, 0.33847629703928717, 0.3329220425380361, 0.3324786763755857, 0.31467266000335903, 0.3157307498640215, 0.3019301408530069, 0.3012847696879851, 0.28081351637509616, 0.2758483512428191, 0.27121907374594645], "accuracy": [0.34341567754745483, 0.6017699241638184, 0.6906617283821106, 0.7334566116333008, 0.7581561207771301, 0.7824593782424927, 0.8006868362426758, 0.8146876096725464, 0.8222163319587708, 0.8271034359931946, 0.833179235458374, 0.8462554216384888, 0.8492933511734009, 0.8482366800308228, 0.860652506351471, 0.8632941246032715, 0.8713511824607849, 0.8750495314598083, 0.8750495314598083, 0.8804649114608765, 0.8817857503890991, 0.8819178342819214, 0.8862766027450562, 0.8882578015327454, 0.8932769894599915, 0.8936732411384583], "val_loss": [1.100595133645194, 0.6487125669206891, 0.5506843669073922, 0.4799863610948835, 0.4421209267207554, 0.4118947216442653, 0.39400677170072285, 0.3663215637207031, 0.35446865218026297, 0.3447586383138384, 0.34101788486753193, 0.32702694620404926, 0.3147119879722595, 0.3144889644214085, 0.3131573966571263, 0.300057658127376, 0.2947866746357509, 0.29871385438101633, 0.3092908688953945, 0.2956180146762303, 0.29542750120162964, 0.29449323245457243, 0.3114805051258632, 0.29491560799734934, 0.30084160396030973, 0.2965657796178545], "val_accuracy": [0.5463333129882812, 0.7039999961853027, 0.7260000109672546, 0.79666668176651, 0.7996666431427002, 0.8206666707992554, 0.8293333053588867, 0.8473333120346069, 0.8553333282470703, 0.8610000014305115, 0.862333357334137, 0.8723333477973938, 0.8723333477973938, 0.8690000176429749, 0.8703333139419556, 0.875, 0.8759999871253967, 0.878333330154419, 0.8706666827201843, 0.8803333044052124, 0.8840000033378601, 0.8826666474342346, 0.8679999709129333, 0.8840000033378601, 0.8759999871253967, 0.8830000162124634]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 1, 2, 6, 1, 1, 5, 3, 8, 0, 5, 0, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 1, 2, 1, 2, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [67, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.833142876625061, "mapping_values": [1, 21, 21, 11, 10, 2, 3, 3, 2, 1, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9032786225031837, 1.161238853910328, 0.8026382208358595, 0.6764352083001485, 0.6186231933391452, 0.5686971632055934, 0.5204353910931003, 0.49646706137722035, 0.4686647146574148, 0.46012418245075715, 0.43171065897359634, 0.41500860090898783, 0.40221364230307227, 0.3957876247335277, 0.37525226497584013, 0.3602036213429219, 0.34255006300412655, 0.337554171222816, 0.3302899683471275, 0.3187711734608605, 0.31928365663325764, 0.3026366208121131, 0.3018325524614503, 0.2774062176398503, 0.27543336592133427, 0.2715149768638636, 0.26620743371838546, 0.2672424678356262, 0.24579287167348723], "accuracy": [0.34341567754745483, 0.6017699241638184, 0.6901333928108215, 0.7338528633117676, 0.7589486241340637, 0.7825914621353149, 0.8000264167785645, 0.8145555257797241, 0.8227446675300598, 0.8271034359931946, 0.8368775844573975, 0.8479725122451782, 0.8485008478164673, 0.8487650156021118, 0.8603883385658264, 0.8622375130653381, 0.8717474341392517, 0.8751816153526306, 0.8778232932090759, 0.8766345381736755, 0.8778232932090759, 0.8835028409957886, 0.8878615498542786, 0.8916919827461243, 0.8931449055671692, 0.8948619961738586, 0.8961827754974365, 0.8957865834236145, 0.9031832218170166], "val_loss": [1.100536584854126, 0.6481013127735683, 0.5517098563058036, 0.4792156219482422, 0.4423080938202994, 0.41076567343303133, 0.391086791242872, 0.3675957407270159, 0.3534264990261623, 0.34640183619090487, 0.3399742160524641, 0.327872633934021, 0.3127217633383615, 0.31342993463788715, 0.312879707132067, 0.29911352906908306, 0.29391783475875854, 0.2931597828865051, 0.3038565346172878, 0.29458217109952656, 0.2943470222609384, 0.2985230343682425, 0.2959910205432347, 0.2868878245353699, 0.2991575939314706, 0.2880777546337673, 0.2919984119279044, 0.2824771659714835, 0.2897939852305821], "val_accuracy": [0.5463333129882812, 0.7036666870117188, 0.7273333072662354, 0.7960000038146973, 0.8016666769981384, 0.8206666707992554, 0.8339999914169312, 0.8476666808128357, 0.8546666502952576, 0.8573333621025085, 0.8573333621025085, 0.8683333396911621, 0.875333309173584, 0.8709999918937683, 0.871666669845581, 0.8763333559036255, 0.8786666393280029, 0.8816666603088379, 0.8743333220481873, 0.8826666474342346, 0.878000020980835, 0.8790000081062317, 0.8700000047683716, 0.8880000114440918, 0.8776666522026062, 0.8863333463668823, 0.8846666812896729, 0.8843333125114441, 0.8870000243186951]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 9, 1, 8, 0, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [3, 2, 2, 1, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 5, 9, 3, 9, 4, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9033507647972223, 1.1598259335212295, 0.8032527106580734, 0.6768476003275382, 0.6199968198759366, 0.5692319458092461, 0.5217494923739999, 0.49878480583685203, 0.46911411362710864, 0.4614646436476578, 0.4303407672295213, 0.4127460906904261, 0.40307666281226634, 0.3982478613276224, 0.3797332521135844, 0.3600137897643746, 0.33977221678969505, 0.3427710187173775], "accuracy": [0.3435477614402771, 0.602562427520752, 0.6902654767036438, 0.7351737022399902, 0.7580240368843079, 0.7814027070999146, 0.800818920135498, 0.8120459914207458, 0.8230088353157043, 0.8252542614936829, 0.8338396549224854, 0.8467837572097778, 0.8491612672805786, 0.8477083444595337, 0.8593316674232483, 0.8638224601745605, 0.8716153502464294, 0.870030403137207], "val_loss": [1.098633050918579, 0.6487658194133213, 0.5519805635724749, 0.4800065415246146, 0.44404070717947824, 0.4110048583575657, 0.3924744895526341, 0.3688529985291617, 0.3553591115134103, 0.34920448064804077, 0.3342888184956142, 0.32737571001052856, 0.31091924224581036, 0.3173126152583531, 0.31331080198287964, 0.3003030504499163, 0.2992632644517081, 0.3029288649559021], "val_accuracy": [0.5463333129882812, 0.7043333053588867, 0.7260000109672546, 0.7950000166893005, 0.7993333339691162, 0.8209999799728394, 0.8293333053588867, 0.8479999899864197, 0.8573333621025085, 0.8539999723434448, 0.8643333315849304, 0.8709999918937683, 0.8773333430290222, 0.8673333525657654, 0.8693333268165588, 0.8766666650772095, 0.8763333559036255, 0.8743333220481873]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 8, 2, 1, 2, 6, 3, 3, 5, 2, 3, 0, 5, 9, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 1, 2, 0, 2, 1, 1, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [67, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 3, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8302857279777527, "mapping_values": [1, 23, 23, 13, 10, 2, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.subtract(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.903307321537377, 1.161148063101395, 0.8025180058566854, 0.6752577774859438, 0.6202071190683393, 0.5690134421961262, 0.5217148499867668, 0.49805487202080156, 0.4674511962893648, 0.4597853160513831, 0.43291187203319365, 0.4122681717563378, 0.3969948032331851, 0.39330346434186586, 0.37835100755290335, 0.36013876623827723, 0.3416931902995404, 0.33198934717106543, 0.327550084906452, 0.3156655711339465, 0.3125089379569968, 0.3042139993871538, 0.30235282801807106, 0.2815553824135719, 0.275229064746461, 0.273222781049577, 0.2642361356924396, 0.2653436592470433, 0.24634738331221476, 0.24463494496181137, 0.24246799977322328, 0.24099098137892186, 0.22424129216489286, 0.21650080955960668, 0.22226066196937885, 0.22031049856876952, 0.20802387197208821, 0.2068552901074556, 0.19176434797460315, 0.18671055314854515, 0.18409241151382988, 0.17304058008859374, 0.17574045457277537, 0.16242255344681847, 0.1789346958400236, 0.1734917475058969, 0.15570569162583858, 0.1560396538013323, 0.16049922046376697, 0.16092529534317357, 0.15506353550984828, 0.14215647661572575], "accuracy": [0.34341567754745483, 0.6016378402709961, 0.6905296444892883, 0.7347774505615234, 0.7586844563484192, 0.7841764688491821, 0.800290584564209, 0.8129705190658569, 0.826310932636261, 0.8259146809577942, 0.8362171649932861, 0.8461233377456665, 0.8516708612442017, 0.8518029451370239, 0.8609166741371155, 0.8614450097084045, 0.867520809173584, 0.8746532797813416, 0.8757099509239197, 0.8804649114608765, 0.8813894987106323, 0.882710337638855, 0.8874653577804565, 0.8908994793891907, 0.8905032277107239, 0.8936732411384583, 0.8986923694610596, 0.896446943283081, 0.901862382888794, 0.9074098467826843, 0.9050323367118835, 0.9064852595329285, 0.9120327830314636, 0.9179764986038208, 0.9121648669242859, 0.9142781496047974, 0.9206181764602661, 0.9210143685340881, 0.9257693886756897, 0.9252410531044006, 0.9290714859962463, 0.935279369354248, 0.9306564331054688, 0.9371285438537598, 0.9350152015686035, 0.9332981109619141, 0.9379209876060486, 0.9393739104270935, 0.9388455748558044, 0.937260627746582, 0.9397701621055603, 0.9461101293563843], "val_loss": [1.1009454386574882, 0.6481621265411377, 0.5501655340194702, 0.48153672899518696, 0.44167340653283255, 0.41034592049462454, 0.3921124424253191, 0.36883279255458284, 0.35292597327913555, 0.34888475281851633, 0.3377244302204677, 0.3203971896852766, 0.3086403948920114, 0.31360126393181936, 0.3113271083150591, 0.3000983510698591, 0.2945064050810678, 0.3005953942026411, 0.3116676041058132, 0.2958422984395708, 0.2962435483932495, 0.2936701093401228, 0.307978664125715, 0.2872940983091082, 0.29447631325040546, 0.28982941593442646, 0.2968054413795471, 0.2811519077845982, 0.28665112597601755, 0.30203743491853985, 0.2937109981264387, 0.2827123573848179, 0.291799749646868, 0.2862629805292402, 0.2879913789885385, 0.2958568334579468, 0.2924485887799944, 0.28512851681028095, 0.30150402443749563, 0.2834328668458121, 0.3012694461005075, 0.29232033661433626, 0.2933482016835894, 0.3012068612234933, 0.2854786089488438, 0.3048246758324759, 0.3005893996783665, 0.31030276843479704, 0.32240314143044607, 0.3219928486006601, 0.32093433822904316, 0.3226429224014282], "val_accuracy": [0.5456666946411133, 0.7036666870117188, 0.7256666421890259, 0.7956666946411133, 0.8016666769981384, 0.8203333616256714, 0.8286666870117188, 0.8463333249092102, 0.856333315372467, 0.8583333492279053, 0.8576666712760925, 0.8709999918937683, 0.8740000128746033, 0.8686666488647461, 0.8690000176429749, 0.8776666522026062, 0.875333309173584, 0.8786666393280029, 0.8666666746139526, 0.8793333172798157, 0.8763333559036255, 0.8843333125114441, 0.8693333268165588, 0.8859999775886536, 0.8803333044052124, 0.8846666812896729, 0.8849999904632568, 0.8826666474342346, 0.8880000114440918, 0.8853333592414856, 0.8830000162124634, 0.8849999904632568, 0.890999972820282, 0.8863333463668823, 0.8856666684150696, 0.8913333415985107, 0.8846666812896729, 0.8933333158493042, 0.8939999938011169, 0.8930000066757202, 0.8930000066757202, 0.8943333625793457, 0.8933333158493042, 0.8899999856948853, 0.8920000195503235, 0.8923333287239075, 0.8960000276565552, 0.8956666588783264, 0.8870000243186951, 0.8920000195503235, 0.8859999775886536, 0.8896666765213013]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 2, 2, 6, 1, 1, 5, 3, 8, 0, 2, 2, 8, 1, 5, 2, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 2, 2, 1, 2, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8282856941223145, "mapping_values": [1, 15, 15, 7, 8, 2, 3, 3, 2, 1, 1, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.90328173627313, 1.161328427126505, 0.8023125312630968, 0.6756390207605182, 0.6207834181926033, 0.5687603217231882, 0.5223117465742071, 0.4994012800859281, 0.46830854793313537, 0.46099252988003847, 0.4318576061439048, 0.4162902459925381, 0.40015046861209197, 0.39513483960803913, 0.37604165609014223, 0.35706538946448124, 0.34217731837488796, 0.32848465983122255, 0.3279536172005605, 0.31419080660374976, 0.3169746991508216, 0.30424004084618966, 0.2999998300051283, 0.2792410059470259, 0.27378358105902406, 0.2713462549461397, 0.25833362982950475, 0.2631279535856324, 0.24679400374380478, 0.2484709588118737, 0.24066812773863117, 0.23510661809404435, 0.21812140163004184, 0.21693563516019373], "accuracy": [0.34341567754745483, 0.6019020080566406, 0.6900013089179993, 0.7347774505615234, 0.7582882046699524, 0.7835160493850708, 0.8004226684570312, 0.8108572363853455, 0.8244617581367493, 0.8256505131721497, 0.8364813327789307, 0.8473120927810669, 0.8515387773513794, 0.8499537706375122, 0.8644828796386719, 0.863558292388916, 0.8692378997802734, 0.8772949576377869, 0.878351628780365, 0.8811253309249878, 0.8799365758895874, 0.8833707571029663, 0.8877294659614563, 0.8930128216743469, 0.8928807377815247, 0.8986923694610596, 0.8993527889251709, 0.897899866104126, 0.9033153057098389, 0.9050323367118835, 0.9099194407463074, 0.9138818979263306, 0.9182406663894653, 0.9190331697463989], "val_loss": [1.1006384236471993, 0.6478771141597203, 0.5482899631772723, 0.48068487644195557, 0.4421539987836565, 0.41055325099400114, 0.3905290109770639, 0.36752995422908236, 0.3536450181688581, 0.34665967736925396, 0.34616200413022724, 0.3282984324863979, 0.3145692093031747, 0.31515964439937044, 0.3103249413626535, 0.2984910181590489, 0.2906702586582729, 0.2998933621815273, 0.3062982644353594, 0.2948824337550572, 0.29252682413373676, 0.2920508895601545, 0.30612181765692575, 0.2886696032115391, 0.2962139504296439, 0.29462770904813496, 0.29943593059267315, 0.2866580741746085, 0.28730154037475586, 0.2929980158805847, 0.29214476687567575, 0.28823247126170565, 0.3044561573437282, 0.2953059673309326], "val_accuracy": [0.5463333129882812, 0.70333331823349, 0.7263333201408386, 0.7950000166893005, 0.8019999861717224, 0.8183333277702332, 0.8326666951179504, 0.8483333587646484, 0.8536666631698608, 0.8556666374206543, 0.8529999852180481, 0.8703333139419556, 0.8756666779518127, 0.8676666617393494, 0.8700000047683716, 0.878333330154419, 0.8799999952316284, 0.8776666522026062, 0.875, 0.8823333382606506, 0.8786666393280029, 0.8820000290870667, 0.8690000176429749, 0.8843333125114441, 0.8766666650772095, 0.8823333382606506, 0.8826666474342346, 0.8830000162124634, 0.890999972820282, 0.8853333592414856, 0.8846666812896729, 0.8853333592414856, 0.8886666893959045, 0.8893333077430725]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 3, 2, 6, 1, 1, 5, 3, 8, 3, 2, 0, 8, 1, 5, 2, 5, 9, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 1, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 5, 9, 3, 9, 4, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7945713996887207, "mapping_values": [1, 20, 20, 10, 10, 1, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.08113989493378, 1.3752564773142628, 1.0791382785517982, 0.9121647354964771, 0.8826826341620463, 0.7881916752423372, 0.7546938593125283, 0.7185799461613399, 0.7425831784236512, 0.7071439483303986, 0.6650863045069048, 0.6527973679724056, 0.6287030344468538, 0.6345778412082649, 0.6527810623664362, 0.6298697462974365, 0.62882168604603, 0.6128067454216645, 0.5938187205103395, 0.5785851610366616, 0.5756059996188356, 0.5623563316126289, 0.5608781770298809, 0.5508280714205968], "accuracy": [0.31145158410072327, 0.5279355645179749, 0.6102232336997986, 0.6734909415245056, 0.6738871932029724, 0.7080966830253601, 0.7194558382034302, 0.7301545143127441, 0.7243428826332092, 0.7334566116333008, 0.7532690763473511, 0.7535332441329956, 0.7618544697761536, 0.7622507214546204, 0.7510236501693726, 0.7580240368843079, 0.7670056819915771, 0.7741381525993347, 0.7777044177055359, 0.7844406366348267, 0.7820631265640259, 0.7943468689918518, 0.7895918488502502, 0.7950072884559631], "val_loss": [1.1483972072601318, 0.7559256383350917, 0.688997575214931, 0.6424177033560616, 0.6039489337376186, 0.5773298059191022, 0.5741362571716309, 0.5186823265893119, 0.5158295631408691, 0.4902406760624477, 0.47369205951690674, 0.4659044231687273, 0.4563914196831839, 0.4469576392854963, 0.444786650793893, 0.4674046209880284, 0.4329130394118173, 0.5014974389757428, 0.4279792904853821, 0.45003834792545866, 0.41649902718407766, 0.42095351219177246, 0.41685937132154194, 0.4093148112297058], "val_accuracy": [0.6203333139419556, 0.6899999976158142, 0.7146666646003723, 0.718666672706604, 0.7283333539962769, 0.7269999980926514, 0.7239999771118164, 0.7680000066757202, 0.7606666684150696, 0.7893333435058594, 0.7806666493415833, 0.7950000166893005, 0.8069999814033508, 0.8003333210945129, 0.8090000152587891, 0.7916666865348816, 0.8146666884422302, 0.7816666960716248, 0.8253333568572998, 0.7950000166893005, 0.8233333230018616, 0.8203333616256714, 0.8113333582878113, 0.8173333406448364]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 9, 1, 2, 2, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 1, 2, 0, 2, 1, 2, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 82, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 9, 3, 9, 4, 8], [4, 4, 3], [55, 66], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7908571362495422, "mapping_values": [1, 68, 68, 40, 28, 7, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(grad, alpha))))))))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, tf.math.square(grad))))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))))), grad)), alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.115988976888338, 1.4678625122997913, 1.192259374044008, 0.9229293547569721, 0.8908748365097262, 0.8292857560231591, 0.7912254870654317, 0.7535461284276312, 0.7359501986518717, 0.7087332679768438, 0.695338750402012, 0.6859918308059663, 0.6527674136585674, 0.6637283859550834, 0.6295015717683262, 0.6247485498033574, 0.6383118995302594, 0.6131479634569148, 0.6124080634309221, 0.6102824147587455, 0.5880962603552907], "accuracy": [0.29665830731391907, 0.5007264614105225, 0.5679566860198975, 0.6649055480957031, 0.6560559868812561, 0.6852463483810425, 0.700171709060669, 0.7129837274551392, 0.718399167060852, 0.7223616242408752, 0.7284374833106995, 0.7339849472045898, 0.7494386434555054, 0.743891179561615, 0.7633073329925537, 0.7606657147407532, 0.7514199018478394, 0.7681944370269775, 0.761590301990509, 0.7681944370269775, 0.7778365015983582], "val_loss": [1.2842675958360945, 1.028334719794137, 0.7563380002975464, 0.675191947392055, 0.613592267036438, 0.604303206716265, 0.5747639622007098, 0.5377358368464878, 0.5504603385925293, 0.5549251011439732, 0.4992334842681885, 0.5433848074504307, 0.47265454701014925, 0.4692495209830148, 0.4651041201182774, 0.45300122669764925, 0.5377787011010307, 0.46467394488198416, 0.49664151668548584, 0.5000380618231637, 0.461322546005249], "val_accuracy": [0.5243333578109741, 0.6213333606719971, 0.6753333210945129, 0.6813333630561829, 0.718999981880188, 0.7260000109672546, 0.7416666746139526, 0.7536666393280029, 0.7409999966621399, 0.7289999723434448, 0.7710000276565552, 0.746666669845581, 0.7913333177566528, 0.7956666946411133, 0.7993333339691162, 0.812666654586792, 0.778333306312561, 0.7886666655540466, 0.7863333225250244, 0.7633333206176758, 0.7820000052452087]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 0, 2, 4, 5, 6, 1, 1, 5, 3, 8, 0, 2, 0, 8, 1, 5, 2, 5, 9, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7902857065200806, "mapping_values": [1, 11, 11, 6, 5, 2, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1127102668211997, 1.4825803071059698, 1.2125417431032874, 1.0053457348826318, 0.8902742723432341, 0.8284252551977802, 0.8103763861678862, 0.7688622310523423, 0.7481322062171414, 0.7097449594201539, 0.7308063328447217, 0.6988400979411128, 0.6818068922313921, 0.6594897501771917, 0.6748699352269191, 0.6481706337953335, 0.6330648075556474, 0.6376746501889227, 0.6083492027250468, 0.6153900839822356, 0.6253866459069676, 0.5844262858675361], "accuracy": [0.30947035551071167, 0.49412229657173157, 0.5675604343414307, 0.6280544400215149, 0.6737551093101501, 0.6926429867744446, 0.6946242451667786, 0.713908314704895, 0.7246070504188538, 0.7292299270629883, 0.7257958054542542, 0.7364945411682129, 0.7411174178123474, 0.7504953145980835, 0.7437590956687927, 0.7556465268135071, 0.7626469135284424, 0.7578919529914856, 0.7711002230644226, 0.7666094303131104, 0.7601373791694641, 0.7779685854911804], "val_loss": [1.269392660685948, 1.020622662135533, 0.7727786983762469, 0.6818614176341465, 0.664889897618975, 0.6019944293158395, 0.6188559702464512, 0.5457391909190586, 0.5208240236554827, 0.5874140092304775, 0.5336738654545375, 0.48634096554347445, 0.48654130526951384, 0.490904654775347, 0.543261068207877, 0.4791201523372105, 0.45598466055733816, 0.4432100398199899, 0.4601831095559256, 0.43710713727133615, 0.44093142236982075, 0.43001762458256315], "val_accuracy": [0.5476666688919067, 0.5143333077430725, 0.6549999713897705, 0.6833333373069763, 0.6963333487510681, 0.7260000109672546, 0.706333339214325, 0.749666690826416, 0.7563333511352539, 0.7296666502952576, 0.7440000176429749, 0.7893333435058594, 0.7886666655540466, 0.765666663646698, 0.737333357334137, 0.7836666703224182, 0.8119999766349792, 0.8059999942779541, 0.7953333258628845, 0.8046666383743286, 0.79666668176651, 0.8103333115577698]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 4, 9, 4, 2, 2, 1, 1, 5, 3, 8, 2, 2, 6, 8, 4, 2, 2, 1, 5, 3, 9, 5, 3, 0, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 0, 2, 1, 2, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [15, 95, 54, 66], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [4, 2, 0, 3, 9, 4, 3, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.5631428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 12, 10, 7, 3, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30073021611108, 2.3007302496490256, 2.297304947110782, 2.2956335027188577, 2.2942060651780434, 2.291627256767294, 2.2881681899258552, 2.2874288510463776, 2.285915679714982, 2.283867567978389, 2.2821221088673447, 2.2800305703407138, 2.2775285033627966, 2.2775228267899434, 2.274398243359571, 2.2726642606501186, 2.271700533515568, 2.2696517963356517, 2.26672322050046, 2.2639345899470307, 2.264490870499828, 2.259569998603723, 2.256828908544915, 2.2540083084564957, 2.2533351453603014, 2.2519890124598483, 2.2496843467125913, 2.246858895399693, 2.245235895011498, 2.2424235746703363, 2.2395478367506314, 2.239274621844339, 2.2355574089632753, 2.233225427299301, 2.228863990223403, 2.2275854775682338, 2.227031087232949, 2.2203708418041344, 2.2179927122733063, 2.216442621835959, 2.2130546235704402, 2.2104136996092247, 2.207049614812216, 2.205599215776693, 2.2023896215897603, 2.1967913696652848, 2.1944820848139224, 2.1910903080973125, 2.1887055725988978, 2.1847590668294976, 2.181244184721762, 2.174993852629968, 2.1713774585295598, 2.1682333144151524, 2.1633617202162725, 2.160612708557677, 2.1565044136914, 2.1518531570250663, 2.1432638136843933, 2.1417822448600474, 2.1403512122089112, 2.1346478382546934, 2.127093713706463, 2.124033172290244, 2.12097659430342, 2.1116041242170955, 2.1067039882502203, 2.1020718448433846, 2.09659837218418, 2.092663526188633, 2.085667176946374, 2.0782048017310113, 2.0731958449556056, 2.0654746971866, 2.0614878753424795, 2.0568748606572362, 2.044548188785064, 2.0417766215826116, 2.0308807800632063, 2.0253462769399153, 2.0167859716973426, 2.012362734579596, 2.007078777939148, 1.9950267018706271, 1.9874378273342548, 1.9799959164852354, 1.9726407339292322, 1.9702999969247372, 1.9601020935173472, 1.9495359830821053, 1.9410566234979112, 1.933947683593081, 1.9228897271863599, 1.912048435434768, 1.9036910428095173, 1.894618068798233, 1.8894952098533793, 1.8798526019436603, 1.865643424994721, 1.8590226591601742], "accuracy": [0.09760929644107819, 0.09879804402589798, 0.10434553027153015, 0.10896842926740646, 0.11398758739233017, 0.11649715900421143, 0.1266675442457199, 0.12640337646007538, 0.12798838317394257, 0.13749834895133972, 0.14700831472873688, 0.15189538896083832, 0.1578391194343567, 0.15955619513988495, 0.16312244534492493, 0.17131158709526062, 0.16853784024715424, 0.17976489663124084, 0.19138818979263306, 0.1962752640247345, 0.18597279489040375, 0.20604939758777618, 0.2106723040342331, 0.2246730923652649, 0.22097477316856384, 0.22084268927574158, 0.22361643612384796, 0.2339189052581787, 0.23154141008853912, 0.2401268035173416, 0.2440892904996872, 0.24501386284828186, 0.2509576082229614, 0.25795799493789673, 0.2719587981700897, 0.26443007588386536, 0.26680755615234375, 0.2837141752243042, 0.282129168510437, 0.2954695522785187, 0.2864879071712494, 0.2969224750995636, 0.30220577120780945, 0.30180954933166504, 0.3069607615470886, 0.3163386583328247, 0.3140932619571686, 0.320169061422348, 0.3129045069217682, 0.32122573256492615, 0.3183199167251587, 0.3385286033153534, 0.33984941244125366, 0.33800026774406433, 0.3407739996910095, 0.3451327383518219, 0.34447231888771057, 0.34803855419158936, 0.3645489513874054, 0.35305771231651306, 0.360190212726593, 0.35266146063804626, 0.3677189350128174, 0.37128517031669617, 0.36283186078071594, 0.3797384798526764, 0.38053098320961, 0.3745872378349304, 0.3763043284416199, 0.38488972187042236, 0.38026681542396545, 0.3881917893886566, 0.3897767663002014, 0.3999471664428711, 0.3951921761035919, 0.39624884724617004, 0.40483424067497253, 0.40509840846061707, 0.40906089544296265, 0.4081363081932068, 0.4072117209434509, 0.41209879517555237, 0.4091929793357849, 0.41751420497894287, 0.4263637661933899, 0.4239862561225891, 0.4255712628364563, 0.4142121374607086, 0.42491084337234497, 0.43045833706855774, 0.4267600178718567, 0.4283449947834015, 0.43204331398010254, 0.4383833110332489, 0.43785497546195984, 0.4473649561405182, 0.43930789828300476, 0.43825122714042664, 0.44644036889076233, 0.44168537855148315], "val_loss": [1.96853882925851, 1.9667183331080846, 1.9648947034563338, 1.9630793162754603, 1.9612617492675781, 1.9594649587358748, 1.9576490265982491, 1.9558397701808385, 1.9540364401681083, 1.9522398539951868, 1.95041595186506, 1.9486026763916016, 1.9467554773603166, 1.94489928654262, 1.9430480684552873, 1.9411862918308802, 1.9393080983843123, 1.9374438694545202, 1.9355108397347587, 1.933547019958496, 1.9316187586103166, 1.9296085493905204, 1.927581514630999, 1.9255426951817103, 1.9234628677368164, 1.9213765689304896, 1.919260093144008, 1.9170798574175154, 1.9148823874337333, 1.9126407759530204, 1.9103457587105888, 1.90804352079119, 1.9056643758501326, 1.9032378877912248, 1.9007329259599959, 1.898202759878976, 1.8956530434744698, 1.893007755279541, 1.8903216634477888, 1.8875915663582938, 1.8847947801862444, 1.881950923374721, 1.8790245737348283, 1.876077379499163, 1.8730553218296595, 1.869920321873256, 1.8667216300964355, 1.8634419441223145, 1.8600881440298898, 1.8566372053963798, 1.8531291825430733, 1.8494717053004675, 1.8457276480538505, 1.8419340678623743, 1.838005747113909, 1.8340140070234026, 1.8299339839390345, 1.82576813016619, 1.8214175360543388, 1.8170108113970076, 1.8125568117414201, 1.8079931395394462, 1.8032667977469308, 1.7984375272478377, 1.7935711996895927, 1.788506167275565, 1.7833221299307687, 1.7780580520629883, 1.772639206477574, 1.7671377999441964, 1.7614908899579729, 1.7557484081813268, 1.7498186656406947, 1.7437842232840401, 1.7376690592084612, 1.7314820970807756, 1.7250070571899414, 1.7184940406254359, 1.711796488080706, 1.7049312932150704, 1.6979636124202184, 1.6908972263336182, 1.6837060792105538, 1.6762912954602922, 1.6687733786446708, 1.6611216749463762, 1.6533461979457311, 1.645566156932286, 1.6376159872327531, 1.629504987171718, 1.6212866987500871, 1.612976312637329, 1.6044843196868896, 1.59589764050075, 1.5872180461883545, 1.578341007232666, 1.5694620609283447, 1.5604870319366455, 1.5512645244598389, 1.5420660972595215], "val_accuracy": [0.04833333194255829, 0.06499999761581421, 0.07800000160932541, 0.09233333170413971, 0.10566666722297668, 0.12300000339746475, 0.14000000059604645, 0.16233333945274353, 0.18166667222976685, 0.19733333587646484, 0.21400000154972076, 0.22966666519641876, 0.24433332681655884, 0.2603333294391632, 0.2763333320617676, 0.28833332657814026, 0.29866665601730347, 0.3113333284854889, 0.31833332777023315, 0.3293333351612091, 0.3400000035762787, 0.3473333418369293, 0.3540000021457672, 0.3610000014305115, 0.367000013589859, 0.3720000088214874, 0.3763333261013031, 0.3799999952316284, 0.3840000033378601, 0.3893333375453949, 0.3916666805744171, 0.39366665482521057, 0.3970000147819519, 0.3996666669845581, 0.40433332324028015, 0.40933331847190857, 0.41233333945274353, 0.4169999957084656, 0.42266666889190674, 0.42633333802223206, 0.4300000071525574, 0.4346666634082794, 0.43533334136009216, 0.4363333284854889, 0.4410000145435333, 0.4440000057220459, 0.4480000138282776, 0.4503333270549774, 0.45266667008399963, 0.4546666741371155, 0.4569999873638153, 0.4566666781902313, 0.4586666524410248, 0.4623333215713501, 0.46433332562446594, 0.4636666774749756, 0.4650000035762787, 0.468666672706604, 0.4716666638851166, 0.47433334589004517, 0.47999998927116394, 0.4819999933242798, 0.48500001430511475, 0.4886666536331177, 0.49166667461395264, 0.4946666657924652, 0.4986666738986969, 0.5009999871253967, 0.503333330154419, 0.5063333511352539, 0.5096666812896729, 0.5109999775886536, 0.5143333077430725, 0.5193333625793457, 0.5206666588783264, 0.5230000019073486, 0.5249999761581421, 0.5273333191871643, 0.5306666493415833, 0.5353333353996277, 0.5383333563804626, 0.5406666398048401, 0.5419999957084656, 0.5440000295639038, 0.5443333387374878, 0.5463333129882812, 0.546999990940094, 0.5496666431427002, 0.5516666769981384, 0.5533333420753479, 0.5553333163261414, 0.5586666464805603, 0.5586666464805603, 0.562333345413208, 0.5653333067893982, 0.5676666498184204, 0.5676666498184204, 0.5693333148956299, 0.5709999799728394, 0.5730000138282776]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 9, 1, 8, 0, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 2, 2, 3, 9, 4, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [482.8374906957362, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19759608805179596, 0.10553427785634995, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2433048.1428571427, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 4, 2, 8, 1, 1, 5, 3, 0, 0, 4, 0, 8, 5, 5, 2, 2, 5, 0, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 1, 0, 2, 2, 0, 2, 2, 2, 2, 2, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [79, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 2, 0, 3, 9, 4, 8, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 18, 11, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(grad))), grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(grad, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 4, 2, 4, 2, 2, 1, 1, 5, 0, 8, 0, 2, 0, 8, 1, 5, 2, 5, 9, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 0, 2, 1, 2, 2, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [67, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [1, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [5, 5, 9, 3, 9, 4, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 15, 9, 3, 3, 3, 2, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.negative(grad))))))))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 1, 2, 6, 1, 3, 5, 3, 8, 0, 5, 0, 9, 1, 5, 1, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 0, 2, 1, 2, 1, 2, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [67, 30, 65, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 8, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 2, 0, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 14, 10, 2, 4, 4, 2, 2, 0, 6, 4, 3, 1, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(grad), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.negative(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1237800337.8502266, 23867482841.82486, 109272769735.76859, 302957253565.0498, 658536601688.4554, 1191897948937.9749], "accuracy": [0.09760929644107819, 0.09576013684272766, 0.09959053993225098, 0.10051512718200684, 0.09800554811954498, 0.10157178342342377], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 1, 0, 4, 2, 6, 1, 1, 5, 3, 8, 0, 2, 0, 8, 1, 5, 9, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 0, 2, 1, 2, 0, 2, 1, 2, 1, 0, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [32, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [8, 2, 1, 3, 9, 8, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), grad))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(grad))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.negative(grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [486.5498628538235, 8.089638333027031e+27, 3.162548259012829, 2.750332093745836, 3.076265136311634, 3.006022151246157], "accuracy": [0.19772817194461823, 0.10289261490106583, 0.10091137140989304, 0.09985470771789551, 0.09919429570436478, 0.09774138033390045], "val_loss": [2890556.3571428573, 2.644078390938895, 2.6509152139936174, 2.6145967074802945, 2.390025888170515, 2.7317962646484375], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.10133333504199982, 0.0963333323597908, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 3, 2, 4, 2, 6, 1, 1, 5, 9, 8, 0, 2, 0, 8, 1, 5, 2, 5, 9, 4, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [2, 2, 2, 0, 2, 1, 2, 1, 2, 1, 1, 2, 2, 3, 0, 1, 1, 0, 2, 2, 2, 1, 0, 2, 3, 2, 2, 1, 3, 2, 2, 0, 2, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 46, 10, 73, 46, 33, 24, 64, 59], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 4, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 9, 3, 9, 4, 8], [4, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 20, 10, 3, 11, 11, 6, 5, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))))), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(tf.math.square(tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 8, 2, 9, 1, 4, 2, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 0, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 5, 9, 3, 9, 4, 8], [5, 4, 3], [55, 66], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, beta)", "other_info": {"loss": [2.302780639257697, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 9, 1, 8, 0, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 2, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [35, 95, 54, 66], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 5, 9, 3, 9, 4, 8], [5, 4, 3], [55], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, grad), alpha), tf.math.square(tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301541780200475, 2.303511933187027, 2.302068672695369, 2.302371835003219, 2.302913183391905, 2.3021910734747255], "accuracy": [0.0956280529499054, 0.09179764986038208, 0.09285431355237961, 0.09140139818191528, 0.0940430611371994, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 2, 2, 4, 2, 6, 1, 1, 5, 3, 8, 0, 2, 0, 8, 1, 5, 2, 5, 5, 3, 9, 5, 3, 1, 2, 7, 2, 2, 0, 6, 0, 2, 3, 4, 5, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 0, 2, 1, 0, 2, 0, 0, 1, 1, 2, 2, 0, 0, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 2, 0, 3, 9, 4, 8, 8], [4, 4, 3], [55], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 29, 29, 17, 12, 4, 4, 4, 3, 1, 1, 6, 4, 3, 1, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha)))))))), tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.square(alpha), grad))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3015417487094463, 2.303511964678056, 2.302068704186398, 2.3023718035121905, 2.302913250845689, 2.302191136456783], "accuracy": [0.0956280529499054, 0.09179764986038208, 0.09285431355237961, 0.09140139818191528, 0.0940430611371994, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703852108546667, 1.9703852108546667, 1.9703851427350725, 1.9703852108546667, 1.9703852108546667], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 3, 3, 9, 1, 2, 2, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 2, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 2, 2, 1, 0, 2, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [41, 95, 54, 66], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [1, 5, 9, 3, 9, 4, 8], [4, 4, 3], [55, 66], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 6, 6, 4, 2, 1, 3, 3, 1, 2, 0, 4, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.301541780200475, 2.303511933187027, 2.302068672695369, 2.302371835003219, 2.302913183391905, 2.3021910734747255], "accuracy": [0.0956280529499054, 0.09179764986038208, 0.09285431355237961, 0.09140139818191528, 0.0940430611371994, 0.09060890227556229], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 3, 1, 9, 2, 2, 0, 1, 5, 3, 3, 3, 4, 3, 8, 1, 1, 3, 5, 5, 6, 2, 5, 3, 1, 2, 7, 2, 2, 2, 8, 4, 2, 3, 4, 8, 5, 5, 4, 0, 0, 1, 9, 3, 3, 8, 7, 7, 3, 9, 2, 2, 2, 3, 1, 3, 4, 7, 4, 2, 3, 2, 9, 1, 5, 8, 4, 8, 2, 6, 7, 9, 3], [1, 1, 2, 2, 1, 2, 1, 0, 2, 0, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 2, 2, 2, 3, 1, 2, 1, 1, 2, 2, 0, 3, 0, 3, 1, 2, 0, 0, 3, 1, 1, 1, 1, 2, 2, 3, 3, 0, 0, 0, 3, 2], [57, 30, 25, 45, 10, 73, 46, 33, 24, 64, 59], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 2, 2, 5, 1, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 1, 3, 3, 3, 3, 1, 4, 3, 4, 1, 3, 3], [9, 95, 54, 66], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1], [9, 5, 9, 3, 9, 4, 8], [5, 4, 3], [55, 66], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.035428572446107864, "mapping_values": [1, 14, 14, 8, 6, 1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), alpha), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3017834398047703, 2.3043448099638444, 2.303502194114003, 2.3044071086976254, 2.3055586423131973, 2.3054046698250175], "accuracy": [0.0944393053650856, 0.08994849026203156, 0.08889182657003403, 0.08796724677085876, 0.0878351628780365, 0.08268392831087112], "val_loss": [1.970935685294015, 1.971484865461077, 1.972038677760533, 1.9725920813424247, 1.973151547568185, 1.9737044061933244], "val_accuracy": [0.032999999821186066, 0.03200000151991844, 0.030666666105389595, 0.027666667476296425, 0.026000000536441803, 0.025333333760499954]}}]