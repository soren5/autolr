[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8080000281333923, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1127722854422792, 1.8719502089439586, 1.3285454063210207, 1.0285223497218303, 0.84768608927711, 0.8028653616902693, 0.7521184725516413, 0.7176236556174969, 0.6649388774762993, 0.6841316223223258, 0.6240324412496288, 0.607344184876307, 0.6033882235082512, 0.586127678684476, 0.5435114337185261, 0.5367410712789441, 0.5309837938433609, 0.5372520318325438, 0.5192399642423726, 0.5045867758758662, 0.5049252447915382, 0.5113116884315019, 0.47160603188095374, 0.49430707026985987, 0.4704986391144973, 0.45764937517019766, 0.46838344628265144, 0.4463355179279236, 0.44221957304836373, 0.43582157862499765, 0.433295833180373, 0.4198393340887662, 0.43311564578057093, 0.43100964372357387], "accuracy": [0.29745081067085266, 0.40523049235343933, 0.5334830284118652, 0.632941484451294, 0.6839255094528198, 0.695813000202179, 0.7010962963104248, 0.7149649858474731, 0.7427024245262146, 0.7310791015625, 0.7631752490997314, 0.7651565074920654, 0.769911527633667, 0.7792893648147583, 0.7923656105995178, 0.7987055778503418, 0.8041210174560547, 0.7981772422790527, 0.7989697456359863, 0.8072909712791443, 0.8101968169212341, 0.8038568496704102, 0.8211596608161926, 0.8099326491355896, 0.8234050869941711, 0.8232730031013489, 0.8274996876716614, 0.8354246616363525, 0.8356888294219971, 0.8321225643157959, 0.8330471515655518, 0.8417646288871765, 0.8327829837799072, 0.8342359066009521], "val_loss": [1.8853740010942732, 1.1750901085989816, 1.0307820865086146, 0.6458312954221453, 0.5716275487627301, 0.5689571925571987, 0.5409562587738037, 0.5324431146894183, 0.5117204189300537, 0.49687111377716064, 0.4918665034430368, 0.45363807678222656, 0.45119307722364155, 0.44197544029780794, 0.43013019221169607, 0.41404928479875835, 0.41190940141677856, 0.4001485024179731, 0.43946381977626253, 0.3738973992211478, 0.4101542149271284, 0.3724566272326878, 0.37369937556130545, 0.36647740432194303, 0.38917129380362375, 0.42230688674109323, 0.3693977679525103, 0.35551804304122925, 0.34592279366084505, 0.40390593664986746, 0.34425356558391024, 0.35371456827436176, 0.3487884061677115, 0.3603531462805612], "val_accuracy": [0.39633333683013916, 0.515666663646698, 0.5899999737739563, 0.675000011920929, 0.7453333139419556, 0.7296666502952576, 0.7583333253860474, 0.7390000224113464, 0.7649999856948853, 0.7699999809265137, 0.7583333253860474, 0.7776666879653931, 0.7889999747276306, 0.793666660785675, 0.8236666917800903, 0.812666654586792, 0.8336666822433472, 0.8349999785423279, 0.8059999942779541, 0.840666651725769, 0.8103333115577698, 0.843666672706604, 0.8450000286102295, 0.8516666889190674, 0.8373333215713501, 0.8103333115577698, 0.8356666564941406, 0.8573333621025085, 0.859666645526886, 0.824999988079071, 0.8576666712760925, 0.8460000157356262, 0.8553333282470703, 0.8420000076293945]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.8019999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.1138258423110545, 1.873771842633571, 1.268900225254145, 0.9717717259047668, 0.8771685183386777, 0.7742818529737183, 0.7474390881928502, 0.723218800684307, 0.6715973927171365, 0.6992834968227422, 0.6234820401270187, 0.6117030775321867, 0.5996310882847999, 0.5971520331163825, 0.5393217705763909, 0.5568318651132202, 0.5422545361355107, 0.5357173343045506, 0.5279514281945914, 0.5096933239833035, 0.5102191792266905, 0.5190113965255111, 0.4796275954519863, 0.48411186837942183, 0.4641415322374879, 0.4631187523817421, 0.4632334249910189, 0.4460981572112072, 0.45358371458679003], "accuracy": [0.29797911643981934, 0.40166425704956055, 0.5513142347335815, 0.6494518518447876, 0.674679696559906, 0.6992471218109131, 0.7079645991325378, 0.7099458575248718, 0.7358341217041016, 0.7231541275978088, 0.7618544697761536, 0.759080708026886, 0.7705719470977783, 0.7663452625274658, 0.8010830879211426, 0.7862898111343384, 0.7926297783851624, 0.7955356240272522, 0.7954035401344299, 0.8072909712791443, 0.8067626357078552, 0.7997622489929199, 0.8201030492782593, 0.8157442808151245, 0.8247259259223938, 0.8216879963874817, 0.8261788487434387, 0.8360850811004639, 0.8277638554573059], "val_loss": [1.8884999411446708, 1.1588210037776403, 1.0268677983965193, 0.6719315222331456, 0.584186145237514, 0.6571161576679775, 0.5748606068747384, 0.5598912579672677, 0.5307827506746564, 0.5038621766226632, 0.4849600451333182, 0.45471019404275076, 0.4449876717158726, 0.42570156710488455, 0.43308961391448975, 0.4291771139417376, 0.4429260662623814, 0.43848882402692524, 0.41247880458831787, 0.3899692978177752, 0.4151653391974313, 0.37218771662030903, 0.39382125650133404, 0.3589100071362087, 0.3645522083554949, 0.38343442337853567, 0.37488417966025217, 0.3683878779411316, 0.3575183664049421], "val_accuracy": [0.39266666769981384, 0.5166666507720947, 0.6179999709129333, 0.7059999704360962, 0.731333315372467, 0.6996666789054871, 0.7456666827201843, 0.734000027179718, 0.75, 0.7676666378974915, 0.765333354473114, 0.7716666460037231, 0.7906666398048401, 0.8080000281333923, 0.8023333549499512, 0.7990000247955322, 0.7956666946411133, 0.7839999794960022, 0.8323333263397217, 0.8349999785423279, 0.8046666383743286, 0.8443333506584167, 0.8293333053588867, 0.8543333411216736, 0.8460000157356262, 0.8323333263397217, 0.8336666822433472, 0.8513333201408386, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [32, 63, 57, 12]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.279893809998623, 2.210480674477364, 2.0864534921272004, 1.8617165954499402, 1.5847473687594043, 1.364151628876186, 1.219235542979081, 1.1210818075626723, 1.0520614634069076, 0.9940382917606599, 0.9513301404082087, 0.9126055825734419, 0.8864153215378472, 0.8696651926696922, 0.8574971109018539, 0.8368714053979435, 0.8171621806208075, 0.8051481375038002, 0.784838261432368, 0.7671032684936719, 0.7636761022927251, 0.753891069277198, 0.7472701356427041, 0.7395656735055309, 0.7264457329499519, 0.7288325929040245, 0.7188597603512478, 0.7096932903808011, 0.7032404638331847, 0.6938066909168658, 0.6853715165526466, 0.6972711485107074, 0.6909250332348382, 0.6757991247252073, 0.6737417921398325, 0.6762514725542025, 0.6670086889408048, 0.6580113319279323, 0.6569500234951795, 0.6565857962405661, 0.6530664072863698, 0.6403139769802665, 0.644799390528511, 0.6392462498255851, 0.6418875819026613, 0.6307155302549948, 0.6310667558164172], "accuracy": [0.15400871634483337, 0.2864879071712494, 0.38647469878196716, 0.45132744312286377, 0.5003302097320557, 0.5371813774108887, 0.5775987505912781, 0.6079778075218201, 0.6316206455230713, 0.6485272645950317, 0.6655659675598145, 0.6785101294517517, 0.6816800832748413, 0.6840575933456421, 0.6968696117401123, 0.6971337795257568, 0.7065116763114929, 0.709549605846405, 0.7132478952407837, 0.7205125093460083, 0.7252674698829651, 0.7273808121681213, 0.7308149337768555, 0.7342491149902344, 0.7359662055969238, 0.7320036888122559, 0.7404569983482361, 0.739928662776947, 0.7434949278831482, 0.7483819723129272, 0.7483819723129272, 0.7441553473472595, 0.7470611333847046, 0.7541936039924622, 0.7552502751350403, 0.7520803213119507, 0.7535332441329956, 0.7606657147407532, 0.7618544697761536, 0.7626469135284424, 0.7614582180976868, 0.7648923397064209, 0.7580240368843079, 0.763439416885376, 0.765949010848999, 0.7672698497772217, 0.7647602558135986], "val_loss": [1.9154355866568429, 1.8278653962271554, 1.6556922367640905, 1.3829238755362374, 1.1140188149043493, 0.9378746918269566, 0.8280691930225917, 0.7581707750047956, 0.7118815694536481, 0.68300313608987, 0.6530219827379499, 0.6262433188302177, 0.616150072642735, 0.5994068724768502, 0.5839755364826748, 0.5743380274091449, 0.5639016968863351, 0.5555381774902344, 0.5476830346243722, 0.5340191466467721, 0.5305827174867902, 0.5242213521684919, 0.5212557315826416, 0.5111809117453439, 0.5078863075801304, 0.5023633752550397, 0.49494848932538715, 0.5001043251582554, 0.48647427558898926, 0.4817272935594831, 0.4777211291449411, 0.48876023292541504, 0.4832079921449934, 0.47122323513031006, 0.4666482721056257, 0.4723887954439436, 0.46324990476880756, 0.46163575989859446, 0.4563127245221819, 0.45301553181239534, 0.45288779054369244, 0.44513472488948275, 0.45325965540749685, 0.44256506647382465, 0.44492283889225553, 0.4391918863568987, 0.4392575706754412], "val_accuracy": [0.3876666724681854, 0.4883333444595337, 0.531333327293396, 0.6013333201408386, 0.6263333559036255, 0.6703333258628845, 0.687666654586792, 0.7016666531562805, 0.7143333554267883, 0.7126666903495789, 0.7356666922569275, 0.7369999885559082, 0.7356666922569275, 0.7433333396911621, 0.7483333349227905, 0.762333333492279, 0.7540000081062317, 0.765333354473114, 0.765333354473114, 0.7739999890327454, 0.7736666798591614, 0.7739999890327454, 0.777999997138977, 0.7746666669845581, 0.7749999761581421, 0.7776666879653931, 0.7860000133514404, 0.7833333611488342, 0.7996666431427002, 0.7889999747276306, 0.7946666479110718, 0.7789999842643738, 0.784333348274231, 0.8026666641235352, 0.8026666641235352, 0.8013333082199097, 0.7986666560173035, 0.8069999814033508, 0.8063333630561829, 0.812333345413208, 0.8009999990463257, 0.8146666884422302, 0.7926666736602783, 0.8140000104904175, 0.8109999895095825, 0.8146666884422302, 0.8146666884422302]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 5, 1, 6, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.652571439743042, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2000708929095145, 1.4498031356189514, 0.9403068291638679, 0.8464434832519528, 0.8053663675386074, 0.7637639268829272, 0.7169472749490527, 0.6465308428314526, 0.6151477127436712, 0.5898343482037671, 0.5693292667238766, 0.5462985243763921, 0.5272840854041785, 0.5224092678898723, 0.5022605439738322, 0.49731035200108187, 0.47761428282166735, 0.4660541122820336, 0.45403509191345026, 0.4575496663065981, 0.4383839346264741, 0.428036409484208, 0.4477016951280137, 0.4396961806527754, 0.4313089575521572], "accuracy": [0.2538634240627289, 0.5255580544471741, 0.6597543358802795, 0.6921146512031555, 0.6913221478462219, 0.717870831489563, 0.735569953918457, 0.7564390301704407, 0.7730814814567566, 0.7755910754203796, 0.7807422876358032, 0.7891955971717834, 0.798309326171875, 0.8009510040283203, 0.8101968169212341, 0.813498854637146, 0.8211596608161926, 0.8206313848495483, 0.824329674243927, 0.8305375576019287, 0.8339717388153076, 0.8329150676727295, 0.8319904804229736, 0.835160493850708, 0.8387266993522644], "val_loss": [1.4575629234313965, 0.6815670558384487, 0.58608421257564, 0.5607439620154244, 0.5563848699842181, 0.5190020629337856, 0.4621296780450003, 0.4552594082696097, 0.4261893800326756, 0.40438594988414217, 0.3933511461530413, 0.38409329312188284, 0.3788618360246931, 0.3633787972586496, 0.35141160658427645, 0.34281441995075773, 0.3430830580847604, 0.3328561612537929, 0.332662148135049, 0.33110580274036955, 0.323594902242933, 0.3449938212122236, 0.3271325741495405, 0.34977605513163973, 0.3506163273538862], "val_accuracy": [0.5493333339691162, 0.7146666646003723, 0.7450000047683716, 0.7419999837875366, 0.7540000081062317, 0.7683333158493042, 0.784333348274231, 0.8050000071525574, 0.8159999847412109, 0.8209999799728394, 0.8299999833106995, 0.8383333086967468, 0.8413333296775818, 0.8426666855812073, 0.8443333506584167, 0.8550000190734863, 0.8603333234786987, 0.8606666922569275, 0.862666666507721, 0.8676666617393494, 0.8676666617393494, 0.862333357334137, 0.8653333187103271, 0.8616666793823242, 0.8583333492279053]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 9, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [90, 63, 57, 12]], "fitness": -0.13742856681346893, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.583488632958437, 2.4169950073326834, 2.3186793391573244, 2.3038480417556166, 2.3031541862822857, 2.30298967667543, 2.302943445955679, 2.3029866801465837, 2.303075695617277, 2.302941198755863], "accuracy": [0.17976489663124084, 0.16629242897033691, 0.09219389408826828, 0.0940430611371994, 0.09126931428909302, 0.0948355570435524, 0.09668471664190292, 0.09391097724437714, 0.09681680053472519, 0.09311848133802414], "val_loss": [1.9755423409598214, 2.043424265725272, 1.9745304243905204, 1.9737583569117956, 1.9735435077122279, 1.973616600036621, 1.973646777016776, 1.9735945292881556, 1.9737071309770857, 1.9737075396946497], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10300000011920929, 0.10066666454076767, 0.10066666454076767, 0.10300000011920929, 0.10000000149011612, 0.10300000011920929]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 4, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.11085714399814606, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(alpha, tf.math.add(beta, grad)))))), tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.584054621124721, 2.2386330063348403, 2.3187870620311353, 2.3029012335856764, 2.212992464215953, 2.3077264688018446, 2.3047558276282643, 2.3034216819138904, 2.303336003138137, 2.303239180096672], "accuracy": [0.18016114830970764, 0.1740853190422058, 0.09866596013307571, 0.10474177449941635, 0.19693566858768463, 0.10236428678035736, 0.09179764986038208, 0.09866596013307571, 0.10130762308835983, 0.1006472036242485], "val_loss": [1.9757740156991142, 2.0357943262372697, 1.9739532470703125, 1.9706340517316545, 1.9806760379246302, 1.97405058997018, 1.9739536557878767, 1.9735776356288366, 1.9737351962498255, 1.9737775666373116], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10100000351667404, 0.10000000149011612, 0.10300000011920929, 0.10300000011920929, 0.09666666388511658, 0.10066666454076767, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 3, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1256124892.3059394, 23840220388.442215, 109711342750.3812, 304392658860.6842, 663403453969.5153, 1196641082841.25], "accuracy": [0.0948355570435524, 0.09536388516426086, 0.09417514503002167, 0.09945846349000931, 0.09826971590518951, 0.10170386731624603], "val_loss": [4639720886.857142, 37106607250.28571, 125221610642.28572, 296810840064.0, 579684925440.0, 1001683306788.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [1, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [90, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [8, 5, 1, 6, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [39, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 8, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 0, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [1, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302360830274256, 2.3024974407190504, 2.3028159147838734, 2.3050017474963918, 2.3163222731568984, 2.3804382110520628], "accuracy": [0.1022322028875351, 0.10236428678035736, 0.1026284471154213, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737649645124162, 1.9740132604326521, 1.9750308309282576, 1.9797670500619071, 2.0037658555167064, 2.1549599511282787], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 8, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 1, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.0331025752915812e+27, 2.450002921806933, 2.766567830349145, 3.8580088680289, 5.909525512027199, 8.257680281892412], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.058032444545201, 2.206136499132429, 2.7721449988228932, 4.278353691101074, 6.262905938284738, 8.304855074201312], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [39, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [3.0927275415229944e+23, 1.3040680572904452e+25, 1.679982172985949e+29, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08770307898521423, 0.08651433140039444, 0.08770307898521423, 0.10276053100824356, 0.10157178342342377, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.197600465796036e+24, 1.9142277900196483e+25, 1.46478512522582e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.07966666668653488, 0.0793333351612091, 0.09833333641290665, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 1, 0, 1, 11, 7, 4, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1786869.357552626, 2.31002091070318, 2.3056830759014453, 2.3038989006173987, 2.3032027249795384, 2.302967015888555, 2.302866685880158, 2.302875850084451, 2.302924277460917, 2.302834091531665], "accuracy": [0.09113723784685135, 0.09800554811954498, 0.09708096832036972, 0.0952318087220192, 0.09628847241401672, 0.09760929644107819, 0.09668471664190292, 0.09391097724437714, 0.09853387624025345, 0.09509972482919693], "val_loss": [1.982433659689767, 1.9771772112165178, 1.9748756544930595, 1.9740945271083288, 1.9737466403416224, 1.9736812455313546, 1.9736720493861608, 1.9736228670392717, 1.9736710275922502, 1.9736623082842146], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10300000011920929, 0.10300000011920929, 0.10066666454076767, 0.10300000011920929, 0.10000000149011612, 0.10300000011920929]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 3, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 1, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha)))), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06696605682373047, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302807438123212, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 3, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [1.0331266674069426e+27, 2.450002971279339, 2.766568167712537, 3.858010397485187, 5.909526978501428, 8.257681748366643], "accuracy": [0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.058032512664795, 2.206136499132429, 2.772146156855992, 4.278355189732143, 6.262907573154995, 8.304856981549944], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3031210792283527, 2.302207596345175, 2.30254321286644, 2.303157857537915, 2.304244882883161, 2.3030985418863112], "accuracy": [0.0886276587843895, 0.09192973375320435, 0.09325055778026581, 0.08981640636920929, 0.08374059200286865, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [6, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 5, 5, 2, 3, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, alpha)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3031210792283527, 2.302207596345175, 2.30254321286644, 2.303157857537915, 2.304244882883161, 2.3030985418863112], "accuracy": [0.0886276587843895, 0.09192973375320435, 0.09325055778026581, 0.08981640636920929, 0.08374059200286865, 0.0936468094587326], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [3, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [0, 5, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [52, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.03371428698301315, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 7, 6, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), alpha), tf.math.add(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303371130593496, 2.3031552134251725, 2.3041629049960948, 2.305529824305897, 2.3077980013980746, 2.307589122033815], "accuracy": [0.0882314071059227, 0.08955223858356476, 0.08968432247638702, 0.08532558381557465, 0.07938185334205627, 0.08651433140039444], "val_loss": [1.9708408628191267, 1.9713482175554549, 1.9718679700578963, 1.972416877746582, 1.9731433732169015, 1.9738627161298479], "val_accuracy": [0.033666666597127914, 0.028333334252238274, 0.027666667476296425, 0.02666666731238365, 0.025333333760499954, 0.02266666665673256]}}]