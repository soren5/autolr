[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0565452354931484, 1.0660079365251496, 0.8059021435818731, 0.7281897462685, 0.6505086069030848, 0.5943092377178578, 0.544047804202197, 0.516105306650811, 0.4894034861258669, 0.4584686720155533, 0.4398860613848823, 0.4240721901646222, 0.4165532732833378, 0.39283260040594337, 0.39110795061790776, 0.38369774828261355, 0.36901517873899325, 0.3441960066064883, 0.3339597837540137, 0.33029338715098805, 0.31509397721813337, 0.3129633860998402, 0.3003969975332495, 0.2984687590391219, 0.2816447411640335, 0.26819117029723144, 0.26737287493351036, 0.2572066728284, 0.25207775890268214, 0.25109769829260187, 0.24058544360029385, 0.24184188013693378, 0.2356128085598009, 0.2346919094842297, 0.2274814823662301], "accuracy": [0.29877161979675293, 0.6213181614875793, 0.6913221478462219, 0.7193237543106079, 0.7514199018478394, 0.7666094303131104, 0.7897239327430725, 0.8042530417442322, 0.8152159452438354, 0.8259146809577942, 0.8341038227081299, 0.8459912538528442, 0.8425571322441101, 0.8519350290298462, 0.8543124794960022, 0.852331280708313, 0.8610487580299377, 0.8725399374961853, 0.8741249442100525, 0.8772949576377869, 0.8844274282455444, 0.8840311765670776, 0.8842953443527222, 0.8894465565681458, 0.8945978283882141, 0.8967111110687256, 0.8967111110687256, 0.9021265506744385, 0.9029190540313721, 0.9026548862457275, 0.9074098467826843, 0.9066173434257507, 0.9072777628898621, 0.9085986018180847, 0.9124290347099304], "val_loss": [0.8955853666578021, 0.610507777759007, 0.5644184691565377, 0.5074611050742013, 0.46087626048496794, 0.4229479857853481, 0.4028626339776175, 0.3852500915527344, 0.37327598673956736, 0.35411315304892405, 0.3431534937449864, 0.3404960972922189, 0.3302630271230425, 0.3207030551774161, 0.3223303811890738, 0.3096848045076643, 0.3125822969845363, 0.3096192904881069, 0.3044937934194292, 0.2922495944159372, 0.2898124286106655, 0.2886741501944406, 0.28867949758257183, 0.29247539384024485, 0.29237221820013864, 0.28500195911952425, 0.29133840118135723, 0.28390467166900635, 0.2869212968008859, 0.2847858837672642, 0.2966889568737575, 0.2861034188951765, 0.30373436212539673, 0.2886312944548471, 0.2911491904939924], "val_accuracy": [0.609333336353302, 0.7279999852180481, 0.7273333072662354, 0.7803333401679993, 0.800000011920929, 0.8113333582878113, 0.8209999799728394, 0.8413333296775818, 0.8493333458900452, 0.8553333282470703, 0.862333357334137, 0.8606666922569275, 0.8656666874885559, 0.8673333525657654, 0.8656666874885559, 0.871666669845581, 0.8723333477973938, 0.8766666650772095, 0.874666690826416, 0.8853333592414856, 0.8859999775886536, 0.8823333382606506, 0.8803333044052124, 0.8866666555404663, 0.8849999904632568, 0.8843333125114441, 0.8880000114440918, 0.8853333592414856, 0.8856666684150696, 0.8896666765213013, 0.8806666731834412, 0.8866666555404663, 0.8833333253860474, 0.8846666812896729, 0.8846666812896729]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 1, 0, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [6, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.8222857117652893, "mapping_values": [1, 9, 9, 4, 5, 1, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.056544970102503, 1.0659595284999213, 0.8055715867871889, 0.728179516273955, 0.651277977091966, 0.5942926730588127, 0.5430727431550868, 0.5163118360757734, 0.48936997285340805, 0.4578935428302459, 0.43835397240838764, 0.4259487167049975, 0.4167984646025776, 0.3932442653094143, 0.3899915665762063, 0.38364642322370485, 0.3656891160645206, 0.3430423272197682, 0.34067883985610353, 0.3317662337751846, 0.3120921038405109, 0.3137853468106864, 0.3015754561359069, 0.2964294177823614, 0.2832124711259985, 0.26786020663058235, 0.2696847849203343, 0.25673487108963955, 0.2553038625507905, 0.2497522355802874, 0.2411299226046585, 0.24547057692023033, 0.2410431129112692], "accuracy": [0.29877161979675293, 0.6210539937019348, 0.6910579800605774, 0.7174745798110962, 0.7493065595626831, 0.7691190242767334, 0.7906485199928284, 0.8055738806724548, 0.8128384351730347, 0.8259146809577942, 0.835160493850708, 0.8437458872795105, 0.8417646288871765, 0.8536521196365356, 0.8549728989601135, 0.852331280708313, 0.8634262084960938, 0.8745211958885193, 0.8704266548156738, 0.8750495314598083, 0.8842953443527222, 0.8835028409957886, 0.8860124349594116, 0.8886540532112122, 0.8939374089241028, 0.8963148593902588, 0.9010698795318604, 0.9022586345672607, 0.9015982151031494, 0.9045040011405945, 0.9080702662467957, 0.9076740145683289, 0.9080702662467957], "val_loss": [0.8955843789236886, 0.6103958402361188, 0.5620246274130685, 0.5087444611958095, 0.4620967762810843, 0.42374869755336214, 0.40343624353408813, 0.3841743128640311, 0.3760854516710554, 0.35255253314971924, 0.3431243896484375, 0.339220472744533, 0.32795212098530363, 0.31913381814956665, 0.3239280326025827, 0.3107360771724156, 0.30824341092790875, 0.31246520791734966, 0.30857631989887785, 0.29031712668282644, 0.2952549968447004, 0.2992179138319833, 0.2886624676840646, 0.3009025369371687, 0.29333949089050293, 0.28629151412418913, 0.2934427431651524, 0.2885992867606027, 0.28748444999967304, 0.28728894676480976, 0.30545674903052195, 0.28329590388706755, 0.3112455691610064], "val_accuracy": [0.609333336353302, 0.7276666760444641, 0.7306666374206543, 0.7796666622161865, 0.8003333210945129, 0.8100000023841858, 0.8220000267028809, 0.8443333506584167, 0.8453333377838135, 0.8550000190734863, 0.8610000014305115, 0.8610000014305115, 0.8676666617393494, 0.8690000176429749, 0.8616666793823242, 0.8713333606719971, 0.8713333606719971, 0.874666690826416, 0.8693333268165588, 0.8836666941642761, 0.8816666603088379, 0.8786666393280029, 0.8786666393280029, 0.8866666555404663, 0.8856666684150696, 0.8859999775886536, 0.8896666765213013, 0.890999972820282, 0.8826666474342346, 0.8866666555404663, 0.8826666474342346, 0.8859999775886536, 0.8803333044052124]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [3, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [76, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [2, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7814285755157471, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.283822735932682, 2.141130479697491, 1.6695658076377893, 1.3114364726148844, 1.038437850841237, 0.909087504551411, 0.8466498636141303, 0.7860455556064471, 0.7716232023344946, 0.7283130952427337, 0.7056928840783829, 0.6764398854815838, 0.6561288049963913, 0.6356210059509333, 0.6081178507564279, 0.5886446803379147, 0.5810060882061354, 0.5964654441349668, 0.5879721096667001, 0.5875335127260896, 0.6059789152161761, 0.6669863600457554, 0.7206220106363076, 0.7886993833316268, 1.0146616114569913, NaN, NaN], "accuracy": [0.13697001338005066, 0.34024566411972046, 0.44062870740890503, 0.553031325340271, 0.6268656849861145, 0.6530181169509888, 0.6866992712020874, 0.7091533541679382, 0.7098137736320496, 0.72672039270401, 0.7420420050621033, 0.750231146812439, 0.7573636174201965, 0.7609298825263977, 0.7717606425285339, 0.7829877138137817, 0.7788931727409363, 0.7784969210624695, 0.7807422876358032, 0.7858935594558716, 0.7807422876358032, 0.7588165402412415, 0.7486461400985718, 0.7276449799537659, 0.6868313550949097, 0.28278958797454834, 0.09998679161071777], "val_loss": [1.9045953069414412, 1.5998207841600691, 0.8801511355808803, 0.7122342586517334, 0.6439857142312186, 0.6015992334910801, 0.5654158932822091, 0.5460635764258248, 0.5296955789838519, 0.5038667406354632, 0.4861421414784023, 0.4718868391854422, 0.4598688398088728, 0.44582303932734896, 0.43673793758664814, 0.4337496757507324, 0.43423191138676237, 0.421171818460737, 0.42292154686791555, 0.41139687810625347, 0.42097323281424387, 0.4493000677653721, 0.45362164293016705, 0.5082561118262154, 1.3019486836024694, NaN, NaN], "val_accuracy": [0.37033334374427795, 0.47466665506362915, 0.6650000214576721, 0.6973333358764648, 0.7260000109672546, 0.7486666440963745, 0.7536666393280029, 0.7636666893959045, 0.778333306312561, 0.7773333191871643, 0.7906666398048401, 0.7933333516120911, 0.8009999990463257, 0.8066666722297668, 0.8069999814033508, 0.812666654586792, 0.8166666626930237, 0.8196666836738586, 0.8193333148956299, 0.8253333568572998, 0.8296666741371155, 0.8323333263397217, 0.8143333196640015, 0.8166666626930237, 0.7450000047683716, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2], [7, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7722856998443604, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.219635652529014, 1.7128203728290015, 1.291004149527393, 1.03772154781466, 0.9900738108569069, 0.9007877321873736, 0.8655971166732022, 0.807662562395934, 0.7961308637850667, 0.757508060431767, 0.7469318958478849, 0.7340341504491504, 0.7113077377425902, 0.675647446240385, 0.6726900622309664, 0.678154792523954, 0.6609116397072784, 0.6549760420655278, 0.6480593824540902, 0.6640840838487988, 0.638471835450946], "accuracy": [0.24976885318756104, 0.4741777777671814, 0.5489367246627808, 0.6324131488800049, 0.6407343745231628, 0.6799629926681519, 0.6814159154891968, 0.7061154246330261, 0.7088891863822937, 0.7215691208839417, 0.7234182953834534, 0.7313432693481445, 0.7423061728477478, 0.7498348951339722, 0.7523444890975952, 0.7416457533836365, 0.7530049085617065, 0.7622507214546204, 0.7625148296356201, 0.7491744756698608, 0.7602694630622864], "val_loss": [1.7013841356549944, 1.0095446450369698, 0.8676864079066685, 0.7941060577120099, 0.6610022953578404, 0.6127205916813442, 0.6381912231445312, 0.548927937235151, 0.5385856628417969, 0.5519939831324986, 0.529180816241673, 0.5488967895507812, 0.49260151386260986, 0.5000473771776471, 0.5121183906282697, 0.4688687835420881, 0.4797567810331072, 0.46446454524993896, 0.4776892832347325, 0.4703804595129831, 0.4557296207972935], "val_accuracy": [0.49399998784065247, 0.6620000004768372, 0.6629999876022339, 0.6293333172798157, 0.7099999785423279, 0.7269999980926514, 0.706333339214325, 0.7609999775886536, 0.7636666893959045, 0.7553333044052124, 0.7666666507720947, 0.7483333349227905, 0.7743333578109741, 0.7699999809265137, 0.765999972820282, 0.7993333339691162, 0.7923333048820496, 0.7853333353996277, 0.7913333177566528, 0.7799999713897705, 0.7846666574478149]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 2, 2, 2, 2, 2, 2, 0, 5, 0, 4, 5, 2, 1, 4, 6, 3, 2, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [14, 95, 54, 66], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [4, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7260000109672546, "mapping_values": [1, 31, 31, 17, 14, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.pow(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.add(alpha, alpha)), grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.300898214357089, 2.2887398323378525, 2.2651664726076945, 2.2293742567777097, 2.1809794791323274, 2.106977835811282, 1.9895019708072126, 1.8147279163629404, 1.6256175961209136, 1.4627074864026877, 1.385428880404456, 1.3760873602523371, 1.3756807554730208, 1.2520445784589067, 1.0988492153072245, 0.9878815321197378, 0.9104391934613132, 0.9150032534528134, 0.9094975721472369, 0.9071706093659789, 0.8645684630910813, 0.8439284643602881, 0.8210291790215882, 0.8102220976042505, 0.8169364491001553, 0.8145960061903784, 0.8144699661581508, 0.7921868545614481, 0.7657124061610295, 0.7487625785869709, 0.7347275865170871, 0.7282697310804801, 0.7280339261622965, 0.7203395191421126, 0.7203886309918348, 0.715391826565082, 0.700975483371723, 0.6979116299180401, 0.6684813778697382, 0.6756945461125311, 0.6815895097146433, 0.6784808704991934, 0.6715864760921993, 0.6650497641278107, 0.6570006754845203, 0.6516218960812662, 0.6457200381403444, 0.6449266771724778, 0.6314681887453447, 0.6127464081853404, 0.6105744566710838, 0.6098824532009024, 0.5951339333773195, 0.5907543197268303, 0.5897492830307098, 0.5802132960371038, 0.5732693779800767, 0.5805237643896014, 0.5756352010057934, 0.5611967341129286, 0.5528629456827937, 0.5475564307351516, 0.5542891935633946, 0.5543301676510347, 0.5449719391069423, 0.5421581203202844, 0.5281409517554496, 0.528662245066694, 0.5337701768151458, 0.5315647245146233, 0.5332280765624016, 0.5138569621283381, 0.5273548888886185, 0.5199867818869179, 0.5175856148341643, 0.4979441498351245, 0.5021584824233433, 0.503475795765563, 0.49433626919658097, 0.5046155084913055, 0.4885869486937197, 0.4829726916073714, 0.4892110427050086, 0.4911115188026126, 0.4760572977975186, 0.462533125831246, 0.4708808734589847, 0.46427299873294486, 0.46922713487832585, 0.4602546613560597, 0.4522134716272071, 0.45728546638829504, 0.4537009362688847, 0.4518285497084207, 0.45103894599031036, 0.44104257683791126, 0.4444049800966457, 0.44440873008771986, 0.436896357648424, 0.4355700854942736], "accuracy": [0.09325055778026581, 0.12442214041948318, 0.19297318160533905, 0.2798837721347809, 0.3323206901550293, 0.3747193217277527, 0.409721314907074, 0.433760404586792, 0.46070531010627747, 0.4955752193927765, 0.521067202091217, 0.5362567901611328, 0.5519746541976929, 0.589750349521637, 0.6300356388092041, 0.6547351479530334, 0.658961832523346, 0.6534143686294556, 0.6720380187034607, 0.6770572066307068, 0.6927750706672668, 0.6906617283821106, 0.694360077381134, 0.7029454708099365, 0.6976621150970459, 0.6980583667755127, 0.6966054439544678, 0.6940959095954895, 0.713908314704895, 0.7223616242408752, 0.7197200059890747, 0.7223616242408752, 0.7211728692054749, 0.7280412316322327, 0.7284374833106995, 0.739928662776947, 0.7416457533836365, 0.737947404384613, 0.7506273984909058, 0.7475894689559937, 0.7452120184898376, 0.7442874312400818, 0.7378153204917908, 0.7483819723129272, 0.7481178045272827, 0.7530049085617065, 0.7569673657417297, 0.7528728246688843, 0.761590301990509, 0.7652885913848877, 0.7685906887054443, 0.7730814814567566, 0.77677983045578, 0.778761088848114, 0.7778365015983582, 0.785101056098938, 0.7868181467056274, 0.7807422876358032, 0.7820631265640259, 0.7844406366348267, 0.7878747582435608, 0.7906485199928284, 0.7897239327430725, 0.7901201844215393, 0.7947431206703186, 0.7973847389221191, 0.8021397590637207, 0.7959318161010742, 0.7938185334205627, 0.7926297783851624, 0.8029322624206543, 0.8024039268493652, 0.8050455451011658, 0.8067626357078552, 0.8095363974571228, 0.8157442808151245, 0.811649739742279, 0.8127063512802124, 0.8105930685997009, 0.809140145778656, 0.8129705190658569, 0.8216879963874817, 0.8211596608161926, 0.8161405324935913, 0.8215559124946594, 0.822348415851593, 0.8210275769233704, 0.8216879963874817, 0.8230088353157043, 0.8240655064582825, 0.8333113193511963, 0.8278959393501282, 0.828820526599884, 0.8329150676727295, 0.8323867321014404, 0.8360850811004639, 0.8271034359931946, 0.8330471515655518, 0.8330471515655518, 0.8358209133148193], "val_loss": [1.9636684145246233, 1.9456517355782645, 1.9180987903050013, 1.880459989820208, 1.824077878679548, 1.7333720752171107, 1.5897008691515242, 1.3873673166547502, 1.163503851209368, 0.9818646226610456, 0.8568132264273507, 0.7823586293629238, 0.7324452229908535, 0.7054111787251064, 0.6784946577889579, 0.6352722304207938, 0.6476624011993408, 0.6671296187809536, 0.6752235037939889, 0.653210026877267, 0.6129576308386666, 0.5821583781923566, 0.5660744394574847, 0.558569175856454, 0.5578309297561646, 0.5616762638092041, 0.5586581570761544, 0.5515986851283482, 0.5420878955296108, 0.531207970210484, 0.5256486279623849, 0.5277703830174038, 0.5307184287479946, 0.5293614864349365, 0.5251474721091134, 0.5188676970345634, 0.5099817344120571, 0.4995566265923636, 0.4913478578839983, 0.48799519879477365, 0.486436128616333, 0.48218408652714323, 0.4747168166296823, 0.46787158080509733, 0.4635439770562308, 0.4589099373136248, 0.4520829234804426, 0.4468123231615339, 0.4450735364641462, 0.4441476208823068, 0.4411085673740932, 0.4360229287828718, 0.43231429372514996, 0.43047293594905306, 0.4281955531665257, 0.4255352701459612, 0.4243700759751456, 0.423657442842211, 0.41970960583005634, 0.4125183480126517, 0.40573684658323017, 0.4021243282726833, 0.4004365461213248, 0.3975382702691214, 0.39334441082818167, 0.3902278372219631, 0.39014468022755217, 0.3914478761809213, 0.3903897149222238, 0.38629028626850676, 0.38262089661189486, 0.3819083401135036, 0.3823082957948957, 0.38111761638096403, 0.37690796170915875, 0.37289444889341083, 0.371530967099326, 0.37109369891030447, 0.369077776159559, 0.366171521799905, 0.36386617592402865, 0.36235691819872173, 0.3606893845966884, 0.3575555256434849, 0.3543606059891837, 0.3529817461967468, 0.3533953513417925, 0.35351345368794035, 0.3516714572906494, 0.3488822749682835, 0.3468407988548279, 0.345656156539917, 0.34387764760426115, 0.340769146169935, 0.33688693387167795, 0.3338773420878819, 0.3322962522506714, 0.3312788690839495, 0.33002608163016184, 0.32843109539576937], "val_accuracy": [0.08900000154972076, 0.26100000739097595, 0.3580000102519989, 0.4033333361148834, 0.42800000309944153, 0.4636666774749756, 0.5070000290870667, 0.5609999895095825, 0.6079999804496765, 0.6570000052452087, 0.671999990940094, 0.6793333292007446, 0.7006666660308838, 0.7093333601951599, 0.7129999995231628, 0.7293333411216736, 0.7233333587646484, 0.7179999947547913, 0.7393333315849304, 0.7409999966621399, 0.7293333411216736, 0.7353333234786987, 0.746999979019165, 0.7570000290870667, 0.7456666827201843, 0.7436666488647461, 0.7490000128746033, 0.762333333492279, 0.7630000114440918, 0.7670000195503235, 0.7666666507720947, 0.7643333077430725, 0.768666684627533, 0.7693333625793457, 0.7726666927337646, 0.7760000228881836, 0.7806666493415833, 0.7826666831970215, 0.7826666831970215, 0.7799999713897705, 0.7776666879653931, 0.7806666493415833, 0.7870000004768372, 0.7940000295639038, 0.800000011920929, 0.7973333597183228, 0.8006666898727417, 0.8006666898727417, 0.7990000247955322, 0.7990000247955322, 0.8036666512489319, 0.8116666674613953, 0.8103333115577698, 0.8096666932106018, 0.8149999976158142, 0.8149999976158142, 0.815666675567627, 0.8149999976158142, 0.8173333406448364, 0.8240000009536743, 0.831333339214325, 0.8336666822433472, 0.8333333134651184, 0.831333339214325, 0.8346666693687439, 0.8363333344459534, 0.8360000252723694, 0.8353333473205566, 0.8396666646003723, 0.843666672706604, 0.8443333506584167, 0.8446666598320007, 0.8429999947547913, 0.8416666388511658, 0.8443333506584167, 0.847000002861023, 0.8489999771118164, 0.8479999899864197, 0.8483333587646484, 0.8493333458900452, 0.8539999723434448, 0.8543333411216736, 0.8529999852180481, 0.8566666841506958, 0.8573333621025085, 0.8616666793823242, 0.859000027179718, 0.8560000061988831, 0.856333315372467, 0.8603333234786987, 0.8650000095367432, 0.8653333187103271, 0.8653333187103271, 0.8643333315849304, 0.8666666746139526, 0.8686666488647461, 0.8673333525657654, 0.8690000176429749, 0.8676666617393494, 0.8686666488647461]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 8, 2, 2, 2, 2, 2, 0, 5, 0, 4, 5, 2, 1, 4, 6, 3, 2, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 1, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [14, 95, 54, 66], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [7, 3, 3, 3, 5, 2], [4, 4, 3], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.7074285745620728, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 5, 3, 2, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3028185537005963, 2.3030855461685427, 2.303403338200664, 2.3020919631453647, 2.302365196347945, 2.3023408917608577, 2.301326507559038, 2.298065687450892, 2.299460298144948, 2.2975763203272366, 2.296476204255789, 2.2956369001285006, 2.2961451748437445, 2.2918538342471986, 2.2892117913782384, 2.286460138567057, 2.2817687731314455, 2.2822513559538185, 2.280465992292818, 2.2735629013075633, 2.2692219357937082, 2.2650492746186623, 2.256720388003344, 2.2532714247435877, 2.2410943061920316, 2.234019585320852, 2.221243678555119, 2.2054298493084636, 2.1700924447719308, 2.1253067494824327, 2.0554576198485677, 1.9854824518436265, 1.867762692395675, 1.7613520663821576, 1.7208567476858316, 1.6291383378116162, 1.5632520345034868, 1.5610748184449983, 1.4992637476979656, 1.4673098401465294, 1.4476668731395705, 1.4392046561220366, 1.39930495918545, 1.3907129385877264, 1.3575771024056775, 1.3515364400399847, 1.337581884371307, 1.308724100390414, 1.3099302703898739, 1.2860822563142416, 1.2750078431997223, 1.2703463809365185, 1.2579529988310671, 1.2459165489102053, 1.2290567928348723, 1.2553567697091457, 1.2354626744383315, 1.2270997872741198, 1.226852648262303, 1.2107314488135466, 1.2014513483861213, 1.2030256222960594, 1.1977547122156458, 1.182809616580631, 1.1966028280419412, 1.1840051375265528, 1.172484126766171, 1.1798807794958641, 1.1716863851915056, 1.1407576850093257, 1.1424598731794346, 1.1539504309970279, 1.136950360391874, 1.1461506241489914, 1.158594908038497, 1.1267080824876805, 1.1287403976944035, 1.1260616735712317, 1.1358141455242836, 1.1290741016867611, 1.1199569887788052], "accuracy": [0.08836349099874496, 0.08466517180204391, 0.0874389111995697, 0.0870426595211029, 0.0948355570435524, 0.09457138925790787, 0.09153348207473755, 0.10394927859306335, 0.10011887550354004, 0.10077928751707077, 0.10619468986988068, 0.10830801725387573, 0.10130762308835983, 0.11253467202186584, 0.11359133571386337, 0.12362963706254959, 0.1294412910938263, 0.13247919082641602, 0.1306300312280655, 0.1434420794248581, 0.15176330506801605, 0.15097081661224365, 0.15849953889846802, 0.1666886806488037, 0.17316074669361115, 0.18280279636383057, 0.18636904656887054, 0.1938977688550949, 0.21252146363258362, 0.23537181317806244, 0.2596750855445862, 0.29520538449287415, 0.33324527740478516, 0.37088891863822937, 0.3839651346206665, 0.40641921758651733, 0.42742040753364563, 0.44366663694381714, 0.4663848876953125, 0.4748381972312927, 0.47827234864234924, 0.4904239773750305, 0.4986131191253662, 0.5119535326957703, 0.514198899269104, 0.5259543061256409, 0.5260863900184631, 0.5406154990196228, 0.5400871634483337, 0.5460308790206909, 0.5492008924484253, 0.5511821508407593, 0.5592392086982727, 0.5635979175567627, 0.5708624720573425, 0.5658433437347412, 0.568749189376831, 0.5680887699127197, 0.5711266398429871, 0.5744287371635437, 0.5818253755569458, 0.5807687044143677, 0.5905428528785706, 0.5926561951637268, 0.5863162279129028, 0.5915995240211487, 0.5926561951637268, 0.5861841440200806, 0.5879011750221252, 0.6009774208068848, 0.6073173880577087, 0.5914674401283264, 0.599128246307373, 0.5997886657714844, 0.6013736724853516, 0.6013736724853516, 0.5992603302001953, 0.5946374535560608, 0.6037511825561523, 0.6034870147705078, 0.6040153503417969], "val_loss": [1.9703965868268694, 1.9703876631600517, 1.9703448840550013, 1.9702049664088659, 1.9698435919625419, 1.9692428452628, 1.968301636832101, 1.9670259611947196, 1.9658595493861608, 1.9647440910339355, 1.9634526116507394, 1.9619599069867815, 1.9601398195539201, 1.9579343795776367, 1.955186367034912, 1.9519109725952148, 1.9483753613063268, 1.9444799423217773, 1.940016746520996, 1.9348396573747908, 1.9288789885384696, 1.9220049040658134, 1.9142746244158064, 1.9055352892194475, 1.8949875831604004, 1.8814849853515625, 1.862631184714181, 1.8339813096182687, 1.786874430520194, 1.709400245121547, 1.597684417452131, 1.4585444246019637, 1.3076669488634383, 1.1820333344595773, 1.0837113857269287, 1.0145303181239538, 0.9618044580732074, 0.9241594927651542, 0.8987770761762347, 0.8799725260053363, 0.8585436173847744, 0.8430539880480085, 0.8291307858058384, 0.8191862276622227, 0.8066075869968959, 0.7970592635018485, 0.7903205667223249, 0.7813062156949725, 0.7723804882594517, 0.767102837562561, 0.7603428023202079, 0.7573756149836949, 0.7518247536250523, 0.7461408036095756, 0.7377486058643886, 0.7322088990892682, 0.7279634646006993, 0.7261511087417603, 0.7211865867887225, 0.7172323295048305, 0.7160107237952096, 0.7123028550829206, 0.709142906325204, 0.7060414382389614, 0.7024310146059308, 0.7013128484998431, 0.698459437915257, 0.696184652192252, 0.6941049439566476, 0.691758360181536, 0.6900860752378192, 0.6894539254052299, 0.6878671646118164, 0.6876800060272217, 0.6872254269463676, 0.6857679912022182, 0.6851405416216169, 0.68202657358987, 0.6802198716572353, 0.6794958966118949, 0.6787558283124652], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03766666725277901, 0.041333332657814026, 0.0430000014603138, 0.04800000041723251, 0.05400000140070915, 0.059333331882953644, 0.06266666948795319, 0.07266666740179062, 0.07900000363588333, 0.09133332967758179, 0.10166666656732559, 0.11533333361148834, 0.13466666638851166, 0.15133333206176758, 0.16300000250339508, 0.17533333599567413, 0.19333332777023315, 0.20800000429153442, 0.21833333373069763, 0.2266666740179062, 0.234333336353302, 0.2436666637659073, 0.24933333694934845, 0.2566666603088379, 0.2720000147819519, 0.3019999861717224, 0.3709999918937683, 0.47833332419395447, 0.5503333210945129, 0.5916666388511658, 0.5950000286102295, 0.621666669845581, 0.640666663646698, 0.6430000066757202, 0.6536666750907898, 0.6633333563804626, 0.6700000166893005, 0.6696666479110718, 0.6706666946411133, 0.6776666641235352, 0.6753333210945129, 0.6800000071525574, 0.6803333163261414, 0.6850000023841858, 0.6893333196640015, 0.6893333196640015, 0.6896666884422302, 0.6943333148956299, 0.690666675567627, 0.6970000267028809, 0.6959999799728394, 0.7016666531562805, 0.7053333520889282, 0.7023333311080933, 0.7053333520889282, 0.7103333473205566, 0.7149999737739563, 0.7089999914169312, 0.7113333344459534, 0.718999981880188, 0.718999981880188, 0.718666672706604, 0.7146666646003723, 0.7236666679382324, 0.7223333120346069, 0.722000002861023, 0.7226666808128357, 0.7213333249092102, 0.7263333201408386, 0.7273333072662354, 0.7243333458900452, 0.7196666598320007, 0.7329999804496765, 0.7263333201408386, 0.7319999933242798, 0.7326666712760925, 0.7323333621025085, 0.7316666841506958]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 5, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0], [1, 4, 3, 3, 5, 2], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.074001734896957, 2.3083269445887646, 2.3383170418404884, 2.3385170018432038, 2.322769275635556, 2.3084229379046026, 2.3231951104273585, 2.3156518112981734, 2.31547946640844, 2.3501545601611626], "accuracy": [0.17963281273841858, 0.15189538896083832, 0.09853387624025345, 0.10157178342342377, 0.10632677376270294, 0.10051512718200684, 0.10077928751707077, 0.09840179979801178, 0.1006472036242485, 0.09668471664190292], "val_loss": [1.9829117230006628, 2.0044864245823453, 1.9855965886797224, 1.9902557645525252, 1.9825333186558314, 1.9826363836015974, 1.9810236522129603, 1.9823903356279646, 1.9819861820765905, 1.9863367080688477], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.1003333330154419, 0.10300000011920929, 0.10100000351667404, 0.10300000011920929, 0.10066666454076767, 0.10000000149011612, 0.0963333323597908]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0], [6, 3, 4, 3, 5, 2, 4, 9], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 1, 14, 10, 8, 2, 1, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, beta)", "other_info": {"loss": [2.344646213265962, 1306.6087706322369, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04504028707742691, 0.01558578759431839, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1272633416312083, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004666666500270367, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.3022515034363837, 2.3026818859421296, 2.302677708216284, 2.3026919588830412, 2.3026695997802227, 2.3027046448235593, 2.3027024105350655], "accuracy": [0.09694888442754745, 0.09774138033390045, 0.09932637959718704, 0.09694888442754745, 0.09998679161071777, 0.09668471664190292, 0.09391097724437714], "val_loss": [1.9736230032784599, 1.9735897609165736, 1.973660945892334, 1.97371244430542, 1.9737125124250139, 1.9737248420715332, 1.9735968453543526], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.10000000149011612, 0.09733333438634872, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 2, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [30, 95, 54, 66], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [59, 95, 54, 66], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2, 3, 5], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 15, 10, 8, 2, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)))))), tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.58895990996864, 2.298332540098671, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.187689870595932, 0.11266675591468811, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9783223015921456, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [3, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [29, 95, 54, 66], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2], [5, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302154597605004, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 2, 2, 2, 2, 2, 0, 1, 0, 4, 9, 2, 1, 5, 6, 3, 2, 2, 5, 4, 2, 5, 3, 1, 6, 7, 7, 2, 6, 8, 7, 6, 2, 4, 4, 8, 9, 5, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 0, 0, 1, 2, 0, 1, 2, 3, 2, 1, 1, 0, 2, 1, 1, 0, 2, 2, 3, 1, 2, 3, 0, 2, 2, 2, 3], [91, 60, 25, 53, 26, 73, 46, 33, 24], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1], [2, 3, 3, 2, 5, 2], [6, 4, 3], [78], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 5, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302154597605004, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [2, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [24, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [4, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302154597605004, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [20, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 2, 5, 2], [2, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 7, 4, 3, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1208474992.83626, 23722586050.865673, 109728560856.33708, 304402169959.87427, 655429172594.4578, 1198477117136.222], "accuracy": [0.09893012791872025, 0.09760929644107819, 0.09338264167308807, 0.10249637067317963, 0.10302469879388809, 0.1026284471154213], "val_loss": [4627810742.857142, 37011275776.0, 124900657444.57143, 296046474971.4286, 578201546166.8572, 999114482834.2858], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 2, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [29, 95, 54, 66], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [6, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [1, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, beta)", "other_info": {"loss": [2.302800060467965, 2.303012861410042, 2.303337839663446, 2.3021184532728336, 2.3025238692815577, 2.303076952928093], "accuracy": [0.08836349099874496, 0.08453308790922165, 0.08691058307886124, 0.08691058307886124, 0.09391097724437714, 0.09232597798109055], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 2, 2, 2, 2, 2, 2, 0, 5, 0, 4, 5, 2, 1, 4, 6, 3, 2, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 0, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 9, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 0, 1, 1], [6, 3, 3, 3, 5, 2], [4, 4, 3], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3028279875310784, 2.3033836797369847, 2.3046226721902046, 2.304371533660274, 2.306424519483833, 2.30849886834897], "accuracy": [0.08836349099874496, 0.08321225643157959, 0.08677849918603897, 0.0816272646188736, 0.0870426595211029, 0.08440100401639938], "val_loss": [1.970491545540946, 1.9709689957754952, 1.9718036651611328, 1.9728458268301827, 1.9740420750209264, 1.9753221784319197], "val_accuracy": [0.03566666692495346, 0.03333333507180214, 0.027000000700354576, 0.024666666984558105, 0.021666666492819786, 0.02033333294093609]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [21, 14, 25, 53, 26, 73, 46, 33, 24], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 3, 3, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 3, 0, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1], [6, 3, 3, 3, 5, 2, 2], [5, 4, 3], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 1, 0, 1, 9, 9, 4, 5, 1, 14, 9, 7, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), sigma)), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, grad))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302800060467965, 2.303012861410042, 2.303337839663446, 2.3021184532728336, 2.3025238692815577, 2.303076952928093], "accuracy": [0.08836349099874496, 0.08453308790922165, 0.08691058307886124, 0.08691058307886124, 0.09391097724437714, 0.09232597798109055], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [2, 6, 0, 2, 2, 2, 2, 0, 5, 0, 4, 5, 2, 1, 4, 6, 3, 2, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [0, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [91, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 1, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [14, 95, 54, 66], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1, 1], [6, 3, 9, 2, 5, 2], [5, 4], [78], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 6, 6, 3, 3, 1, 8, 8, 4, 4, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302800060467965, 2.303012861410042, 2.303337839663446, 2.3021184532728336, 2.3025238692815577, 2.303076952928093], "accuracy": [0.08836349099874496, 0.08453308790922165, 0.08691058307886124, 0.08691058307886124, 0.09391097724437714, 0.09232597798109055], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 2, 4, 2, 0, 2, 8, 0, 5, 0, 4, 5, 4, 1, 4, 6, 3, 3, 2, 5, 9, 2, 5, 3, 1, 2, 7, 7, 2, 6, 8, 7, 6, 2, 4, 7, 8, 1, 8, 7, 6, 1, 0], [1, 2, 2, 2, 2, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 1, 0, 2, 2, 3, 1, 2, 3, 3, 2, 2, 2, 3], [76, 14, 25, 53, 26, 73, 46, 33, 24], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 2, 5, 1, 2, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [38, 95, 54, 66], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0], [6, 3, 3, 2, 5, 2], [6, 4, 3], [78], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 2, 0, 3, 0, 2], [84, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 1, 0, 1, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3027999615231525, 2.3030126229914627, 2.3033374078269677, 2.3021178009991536, 2.3025230100803276, 2.3030758103076034], "accuracy": [0.08836349099874496, 0.08453308790922165, 0.08691058307886124, 0.08691058307886124, 0.09391097724437714, 0.09232597798109055], "val_loss": [1.9703850064958846, 1.9703848021371024, 1.9703844615391322, 1.9703843934195382, 1.970384189060756, 1.970383848462786], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]