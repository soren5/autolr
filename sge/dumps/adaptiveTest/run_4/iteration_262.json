[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7591428756713867, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.300270961433464, 2.274177959802648, 2.2282362022671984, 2.1539638748163905, 2.023042338131567, 1.8166009134793435, 1.5781220226176993, 1.412602708796626, 1.3373375743403175, 1.3425722673757752, 1.3275499121860317, 1.1703023262122179, 1.043605554365227, 0.9285517044197126, 0.8933487534286828, 0.8991224981727318, 0.9128084776660061, 0.8928022773479033, 0.8397727567742388, 0.797362772402211, 0.79154349809404, 0.785331359888663, 0.7957823770692745, 0.767922115103916, 0.7580167881218418, 0.726792860016957, 0.715510759166581, 0.6993147851044335, 0.68769671931605, 0.6821232151676556, 0.686326303887975, 0.6826803419395067, 0.6771892255181728, 0.6643402080069192, 0.6544859134573049], "accuracy": [0.09642054885625839, 0.1644432693719864, 0.2801479399204254, 0.34684982895851135, 0.3975696861743927, 0.4415532946586609, 0.4834235906600952, 0.5120856165885925, 0.5406154990196228, 0.5576542019844055, 0.5748249888420105, 0.62660151720047, 0.6532822847366333, 0.6641130447387695, 0.6696605682373047, 0.6808875799179077, 0.6936996579170227, 0.6944921612739563, 0.6999075412750244, 0.7120591998100281, 0.7065116763114929, 0.7156254053115845, 0.7141724824905396, 0.7226257920265198, 0.7195879220962524, 0.7195879220962524, 0.7290979027748108, 0.7300224304199219, 0.7413815855979919, 0.7456082701683044, 0.7421740889549255, 0.7499669790267944, 0.7475894689559937, 0.7499669790267944, 0.7559106945991516], "val_loss": [1.9572937147957938, 1.9231245177132743, 1.8687034334455217, 1.7739776883806502, 1.606097970690046, 1.3590977532523019, 1.1064532484327043, 0.9307988711765834, 0.8181221314838955, 0.7599794524056571, 0.7050538744245257, 0.6776176350457328, 0.6350592715399606, 0.626795904976981, 0.6506801503045219, 0.6837805850165231, 0.6857772043773106, 0.642524242401123, 0.5944176742008754, 0.5682233231408256, 0.5616768768855503, 0.5547336680548531, 0.5419333321707589, 0.5352859837668282, 0.5328325714383807, 0.5280463354928153, 0.5216782093048096, 0.5144102573394775, 0.5083199739456177, 0.5061433655875069, 0.5061889546258109, 0.5048340388706752, 0.4978647402354649, 0.4838489975248064, 0.47223845549992155], "val_accuracy": [0.1433333307504654, 0.3606666624546051, 0.4143333435058594, 0.44699999690055847, 0.5023333430290222, 0.5716666579246521, 0.6293333172798157, 0.6650000214576721, 0.6753333210945129, 0.6916666626930237, 0.7133333086967468, 0.7226666808128357, 0.7293333411216736, 0.734666645526886, 0.7393333315849304, 0.7476666569709778, 0.7436666488647461, 0.7406666874885559, 0.7396666407585144, 0.7459999918937683, 0.7526666522026062, 0.7596666812896729, 0.7593333125114441, 0.7596666812896729, 0.7573333382606506, 0.7630000114440918, 0.7723333239555359, 0.7756666541099548, 0.7826666831970215, 0.7853333353996277, 0.7829999923706055, 0.7796666622161865, 0.7773333191871643, 0.7776666879653931, 0.7773333191871643]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7591428756713867, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 11, 8, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.3002709929244927, 2.274177959802648, 2.228236139285141, 2.1539638748163905, 2.023042515803952, 1.8166013947409914, 1.5781233360612743, 1.4126037433399043, 1.3373370189172968, 1.3425654075590059, 1.3275384326038453, 1.1702967138653182, 1.0436088971536803, 0.9285487197000022, 0.8933473866707959, 0.8991198355039003, 0.9128076871782009, 0.892806973392465, 0.8397753418098115, 0.7973478391674044, 0.7914838180046323, 0.7852757984321855, 0.7957401363179826, 0.7678824871711569, 0.7579793336526546, 0.7267555959661481, 0.7155512172815869, 0.6993823482171183, 0.6877379103060238, 0.6821190650122056, 0.6862148654034204, 0.6825814317671253, 0.6771360400125823, 0.6643253588374138, 0.6544621351404182], "accuracy": [0.09642054885625839, 0.1644432693719864, 0.2801479399204254, 0.34684982895851135, 0.3975696861743927, 0.4415532946586609, 0.4834235906600952, 0.5119535326957703, 0.5406154990196228, 0.5576542019844055, 0.5748249888420105, 0.62660151720047, 0.6532822847366333, 0.6641130447387695, 0.6696605682373047, 0.6808875799179077, 0.6934354901313782, 0.6944921612739563, 0.6997754573822021, 0.7119271159172058, 0.7067758440971375, 0.715889573097229, 0.7145687341690063, 0.7226257920265198, 0.7199841737747192, 0.7193237543106079, 0.7288337349891663, 0.7301545143127441, 0.7411174178123474, 0.7456082701683044, 0.7421740889549255, 0.7500990629196167, 0.7475894689559937, 0.7499669790267944, 0.7560427784919739], "val_loss": [1.9572937147957938, 1.9231245177132743, 1.8687034334455217, 1.7739776883806502, 1.60609803880964, 1.3590987750462122, 1.1064552920205253, 0.9308015278407505, 0.8181235619953701, 0.7599772725786481, 0.7050497531890869, 0.6776138373783657, 0.6350466694150653, 0.6267774786267962, 0.6506769827433995, 0.6837846892220634, 0.6857796396527972, 0.6425421748842511, 0.5944213356290545, 0.5681965862001691, 0.5616145304271153, 0.5546947036470685, 0.5418832302093506, 0.5352075270244053, 0.532743113381522, 0.5279931000300816, 0.5216559001377651, 0.5144019637789045, 0.5082932370049613, 0.5060795375279018, 0.5061335563659668, 0.504786593573434, 0.4978733573641096, 0.483880843435015, 0.4722956248692104], "val_accuracy": [0.1433333307504654, 0.3606666624546051, 0.4143333435058594, 0.44699999690055847, 0.5023333430290222, 0.5716666579246521, 0.6293333172798157, 0.6650000214576721, 0.6753333210945129, 0.6916666626930237, 0.7133333086967468, 0.7226666808128357, 0.7293333411216736, 0.734666645526886, 0.7393333315849304, 0.7476666569709778, 0.7440000176429749, 0.7406666874885559, 0.7396666407585144, 0.7459999918937683, 0.753000020980835, 0.7590000033378601, 0.7599999904632568, 0.7596666812896729, 0.7573333382606506, 0.7636666893959045, 0.7723333239555359, 0.7760000228881836, 0.7826666831970215, 0.7853333353996277, 0.7829999923706055, 0.7796666622161865, 0.777999997138977, 0.7770000100135803, 0.7770000100135803]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [9, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.7297142744064331, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3004965931118093, 2.2757668017774226, 2.232431732920167, 2.162589920037899, 2.035363198271391, 1.8178467393598505, 1.5600012644107835, 1.4088406927628745, 1.3571132951645, 1.3377433938278482, 1.1776820117015534, 0.9825322118811305, 0.9143821582534704, 0.9255904764736081, 0.9150072587574037, 0.859401556360975, 0.8323164547376188, 0.8304395590633402, 0.8190339554680368, 0.8174719720106587, 0.8115613935268031, 0.7763075452391907, 0.7568769031559173], "accuracy": [0.09602430462837219, 0.16021661460399628, 0.2735437750816345, 0.3399814963340759, 0.39202219247817993, 0.431779146194458, 0.47946110367774963, 0.5102364420890808, 0.5435213446617126, 0.5659754276275635, 0.6116761565208435, 0.6577730774879456, 0.6621318459510803, 0.6622639298439026, 0.6798309087753296, 0.6933034062385559, 0.6975300312042236, 0.7000396251678467, 0.6913221478462219, 0.6884163022041321, 0.6966054439544678, 0.7045304179191589, 0.7128516435623169], "val_loss": [1.9580717086791992, 1.9257792745317732, 1.8744638987949915, 1.7845783233642578, 1.6134052276611328, 1.3349854605538505, 1.0504979065486364, 0.863923328263419, 0.7770326648439679, 0.7088199513299125, 0.6745441811425346, 0.6350112983158657, 0.6697639056614467, 0.6919124296733311, 0.6503036873681205, 0.5964053869247437, 0.5732567310333252, 0.5651550803865705, 0.5658775227410453, 0.5793048483984811, 0.564668093408857, 0.5465398345674787, 0.5392748628343854], "val_accuracy": [0.1340000033378601, 0.35633334517478943, 0.4090000092983246, 0.4403333365917206, 0.49300000071525574, 0.5669999718666077, 0.6370000243186951, 0.6690000295639038, 0.6783333420753479, 0.7076666951179504, 0.718999981880188, 0.7369999885559082, 0.7206666469573975, 0.7383333444595337, 0.7366666793823242, 0.734000027179718, 0.753000020980835, 0.7563333511352539, 0.7419999837875366, 0.7306666374206543, 0.7493333220481873, 0.753333330154419, 0.7559999823570251]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [12, 63, 56, 12]], "fitness": -0.6980000138282776, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302722809699233, 2.292010626977445, 2.275872885007837, 2.253039751857767, 2.220671228996562, 2.179178854162982, 2.116613449941395, 2.0291636419050634, 1.906722747024654, 1.7537255247334258, 1.596444348019222, 1.465132506421812, 1.407020130303589, 1.371206730348307, 1.3653979608962532, 1.338586413786317, 1.2418631517561183, 1.140123029190394, 1.0328115353321654, 0.9450190735609618, 0.9191124297766055, 0.9185339359480708, 0.9191294261382917, 0.91162022858122, 0.9000142260691146, 0.8608784394855623, 0.8374896064300296, 0.8202034229568408, 0.8113103150345189, 0.8227320546644743, 0.8148738620161868, 0.8179743556125431, 0.8201966269881324, 0.7992776627349123, 0.790800935005578, 0.7779132540845412, 0.7579787736949258, 0.7311855735890287, 0.7259452871091614, 0.7324129509777835, 0.7437493521240425, 0.7379768144468731, 0.7320854171880279, 0.7261229316713693, 0.7161964046452827, 0.7232268508462196, 0.6927895901020823, 0.6931832807568857, 0.6906632599876604, 0.6883327661645788, 0.6858007317646824, 0.6807805488153991, 0.6777694893629638, 0.6685630061985117, 0.6655767892550453, 0.6609806196800769, 0.6464862115804183, 0.6443894609263734, 0.6319589072041555, 0.6270284666487286, 0.6230799881159559, 0.6293516509395313, 0.6178648169518399, 0.6057300113683773, 0.6166316588730183, 0.6090876545573521, 0.6112994361925181, 0.6114947754929583, 0.6058339669467939, 0.5941811605782131, 0.5882921250284372, 0.5882080722840832, 0.579801273493955, 0.576157417193128, 0.5809696684691726, 0.5719347296767562, 0.5646452752433165, 0.5684572150993499, 0.5615416716716828, 0.5712550246578559, 0.5616673401097706, 0.5614025527617525, 0.5492457287375481, 0.5469909558568916, 0.5460441441678289, 0.5470713376132899, 0.5413637401137795, 0.5413256527575772], "accuracy": [0.09126931428909302, 0.11702549457550049, 0.16800950467586517, 0.22823932766914368, 0.2891295850276947, 0.33364152908325195, 0.37670058012008667, 0.3901730179786682, 0.42345792055130005, 0.4410249590873718, 0.45449742674827576, 0.4909523129463196, 0.5139347314834595, 0.5370492935180664, 0.5486725568771362, 0.5639941692352295, 0.5963544845581055, 0.6250165104866028, 0.6456214785575867, 0.6593580842018127, 0.6567164063453674, 0.6540747880935669, 0.6684718132019043, 0.6820763349533081, 0.6836613416671753, 0.6859067678451538, 0.6915863156318665, 0.7003037929534912, 0.7024171352386475, 0.698718786239624, 0.7010962963104248, 0.6972658634185791, 0.6970016956329346, 0.7053229212760925, 0.7043983340263367, 0.7136441469192505, 0.7100779414176941, 0.719852089881897, 0.7265883088111877, 0.7206445932388306, 0.7217012047767639, 0.7232862114906311, 0.7289658188819885, 0.7341170310974121, 0.7317395210266113, 0.7325320243835449, 0.7372870445251465, 0.7403249144554138, 0.7417778372764587, 0.7387399077415466, 0.7375511527061462, 0.7417778372764587, 0.7434949278831482, 0.7460044622421265, 0.7503632307052612, 0.7498348951339722, 0.7537974119186401, 0.7604015469551086, 0.761590301990509, 0.7663452625274658, 0.7586844563484192, 0.7572315335273743, 0.7672698497772217, 0.7711002230644226, 0.7696473598480225, 0.7683265209197998, 0.7716285586357117, 0.7712323069572449, 0.7753269076347351, 0.778761088848114, 0.7788931727409363, 0.7821952104568481, 0.78113853931427, 0.7840443849563599, 0.7836481332778931, 0.7824593782424927, 0.7902522683143616, 0.7882710099220276, 0.7825914621353149, 0.7868181467056274, 0.7873464822769165, 0.7891955971717834, 0.7898560166358948, 0.7967243194580078, 0.7938185334205627, 0.7926297783851624, 0.7889314293861389, 0.793422281742096], "val_loss": [1.965850761958531, 1.9535253388541085, 1.934197153363909, 1.9083935873849052, 1.874758243560791, 1.8276746613638741, 1.758193016052246, 1.6553102220807756, 1.510596854346139, 1.3313148362295968, 1.1508431775229317, 1.0030207633972168, 0.8936972277505058, 0.8135828290666852, 0.773706180708749, 0.726489612034389, 0.7059110062462943, 0.689645630972726, 0.6483786106109619, 0.6431677000863212, 0.6624147891998291, 0.6752740655626569, 0.6861874716622489, 0.6778991733278547, 0.6456484283719744, 0.6098623446055821, 0.5859425749097552, 0.5737343856266567, 0.5667381797518048, 0.562785131590707, 0.561333417892456, 0.561066882950919, 0.5624031169073922, 0.5610267094203404, 0.5521527869360787, 0.5399912084851947, 0.5310467992510114, 0.5297766413007464, 0.5344991173063006, 0.539126821926662, 0.5409115212304252, 0.5402625628880092, 0.5380189759390694, 0.5335419859204974, 0.5262622322354998, 0.5176112311226981, 0.5083877870014736, 0.5006081887653896, 0.49562491689409527, 0.4927807535443987, 0.49015939235687256, 0.4850705180849348, 0.4769700765609741, 0.4684739283152989, 0.46206908566611155, 0.4583456175667899, 0.4553341695240566, 0.4519261632646833, 0.4479376588548933, 0.44428159509386334, 0.4421872922352382, 0.4418105738503592, 0.44233390263148714, 0.44249565260750906, 0.44120441164289204, 0.4385214362825666, 0.4351599897657122, 0.4318373032978603, 0.42933894055230276, 0.42765770639692036, 0.4266681330544608, 0.42575483662741526, 0.4233012965747288, 0.419343250138419, 0.4147582820483616, 0.410614081791469, 0.40800940138953073, 0.40680913414273945, 0.40570201192583355, 0.40323822838919504, 0.39956135409218924, 0.39619352987834383, 0.39460968119757517, 0.39497253724506926, 0.3963029554912022, 0.39730487551007954, 0.3969334789684841, 0.3948711667742048], "val_accuracy": [0.06933332979679108, 0.18766666948795319, 0.3310000002384186, 0.37299999594688416, 0.4050000011920929, 0.42266666889190674, 0.453000009059906, 0.48100000619888306, 0.5223333239555359, 0.5696666836738586, 0.6046666502952576, 0.6476666927337646, 0.6666666865348816, 0.6736666560173035, 0.6846666932106018, 0.7023333311080933, 0.7080000042915344, 0.7133333086967468, 0.7229999899864197, 0.7300000190734863, 0.6986666917800903, 0.7103333473205566, 0.734666645526886, 0.7409999966621399, 0.7363333106040955, 0.7296666502952576, 0.7369999885559082, 0.7450000047683716, 0.7523333430290222, 0.7526666522026062, 0.746999979019165, 0.7509999871253967, 0.7559999823570251, 0.7576666474342346, 0.7593333125114441, 0.7570000290870667, 0.7613333463668823, 0.7636666893959045, 0.762333333492279, 0.7663333415985107, 0.7676666378974915, 0.7649999856948853, 0.7689999938011169, 0.7670000195503235, 0.7673333287239075, 0.7693333625793457, 0.7716666460037231, 0.7756666541099548, 0.7760000228881836, 0.777999997138977, 0.7820000052452087, 0.7836666703224182, 0.7900000214576721, 0.7946666479110718, 0.7963333129882812, 0.7960000038146973, 0.7963333129882812, 0.7983333468437195, 0.79666668176651, 0.79666668176651, 0.796999990940094, 0.796999990940094, 0.8019999861717224, 0.8043333292007446, 0.809333324432373, 0.8096666932106018, 0.8100000023841858, 0.8140000104904175, 0.812666654586792, 0.8119999766349792, 0.8153333067893982, 0.8143333196640015, 0.812666654586792, 0.8153333067893982, 0.8233333230018616, 0.8220000267028809, 0.82833331823349, 0.8299999833106995, 0.8293333053588867, 0.8309999704360962, 0.8323333263397217, 0.8330000042915344, 0.8353333473205566, 0.8333333134651184, 0.8306666612625122, 0.8296666741371155, 0.8286666870117188, 0.82833331823349]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [66, 66, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [2, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.square(alpha), tf.math.negative(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 0, 6, 2, 5, 8, 9, 4, 0, 8], [1, 2, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 12, 8, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 9, 0, 4, 0, 8], [0, 1, 2, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2973229230402827, 2.3132782215770398, 2.315922658551465, 2.3139518772559065, 2.31474295819456, 2.314326570837363, 2.3151723703672356, 2.3220446796905976, 2.321909436491801], "accuracy": [0.10368511080741882, 0.09919429570436478, 0.09853387624025345, 0.09800554811954498, 0.09879804402589798, 0.09800554811954498, 0.10500594228506088, 0.10249637067317963, 0.09813763201236725], "val_loss": [1.9815059389386858, 1.9757893426077706, 1.9771785736083984, 1.9824623380388533, 1.991492748260498, 1.9857557160513741, 1.9818830490112305, 1.9813107081821986, 1.9895933696201868], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.0963333323597908, 0.10366666316986084, 0.10000000149011612, 0.10100000351667404, 0.10000000149011612, 0.0963333323597908, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [4, 5, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [3, 6, 1, 6, 2, 5, 0, 0, 4, 0, 8, 3, 6, 3, 6, 9, 4, 4, 3, 1, 5, 7, 6, 1, 3, 7, 8, 2, 2, 4, 4, 2, 3, 0, 9], [1, 1, 0, 0, 3, 0, 2, 2, 1, 2, 1, 2, 1, 0, 3, 1, 3, 1, 3, 1, 2, 3, 2, 2], [40, 63, 56, 12, 79, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 59, 35, 24, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.subtract(beta, alpha), tf.math.square(beta)), tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma), alpha)))), sigma))), tf.math.sqrt(tf.math.add(tf.math.add(tf.math.pow(tf.math.pow(alpha, tf.math.add(tf.math.multiply(sigma, tf.math.negative(alpha)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), beta), sigma), beta))), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [0, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [4, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2199703.8156885067, 41305298.56980584, 190540605.92471272, 524893146.19680357, 1137896471.6185443, 2086404503.7537973], "accuracy": [0.09496764093637466, 0.09391097724437714, 0.10606260597705841, 0.10276053100824356, 0.09602430462837219, 0.10130762308835983], "val_loss": [8075128.285714285, 64435293.71428572, 217285728.0, 514831488.0, 1005279122.2857143, 1736828891.4285715], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [41, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 0, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 6, 6, 2, 5, 0, 0, 4, 0, 8], [1, 0, 3, 0, 3, 0, 2], [17, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304658106336693, 2.3063406596613945, 2.325564931963476, 2.3957906066308547, 2.637341632504174, 3.1962827554137685, 4.313644265643578, 6.248586021756389, 9.19146910949453, 13.562601538413645, 19.789582550407573], "accuracy": [0.08849557489156723, 0.09047681838274002, 0.09298639744520187, 0.0952318087220192, 0.09694888442754745, 0.09972262382507324, 0.10249637067317963, 0.1018359512090683, 0.09774138033390045, 0.09932637959718704, 0.09774138033390045], "val_loss": [1.971334797995431, 1.9752488817487444, 1.9903428213936942, 2.054399217878069, 2.2393979345049178, 2.6838908195495605, 3.571138381958008, 5.066544124058315, 7.327527727399554, 10.57023102896554, 15.089019775390625], "val_accuracy": [0.026000000536441803, 0.04766666516661644, 0.09399999678134918, 0.09700000286102295, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 0, 3, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [2, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [66, 66, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(grad, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [95, 63, 12, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 3, 3, 0, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023385681952973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(sigma)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7], [5, 5, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [40, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1], [6, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 2, 1, 0, 2, 0, 2, 2], [96, 12, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 7, 1, 2, 5, 2, 0, 2, 2, 6, 7, 6, 9, 1], [5, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45, 25], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 4, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 14, 11, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), beta))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3040119333195412, 2.301674478294323, 2.3020611928832246, 2.3027544050893103, 2.302527947810663, 2.3033834119057848], "accuracy": [0.08875974267721176, 0.09377889335155487, 0.09417514503002167, 0.09457138925790787, 0.08651433140039444, 0.08585391938686371], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]