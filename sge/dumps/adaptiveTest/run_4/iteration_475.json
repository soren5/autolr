[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.266016426906452, 2.1309194824620326, 1.8150848533814026, 1.4341833706403437, 1.2124400446049965, 1.0771266457080653, 0.9978659100473328, 0.9449271577507702, 0.8917748392958761, 0.8574480293622468, 0.8498436114838755, 0.812682035474446, 0.8063578271138402, 0.7889645329052037, 0.753809389988067, 0.7534718475384624, 0.7397748247554604, 0.7366513719238768, 0.7199033013093646, 0.7043027222794218, 0.7097879784800956, 0.7027879020462671, 0.6977784679534649, 0.6829968964765415, 0.6673585786134213, 0.6689293114831341, 0.6622242214436922, 0.6494636668379218, 0.6575856019461459, 0.6454323981306131, 0.6362472993035468, 0.6335182318424804, 0.6376785352214012, 0.6257257693715461, 0.6322116072167495, 0.6202339123127057, 0.6098644604237009, 0.606242449662122, 0.6042749384422312, 0.605741231763651, 0.6050562573430277], "accuracy": [0.18518029153347015, 0.3529256284236908, 0.4585919976234436, 0.5276713967323303, 0.5840708017349243, 0.6160348653793335, 0.6507726907730103, 0.6670188903808594, 0.6789063811302185, 0.6940959095954895, 0.6968696117401123, 0.7046625018119812, 0.7088891863822937, 0.7071720957756042, 0.7304186820983887, 0.7206445932388306, 0.7280412316322327, 0.7280412316322327, 0.739400327205658, 0.7397965788841248, 0.7347774505615234, 0.7383436560630798, 0.7485140562057495, 0.7494386434555054, 0.7548540234565735, 0.7544577717781067, 0.7531369924545288, 0.7629110813140869, 0.7574957013130188, 0.7642319202423096, 0.769911527633667, 0.7637035846710205, 0.7642319202423096, 0.765949010848999, 0.7651565074920654, 0.7705719470977783, 0.7689869403839111, 0.7751948237419128, 0.7749306559562683, 0.7746664881706238, 0.7749306559562683], "val_loss": [1.879955564226423, 1.665546076638358, 1.2595869132450648, 0.958639110837664, 0.806180613381522, 0.7253343207495553, 0.6858959368297032, 0.6489394903182983, 0.6149369478225708, 0.597266435623169, 0.5790069443838937, 0.5607310363224575, 0.5460070031029838, 0.5389986378805978, 0.5312423535755703, 0.5220076867512294, 0.5131610121045794, 0.507812636239188, 0.507633992603847, 0.5089889083589826, 0.49363246985844206, 0.4854181153433664, 0.4874789203916277, 0.4929273639406477, 0.46336344310215544, 0.480663674218314, 0.46159742559705463, 0.46341703619275776, 0.46739634445735384, 0.4508441516331264, 0.4541055474962507, 0.453864506312779, 0.4448511600494385, 0.44023495061056955, 0.44457413469042095, 0.43263754674366545, 0.43334104333605084, 0.4328806570598057, 0.43048833097730366, 0.42792134625571115, 0.44369408062526156], "val_accuracy": [0.4363333284854889, 0.5306666493415833, 0.6016666889190674, 0.6449999809265137, 0.6823333501815796, 0.7046666741371155, 0.6893333196640015, 0.7263333201408386, 0.7453333139419556, 0.746666669845581, 0.7543333172798157, 0.7523333430290222, 0.7696666717529297, 0.7703333497047424, 0.7683333158493042, 0.7730000019073486, 0.778333306312561, 0.7870000004768372, 0.7806666493415833, 0.765999972820282, 0.7886666655540466, 0.7926666736602783, 0.7916666865348816, 0.7770000100135803, 0.7996666431427002, 0.7963333129882812, 0.8040000200271606, 0.8069999814033508, 0.7850000262260437, 0.8056666851043701, 0.8026666641235352, 0.8063333630561829, 0.8086666464805603, 0.8186666369438171, 0.8016666769981384, 0.8253333568572998, 0.8153333067893982, 0.8133333325386047, 0.8220000267028809, 0.8136666417121887, 0.8073333501815796]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [15, 63, 57, 12]], "fitness": -0.5634285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014170331505266, 2.2991404977409737, 2.2973384034632063, 2.2940783983428856, 2.2937961849695845, 2.2923046827725666, 2.2898812676937257, 2.289285513482719, 2.286279785949572, 2.2858175605342623, 2.2835621916307765, 2.278214622875955, 2.278844808968476, 2.275552389030018, 2.2753510614663948, 2.2716877339869095, 2.2693396588641543, 2.2673033110422467, 2.2660023034319603, 2.2643640047019704, 2.262105019148299, 2.2603815041827864, 2.259029772996178, 2.256237312157424, 2.2536451474566266, 2.25278919714002, 2.249033326155411, 2.2477646422597157, 2.245431861699832, 2.243693726173938, 2.2402446664571602, 2.2387192717884603, 2.2346910487517486, 2.2320264432849415, 2.228253250219063, 2.226115377934035, 2.225457981734653, 2.222488268097835, 2.2182210747906876, 2.217288169909966, 2.2129754020301435, 2.2104875542279547, 2.2085231759717923, 2.20465288290085, 2.1992530807953123, 2.198980446741046, 2.1933145392383517, 2.192461602739166, 2.1886154219081075, 2.184755097731718, 2.1823835382372114, 2.175327443805715, 2.1739223020077696, 2.167131335082512, 2.165993846906663, 2.1591944754037087, 2.1554245406515986, 2.1527101244704125, 2.148671871887427, 2.1426815478053185, 2.137898658733043, 2.1324877282962538, 2.1268545953022286, 2.121492772637074, 2.119245955626317, 2.111848466290207, 2.108644412351464, 2.1014003933790795, 2.098287092585999, 2.091675132288673, 2.0846090277723586, 2.0798751246014353, 2.072511884435891, 2.06515322227866, 2.0616974244894304, 2.0539249909977477, 2.0468709765487043, 2.039900339259101, 2.0304475555865835, 2.0256956506635158, 2.0172410865328203, 2.009602318759828, 2.0033057396989125, 1.9934226071215766, 1.9850846401625746, 1.980799405566296, 1.973014887597, 1.9667433985094305, 1.957916905804081, 1.9496935824393093, 1.9424844195640885, 1.9295720723736256, 1.9213955560459233, 1.9111165585629362, 1.904685558360786, 1.892829883840216, 1.8857464701067173, 1.8790267490676176, 1.865584939745801, 1.856509409686436], "accuracy": [0.08968432247638702, 0.10130762308835983, 0.10896842926740646, 0.10606260597705841, 0.11451591551303864, 0.11676132678985596, 0.12468630075454712, 0.12349755316972733, 0.12812046706676483, 0.1306300312280655, 0.1372341811656952, 0.15572579205036163, 0.14978206157684326, 0.16378284990787506, 0.16549994051456451, 0.1698586642742157, 0.17778365314006805, 0.1826707124710083, 0.18623696267604828, 0.19455818831920624, 0.20552106201648712, 0.19759608805179596, 0.20776647329330444, 0.20961563289165497, 0.22374852001667023, 0.21952186524868011, 0.23193766176700592, 0.22982433438301086, 0.2355038970708847, 0.23761722445487976, 0.2479196935892105, 0.24805177748203278, 0.26139214634895325, 0.26218464970588684, 0.2763175368309021, 0.26839256286621094, 0.26680755615234375, 0.2743362784385681, 0.27737417817115784, 0.2810725271701813, 0.2891295850276947, 0.29612997174263, 0.29824328422546387, 0.2989037036895752, 0.3121120035648346, 0.30365869402885437, 0.32043322920799255, 0.3163386583328247, 0.3136970102787018, 0.31779158115386963, 0.3225465714931488, 0.33403778076171875, 0.32743361592292786, 0.3399814963340759, 0.3415665030479431, 0.349359393119812, 0.34803855419158936, 0.3509443998336792, 0.3439439833164215, 0.35926562547683716, 0.3630960285663605, 0.35781270265579224, 0.3687755763530731, 0.3625676929950714, 0.368511438369751, 0.37643641233444214, 0.37485140562057495, 0.37247392535209656, 0.3859463632106781, 0.3763043284416199, 0.389380544424057, 0.3855501115322113, 0.3871351182460785, 0.3980979919433594, 0.39043718576431274, 0.4007396697998047, 0.3932109475135803, 0.4072117209434509, 0.4091929793357849, 0.40985339879989624, 0.41566503047943115, 0.41645753383636475, 0.41487252712249756, 0.4213446080684662, 0.4270241856575012, 0.41830670833587646, 0.4177783727645874, 0.4216087758541107, 0.4270241856575012, 0.4237220883369446, 0.43059042096138, 0.4371945559978485, 0.43508124351501465, 0.43270373344421387, 0.43864747881889343, 0.4447232782840729, 0.44485536217689514, 0.4461762011051178, 0.4515916109085083, 0.4507991075515747], "val_loss": [1.9685241154261999, 1.966693673815046, 1.964879035949707, 1.963066577911377, 1.9612547329493932, 1.9594505173819405, 1.9576623099190849, 1.9558418137686593, 1.954033034188407, 1.9522263663155692, 1.950411251613072, 1.9485632351466589, 1.946730613708496, 1.944878033229283, 1.9430358750479562, 1.9411733491080148, 1.9392977442060197, 1.9374079023088728, 1.9354746001107352, 1.9335316249302454, 1.9315712111336845, 1.9295806203569685, 1.9275574684143066, 1.9255114964076452, 1.9234412738255091, 1.9213483674185616, 1.9192007609776087, 1.9170237949916296, 1.9148236683436803, 1.9125820568629675, 1.9103009360177177, 1.9079771723066057, 1.9055987766810827, 1.9031707218715124, 1.9006682123456682, 1.8981542587280273, 1.8956170082092285, 1.8930067334856306, 1.8903359004429408, 1.8876137733459473, 1.8848144667489188, 1.881948402949742, 1.879042080470494, 1.8760560580662318, 1.872969695499965, 1.8698668479919434, 1.8666304179600306, 1.863361086164202, 1.859968594142369, 1.856539181300572, 1.8530232565743583, 1.849363190787179, 1.8456841196332658, 1.8418398584638322, 1.8379545892987932, 1.8339369637625558, 1.8298584393092565, 1.825676441192627, 1.8214164461408342, 1.8170360837663924, 1.81255156653268, 1.807915210723877, 1.8031860760280065, 1.7983369827270508, 1.7934575762067522, 1.7883862086704798, 1.7832446098327637, 1.777977125985282, 1.7725804192679269, 1.7670886175973075, 1.7614233153206962, 1.7556962966918945, 1.749814169747489, 1.743769986288888, 1.7376460347856795, 1.7313572338649206, 1.724949632372175, 1.7183668272835868, 1.7116243498665946, 1.7047772748129708, 1.697793926511492, 1.690676280430385, 1.6834727696010046, 1.676069702420916, 1.6684962681361608, 1.6608423164912633, 1.653089932032994, 1.6452178955078125, 1.6372042383466447, 1.6291041374206543, 1.6209229741777693, 1.6124879292079382, 1.6039728096553258, 1.5953198160443987, 1.5865611008235387, 1.577643871307373, 1.5687459877559118, 1.5597514084407262, 1.55057954788208, 1.5412841183798653], "val_accuracy": [0.04933333396911621, 0.06499999761581421, 0.07900000363588333, 0.09266666322946548, 0.10733333230018616, 0.125, 0.14033333957195282, 0.16466666758060455, 0.18333333730697632, 0.19766665995121002, 0.21433334052562714, 0.23000000417232513, 0.24566666781902313, 0.26233333349227905, 0.27433332800865173, 0.2893333435058594, 0.29866665601730347, 0.3100000023841858, 0.3186666667461395, 0.32866665720939636, 0.3383333384990692, 0.34599998593330383, 0.35233333706855774, 0.36033332347869873, 0.36633333563804626, 0.3723333477973938, 0.37599998712539673, 0.38066667318344116, 0.38600000739097595, 0.3889999985694885, 0.39366665482521057, 0.39533331990242004, 0.39666667580604553, 0.40166667103767395, 0.4059999883174896, 0.4099999964237213, 0.41600000858306885, 0.4193333387374878, 0.42366665601730347, 0.4273333251476288, 0.43166667222976685, 0.4359999895095825, 0.4359999895095825, 0.43933331966400146, 0.44200000166893005, 0.44433334469795227, 0.44733333587646484, 0.44866666197776794, 0.45233333110809326, 0.45399999618530273, 0.4569999873638153, 0.45766666531562805, 0.4593333303928375, 0.4606666564941406, 0.46133333444595337, 0.46266666054725647, 0.46666666865348816, 0.46966665983200073, 0.4723333418369293, 0.4749999940395355, 0.47866666316986084, 0.47999998927116394, 0.4830000102519989, 0.48633334040641785, 0.4906666576862335, 0.49399998784065247, 0.4976666569709778, 0.49966666102409363, 0.5019999742507935, 0.5043333172798157, 0.5083333253860474, 0.5096666812896729, 0.512666642665863, 0.5166666507720947, 0.5206666588783264, 0.5236666798591614, 0.5270000100135803, 0.5289999842643738, 0.531333327293396, 0.5339999794960022, 0.5366666913032532, 0.5396666526794434, 0.5423333048820496, 0.5440000295639038, 0.5426666736602783, 0.5429999828338623, 0.5453333258628845, 0.550000011920929, 0.5509999990463257, 0.5529999732971191, 0.5563333630561829, 0.5586666464805603, 0.5609999895095825, 0.562333345413208, 0.5646666884422302, 0.565666675567627, 0.5673333406448364, 0.5693333148956299, 0.5713333487510681, 0.5726666450500488]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [2, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [15, 63, 57, 12]], "fitness": -0.5634285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014170331505266, 2.2991404977409737, 2.2973384034632063, 2.2940783983428856, 2.2937961849695845, 2.2923046827725666, 2.2898812676937257, 2.289285513482719, 2.28627984893163, 2.28581762351632, 2.2835621556680215, 2.2782146858580123, 2.278844777477447, 2.275552339557612, 2.2753510614663948, 2.2716877339869095, 2.2693396273731254, 2.2673033110422467, 2.2660023979050465, 2.2643640047019704, 2.262105050639328, 2.2603815356738153, 2.259029835978236, 2.256237249175366, 2.2536452734207417, 2.2527892645938032, 2.2490333441367882, 2.2477647097134996, 2.2454319561729186, 2.243693807137373, 2.240244715929567, 2.238719303279489, 2.2346910172607197, 2.2320264567945927, 2.228253137764599, 2.226115346443006, 2.225457869280189, 2.2224879172247918, 2.2182208678631374, 2.2172879629824154, 2.212975019666072, 2.2104870999383732, 2.2085226721153313, 2.2046525950098648, 2.1992528288670816, 2.198980181303164, 2.193314426783888, 2.1924614093212673, 2.1886150440157617, 2.184754845803487, 2.1823831558731395, 2.1753270209126896, 2.173921964644378, 2.1671309977191204, 2.1659934510329397, 2.1591940345293055, 2.155423712941398, 2.152709346232618, 2.148671345577862, 2.142680976495074, 2.137897947949032, 2.1324871749673866, 2.1268539969726814, 2.121492201326829, 2.1192450873871613, 2.111847683580686, 2.108643778059162, 2.1013998985605435, 2.0982862424226942, 2.0916740661598925, 2.084607669280867, 2.0798737885630474, 2.0725107733064307, 2.0651519131651015, 2.0616962459061865, 2.0539237583758982, 2.0468696270006648, 2.0398989582200326, 2.030446399550916, 2.0256943551540814, 2.0172393996213893, 2.009600568866339, 2.003304421641902, 1.993420904464631, 1.985083031931479, 1.980797511774551, 1.973013184987291, 1.9667415203214904, 1.9579147375837656, 1.9496915491265612, 1.9424825729616504, 1.9295703337539252, 1.9213934260714622, 1.9111143274077995, 1.904683399036686, 1.892826984618649, 1.8857440679867852, 1.8790244840438797, 1.8655826567406857, 1.8565070165099564], "accuracy": [0.08968432247638702, 0.10130762308835983, 0.10896842926740646, 0.10606260597705841, 0.11451591551303864, 0.11676132678985596, 0.12468630075454712, 0.12349755316972733, 0.12812046706676483, 0.1306300312280655, 0.1372341811656952, 0.15572579205036163, 0.14978206157684326, 0.16378284990787506, 0.16549994051456451, 0.1698586642742157, 0.17778365314006805, 0.1826707124710083, 0.18623696267604828, 0.19455818831920624, 0.20552106201648712, 0.19759608805179596, 0.20776647329330444, 0.20961563289165497, 0.22374852001667023, 0.21952186524868011, 0.23193766176700592, 0.22982433438301086, 0.2355038970708847, 0.23761722445487976, 0.2479196935892105, 0.24805177748203278, 0.26139214634895325, 0.26218464970588684, 0.2763175368309021, 0.26839256286621094, 0.26680755615234375, 0.2743362784385681, 0.27737417817115784, 0.2810725271701813, 0.2891295850276947, 0.29612997174263, 0.29824328422546387, 0.2989037036895752, 0.3121120035648346, 0.30365869402885437, 0.32043322920799255, 0.3163386583328247, 0.3136970102787018, 0.31779158115386963, 0.3225465714931488, 0.33403778076171875, 0.32743361592292786, 0.3399814963340759, 0.3415665030479431, 0.349359393119812, 0.34803855419158936, 0.3509443998336792, 0.3439439833164215, 0.35926562547683716, 0.36322811245918274, 0.35781270265579224, 0.3687755763530731, 0.3625676929950714, 0.368511438369751, 0.37643641233444214, 0.37485140562057495, 0.37247392535209656, 0.3859463632106781, 0.3763043284416199, 0.389380544424057, 0.3855501115322113, 0.3871351182460785, 0.39823007583618164, 0.39043718576431274, 0.4007396697998047, 0.3932109475135803, 0.4072117209434509, 0.4091929793357849, 0.40985339879989624, 0.41566503047943115, 0.41645753383636475, 0.41487252712249756, 0.4213446080684662, 0.4270241856575012, 0.41830670833587646, 0.4177783727645874, 0.4216087758541107, 0.4270241856575012, 0.4237220883369446, 0.43059042096138, 0.43706247210502625, 0.43508124351501465, 0.43270373344421387, 0.43864747881889343, 0.4447232782840729, 0.44485536217689514, 0.44630828499794006, 0.4515916109085083, 0.4507991075515747], "val_loss": [1.9685241154261999, 1.966693673815046, 1.964879035949707, 1.963066646030971, 1.9612547329493932, 1.9594504492623466, 1.9576621736798967, 1.9558418137686593, 1.9540331023080009, 1.9522263663155692, 1.950411251613072, 1.9485630989074707, 1.946730477469308, 1.9448779651096888, 1.9430358069283622, 1.9411732809884208, 1.9392977442060197, 1.9374079023088728, 1.9354745319911413, 1.9335315568106515, 1.9315714154924666, 1.9295808247157507, 1.9275575365339006, 1.925511700766427, 1.9234413419451033, 1.9213484355381556, 1.9192007609776087, 1.9170238631112235, 1.9148236683436803, 1.9125820568629675, 1.9103007997785295, 1.9079771723066057, 1.9055987766810827, 1.9031706537519182, 1.9006680761064803, 1.8981543268476213, 1.8956170082092285, 1.8930066653660365, 1.8903357642037528, 1.8876135008675712, 1.8848140580313546, 1.8819479261125838, 1.8790418761117118, 1.8760558537074499, 1.8729695592607771, 1.8698667117527552, 1.8666304179600306, 1.863361018044608, 1.859968594142369, 1.856539045061384, 1.8530231203351701, 1.849363054547991, 1.8456840515136719, 1.8418397222246443, 1.837954316820417, 1.8339366231645857, 1.8298579624720983, 1.8256759643554688, 1.821415969303676, 1.8170356750488281, 1.8125511578151159, 1.8079146657671248, 1.8031855991908483, 1.7983362334115165, 1.793457099369594, 1.7883857318333216, 1.7832443373543876, 1.7779762404305595, 1.7725795337132044, 1.767087527683803, 1.7614221572875977, 1.755695138658796, 1.7498130798339844, 1.7437688963753837, 1.737644944872175, 1.73135621207101, 1.7249484743390764, 1.7183654989515031, 1.71162291935512, 1.7047757421221053, 1.6977924619402205, 1.6906750542776925, 1.683471611567906, 1.6760681697300501, 1.6684948376246862, 1.6608407156808036, 1.6530882290431432, 1.6452160222189767, 1.637202365057809, 1.6291026728493827, 1.6209211349487305, 1.6124859537397112, 1.603970697947911, 1.5953173637390137, 1.5865587166377477, 1.5776416914803642, 1.5687437398093087, 1.5597490923745292, 1.550577163696289, 1.5412818023136683], "val_accuracy": [0.04933333396911621, 0.06499999761581421, 0.07900000363588333, 0.09266666322946548, 0.10733333230018616, 0.125, 0.14033333957195282, 0.16466666758060455, 0.18333333730697632, 0.19766665995121002, 0.21433334052562714, 0.23000000417232513, 0.24566666781902313, 0.26233333349227905, 0.27433332800865173, 0.2893333435058594, 0.29866665601730347, 0.3100000023841858, 0.3186666667461395, 0.32866665720939636, 0.3383333384990692, 0.34599998593330383, 0.35233333706855774, 0.36033332347869873, 0.36633333563804626, 0.3723333477973938, 0.37599998712539673, 0.38066667318344116, 0.38600000739097595, 0.3889999985694885, 0.39366665482521057, 0.39533331990242004, 0.39666667580604553, 0.40166667103767395, 0.4059999883174896, 0.4099999964237213, 0.41600000858306885, 0.4193333387374878, 0.42366665601730347, 0.4273333251476288, 0.43166667222976685, 0.4359999895095825, 0.4359999895095825, 0.43933331966400146, 0.44200000166893005, 0.44433334469795227, 0.44733333587646484, 0.44866666197776794, 0.45233333110809326, 0.45399999618530273, 0.4569999873638153, 0.45766666531562805, 0.4593333303928375, 0.4606666564941406, 0.46133333444595337, 0.46266666054725647, 0.46666666865348816, 0.46966665983200073, 0.4723333418369293, 0.4749999940395355, 0.47866666316986084, 0.4803333282470703, 0.4830000102519989, 0.48633334040641785, 0.4906666576862335, 0.49399998784065247, 0.4976666569709778, 0.49966666102409363, 0.5019999742507935, 0.5043333172798157, 0.5083333253860474, 0.5096666812896729, 0.512666642665863, 0.5166666507720947, 0.5206666588783264, 0.5239999890327454, 0.5270000100135803, 0.5289999842643738, 0.531333327293396, 0.5339999794960022, 0.5366666913032532, 0.5396666526794434, 0.5423333048820496, 0.5440000295639038, 0.5426666736602783, 0.5429999828338623, 0.5453333258628845, 0.550000011920929, 0.5509999990463257, 0.5529999732971191, 0.5563333630561829, 0.5586666464805603, 0.5609999895095825, 0.562333345413208, 0.5646666884422302, 0.565666675567627, 0.5673333406448364, 0.5693333148956299, 0.5713333487510681, 0.5726666450500488]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [15, 63, 57, 12]], "fitness": -0.5634285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014170331505266, 2.2991404977409737, 2.2973383719721774, 2.2940783983428856, 2.2937961849695845, 2.2923046827725666, 2.2898812676937257, 2.289285513482719, 2.286279785949572, 2.2858175605342623, 2.2835621556680215, 2.2782146543669834, 2.278844808968476, 2.275552452012076, 2.2753510929574237, 2.2716877969689673, 2.2693396588641543, 2.267303279551218, 2.2660023034319603, 2.2643639417199126, 2.262104893184184, 2.26038145471038, 2.259029772996178, 2.2562372176843377, 2.2536451789476555, 2.252789138629688, 2.249033294664382, 2.2477646107686873, 2.2454317987177745, 2.2436936946829094, 2.2402446664571602, 2.2387192402974314, 2.2346910172607197, 2.2320263128491, 2.228252962328077, 2.226115346443006, 2.2254576803340163, 2.2224878542427344, 2.2182207239176446, 2.217287756054865, 2.2129749251929853, 2.2104870054652865, 2.20852254167949, 2.2046523251002568, 2.199252527466445, 2.1989800688487002, 2.193314138892903, 2.1924610269571954, 2.1886147246337475, 2.184754494930444, 2.1823827914904452, 2.1753268274947906, 2.1739216317527124, 2.1671307772819186, 2.1659930056868104, 2.1591935712017984, 2.1554235195234988, 2.152708995359575, 2.148671057686877, 2.142680769567524, 2.137897691549075, 2.1324868420757213, 2.1268536460996383, 2.1214917065082934, 2.119244799496176, 2.111847251744208, 2.1086432202585685, 2.101399565668878, 2.0982859410220573, 2.0916737827406333, 2.0846075433167517, 2.0798734061989754, 2.0725103774327076, 2.0651515352727556, 2.0616956925773193, 2.0539234210125064, 2.0468693391096795, 2.0398987062918024, 2.030445972186164, 2.025694166207909, 2.0172394490937955, 2.009600487902904, 2.003304392386736, 1.9934207942460302, 1.985083009431139, 1.9807975297559286, 1.973013166958677, 1.9667417587400695, 1.9579149939837222, 1.9496915918913784, 1.942482638179571, 1.9295707633545403, 1.921393900625521, 1.9111150696356032, 1.9046841907841323, 1.8928278798298703, 1.8857447022790874, 1.8790248259262339, 1.8655835227439779, 1.8565077407563824], "accuracy": [0.08968432247638702, 0.10130762308835983, 0.10896842926740646, 0.10606260597705841, 0.11451591551303864, 0.11676132678985596, 0.12468630075454712, 0.12349755316972733, 0.12812046706676483, 0.1306300312280655, 0.1372341811656952, 0.15572579205036163, 0.14978206157684326, 0.16378284990787506, 0.16549994051456451, 0.1698586642742157, 0.17778365314006805, 0.1826707124710083, 0.18623696267604828, 0.19455818831920624, 0.20552106201648712, 0.19759608805179596, 0.20776647329330444, 0.20961563289165497, 0.22374852001667023, 0.21952186524868011, 0.23193766176700592, 0.22982433438301086, 0.2355038970708847, 0.23761722445487976, 0.2479196935892105, 0.24805177748203278, 0.26139214634895325, 0.26218464970588684, 0.2763175368309021, 0.26839256286621094, 0.26680755615234375, 0.2743362784385681, 0.27737417817115784, 0.2810725271701813, 0.2891295850276947, 0.29612997174263, 0.29824328422546387, 0.2989037036895752, 0.3121120035648346, 0.30365869402885437, 0.32043322920799255, 0.3163386583328247, 0.3136970102787018, 0.31779158115386963, 0.3225465714931488, 0.33403778076171875, 0.32743361592292786, 0.3399814963340759, 0.3415665030479431, 0.349359393119812, 0.34803855419158936, 0.3509443998336792, 0.3439439833164215, 0.35926562547683716, 0.3630960285663605, 0.35781270265579224, 0.3687755763530731, 0.3625676929950714, 0.368511438369751, 0.37643641233444214, 0.37485140562057495, 0.37247392535209656, 0.3859463632106781, 0.3763043284416199, 0.389380544424057, 0.3855501115322113, 0.3871351182460785, 0.39823007583618164, 0.39043718576431274, 0.4007396697998047, 0.3932109475135803, 0.4072117209434509, 0.4091929793357849, 0.40985339879989624, 0.41566503047943115, 0.41645753383636475, 0.41487252712249756, 0.4213446080684662, 0.4270241856575012, 0.41830670833587646, 0.4177783727645874, 0.4216087758541107, 0.4270241856575012, 0.4237220883369446, 0.43059042096138, 0.4371945559978485, 0.43508124351501465, 0.43270373344421387, 0.43864747881889343, 0.4447232782840729, 0.44485536217689514, 0.44630828499794006, 0.4515916109085083, 0.450931191444397], "val_loss": [1.9685240473066057, 1.966693605695452, 1.964879035949707, 1.963066646030971, 1.9612547329493932, 1.9594505173819405, 1.9576621736798967, 1.9558418137686593, 1.9540331023080009, 1.9522263663155692, 1.950411251613072, 1.9485633032662528, 1.946730613708496, 1.944878101348877, 1.9430358750479562, 1.9411733491080148, 1.9392977442060197, 1.9374079023088728, 1.9354745319911413, 1.9335316249302454, 1.9315712111336845, 1.9295806203569685, 1.9275574684143066, 1.9255114964076452, 1.9234412738255091, 1.9213483674185616, 1.9192007609776087, 1.9170237949916296, 1.9148236683436803, 1.9125819887433733, 1.9103007997785295, 1.9079770360674178, 1.9055986404418945, 1.903170449393136, 1.900668007986886, 1.8981541224888392, 1.8956168038504464, 1.8930065972464425, 1.8903356279645647, 1.8876135008675712, 1.8848139899117606, 1.8819477898733956, 1.8790416717529297, 1.8760557855878557, 1.8729692186628069, 1.8698666436331612, 1.8666299411228724, 1.8633606093270438, 1.8599682535443987, 1.8565387725830078, 1.8530227797372, 1.849362577710833, 1.8456837790352958, 1.84183931350708, 1.837953839983259, 1.8339362825666154, 1.82985748563494, 1.8256754193987166, 1.821415560586112, 1.817035130092076, 1.8125506809779577, 1.8079142570495605, 1.803185054234096, 1.7983357565743583, 1.7934563500540597, 1.7883850506373815, 1.7832436561584473, 1.7779758998325892, 1.7725791249956404, 1.7670873233250208, 1.7614218166896276, 1.7556947299412318, 1.7498126029968262, 1.7437684195382255, 1.7376443999154227, 1.731355803353446, 1.7249482018607003, 1.7183653286525182, 1.7116227831159319, 1.7047757080623083, 1.6977923938206263, 1.6906750883374895, 1.683471577508109, 1.6760682378496443, 1.6684949738638741, 1.6608408519199915, 1.6530884334019251, 1.6452162265777588, 1.637202569416591, 1.6291028431483678, 1.6209214414869035, 1.6124864986964635, 1.6039715835026331, 1.59531831741333, 1.5865596703120641, 1.5776423386165075, 1.568744489124843, 1.5597497054508753, 1.5505779811314173, 1.5412825516292028], "val_accuracy": [0.04933333396911621, 0.06499999761581421, 0.07900000363588333, 0.09266666322946548, 0.10733333230018616, 0.125, 0.14033333957195282, 0.16466666758060455, 0.18333333730697632, 0.19766665995121002, 0.21433334052562714, 0.23000000417232513, 0.24566666781902313, 0.26233333349227905, 0.27433332800865173, 0.2893333435058594, 0.29866665601730347, 0.3100000023841858, 0.3186666667461395, 0.32866665720939636, 0.3383333384990692, 0.34599998593330383, 0.35233333706855774, 0.36033332347869873, 0.36633333563804626, 0.3723333477973938, 0.37599998712539673, 0.38066667318344116, 0.38600000739097595, 0.3889999985694885, 0.39366665482521057, 0.39533331990242004, 0.39666667580604553, 0.40166667103767395, 0.4059999883174896, 0.4099999964237213, 0.41600000858306885, 0.4193333387374878, 0.42366665601730347, 0.4273333251476288, 0.43166667222976685, 0.4359999895095825, 0.4359999895095825, 0.43933331966400146, 0.44200000166893005, 0.44433334469795227, 0.44733333587646484, 0.44866666197776794, 0.45233333110809326, 0.45399999618530273, 0.4569999873638153, 0.45766666531562805, 0.4593333303928375, 0.4606666564941406, 0.46133333444595337, 0.46266666054725647, 0.46666666865348816, 0.46966665983200073, 0.4723333418369293, 0.4749999940395355, 0.47866666316986084, 0.4803333282470703, 0.4830000102519989, 0.48633334040641785, 0.4906666576862335, 0.49399998784065247, 0.4976666569709778, 0.49966666102409363, 0.5019999742507935, 0.5043333172798157, 0.5083333253860474, 0.5096666812896729, 0.512666642665863, 0.5166666507720947, 0.5206666588783264, 0.5239999890327454, 0.5270000100135803, 0.5289999842643738, 0.531333327293396, 0.5339999794960022, 0.5366666913032532, 0.5396666526794434, 0.5423333048820496, 0.5440000295639038, 0.5426666736602783, 0.5429999828338623, 0.5453333258628845, 0.550000011920929, 0.5509999990463257, 0.5529999732971191, 0.5563333630561829, 0.5586666464805603, 0.5609999895095825, 0.562333345413208, 0.5646666884422302, 0.565666675567627, 0.5673333406448364, 0.5693333148956299, 0.5713333487510681, 0.5726666450500488]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.3074285686016083, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.317110135019605, 2.2668022625418924, 2.3505767214929643, 2.303949623658373, 2.303159150654031, 2.244147014655709, 2.2431636661854024, 2.225067245835846, 2.3063443991895745, 2.3039225746596164, 2.3036466413217527], "accuracy": [0.20353981852531433, 0.19191652536392212, 0.16497160494327545, 0.09126931428909302, 0.09866596013307571, 0.16391493380069733, 0.18478403985500336, 0.19878484308719635, 0.0956280529499054, 0.09893012791872025, 0.09721305221319199], "val_loss": [1.94635466166905, 1.9211222103663854, 1.974172796521868, 1.9737599236624581, 1.973491600581578, 1.9479661669049944, 1.9336292403084892, 1.978381838117327, 1.9740115574428014, 1.9744388716561454, 1.973700932094029], "val_accuracy": [0.18700000643730164, 0.2723333239555359, 0.09600000083446503, 0.10100000351667404, 0.17033334076404572, 0.27300000190734863, 0.17599999904632568, 0.09666666388511658, 0.09666666388511658, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 1, 6, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 1, 2], [6, 63, 57, 12, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 16, 10, 6, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.negative(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(sigma)), alpha)", "other_info": {"loss": [1451.443854497613, 11180.780119297731, 41334.9990568452, 107181.51970512483, 219830.46049068816, 388701.3192073372], "accuracy": [0.10487385839223862, 0.10276053100824356, 0.10368511080741882, 0.09615638852119446, 0.10302469879388809, 0.10394927859306335], "val_loss": [4045.5020926339284, 19008.95145089286, 63895.950892857145, 133194.77232142858, 262353.33928571426, 460989.03571428574], "val_accuracy": [0.10300000011920929, 0.0963333323597908, 0.10133333504199982, 0.09733333438634872, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [7, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [9, 3, 4, 2, 2, 1, 0, 0, 9, 0, 8], [2, 3, 0, 0, 3, 0, 2], [91, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028193102410723, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 2, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.math.negative(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [7, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 1, 6, 2, 1, 0, 0, 9, 4, 8], [1, 1, 0, 1, 3, 0, 2], [70, 63, 57, 12, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 7, 7, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.divide_no_nan(alpha, alpha), tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.subtract(alpha, tf.math.negative(sigma)))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.373093181109274, 6542889317626.238, 3.2470112107669546, 3.3319525229318376, 2.788455788831921, 2.8516562082323147, 2.861889306218192], "accuracy": [0.20076608657836914, 0.10249637067317963, 0.1010434553027153, 0.09932637959718704, 0.09219389408826828, 0.09760929644107819, 0.10117553919553757], "val_loss": [90.09601048060826, 2.5830469131469727, 2.950885432107108, 2.67923743384225, 2.2439523424421037, 2.233445371900286, 2.947287150791713], "val_accuracy": [0.0963333323597908, 0.10100000351667404, 0.10066666454076767, 0.09733333438634872, 0.0963333323597908, 0.10066666454076767, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 1, 6, 2, 1, 0, 0, 4, 0, 8, 5, 6, 9], [1, 3, 0, 0, 3, 0, 2, 1], [95, 63, 57, 12, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 22, 14, 8, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.subtract(alpha, sigma), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.negative(tf.math.negative(sigma)), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [2.327953128546394, 2.359918046951798, 2.3771485539790174, 2.3929062598196587, 2.41070564935362, 2.426487819818757], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0141981669834683, 2.028299536023821, 2.0421241351536343, 2.056126594543457, 2.0696656363351003, 2.0826450075422014], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, beta))), tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.math.negative(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.346802854298632, 3.0788978318559685, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04411570355296135, 0.021133271977305412, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.095674514770508, 30.77177974155971, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 45, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 1, 4, 2, 2, 1, 0, 0, 9, 0, 8], [1, 2, 3, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.pow(alpha, beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 4, 3, 8, 9, 6, 2, 9, 0, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [7, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 3, 2, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [26, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.divide_no_nan(tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, sigma), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 6, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 0, 0, 0, 3, 0, 2], [70, 63, 57, 12, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 12, 6, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [6, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [15, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [1, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [70, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.pow(alpha, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022349585537047, 2.301932351684621, 2.302059239242779, 2.300769202634564, 2.3024268684732347, 2.3028412758949774], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.0952318087220192, 0.09034473448991776, 0.09536388516426086, 0.09126931428909302], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 9, 82, 63, 40, 73, 46, 33, 24], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 3, 0, 0, 3, 0, 2], [15, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3022349585537047, 2.301932351684621, 2.302059239242779, 2.300769202634564, 2.3024268684732347, 2.3028412758949774], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.0952318087220192, 0.09034473448991776, 0.09536388516426086, 0.09126931428909302], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 4, 5, 4, 4, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 63, 40, 73, 46, 33, 24], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [2, 2, 1, 6, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 9, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 2, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [24, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [8, 3], [3, 7], [71], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 1, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 1, 0, 3, 0, 2], [34, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 18, 18, 12, 6, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022349585537047, 2.301932351684621, 2.302059239242779, 2.300769202634564, 2.3024268684732347, 2.3028412758949774], "accuracy": [0.08889182657003403, 0.09338264167308807, 0.0952318087220192, 0.09034473448991776, 0.09536388516426086, 0.09126931428909302], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]