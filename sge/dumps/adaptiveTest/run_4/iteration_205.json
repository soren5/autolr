[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.7948571443557739, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2604244523721677, 2.068504097171668, 1.6407751496347376, 1.2735234639900015, 1.1018345938177945, 0.9851788174222725, 0.9221206107206978, 0.8872915722785011, 0.8550609278641105, 0.8259355179417356, 0.8230065978151255, 0.7767126210975672, 0.7599115264555876, 0.7666469553773114, 0.7313270455479952, 0.7151750575959203, 0.726011840186461, 0.706300332231009, 0.6982921873573709, 0.6712297874749722, 0.6818611758449027, 0.6662050386571676, 0.6616388592879376, 0.6528053717401601, 0.6563832952739729, 0.6452977039070492, 0.640060054493807, 0.6320027354182096, 0.6336458084164767, 0.6186121780843058, 0.6064861708896003, 0.6065501403484236, 0.6159516505404014, 0.6086304070076938, 0.605360094542989], "accuracy": [0.1950865089893341, 0.3877955377101898, 0.4916127324104309, 0.5703341960906982, 0.617751955986023, 0.6495839357376099, 0.674679696559906, 0.6844538450241089, 0.6901333928108215, 0.7025492191314697, 0.6970016956329346, 0.7177387475967407, 0.7219653725624084, 0.7230220437049866, 0.7333245277404785, 0.7358341217041016, 0.7302865982055664, 0.7390040755271912, 0.7417778372764587, 0.7568352818489075, 0.748249888420105, 0.7528728246688843, 0.7567031979560852, 0.7627789974212646, 0.7592127919197083, 0.761590301990509, 0.7642319202423096, 0.7695152759552002, 0.7708360552787781, 0.7721568942070007, 0.7798177003860474, 0.776251494884491, 0.7738739848136902, 0.7755910754203796, 0.7765156626701355], "val_loss": [1.855191911969866, 1.5345049245016915, 1.063295568738665, 0.8283917052405221, 0.7275238037109375, 0.6599549736295428, 0.6256954329354423, 0.6034785849707467, 0.5956065143857684, 0.5737672873905727, 0.5492182799748012, 0.5327445609228951, 0.5447255883898053, 0.527353014264788, 0.5058346816471645, 0.5104286330086845, 0.4950066804885864, 0.5092227288654873, 0.48276099136897493, 0.4791668142591204, 0.47665771416255404, 0.48208870206560406, 0.46669961724962505, 0.47648325988224577, 0.4675296885626657, 0.4514432804925101, 0.4445256846291678, 0.45346849305289133, 0.43907225131988525, 0.43640843459538053, 0.42960910286222187, 0.4312723534447806, 0.42900995697293964, 0.43371849400656565, 0.42715528181621004], "val_accuracy": [0.4350000023841858, 0.5789999961853027, 0.6643333435058594, 0.6893333196640015, 0.7106666564941406, 0.731333315372467, 0.734000027179718, 0.737333357334137, 0.7316666841506958, 0.7526666522026062, 0.765999972820282, 0.7720000147819519, 0.7680000066757202, 0.7683333158493042, 0.7846666574478149, 0.765333354473114, 0.7896666526794434, 0.7760000228881836, 0.7896666526794434, 0.7893333435058594, 0.800000011920929, 0.7863333225250244, 0.796999990940094, 0.781000018119812, 0.7950000166893005, 0.8046666383743286, 0.8069999814033508, 0.7960000038146973, 0.8116666674613953, 0.8266666531562805, 0.8140000104904175, 0.8193333148956299, 0.812333345413208, 0.8133333325386047, 0.8196666836738586]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [9, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [6, 7, 0, 0, 6, 4, 0, 2, 4], [1, 3, 0, 3], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [2, 9, 0, 6, 2, 5, 0, 0, 5, 0, 8, 9], [1, 1, 0, 0, 3, 0, 2], [94, 89, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 14, 12, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.square(tf.math.negative(alpha))), tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3027351781157077, 2.3025858713383562, 2.3025840807899494, 2.3025924829428366, 2.302587606777463, 2.3025848082956966], "accuracy": [0.09391097724437714, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736383301871163, 1.973625864301409, 1.973623207637242, 1.973623616354806, 1.973616259438651, 1.9736197335379464], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302733339732428, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [0, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [163782.72328546192, 3154886.7767137764, 14311660.292431647, 40360434.12917712, 86244294.5724475, 155915089.2679963], "accuracy": [0.09113723784685135, 0.09457138925790787, 0.09879804402589798, 0.09959053993225098, 0.10289261490106583, 0.10302469879388809], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1], [1, 2, 5, 5, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 0, 2], [96, 13, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [0, 0, 0, 0], [11, 0, 84, 8, 39], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [6, 5, 9, 0, 6, 4, 0, 2, 4], [1, 3, 4], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 4, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [94, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.pow(tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08083476126194, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 2, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [0, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 8, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(sigma))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 6, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [24, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.divide_no_nan(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0, 3, 1], [34, 12, 93], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 4, 6, 6, 4, 0, 2, 4, 0], [0, 1, 0, 1, 2, 5, 3, 0, 5], [11, 45, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 19, 19, 10, 9, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.pow(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.negative(beta))), tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 1, 0, 1], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 9, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [66, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(alpha)))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [1, 9, 9, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 1, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [163782.72328546192, 3154886.7767137764, 14311660.292431647, 40360434.12917712, 86244294.5724475, 155915089.2679963], "accuracy": [0.09113723784685135, 0.09457138925790787, 0.09879804402589798, 0.09959053993225098, 0.10289261490106583, 0.10302469879388809], "val_loss": [612873.7321428572, 4871949.857142857, 16409190.285714285, 38856556.571428575, 75845945.14285715, 131009243.42857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [1, 0, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.819855839206936, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02985074557363987, 0.10540219396352768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [43.53675406319754, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0, 3], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [7, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [66, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3031202174448584, 2.302917747166273, 2.3029123446913347, 2.3028728673171845, 2.3029442115025893, 2.3029873168951864, 2.302903428038019], "accuracy": [0.09060890227556229, 0.09536388516426086, 0.09655263274908066, 0.09509972482919693, 0.0956280529499054, 0.09615638852119446, 0.09179764986038208], "val_loss": [1.9736685071672713, 1.973684310913086, 1.97361877986363, 1.9736603328159876, 1.9736268179757255, 1.9736426898411341, 1.973670414515904], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.10066666454076767, 0.09666666388511658, 0.10100000351667404, 0.10000000149011612, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 0, 0], [96, 12, 93], [1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 5, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023337830389967, 2.302314270284308, 2.302849061201592, 2.3052068044480833, 2.315701939505105, 2.3678943374925017], "accuracy": [0.10170386731624603, 0.10276053100824356, 0.10236428678035736, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973724092755999, 1.9740160533360072, 1.9751242228916712, 1.979825564793178, 2.0015914780753, 2.1097403935023715], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 1, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [28021194394.847668, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [34661174710.85714, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 9, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(sigma))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [4, 7, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0, 3], [11, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [2, 1, 0, 0, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [7, 7, 9, 0, 6, 4, 0, 2, 4], [0, 1, 0], [1, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [4, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 1, 3, 0, 2], [35, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [6, 7, 9, 0, 6, 4, 0, 2, 4], [4, 3, 0], [11, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [62, 63, 56, 45]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3040157843574542, 2.301355216135013, 2.301571344765595, 2.3034165594886717, 2.3024624456834673, 2.3036759546829364], "accuracy": [0.08611807972192764, 0.0952318087220192, 0.09113723784685135, 0.09285431355237961, 0.09219389408826828, 0.08836349099874496], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]