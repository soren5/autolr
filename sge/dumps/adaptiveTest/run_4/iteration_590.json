[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.7968571186065674, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.02033821306114, 1.4431469019267695, 1.1150225482958813, 0.9083351918404302, 0.8193885952553115, 0.7629828239003696, 0.7700023315822317, 0.7078539464042612, 0.7208934076284893, 0.6907714042901646, 0.6615587046369664, 0.6456368207978755, 0.6422581839807092, 0.6235760801645586, 0.6201784337878526, 0.5961875852309103, 0.5951187499462889, 0.5850601219356241, 0.5743659747401091, 0.5422353406057003, 0.5561852250880475, 0.5442655654300583, 0.5387016665256885, 0.5511140022232485], "accuracy": [0.3361510932445526, 0.5087835192680359, 0.5931845307350159, 0.6672830581665039, 0.6963412761688232, 0.7185312509536743, 0.7102100253105164, 0.7316074371337891, 0.7257958054542542, 0.7457403540611267, 0.7477215528488159, 0.7574957013130188, 0.7609298825263977, 0.7652885913848877, 0.7724210619926453, 0.7771760821342468, 0.7816668748855591, 0.7854973077774048, 0.7917051911354065, 0.8037247657775879, 0.7898560166358948, 0.802800178527832, 0.8016114234924316, 0.7994980812072754], "val_loss": [1.203737803867885, 0.8934004987989154, 0.7274671282087054, 0.6403176614216396, 0.5915237154279437, 0.5536866698946271, 0.529321449143546, 0.5285073007856097, 0.5222255672727313, 0.5061433144978115, 0.4946756362915039, 0.4658152035304478, 0.4554286003112793, 0.45286193915775846, 0.4776104858943394, 0.45520111492701937, 0.42225233146122526, 0.4510704278945923, 0.4112342255456107, 0.4551182133810861, 0.4062967981610979, 0.4327689494405474, 0.4364602906363351, 0.3968426840645926], "val_accuracy": [0.5640000104904175, 0.593666672706604, 0.6976666450500488, 0.7070000171661377, 0.7473333477973938, 0.768666684627533, 0.7689999938011169, 0.7429999709129333, 0.7620000243186951, 0.7563333511352539, 0.777999997138977, 0.7876666784286499, 0.7950000166893005, 0.8073333501815796, 0.7896666526794434, 0.7960000038146973, 0.8216666579246521, 0.812333345413208, 0.8243333101272583, 0.7866666913032532, 0.8240000009536743, 0.7926666736602783, 0.7973333597183228, 0.8216666579246521]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.6119999885559082, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta), alpha)", "other_info": {"loss": [2.1419170142448243, 1.3239658493186977, 0.9267230161255723, 0.8278758722824774, 0.7674357274488419, 0.7082631587903451, 0.6453649641154008, 0.6180328108284688, 0.6083392327755449, 0.5852910569945127, 0.5568879176408009, 0.5333036259889382, 0.526382197344607, 0.5057229300011985, 0.5019488424169011, 0.49476560126395197, 0.4860433579719361, 0.49271967303263214, 0.4690104859805205, 0.445039203004468, 0.44108947144365895, 0.43844967093276876, 0.43859842026773743, 0.4388649318834196, 0.41704017572225976, 0.42655036836299665, 0.4390952334490907], "accuracy": [0.278959184885025, 0.5528992414474487, 0.6643772125244141, 0.6952846646308899, 0.7137762308120728, 0.7317395210266113, 0.7627789974212646, 0.7597411274909973, 0.7820631265640259, 0.7825914621353149, 0.789459764957428, 0.7889314293861389, 0.8014793395996094, 0.8021397590637207, 0.8107251524925232, 0.8039889335632324, 0.8193105459213257, 0.8165367841720581, 0.8274996876716614, 0.8301413059234619, 0.8393871188163757, 0.8339717388153076, 0.835160493850708, 0.8385946154594421, 0.8380662798881531, 0.8389908671379089, 0.833179235458374], "val_loss": [1.174421991620745, 0.7218158074787685, 0.59348235811506, 0.5974494729723249, 0.5166058199746268, 0.47090465681893484, 0.4417919431413923, 0.4449526582445417, 0.41332132475716726, 0.4145336151123047, 0.3838240844862802, 0.3905853543962751, 0.3861217073031834, 0.3898948345865522, 0.36525688001087736, 0.36187721150262014, 0.36351332494190763, 0.35518239225660053, 0.3643339787210737, 0.359828565801893, 0.341898901121957, 0.3489257948739188, 0.3572742598397391, 0.3704755561692374, 0.3579906480652945, 0.3759193420410156, 0.37098136969975065], "val_accuracy": [0.6013333201408386, 0.6976666450500488, 0.7333333492279053, 0.7456666827201843, 0.753333330154419, 0.7876666784286499, 0.7986666560173035, 0.8036666512489319, 0.8166666626930237, 0.8086666464805603, 0.8366666436195374, 0.8330000042915344, 0.8293333053588867, 0.8413333296775818, 0.8426666855812073, 0.8450000286102295, 0.8546666502952576, 0.8519999980926514, 0.8560000061988831, 0.8543333411216736, 0.862333357334137, 0.8656666874885559, 0.8606666922569275, 0.8579999804496765, 0.8569999933242798, 0.8543333411216736, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.32771429419517517, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.5678687120520003, 2.398550334214188, 2.231580842708033, 2.2380653368467827, 2.8760487102104957, 2.2671492990643167, 2.2672250193690484, 2.308838219737742, 2.3039029941677245], "accuracy": [0.1935015171766281, 0.11847840249538422, 0.190859854221344, 0.1834632158279419, 0.12693171203136444, 0.15414080023765564, 0.19931316375732422, 0.10091137140989304, 0.09457138925790787], "val_loss": [2.144981929234096, 1.9680005482264928, 1.9792841502598353, 4.5915021896362305, 1.9626296588352747, 1.8728474889482771, 1.9839440754481725, 1.975266797201974, 1.9740657125200545], "val_accuracy": [0.27133333683013916, 0.10066666454076767, 0.09666666388511658, 0.3163333237171173, 0.18166667222976685, 0.27399998903274536, 0.10100000351667404, 0.09733333438634872, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [56, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302597991290613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 6, 2, 3, 0, 5, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 3, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 0, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [2, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(grad)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [79, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 16, 10, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(grad))), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), beta), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3194203822997896, 2.3774376767359673, 2.4981267599932915, 4.161263782933026, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05824857950210571, 0.020340774208307266, 0.015189538709819317, 0.03579447790980339, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0129337991986955, 2.0836985451834544, 2.2748020035879954, 36.23247855050223, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.00566666666418314, 0.008333333767950535, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [4, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [63, 42, 80, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302597991290613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 6, 2, 2, 0, 4, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 2, 0, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [55, 41, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 1, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 2, 0, 8, 5, 0, 7, 4, 5, 8], [2, 2, 0, 0, 2, 0, 2], [90, 14, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 16, 10, 6, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), tf.math.square(beta)), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 6, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 2, 2, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [26, 50, 16, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 9, 0, 9, 8, 5, 0, 0, 4, 0, 8], [0, 2, 1, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302597991290613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 2, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 8, 0, 9, 8, 5, 0, 0, 4, 0, 8], [2, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 5, 8, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [0, 3, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 80, 44, 12, 41, 16, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302597991290613, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 1, 0, 3, 0, 2], [39, 42, 80, 12, 41, 16, 52]], "fitness": -0.07199999690055847, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, beta), alpha)", "other_info": {"loss": [2.3015197458646366, 2.3014328926309635, 2.3011609638812693, 2.3014660071797612, 2.300449042634532, 2.3001916774779483, 2.300360035005105, 2.3001863860718688, 2.2988875131439523, 2.300398506303867, 2.3000371954334318, 2.3000796088736526, 2.300887134396058, 2.299179934712134, 2.2997759305538046, 2.298893200833138, 2.2997000203896603, 2.299496307758497, 2.2992192823117548, 2.2996998595964673, 2.299277441234888, 2.3001122622048427, 2.299003051524275, 2.298942426255256], "accuracy": [0.08942015469074249, 0.09179764986038208, 0.09351472556591034, 0.09800554811954498, 0.09192973375320435, 0.09272222965955734, 0.1010434553027153, 0.09655263274908066, 0.10368511080741882, 0.09866596013307571, 0.09787346422672272, 0.09259014576673508, 0.09615638852119446, 0.10328886657953262, 0.0956280529499054, 0.0936468094587326, 0.1026284471154213, 0.09919429570436478, 0.10434553027153015, 0.10210011899471283, 0.09945846349000931, 0.09747721254825592, 0.09998679161071777, 0.1018359512090683], "val_loss": [1.9700464521135603, 1.9697341918945312, 1.9695375987461634, 1.9693527221679688, 1.9691851479666573, 1.969048295702253, 1.9690649168831962, 1.9690773827689034, 1.9691338539123535, 1.9691649845668249, 1.9692610331944056, 1.9691726139613561, 1.9691166196550642, 1.969071592603411, 1.9690124647957938, 1.968991960797991, 1.9689881461007255, 1.9689277921404158, 1.9689413479396276, 1.968956538609096, 1.9690346717834473, 1.969092573438372, 1.9691812651497977, 1.9693143708365304], "val_accuracy": [0.04266666620969772, 0.04833333194255829, 0.05166666582226753, 0.054999999701976776, 0.05833333358168602, 0.06400000303983688, 0.0663333311676979, 0.06733333319425583, 0.06833333522081375, 0.07199999690055847, 0.07266666740179062, 0.07533333450555801, 0.07866666465997696, 0.08166666328907013, 0.08399999886751175, 0.0860000029206276, 0.0860000029206276, 0.08666666597127914, 0.08900000154972076, 0.08733333647251129, 0.0860000029206276, 0.08666666597127914, 0.08366666734218597, 0.08133333176374435]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [1, 0, 2, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.07171428203582764, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3015309101586423, 2.3014750647554307, 2.3012305453878272, 2.3015616038031093, 2.300564153051773, 2.300332221813552, 2.3005203781599035, 2.300368751469951, 2.2990867883742463, 2.3006192725867707, 2.300259825701821, 2.300290600939544, 2.301101202883536, 2.299387259269828, 2.2999843459607368, 2.299091335615824, 2.299891945172956, 2.299686286742614, 2.29939843323158, 2.2998680842629735, 2.2994437565688273, 2.3002792087764536, 2.2991805844035493, 2.299126210544623], "accuracy": [0.08942015469074249, 0.09192973375320435, 0.09325055778026581, 0.09774138033390045, 0.09153348207473755, 0.09192973375320435, 0.10077928751707077, 0.09589222073554993, 0.10236428678035736, 0.09774138033390045, 0.09708096832036972, 0.09140139818191528, 0.09549596905708313, 0.10236428678035736, 0.09509972482919693, 0.09338264167308807, 0.10157178342342377, 0.09866596013307571, 0.10368511080741882, 0.10236428678035736, 0.09893012791872025, 0.09615638852119446, 0.09906221181154251, 0.10038304328918457], "val_loss": [1.970073972429548, 1.969789981842041, 1.9696142332894462, 1.9694535391671317, 1.9693058558872767, 1.9691882133483887, 1.9692322186061315, 1.969261578151158, 1.9693378039768763, 1.9693694114685059, 1.9694678442818778, 1.9693797656467982, 1.9693145070757185, 1.9692702974591936, 1.969195774623326, 1.9691758155822754, 1.9691712515694755, 1.9691008159092493, 1.969109126499721, 1.96911587033953, 1.969193458557129, 1.969259466443743, 1.9693501336233956, 1.969496522630964], "val_accuracy": [0.041999999433755875, 0.04833333194255829, 0.05133333429694176, 0.0533333346247673, 0.057999998331069946, 0.06266666948795319, 0.06466666609048843, 0.06599999964237213, 0.06466666609048843, 0.0689999982714653, 0.07066666334867477, 0.07433333247900009, 0.07699999958276749, 0.07999999821186066, 0.08233333379030228, 0.08266666531562805, 0.08266666531562805, 0.08433333039283752, 0.08500000089406967, 0.08399999886751175, 0.0833333358168602, 0.08266666531562805, 0.08100000023841858, 0.07800000160932541]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.0705714300274849, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301642680574386, 2.301860279521103, 2.3017948258900924, 2.3023203524931026, 2.301543564167257, 2.301365898647769, 2.3014212705833628, 2.30122010680458, 2.299775714903239, 2.301582182969998, 2.300867665917756, 2.301316978720122, 2.3020216838605903, 2.3001402862918154, 2.3007517510306927, 2.2997689288699505, 2.300728568500453, 2.3009950726055246, 2.300572613589028, 2.301166905797531, 2.300822493863411, 2.3014044171830745, 2.300265445023984, 2.3000465158332277, 2.300392880872445, 2.3001480467520086, 2.300119717265038, 2.3011637147485997, 2.300332864199049, 2.2998713375066866, 2.3015777062683247, 2.3006953798847554, 2.3001627756730203, 2.2992841045476378, 2.2998717443077967, 2.2994928253860585, 2.2996178693964087, 2.3003420080286463, 2.299513015418304, 2.300612078807641, 2.3004220421319594, 2.2995543919219283, 2.299008896290713, 2.2992115397384656, 2.300821079223415, 2.300243104910255, 2.2990388441646354, 2.3004361541122256, 2.299423578251244, 2.299360324866925, 2.298770244772471, 2.2986809324043587, 2.2994855955182096, 2.2996181697893325, 2.299682059638835, 2.299786544542082, 2.299553008615506, 2.2990169560416436, 2.2992051727877882, 2.299075425844214], "accuracy": [0.09034473448991776, 0.09126931428909302, 0.09272222965955734, 0.09734513610601425, 0.0878351628780365, 0.09021265059709549, 0.09734513610601425, 0.09760929644107819, 0.1010434553027153, 0.09126931428909302, 0.09285431355237961, 0.09008057415485382, 0.09417514503002167, 0.09747721254825592, 0.09311848133802414, 0.09087307006120682, 0.09536388516426086, 0.09417514503002167, 0.10091137140989304, 0.09681680053472519, 0.09351472556591034, 0.09060890227556229, 0.09615638852119446, 0.09589222073554993, 0.09470347315073013, 0.09919429570436478, 0.10276053100824356, 0.09681680053472519, 0.09893012791872025, 0.09642054885625839, 0.09906221181154251, 0.09787346422672272, 0.09536388516426086, 0.09972262382507324, 0.10091137140989304, 0.10051512718200684, 0.09496764093637466, 0.09549596905708313, 0.10011887550354004, 0.0956280529499054, 0.10408136248588562, 0.09774138033390045, 0.10513802617788315, 0.10474177449941635, 0.0952318087220192, 0.09391097724437714, 0.10659094154834747, 0.09787346422672272, 0.10355303436517715, 0.09945846349000931, 0.10315678268671036, 0.1072513535618782, 0.10302469879388809, 0.10368511080741882, 0.1010434553027153, 0.09866596013307571, 0.10355303436517715, 0.10368511080741882, 0.10117553919553757, 0.09932637959718704], "val_loss": [1.9702675683157784, 1.9701461110796248, 1.9700476101466589, 1.969937460763114, 1.969822543007987, 1.9697199548993791, 1.9696572848728724, 1.9695759500776018, 1.9695380755833216, 1.9694594655718123, 1.9694078309195382, 1.9693467276436942, 1.9692887578691756, 1.9692506108965193, 1.969217164175851, 1.9692027228219169, 1.9691931860787528, 1.9691621916634696, 1.9691354887826102, 1.9691190038408553, 1.969107014792306, 1.9690980911254883, 1.969087736947196, 1.96909727369036, 1.9691148485456194, 1.9691154616219657, 1.9691429138183594, 1.9691523143223353, 1.9691671643938338, 1.9691815376281738, 1.9691965920584542, 1.9692046982901437, 1.9692116464887346, 1.9692277227129256, 1.9692142350333077, 1.9692138944353377, 1.969212463923863, 1.9691957065037318, 1.969184058053153, 1.9691642352512904, 1.9691435950142997, 1.9691173689705985, 1.9691162109375, 1.9690980911254883, 1.9690630095345634, 1.9690414837428503, 1.9690365110124861, 1.9690165519714355, 1.9690068108694894, 1.969003404889788, 1.9690075601850237, 1.9690288134983607, 1.969021933419364, 1.9690281323024206, 1.9690373965672083, 1.9690564019339425, 1.969064167567662, 1.969092573438372, 1.9691187313624792, 1.969149044581822], "val_accuracy": [0.038333334028720856, 0.0416666679084301, 0.04333333298563957, 0.04533333331346512, 0.04766666516661644, 0.04899999871850014, 0.04833333194255829, 0.04933333396911621, 0.05133333429694176, 0.05166666582226753, 0.052666667848825455, 0.054999999701976776, 0.05700000002980232, 0.05833333358168602, 0.058666665107011795, 0.059333331882953644, 0.060333333909511566, 0.06133333221077919, 0.06199999898672104, 0.06233333423733711, 0.06300000101327896, 0.06533333659172058, 0.0663333311676979, 0.0663333311676979, 0.06700000166893005, 0.06666667014360428, 0.06666667014360428, 0.06666667014360428, 0.06700000166893005, 0.06733333319425583, 0.0676666647195816, 0.06866666674613953, 0.0689999982714653, 0.0689999982714653, 0.070333331823349, 0.07199999690055847, 0.07233333587646484, 0.0729999989271164, 0.07400000095367432, 0.07533333450555801, 0.07766667008399963, 0.07900000363588333, 0.07833333313465118, 0.07866666465997696, 0.0793333351612091, 0.07966666668653488, 0.08100000023841858, 0.08100000023841858, 0.08033332973718643, 0.08033332973718643, 0.08033332973718643, 0.0820000022649765, 0.0820000022649765, 0.08166666328907013, 0.08233333379030228, 0.08166666328907013, 0.08100000023841858, 0.0820000022649765, 0.08100000023841858, 0.08166666328907013]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 0, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [4, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [5, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [5, 42, 44, 12, 41, 16, 52]], "fitness": -0.06314285844564438, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016865328712046, 2.3020279500399754, 2.3020658595072927, 2.302736132955192, 2.302133773563875, 2.302055683023878, 2.3020939963636398, 2.302026081551272, 2.3005277647271116, 2.302648025654279, 2.3019102861096816, 2.3024822625155306, 2.3032449978438065, 2.3012007350352275, 2.30192386617498, 2.3009385464922345, 2.3018882152442495, 2.302414184674107, 2.3019450788154043, 2.3025202993010767, 2.3022444610346295, 2.3025972152571903, 2.3016137068124576, 2.3010991242551975, 2.3013283862508347, 2.301450954090099, 2.3012638765319213, 2.302672552851449, 2.3017375525261796, 2.3007922105785408, 2.302855085277948, 2.3016505921600263, 2.301032324666124, 2.3000790435152125, 2.3008413096901417, 2.3002973821232144, 2.3004763284143346, 2.3016193148608317, 2.300030423728561, 2.301739136776857, 2.3010957277587942, 2.3002848211076077, 2.2989049698493704, 2.300027559462036, 2.3020544766025646, 2.3015099106495014, 2.2992397767992667, 2.3020400852023997, 2.3001186485854848, 2.3002277584816597, 2.2991248403699593, 2.2993263151226513, 2.300935072244481, 2.300137781432402, 2.3004345786475455, 2.3005919541192803, 2.3003760707723213, 2.2994118896630997, 2.3001178719852233, 2.2994978581878094, 2.3000464052682257, 2.300571449680603, 2.2988857763192407, 2.2992919117720088, 2.3015783968665864, 2.2984185587256074, 2.298248742628469, 2.3000789601584595, 2.3001129127465156, 2.299798964887263, 2.299984783308145, 2.298529766837541, 2.299046726117218, 2.299788444364359, 2.2985696176952928, 2.2982366245341828, 2.300512844277663, 2.3000637021251813, 2.2968775425541748, 2.2984033117141895, 2.298653265142233, 2.299575522811642, 2.2987229018210735, 2.297782262334293, 2.2988294478751383, 2.2982636679905184, 2.2980700857713945, 2.297252962318756, 2.2983361038439276, 2.2981805050960387, 2.296823998956223, 2.296860984539737, 2.297904746596367, 2.297452677195303, 2.2977739636294356, 2.297105995671246, 2.2994175269036576, 2.2981625704827673, 2.2987714365189653, 2.297837804289951], "accuracy": [0.09074098616838455, 0.09140139818191528, 0.09259014576673508, 0.09615638852119446, 0.08558975160121918, 0.0870426595211029, 0.09430722147226334, 0.09681680053472519, 0.09615638852119446, 0.0886276587843895, 0.09008057415485382, 0.0886276587843895, 0.09272222965955734, 0.09668471664190292, 0.09087307006120682, 0.08849557489156723, 0.08968432247638702, 0.08981640636920929, 0.09774138033390045, 0.09126931428909302, 0.09219389408826828, 0.08809932321310043, 0.09285431355237961, 0.09153348207473755, 0.09377889335155487, 0.09219389408826828, 0.10210011899471283, 0.09298639744520187, 0.09298639744520187, 0.09166556596755981, 0.09298639744520187, 0.08942015469074249, 0.09179764986038208, 0.09708096832036972, 0.1006472036242485, 0.09549596905708313, 0.0956280529499054, 0.09457138925790787, 0.09945846349000931, 0.0944393053650856, 0.09787346422672272, 0.09391097724437714, 0.10553427785634995, 0.09628847241401672, 0.09470347315073013, 0.09179764986038208, 0.09813763201236725, 0.09377889335155487, 0.09087307006120682, 0.09325055778026581, 0.09985470771789551, 0.10117553919553757, 0.0940430611371994, 0.09708096832036972, 0.0944393053650856, 0.09470347315073013, 0.09536388516426086, 0.09866596013307571, 0.09298639744520187, 0.09113723784685135, 0.1010434553027153, 0.0940430611371994, 0.1002509593963623, 0.0956280529499054, 0.09774138033390045, 0.09747721254825592, 0.1006472036242485, 0.09615638852119446, 0.09853387624025345, 0.09959053993225098, 0.09840179979801178, 0.1018359512090683, 0.09998679161071777, 0.09708096832036972, 0.09972262382507324, 0.10355303436517715, 0.09232597798109055, 0.09655263274908066, 0.1006472036242485, 0.09972262382507324, 0.09721305221319199, 0.09800554811954498, 0.10077928751707077, 0.1022322028875351, 0.09708096832036972, 0.10236428678035736, 0.10236428678035736, 0.09866596013307571, 0.10077928751707077, 0.09800554811954498, 0.10236428678035736, 0.10566636174917221, 0.1014397069811821, 0.10460969805717468, 0.1018359512090683, 0.09800554811954498, 0.09906221181154251, 0.09866596013307571, 0.10249637067317963, 0.10038304328918457], "val_loss": [1.9703412055969238, 1.970296791621617, 1.9702529226030623, 1.9702089173453194, 1.9701651164463587, 1.9701207024710519, 1.9700766972133092, 1.97003207887922, 1.9699886185782296, 1.969944613320487, 1.969900335584368, 1.9698566028050013, 1.9698127337864466, 1.969768728528704, 1.969724382672991, 1.9696797643389021, 1.9696356228419714, 1.9695913451058524, 1.9695473398481096, 1.969503402709961, 1.9694592612130302, 1.9694153921944755, 1.9693711825779505, 1.96932738167899, 1.969282967703683, 1.9692393030439104, 1.9691952296665736, 1.9691507475716727, 1.969106946672712, 1.9690632138933455, 1.9690197535923548, 1.9689758164542062, 1.9689319474356515, 1.9688879421779089, 1.96884400503976, 1.9687999316624232, 1.9687560626438685, 1.968712261744908, 1.9686685289655412, 1.9686241149902344, 1.9685801097324915, 1.968536376953125, 1.9684923035757882, 1.9684484345572335, 1.9684043611798967, 1.968360492161342, 1.9683166231427873, 1.9682721410478865, 1.968228544507708, 1.968184471130371, 1.9681402615138464, 1.9680968012128557, 1.968052864074707, 1.9680090631757463, 1.9679650579180037, 1.967920916421073, 1.9678772517613001, 1.9678333146231515, 1.9677893774850028, 1.9677455084664481, 1.9677022525242396, 1.9676589965820312, 1.9676153319222587, 1.96757139478411, 1.9675279344831194, 1.967484406062535, 1.967440400804792, 1.9673963955470495, 1.9673527308872767, 1.967308861868722, 1.9672653334481376, 1.967221464429583, 1.96717745917184, 1.9671335220336914, 1.9670897211347307, 1.9670459202357702, 1.9670023236955916, 1.9669585909162248, 1.9669145856584822, 1.9668708528791154, 1.9668269838605608, 1.9667835235595703, 1.96674040385655, 1.9666966710771834, 1.9666533470153809, 1.9666098185947962, 1.966566562652588, 1.9665230342320033, 1.9664790970938546, 1.966435773032052, 1.9663918358939034, 1.966348511832101, 1.9663050515311105, 1.9662614549909319, 1.9662181990487235, 1.9661743981497628, 1.9661306653703963, 1.9660876137869698, 1.9660437447684151, 1.9659999438694544], "val_accuracy": [0.03633333370089531, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.03733333200216293, 0.03799999877810478, 0.03799999877810478, 0.038333334028720856, 0.038333334028720856, 0.039000000804662704, 0.03933333232998848, 0.0403333343565464, 0.04100000113248825, 0.0416666679084301, 0.041999999433755875, 0.04233333468437195, 0.04233333468437195, 0.04233333468437195, 0.04233333468437195, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04533333331346512, 0.045666664838790894, 0.04600000008940697, 0.04600000008940697, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04800000041723251, 0.04800000041723251, 0.04800000041723251, 0.04833333194255829, 0.04899999871850014, 0.04899999871850014, 0.049666665494441986, 0.05000000074505806, 0.05066666752099991, 0.050999999046325684, 0.050999999046325684, 0.05166666582226753, 0.05166666582226753, 0.05233333259820938, 0.052666667848825455, 0.052666667848825455, 0.052666667848825455, 0.052666667848825455, 0.0533333346247673, 0.05433333292603493, 0.055666666477918625, 0.055666666477918625, 0.05666666850447655, 0.05700000002980232, 0.05766666680574417, 0.057999998331069946, 0.05833333358168602, 0.05833333358168602, 0.05900000035762787, 0.05900000035762787, 0.05966666713356972, 0.05999999865889549, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.06133333221077919, 0.061666667461395264, 0.06233333423733711, 0.06233333423733711, 0.06266666948795319, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06499999761581421, 0.06533333659172058, 0.06533333659172058, 0.06533333659172058, 0.06533333659172058, 0.0663333311676979, 0.0663333311676979, 0.0663333311676979, 0.06733333319425583, 0.0676666647195816, 0.06800000369548798, 0.06800000369548798, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 2, 4, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [50, 50, 93, 49, 40, 73, 46, 33, 24], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [5, 3], [2, 5], [71], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 2, 5, 8, 5, 0, 0, 4, 0, 8], [3, 2, 1, 0, 3, 0, 2], [90, 28, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301705902058293, 2.3020945976533436, 2.3021797057171822, 2.3028975591809444, 2.3023408411547743, 2.302311617574514], "accuracy": [0.09074098616838455, 0.09126931428909302, 0.09206181764602661, 0.09549596905708313, 0.08558975160121918, 0.08611807972192764], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 6, 2, 3, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [82, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [1, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [3, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 0, 8, 8, 5, 0, 0, 4, 5, 8], [0, 2, 0, 0, 3, 0, 2], [90, 42, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 29, 29, 18, 11, 8, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), beta), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301705902058293, 2.3020945976533436, 2.3021797057171822, 2.3028975591809444, 2.3023408411547743, 2.302311617574514], "accuracy": [0.09074098616838455, 0.09126931428909302, 0.09206181764602661, 0.09549596905708313, 0.08558975160121918, 0.08611807972192764], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 2, 4, 0, 0, 8, 9, 6, 5, 4, 8, 5, 6, 2, 6, 6, 2, 0, 3, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 2, 3, 3, 3, 0, 1], [88, 50, 93, 49, 40, 73, 46, 33, 24], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [3, 7, 5, 1, 5, 5, 0, 2, 3, 2, 7, 2, 7, 5, 2, 1, 4, 3, 9, 9, 3, 4, 5, 9, 6, 9], [5, 4, 0, 2, 2, 3, 1, 4, 3, 4, 1, 3, 3], [58, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0, 1], [9, 3], [2, 5], [71], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [3, 3, 9, 8, 8, 5, 0, 0, 4, 5, 8], [3, 2, 1, 0, 3, 0, 2], [90, 28, 44, 12, 41, 16, 52]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [2.301705902058293, 2.3020945976533436, 2.3021797057171822, 2.3028975591809444, 2.3023408411547743, 2.302311617574514], "accuracy": [0.09074098616838455, 0.09126931428909302, 0.09206181764602661, 0.09549596905708313, 0.08558975160121918, 0.08611807972192764], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]