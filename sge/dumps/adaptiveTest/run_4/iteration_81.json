[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta)))), alpha), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1678807645063864, 1.929601233145029, 1.7968383626442828, 1.1767743909363702, 0.9171331639712466, 0.7743523403669565, 0.7303643315821874, 0.6713996734743215, 0.6257007848380375, 0.6403730004029959, 0.5939232948559812, 0.6130740109640672, 0.5481772897439059, 0.5561278797868158, 0.5144369787921712, 0.5379964599378231, 0.5170355863055344, 0.4832307591713525, 0.48642111921653675, 0.47334545929874994, 0.46058543324627976, 0.4569180171330056, 0.4433488446243404, 0.4333404849163215, 0.42219900114976217, 0.4360165972601642, 0.4311292402425604], "accuracy": [0.27777042984962463, 0.3214899003505707, 0.37722888588905334, 0.5719191431999207, 0.6409985423088074, 0.7041342258453369, 0.717870831489563, 0.7366266250610352, 0.7549861073493958, 0.7512878179550171, 0.7770439982414246, 0.7730814814567566, 0.7890635132789612, 0.7869502305984497, 0.807158887386322, 0.7880068421363831, 0.8055738806724548, 0.8198388814926147, 0.8146876096725464, 0.8224804997444153, 0.8317263126373291, 0.8276317715644836, 0.8338396549224854, 0.8370096683502197, 0.8401796221733093, 0.8348963260650635, 0.8358209133148193], "val_loss": [1.483294861657279, 1.6718099798474992, 1.02181533404759, 0.6903046539851597, 0.6040783950260707, 0.5530652829578945, 0.5057171753474644, 0.4797764165060861, 0.5022610255650112, 0.4655850614820208, 0.5052731207438877, 0.48021507263183594, 0.4654613052095686, 0.4236042669841221, 0.45670310088566374, 0.43341100215911865, 0.3764460171972002, 0.4259960651397705, 0.3873105389731271, 0.3697494012968881, 0.3644611154283796, 0.3506055303982326, 0.3450996364865984, 0.35376427854810444, 0.3743373155593872, 0.39610728195735384, 0.39505270549229216], "val_accuracy": [0.3790000081062317, 0.37166666984558105, 0.5770000219345093, 0.6986666917800903, 0.722000002861023, 0.7576666474342346, 0.7796666622161865, 0.7816666960716248, 0.7586666941642761, 0.7853333353996277, 0.7766666412353516, 0.7736666798591614, 0.7923333048820496, 0.8213333487510681, 0.7863333225250244, 0.7950000166893005, 0.8496666550636292, 0.7816666960716248, 0.8356666564941406, 0.8330000042915344, 0.8410000205039978, 0.8566666841506958, 0.8529999852180481, 0.8543333411216736, 0.8373333215713501, 0.8166666626930237, 0.8320000171661377]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 2, 2, 5, 0, 7, 6, 4, 8, 0, 8], [3, 3, 3, 2, 1, 0, 0], [77, 63, 56, 45]], "fitness": -0.31057143211364746, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 8, 5, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.negative(tf.math.add(sigma, sigma)), tf.math.add(tf.math.square(sigma), tf.math.negative(tf.math.add(beta, alpha)))))", "other_info": {"loss": [2.4636426958913704, 2.5041991536643415, 2.3145908600209237, 2.3403114028626333, 2.3350736926717057, 2.6916089845198083], "accuracy": [0.23484347760677338, 0.2102760523557663, 0.12151630967855453, 0.11517632752656937, 0.09774138033390045, 0.10077928751707077], "val_loss": [1.896254198891776, 2.0333480153765, 1.8518445832388741, 1.9968107087271554, 1.993809359414237, 1.9911540576389857], "val_accuracy": [0.27533334493637085, 0.10300000011920929, 0.1966666728258133, 0.09666666388511658, 0.10366666316986084, 0.0963333323597908]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 0, 1, 2, 0, 1, 7, 6, 0, 8], [3, 3, 3, 2, 1, 0, 0, 1, 2, 2, 2, 2, 2, 1, 3, 0, 2, 0, 2, 2, 0], [40, 63, 56, 45, 48, 81]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4640538878901257, 2.926899911831115, 2.3603184185700723, 2.3152829658841854, 2.3244357092064667, 2.3281773792486526, 2.3354973594951214], "accuracy": [0.23484347760677338, 0.1846519559621811, 0.1254788041114807, 0.1262712925672531, 0.10579843819141388, 0.09509972482919693, 0.09972262382507324], "val_loss": [1.8623201506478446, 1.950622831072126, 1.894479410988944, 1.989330564226423, 2.005607536860875, 1.9942644664219447, 1.991685458592006], "val_accuracy": [0.22599999606609344, 0.22833333909511566, 0.18466666340827942, 0.10366666316986084, 0.0963333323597908, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 1, 2, 5, 0, 7, 6, 0, 8], [1, 2, 3, 0, 1, 0, 2], [43, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 16, 9, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(tf.math.negative(tf.math.subtract(tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [1.4382220881794363e+19, 2.308964119485309, 2.307330859603348, 2.3060748658049866, 2.305159673242364, 2.304500175016809, 2.303996430789916], "accuracy": [0.09391097724437714, 0.09602430462837219, 0.09760929644107819, 0.09509972482919693, 0.09826971590518951, 0.09774138033390045, 0.09615638852119446], "val_loss": [1.9799447740827287, 1.9783800670078822, 1.9771483285086495, 1.97624295098441, 1.9755736078534807, 1.975076471056257, 1.9747307641165597], "val_accuracy": [0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 0, 0, 2, 2, 5, 0, 7, 6, 0, 8, 7, 6, 8, 7, 4, 3, 7, 0, 5, 6, 0, 5, 2, 9, 3, 9, 2, 8, 2, 3, 0, 4], [1, 3, 3, 2, 2, 0, 0, 1, 3, 2, 2, 2, 2, 1, 3, 0, 2, 0, 2, 2, 0], [40, 63, 29, 75, 48, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 13, 8, 5, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(alpha)), sigma), tf.math.add(sigma, beta)))), beta)", "other_info": {"loss": [2.3027385042611526, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], [2, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [3, 6, 2, 2, 2, 5, 3, 7, 6, 0, 8, 2, 9, 1, 3, 5, 0, 5, 3, 7, 2, 7, 3, 3, 1, 5, 6, 4, 1, 4, 0, 8, 0], [1, 1, 0, 2, 3, 0, 3, 0, 3, 1, 2, 3, 2, 1, 2, 2, 3, 3, 2, 2, 3, 2], [40, 72, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 55, 33, 22, 4], "tree_depth": 27, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(tf.math.square(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta), sigma), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma), tf.math.square(tf.math.negative(alpha)))))))), tf.math.square(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(sigma, beta)), alpha), beta), tf.math.pow(beta, tf.math.subtract(sigma, tf.math.pow(sigma, tf.math.negative(tf.math.sqrt(beta))))))), tf.math.negative(beta)), sigma), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], [4, 5, 0, 1, 2, 0, 1, 7, 6, 0, 8, 2, 5, 5, 3, 2, 7, 9, 5, 3, 3, 2, 0, 5, 1, 5, 3], [1, 1, 3, 2, 1, 0, 0, 2, 2, 1, 3, 2, 1, 1, 1], [40, 63, 94, 45, 84, 10, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 42, 27, 15, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.square(tf.math.negative(tf.math.subtract(alpha, tf.math.add(tf.math.negative(tf.math.subtract(alpha, tf.math.add(sigma, tf.math.divide_no_nan(beta, tf.math.negative(alpha))))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.math.multiply(beta, tf.math.add(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(beta, tf.math.multiply(alpha, sigma)))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.subtract(alpha, tf.math.square(tf.math.multiply(alpha, alpha)))))))))))))", "other_info": {"loss": [5.647363916789347, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.1006472036242485, 0.1002509593963623, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777], "val_loss": [217372661720210.28, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.09733333438634872, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [3, 1, 3, 2, 2, 5, 0, 7, 6, 0, 8, 3, 8, 3, 5, 2, 1, 3, 5, 1, 8, 8, 5], [1, 2, 3, 2, 3, 0, 3, 0, 0, 1, 1, 3, 3, 1], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 37, 23, 14, 3], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.add(sigma, beta))), sigma), tf.math.divide_no_nan(tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.square(tf.math.add(tf.math.subtract(sigma, tf.math.multiply(tf.math.square(tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(alpha)))), alpha)), sigma)), tf.math.square(sigma))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [3, 1, 9, 2, 2, 5, 2, 7, 4, 0, 8, 0, 3, 6, 6], [1, 2, 3, 2, 1, 0, 0, 2, 2, 3, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), alpha), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05864482745528221, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [2, 7], [71], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], [4, 1, 4, 2, 2, 5, 0, 7, 6, 0, 8, 9], [3, 2, 3, 2, 1, 0, 0], [60, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 19, 12, 7, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.subtract(sigma, tf.math.pow(beta, tf.math.add(tf.math.add(tf.math.square(sigma), tf.math.negative(beta)), alpha))), tf.math.add(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [3, 5, 0, 0, 9, 6, 3, 7, 6, 0, 3, 2, 6, 8, 4, 6, 5, 5, 8, 6, 5, 8, 3, 8, 8, 4, 9], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 5, 3, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(alpha), tf.math.negative(beta))", "other_info": {"loss": [2.3030223014127658, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [9, 1, 0, 6, 2, 0, 5, 7, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [83, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030223014127658, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1], [3, 9, 2, 2, 2, 8, 0, 7, 6, 0, 8], [1, 1, 3, 2, 2, 0, 0], [97, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 0, 2, 9, 6, 9, 7, 6, 0, 3, 2, 6, 8, 4, 6, 5, 5, 8, 6, 5, 8, 3, 8, 8, 4, 9], [1, 3, 3, 2, 1, 0, 0, 3, 3, 0, 1, 0, 2, 1, 2], [40, 63, 56, 45, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, tf.math.negative(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(sigma, beta)))))", "other_info": {"loss": [109329444.84352559, 15770388284.018492, 272011992638.96024, 1951297945502.618, 8623684172982.186, 27900296431455.05], "accuracy": [0.09972262382507324, 0.09840179979801178, 0.10566636174917221, 0.10302469879388809, 0.09668471664190292, 0.10474177449941635], "val_loss": [886051474.2857143, 47734923264.0, 512295567360.0, 2792769154486.857, 10460876692333.715, 30855829988498.285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 9, 0, 2, 2, 5, 0, 4, 6, 0, 8], [1, 2, 3, 2, 1, 0, 0], [40, 63, 56, 45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(beta)), tf.math.pow(sigma, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [3, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [3, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [3, 1, 0, 4, 2, 1, 0, 7, 6, 0, 8, 0, 7, 3, 8, 7, 1, 8, 1], [1, 2, 3, 2, 1, 3, 0, 1, 1, 1, 2, 1, 3], [40, 63, 94, 45, 84, 10, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 32, 19, 13, 1], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.pow(alpha, tf.math.add(tf.math.subtract(tf.math.negative(beta), tf.math.add(sigma, beta)), alpha))), tf.math.divide_no_nan(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.multiply(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(beta), tf.math.subtract(alpha, sigma)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [2, 1, 1, 0], [96, 12, 93], [0], [0], [9, 5, 9, 0, 6, 4, 0, 2, 4], [2, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [3, 2, 0, 2, 2, 5, 0, 7, 6, 0, 8, 7, 2, 8, 0, 4, 3, 7, 0, 4, 6, 0, 5, 2, 9, 3, 4, 2, 6, 5, 3, 5, 4], [1, 3, 3, 2, 2, 0, 0, 1, 2, 2, 2, 2, 2, 1, 3, 0, 2, 0, 2, 2, 0], [40, 63, 56, 45, 48, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 51, 32, 19, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(sigma, sigma)))), beta), beta)), tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.pow(alpha, beta)))), tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.math.pow(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.square(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(beta, beta), alpha))))), sigma)), tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(beta, tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [1, 7], [71], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 0, 2, 2, 2, 0, 7, 6, 0, 8, 7, 9, 1, 4, 0, 7, 2, 4, 2, 8, 0], [1, 2, 3, 2, 3, 0, 0, 0, 0, 3, 1, 2, 2, 2], [40, 63, 56, 45, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 36, 22, 14, 5], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(beta), tf.math.add(sigma, beta)), sigma))), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.math.negative(alpha)), beta), beta), beta)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [1], [5, 2, 5, 6, 7, 0, 0, 0], [1, 1, 1, 0], [96, 12, 93], [1], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [1, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [3, 1, 2, 2, 2, 5, 0, 7, 6, 0, 8], [3, 3, 3, 2, 1, 0, 0], [40, 63, 94, 45, 84, 10, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1204652735.9453037, 22461689426.436665, 104456977555.56096, 294505617427.20593, 636494439160.6625, 1147090810380.9167], "accuracy": [0.09972262382507324, 0.09840179979801178, 0.10566636174917221, 0.10302469879388809, 0.09655263274908066, 0.10474177449941635], "val_loss": [4464626980.571428, 35706215277.71429, 120496460361.14285, 285605990985.1429, 557810506605.7142, 963879857590.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1], [5, 2, 5, 6, 7, 0, 0, 0], [0, 1, 1, 0], [96, 12, 93], [0], [1], [9, 5, 9, 0, 6, 4, 0, 2, 4], [4, 5, 0], [30], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0], [2, 9, 0, 1, 2, 0, 1, 7, 6, 0, 8], [3, 3, 3, 2, 1, 0, 0], [40, 63, 94, 45, 84, 10, 13]], "fitness": -0.029999999329447746, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.4636806585155444, 2.4723812598184494, 2.4291222554628704, 2.2994453265225774, 2.29780101162048, 2.32387100348084, 2.315405928494987], "accuracy": [0.2347113937139511, 0.24461762607097626, 0.15255580842494965, 0.14793290197849274, 0.1228371411561966, 0.10117553919553757, 0.09840179979801178], "val_loss": [1.8443683215550013, 1.911369800567627, 1.8713981083461217, 1.8530195099966866, 1.9897636004856654, 1.9915107999529158, 2.0998497009277344], "val_accuracy": [0.26600000262260437, 0.3216666579246521, 0.17100000381469727, 0.1756666600704193, 0.10000000149011612, 0.10100000351667404, 0.10366666316986084]}}]