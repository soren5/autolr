[{"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 7, 1, 2, 8, 4, 0, 2, 4, 6, 7], [2, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7888571619987488, "mapping_values": [1, 3, 3, 1, 2, 0, 21, 21, 11, 10, 2, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.2578057571094208, 2.066806374649881, 1.636719143055276, 1.2830760707125892, 1.1029020013936428, 1.0080741968893057, 0.9513927482736739, 0.8820989764975897, 0.8522901625019794, 0.8142640940611783, 0.7909216358047262, 0.7866612823096721, 0.7619112967626057, 0.7550981599326304, 0.7467686472992777, 0.7257270132782059, 0.700977465716241, 0.7076059495453286, 0.6930838169249813, 0.6981714551616669, 0.6720625300134068, 0.665934989315691, 0.6664000644801614, 0.6564200765594373, 0.6466862416034361, 0.6367413669907264, 0.6414086746186974, 0.6304543627692472, 0.631128234067188, 0.6206145120129971, 0.6137792401467458, 0.6260614007644492], "accuracy": [0.19891692698001862, 0.3883238732814789, 0.4839519262313843, 0.5698058605194092, 0.6132611036300659, 0.6464139223098755, 0.6556597352027893, 0.687491774559021, 0.6959450244903564, 0.7106062769889832, 0.7091533541679382, 0.7086250185966492, 0.7217012047767639, 0.7217012047767639, 0.7309470176696777, 0.7380794882774353, 0.7464007139205933, 0.7401928305625916, 0.7434949278831482, 0.7448157668113708, 0.7543256878852844, 0.7547219395637512, 0.7498348951339722, 0.7586844563484192, 0.7633073329925537, 0.7650244235992432, 0.7655527591705322, 0.7680623531341553, 0.7676661014556885, 0.7788931727409363, 0.7733456492424011, 0.7707040309906006], "val_loss": [1.853593213217599, 1.52510666847229, 1.0575905527387346, 0.8377611637115479, 0.7432378700801304, 0.6709409611565726, 0.6515525920050484, 0.6100449562072754, 0.576984098979405, 0.56934997013637, 0.5604581321988787, 0.5483645711626325, 0.541104793548584, 0.5263991526194981, 0.5219100713729858, 0.503844005720956, 0.5001942430223737, 0.4951738289424351, 0.48513644082205637, 0.47458655493600027, 0.47815001010894775, 0.47337400913238525, 0.4618208748953683, 0.46352010113852365, 0.46371873787471224, 0.4564199617930821, 0.45175181116376606, 0.4699577604021345, 0.4430394342967442, 0.44792475019182476, 0.43039895806993755, 0.43781434638159616], "val_accuracy": [0.44200000166893005, 0.5836666822433472, 0.6539999842643738, 0.6946666836738586, 0.6856666803359985, 0.7289999723434448, 0.7350000143051147, 0.7353333234786987, 0.7596666812896729, 0.7493333220481873, 0.7586666941642761, 0.7599999904632568, 0.753333330154419, 0.7710000276565552, 0.781333327293396, 0.778333306312561, 0.7873333096504211, 0.7893333435058594, 0.7916666865348816, 0.7946666479110718, 0.7799999713897705, 0.796999990940094, 0.800000011920929, 0.8073333501815796, 0.8019999861717224, 0.8040000200271606, 0.8186666369438171, 0.7919999957084656, 0.8149999976158142, 0.8033333420753479, 0.8149999976158142, 0.8053333163261414]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [6, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.7879999876022339, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.257805842544582, 2.0668278546333942, 1.636761302126712, 1.2831984613990708, 1.1030540978982544, 1.0076339148007616, 0.9503807203959574, 0.8820022268223489, 0.8521178861052338, 0.8140205975143177, 0.7890797177987281, 0.7873974724641613, 0.7622931873588955, 0.755446212528845, 0.7468134054040487, 0.7261920432058134, 0.7013013820212988, 0.707518975449087, 0.6929809583601714, 0.699399662134339, 0.6724702939302568, 0.6657438415184217, 0.6643429558196198, 0.6587753498858118, 0.6470048013317303, 0.6369070753193393, 0.641101683206436, 0.6302852751934422, 0.6312796910834776, 0.6210220415106287, 0.6132676548662439, 0.6261683327961812], "accuracy": [0.19891692698001862, 0.3881917893886566, 0.483819842338562, 0.5695416927337646, 0.6131290197372437, 0.6472064256668091, 0.6552634835243225, 0.6870955228805542, 0.6955488324165344, 0.7111346125602722, 0.7087571024894714, 0.7086250185966492, 0.7207766771316528, 0.7205125093460083, 0.7308149337768555, 0.7371549606323242, 0.7452120184898376, 0.7388719916343689, 0.7427024245262146, 0.7446836829185486, 0.7537974119186401, 0.7539294958114624, 0.7510236501693726, 0.7568352818489075, 0.7621186375617981, 0.765949010848999, 0.7668735980987549, 0.7700436115264893, 0.7663452625274658, 0.7784969210624695, 0.7728173136711121, 0.7721568942070007], "val_loss": [1.8536013875688826, 1.5251379353659493, 1.0576515538351876, 0.8378125258854457, 0.7428585631506783, 0.6704027482441494, 0.6516425098691668, 0.6088883876800537, 0.5767543486186436, 0.5653928518295288, 0.5595316205705915, 0.5488194908414569, 0.542062486921038, 0.5262288706643241, 0.5219671726226807, 0.5042025872639248, 0.500306248664856, 0.4945730652127947, 0.4830122334616525, 0.4752650942121233, 0.4788048778261457, 0.4721311501094273, 0.46290288652692524, 0.4619676045009068, 0.46189102104731966, 0.4590743269239153, 0.4521040746143886, 0.46934517792293, 0.44342436109270367, 0.4483638490949358, 0.43081529651369366, 0.43777220589773996], "val_accuracy": [0.4423333406448364, 0.5833333134651184, 0.6539999842643738, 0.6946666836738586, 0.6859999895095825, 0.7283333539962769, 0.7353333234786987, 0.7350000143051147, 0.7599999904632568, 0.7546666860580444, 0.7586666941642761, 0.7596666812896729, 0.7526666522026062, 0.7706666588783264, 0.7816666960716248, 0.7803333401679993, 0.7836666703224182, 0.7879999876022339, 0.7953333258628845, 0.793666660785675, 0.7799999713897705, 0.8033333420753479, 0.7993333339691162, 0.8069999814033508, 0.8040000200271606, 0.8003333210945129, 0.8183333277702332, 0.7940000295639038, 0.812666654586792, 0.8023333549499512, 0.8166666626930237, 0.8040000200271606]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 7, 1, 2, 8, 4, 0, 2, 6, 9, 4], [2, 3, 3, 3, 1, 2, 3, 3, 2, 4, 1], [76, 7], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [26, 63, 56, 12]], "fitness": -0.7602857351303101, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.295266946419245, 2.278736574680357, 2.258732044937714, 2.2387697873665373, 2.2146589213106624, 2.1875954396405697, 2.1501846286079367, 2.1064454684120837, 2.049283840085978, 1.9830979050394566, 1.9086457115547957, 1.8276169443678436, 1.733395978286833, 1.6415136430745647, 1.558141891100718, 1.487318763533257, 1.4100004486388313, 1.3709496737250784, 1.3087367709633098, 1.2688395400104615, 1.2200171853793438, 1.1971220995346632, 1.1629996646932246, 1.1329150219099664, 1.1128581572265484, 1.0878584724076592, 1.0569440999035475, 1.0407708504290991, 1.0164622158154584, 1.005437879923895, 0.990728321958448, 0.9867396566373734, 0.9599552211539778, 0.9426221739126313, 0.9511896929941188, 0.931886719824411, 0.9223451576433193, 0.9140215730623027, 0.9040619855653876, 0.8870057087800506, 0.8886928419001807, 0.8693273033385327, 0.8639782190543314, 0.8628512072667092, 0.8534014031808642, 0.851414075884695, 0.8428158049475736, 0.840251109540549, 0.830330779618276, 0.8295771710986962, 0.8295674087774201, 0.8174245607552196, 0.8179502020249387, 0.8153191020286882, 0.8025186216007717, 0.7910038486069944, 0.7963047282035404, 0.7883326912584432, 0.7867958354849179, 0.7883145975603671, 0.7844970716366978, 0.7768470768316972, 0.7803228754471984, 0.7700894767692328, 0.7739688368474078, 0.7669958752758231, 0.7595122959068691, 0.7588403602443776, 0.7629515890195905, 0.7546641486762711, 0.7508583317784239, 0.7547003039594465, 0.7447578041088375, 0.7368749422388401, 0.7424234025010091, 0.749372439487751, 0.7396480743879686, 0.7258384454409366, 0.7281576052569851, 0.7304889074232852, 0.7332106472132401, 0.7240792559185489, 0.7164043028278122, 0.7165171856405304, 0.7150476816906323, 0.7167573477519329], "accuracy": [0.10738343745470047, 0.15374454855918884, 0.20512482523918152, 0.24620261788368225, 0.2883370816707611, 0.3185840845108032, 0.35068023204803467, 0.37445515394210815, 0.4010038375854492, 0.4231937527656555, 0.4271562397480011, 0.4492141008377075, 0.47510236501693726, 0.5008585453033447, 0.5114251971244812, 0.5234447121620178, 0.537709653377533, 0.5381059050559998, 0.5534275770187378, 0.5616167187690735, 0.5795799493789673, 0.5836745500564575, 0.5950337052345276, 0.6000528335571289, 0.6132611036300659, 0.6218464970588684, 0.6318848133087158, 0.6387531161308289, 0.6449610590934753, 0.6454893946647644, 0.6483951807022095, 0.6502443552017212, 0.6676793098449707, 0.6672830581665039, 0.6686038970947266, 0.6696605682373047, 0.6668868064880371, 0.6765288710594177, 0.6769251227378845, 0.6816800832748413, 0.6826046705245972, 0.6902654767036438, 0.6950204968452454, 0.6906617283821106, 0.6985867023468018, 0.6988508701324463, 0.6989829540252686, 0.6992471218109131, 0.696209192276001, 0.7030775547027588, 0.700171709060669, 0.7020208835601807, 0.7077004313468933, 0.7106062769889832, 0.7107383608818054, 0.7125874757766724, 0.7116629481315613, 0.711530864238739, 0.7197200059890747, 0.7143045663833618, 0.7165499925613403, 0.718399167060852, 0.7201162576675415, 0.7263241410255432, 0.7190595865249634, 0.7250033020973206, 0.7275128960609436, 0.7271166443824768, 0.7223616242408752, 0.7300224304199219, 0.7273808121681213, 0.7290979027748108, 0.7309470176696777, 0.7345132827758789, 0.7316074371337891, 0.7316074371337891, 0.7317395210266113, 0.7388719916343689, 0.7313432693481445, 0.7343811988830566, 0.7349095344543457, 0.737947404384613, 0.7411174178123474, 0.7388719916343689, 0.7397965788841248, 0.735569953918457], "val_loss": [1.9537896428789412, 1.9370338576180595, 1.9189630917140417, 1.8977625710623605, 1.8727500779288155, 1.842167513711112, 1.803170612880162, 1.7553228650774275, 1.6970273086002894, 1.6271485260554723, 1.5476243495941162, 1.461493934903826, 1.3710123470851354, 1.2812192780630929, 1.1979407923562186, 1.1235086236681258, 1.0571521009717668, 1.0018408639090401, 0.9540762220110212, 0.9136852196284703, 0.8771343231201172, 0.8466735737664359, 0.8187640905380249, 0.795441882950919, 0.7759212255477905, 0.7576131480080741, 0.7405150958469936, 0.7248441321509225, 0.7118519374302456, 0.6993630273001534, 0.6880738394601005, 0.679070268358503, 0.6687196833746774, 0.659852317401341, 0.6526943615504673, 0.6447763783591134, 0.6381489208766392, 0.6318005153111049, 0.6253668069839478, 0.6176021269389561, 0.6130326475415911, 0.6069921425410679, 0.6039279018129621, 0.5977356433868408, 0.5931791067123413, 0.5904498781476702, 0.58500075340271, 0.5814437866210938, 0.5779693126678467, 0.5738165889467511, 0.5707206896373204, 0.5673197507858276, 0.5651135785239083, 0.5608200856617519, 0.5573301655905587, 0.5543132679803031, 0.5516340902873448, 0.5492088965007237, 0.5467545815876552, 0.5442862340382167, 0.5422911473682949, 0.539793746812003, 0.5368685722351074, 0.5342749186924526, 0.5313306195395333, 0.5296709878104073, 0.5270089762551444, 0.5259520666939872, 0.5244396754673549, 0.5208761010851178, 0.5198603187288556, 0.518112165587289, 0.5158853871481759, 0.5131713151931763, 0.511346527508327, 0.5098343747002738, 0.5086907999856132, 0.5083833932876587, 0.5058817863464355, 0.5035549572535923, 0.502253532409668, 0.5005726643971035, 0.49896172114780973, 0.4968711648668562, 0.49635604449680876, 0.4940931797027588], "val_accuracy": [0.1836666613817215, 0.30933332443237305, 0.3763333261013031, 0.4086666703224182, 0.44466665387153625, 0.4606666564941406, 0.48500001430511475, 0.512333333492279, 0.5363333225250244, 0.550000011920929, 0.5669999718666077, 0.5866666436195374, 0.6000000238418579, 0.6136666536331177, 0.6256666779518127, 0.643666684627533, 0.6596666574478149, 0.6643333435058594, 0.6736666560173035, 0.6819999814033508, 0.6869999766349792, 0.6919999718666077, 0.6936666369438171, 0.6963333487510681, 0.6976666450500488, 0.7016666531562805, 0.7039999961853027, 0.7106666564941406, 0.7113333344459534, 0.7146666646003723, 0.7193333506584167, 0.7176666855812073, 0.7253333330154419, 0.7286666631698608, 0.7356666922569275, 0.7369999885559082, 0.7363333106040955, 0.7416666746139526, 0.7436666488647461, 0.746999979019165, 0.7483333349227905, 0.7516666650772095, 0.7483333349227905, 0.7523333430290222, 0.7549999952316284, 0.7523333430290222, 0.7599999904632568, 0.7566666603088379, 0.7580000162124634, 0.7596666812896729, 0.7570000290870667, 0.7609999775886536, 0.7590000033378601, 0.7609999775886536, 0.762333333492279, 0.765333354473114, 0.7663333415985107, 0.7680000066757202, 0.7666666507720947, 0.7683333158493042, 0.7689999938011169, 0.7749999761581421, 0.7749999761581421, 0.7763333320617676, 0.7739999890327454, 0.7749999761581421, 0.7786666750907898, 0.7739999890327454, 0.7749999761581421, 0.7806666493415833, 0.7753333449363708, 0.7803333401679993, 0.7803333401679993, 0.7833333611488342, 0.7803333401679993, 0.7816666960716248, 0.778333306312561, 0.7799999713897705, 0.7836666703224182, 0.7829999923706055, 0.7870000004768372, 0.7850000262260437, 0.7853333353996277, 0.7863333225250244, 0.7866666913032532, 0.784333348274231]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [76, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.5288571715354919, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.162266212652199, 1.3376157965563733, 0.8943510343055086, 0.8191423103038141, 0.7583783182170744, 0.7001389085010468, 0.6722250100077104, 0.6143296387185825, 0.5950816876978654, 0.5731753762041368, 0.5636544307351128, 0.5484341951157234, 0.5245326246489088, 0.49583564399334545, 0.49888205516056505, 0.4859553979112645, 0.48228990863169724, 0.46088195134462573, 0.4728898325569169, 0.4643480692006153, 0.4422576537205952, 0.4550938538989497, 0.4495074504386354, 0.4615777992592858, 0.4634821339093494], "accuracy": [0.27024170756340027, 0.5507858991622925, 0.6695284843444824, 0.6910579800605774, 0.7136441469192505, 0.737947404384613, 0.7448157668113708, 0.7689869403839111, 0.7766477465629578, 0.7854973077774048, 0.7835160493850708, 0.7971205711364746, 0.8017435073852539, 0.8084797263145447, 0.8083476424217224, 0.8101968169212341, 0.81548011302948, 0.8156121969223022, 0.8210275769233704, 0.8214238286018372, 0.8289526104927063, 0.8308017253875732, 0.826310932636261, 0.8255184292793274, 0.8239334225654602], "val_loss": [1.2642062050955636, 0.6476672887802124, 0.571343183517456, 0.5608148404530117, 0.5212699345179966, 0.4740230015345982, 0.4562572581427438, 0.4113195708819798, 0.4113238624164036, 0.4163057633808681, 0.39490729570388794, 0.37141696895871845, 0.35997447797230314, 0.3611128755978176, 0.3550436667033604, 0.3417845794132778, 0.3438177619661604, 0.3480609485081264, 0.3436544622693743, 0.3460163048335484, 0.35356253385543823, 0.351316613810403, 0.3483774406569345, 0.35937940222876413, 0.3691221901348659], "val_accuracy": [0.5556666851043701, 0.7210000157356262, 0.7509999871253967, 0.7486666440963745, 0.7596666812896729, 0.7893333435058594, 0.79666668176651, 0.8180000185966492, 0.8183333277702332, 0.8259999752044678, 0.82833331823349, 0.8403333425521851, 0.8450000286102295, 0.8473333120346069, 0.8503333330154419, 0.8539999723434448, 0.8576666712760925, 0.8533333539962769, 0.8600000143051147, 0.862666666507721, 0.8576666712760925, 0.8539999723434448, 0.8569999933242798, 0.8516666889190674, 0.8529999852180481]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [2, 7, 1, 2, 8, 4, 0, 2, 4, 6, 7], [3, 3, 0, 5, 5, 1, 0, 0, 4, 3], [76, 45, 25, 46], [1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 5, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 13, 9, 4, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(tf.math.negative(alpha))), tf.math.pow(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [1, 3, 0], [76, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [0, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027832530130876, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 2, 7, 0, 6, 4, 0, 2, 4], [2, 3, 4, 3, 1, 2, 0, 4, 2, 4, 1], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 7, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 4, 4, 0, 1, 1, 1, 0, 1, 16, 9, 7, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(grad, tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 1, 2, 8, 4, 0, 2, 4, 6, 7], [2, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 3, 9, 0, 6, 4, 0, 2, 4], [2, 3, 3, 3], [76, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [59, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 13, 8, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [9089803451009.928, 3.0608157495922654, 3.124469214678598, 3.972585399216035, 5.892301418683344, 10.06648791644079, 19.014709555540637, 33.88116316064127, 52.62963622212489], "accuracy": [0.09760929644107819, 0.0956280529499054, 0.09866596013307571, 0.10408136248588562, 0.10328886657953262, 0.10527011007070541, 0.09932637959718704, 0.09906221181154251, 0.10170386731624603], "val_loss": [2.562572819846017, 2.542708601270403, 2.6519233158656528, 4.3617207663399835, 6.5651348658970425, 11.848632267543248, 21.465232849121094, 36.38213893345424, 56.09431021554129], "val_accuracy": [0.10100000351667404, 0.0963333323597908, 0.10000000149011612, 0.10366666316986084, 0.0963333323597908, 0.09733333438634872, 0.10000000149011612, 0.10300000011920929, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [5, 3, 9, 7, 6, 4, 0, 2, 4], [1, 2, 0], [52, 45], [1, 0, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [92, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [3, 5, 3, 3, 1, 2, 0, 4, 2, 4, 1], [83, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 3, 6, 2, 5, 0, 6, 4, 0, 8, 1, 0, 5, 9], [1, 3, 0, 0, 3, 0, 2, 0], [35, 63, 56, 12, 90]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 3, 1, 1, 0, 0, 23, 15, 8, 5], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(sigma)), tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)), tf.math.pow(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta)), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 7, 1, 2, 2, 4, 0, 2, 4, 6, 7], [2, 2, 0, 3, 1, 2, 0, 0, 2, 4, 1], [52, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [66, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 3, 2, 1, 1, 0, 13, 8, 5, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.pow(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.negative(sigma), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16312244534492493, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 0, 0, 2], [96, 12, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [5, 5, 8, 0, 6, 4, 0, 2, 4], [2, 3, 1, 3, 1, 2, 1, 4, 2, 4, 3], [62, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 0, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 12, 8, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3454451215832446, 2.661529641440516, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.038304053246974945, 0.013208295218646526, 0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.070221151624407, 3.584124973842076, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0033333334140479565, 0.0416666679084301, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [9, 3, 9, 0, 6, 4, 0, 2, 4], [3, 3, 0], [32, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 7, 0, 7, 2, 5, 0, 5, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.add(tf.math.add(tf.math.square(tf.math.negative(alpha)), tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0, 2], [96, 12, 93], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [4, 7, 2, 2, 8, 2, 0, 2, 4, 6, 7], [2, 3, 0, 3, 1, 2, 0, 4, 3, 4, 1], [26, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [4, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 2, 0, 6, 2, 9, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [66, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 8, 4, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(alpha), tf.math.divide_no_nan(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha)), tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [4, 8, 8, 0, 6, 4, 0, 2, 4], [4, 3, 1, 3, 1, 2, 1, 4, 2, 4, 3], [62, 45], [0, 0, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [0, 3], [5, 7], [71], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 9, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [35, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 2, 2, 1, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(grad), tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3091417609141596, 2.357201169022417, 2.4911579565207687, 3.2647647699581053, 245.14310386948944, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.03011491149663925, 0.011491216719150543, 0.00845330860465765, 0.07660810649394989, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9936941691807337, 2.0685583523341586, 2.2936321667262485, 5.115777288164411, 32195.1796875, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.007333333138376474, 0.004999999888241291, 0.004666666500270367, 0.017000000923871994, 0.09666666388511658, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 0, 3, 1, 2, 0, 4, 2, 4, 1], [52, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [9, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 2, 6, 2, 5, 0, 0, 4, 0, 8], [1, 1, 0, 0, 3, 0, 2], [66, 63, 56, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [2, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [4, 7, 8, 0, 6, 4, 0, 2, 4], [2, 1, 0, 3, 1, 2, 0, 4, 2, 4, 1], [11, 45], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [66, 63, 56, 12]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.3022445608296995, 2.3023952402065238, 2.2997233838988427, 2.3004680017454433, 2.3000960725724595, 2.3008799339723214, 2.3002733864946103, 2.3005803821739064, 2.298566840501462, 2.2988801003762083, 2.299339908697602, 2.300025240966531, 2.2988647315889823, 2.2990086752236905, 2.29911440537669], "accuracy": [0.08994849026203156, 0.09311848133802414, 0.09628847241401672, 0.09602430462837219, 0.09417514503002167, 0.0936468094587326, 0.09642054885625839, 0.09325055778026581, 0.10791176557540894, 0.09893012791872025, 0.10157178342342377, 0.1006472036242485, 0.10645885765552521, 0.10342095047235489, 0.09721305221319199], "val_loss": [1.96983003616333, 1.9692591258457728, 1.9690424374171667, 1.9690472057887487, 1.969097341809954, 1.9690886906215124, 1.9690406663077218, 1.9688566752842493, 1.9688520431518555, 1.9688975470406669, 1.969027042388916, 1.9692582402910506, 1.969585759299142, 1.9698169572012765, 1.9701149804251534], "val_accuracy": [0.045666664838790894, 0.05366666615009308, 0.05900000035762787, 0.0663333311676979, 0.06800000369548798, 0.07500000298023224, 0.08133333176374435, 0.08533333241939545, 0.08666666597127914, 0.09033333510160446, 0.08833333104848862, 0.08733333647251129, 0.0806666687130928, 0.07833333313465118, 0.07766667008399963]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [1, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [9, 7, 8, 0, 6, 4, 0, 2, 4], [2, 5, 2, 3, 1, 2, 0, 4, 2, 4, 1], [83, 45], [0, 1, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 2, 3, 6, 2, 5, 0, 0, 4, 0, 8], [1, 3, 0, 0, 0, 3, 2], [35, 22, 56, 12]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 13, 7, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, tf.math.add(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [3.2448944350779096, 2.305117339033571, 2.3035630863954553, 2.3030818608994057, 2.3029657046650978, 2.302774658670452, 2.302270409547894], "accuracy": [0.21872936189174652, 0.10038304328918457, 0.10011887550354004, 0.09853387624025345, 0.09351472556591034, 0.09840179979801178, 0.11042134463787079], "val_loss": [1.9763320514133997, 1.9742546762738908, 1.9736895561218262, 1.9735591752188546, 1.9734946659633092, 1.9734145573207311, 1.9726546151297433], "val_accuracy": [0.10366666316986084, 0.11633333563804626, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1], [1, 2, 5, 6, 7, 0, 0, 2, 5, 2, 2, 9, 4, 0], [0, 1, 1, 0], [96, 12, 93], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [1, 7, 8, 0, 6, 4, 0, 2, 4], [2, 3, 3, 3], [32, 45], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [1, 3], [5, 7], [71], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 5, 0, 0, 4, 0, 8], [3, 1, 0, 0, 3, 0, 2], [38, 63, 56, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025969135101523, 2.303769216466936, 2.3016738413252833, 2.302794525006412, 2.3025251828983335, 2.3037135410208065], "accuracy": [0.08955223858356476, 0.08981640636920929, 0.08981640636920929, 0.09060890227556229, 0.08928807079792023, 0.0866464152932167], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]