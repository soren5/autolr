[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.1082200678725993, 1.7244765927936139, 1.2648259715523151, 1.002137642872883, 0.9158779472691303, 0.8461572098898897, 0.7563979191912983, 0.7213320780849066, 0.679014384179713, 0.6537685830437858, 0.6358172446666471, 0.6116225385253361, 0.5804182500839863, 0.5869181818493511, 0.577107734302126, 0.5403383322726341, 0.539729863960257, 0.5284339216611704, 0.5202064139495641, 0.5049161760050623, 0.4926966211114341, 0.48874700670118865, 0.5115684919888869, 0.4579474981025446, 0.462421610622736, 0.44531870127637485, 0.4619813120801294, 0.435879627498795, 0.43263162017703105, 0.42385268775054163, 0.4337501708566237, 0.4009006888229361, 0.418463486375558, 0.40727765174227587, 0.3978003701828632, 0.3936157450503079, 0.3883588876289352], "accuracy": [0.30643242597579956, 0.42768457531929016, 0.5663716793060303, 0.6392814517021179, 0.6622639298439026, 0.6807554960250854, 0.7154933214187622, 0.7218332886695862, 0.7334566116333008, 0.7437590956687927, 0.7552502751350403, 0.7643640041351318, 0.7814027070999146, 0.7749306559562683, 0.7817989587783813, 0.7942147850990295, 0.7942147850990295, 0.7987055778503418, 0.8055738806724548, 0.8055738806724548, 0.8132346868515015, 0.81548011302948, 0.8061022162437439, 0.8284242749214172, 0.824329674243927, 0.8313300609588623, 0.8231409192085266, 0.8383304476737976, 0.8381983637809753, 0.8411042094230652, 0.8338396549224854, 0.8521991968154907, 0.8363492488861084, 0.8454629778862, 0.8487650156021118, 0.8508783578872681, 0.8558974862098694], "val_loss": [1.7362100737435477, 0.9439692156655448, 0.9407968180520194, 0.6577250276293073, 0.7471986498151507, 0.5368319749832153, 0.6204779488699776, 0.5741510561534336, 0.4869134596415928, 0.503969839641026, 0.5003722395215716, 0.42810228041240145, 0.4768966776984079, 0.44219814028058735, 0.40481873069490704, 0.398908793926239, 0.3963338051523481, 0.38724981035505024, 0.4183847989354815, 0.37455471072878155, 0.37641426495143343, 0.37802399907793316, 0.3643061433519636, 0.41063653571265085, 0.38745456082480295, 0.3905754600252424, 0.36496457883289884, 0.33805835247039795, 0.3498918414115906, 0.3813908440726144, 0.3300772820200239, 0.3273299166134426, 0.3348327364240374, 0.3522698368344988, 0.3391418627330235, 0.340606016772134, 0.3487528051648821], "val_accuracy": [0.29499998688697815, 0.5986666679382324, 0.6153333187103271, 0.7053333520889282, 0.6119999885559082, 0.7603333592414856, 0.7283333539962769, 0.7279999852180481, 0.7883333563804626, 0.7823333144187927, 0.7613333463668823, 0.8109999895095825, 0.7863333225250244, 0.8136666417121887, 0.8246666789054871, 0.8273333311080933, 0.8293333053588867, 0.8360000252723694, 0.8066666722297668, 0.8399999737739563, 0.8363333344459534, 0.8416666388511658, 0.8479999899864197, 0.8159999847412109, 0.8246666789054871, 0.8216666579246521, 0.8493333458900452, 0.862666666507721, 0.8553333282470703, 0.8450000286102295, 0.8600000143051147, 0.8706666827201843, 0.8546666502952576, 0.8510000109672546, 0.859333336353302, 0.8510000109672546, 0.8456666469573975]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 6, 7, 1, 3, 8, 0, 2, 0, 6, 0, 7, 4, 8], [1, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 1, 4, 4, 4], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 7, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 41, 41, 24, 17, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad))))))), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.1082337568653666, 1.7418865804674761, 1.2461687234634926, 1.002248808038926, 0.8786143683927438, 0.8322315624109459, 0.7672335243243992, 0.7177696182837717, 0.6591118373544602, 0.641270371302795, 0.6236016559893697, 0.6446569167848087, 0.5800192483963196, 0.5898090743228129, 0.5879704380126725, 0.5319463937211077, 0.5263749592733452, 0.5332400295728422, 0.5162746275397119, 0.5140177771014119, 0.4927020873281509, 0.49461518312883007, 0.5086479283492358, 0.4617995102848627, 0.4577797448488668, 0.4477742230139546, 0.4652143344312627, 0.4352354528865857, 0.42975474278987624, 0.42344396058610245, 0.43470274901755374, 0.40303288376751734, 0.404770439138124, 0.4052207740093849, 0.39843006968781647, 0.4056420795567331, 0.3803739126812528, 0.3850302041293356, 0.39523356236549906, 0.3523752882007941, 0.37456353893054556, 0.3735321392519851, 0.3622509118052931, 0.3534985556499817, 0.34358195862309054, 0.3468419776860639, 0.3309236808522912, 0.3460655519203692, 0.33090924127478843, 0.3448554441724487, 0.31238356888050167, 0.32020687309821144, 0.29916232645220336], "accuracy": [0.30643242597579956, 0.42609959840774536, 0.5748249888420105, 0.6432439684867859, 0.6742834448814392, 0.687887966632843, 0.7123233675956726, 0.7232862114906311, 0.7456082701683044, 0.7524765729904175, 0.7629110813140869, 0.7511557340621948, 0.7821952104568481, 0.7720248103141785, 0.7800818681716919, 0.8010830879211426, 0.7980451583862305, 0.7981772422790527, 0.8029322624206543, 0.8006868362426758, 0.8123101592063904, 0.8131026029586792, 0.8100647330284119, 0.8231409192085266, 0.8309338092803955, 0.8280280232429504, 0.8252542614936829, 0.8379341959953308, 0.8413683772087097, 0.8433496356010437, 0.8327829837799072, 0.8492933511734009, 0.8451988101005554, 0.8436138033866882, 0.8491612672805786, 0.8465195894241333, 0.8585391640663147, 0.8557654023170471, 0.8475762605667114, 0.8681812286376953, 0.8549728989601135, 0.8593316674232483, 0.8599920868873596, 0.8704266548156738, 0.8713511824607849, 0.8705587387084961, 0.876370370388031, 0.8664641380310059, 0.8737286925315857, 0.8709549307823181, 0.8829745054244995, 0.8746532797813416, 0.887201189994812], "val_loss": [1.7365600722176688, 0.9754055227552142, 1.0332872526986259, 0.6445318119866508, 0.7905044555664062, 0.5276491301400321, 0.5877578939710345, 0.5263088600976127, 0.47603765555790495, 0.4924348933356149, 0.5324106897626605, 0.43753801924841745, 0.437974750995636, 0.45565920216696604, 0.40745183399745394, 0.4010084186281477, 0.4098380718912397, 0.3903543267931257, 0.44228139093944, 0.38094379220690044, 0.38987077133996145, 0.3731703332492283, 0.3637015223503113, 0.4024058239800589, 0.39354975734438213, 0.3767927203859602, 0.3530245338167463, 0.33664238452911377, 0.3684720993041992, 0.407774601663862, 0.3396996089390346, 0.3272217171532767, 0.34847971371241976, 0.34239496503557476, 0.3394977790968759, 0.3348875216075352, 0.3204623545919146, 0.3137959497315543, 0.3159644092832293, 0.3248992051397051, 0.3134342346872602, 0.3080775567463466, 0.30103314774377005, 0.34575687987463816, 0.3322042567389352, 0.32032557896205355, 0.34459711824144634, 0.29362220423562185, 0.3687075546809605, 0.32331482001713346, 0.307464063167572, 0.3145293082509722, 0.3164745994976589], "val_accuracy": [0.29466667771339417, 0.6103333234786987, 0.6013333201408386, 0.7126666903495789, 0.6163333058357239, 0.7603333592414856, 0.7443333268165588, 0.7519999742507935, 0.7946666479110718, 0.7736666798591614, 0.7450000047683716, 0.8136666417121887, 0.812666654586792, 0.8053333163261414, 0.8299999833106995, 0.8266666531562805, 0.8240000009536743, 0.8343333601951599, 0.7943333387374878, 0.8420000076293945, 0.8236666917800903, 0.8413333296775818, 0.8473333120346069, 0.8220000267028809, 0.8220000267028809, 0.8379999995231628, 0.8526666760444641, 0.8650000095367432, 0.840666651725769, 0.8326666951179504, 0.8579999804496765, 0.8683333396911621, 0.843999981880188, 0.8556666374206543, 0.856333315372467, 0.8566666841506958, 0.8686666488647461, 0.8693333268165588, 0.8733333349227905, 0.8663333058357239, 0.8673333525657654, 0.8726666569709778, 0.8796666860580444, 0.8500000238418579, 0.8579999804496765, 0.8653333187103271, 0.8420000076293945, 0.8820000290870667, 0.8476666808128357, 0.8636666536331177, 0.8669999837875366, 0.871666669845581, 0.8706666827201843]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [5, 3, 9, 2, 5, 2, 2, 1, 1, 6, 7, 3, 9, 1, 5, 1], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0821682579403054, 1.374012971094429, 1.0764573752415603, 0.9138760225112491, 0.8171327770771902, 0.8003109810358938, 0.7606145607450493, 0.7176657101623355, 0.6932715010554831, 0.6745289597591908, 0.6573037193309929, 0.6403937792702437, 0.6343181825757988, 0.626153244782968, 0.6347153437151775, 0.5979685338811631, 0.5808069275559499, 0.5806319584558038, 0.566667367603958, 0.5709477115647353, 0.5689968968804455, 0.5527204162353979, 0.5608728495587006, 0.5316036478828493, 0.528266538364099], "accuracy": [0.3187161684036255, 0.5130101442337036, 0.5992603302001953, 0.6519614458084106, 0.6933034062385559, 0.6992471218109131, 0.7088891863822937, 0.7236824631690979, 0.7367587089538574, 0.7427024245262146, 0.7477215528488159, 0.7552502751350403, 0.7518161535263062, 0.757099449634552, 0.759609043598175, 0.7721568942070007, 0.7745344042778015, 0.7783648371696472, 0.7884030938148499, 0.7827235460281372, 0.7795535326004028, 0.7876105904579163, 0.7835160493850708, 0.7980451583862305, 0.7977809906005859], "val_loss": [1.2077833924974715, 0.8689533982958112, 0.716149125780378, 0.6370913301195417, 0.6127862419400897, 0.5336288894925799, 0.5531644821166992, 0.529313325881958, 0.5097687074116298, 0.5224637304033551, 0.48418309007372173, 0.47912379673549105, 0.47913551330566406, 0.4950345754623413, 0.4551225219454084, 0.4461766140801566, 0.43978714091437204, 0.42843746287482126, 0.47010413237980436, 0.4182041031973703, 0.42208422081811087, 0.4126019222395761, 0.4082402927534921, 0.4419288805552891, 0.42987426689692904], "val_accuracy": [0.5696666836738586, 0.5913333296775818, 0.6556666493415833, 0.7300000190734863, 0.7390000224113464, 0.7649999856948853, 0.7493333220481873, 0.7523333430290222, 0.778333306312561, 0.7586666941642761, 0.7933333516120911, 0.7699999809265137, 0.7739999890327454, 0.7829999923706055, 0.8073333501815796, 0.8100000023841858, 0.8230000138282776, 0.8193333148956299, 0.7760000228881836, 0.8256666660308838, 0.8140000104904175, 0.8130000233650208, 0.8253333568572998, 0.7929999828338623, 0.8119999766349792]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [3, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.1079559272637125, 1.752382517868675, 1.236252214111562, 1.0788698360636848, 0.8982516678017931, 0.7971889240126709, 0.7773467903407401, 0.7436144899666947, 0.6676923786691623, 0.6767908121931429, 0.6168843089487134, 0.6078639789783975, 0.5832057418588319, 0.5892662927852788, 0.5797771265234032, 0.5521836938985256, 0.5303682617507575, 0.5324173087630337, 0.5182070292895575, 0.5124929442838387, 0.49173755598357954, 0.4933973874642376, 0.5136799532361649, 0.46418509467119523, 0.46156211762837035, 0.45083524224749016, 0.4712071510322373, 0.43733018789041345, 0.4319536461570023, 0.43103745710013674, 0.43333125634830166, 0.40971430653924906, 0.4191926341204202, 0.41136638253923297, 0.3956710502629298, 0.39634009037255896, 0.3900607037640298], "accuracy": [0.30643242597579956, 0.42649585008621216, 0.5861841440200806, 0.6144498586654663, 0.6581693291664124, 0.698718786239624, 0.6980583667755127, 0.717870831489563, 0.739928662776947, 0.743891179561615, 0.767401933670044, 0.7683265209197998, 0.7796856164932251, 0.7711002230644226, 0.7833839654922485, 0.7897239327430725, 0.7946110367774963, 0.8006868362426758, 0.8017435073852539, 0.8005547523498535, 0.8131026029586792, 0.8153480291366577, 0.8062343001365662, 0.8244617581367493, 0.8238013386726379, 0.8290846943855286, 0.821820080280304, 0.835160493850708, 0.839519202709198, 0.8376700282096863, 0.8352925777435303, 0.8450667262077332, 0.8391229510307312, 0.8442742228507996, 0.8495575189590454, 0.850350022315979, 0.8536521196365356], "val_loss": [1.7359273093087333, 0.9502722876412528, 1.1622274943760462, 0.6821908610207694, 0.6554092850003924, 0.5365633283342633, 0.6957398142133441, 0.5411850384303502, 0.5357187475476947, 0.4838177476610456, 0.4684943641935076, 0.47942796775272917, 0.4404170513153076, 0.45166313648223877, 0.40191972255706787, 0.4151731048311506, 0.3962721994944981, 0.390413122517722, 0.4200692687715803, 0.3736052257674081, 0.40045779943466187, 0.37183165550231934, 0.365985563823155, 0.40120647634778706, 0.3956206611224583, 0.3876532316207886, 0.3609157204627991, 0.34079437596457346, 0.36000564268657137, 0.4005541886602129, 0.34286764689854216, 0.3251561352184841, 0.3371820705277579, 0.34541594982147217, 0.33702328375407625, 0.33802523783275057, 0.3175238626343863], "val_accuracy": [0.2953333258628845, 0.6296666860580444, 0.5043333172798157, 0.6970000267028809, 0.7066666483879089, 0.7646666765213013, 0.684333324432373, 0.7396666407585144, 0.7599999904632568, 0.7903333306312561, 0.8013333082199097, 0.7716666460037231, 0.8080000281333923, 0.8090000152587891, 0.8330000042915344, 0.8226666450500488, 0.8316666483879089, 0.8323333263397217, 0.8086666464805603, 0.8453333377838135, 0.8166666626930237, 0.8479999899864197, 0.8476666808128357, 0.828000009059906, 0.8213333487510681, 0.8236666917800903, 0.8513333201408386, 0.8619999885559082, 0.8500000238418579, 0.8383333086967468, 0.8579999804496765, 0.8743333220481873, 0.8583333492279053, 0.8573333621025085, 0.8613333106040955, 0.8550000190734863, 0.871999979019165]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7862856984138489, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0881969767349933, 1.4140375893365722, 1.0502750765551445, 0.9431380825413689, 0.8453840239724116, 0.7734327241571713, 0.784523380556914, 0.7356416502601639, 0.6993072870826016, 0.7081924852457627, 0.6841819745721818, 0.6591421165140061, 0.6572516389794401, 0.6357438422590908, 0.6191212994673501, 0.6146610854891046, 0.6030229731652211, 0.5835544098054949, 0.5894870938815145], "accuracy": [0.31224408745765686, 0.5102364420890808, 0.6263373494148254, 0.6539427042007446, 0.6910579800605774, 0.7092854380607605, 0.7040021419525146, 0.7226257920265198, 0.7383436560630798, 0.7302865982055664, 0.7401928305625916, 0.7555144429206848, 0.7499669790267944, 0.7621186375617981, 0.769911527633667, 0.7711002230644226, 0.7741381525993347, 0.7770439982414246, 0.7779685854911804], "val_loss": [1.1772806985037667, 0.9140880448477608, 0.7348254919052124, 0.6116185528891427, 0.5941929817199707, 0.5472379582268851, 0.5394423859460014, 0.5207745858601162, 0.5320746047156197, 0.5597341571535382, 0.4846643550055368, 0.46367359161376953, 0.46854238850729807, 0.461355413709368, 0.468904835837228, 0.477944084576198, 0.4270155855587551, 0.4400566646030971, 0.46755543776920866], "val_accuracy": [0.5640000104904175, 0.6446666717529297, 0.6866666674613953, 0.7356666922569275, 0.7293333411216736, 0.7516666650772095, 0.7516666650772095, 0.7576666474342346, 0.7516666650772095, 0.7356666922569275, 0.7860000133514404, 0.7879999876022339, 0.7976666688919067, 0.8103333115577698, 0.778333306312561, 0.7856666445732117, 0.8096666932106018, 0.8103333115577698, 0.7923333048820496]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.7851428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.0881979835504207, 1.4145540997116337, 1.0490663984369497, 0.9429705025985682, 0.8384921175850034, 0.7884512607762527, 0.766384579045441, 0.7486802866083835, 0.7154682480962977, 0.6912178656822182, 0.6824874988935564, 0.6546479885635784, 0.650659004112418, 0.6473423357275042, 0.614794542256946, 0.6178825719639012, 0.6028424661944587, 0.5761987604973354, 0.6045795759473258], "accuracy": [0.31224408745765686, 0.5090476870536804, 0.6273940205574036, 0.6528860330581665, 0.6952846646308899, 0.7016246318817139, 0.7147008180618286, 0.7180029153823853, 0.7298903465270996, 0.7366266250610352, 0.7437590956687927, 0.7569673657417297, 0.7526086568832397, 0.7564390301704407, 0.7689869403839111, 0.769911527633667, 0.7744023203849792, 0.7852331399917603, 0.7725531458854675], "val_loss": [1.177243913922991, 0.9178235190255302, 0.7262699263436454, 0.6122737271445138, 0.6129204886300224, 0.5447450535637992, 0.5348448072160993, 0.5241089378084455, 0.5188040052141462, 0.5167653730937413, 0.4799606629780361, 0.46482016359056744, 0.4995358330862863, 0.46588308470589773, 0.4884987047740391, 0.47638257912227083, 0.4377338034766061, 0.4435858726501465, 0.4486843688147409], "val_accuracy": [0.5643333196640015, 0.6443333625793457, 0.6903333067893982, 0.7433333396911621, 0.7123333215713501, 0.765333354473114, 0.7643333077430725, 0.777999997138977, 0.7593333125114441, 0.7666666507720947, 0.7873333096504211, 0.7866666913032532, 0.7803333401679993, 0.809333324432373, 0.7666666507720947, 0.7870000004768372, 0.7913333177566528, 0.8053333163261414, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [4, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.38857144117355347, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.292747973514003, 2.1859959943529765, 2.147606580642551, 1.9850065760120599, 2.198436269418769, 2.2318181366480228, 2.2859084407462262, 2.302629493719173], "accuracy": [0.19614318013191223, 0.22401267290115356, 0.22705058753490448, 0.320169061422348, 0.21172896027565002, 0.21133272349834442, 0.18240654468536377, 0.11900673806667328], "val_loss": [1.970210143498012, 1.7429795946393694, 1.6993866307394845, 2.0732289722987582, 1.9105372428894043, 1.923959391457694, 1.9771225111825126, 1.9548395020621163], "val_accuracy": [0.15166667103767395, 0.257999986410141, 0.367333322763443, 0.20333333313465118, 0.17933332920074463, 0.210999995470047, 0.11733333021402359, 0.18966667354106903]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [5, 6, 1, 2, 4, 2, 2, 1, 5, 6, 7, 1, 2, 1, 9, 5, 0], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 1, 2, 1, 1, 0, 0, 9, 0, 8], [2, 1, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 14, 9, 5, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.subtract(beta, tf.math.add(alpha, tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma))))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3045588478735333, 2.3059455845822368, 2.3044961878116874, 2.3067429956900463, 2.308875495164685, 2.308610220595342], "accuracy": [0.09219389408826828, 0.09655263274908066, 0.10170386731624603, 0.09906221181154251, 0.1018359512090683, 0.1014397069811821], "val_loss": [1.9738970484052385, 1.9746397563389368, 1.9753684316362654, 1.9781176703316825, 1.977607590811593, 1.9792235919407435], "val_accuracy": [0.10366666316986084, 0.0963333323597908, 0.10366666316986084, 0.0963333323597908, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [87, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302661171962147, 2.3023995533752846, 2.303180746792204, 2.307136641611843, 2.329138656349671, 2.584303733049493], "accuracy": [0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9739306313650948, 1.9744628497532435, 1.9766389983040946, 1.9854683194841658, 2.0416954585484097, 3.0963598660060336], "val_accuracy": [0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 8, 0, 1, 6, 2, 3, 1, 1, 1, 5], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 3, 4, 2], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [8, 9, 0, 9, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [17, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 21, 16, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), tf.math.add(beta, alpha))), tf.math.subtract(grad, tf.math.subtract(grad, tf.math.square(grad)))), tf.math.add(beta, grad)))))))), beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030810006904625, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 3, 0, 2, 2, 1, 0, 4, 9, 0, 8, 3, 9, 8, 8, 8, 0, 2, 1, 3, 4, 0, 4, 0, 9], [1, 1, 0, 0, 3, 0, 2, 0, 0, 2], [85, 63, 57, 12, 59, 15, 59, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 35, 25, 10, 8], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(tf.math.subtract(alpha, tf.math.negative(tf.math.pow(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(sigma))))), tf.math.negative(tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.pow(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), beta), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 6, 0, 4, 2, 9, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 48, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(alpha, alpha)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [94, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [0, 3], [4, 7], [71], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 0, 9, 2, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [46, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 9, 3, 3], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.subtract(sigma, tf.math.negative(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 5, 0, 1, 2, 1, 0, 0, 9, 0, 8], [1, 3, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 8, 5, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.negative(tf.math.subtract(alpha, sigma))), tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 7, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.06828571110963821, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3020061786857187, 2.3019267457776365, 2.3013298184313338, 2.2998030716953117, 2.3001359427027213, 2.2997625989527233, 2.3001449575135737, 2.2994220763496074, 2.2983806505179314, 2.299771945773492, 2.2989963029338196, 2.2990562239059793, 2.299577217406884, 2.29958998317716], "accuracy": [0.09285431355237961, 0.09087307006120682, 0.09470347315073013, 0.10077928751707077, 0.09932637959718704, 0.0944393053650856, 0.09787346422672272, 0.10302469879388809, 0.09972262382507324, 0.10394927859306335, 0.10051512718200684, 0.09708096832036972, 0.10091137140989304, 0.10077928751707077], "val_loss": [1.9696078300476074, 1.9690380096435547, 1.9688175746372767, 1.9689157349722726, 1.9690168244498116, 1.9690591948372977, 1.96897554397583, 1.96896151133946, 1.9689904621669225, 1.9690133503505163, 1.9691175052097865, 1.969348975590297, 1.9696259498596191, 1.970017637525286], "val_accuracy": [0.04833333194255829, 0.05233333259820938, 0.05999999865889549, 0.0663333311676979, 0.07133333384990692, 0.07333333045244217, 0.07800000160932541, 0.08033332973718643, 0.0820000022649765, 0.08133333176374435, 0.07966666668653488, 0.07666666805744171, 0.07699999958276749, 0.07333333045244217]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 6, 2, 1, 0, 0, 9, 0, 8], [1, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.06800000369548798, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.3020061786857187, 2.3019267052486825, 2.301331001391831, 2.2998045156219646, 2.3001382281326457, 2.299762945448513, 2.300146190135423, 2.29942503603395, 2.2983861067480555, 2.2997782751868634, 2.2990046745089177, 2.2990680008894415, 2.299589372471638, 2.2996017017447636], "accuracy": [0.09285431355237961, 0.09087307006120682, 0.09470347315073013, 0.10077928751707077, 0.09945846349000931, 0.0944393053650856, 0.09774138033390045, 0.10289261490106583, 0.09972262382507324, 0.10394927859306335, 0.10051512718200684, 0.09760929644107819, 0.10091137140989304, 0.10051512718200684], "val_loss": [1.9696075575692313, 1.9690379415239607, 1.968818528311593, 1.9689179829188757, 1.9690170288085938, 1.9690643038068498, 1.968977996281215, 1.96896607535226, 1.9689995220729284, 1.9690204347882951, 1.9691295623779297, 1.9693633488246374, 1.9696390288216727, 1.9700217928205217], "val_accuracy": [0.04833333194255829, 0.05233333259820938, 0.05999999865889549, 0.06666667014360428, 0.07100000232458115, 0.07333333045244217, 0.07800000160932541, 0.08033332973718643, 0.0820000022649765, 0.08133333176374435, 0.07966666668653488, 0.07666666805744171, 0.07666666805744171, 0.07266666740179062]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [2, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 8, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025001137090664, 2.3035854231711346, 2.3036547970258487, 2.3021420577198777, 2.3025266328712637, 2.302464073927112], "accuracy": [0.09259014576673508, 0.08955223858356476, 0.0878351628780365, 0.09232597798109055, 0.09351472556591034, 0.08955223858356476], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [2, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3], [78, 95, 54, 66], [1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [5, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [32, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025001137090664, 2.3035854231711346, 2.3036547970258487, 2.3021420577198777, 2.3025266328712637, 2.302464073927112], "accuracy": [0.09259014576673508, 0.08955223858356476, 0.0878351628780365, 0.09232597798109055, 0.09351472556591034, 0.08955223858356476], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 5, 7, 1, 9, 2, 5, 2, 8, 5, 4, 0, 6, 5, 6, 0, 5, 7, 4, 8, 9, 3, 5, 2, 7, 7, 2, 9], [3, 1, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 3, 3, 3, 0, 1], [91, 12, 93, 29, 40, 73, 46, 33, 24], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [5, 3, 1, 2, 5, 2, 2, 1, 5, 6, 7, 8, 8, 4, 1, 6, 4, 7, 4, 7, 4, 1, 4, 2], [5, 4, 1, 3, 2, 2, 1, 4, 2, 4, 1, 3, 3, 3, 2, 5, 5, 2, 0, 2], [78, 95, 54, 66], [1, 1, 1, 1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 1], [6, 3], [4, 7], [71], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], [3, 9, 0, 2, 2, 1, 0, 0, 9, 0, 8], [3, 1, 0, 0, 3, 0, 2], [41, 63, 57, 12]], "fitness": -0.037142857909202576, "mapping_values": [1, 24, 24, 16, 8, 4, 44, 44, 24, 20, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.square(grad), alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), grad), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(grad, beta)))))))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025001137090664, 2.3035854231711346, 2.3036547970258487, 2.3021420577198777, 2.3025266328712637, 2.302464073927112], "accuracy": [0.09259014576673508, 0.08955223858356476, 0.0878351628780365, 0.09232597798109055, 0.09351472556591034, 0.08955223858356476], "val_loss": [1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725, 1.9703851427350725], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]