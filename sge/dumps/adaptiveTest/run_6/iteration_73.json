[{"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [4, 2, 2, 3, 0, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3, 2], [26, 18, 30], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.7699999809265137, "mapping_values": [1, 13, 13, 7, 6, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3007192328904895, 2.284710626875515, 2.254220348291897, 2.2096244339394358, 2.1418289160448185, 2.027398228015504, 1.8310155855304042, 1.6043338186437617, 1.4185576250902368, 1.3700724238213169, 1.3125599619577337, 1.1559982197616299, 1.0358916357633947, 0.9364684251447191, 0.8985818510262753, 0.8866663096666242, 0.8660682661028555, 0.8330367276886151, 0.8065287017819116, 0.8010779744629941, 0.7908815580147479, 0.7704091364634177, 0.7707930002639543, 0.7604743853189753, 0.7448942479503436, 0.7229489389899982, 0.7199512938498317, 0.7074443959462376, 0.6945385723034656, 0.6815458268946691, 0.6738496640606831, 0.6628743669675279, 0.6548746644135841, 0.6501256370934922, 0.6480898507093914, 0.6401601235990306, 0.6343295484281345, 0.6269865774317912, 0.6145831369500292, 0.6054757231136182, 0.5977048358550681, 0.5930958942509819, 0.5930758748922397, 0.579313265979723, 0.5800255027980601, 0.5673714331931221, 0.5665025688937123, 0.5514745504675665, 0.5474366426916643, 0.552635550609181, 0.5521918124904439, 0.5372087302665827, 0.527995164698897, 0.5304257286821515, 0.5245217908060137, 0.5181922197042754, 0.5099945026122032, 0.5031766977056363, 0.4898325755233699, 0.49669034428143655, 0.4830865168521086, 0.4879094387058096, 0.4838987197527686, 0.47605318787973067, 0.46796220312690406, 0.4681338920270164, 0.47586832216087976, 0.4559277224778468, 0.45363685352895805, 0.4494657068598335, 0.4431891278339777, 0.45448596499788446, 0.43714354112163717, 0.43574362395698085, 0.42466669526428924, 0.4371428456698206, 0.4322242634470563, 0.4181969482090023, 0.4189541238040153, 0.42168296627742646, 0.4042767913601953, 0.40814384748009547, 0.4088627683362153, 0.3969780786784412, 0.4054637252812089, 0.3985645038505917, 0.3980612526433091, 0.39753238947919617, 0.3835379493006657, 0.37963377005231064, 0.3824892866888602, 0.37831155487559237, 0.38379262782768125], "accuracy": [0.09179764986038208, 0.1328754425048828, 0.22335226833820343, 0.30180954933166504, 0.35028398036956787, 0.38805970549583435, 0.42609959840774536, 0.4567428231239319, 0.5066701769828796, 0.5281997323036194, 0.5515784025192261, 0.6058644652366638, 0.6373002529144287, 0.6470743417739868, 0.6515651941299438, 0.6789063811302185, 0.6893408894538879, 0.6936996579170227, 0.696209192276001, 0.6942279934883118, 0.6955488324165344, 0.7003037929534912, 0.7047945857048035, 0.7209087014198303, 0.7191916704177856, 0.720380425453186, 0.7257958054542542, 0.72672039270401, 0.7320036888122559, 0.739928662776947, 0.7448157668113708, 0.7428345084190369, 0.7536653280258179, 0.7504953145980835, 0.748778223991394, 0.7500990629196167, 0.7589486241340637, 0.7580240368843079, 0.7660810947418213, 0.7640998363494873, 0.7716285586357117, 0.7709681391716003, 0.7676661014556885, 0.7738739848136902, 0.7740060687065125, 0.7835160493850708, 0.7845727205276489, 0.7837802171707153, 0.7895918488502502, 0.7922335267066956, 0.7909126877784729, 0.7946110367774963, 0.7980451583862305, 0.7981772422790527, 0.8031964302062988, 0.8009510040283203, 0.8084797263145447, 0.8109893202781677, 0.8144234418869019, 0.8079513907432556, 0.8153480291366577, 0.8152159452438354, 0.8119139075279236, 0.8171972036361694, 0.8252542614936829, 0.8251221776008606, 0.817461371421814, 0.8265751004219055, 0.8290846943855286, 0.8305375576019287, 0.8356888294219971, 0.8285563588142395, 0.8384625315666199, 0.8358209133148193, 0.8383304476737976, 0.8362171649932861, 0.8359529972076416, 0.8488970994949341, 0.8403117060661316, 0.8417646288871765, 0.8451988101005554, 0.8475762605667114, 0.8451988101005554, 0.8541803956031799, 0.8482366800308228, 0.8551049828529358, 0.850350022315979, 0.8506141901016235, 0.8557654023170471, 0.8627657890319824, 0.8588033318519592, 0.858671247959137, 0.8577466607093811], "val_loss": [1.962381090436663, 1.9409172875540597, 1.9070685250418526, 1.85660035269601, 1.7721706799098425, 1.621345145361764, 1.379694972719465, 1.1085971423557825, 0.9044960226331439, 0.812851003238133, 0.7473125628062657, 0.7240949528557914, 0.653965779713222, 0.6521572896412441, 0.6517865828105381, 0.6505334717886788, 0.6261705671037946, 0.5999489341463361, 0.5809246131352016, 0.5757030078342983, 0.5736712898526873, 0.5648939098630633, 0.5576220239911761, 0.5513729197638375, 0.5426083973475865, 0.5372286694390433, 0.5327178750719342, 0.5266506331307548, 0.517526388168335, 0.5100497858864921, 0.5041706902640206, 0.4982433829988752, 0.49377661091940744, 0.49090913363865446, 0.4866574832371303, 0.4804368530000959, 0.4755944013595581, 0.4704726423536028, 0.46583759784698486, 0.46250295639038086, 0.45930004119873047, 0.4554358891078404, 0.45119268553597586, 0.44697567394801546, 0.44254714250564575, 0.43811799798692974, 0.43441228355680195, 0.43068314450127737, 0.42696345703942434, 0.4233463832310268, 0.41921273299625944, 0.41538669381822857, 0.4126399500029428, 0.41018121583121164, 0.4074409944670541, 0.40474568946020945, 0.4024794527462551, 0.4008186970438276, 0.3992415836879185, 0.39779720987592426, 0.3968166879245213, 0.39594072103500366, 0.39450747626168386, 0.39252552815846037, 0.38996974911008564, 0.3873689940997532, 0.3841950637953622, 0.3809229050363813, 0.3783525654247829, 0.3763268675122942, 0.37432107755116056, 0.3722028136253357, 0.3706493207386562, 0.36979242733546663, 0.36949096407209125, 0.3693914158003671, 0.3692552532468523, 0.36897229296820505, 0.36860999890736174, 0.36822578736713957, 0.36748197249003817, 0.36616311754499165, 0.3647989204951695, 0.3639351725578308, 0.363253584929875, 0.3626263737678528, 0.3618202379771641, 0.36084967851638794, 0.36012072222573416, 0.35980110509055, 0.3598016159875052, 0.3596477763993399, 0.35901265484946115], "val_accuracy": [0.10300000011920929, 0.3059999942779541, 0.40066665410995483, 0.437666654586792, 0.46933332085609436, 0.5006666779518127, 0.5556666851043701, 0.6196666955947876, 0.6566666960716248, 0.6570000052452087, 0.6899999976158142, 0.6983333230018616, 0.7160000205039978, 0.7073333263397217, 0.7269999980926514, 0.7266666889190674, 0.7293333411216736, 0.7329999804496765, 0.7356666922569275, 0.7333333492279053, 0.7336666584014893, 0.7459999918937683, 0.7543333172798157, 0.7553333044052124, 0.7559999823570251, 0.7576666474342346, 0.7586666941642761, 0.7599999904632568, 0.7636666893959045, 0.7680000066757202, 0.7736666798591614, 0.7760000228881836, 0.7756666541099548, 0.7770000100135803, 0.7796666622161865, 0.7863333225250244, 0.7866666913032532, 0.7876666784286499, 0.7879999876022339, 0.7879999876022339, 0.7900000214576721, 0.7923333048820496, 0.79666668176651, 0.7996666431427002, 0.7990000247955322, 0.8006666898727417, 0.8036666512489319, 0.8090000152587891, 0.812333345413208, 0.8116666674613953, 0.8166666626930237, 0.8159999847412109, 0.8209999799728394, 0.8233333230018616, 0.8226666450500488, 0.8236666917800903, 0.8259999752044678, 0.8240000009536743, 0.8256666660308838, 0.824999988079071, 0.8276666402816772, 0.8276666402816772, 0.8296666741371155, 0.8309999704360962, 0.8306666612625122, 0.831333339214325, 0.8320000171661377, 0.8360000252723694, 0.8376666903495789, 0.8396666646003723, 0.8379999995231628, 0.8389999866485596, 0.8410000205039978, 0.843666672706604, 0.843999981880188, 0.8446666598320007, 0.843666672706604, 0.8433333039283752, 0.8443333506584167, 0.8433333039283752, 0.8453333377838135, 0.8473333120346069, 0.8483333587646484, 0.8486666679382324, 0.8486666679382324, 0.8489999771118164, 0.8513333201408386, 0.8533333539962769, 0.8519999980926514, 0.8506666421890259, 0.8503333330154419, 0.8510000109672546, 0.8513333201408386]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0], [4, 2, 2, 3, 0, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3, 2], [26, 18, 30], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.7597143054008484, "mapping_values": [1, 13, 13, 7, 6, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.square(grad))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3007192328904895, 2.284710626875515, 2.2542203168008683, 2.2096237097402462, 2.1418258795853475, 2.0273916692687157, 1.8310081225344692, 1.6043286951635933, 1.4185339414590008, 1.3701026736784605, 1.3126333572325721, 1.156078426876655, 1.0360845285809162, 0.9362590144244577, 0.8984519055475098, 0.8865911128923736, 0.8657872090171499, 0.832894934253481, 0.8067608471906196, 0.8009356933420423, 0.7898516308960583, 0.7695652096420468, 0.7706841586555991, 0.7607701891653604, 0.744994978831665, 0.7220919452181519, 0.7183672233721237, 0.7069505534041686, 0.6941976339321694, 0.6813930156460496, 0.6734285816981288, 0.6619437758035475, 0.6534829176317793, 0.6489559195895378, 0.6477794396863118, 0.6398931606381781, 0.6346554184444922, 0.6266193172998117, 0.6149399335578668, 0.6048967064159138, 0.5969617962207399, 0.5916506069888371, 0.5922125929445244, 0.5786764174798192, 0.579510141940023, 0.5671997064407932, 0.5669256572269288, 0.5507804024661962, 0.547129099721906, 0.5515345301390041, 0.5521803527003691, 0.5365133466674604, 0.5274371603980371, 0.5297856692546048, 0.5224266011780122, 0.5174278324904648, 0.5088315961257326, 0.5017368141544525, 0.48953561340545415, 0.49608800025774175, 0.4825464876974106, 0.48834856234962254, 0.4834353111565247, 0.4750108774453736, 0.4665311848671681, 0.46701855468413045, 0.47627572287594905, 0.45476441131197404, 0.4527607004380481, 0.4488076195071607, 0.442246244205948, 0.45358930100870015, 0.43653925224743056, 0.4352335384367259, 0.4243747820203582, 0.43755711870753394, 0.43273476386161575, 0.41949808579850995, 0.4196290781374825, 0.4223196235795488], "accuracy": [0.09179764986038208, 0.1328754425048828, 0.22335226833820343, 0.30180954933166504, 0.35041606426239014, 0.3879276216030121, 0.42609959840774536, 0.4567428231239319, 0.5066701769828796, 0.5283318161964417, 0.5515784025192261, 0.6057323813438416, 0.637432336807251, 0.6477347612380981, 0.651168942451477, 0.6778497099876404, 0.6890767216682434, 0.6939638257026672, 0.6956809163093567, 0.6950204968452454, 0.6954167485237122, 0.7012283802032471, 0.7036058902740479, 0.7213049530982971, 0.7197200059890747, 0.7218332886695862, 0.7269845604896545, 0.7277770638465881, 0.7312111854553223, 0.7390040755271912, 0.7440232634544373, 0.7433628439903259, 0.7530049085617065, 0.7516840696334839, 0.7485140562057495, 0.7504953145980835, 0.7582882046699524, 0.7577598690986633, 0.7658169269561768, 0.7652885913848877, 0.7718927264213562, 0.7724210619926453, 0.7684586048126221, 0.7733456492424011, 0.7755910754203796, 0.7844406366348267, 0.7827235460281372, 0.7837802171707153, 0.7895918488502502, 0.7938185334205627, 0.7911768555641174, 0.7932901978492737, 0.7987055778503418, 0.8005547523498535, 0.8033285140991211, 0.802271842956543, 0.8068947196006775, 0.8120459914207458, 0.8133667707443237, 0.8084797263145447, 0.8140271902084351, 0.8137630224227905, 0.8119139075279236, 0.8190463781356812, 0.8261788487434387, 0.8260467648506165, 0.819442629814148, 0.82683926820755, 0.8302733898162842, 0.8309338092803955, 0.835160493850708, 0.8281601071357727, 0.8378021121025085, 0.8374059200286865, 0.8378021121025085, 0.8355567455291748, 0.8362171649932861, 0.847840428352356, 0.8413683772087097, 0.8388587832450867], "val_loss": [1.962381090436663, 1.9409172194344657, 1.9070681844438826, 1.8565985134669714, 1.7721655028206962, 1.6213359151567732, 1.3797028405325753, 1.1086014679500036, 0.904484646660941, 0.8128902741840908, 0.7473737852913993, 0.7242355006081718, 0.654009222984314, 0.6518491336277553, 0.6518159423555646, 0.6503312928336007, 0.6259994166237968, 0.6000334705625262, 0.5809289046696254, 0.5752846002578735, 0.5731804030282157, 0.5645598684038434, 0.5575884750911168, 0.5513871397290911, 0.5421235050473895, 0.536415832383292, 0.5321519545146397, 0.5266599995749337, 0.5176259790148053, 0.5098308154514858, 0.5038502046040126, 0.49770850794655935, 0.4931818757738386, 0.490445750100272, 0.4862158979688372, 0.480178850037711, 0.47538386072431293, 0.4701746872493199, 0.46537327766418457, 0.4620889936174665, 0.4589946780885969, 0.455172027860369, 0.4511089324951172, 0.44720230783735004, 0.44290677990232197, 0.4383001838411604, 0.43421305077416555, 0.4303857088088989, 0.4266178863389151, 0.4229316711425781, 0.418923590864454, 0.4154494915689741, 0.4128097210611616, 0.4102787290300642, 0.40767730985369, 0.4052503194127764, 0.4032724584851946, 0.4015710013253348, 0.39966702461242676, 0.39818234954561504, 0.3972563999039786, 0.3961948411805289, 0.39421623945236206, 0.39192127329962595, 0.3892819200243269, 0.3864143320492336, 0.38300553389957975, 0.3799829993929182, 0.37773559774671284, 0.3758661576679775, 0.37390544584819246, 0.3718513080051967, 0.3704911896160671, 0.3699387993131365, 0.3698416863168989, 0.3699106403759548, 0.3701057348932539, 0.3700725095612662, 0.3697969061987741, 0.36932748556137085], "val_accuracy": [0.10300000011920929, 0.3059999942779541, 0.40066665410995483, 0.437666654586792, 0.46933332085609436, 0.5006666779518127, 0.5553333163261414, 0.6203333139419556, 0.6566666960716248, 0.656333327293396, 0.6903333067893982, 0.6986666917800903, 0.715666651725769, 0.7066666483879089, 0.7279999852180481, 0.7273333072662354, 0.7306666374206543, 0.734000027179718, 0.7356666922569275, 0.734666645526886, 0.734000027179718, 0.7450000047683716, 0.7549999952316284, 0.7563333511352539, 0.7566666603088379, 0.7570000290870667, 0.7606666684150696, 0.7590000033378601, 0.7636666893959045, 0.768666684627533, 0.7749999761581421, 0.7766666412353516, 0.777999997138977, 0.7766666412353516, 0.7786666750907898, 0.7866666913032532, 0.7873333096504211, 0.7866666913032532, 0.7883333563804626, 0.7879999876022339, 0.7889999747276306, 0.793666660785675, 0.796999990940094, 0.7996666431427002, 0.7979999780654907, 0.7983333468437195, 0.8026666641235352, 0.8086666464805603, 0.812333345413208, 0.8103333115577698, 0.8140000104904175, 0.8149999976158142, 0.8199999928474426, 0.8236666917800903, 0.824999988079071, 0.8233333230018616, 0.8230000138282776, 0.8259999752044678, 0.8253333568572998, 0.8259999752044678, 0.824999988079071, 0.8263333439826965, 0.8293333053588867, 0.831333339214325, 0.8320000171661377, 0.8323333263397217, 0.8343333601951599, 0.8370000123977661, 0.8403333425521851, 0.840666651725769, 0.8396666646003723, 0.8423333168029785, 0.8426666855812073, 0.8426666855812073, 0.8443333506584167, 0.843666672706604, 0.8413333296775818, 0.8399999737739563, 0.8386666774749756, 0.8410000205039978]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 2, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 1, 2, 3], [68, 18, 30], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.5351428389549255, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3023922432997854, 2.2999014400960336, 2.2976422690287115, 2.2964327269226508, 2.296480570235005, 2.2953779935490393, 2.292361322473998, 2.2913805050951317, 2.287309442953962, 2.2867041496064733, 2.286585459194604, 2.283860346581627, 2.2818541093162965, 2.2824544089424013, 2.277506866223304, 2.2778842824561294, 2.276026531028521, 2.2741940918064483, 2.272970618258189, 2.2719550352243933, 2.269126265040478, 2.26830332339983, 2.2658371630597975, 2.2639856629792994, 2.2635298826754005, 2.261667719417638, 2.2597380452514435, 2.2568741107361743, 2.2543956716976083, 2.2551562773820795, 2.2507234823591973, 2.250022967918879, 2.2477273991740594, 2.246182776587026, 2.2440524564805266, 2.240821717831248, 2.240286090323292, 2.2391947205072036, 2.2359837131918443, 2.2353578025418313, 2.233524823972908, 2.229601986797778, 2.228364446427387, 2.224055360037779, 2.2211577822708293, 2.221944170668298, 2.217057705901759, 2.216296445329853, 2.2139269857831114, 2.209635565671718, 2.2084255533101236, 2.207374047452055, 2.2024714167028954, 2.202045611166258, 2.2008988831446645, 2.1963842636904998, 2.192856884966311, 2.1887743101458836, 2.1855151348141724, 2.1831270386561457, 2.1784294653625347, 2.177724298406129, 2.1746267389391454, 2.168734870424927, 2.1655920938714273, 2.1618649192127837, 2.160344664919189, 2.1583378536668767, 2.1528243675302474, 2.1495653360495557, 2.1461348202029837, 2.142890455291067, 2.139603479049304, 2.134302243297095, 2.1288573659406347, 2.1289597996442295, 2.1205629737480143, 2.1140962011699806, 2.1121064674081174, 2.1088920539915916, 2.102260651668427, 2.0974538729348597, 2.093692821266629, 2.0888370128276876, 2.082118168766504, 2.077591786783259, 2.0745166146350558, 2.0730964928066347, 2.060594236153212, 2.0561182137414873, 2.0522368687680212, 2.0455731133491355, 2.0402165726427515, 2.0346606320645817, 2.02886328176343, 2.0248136569826656, 2.019355925586576, 2.0112055671874796, 2.0048693691372574, 1.9995095797061226], "accuracy": [0.08809932321310043, 0.09259014576673508, 0.1080438494682312, 0.10117553919553757, 0.10460969805717468, 0.11042134463787079, 0.11491216719150543, 0.11676132678985596, 0.1220446452498436, 0.1282525360584259, 0.1290450394153595, 0.13815876841545105, 0.1450270712375641, 0.1450270712375641, 0.15955619513988495, 0.15678246319293976, 0.160084530711174, 0.16523577272891998, 0.1640470176935196, 0.16893409192562103, 0.1818782240152359, 0.17580240964889526, 0.18623696267604828, 0.19152027368545532, 0.1950865089893341, 0.19680359959602356, 0.2016906589269638, 0.2056531459093094, 0.2160876989364624, 0.21318188309669495, 0.21912561357021332, 0.21978603303432465, 0.230484738945961, 0.23312640190124512, 0.2370888888835907, 0.251750111579895, 0.2390701323747635, 0.24554219841957092, 0.25716549158096313, 0.2553163468837738, 0.26099589467048645, 0.2639017403125763, 0.2645621597766876, 0.2697133719921112, 0.28278958797454834, 0.2712983787059784, 0.2880729138851166, 0.2814687490463257, 0.29137498140335083, 0.3011491298675537, 0.29480913281440735, 0.2887333333492279, 0.3069607615470886, 0.29626205563545227, 0.301281213760376, 0.3035266101360321, 0.301281213760376, 0.31620657444000244, 0.3147536516189575, 0.32941487431526184, 0.3271694481372833, 0.3387927711009979, 0.3241315484046936, 0.34024566411972046, 0.33905693888664246, 0.3457931578159332, 0.3463214933872223, 0.3416985869407654, 0.34764233231544495, 0.342491090297699, 0.35001981258392334, 0.3501518964767456, 0.35001981258392334, 0.35860520601272583, 0.3645489513874054, 0.36402061581611633, 0.3615110218524933, 0.3755118250846863, 0.37604016065597534, 0.3749834895133972, 0.3747193217277527, 0.38105931878089905, 0.37868180871009827, 0.37881389260292053, 0.3903051018714905, 0.38687095046043396, 0.38304054737091064, 0.3913617730140686, 0.39704135060310364, 0.39189010858535767, 0.3961167633533478, 0.40404173731803894, 0.4019284248352051, 0.4003434181213379, 0.4065513014793396, 0.39849424362182617, 0.40324923396110535, 0.41328755021095276, 0.41289129853248596, 0.4113062918186188], "val_loss": [1.968991756439209, 1.9674941471644811, 1.9659881591796875, 1.9644816943577357, 1.962996346609933, 1.961529323032924, 1.9600680896214075, 1.958599363054548, 1.9571235520499093, 1.9556595938546317, 1.954186030796596, 1.952726227896554, 1.9512573650905065, 1.949784210750035, 1.9482790402003698, 1.9468083381652832, 1.9453150204249792, 1.9438056945800781, 1.9422760009765625, 1.9407622473580497, 1.939227512904576, 1.9376709120614188, 1.9361077036176408, 1.9345231737409319, 1.9329346248081751, 1.9313105174473353, 1.9297026906694685, 1.928055763244629, 1.9263896942138672, 1.9247069358825684, 1.9229878698076521, 1.9212491171700614, 1.9194737843104772, 1.9177154813494002, 1.915886334010533, 1.9140323911394392, 1.9121648924691337, 1.910297189440046, 1.908371925354004, 1.9064345359802246, 1.9044594083513533, 1.902451651436942, 1.9004195758274622, 1.8983338219778878, 1.896202768598284, 1.8940614291599818, 1.891855103628976, 1.8896183286394392, 1.887357439313616, 1.885030814579555, 1.8826817784990584, 1.8802898270743233, 1.8778371810913086, 1.8753465243748255, 1.8728320939200265, 1.8702391215733118, 1.8675695828029089, 1.8648631232125419, 1.862098557608468, 1.8592769759041923, 1.856377465384347, 1.8534495489937919, 1.850473403930664, 1.8474016189575195, 1.844257150377546, 1.841047695704869, 1.8377910341535295, 1.8345011983598982, 1.8311158588954382, 1.827669416155134, 1.824141570499965, 1.8205930846078056, 1.8169383321489607, 1.813187939780099, 1.809379986354283, 1.8055146081107003, 1.8015662602015905, 1.797494343348912, 1.7933649335588728, 1.7891717638288225, 1.7848849296569824, 1.780512469155448, 1.7760678700038366, 1.7715156418936593, 1.7668660708836146, 1.7621409552437919, 1.7573671340942383, 1.7525202887398856, 1.7474929264613561, 1.7423831394740514, 1.7372310502188546, 1.731966495513916, 1.7266534396580286, 1.721193449837821, 1.7156238555908203, 1.710014854158674, 1.704345669065203, 1.6985323429107666, 1.6925975595201765, 1.6866306236812048], "val_accuracy": [0.054999999701976776, 0.06733333319425583, 0.07699999958276749, 0.09099999815225601, 0.09933333098888397, 0.11400000005960464, 0.12600000202655792, 0.14100000262260437, 0.15433333814144135, 0.16633333265781403, 0.18066667020320892, 0.19599999487400055, 0.21299999952316284, 0.2280000001192093, 0.24133333563804626, 0.2526666522026062, 0.2619999945163727, 0.27166667580604553, 0.2849999964237213, 0.29233333468437195, 0.30300000309944153, 0.3140000104904175, 0.32733333110809326, 0.33533334732055664, 0.343666672706604, 0.35333332419395447, 0.35866665840148926, 0.36399999260902405, 0.36633333563804626, 0.3700000047683716, 0.37566667795181274, 0.3799999952316284, 0.38233333826065063, 0.3863333463668823, 0.3880000114440918, 0.3933333456516266, 0.3973333239555359, 0.4009999930858612, 0.4046666622161865, 0.40666666626930237, 0.41233333945274353, 0.4143333435058594, 0.4176666736602783, 0.41999998688697815, 0.4243333339691162, 0.4259999990463257, 0.42933332920074463, 0.4336666762828827, 0.43666666746139526, 0.4403333365917206, 0.4423333406448364, 0.445333331823349, 0.445333331823349, 0.4483333230018616, 0.4493333399295807, 0.45233333110809326, 0.45500001311302185, 0.4593333303928375, 0.46166667342185974, 0.46399998664855957, 0.46700000762939453, 0.46833333373069763, 0.46966665983200073, 0.4716666638851166, 0.4729999899864197, 0.47433334589004517, 0.476666659116745, 0.4793333411216736, 0.48100000619888306, 0.48399999737739563, 0.4860000014305115, 0.4873333275318146, 0.49000000953674316, 0.49166667461395264, 0.4933333396911621, 0.4936666786670685, 0.49566665291786194, 0.49666666984558105, 0.49900001287460327, 0.49966666102409363, 0.5040000081062317, 0.5049999952316284, 0.5049999952316284, 0.5056666731834412, 0.5070000290870667, 0.5096666812896729, 0.5106666684150696, 0.5136666893959045, 0.515999972820282, 0.5180000066757202, 0.5199999809265137, 0.5223333239555359, 0.5243333578109741, 0.5263333320617676, 0.5276666879653931, 0.528333306312561, 0.5296666622161865, 0.5336666703224182, 0.5346666574478149, 0.5356666445732117]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], [4, 2, 2, 3, 0, 7, 0, 3, 9, 3, 7, 1, 1, 0, 5, 0, 5, 2, 9, 0, 0, 9], [2, 1, 2, 0, 3, 2, 3, 3, 0], [26, 18, 30, 64, 14], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.44600000977516174, "mapping_values": [1, 31, 31, 22, 9, 5, 5, 5, 3, 2, 2, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2503752649861744, 2.150688897380897, 2.1105402637041317, 2.1610885492137646, 2.1740447275075834, 2.1380679516067373, 2.1781950886569805, 2.2496177737644523, 2.3119938269015456, 2.307059511800153], "accuracy": [0.18451987206935883, 0.20591731369495392, 0.2067098170518875, 0.2067098170518875, 0.22322018444538116, 0.2106723040342331, 0.19680359959602356, 0.19957733154296875, 0.11411966383457184, 0.11213842034339905], "val_loss": [1.7772857802254813, 1.6854734761374337, 1.6924480029514857, 1.7819017682756697, 1.5750232764652796, 1.7216554709843226, 1.807187897818429, 1.9786176000322615, 1.977750028882708, 1.974447590964181], "val_accuracy": [0.2293333262205124, 0.28733333945274353, 0.35100001096725464, 0.3959999978542328, 0.4440000057220459, 0.36766666173934937, 0.3933333456516266, 0.15166667103767395, 0.10899999737739563, 0.0976666659116745]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 8, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3, 2], [26, 18, 30], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.25914284586906433, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8078523407743243, 2.5144095270625195, 2.4256040021460277, 2.3245976843208513, 2.320206409211739, 2.315918891374162], "accuracy": [0.1850482076406479, 0.1142517477273941, 0.11689341068267822, 0.09945846349000931, 0.09906221181154251, 0.10210011899471283], "val_loss": [2.363344192504883, 2.00868136542184, 1.9823413576398576, 1.9798883710588728, 1.9884567941938127, 1.9901182992117745], "val_accuracy": [0.22333332896232605, 0.13066667318344116, 0.09799999743700027, 0.10266666859388351, 0.09866666793823242, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [1, 1, 2, 3, 3], [68, 18, 30], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.18799999356269836, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8073196104095284, 2.5384697836655605, 2.205398175190815, 2.2051632493447, 2.432335958378804, 2.4092654191177, 2.3926986395612038, 2.458115796339967], "accuracy": [0.18531237542629242, 0.11491216719150543, 0.19719983637332916, 0.23259806632995605, 0.12574297189712524, 0.09826971590518951, 0.10038304328918457, 0.09734513610601425], "val_loss": [2.5053954805646623, 1.9994851521083288, 1.7178401265825545, 1.9121347154889787, 2.033603940691267, 2.0535346439906528, 2.1217690195356096, 2.0115198407854353], "val_accuracy": [0.20900000631809235, 0.13966666162014008, 0.30799999833106995, 0.16033333539962769, 0.10000000149011612, 0.09733333438634872, 0.10266666859388351, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [1, 1, 2, 3, 3], [68, 18, 30], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 1, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [4, 5, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [53, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.subtract(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 5, 2, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 1, 1], [68, 18, 30], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 0, 1, 1], [0, 5], [1, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3119125921712684, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.028183255876814, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 2, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3, 2], [78, 18, 30], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [75, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 5, 5, 3, 2, 1, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [908688067195.9465, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12349755316972733, 0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03133333474397659, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 0, 3], [68, 18, 30], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [1, 1, 1, 1], [0, 5], [0, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 9, 3, 3, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301563800491315, 2.302588512490942, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 2, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3], [68, 18, 30], [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [4, 5], [1, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 1, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3], [68, 18, 30], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [2, 5], [0, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 1, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.9348630978840373, 631.8343768771676, 165302.37245017997, 42266832.523048475, 10655440612.949411, 2796457374790.467], "accuracy": [0.10315678268671036, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15.75884519304548, 5329.140066964285, 1368324.0, 350298057.14285713, 89676302628.57143, 22957133472914.285], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [9, 2, 4, 8, 9, 2, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 2, 2, 3, 3, 2], [68, 18, 30], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [1, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [1, 1, 2, 3, 3], [68, 18, 30], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 7, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 5, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [9, 5], [0, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 18, 15, 4, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.subtract(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), alpha))))))), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301563800491315, 2.302588512490942, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], [4, 2, 2, 1, 0, 7, 5, 0, 4, 3, 7, 1, 1, 0, 5, 0, 1, 7, 1, 3, 8, 9], [2, 1, 2, 3, 3, 2, 0, 2, 0, 0, 0, 3, 2, 1], [26, 18, 30, 95, 17], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 2, 3, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0], [5, 0, 2, 8, 7], [1, 3], [52], [0, 0, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 36, 36, 22, 14, 5, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.square(tf.math.negative(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))))))), tf.math.multiply(grad, tf.math.add(alpha, alpha)))), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3], [68, 18, 30], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [3, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 12, 12, 9, 3, 2, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(grad, tf.math.add(beta, beta)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 2, 2, 3, 0, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3, 2], [26, 18, 30], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [3, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [6, 2, 8, 8, 5, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 3], [68, 18, 30], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [3, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 2, 8, 1, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3], [68, 18, 30], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 3, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 12, 12, 9, 3, 2, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [4, 2, 2, 3, 0, 7, 5, 1, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 2, 3, 0, 1], [68, 18, 30], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [15, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.square(grad)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303057175522798, 2.3022099591485574, 2.3016244582590755, 2.3020984912986187, 2.303746800554301, 2.304151028375017], "accuracy": [0.08572183549404144, 0.0870426595211029, 0.09747721254825592, 0.08730682730674744, 0.08955223858356476, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]