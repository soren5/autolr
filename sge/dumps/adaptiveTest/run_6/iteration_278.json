[{"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 2, 3, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [1, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8291428685188293, "mapping_values": [1, 11, 11, 7, 4, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad))), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043280645006321, 1.1011298882285792, 0.8095314457290256, 0.7454104481938808, 0.6792233959558759, 0.6236052414083273, 0.5787730302084486, 0.5512419294577233, 0.5201903506513159, 0.4877134265601753, 0.46678978369661434, 0.4457527096158777, 0.44070979814645306, 0.42639111511664163, 0.4012112578601255, 0.4023680863103626, 0.3784181116995889, 0.37303212679073305, 0.35219940792741145, 0.34472521291259667, 0.3333642333647547, 0.3267540550817667, 0.3225722157282836, 0.31270114255776543, 0.30376349870381714, 0.29333317303040307, 0.2823349815341759, 0.27286612241968206, 0.2590628193373756, 0.24901072844506697, 0.25277772700514195, 0.24762688263642585, 0.23656062771379358, 0.22737882712915228, 0.23190535274101146, 0.22952452441130047, 0.22912982986186237, 0.2160967573092488], "accuracy": [0.3066965937614441, 0.6096948981285095, 0.6905296444892883, 0.7224937081336975, 0.7372870445251465, 0.7592127919197083, 0.785629391670227, 0.7959318161010742, 0.8070268034934998, 0.8220842480659485, 0.8271034359931946, 0.8348963260650635, 0.837537944316864, 0.8424250483512878, 0.8499537706375122, 0.8568220734596252, 0.8638224601745605, 0.8618412613868713, 0.8702945709228516, 0.869502067565918, 0.8759741187095642, 0.8742570281028748, 0.8770307898521423, 0.8809932470321655, 0.889578640460968, 0.8928807377815247, 0.8957865834236145, 0.8989565372467041, 0.9058248400688171, 0.9072777628898621, 0.9043719172477722, 0.9085986018180847, 0.9085986018180847, 0.9109761118888855, 0.9145423173904419, 0.9133535623550415, 0.9101836085319519, 0.9194294214248657], "val_loss": [0.902944701058524, 0.6081157752445766, 0.5586082765034267, 0.5303266559328351, 0.4742267983300345, 0.4335261072431292, 0.411122236933027, 0.40018182141440256, 0.3921452505247934, 0.37195337670189993, 0.35811194351741243, 0.36084794998168945, 0.34891368661608013, 0.3449353575706482, 0.3400779792240688, 0.328034554209028, 0.32927681718553814, 0.3194050277982439, 0.3172684056418283, 0.31534360136304584, 0.3141283222607204, 0.307135922568185, 0.31067192554473877, 0.3125663569995335, 0.3045382414545332, 0.30276691913604736, 0.30318530968257357, 0.30498278992516653, 0.2926828946386065, 0.30330307143075125, 0.3146184001650129, 0.29901329960141865, 0.2994809661592756, 0.31637377398354666, 0.31960243838174, 0.3142203518322536, 0.3099755048751831, 0.3013633063861302], "val_accuracy": [0.6119999885559082, 0.7323333621025085, 0.7476666569709778, 0.7599999904632568, 0.7876666784286499, 0.8183333277702332, 0.8246666789054871, 0.8293333053588867, 0.8246666789054871, 0.8379999995231628, 0.8450000286102295, 0.8483333587646484, 0.8516666889190674, 0.8579999804496765, 0.8513333201408386, 0.8613333106040955, 0.8613333106040955, 0.862333357334137, 0.8636666536331177, 0.8703333139419556, 0.8690000176429749, 0.8696666955947876, 0.8640000224113464, 0.8653333187103271, 0.8726666569709778, 0.8766666650772095, 0.8763333559036255, 0.878000020980835, 0.8776666522026062, 0.8706666827201843, 0.8686666488647461, 0.875, 0.8809999823570251, 0.8776666522026062, 0.8773333430290222, 0.8773333430290222, 0.874666690826416, 0.8790000081062317]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 8, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8277142643928528, "mapping_values": [1, 12, 12, 9, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043280534173645, 1.100815550793809, 0.8088543833978991, 0.7459069407926244, 0.6793371966848473, 0.6234057753817627, 0.5773276979456237, 0.5544286429086901, 0.5243293625087219, 0.48966875573143653, 0.4683692282799638, 0.44658516999863046, 0.44016331844420525, 0.42388215564213977, 0.40255094142937, 0.41136814541489836, 0.3842010364131275, 0.3763297009997128, 0.3564711330219141, 0.3459817780093935, 0.3362008790849553, 0.33128429262188713, 0.32152119247810385, 0.32485802780840267, 0.31003898564047583, 0.29544377135263694, 0.2910257165284913, 0.27573840944813605, 0.26626803429843793, 0.2572017690020939, 0.25055213350708677, 0.24205258507943345, 0.24462940805560768, 0.22840306113235798, 0.23543027084674564, 0.22427836543124002, 0.23358378171716085, 0.2146793144856304], "accuracy": [0.3066965937614441, 0.6096948981285095, 0.6915863156318665, 0.7199841737747192, 0.7380794882774353, 0.7602694630622864, 0.7869502305984497, 0.7932901978492737, 0.8041210174560547, 0.8190463781356812, 0.82683926820755, 0.8341038227081299, 0.8400475382804871, 0.8446704745292664, 0.8495575189590454, 0.8541803956031799, 0.8610487580299377, 0.8577466607093811, 0.8646149635314941, 0.8681812286376953, 0.8774270415306091, 0.8721436858177185, 0.876370370388031, 0.8750495314598083, 0.8858803510665894, 0.8912957310676575, 0.8912957310676575, 0.8968431949615479, 0.9035794734954834, 0.9076740145683289, 0.9049002528190613, 0.9095231890678406, 0.9049002528190613, 0.9088627696037292, 0.910711944103241, 0.9181085824966431, 0.9119006991386414, 0.9181085824966431], "val_loss": [0.9029668399265834, 0.6060101134436471, 0.5607678209032331, 0.5318524837493896, 0.47558488164629253, 0.43265680755887714, 0.4091225096157619, 0.39956038338797434, 0.3922914351735796, 0.372157735483987, 0.35963934659957886, 0.3595536095755441, 0.35183645146233694, 0.3448385255677359, 0.3443610497883388, 0.3320129258292062, 0.33299017804009573, 0.3175381336893354, 0.318452639239175, 0.3135601793016706, 0.3129138265337263, 0.3022880639348711, 0.3185217635972159, 0.3068322794778006, 0.3016216584614345, 0.30732087578092304, 0.29739772421973093, 0.30637073516845703, 0.29737610476357595, 0.3071905715124948, 0.31055727175303866, 0.30225162846701487, 0.2970201628548758, 0.30320062807628084, 0.31307428223746164, 0.3229571751185826, 0.30939896617616924, 0.31137269735336304], "val_accuracy": [0.6119999885559082, 0.7316666841506958, 0.7433333396911621, 0.762333333492279, 0.7829999923706055, 0.8203333616256714, 0.8240000009536743, 0.8356666564941406, 0.824999988079071, 0.8363333344459534, 0.847000002861023, 0.8493333458900452, 0.8489999771118164, 0.8533333539962769, 0.8493333458900452, 0.8619999885559082, 0.8629999756813049, 0.8650000095367432, 0.8606666922569275, 0.8690000176429749, 0.8709999918937683, 0.875, 0.8663333058357239, 0.8683333396911621, 0.8756666779518127, 0.8773333430290222, 0.8759999871253967, 0.878333330154419, 0.8766666650772095, 0.8703333139419556, 0.8706666827201843, 0.878333330154419, 0.8806666731834412, 0.8793333172798157, 0.8793333172798157, 0.8769999742507935, 0.8740000128746033, 0.8743333220481873]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 2, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 8, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8277142643928528, "mapping_values": [1, 17, 17, 11, 6, 3, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043274054579558, 1.1009869018660372, 0.8089569426483529, 0.7463086476305205, 0.6798044051933188, 0.6230720571082234, 0.577834589771701, 0.5507375140861513, 0.519245960752269, 0.4889516757936242, 0.46371177327379404, 0.44517074471624724, 0.43935606063097193, 0.42536656217426433, 0.39919286264467546, 0.4011067606399497, 0.38017367280595543, 0.3771052528303124, 0.35191886550746243, 0.3397935526820694, 0.3317687742076514, 0.32562223062255774, 0.32801491156340495, 0.31654161467937636, 0.31021128620264976, 0.30256293821312796, 0.29796336265508416, 0.2826728058914703, 0.2705496499260041, 0.25990375239127, 0.2540341366425387, 0.24389785494330127, 0.23802893251877388, 0.2314615600640669, 0.2337849131940205, 0.23007944282948806, 0.22554140278668278, 0.21554652225851556], "accuracy": [0.3066965937614441, 0.6098269820213318, 0.6901333928108215, 0.7176066637039185, 0.737947404384613, 0.7592127919197083, 0.7843085527420044, 0.7940827012062073, 0.8074230551719666, 0.8207634687423706, 0.8278959393501282, 0.8355567455291748, 0.839519202709198, 0.8429533839225769, 0.8539162874221802, 0.8588033318519592, 0.8627657890319824, 0.8588033318519592, 0.8672566413879395, 0.8706908226013184, 0.8787478804588318, 0.8768987059593201, 0.8729361891746521, 0.8811253309249878, 0.8856161832809448, 0.8891823887825012, 0.887597382068634, 0.8934090733528137, 0.8976356983184814, 0.9037115573883057, 0.9031832218170166, 0.9079381823539734, 0.9082023501396179, 0.9084665179252625, 0.9113723635673523, 0.9142781496047974, 0.915070652961731, 0.9179764986038208], "val_loss": [0.9031186103820801, 0.6066453286579677, 0.5602470466068813, 0.5338832480566842, 0.4749901465007237, 0.4299315299306597, 0.4129845585141863, 0.39625500781195505, 0.3875676563807896, 0.369508615561894, 0.35638279574257986, 0.3597921814237322, 0.3476456488881792, 0.344421923160553, 0.3383062907627651, 0.3289995108331953, 0.33327036244528635, 0.32001141139439176, 0.316325238772801, 0.31195599692208426, 0.30920982360839844, 0.30644687584468294, 0.31246588059834074, 0.31284530673708233, 0.30440456526620047, 0.30452678884778706, 0.2985760825020926, 0.30642043692725046, 0.2986526233809335, 0.3022163595472063, 0.30886118752615793, 0.30286161388669697, 0.3029292907033648, 0.3079555034637451, 0.31711157730647493, 0.31186212812151226, 0.3058087144579206, 0.3162363086427961], "val_accuracy": [0.6116666793823242, 0.7310000061988831, 0.7446666955947876, 0.7613333463668823, 0.7866666913032532, 0.8186666369438171, 0.8256666660308838, 0.8326666951179504, 0.8293333053588867, 0.8416666388511658, 0.8463333249092102, 0.8503333330154419, 0.8529999852180481, 0.8573333621025085, 0.8526666760444641, 0.8653333187103271, 0.8633333444595337, 0.8610000014305115, 0.8616666793823242, 0.8673333525657654, 0.8703333139419556, 0.8676666617393494, 0.8706666827201843, 0.8666666746139526, 0.8696666955947876, 0.8733333349227905, 0.8733333349227905, 0.871666669845581, 0.8700000047683716, 0.8773333430290222, 0.8726666569709778, 0.8736666440963745, 0.878333330154419, 0.878333330154419, 0.8763333559036255, 0.875, 0.8763333559036255, 0.8736666440963745]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 8, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [40, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8277142643928528, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9430220777867824, 1.1773073280397706, 0.8438479180396461, 0.7313618239410454, 0.6454098639691652, 0.601835724558293, 0.5526645441632213, 0.5397751765196995, 0.5105190325280884, 0.472966908999186, 0.4596618898296558, 0.4388366227986995, 0.43024370865484257, 0.4196669618097105, 0.3955310352324747, 0.39151275647613965, 0.37111209903914677, 0.3633236389835009, 0.3508876856756469, 0.3352702835830857, 0.3250410830961982, 0.31151612805038503, 0.3112892834871925, 0.3073101100739298, 0.3033152486921821, 0.28553800406693436, 0.2814367897144288, 0.2695841467643474, 0.2623449341279483, 0.24850259225885898, 0.2452477111855455, 0.2500018229841666, 0.24045919746715536, 0.23094477679562245, 0.23183195329754816, 0.2272880368496622, 0.21714648275902212, 0.21640162807233015], "accuracy": [0.3377360999584198, 0.6063928008079529, 0.6799629926681519, 0.7187954187393188, 0.759609043598175, 0.7753269076347351, 0.7954035401344299, 0.7979130744934082, 0.8112534880638123, 0.8256505131721497, 0.8301413059234619, 0.8367455005645752, 0.8424250483512878, 0.8462554216384888, 0.8494254350662231, 0.8564258217811584, 0.8603883385658264, 0.8644828796386719, 0.8712190985679626, 0.8713511824607849, 0.8786157965660095, 0.8860124349594116, 0.8864086866378784, 0.8836349248886108, 0.8877294659614563, 0.8951261639595032, 0.8942015767097473, 0.9009377956390381, 0.9014661312103271, 0.9052965044975281, 0.9084665179252625, 0.9068815112113953, 0.9091269373893738, 0.9113723635673523, 0.91124027967453, 0.9132214784622192, 0.9187690019607544, 0.9167877435684204], "val_loss": [0.8966681957244873, 0.633299435888018, 0.5661050592150006, 0.48942410945892334, 0.4485934632165091, 0.4229352814810617, 0.3935515965734209, 0.3984841789518084, 0.3748479059764317, 0.3569474220275879, 0.3483996220997402, 0.3443290506090437, 0.33949276379176546, 0.3391096591949463, 0.3238731452396938, 0.3291423576218741, 0.31849450724465506, 0.3184540186609541, 0.3112408093043736, 0.313646171774183, 0.30736767394202097, 0.30848371982574463, 0.3085647565977914, 0.30563225064958843, 0.30453819036483765, 0.3100008623940604, 0.3017230374472482, 0.3045904210635594, 0.30410382577351164, 0.30317920446395874, 0.30287913765226093, 0.3079322576522827, 0.29995969363621305, 0.3086647646767752, 0.31954402582986013, 0.2995338610240391, 0.3199074608939035, 0.31421659673963276], "val_accuracy": [0.5493333339691162, 0.6996666789054871, 0.75, 0.784333348274231, 0.8033333420753479, 0.8263333439826965, 0.8323333263397217, 0.824999988079071, 0.8386666774749756, 0.8529999852180481, 0.8523333072662354, 0.8583333492279053, 0.8560000061988831, 0.8543333411216736, 0.8636666536331177, 0.8569999933242798, 0.8659999966621399, 0.8650000095367432, 0.8696666955947876, 0.8636666536331177, 0.871666669845581, 0.8666666746139526, 0.8736666440963745, 0.8726666569709778, 0.875333309173584, 0.8709999918937683, 0.8713333606719971, 0.8776666522026062, 0.8736666440963745, 0.8740000128746033, 0.8759999871253967, 0.8773333430290222, 0.8826666474342346, 0.875333309173584, 0.8759999871253967, 0.8773333430290222, 0.871999979019165, 0.874666690826416]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 8, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [3, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8268571496009827, "mapping_values": [1, 12, 12, 9, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.sqrt(grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432795430564954, 1.1008559599560108, 0.8091644620646606, 0.7461959784608145, 0.6807491529839717, 0.6258537395046749, 0.5791826870431674, 0.5535178551301035, 0.5210323099840618, 0.488407763055035, 0.466178221764613, 0.4468248098037656, 0.4372936037427257, 0.4202329417922635, 0.3965094042035331, 0.4027904158278762, 0.37782619107259247, 0.37396588965634375, 0.35394928761524314, 0.3385688013577616, 0.3288960625836878, 0.32017854146591473, 0.3180583906746843, 0.30816766194159784, 0.29976996557036445, 0.2916956736647521, 0.2788248255173796, 0.2677495381253003, 0.2580820779955666, 0.2525117512683606, 0.24743092880233594], "accuracy": [0.3066965937614441, 0.6100911498069763, 0.6906617283821106, 0.720380425453186, 0.7395324110984802, 0.7568352818489075, 0.7825914621353149, 0.793422281742096, 0.805177628993988, 0.8193105459213257, 0.8249900937080383, 0.8368775844573975, 0.8379341959953308, 0.8467837572097778, 0.8536521196365356, 0.8516708612442017, 0.863029956817627, 0.8601241707801819, 0.8671245574951172, 0.8728041052818298, 0.8798044919967651, 0.8799365758895874, 0.8816536664962769, 0.8837670087814331, 0.8906353116035461, 0.8898428082466125, 0.8939374089241028, 0.9010698795318604, 0.9046360850334167, 0.9054285883903503, 0.9088627696037292], "val_loss": [0.9029432364872524, 0.6071619646889823, 0.5591931002480643, 0.5331343752997262, 0.47737831728799, 0.43294782297951834, 0.41285111222948345, 0.39526491505759104, 0.39023786783218384, 0.36871553318841116, 0.35897949763706755, 0.35825484139578684, 0.34631842374801636, 0.3440625752721514, 0.34019517047064646, 0.33120217493602205, 0.3299311229160854, 0.3180394342967442, 0.3166734916823251, 0.315990720476423, 0.30896314552852083, 0.30364008460726055, 0.3118839604513986, 0.3098857743399484, 0.30643958704812185, 0.30323314666748047, 0.2994519812720163, 0.3039022513798305, 0.297999518258231, 0.3100772329739162, 0.3080451914242336], "val_accuracy": [0.6119999885559082, 0.7323333621025085, 0.746999979019165, 0.762333333492279, 0.7829999923706055, 0.8213333487510681, 0.8253333568572998, 0.8353333473205566, 0.8253333568572998, 0.8396666646003723, 0.846666693687439, 0.8500000238418579, 0.8523333072662354, 0.8576666712760925, 0.8519999980926514, 0.862333357334137, 0.8616666793823242, 0.8653333187103271, 0.8643333315849304, 0.8733333349227905, 0.8706666827201843, 0.8766666650772095, 0.8653333187103271, 0.8733333349227905, 0.8723333477973938, 0.8776666522026062, 0.8733333349227905, 0.8769999742507935, 0.8763333559036255, 0.8730000257492065, 0.8686666488647461]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [3, 4, 0, 6, 1, 8, 6, 2, 8, 3, 0, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 1, 1, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8191428780555725, "mapping_values": [1, 22, 22, 13, 9, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.math.add(alpha, alpha))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0432811152303634, 1.100839436534468, 0.808052702807259, 0.7459723781821372, 0.6802166197845066, 0.6267204274354656, 0.5797091164152463, 0.5543418965949327, 0.5221718215962852, 0.49051237827467803, 0.46685023326143815, 0.4462429273555213, 0.4386073593623477, 0.4256734256778395, 0.4002664090974251, 0.4038777846693914, 0.38194898392435833, 0.37631454741824116, 0.3594287709316888, 0.34276470095962347, 0.3390817508847407, 0.3266999798325846, 0.3218059681858826, 0.30974536585832996, 0.29971576898624835, 0.2920376718981139, 0.2829227449989684, 0.2713891481994213, 0.2664572340567287, 0.2620831437161916, 0.2481508347116142], "accuracy": [0.3066965937614441, 0.6098269820213318, 0.6906617283821106, 0.7210407853126526, 0.7360982894897461, 0.7576277852058411, 0.7860256433486938, 0.7915731072425842, 0.8080834746360779, 0.8222163319587708, 0.8284242749214172, 0.8356888294219971, 0.8391229510307312, 0.8416325449943542, 0.8502179384231567, 0.8562937378883362, 0.8574824929237366, 0.8577466607093811, 0.8644828796386719, 0.872407853603363, 0.8766345381736755, 0.8757099509239197, 0.8792761564254761, 0.8833707571029663, 0.8902390599250793, 0.8902390599250793, 0.8939374089241028, 0.8997490406036377, 0.898428201675415, 0.900409460067749, 0.9075419306755066], "val_loss": [0.9029395920889718, 0.6061489411762783, 0.5612262317112514, 0.5303960697991508, 0.47795796394348145, 0.43236091307231356, 0.4113293630736215, 0.39966702461242676, 0.39513822964259554, 0.3702817303793771, 0.3584497315543039, 0.3610066430909293, 0.3483784369059971, 0.34390283482415335, 0.33939783913748606, 0.3324344413621085, 0.33367663621902466, 0.32188513449260164, 0.3178281613758632, 0.3187668578965323, 0.31042419161115375, 0.3080568483897618, 0.30804366724831717, 0.3083945597921099, 0.30587513957704815, 0.30574774742126465, 0.29927039997918264, 0.30340020997183664, 0.29641605275017874, 0.3028225728443691, 0.30797639914921354], "val_accuracy": [0.6119999885559082, 0.7286666631698608, 0.7409999966621399, 0.7666666507720947, 0.7796666622161865, 0.8163333535194397, 0.8230000138282776, 0.8323333263397217, 0.8233333230018616, 0.8376666903495789, 0.8450000286102295, 0.8453333377838135, 0.8546666502952576, 0.8586666584014893, 0.8519999980926514, 0.859666645526886, 0.8576666712760925, 0.862333357334137, 0.8656666874885559, 0.8693333268165588, 0.8726666569709778, 0.8736666440963745, 0.8726666569709778, 0.8656666874885559, 0.8723333477973938, 0.8763333559036255, 0.875, 0.8726666569709778, 0.8740000128746033, 0.8740000128746033, 0.874666690826416]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.817714273929596, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.sqrt(alpha), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.043280397124688, 1.1008600341157355, 0.8083660007152953, 0.7455070748651631, 0.6795775980257229, 0.6236574433624879, 0.5766255199917083, 0.5546677020861724, 0.5237110070564397, 0.48851305822638974, 0.4638632168197959, 0.44277829905668536, 0.43955197086376424, 0.4210270577378639, 0.39994653811024605, 0.4084191652195187, 0.38203272823376694, 0.3760273417485247, 0.3557241199479804, 0.3442583262581851, 0.33571380401221346, 0.32542981099317164, 0.3194743595292083, 0.31392505870062554, 0.3032651554284835, 0.29206365123715905, 0.28415301335076804, 0.2721981314533595, 0.26261956665998026, 0.25573085610813956, 0.25336933626065467, 0.24859121704397577, 0.2447796857564866, 0.2357659905404935, 0.2316685666883343, 0.2211239867442792, 0.22063211862870244, 0.21017086393506285, 0.20989561362186868, 0.21025416162689176], "accuracy": [0.3066965937614441, 0.6095628142356873, 0.6923788189888, 0.7194558382034302, 0.7395324110984802, 0.7584202885627747, 0.7868181467056274, 0.7921014428138733, 0.8049134612083435, 0.8185180425643921, 0.8323867321014404, 0.8378021121025085, 0.8356888294219971, 0.8453308939933777, 0.8540483713150024, 0.8500858545303345, 0.8607845902442932, 0.8605204224586487, 0.8659358024597168, 0.8708229064941406, 0.8790120482444763, 0.8755778670310974, 0.8819178342819214, 0.8792761564254761, 0.8856161832809448, 0.8928807377815247, 0.8939374089241028, 0.8965790271759033, 0.9038436412811279, 0.9051644206047058, 0.9019944667816162, 0.9079381823539734, 0.9059569239616394, 0.9075419306755066, 0.9134856462478638, 0.9161273241043091, 0.9173160791397095, 0.9186369180679321, 0.9163914918899536, 0.9185048341751099], "val_loss": [0.9029241289411273, 0.6058894736426217, 0.5599485635757446, 0.5312821524483817, 0.4761065925870623, 0.4328363963535854, 0.4083490116255624, 0.39850644554410664, 0.39431220293045044, 0.3709244898387364, 0.35811346769332886, 0.3565329057829721, 0.3488054360662188, 0.3453459143638611, 0.345011191708701, 0.33071008750370573, 0.33642841236931936, 0.31865332807813374, 0.3151127185140337, 0.31621067013059345, 0.31120375224522184, 0.3094793472971235, 0.3151291012763977, 0.3133869937488011, 0.308684025491987, 0.3071213960647583, 0.2948414513042995, 0.30112649713243755, 0.3013132725443159, 0.30197562490190777, 0.30700806209019255, 0.299997729914529, 0.300425044127873, 0.31050929001399447, 0.31802964210510254, 0.3098359704017639, 0.3094069276537214, 0.31105038949421476, 0.3051178881100246, 0.31167746441704886], "val_accuracy": [0.6119999885559082, 0.731333315372467, 0.746999979019165, 0.7596666812896729, 0.7833333611488342, 0.8209999799728394, 0.8240000009536743, 0.8299999833106995, 0.8230000138282776, 0.8399999737739563, 0.8479999899864197, 0.8503333330154419, 0.8503333330154419, 0.8533333539962769, 0.8473333120346069, 0.8616666793823242, 0.8569999933242798, 0.862333357334137, 0.8636666536331177, 0.8676666617393494, 0.871999979019165, 0.8696666955947876, 0.8646666407585144, 0.8636666536331177, 0.8766666650772095, 0.8790000081062317, 0.8773333430290222, 0.8796666860580444, 0.8786666393280029, 0.8740000128746033, 0.8723333477973938, 0.878333330154419, 0.8806666731834412, 0.8790000081062317, 0.8820000290870667, 0.8763333559036255, 0.8776666522026062, 0.8766666650772095, 0.8796666860580444, 0.8803333044052124]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 0, 6, 5, 8, 6, 2, 8, 5, 1, 2, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 0, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7788571715354919, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.217053490859044, 1.6922408367081907, 1.2332368967886127, 1.0320271012364535, 0.9336685058447379, 0.9034635774479283, 0.8365654144241762, 0.7880247290407457, 0.7852926832998843, 0.7430141930173275, 0.7132083415953616, 0.7040096219221142, 0.6883478987454706, 0.682642883785869, 0.6770030160259498, 0.6541523897195961, 0.6390335522449374, 0.6294955335839896, 0.6250510855578255, 0.619792675455532, 0.5997151831247866, 0.616410327349766, 0.5872108087390405, 0.5805738956039261, 0.5913881475915054, 0.5733463834573124, 0.5680068797045505], "accuracy": [0.25214633345603943, 0.4788006842136383, 0.5610883831977844, 0.633469820022583, 0.6660943031311035, 0.667811393737793, 0.6929071545600891, 0.7051908373832703, 0.7096816897392273, 0.7206445932388306, 0.7384757399559021, 0.7388719916343689, 0.743891179561615, 0.7454761862754822, 0.739928662776947, 0.7540615797042847, 0.757099449634552, 0.7606657147407532, 0.7672698497772217, 0.7670056819915771, 0.7738739848136902, 0.76542067527771, 0.7832518815994263, 0.7808743715286255, 0.7773081660270691, 0.7821952104568481, 0.7882710099220276], "val_loss": [1.697631767817906, 0.9915709154946464, 0.9026632649557931, 0.7105237926755633, 0.6261424507413592, 0.6654235976082938, 0.584172282900129, 0.5727047409330096, 0.5662534577505929, 0.5370894840785435, 0.5482368469238281, 0.5135130541665214, 0.5423926625932965, 0.5067068338394165, 0.5158394745418003, 0.49547880036490305, 0.4799755811691284, 0.48625220571245464, 0.48172152042388916, 0.47028866836002897, 0.4776394026620047, 0.46204965455191477, 0.46120532921382357, 0.4694383314677647, 0.46405179159981863, 0.45077829701559885, 0.47468737193516325], "val_accuracy": [0.5246666669845581, 0.6566666960716248, 0.6046666502952576, 0.6940000057220459, 0.7356666922569275, 0.6990000009536743, 0.737333357334137, 0.749666690826416, 0.749666690826416, 0.7643333077430725, 0.7519999742507935, 0.7766666412353516, 0.7620000243186951, 0.7749999761581421, 0.7636666893959045, 0.7743333578109741, 0.7883333563804626, 0.7786666750907898, 0.781000018119812, 0.7946666479110718, 0.7846666574478149, 0.800000011920929, 0.793666660785675, 0.7856666445732117, 0.7973333597183228, 0.7979999780654907, 0.7726666927337646]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 8, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [7, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7020000219345093, "mapping_values": [1, 9, 9, 7, 2, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3027128632892753, 2.3003269586549253, 2.291839640957096, 2.282912981902226, 2.2705049545946627, 2.2541006655977105, 2.239310414862592, 2.2144289610014614, 2.1888514546009024, 2.1530235280702144, 2.1057093889485605, 2.0445619152206644, 1.9590739095530663, 1.8540804142713263, 1.7527485854905027, 1.6390959020492943, 1.5493914615901674, 1.4848374506548931, 1.432014066513897, 1.4323794600230166, 1.3574047226711208, 1.2675075033762515, 1.211477091142042, 1.1526797747552167, 1.0561487303984998, 0.9868223856405859, 0.9721979872897915, 0.9456540020607119, 0.9241134386493419, 0.9256416415147903, 0.9105366848368828, 0.8979767787694269, 0.8864914975177658, 0.8648425043692064, 0.8511681659441142, 0.851096545322586, 0.8402667260125896], "accuracy": [0.08796724677085876, 0.10077928751707077, 0.11108175665140152, 0.14463083446025848, 0.17421740293502808, 0.22295601665973663, 0.24897634983062744, 0.29362040758132935, 0.316470742225647, 0.34500065445899963, 0.3669264316558838, 0.3689076602458954, 0.3943996727466583, 0.40087175369262695, 0.4085325598716736, 0.4419495463371277, 0.4659886360168457, 0.48051777482032776, 0.500990629196167, 0.5044247508049011, 0.5340113639831543, 0.5552766919136047, 0.5871087312698364, 0.6087703108787537, 0.6243560910224915, 0.6301677227020264, 0.6214502453804016, 0.6337339878082275, 0.653150200843811, 0.6490556001663208, 0.6605468392372131, 0.667811393737793, 0.6680755615234375, 0.6684718132019043, 0.6763967871665955, 0.6715096831321716, 0.6744155287742615], "val_loss": [1.968824999673026, 1.9642513820103236, 1.9568869726998466, 1.9468910353524345, 1.9343666349138533, 1.919205801827567, 1.9009597642081124, 1.8788884026663644, 1.8510489463806152, 1.814035211290632, 1.7625141143798828, 1.689363752092634, 1.5885517597198486, 1.4633831637246268, 1.322080101285662, 1.176363161631993, 1.0422240325382777, 0.9298136915479388, 0.8642532484872001, 0.8417904717581612, 0.7826675346919468, 0.7696222407477242, 0.777856605393546, 0.7362768139157977, 0.6817177363804409, 0.6830107484545026, 0.6835072551454816, 0.6745616367885044, 0.6746677160263062, 0.6736572810581752, 0.6683811119624546, 0.6558007342474801, 0.6390391077314105, 0.625296984400068, 0.616627744265965, 0.6101933377129691, 0.6046015705381121], "val_accuracy": [0.0560000017285347, 0.09099999815225601, 0.1550000011920929, 0.2613333463668823, 0.34299999475479126, 0.3776666522026062, 0.4020000100135803, 0.42100000381469727, 0.43533334136009216, 0.4503333270549774, 0.4646666646003723, 0.47433334589004517, 0.48633334040641785, 0.5143333077430725, 0.5569999814033508, 0.5979999899864197, 0.6383333206176758, 0.6536666750907898, 0.6543333530426025, 0.6303333044052124, 0.67166668176651, 0.6816666722297668, 0.6869999766349792, 0.6943333148956299, 0.7073333263397217, 0.6863333582878113, 0.6773333549499512, 0.7073333263397217, 0.7039999961853027, 0.7113333344459534, 0.7226666808128357, 0.7283333539962769, 0.7276666760444641, 0.7179999947547913, 0.7110000252723694, 0.7176666855812073, 0.7163333296775818]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [3, 4, 2, 1, 2, 8, 2, 3, 5, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 1, 0, 2, 2, 1, 1, 2, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.6234285831451416, "mapping_values": [1, 23, 23, 12, 11, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.023269984527208, 1.1569095057204195, 0.8706390156942415, 0.8114627833300893, 0.7027527974691404, 0.6520551201563785, 0.5990092084628559, 0.5732096361839981, 0.5698527855533635, 0.5317771945096057, 0.5042242932911672, 0.5134828471512354, 0.4907658486562461, 0.4716133145041485, 0.4735145625059143, 0.47973550274513493, 0.47976198107527707, 0.5153677566034793, 0.5313753473949219], "accuracy": [0.3129045069217682, 0.6020340919494629, 0.6717738509178162, 0.707040011882782, 0.7436270117759705, 0.7519482374191284, 0.774798572063446, 0.7750627398490906, 0.7835160493850708, 0.7930260300636292, 0.8112534880638123, 0.8038568496704102, 0.8109893202781677, 0.8136309385299683, 0.8235371708869934, 0.8166688680648804, 0.8203672170639038, 0.8105930685997009, 0.800818920135498], "val_loss": [0.8764698164803642, 0.6370416368756976, 0.6591489825929914, 0.5283102478299823, 0.4855548483984811, 0.4613708938871111, 0.4344626579965864, 0.4400257723672049, 0.4283586059297834, 0.42313783509390696, 0.40803330285208567, 0.38992985657283236, 0.4070320895739964, 0.4004977175167629, 0.40973218849727083, 0.4400965826851981, 0.45856690406799316, 0.4553238834653582, 0.41992935112544466], "val_accuracy": [0.6366666555404663, 0.7273333072662354, 0.7206666469573975, 0.7643333077430725, 0.7879999876022339, 0.7946666479110718, 0.8100000023841858, 0.8029999732971191, 0.8173333406448364, 0.8203333616256714, 0.8186666369438171, 0.8309999704360962, 0.8263333439826965, 0.846666693687439, 0.8296666741371155, 0.8286666870117188, 0.8349999785423279, 0.8186666369438171, 0.8196666836738586]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 9, 9, 6, 2, 8, 3, 3, 8, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 1, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.6117143034934998, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.0232699530834157, 1.1568357044317468, 0.87090398204514, 0.8116991412622298, 0.704801729491925, 0.6542999310390178, 0.603505134598265, 0.5719034322233028, 0.5665409363035702, 0.5353386605247262, 0.511510283420146, 0.5072135493905238, 0.4984714282328946, 0.4869564576250388, 0.5125369505599788, 0.493914347078507, 0.4998018573366845, 0.496895366648106], "accuracy": [0.3129045069217682, 0.6022982597351074, 0.6705851554870605, 0.7074362635612488, 0.7400607466697693, 0.7528728246688843, 0.7732135653495789, 0.7738739848136902, 0.7825914621353149, 0.7886672616004944, 0.8124422430992126, 0.8062343001365662, 0.8105930685997009, 0.8193105459213257, 0.7981772422790527, 0.807158887386322, 0.8169330358505249, 0.8123101592063904], "val_loss": [0.8764688287462506, 0.636744669505528, 0.6592061179024833, 0.5302694014140538, 0.48651039600372314, 0.46146328108651297, 0.4316545469420297, 0.437510575566973, 0.42761229617255075, 0.42094606161117554, 0.4145366208893912, 0.39822148425238474, 0.40010495696749004, 0.40255620649882723, 0.4164520672389439, 0.4370785355567932, 0.4168257032121931, 0.42028266191482544], "val_accuracy": [0.6366666555404663, 0.7273333072662354, 0.7196666598320007, 0.7636666893959045, 0.7873333096504211, 0.7929999828338623, 0.8076666593551636, 0.8026666641235352, 0.8186666369438171, 0.8230000138282776, 0.8266666531562805, 0.8303333520889282, 0.8330000042915344, 0.8270000219345093, 0.8186666369438171, 0.824999988079071, 0.8286666870117188, 0.8276666402816772]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 2, 9, 8, 2, 8, 9, 3, 8, 3, 2, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [5, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 4, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.subtract(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 6, 2, 2, 3, 5, 8, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 0, 2, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [1, 4, 3, 3], [93], [1, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 13, 9, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad))), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [114.64881576167248, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04253070801496506, 0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1809234.9642857143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 0, 6, 5, 8, 6, 2, 8, 5, 1, 2, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 0, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(grad, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 4, 9, 6, 2, 8, 3, 3, 2, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 12, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 1, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [1, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1], [8, 3, 0, 6, 2, 8, 6, 4, 2, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 0, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 7, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [30, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.subtract(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 4, 0, 6, 5, 8, 6, 2, 8, 5, 1, 2, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 0, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [4, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [0, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.09971428662538528, "mapping_values": [1, 18, 18, 11, 7, 3, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.sqrt(grad)), tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(grad, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.344127941408713, 2.7668240012714436, 3.8795373305322127, 5.889737713118082, 8.730481799252518, 12.24278373148904, 16.942452448486037], "accuracy": [0.09325055778026581, 0.09708096832036972, 0.09893012791872025, 0.1022322028875351, 0.10249637067317963, 0.10408136248588562, 0.09840179979801178], "val_loss": [2.0446594102042064, 2.4400340488978793, 3.361987522670201, 4.841485023498535, 6.834204401288714, 9.334357942853655, 12.365774427141462], "val_accuracy": [0.09700000286102295, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 6, 2, 8, 9, 3, 8, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 1, 2, 1, 1, 2, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 0, 1, 1], [2, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.06914285570383072, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(beta), alpha)", "other_info": {"loss": [2.303155257764541, 2.303607590777007, 2.3008560051991718, 2.300472539854623, 2.2997210911315085, 2.2986242522999376, 2.300976407683804, 2.2988808985793154, 2.3002457639182547, 2.299368934419728, 2.2991092807156077, 2.30035612237074, 2.300111334731062, 2.298740122973596, 2.300292530237424, 2.3000126246211865, 2.2988508601371938, 2.2989970687956403], "accuracy": [0.08677849918603897, 0.09351472556591034, 0.09113723784685135, 0.09893012791872025, 0.09642054885625839, 0.10394927859306335, 0.09259014576673508, 0.10368511080741882, 0.09536388516426086, 0.09893012791872025, 0.1002509593963623, 0.09285431355237961, 0.09919429570436478, 0.109232597053051, 0.09774138033390045, 0.09642054885625839, 0.09893012791872025, 0.1022322028875351], "val_loss": [1.9703655924115862, 1.9699726104736328, 1.969426495688302, 1.9689922332763672, 1.9686859675816126, 1.9685897827148438, 1.9685933249337333, 1.9686568123953683, 1.968679973057338, 1.9686226163591658, 1.9685919625418526, 1.9685962540762765, 1.9686002731323242, 1.9686459813799178, 1.9687280654907227, 1.9688338552202498, 1.9689756802150182, 1.9691873277936662], "val_accuracy": [0.04833333194255829, 0.05233333259820938, 0.058666665107011795, 0.06366666406393051, 0.06833333522081375, 0.07366666942834854, 0.07800000160932541, 0.07900000363588333, 0.0806666687130928, 0.08366666734218597, 0.08299999684095383, 0.08266666531562805, 0.08433333039283752, 0.08399999886751175, 0.08266666531562805, 0.08433333039283752, 0.08266666531562805, 0.07866666465997696]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 4, 0, 2, 1, 8, 6, 2, 8, 3, 1, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 1, 2, 0, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [51, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 18, 18, 10, 8, 2, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.subtract(tf.math.sqrt(grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.add(alpha, grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.multiply(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303189611485322, 2.3039646490359305, 2.3018071108238494, 2.3021541008970066, 2.301913019625455, 2.3010899398966456], "accuracy": [0.08691058307886124, 0.09259014576673508, 0.08875974267721176, 0.09509972482919693, 0.09153348207473755, 0.09391097724437714], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 4, 0, 6, 5, 8, 6, 2, 8, 5, 1, 2, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 0, 0, 1, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [94, 41, 30, 15, 57, 74, 34, 28, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 0, 0, 3, 2, 2, 3, 0, 0, 0, 1, 1, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [38, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [8, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 0, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03885714337229729, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.303193281953676, 2.303974977054175, 2.3018236649333996, 2.302176799851008, 2.3019426204367495, 2.3011204072465796], "accuracy": [0.08691058307886124, 0.09259014576673508, 0.08902391046285629, 0.0948355570435524, 0.09126931428909302, 0.09391097724437714], "val_loss": [1.9704945428030831, 1.970498902457101, 1.9705027171543665, 1.9705070768083846, 1.970510823386056, 1.9705142974853516], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]