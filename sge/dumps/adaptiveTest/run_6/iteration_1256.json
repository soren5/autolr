[{"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8354285955429077, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9974166075976423, 1.0683657642463258, 0.7950933139164529, 0.7128163100690291, 0.6417043813310043, 0.6019937865895649, 0.5600288925925423, 0.5331776092797538, 0.5072928833419841, 0.48544161388776746, 0.4656493183864563, 0.45533463359272724, 0.43578279134525266, 0.42177360049328233, 0.41575633574549264, 0.3869195140434719, 0.37419397882765876, 0.3723780397946226, 0.3593995741817851, 0.3455395246257462, 0.3397533499199433, 0.3282399953175309, 0.32203918441159773, 0.3108202830525815, 0.30642256769348586, 0.2965020419521229, 0.2814876675534919, 0.26878512833080964, 0.2692186767379322, 0.26931529211377614, 0.2537526178747325, 0.25665282682932566, 0.24037627309950477, 0.23148025691769047, 0.22993628242783906], "accuracy": [0.3179236650466919, 0.6159027814865112, 0.7017567157745361, 0.7298903465270996, 0.7563069462776184, 0.7718927264213562, 0.7936864495277405, 0.7987055778503418, 0.8109893202781677, 0.8236692547798157, 0.8269713521003723, 0.8293488025665283, 0.8407079577445984, 0.8445383906364441, 0.8490291833877563, 0.856689989566803, 0.863029956817627, 0.8664641380310059, 0.8659358024597168, 0.8708229064941406, 0.8778232932090759, 0.8753136992454529, 0.8774270415306091, 0.8794082403182983, 0.8874653577804565, 0.8864086866378784, 0.89552241563797, 0.8968431949615479, 0.8948619961738586, 0.8961827754974365, 0.9033153057098389, 0.9026548862457275, 0.9059569239616394, 0.9115044474601746, 0.913089394569397], "val_loss": [0.8349509239196777, 0.5836280924933297, 0.5535574470247541, 0.48779220240456717, 0.4494262422834124, 0.42519931282315937, 0.4032355972698757, 0.39351812430790495, 0.3826220716748919, 0.36543900626046316, 0.35399184056690763, 0.3555270348276411, 0.34634892429624287, 0.3498149939945766, 0.3346466932977949, 0.3296829121453421, 0.3252632873398917, 0.3178497382572719, 0.3221664684159415, 0.3141902344567435, 0.3172857420785086, 0.30527108907699585, 0.30737278291157316, 0.3098656109401158, 0.3087606855801174, 0.30377057620457243, 0.3072086146899632, 0.3042196290833609, 0.3122364282608032, 0.2991266761507307, 0.315189003944397, 0.30249935388565063, 0.3123126711164202, 0.30292116744177683, 0.3081968937601362], "val_accuracy": [0.6303333044052124, 0.7316666841506958, 0.749666690826416, 0.777999997138977, 0.8116666674613953, 0.8226666450500488, 0.8273333311080933, 0.8299999833106995, 0.8403333425521851, 0.8460000157356262, 0.8446666598320007, 0.8513333201408386, 0.8566666841506958, 0.8463333249092102, 0.8569999933242798, 0.8640000224113464, 0.862333357334137, 0.8666666746139526, 0.8629999756813049, 0.8673333525657654, 0.8610000014305115, 0.8703333139419556, 0.8693333268165588, 0.8726666569709778, 0.8763333559036255, 0.8706666827201843, 0.8730000257492065, 0.8756666779518127, 0.8723333477973938, 0.8766666650772095, 0.875333309173584, 0.8759999871253967, 0.8736666440963745, 0.8733333349227905, 0.874666690826416]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9974253536640552, 1.0683986322203678, 0.7951514909784193, 0.711862730461892, 0.6429413771112881, 0.6019918161722742, 0.5603589344852872, 0.5310535881662917, 0.5053519469013839, 0.48691658304273305, 0.4677494527751649, 0.45188961884349077, 0.43320265831948584, 0.42166597223820357, 0.414805516976533, 0.3864544096395812, 0.3756317276964728, 0.3680432808003988, 0.36019658609356753, 0.3497403628121372, 0.3382853602870203, 0.3331801374559122, 0.31832246660493413, 0.30732385298327497, 0.3057879380081717, 0.2962653904448663, 0.2872179437346541], "accuracy": [0.3179236650466919, 0.615770697593689, 0.7022850513458252, 0.7305507659912109, 0.7560427784919739, 0.7733456492424011, 0.7921014428138733, 0.8013472557067871, 0.8123101592063904, 0.819970965385437, 0.8272355198860168, 0.8319904804229736, 0.8397833704948425, 0.8424250483512878, 0.8510104417800903, 0.8521991968154907, 0.8619733452796936, 0.8650112152099609, 0.8672566413879395, 0.8709549307823181, 0.8741249442100525, 0.8725399374961853, 0.8790120482444763, 0.8817857503890991, 0.8881257176399231, 0.8841632604598999, 0.8919561505317688], "val_loss": [0.834994741848537, 0.5835116590772357, 0.5533458335059029, 0.4878227540424892, 0.44829598494938444, 0.4268184644835336, 0.40257655722754343, 0.39089647361210417, 0.3823883192879813, 0.36569862706320627, 0.353954587663923, 0.35429597752434866, 0.3445603677204677, 0.3485340476036072, 0.3351392575672695, 0.3302143727030073, 0.32776886224746704, 0.3132691042763846, 0.31992586169924053, 0.31337798493249075, 0.31473879303250996, 0.30272527251924786, 0.30868037257875713, 0.30538469552993774, 0.30805000237056185, 0.2998956527028765, 0.3020077177456447], "val_accuracy": [0.6306666731834412, 0.7289999723434448, 0.7490000128746033, 0.7806666493415833, 0.8119999766349792, 0.8186666369438171, 0.8286666870117188, 0.8326666951179504, 0.8339999914169312, 0.8443333506584167, 0.8473333120346069, 0.8510000109672546, 0.8573333621025085, 0.8496666550636292, 0.8569999933242798, 0.8659999966621399, 0.8636666536331177, 0.8700000047683716, 0.8616666793823242, 0.8706666827201843, 0.8629999756813049, 0.8756666779518127, 0.8669999837875366, 0.8736666440963745, 0.871999979019165, 0.875, 0.875333309173584]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [3, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.6762857437133789, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303379061735065, 2.3013125044117673, 2.297980228167609, 2.293627883370495, 2.2881055867053166, 2.282613958019417, 2.272413814954313, 2.2631790007204664, 2.255949063874853, 2.2422383409118956, 2.229228206235719, 2.2168139848632267, 2.1996515182975798, 2.1854309047517084, 2.1634027664419873, 2.1415893426896906, 2.1144363429835757, 2.0816858729288295, 2.0464648248150743, 2.0050990384378613, 1.9524310373941889, 1.9016101444402091, 1.8361156181242992, 1.7721959954286846, 1.7109640890565359, 1.6667127819770458, 1.628405996947288, 1.5619147778061229, 1.511964846154907, 1.4591125697350191, 1.416721957171708, 1.3691681954744486, 1.3470009051262348, 1.3153285182399395, 1.2617625759545728, 1.237924125909081, 1.2123541317721716, 1.181853186153638, 1.153298408269347, 1.1334518563116012, 1.114244029396293, 1.1016391527698401, 1.0649960602058821, 1.060030243211277, 1.0537076138423467], "accuracy": [0.08109892904758453, 0.09747721254825592, 0.10342095047235489, 0.10949676483869553, 0.12257297337055206, 0.13855500519275665, 0.16021661460399628, 0.19693566858768463, 0.22057852149009705, 0.24976885318756104, 0.27737417817115784, 0.30880993604660034, 0.3303394615650177, 0.33945319056510925, 0.35266146063804626, 0.3683793544769287, 0.37564390897750854, 0.3937392830848694, 0.39770177006721497, 0.39585259556770325, 0.40906089544296265, 0.40364548563957214, 0.4085325598716736, 0.41526877880096436, 0.41870296001434326, 0.41751420497894287, 0.4278166592121124, 0.462950736284256, 0.4753665328025818, 0.4819706678390503, 0.5032360553741455, 0.5209351181983948, 0.5280676484107971, 0.5411438345909119, 0.5580504536628723, 0.557390034198761, 0.570730447769165, 0.5811649560928345, 0.5864483118057251, 0.6019020080566406, 0.6079778075218201, 0.6009774208068848, 0.6184123754501343, 0.6280544400215149, 0.6211860775947571], "val_loss": [1.96974549974714, 1.96769380569458, 1.9643470900399345, 1.9597615514482771, 1.9540060588291712, 1.9471723692757743, 1.939340046473912, 1.9305726460048132, 1.9209448950631278, 1.9104538645063127, 1.8990171296255929, 1.8863650730678014, 1.8720945630754744, 1.8556748117719377, 1.8365836143493652, 1.8143572126116072, 1.7882875033787318, 1.7574492863246374, 1.7208775452205114, 1.6774210589272636, 1.6261682510375977, 1.5670571667807442, 1.5025773729596819, 1.4372454030173165, 1.375457423073905, 1.3170108113970076, 1.2571659769330705, 1.194220781326294, 1.1305656773703439, 1.0701491492135184, 1.0143792629241943, 0.9658293383462089, 0.9256213051932198, 0.8903806550162179, 0.8566657304763794, 0.8255965709686279, 0.7999799592154366, 0.7800748518535069, 0.763555680002485, 0.7491612604686192, 0.7371092012950352, 0.7274496895926339, 0.7177771159580776, 0.7072783027376447, 0.6967765944344657], "val_accuracy": [0.0533333346247673, 0.06700000166893005, 0.09133332967758179, 0.13233333826065063, 0.1863333284854889, 0.25733333826065063, 0.31566667556762695, 0.35866665840148926, 0.3790000081062317, 0.3943333327770233, 0.4126666784286499, 0.42366665601730347, 0.437333345413208, 0.4423333406448364, 0.4490000009536743, 0.4569999873638153, 0.46266666054725647, 0.46666666865348816, 0.47566667199134827, 0.4816666543483734, 0.4906666576862335, 0.4946666657924652, 0.4973333477973938, 0.5026666522026062, 0.5099999904632568, 0.5183333158493042, 0.5320000052452087, 0.5509999990463257, 0.5756666660308838, 0.6000000238418579, 0.6230000257492065, 0.6466666460037231, 0.6566666960716248, 0.6669999957084656, 0.6773333549499512, 0.6786666512489319, 0.6809999942779541, 0.6846666932106018, 0.6866666674613953, 0.6880000233650208, 0.6846666932106018, 0.6840000152587891, 0.6833333373069763, 0.6863333582878113, 0.6880000233650208]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [54, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.21571429073810577, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2719297105169187, 331358748.0878026, NaN, NaN, NaN, NaN], "accuracy": [0.21252146363258362, 0.1220446452498436, 0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.4402905191693987, Infinity, NaN, NaN, NaN, NaN], "val_accuracy": [0.2433333396911621, 0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [25278868159.84074, 4.8259037389478957e+17, 1.865632941811593e+25, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10091137140989304, 0.10210011899471283, 0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1395968142774.8572, 2.482540622233177e+19, 1.6620229273664554e+27, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.0989999994635582, 0.0963333323597908, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 3, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [22, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3213.3020390964157, 447967.56417167484, 7585398.214502708, 53606519.95562013, 235316825.7234183, 775306834.9269581], "accuracy": [0.09972262382507324, 0.10117553919553757, 0.09826971590518951, 0.09906221181154251, 0.10117553919553757, 0.09945846349000931], "val_loss": [24938.5234375, 1304446.0357142857, 13927466.285714285, 75789741.71428572, 283648301.71428573, 836291364.5714285], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [3, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [4, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [19, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [3, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1235233335.5625474, 23226675468.34183, 108020118680.70056, 301080225839.8795, 644380103909.5243, 1186848406993.6758], "accuracy": [0.09945846349000931, 0.1010434553027153, 0.09813763201236725, 0.09906221181154251, 0.10117553919553757, 0.09945846349000931], "val_loss": [4511036708.571428, 36077356178.28571, 121749480594.28572, 288577580470.8571, 563611004342.8572, 973893926912.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [18, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 3, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [5320.946194098091, 2.3141878499268005, 2.3059419009506334, 2.3036980576062356, 2.3030758922472607, 2.302990902967583, 2.303023222336412, 2.302995223505244], "accuracy": [0.09615638852119446, 0.09853387624025345, 0.09430722147226334, 0.0952318087220192, 0.10011887550354004, 0.09681680053472519, 0.09668471664190292, 0.09470347315073013], "val_loss": [1.9878245081220354, 1.9769712856837682, 1.9745006561279297, 1.9738142149788993, 1.973625796181815, 1.9736381939479284, 1.9736876487731934, 1.973696231842041], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 8, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [70405023975.69675, 10461961138647.22, 178732446959054.7, 1266625888815484.0, 5566599457070043.0, 1.8349560418267252e+16], "accuracy": [0.09945846349000931, 0.10091137140989304, 0.09813763201236725, 0.09893012791872025, 0.10091137140989304, 0.09945846349000931], "val_loss": [568063370386.2858, 30624368520630.855, 328712513014052.56, 1792210855900891.5, 6710409965413522.0, 1.979571778849529e+16], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [0, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 3, 2, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023710548444716, 2.3025813010453455, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09311848133802414, 0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [69, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [94, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [0, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023710548444716, 2.3025813010453455, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09311848133802414, 0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [54, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [0, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3122693995726564, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09509972482919693, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0274481092180525, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 8, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 3, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [6, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [1, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [3, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [94, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 5, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [49, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(grad)))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [37, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [0, 0, 1, 1], [0, 5], [1, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3035903279618535, 2.302922264459882, 2.302417457788659, 2.3022490853032638, 2.3022742896205353, 2.303557134055663], "accuracy": [0.08070268481969833, 0.09457138925790787, 0.09232597798109055, 0.09153348207473755, 0.08942015469074249, 0.0866464152932167], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 1, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3035903279618535, 2.302922264459882, 2.302417457788659, 2.3022490853032638, 2.3022742896205353, 2.303557134055663], "accuracy": [0.08070268481969833, 0.09457138925790787, 0.09232597798109055, 0.09153348207473755, 0.08942015469074249, 0.0866464152932167], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [1, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [3, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3035903279618535, 2.302922264459882, 2.302417457788659, 2.3022490853032638, 2.3022742896205353, 2.303557134055663], "accuracy": [0.08070268481969833, 0.09457138925790787, 0.09232597798109055, 0.09153348207473755, 0.08942015469074249, 0.0866464152932167], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 9, 2, 2, 1, 6, 0, 4, 4, 2, 1, 0, 8, 3, 0, 1, 8, 2, 9, 6, 3, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 0, 1, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [92, 40, 73, 83, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [37, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [9, 8, 6, 6, 6, 6, 4, 1, 4, 8], [3, 3, 3, 3], [74, 97], [1, 0, 1, 1], [0, 5], [1, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3035903279618535, 2.302922264459882, 2.302417457788659, 2.3022490853032638, 2.3022742896205353, 2.303557134055663], "accuracy": [0.08070268481969833, 0.09457138925790787, 0.09232597798109055, 0.09153348207473755, 0.08942015469074249, 0.0866464152932167], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]