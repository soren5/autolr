[{"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 9, 8, 8, 8, 2, 6, 5, 2, 8, 0, 6, 3, 1, 4, 5, 2, 0, 4, 6, 2, 8, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 2, 3, 3, 0, 3, 4, 1, 3, 3, 4, 4, 4, 2, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [0, 0], [8, 4], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.7977142930030823, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2490141203437797, 2.338557513193794, 2.2696561117717664, 2.345281176264134, 2.3034947938167063, 2.3032598575785523, 2.303143412382564, 2.30037891831711, 2.2738943774198512, 2.201838366564286, 2.1849664264839435, 2.0391440847215714, 1.8991140350610856, 1.9911268957066515, 1.8414806316966756, 1.6687701250410603, 1.847632712770557, 1.3079147492385952, 1.1940699443841072, 1.2042213556017338, 1.0407921369002402, 0.9076050410039547, 0.8916206524088996, 0.8000131671092671, 0.7293328156623669, 0.7180690760499749, 0.7043259047860435, 0.8581707295472706, 0.723115769588023, 0.6337228508011981, 0.6459079392440347, 0.5773257711119167, 0.5717789403766516, 0.5771669527448604, 0.5490070330137747, 0.5636581226252388], "accuracy": [0.22533351182937622, 0.10342095047235489, 0.16166952252388, 0.11768590658903122, 0.09998679161071777, 0.09800554811954498, 0.09853387624025345, 0.1142517477273941, 0.17672698199748993, 0.21252146363258362, 0.19284109771251678, 0.3345661163330078, 0.39426758885383606, 0.3140932619571686, 0.41104212403297424, 0.41751420497894287, 0.3949280083179474, 0.5498613119125366, 0.5867124795913696, 0.5812970399856567, 0.6219785809516907, 0.6693964004516602, 0.6738871932029724, 0.7098137736320496, 0.735569953918457, 0.7342491149902344, 0.7470611333847046, 0.6970016956329346, 0.7409853339195251, 0.7651565074920654, 0.7569673657417297, 0.7878747582435608, 0.7868181467056274, 0.7827235460281372, 0.7947431206703186, 0.7827235460281372], "val_loss": [2.201646055494036, 1.972717353275844, 1.8414228984287806, 1.974125930241176, 1.973623275756836, 1.9737179619925362, 1.9731672831944056, 1.9587326731000627, 1.7891644069126673, 1.9731484140668596, 1.634613003049578, 1.4395393644060408, 1.9213571548461914, 1.1448660237448556, 1.766855035509382, 1.5332461084638322, 1.2351993492671423, 0.9394790785653251, 0.7190227508544922, 0.9385832377842495, 0.6572059903826032, 0.6597265516008649, 0.6352649756840297, 0.6704150268009731, 0.5416620629174369, 0.5602092061723981, 0.8078110047749111, 0.6102860144206456, 0.5092227969850812, 0.5005853346415928, 0.4583690507071359, 0.4954740490232195, 0.5340511969157627, 0.4520191805703299, 0.45718744822910856, 0.4496313844408308], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.3256666660308838, 0.10266666859388351, 0.10066666454076767, 0.09799999743700027, 0.12033333629369736, 0.3656666576862335, 0.2653333246707916, 0.10333333164453506, 0.3876666724681854, 0.5339999794960022, 0.1836666613817215, 0.5886666774749756, 0.18400000035762787, 0.37599998712539673, 0.5586666464805603, 0.5509999990463257, 0.7056666612625122, 0.5920000076293945, 0.7196666598320007, 0.7076666951179504, 0.7266666889190674, 0.7599999904632568, 0.768666684627533, 0.7789999842643738, 0.7076666951179504, 0.737666666507721, 0.7866666913032532, 0.7943333387374878, 0.8109999895095825, 0.7696666717529297, 0.7556666731834412, 0.8076666593551636, 0.781333327293396, 0.8036666512489319]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 2, 8, 0, 2, 3, 5, 6, 8, 9, 6, 3, 1, 4, 2, 0, 8, 4, 6, 2, 4, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 1, 2, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [49, 98, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.5191428661346436, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.add(beta, grad))))), tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.251149536832417, 2.335304011065395, 2.258609091175892, 2.2877418314067524, 2.3037482426859652, 2.303212122910247, 2.3032480281310357, 2.3034660235812967], "accuracy": [0.2254655957221985, 0.1026284471154213, 0.19402985274791718, 0.1678774207830429, 0.1018359512090683, 0.09496764093637466, 0.09840179979801178, 0.09509972482919693], "val_loss": [2.1837006296430315, 1.972747802734375, 1.7194655963352747, 1.974625519343785, 1.9736760684422083, 1.9737255232674735, 1.9736456871032715, 1.97371244430542], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.48399999737739563, 0.10266666859388351, 0.10266666859388351, 0.10000000149011612, 0.10266666859388351, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 1, 1, 8, 8, 2, 6, 1, 3, 8, 9, 6, 3, 1, 4, 5, 0, 0, 4, 2, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 1, 2, 2, 3, 0, 0, 4, 1, 3, 3, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.43057143688201904, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 22, 15, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(alpha, beta)), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad))))))))))), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2489408731240133, 2.338152718723505, 2.287014071684094, 2.2042299492515673, 2.304008055671709, 2.3032481700925937, 2.3031969031070783, 2.3034046735777407], "accuracy": [0.2254655957221985, 0.10579843819141388, 0.16972659528255463, 0.2008981704711914, 0.1026284471154213, 0.09602430462837219, 0.09893012791872025, 0.09126931428909302], "val_loss": [2.1993654114859447, 1.9727497100830078, 1.695924963269915, 1.9750774928501673, 1.9737050192696708, 1.9737633977617537, 1.973658629826137, 1.973712989262172], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.41333332657814026, 0.10266666859388351, 0.10233332961797714, 0.09799999743700027, 0.10266666859388351, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 1, 1, 8, 8, 2, 6, 3, 2, 8, 5, 6, 3, 1, 1, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 4, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 3, 9, 2, 8, 2], [3, 2, 0, 2, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [96, 64, 20, 1, 56, 35, 64, 43, 50, 33, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.42800000309944153, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.249203680024848, 2.336980986636092, 2.2651707163072454, 2.283544069614393, 2.303431629835418, 2.303170924866283, 2.2886762017224993, 2.2460099971210954], "accuracy": [0.22559767961502075, 0.1072513535618782, 0.186104878783226, 0.15374454855918884, 0.10236428678035736, 0.09800554811954498, 0.15242372453212738, 0.15559370815753937], "val_loss": [2.1924938474382674, 1.9723612240382604, 1.431645733969552, 1.974214826311384, 1.9735661234174455, 1.973245416368757, 1.7385178293500627, 1.9513962609427316], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.4323333203792572, 0.10266666859388351, 0.10233332961797714, 0.09799999743700027, 0.3656666576862335, 0.1599999964237213]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 2, 0, 2, 3, 5, 6, 8, 9, 2, 6, 8, 2, 9, 0, 3, 4, 6, 2, 4, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 3, 2, 2, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.4057142734527588, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 18, 9, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))))), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.248856001242891, 2.338143185223917, 2.2690148103537893, 2.2601201082689886, 2.3032126996999307, 2.246625336248483, 2.3308291614110743, 2.3099615616395948, 2.3172465549121837, 2.3047323095611123, 2.30394691769725], "accuracy": [0.2254655957221985, 0.10751552134752274, 0.18663319945335388, 0.14674416184425354, 0.1010434553027153, 0.17236824333667755, 0.27103421092033386, 0.1026284471154213, 0.12534672021865845, 0.09945846349000931, 0.09668471664190292], "val_loss": [2.1993822370256697, 1.9724068641662598, 1.5082808562687464, 1.9741175515311105, 1.9715873173304967, 1.5152204377310616, 1.985873086111886, 1.9721629279000419, 1.9756296021597726, 1.9737926891871862, 1.9736533164978027], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.37966665625572205, 0.10000000149011612, 0.10233332961797714, 0.4126666784286499, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 1, 1, 8, 8, 2, 6, 3, 3, 8, 0, 6, 3, 1, 4, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3734285831451416, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 23, 17, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.add(beta, beta)), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.negative(grad))))))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad))), tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))))))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2487667284275106, 2.33724395892781, 2.265099322271542, 2.768075592718451, 2.309159116848286, 2.3040361818525974, 2.303344521996777, 2.303470537820276], "accuracy": [0.22533351182937622, 0.10685510188341141, 0.18782195448875427, 0.2234843522310257, 0.10249637067317963, 0.09430722147226334, 0.09787346422672272, 0.09747721254825592], "val_loss": [2.1945275579180037, 1.9721922193254744, 1.4972880908421107, 1.9873289380754744, 1.9743127822875977, 1.9736927577427454, 1.9736598559788294, 1.9737059048243932], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.36766666173934937, 0.10266666859388351, 0.10233332961797714, 0.10000000149011612, 0.10266666859388351, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 2, 8, 0, 2, 3, 5, 6, 8, 9, 6, 3, 1, 6, 2, 5, 3, 4, 6, 2, 8, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 0, 0, 2, 3, 2, 3, 1, 0, 1, 2, 3, 2, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [29, 98, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3708571493625641, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.249037040522259, 2.3377684555852323, 2.2835077470744904, 2.337512863562517, 2.3041710137785576, 2.3030611426681338, 2.3030335239966657, 2.303696460601692], "accuracy": [0.2254655957221985, 0.10553427785634995, 0.16761326789855957, 0.1418570876121521, 0.09998679161071777, 0.09919429570436478, 0.09549596905708313, 0.10355303436517715], "val_loss": [2.197258608681815, 1.9727719170706612, 1.6468509946550642, 1.9748175484793526, 1.9737592424665178, 1.9737140110560827, 1.9736858776637487, 1.9737300872802734], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.3630000054836273, 0.09733333438634872, 0.10233332961797714, 0.10000000149011612, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0], [2, 2, 1, 1, 8, 8, 2, 6, 3, 3, 8, 0, 9, 8, 1, 4, 5, 0, 0, 6, 6, 2, 1, 3, 6, 4, 2, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 3, 2, 2, 1, 0, 7, 6, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 2, 0, 0, 3, 2, 3, 0, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 3, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 2, 0, 5, 3], [68, 42, 20, 14, 56, 12, 93, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8, 4], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3602857291698456, "mapping_values": [1, 1, 1, 0, 1, 0, 95, 95, 56, 39, 11, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.pow(tf.math.square(grad), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))))))))), tf.math.square(grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(beta)), tf.math.add(beta, alpha))))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta)), grad)))), tf.math.multiply(grad, grad)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(beta)))))), tf.math.add(beta, alpha)))), tf.math.add(beta, beta)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2488262486763286, 2.337231609185516, 2.2567254985406997, 2.3667968466706704, 2.3035647199610834, 2.3035291920343113, 2.303134630951726, 2.3031656532680604], "accuracy": [0.22586184740066528, 0.10711926966905594, 0.1958790123462677, 0.12521463632583618, 0.10077928751707077, 0.09325055778026581, 0.09893012791872025, 0.09628847241401672], "val_loss": [2.194535868508475, 1.9723925590515137, 2.082909515925816, 1.9742392812456404, 1.9736721175057548, 1.973693915775844, 1.973639965057373, 1.9737193925040108], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.3486666679382324, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.10266666859388351, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 2, 1, 1, 0, 8, 1, 4, 3, 3, 0, 0, 6, 3, 1, 2, 5, 0, 0, 6, 6, 2, 4, 3, 6, 4, 8, 5, 8, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 4, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 0, 2, 3, 0, 0, 4, 1, 3, 3, 4, 4, 4, 3, 2, 4, 0, 3, 2, 3, 1, 2, 3, 5, 3, 0, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0, 4, 5], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.35857143998146057, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.negative(grad)))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(grad)), alpha))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.250442629051939, 2.3365358960563953, 2.2706715719590584, 2.334175986321595, 2.3033646837500785, 2.3020036813211697, 2.3466142518503665, 2.3148630715915477], "accuracy": [0.22520142793655396, 0.10738343745470047, 0.17382116615772247, 0.11742173880338669, 0.10553427785634995, 0.10157178342342377, 0.2374851405620575, 0.10672302544116974], "val_loss": [2.1909798894609724, 1.9727322033473425, 1.7859351294381278, 1.9741325378417969, 1.973569120679583, 1.9641033581324987, 2.0023671558925082, 1.9746931621006556], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.33133333921432495, 0.10266666859388351, 0.10266666859388351, 0.15533334016799927, 0.09733333438634872, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 0, 0, 0, 8, 8, 2, 8, 3, 3, 8, 0, 6, 3, 9, 4, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 3, 0, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [0, 1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.35428571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.248738396547222, 2.337187515006105, 2.2687476066440215, 2.4100097047024556, 2.3036581475138584, 2.3034254729613934, 2.3031673778112713, 2.3032002090037915], "accuracy": [0.22520142793655396, 0.1072513535618782, 0.19574692845344543, 0.12019548565149307, 0.09998679161071777, 0.09800554811954498, 0.09826971590518951, 0.09430722147226334], "val_loss": [2.193668842315674, 1.9725595201764787, 2.290696144104004, 1.9744817870003837, 1.9737027713230677, 1.9737161908830916, 1.9736427579607283, 1.9737016132899694], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.30000001192092896, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 0, 0, 8, 8, 2, 3, 0, 3, 8, 0, 6, 3, 1, 8, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 3, 2, 2, 2, 3, 3, 0, 4, 1, 3, 0, 3, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 13, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.23685714602470398, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 18, 9, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(beta)), tf.math.add(beta, grad))))))))))), grad)))))))), tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2532029960291213, 2.3351281504227326, 2.231384641254079, 2.3059794748810383, 2.2999325117273197, 2.284667002762691, 2.328798800285671, 2.335567905792329, 2.3090505662642733, 2.303926183657482], "accuracy": [0.22480517625808716, 0.10593052208423615, 0.19719983637332916, 0.09668471664190292, 0.11345925182104111, 0.1822744756937027, 0.10962884873151779, 0.15770703554153442, 0.09760929644107819, 0.09496764093637466], "val_loss": [2.183161667415074, 1.972259521484375, 1.9787845611572266, 1.9741649627685547, 1.9301995549883162, 2.0927683966500417, 1.9720166751316615, 1.9838925770350866, 1.9748142787388392, 1.973743302481515], "val_accuracy": [0.09799999743700027, 0.10233332961797714, 0.12099999934434891, 0.10266666859388351, 0.2070000022649765, 0.10233332961797714, 0.10266666859388351, 0.09799999743700027, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [5, 1, 2, 0, 3, 4, 2, 2, 4, 3, 8, 9, 6, 3, 1, 4, 2, 0, 0, 4, 6, 2, 1, 1, 6, 4, 8, 5, 2, 3, 1, 9, 8, 2, 6, 7, 2, 7, 6, 1, 1, 4, 7, 2, 2, 6, 2, 9, 2, 2, 1, 4, 0, 7, 7, 0, 6, 8, 2, 8, 6, 8, 6, 1, 5, 0, 3, 6, 2, 2, 3, 5, 4, 6, 4, 5], [3, 3, 0, 2, 3, 1, 2, 3, 2, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 3, 3, 2, 2, 3, 2, 3, 5, 3, 3, 4, 0, 1, 3, 0, 1, 0, 2, 3, 0, 2, 2, 3, 3, 1, 5, 3, 5, 4, 1, 4, 3, 0, 5, 3], [28, 75, 20, 34, 56, 37, 37, 43, 20, 16, 98, 20, 50, 80], [1, 0], [1], [8], [1], [52], [0, 1, 1], [9], [1, 1], [79]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 130, 130, 76, 54, 10, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 85, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, grad))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), beta)), tf.math.add(beta, grad))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.sqrt(grad))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta))))), beta), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad))))))), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))))), alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), beta)), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))))))))), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.negative(grad))), alpha))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, grad))))))), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027577452797536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 0, 0, 8, 8, 2, 2, 3, 3, 8, 0, 5, 3, 1, 4, 5, 0, 0, 3, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 2, 2, 3, 0, 1, 3, 1, 3, 0, 4, 0, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.square(beta)))))))))), tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha)))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 9, 0, 1, 3, 5, 4, 0, 9, 6, 6, 1, 4, 2, 0, 3, 4, 6, 2, 4, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 1, 3, 0, 2, 4, 2, 3, 2, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 1], [0, 0], [8, 7], [1], [52], [0, 0, 1, 1], [8, 6], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.divide_no_nan(alpha, alpha))", "other_info": {"loss": [2.3027577452797536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 0, 0, 0, 8, 8, 2, 3, 3, 3, 9, 0, 6, 3, 5, 4, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 2, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.negative(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 2, 0, 8, 0, 2, 3, 5, 6, 8, 9, 6, 2, 1, 4, 2, 0, 6, 4, 6, 2, 4, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 3, 0, 2, 4, 2, 3, 2, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [49, 57, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [6], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 28, 18, 3, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, grad), beta)))))))), tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))))))), tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, alpha)", "other_info": {"loss": [2.3027577452797536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0], [0, 0, 1, 1], [0, 1, 7, 6, 1, 7], [2, 1], [93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [5, 1, 2, 4, 8, 0, 2, 2, 5, 3, 8, 9, 6, 6, 1, 4, 2, 1, 1, 4, 6, 2, 1, 1, 2, 4, 8, 5, 2, 3, 1, 9, 8, 2, 6, 7, 2, 7, 6, 1, 1, 4, 7, 2, 2, 6, 2, 9, 2, 2, 1, 4, 0, 7, 7, 0, 6, 8, 2], [3, 3, 0, 2, 3, 1, 2, 3, 2, 4, 2, 3, 3, 4, 4, 4, 3, 2, 4, 3, 3, 2, 2, 3, 2, 3, 5, 3, 3, 4, 0, 1, 3, 0, 1, 0, 2, 3, 0, 2, 2], [68, 43, 20, 34, 56, 37, 37, 43, 20, 16, 98, 20, 50, 80], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [0], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 2, 1, 8, 8, 4, 2, 6, 3, 1, 3, 0, 6, 3, 1, 4, 5, 6, 3, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 46, 46, 25, 21, 5, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, beta), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.add(beta, beta)), tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(grad))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad))))))))), tf.math.add(beta, tf.math.subtract(tf.math.pow(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, beta)))))))))))), tf.math.multiply(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3027577452797536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 0, 0, 8, 8, 2, 3, 3, 3, 2, 0, 6, 3, 5, 4, 0, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 3, 0, 2, 3, 2, 2, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [96, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.07028571516275406, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, beta))), beta))))))))))), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.619696353704009, 4.216283274836875, 2.301064306703053, 2.292244390332231, 2.2970367827986715, 2.286459759541034], "accuracy": [0.17923656105995178, 0.16140536963939667, 0.10711926966905594, 0.13630960881710052, 0.11438383162021637, 0.16840575635433197], "val_loss": [1.9319896697998047, 1.9772660391671317, 1.945117677961077, 1.9734022276742118, 1.9259651047842843, 1.9758543287004744], "val_accuracy": [0.21899999678134918, 0.09799999743700027, 0.2006666660308838, 0.10100000351667404, 0.16099999845027924, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 0, 0, 8, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [3, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 2, 4, 3, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [2, 1], []], "fitness": -0.019428571686148643, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.042429667359346, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19931316375732422, 0.07489103078842163, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0643456322806224, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]