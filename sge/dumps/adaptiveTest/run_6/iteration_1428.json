[{"genotype": [[0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 1, 3, 1, 1, 5, 2, 2, 4, 8, 1, 1, 8, 2, 5, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 0, 2, 1, 2, 2, 2, 1, 0, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [50, 85, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8291428685188293, "mapping_values": [1, 29, 29, 16, 13, 2, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.subtract(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.pow(grad, grad), grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9989246734617376, 1.090758108514852, 0.8067783082496724, 0.7038026539845756, 0.6370165923079164, 0.5990905024277583, 0.5569141213652354, 0.5295753797771845, 0.49710393048800244, 0.47957387380769395, 0.4742559663741785, 0.4531164603297264, 0.4250789828477456, 0.4083592245261021, 0.3988488660850986, 0.39756357906406675, 0.382694970079779, 0.3663347948299754, 0.35252537962830127, 0.33957547655572917, 0.32924824651552625, 0.3160443195081453, 0.3123734759585323, 0.31072342177313456, 0.2946907323837406, 0.29168286258675846, 0.29028598964017505, 0.2841852843336315, 0.26359044195496883, 0.2565098978355655], "accuracy": [0.3187161684036255, 0.6136573553085327, 0.6892088055610657, 0.7384757399559021, 0.7580240368843079, 0.7753269076347351, 0.7924976944923401, 0.8038568496704102, 0.8175934553146362, 0.8226125836372375, 0.8230088353157043, 0.8330471515655518, 0.8396512866020203, 0.8471800088882446, 0.8537842035293579, 0.8524633646011353, 0.8589354157447815, 0.8677849769592285, 0.869502067565918, 0.8710870146751404, 0.8770307898521423, 0.8798044919967651, 0.8877294659614563, 0.8849557638168335, 0.8894465565681458, 0.8924844861030579, 0.889578640460968, 0.891559898853302, 0.9005415439605713, 0.9029190540313721], "val_loss": [0.8182614360536847, 0.6006183964865548, 0.5459328378949847, 0.48162543773651123, 0.45289041314806255, 0.42683260781424387, 0.4029799018587385, 0.3852171557290213, 0.38071313074656893, 0.3675217798777989, 0.3584755148206438, 0.3475688525608608, 0.34131511620112825, 0.3406699470111302, 0.33895541940416607, 0.33841068404061453, 0.3287084017481123, 0.31713434628077913, 0.31318986415863037, 0.3200092145374843, 0.30764955282211304, 0.3139757513999939, 0.3162509373256138, 0.3023517557552883, 0.30720153025218416, 0.32050893136433195, 0.30508923530578613, 0.3146423527172634, 0.3059832453727722, 0.3056008645466396], "val_accuracy": [0.6476666927337646, 0.7329999804496765, 0.7553333044052124, 0.7823333144187927, 0.8023333549499512, 0.815666675567627, 0.8320000171661377, 0.8373333215713501, 0.8403333425521851, 0.8420000076293945, 0.8536666631698608, 0.8523333072662354, 0.8556666374206543, 0.8600000143051147, 0.8519999980926514, 0.8553333282470703, 0.8606666922569275, 0.8666666746139526, 0.8673333525657654, 0.8613333106040955, 0.8690000176429749, 0.8659999966621399, 0.8600000143051147, 0.8690000176429749, 0.875, 0.8643333315849304, 0.8733333349227905, 0.8696666955947876, 0.8736666440963745, 0.8730000257492065]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 0, 2, 4, 8, 1, 1, 8, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8282856941223145, "mapping_values": [1, 30, 30, 17, 13, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(alpha), grad), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.negative(alpha), tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9989418840175293, 1.0906290473435392, 0.8069705081937052, 0.7025455827364092, 0.635911756487035, 0.5972685083233212, 0.5557282962000459, 0.5255294881476671, 0.4964786771581063, 0.476310886553864, 0.47374773775786455, 0.4473599324003108, 0.42315612528081964, 0.4093198783999783, 0.4040452950839369, 0.3938135115217933, 0.38541610178190405, 0.37002781729467665, 0.35243289245275566, 0.3451782117005211, 0.33284078457525235, 0.31787862664420985, 0.3100158845460363, 0.30921968828339097, 0.2954905586605767, 0.2891820301418024, 0.2873251870433967, 0.2808622052412558, 0.26393653393547534, 0.2610203268985864], "accuracy": [0.3187161684036255, 0.6136573553085327, 0.6892088055610657, 0.7375511527061462, 0.7606657147407532, 0.7758552432060242, 0.7948752045631409, 0.807158887386322, 0.8182538747787476, 0.8253863453865051, 0.8214238286018372, 0.8321225643157959, 0.8428213000297546, 0.8482366800308228, 0.852331280708313, 0.8507462739944458, 0.8558974862098694, 0.8687095642089844, 0.8702945709228516, 0.869502067565918, 0.8758420348167419, 0.8835028409957886, 0.8853520154953003, 0.8816536664962769, 0.8901069760322571, 0.8903711438179016, 0.893541157245636, 0.8923524022102356, 0.8968431949615479, 0.8982961177825928], "val_loss": [0.8182722159794399, 0.6012470041002546, 0.5458310842514038, 0.4809728520257132, 0.4525865316390991, 0.42502100127083914, 0.4043796147618975, 0.38522630078451975, 0.3787769504955837, 0.37172357525144306, 0.3552637440817697, 0.34410663161958965, 0.3435804077557155, 0.33966954265322, 0.3427422557558332, 0.3301837955202375, 0.3291472962924412, 0.31533454145704, 0.31449984652655466, 0.3226408873285566, 0.30894339084625244, 0.31263878515788485, 0.31211758511407034, 0.30529353448322843, 0.3077417867524283, 0.316813017640795, 0.3133137396403721, 0.3122510824884687, 0.301828852721623, 0.3128629411969866], "val_accuracy": [0.6486666798591614, 0.7336666584014893, 0.7523333430290222, 0.7816666960716248, 0.8066666722297668, 0.8186666369438171, 0.8296666741371155, 0.8366666436195374, 0.8389999866485596, 0.8410000205039978, 0.8533333539962769, 0.8513333201408386, 0.8579999804496765, 0.859666645526886, 0.8550000190734863, 0.8586666584014893, 0.8619999885559082, 0.8683333396911621, 0.8650000095367432, 0.8603333234786987, 0.8703333139419556, 0.8696666955947876, 0.8619999885559082, 0.8726666569709778, 0.8759999871253967, 0.8693333268165588, 0.8683333396911621, 0.874666690826416, 0.8736666440963745, 0.8709999918937683]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 9, 2, 2, 2, 4, 8, 5, 1, 4, 2, 9, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 2, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 6, 13, 86, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8268571496009827, "mapping_values": [1, 30, 30, 18, 12, 6, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.sqrt(grad), tf.math.square(grad)), tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.99894155331449, 1.090351888681872, 0.8062736366434718, 0.7041531874519125, 0.6365205271211614, 0.598406314377488, 0.5557912372642142, 0.5254928694976209, 0.4962438330863209, 0.48081754700477175, 0.4734643555477925, 0.4499014359124506, 0.4249965382321415, 0.4056502911967687, 0.40041921669308533, 0.39808437356135123, 0.3879765193216112, 0.37479422096295395, 0.3554861431329037, 0.3468972487913194, 0.33401902120158405, 0.31704031736182187, 0.31632503621912966, 0.31804699259915326, 0.29825735040596524, 0.29051109387527885, 0.28824221339948175, 0.28153594878796556, 0.2667751058438167, 0.2566302773907924, 0.2553664222723772, 0.24284353874906212, 0.23756124053444166], "accuracy": [0.3187161684036255, 0.6135252714157104, 0.6894729733467102, 0.7351737022399902, 0.7588165402412415, 0.7790252566337585, 0.7946110367774963, 0.8079513907432556, 0.8190463781356812, 0.8232730031013489, 0.8208954930305481, 0.8355567455291748, 0.8401796221733093, 0.8518029451370239, 0.8537842035293579, 0.8506141901016235, 0.8560295701026917, 0.8627657890319824, 0.8689737319946289, 0.8692378997802734, 0.8739928603172302, 0.8791441321372986, 0.8842953443527222, 0.8800686597824097, 0.8898428082466125, 0.885219931602478, 0.8912957310676575, 0.8945978283882141, 0.8957865834236145, 0.897899866104126, 0.9046360850334167, 0.9076740145683289, 0.9091269373893738], "val_loss": [0.818290250641959, 0.6006331784384591, 0.5466278280530658, 0.481035692351205, 0.4530014991760254, 0.4242588366780962, 0.4042555178914751, 0.3856057694980076, 0.38167141165052143, 0.36850832189832416, 0.35534009763172697, 0.3461599349975586, 0.3418509704726083, 0.34014272689819336, 0.3429534435272217, 0.3341237987790789, 0.32853381974356516, 0.31509238481521606, 0.3181239792278835, 0.3175141215324402, 0.30841163226536344, 0.3143048456736973, 0.3269190192222595, 0.31280382190431866, 0.30742813859667095, 0.31206664017268587, 0.3141054170472281, 0.30804620470319477, 0.3027524948120117, 0.31160387822559904, 0.305611789226532, 0.30415479625974384, 0.30760524954114643], "val_accuracy": [0.6486666798591614, 0.7326666712760925, 0.7540000081062317, 0.777999997138977, 0.8029999732971191, 0.8230000138282776, 0.8356666564941406, 0.8356666564941406, 0.8389999866485596, 0.8473333120346069, 0.8556666374206543, 0.8473333120346069, 0.8566666841506958, 0.8536666631698608, 0.8513333201408386, 0.8603333234786987, 0.8636666536331177, 0.8676666617393494, 0.8650000095367432, 0.8603333234786987, 0.8690000176429749, 0.8690000176429749, 0.8583333492279053, 0.8709999918937683, 0.8723333477973938, 0.871666669845581, 0.8723333477973938, 0.875, 0.8740000128746033, 0.871666669845581, 0.8740000128746033, 0.8713333606719971, 0.8743333220481873]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 0, 2, 4, 8, 1, 1, 2, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 0, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8240000009536743, "mapping_values": [1, 30, 30, 16, 14, 5, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(tf.math.pow(grad, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.subtract(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9989430128449477, 1.0904321851290733, 0.8064184747336169, 0.7037887178344686, 0.6373057376045703, 0.5978934459162898, 0.5553421456548343, 0.5258276887447638, 0.49466275475233334, 0.4778147533175779, 0.47366035163300213, 0.45179722954206275, 0.4251833768482017, 0.4091598944082362, 0.39890727376374174, 0.3978387352663213, 0.3884837177758361, 0.37319109527158734, 0.3583286709442839, 0.3413971153114608, 0.3345701355881238, 0.3192374342901202, 0.31019253999864765, 0.31028458418201826, 0.29447697228397185, 0.2876867515937511, 0.2879390152390953, 0.2826643485269369, 0.26207096543074, 0.2617171375766611, 0.2577617821058404, 0.25074162452787124, 0.24790062543864358], "accuracy": [0.3187161684036255, 0.613789439201355, 0.6897371411323547, 0.7374191284179688, 0.7598732113838196, 0.7759873270988464, 0.7948752045631409, 0.8063663840293884, 0.8190463781356812, 0.8234050869941711, 0.8220842480659485, 0.833179235458374, 0.8413683772087097, 0.8495575189590454, 0.8545766472816467, 0.8511425256729126, 0.8556333184242249, 0.8634262084960938, 0.8676528930664062, 0.8739928603172302, 0.8755778670310974, 0.8796724081039429, 0.8842953443527222, 0.8854840993881226, 0.8877294659614563, 0.8894465565681458, 0.8919561505317688, 0.8932769894599915, 0.9013340473175049, 0.8989565372467041, 0.9030511379241943, 0.9030511379241943, 0.9029190540313721], "val_loss": [0.8182774271283831, 0.600719520023891, 0.5461597783224923, 0.4822580473763602, 0.4545764071600778, 0.4235188790730068, 0.40396227155412945, 0.3846226930618286, 0.3783648780414036, 0.3719151360648019, 0.35819194998059956, 0.3493039608001709, 0.3443242737225124, 0.3393357736723764, 0.34618788957595825, 0.33648606709071566, 0.3340275457927159, 0.319444511617933, 0.31809530939374653, 0.325934180191585, 0.30919461590903147, 0.31730228662490845, 0.3151619945253645, 0.30685711758477346, 0.3093494772911072, 0.3195723720959255, 0.3155685748372759, 0.31469998189381193, 0.3067883849143982, 0.31447918925966534, 0.30869936091559275, 0.31080256189618793, 0.30907795258930754], "val_accuracy": [0.6486666798591614, 0.7319999933242798, 0.7513333559036255, 0.7793333530426025, 0.7953333258628845, 0.8196666836738586, 0.8316666483879089, 0.8336666822433472, 0.8389999866485596, 0.8456666469573975, 0.8533333539962769, 0.8523333072662354, 0.8576666712760925, 0.8616666793823242, 0.8500000238418579, 0.8550000190734863, 0.8576666712760925, 0.8650000095367432, 0.8676666617393494, 0.8560000061988831, 0.8676666617393494, 0.8650000095367432, 0.8636666536331177, 0.8700000047683716, 0.8726666569709778, 0.8703333139419556, 0.8693333268165588, 0.8803333044052124, 0.874666690826416, 0.8730000257492065, 0.875, 0.8763333559036255, 0.8669999837875366]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 2, 1, 1, 2, 0, 2, 4, 8, 1, 1, 8, 2, 0, 1, 9, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 6, 13, 86, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8237142562866211, "mapping_values": [1, 33, 33, 19, 14, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(alpha), grad)), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(grad))))), tf.math.add(tf.math.negative(tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.998941533900271, 1.0903504336546315, 0.8068076647220743, 0.7024738508885673, 0.6342542404275702, 0.5980426515523296, 0.5545594822996722, 0.5244188004827393, 0.49759002465456076, 0.47706195468427703, 0.4742564012849682, 0.45068764237443676, 0.4248331032960076, 0.4056416541680432, 0.40358698070482285, 0.39609248738373276, 0.38229616558893464, 0.3697010904743435, 0.3548153809678553, 0.34471724898493, 0.3290227441590271, 0.319785820719053, 0.3106428507674624, 0.3138892306800941, 0.3009951416141778, 0.29131824814207313, 0.28844112813228695, 0.2783924588485086, 0.26290366010281074, 0.2603730976231236, 0.2593160601178527, 0.2551927565937864, 0.25001603281493234, 0.23816263302521007], "accuracy": [0.3187161684036255, 0.6133931875228882, 0.6892088055610657, 0.7349095344543457, 0.7606657147407532, 0.7763835787773132, 0.7964601516723633, 0.8059701323509216, 0.8175934553146362, 0.8259146809577942, 0.8231409192085266, 0.8338396549224854, 0.8422929644584656, 0.8508783578872681, 0.8533879518508911, 0.8561616539955139, 0.859199583530426, 0.867520809173584, 0.8714832663536072, 0.8692378997802734, 0.8759741187095642, 0.8780874609947205, 0.8864086866378784, 0.8829745054244995, 0.8889182209968567, 0.8910315632820129, 0.8930128216743469, 0.8956544995307922, 0.8969752788543701, 0.8990886211395264, 0.9025228023529053, 0.9017302989959717, 0.9033153057098389, 0.9108440279960632], "val_loss": [0.8182663406644549, 0.6013881478990827, 0.5457634925842285, 0.48100970472608295, 0.4535215752465384, 0.42326855659484863, 0.40392838205610004, 0.3866869296346392, 0.38174725430352346, 0.3725275823048183, 0.35554836477552143, 0.34747741903577534, 0.34185939175742014, 0.34331062010356356, 0.34091341495513916, 0.34186149494988577, 0.33279837880815777, 0.31738048791885376, 0.31591380493981497, 0.3274201239858355, 0.31211223772593905, 0.30934480258396696, 0.31766192402158466, 0.3085992506572178, 0.3040583218847002, 0.31789337737219675, 0.31014983143125263, 0.31227781091417584, 0.3048924037388393, 0.31341803073883057, 0.3071696162223816, 0.305391720363072, 0.3062183175768171, 0.3100435137748718], "val_accuracy": [0.6486666798591614, 0.731333315372467, 0.7546666860580444, 0.7789999842643738, 0.8043333292007446, 0.8206666707992554, 0.8330000042915344, 0.8333333134651184, 0.8396666646003723, 0.843999981880188, 0.8569999933242798, 0.8489999771118164, 0.8546666502952576, 0.8576666712760925, 0.8526666760444641, 0.8543333411216736, 0.859666645526886, 0.8666666746139526, 0.8633333444595337, 0.8586666584014893, 0.8679999709129333, 0.8683333396911621, 0.859666645526886, 0.8723333477973938, 0.874666690826416, 0.8659999966621399, 0.8703333139419556, 0.871999979019165, 0.8759999871253967, 0.871999979019165, 0.8696666955947876, 0.8740000128746033, 0.8693333268165588, 0.8740000128746033]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 0, 2, 8, 8, 1, 1, 4, 8, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 3, 1, 2, 2, 2, 1, 0, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [2, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8151428699493408, "mapping_values": [1, 16, 16, 8, 8, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), grad), tf.math.subtract(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(grad, tf.math.add(alpha, grad)))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9989462593810716, 1.0900428622957108, 0.8046652975414313, 0.7054835988892352, 0.6362527377569853, 0.597227653563062, 0.5557195361043799, 0.5247752682848724, 0.49365654642461326, 0.4758271586074648, 0.47433025357729847, 0.45628987858717734, 0.4293427998678575, 0.4112325571767721, 0.40878751181561035, 0.4036734524719184], "accuracy": [0.3187161684036255, 0.6127327680587769, 0.6901333928108215, 0.7349095344543457, 0.7609298825263977, 0.7757231593132019, 0.7960638999938965, 0.805177628993988, 0.8157442808151245, 0.8272355198860168, 0.8210275769233704, 0.8317263126373291, 0.8391229510307312, 0.848368763923645, 0.8486329317092896, 0.8499537706375122], "val_loss": [0.8181850910186768, 0.5985316208430699, 0.5483745847429548, 0.48164050919669016, 0.45333763531276156, 0.42561512334006174, 0.4016928161893572, 0.38535038913999287, 0.37647182600838797, 0.3689549905913217, 0.35761886835098267, 0.3502657413482666, 0.3442374723298209, 0.34701398440769743, 0.3433229923248291, 0.3393258196966989], "val_accuracy": [0.6480000019073486, 0.7336666584014893, 0.7523333430290222, 0.7823333144187927, 0.8016666769981384, 0.8130000233650208, 0.8326666951179504, 0.8330000042915344, 0.8446666598320007, 0.8426666855812073, 0.8560000061988831, 0.8476666808128357, 0.8539999723434448, 0.8553333282470703, 0.8519999980926514, 0.8560000061988831]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 2, 2, 0, 2, 4, 2, 2, 1, 2, 2, 3, 1, 5, 9, 3, 6, 8, 6, 1, 2, 0, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 1, 1, 2, 2, 2, 0, 0, 1, 2, 0, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 83, 53, 76, 42, 20, 27, 65, 70, 14, 89, 22], [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7891428470611572, "mapping_values": [1, 45, 45, 26, 19, 7, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.add(alpha, grad)), grad), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad)))))))))))))), grad)), tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.1867301032338804, 1.572310640528186, 1.2234235934735038, 0.9957891816964413, 0.9063514715896827, 0.82472118481417, 0.8112709994612747, 0.8100816490722291, 0.7354430340819937, 0.7312055100791285, 0.7192925340180478, 0.6797005159822453, 0.6603418238694247, 0.6768191515840418, 0.647327268238569, 0.6305062271553245, 0.6386468067397184, 0.6246301827413719, 0.6296764741704732, 0.6092590826881277, 0.5994625553053762, 0.5867744340258598, 0.5814398105874148, 0.563158482529657, 0.5897103787066835, 0.5787059926023069, 0.5679982155777948, 0.57184461309075], "accuracy": [0.2786950170993805, 0.486989825963974, 0.5626733303070068, 0.6449610590934753, 0.6676793098449707, 0.6934354901313782, 0.7012283802032471, 0.69673752784729, 0.7257958054542542, 0.7236824631690979, 0.7296261787414551, 0.7493065595626831, 0.7506273984909058, 0.7483819723129272, 0.7578919529914856, 0.7593448758125305, 0.7553823590278625, 0.7644960880279541, 0.7561748623847961, 0.769911527633667, 0.7771760821342468, 0.7761194109916687, 0.7852331399917603, 0.7924976944923401, 0.7761194109916687, 0.778761088848114, 0.7877426743507385, 0.7819310426712036], "val_loss": [1.575552191053118, 1.0852158069610596, 0.8302654709134784, 0.7071388448987689, 0.6232655218669346, 0.6172432218279157, 0.5943068776811872, 0.5629793235233852, 0.5661850486482892, 0.5454887322017125, 0.5369424309049334, 0.5164986167635236, 0.5051041160311017, 0.49638353075299946, 0.48109936714172363, 0.4859321968896048, 0.4900623730250767, 0.47384064538138254, 0.4790635619844709, 0.4682036467960903, 0.4601320879799979, 0.46106864724840435, 0.4491985184805734, 0.4604371615818569, 0.45180765220097135, 0.4766690901347569, 0.4471801689692906, 0.4755498000553676], "val_accuracy": [0.5293333530426025, 0.5046666860580444, 0.6536666750907898, 0.7080000042915344, 0.7360000014305115, 0.7393333315849304, 0.7326666712760925, 0.7393333315849304, 0.7366666793823242, 0.7590000033378601, 0.7566666603088379, 0.762333333492279, 0.765999972820282, 0.7853333353996277, 0.7886666655540466, 0.784333348274231, 0.7919999957084656, 0.7990000247955322, 0.7866666913032532, 0.7919999957084656, 0.7929999828338623, 0.7986666560173035, 0.8063333630561829, 0.7986666560173035, 0.800000011920929, 0.7933333516120911, 0.8029999732971191, 0.7846666574478149]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 1, 2, 4, 8, 1, 1, 8, 2, 1, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 1, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 0, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [13, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7162857055664062, "mapping_values": [1, 49, 49, 27, 22, 4, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.pow(tf.math.sqrt(alpha), grad), grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))))))))), grad))))), tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2996579647190174, 2.2903096138950763, 2.2707652959053966, 2.2387100827062545, 2.1985577633509688, 2.14563628840267, 2.0560269450719377, 1.9285752645746246, 1.7578360220035305, 1.582538180945808, 1.448174359445417, 1.3867875014187843, 1.3416469202317487, 1.37589376523211, 1.2680888377034574, 1.1417294058738652, 1.031695431076446, 0.9330671963958126, 0.8974082713602021, 0.8935476999398724, 0.9010586236934337, 0.9012607996568641, 0.8702079546119338, 0.8327448607955422, 0.8055453909433844, 0.8111854328250746, 0.7947210901448944, 0.8010655067080693, 0.8131326115551784, 0.794741168698898, 0.7837129483023308, 0.7565101487619876, 0.7456224300779167, 0.7298696538980343, 0.6984570415941731, 0.7127475376536014, 0.7089764109188146, 0.7104782578794318, 0.7102184722751375, 0.7049804832075314, 0.704644339959446, 0.6978610761019816, 0.6768899626814379, 0.6652690150230443, 0.6648614985390803, 0.6543353729559178, 0.6486809060888803, 0.6473338321420132, 0.6383530570531424, 0.6478250107634825, 0.646735149155109, 0.6325268557106011, 0.6197294270861591, 0.6151736346155251, 0.6073897317919859, 0.5885982139786677, 0.5922783858362616, 0.584176257719154, 0.5931435358239329, 0.5957481274357908, 0.5806014048598147, 0.5769391785035154, 0.5775805479342423, 0.5574314942874488, 0.5609110559391828, 0.5635849669498931, 0.5554531142066388, 0.5492748039399533, 0.546474820154218, 0.5363989010100918, 0.5326088604563657, 0.5256641213022534, 0.5290673119343818, 0.5283395520227775], "accuracy": [0.09549596905708313, 0.1200634017586708, 0.17012283205986023, 0.258090078830719, 0.31845200061798096, 0.3479065001010895, 0.3903051018714905, 0.4143442213535309, 0.4423457980155945, 0.4721965491771698, 0.49848103523254395, 0.5218597054481506, 0.54220050573349, 0.5474838018417358, 0.5838066339492798, 0.6186765432357788, 0.6490556001663208, 0.6561880707740784, 0.6590939164161682, 0.6608110070228577, 0.6684718132019043, 0.6783780455589294, 0.6890767216682434, 0.6915863156318665, 0.696209192276001, 0.6934354901313782, 0.6997754573822021, 0.6975300312042236, 0.6976621150970459, 0.702681303024292, 0.7112666964530945, 0.7136441469192505, 0.7172104120254517, 0.7154933214187622, 0.7244749665260315, 0.7193237543106079, 0.7223616242408752, 0.7252674698829651, 0.7275128960609436, 0.7310791015625, 0.7351737022399902, 0.7298903465270996, 0.7387399077415466, 0.7449478507041931, 0.7442874312400818, 0.7475894689559937, 0.7506273984909058, 0.7515519857406616, 0.7598732113838196, 0.7508915662765503, 0.7524765729904175, 0.7577598690986633, 0.7609298825263977, 0.7589486241340637, 0.7651565074920654, 0.770439863204956, 0.7737419009208679, 0.7733456492424011, 0.772288978099823, 0.7711002230644226, 0.776251494884491, 0.7804781198501587, 0.7828556299209595, 0.7812706232070923, 0.7829877138137817, 0.7812706232070923, 0.7835160493850708, 0.7910447716712952, 0.7897239327430725, 0.7971205711364746, 0.7996301651000977, 0.8004226684570312, 0.800818920135498, 0.7992339134216309], "val_loss": [1.9649310793195451, 1.9501030785696847, 1.9269626481192452, 1.8955014092581612, 1.851762158530099, 1.7856364250183105, 1.6844777039119176, 1.5358871391841344, 1.344336918422154, 1.1492444787706648, 0.9895856721060616, 0.868320141519819, 0.79611189024789, 0.7549263749803815, 0.7159185239246914, 0.7091875076293945, 0.6539633784975324, 0.6328786952154977, 0.6496697834559849, 0.6677812678473336, 0.6807315008980888, 0.6643085650035313, 0.6272498880113874, 0.5998897552490234, 0.5887606314250401, 0.5807269300733294, 0.573456883430481, 0.5757761001586914, 0.5781891005379813, 0.5714967932019915, 0.5644641944340297, 0.5585577487945557, 0.5479598556246076, 0.5374870470591954, 0.5390865632465908, 0.5446645702634539, 0.5443687438964844, 0.5396782841001239, 0.5363423654011318, 0.5321305649621146, 0.5241637911115374, 0.51279764516013, 0.5008679968970162, 0.4912200484957014, 0.48599263599940706, 0.4846878392355783, 0.4827331304550171, 0.4776507956641061, 0.47147483485085623, 0.46675968170166016, 0.4631123031888689, 0.4590627636228289, 0.45393662793295725, 0.4486980778830392, 0.44465045418058124, 0.4423722539629255, 0.44196135657174246, 0.4429710251944406, 0.44341358968189787, 0.44220125675201416, 0.4384440949984959, 0.43265638181141447, 0.42712280579975676, 0.4238600901194981, 0.42341671671186176, 0.4238869973591396, 0.42311214549200876, 0.4205700584820339, 0.41768206868852886, 0.4157895701272147, 0.41491024834769114, 0.41459472690309795, 0.4146054472242083, 0.4140362228666033], "val_accuracy": [0.08566666394472122, 0.22866666316986084, 0.35633334517478943, 0.4073333442211151, 0.437666654586792, 0.4650000035762787, 0.49799999594688416, 0.5239999890327454, 0.5699999928474426, 0.6060000061988831, 0.6516666412353516, 0.6639999747276306, 0.6666666865348816, 0.6773333549499512, 0.6943333148956299, 0.7096666693687439, 0.7183333039283752, 0.7329999804496765, 0.7136666774749756, 0.7213333249092102, 0.737333357334137, 0.7316666841506958, 0.737666666507721, 0.7416666746139526, 0.7419999837875366, 0.7433333396911621, 0.7440000176429749, 0.7383333444595337, 0.7363333106040955, 0.7459999918937683, 0.75, 0.7486666440963745, 0.7506666779518127, 0.7580000162124634, 0.7596666812896729, 0.7556666731834412, 0.7603333592414856, 0.7680000066757202, 0.7666666507720947, 0.7620000243186951, 0.7630000114440918, 0.7649999856948853, 0.7689999938011169, 0.7776666879653931, 0.777999997138977, 0.7806666493415833, 0.7829999923706055, 0.7850000262260437, 0.7883333563804626, 0.7889999747276306, 0.7893333435058594, 0.7893333435058594, 0.7896666526794434, 0.7929999828338623, 0.7950000166893005, 0.7979999780654907, 0.7986666560173035, 0.7990000247955322, 0.7963333129882812, 0.7993333339691162, 0.8023333549499512, 0.8053333163261414, 0.8086666464805603, 0.8100000023841858, 0.8153333067893982, 0.8190000057220459, 0.8193333148956299, 0.8216666579246521, 0.8233333230018616, 0.8193333148956299, 0.8196666836738586, 0.8196666836738586, 0.8233333230018616, 0.8226666450500488]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [6, 1, 3, 1, 1, 3, 2, 2, 4, 8, 2, 1, 8, 0, 5, 3, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 0, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [54, 85, 62, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [21, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7162857055664062, "mapping_values": [1, 39, 39, 22, 17, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(grad, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.2934031578779943, 2.244768228828159, 2.133816875817517, 1.870969091124932, 1.5027334790707831, 1.3604178875822512, 1.2820151407862572, 1.0230929092362004, 0.8931515262017019, 0.9023506439530444, 0.8393020211130857, 0.7969755355582151, 0.7913733471764108, 0.7830455624400633, 0.751672069874611, 0.7169985549875995, 0.7026517893486743, 0.7044046063543452, 0.6964517470757723, 0.6746109919289178, 0.6674789461193934, 0.650916316403437, 0.6543540661802003, 0.6227985210170552, 0.6084921110292011, 0.5876427722282697, 0.5826241173732865, 0.5759282886564708, 0.5682209635675229, 0.5558525280961271, 0.5464029287728241, 0.5358179815693176, 0.5210100300103256, 0.5199732025852765, 0.5100454111235284, 0.4912234250509728, 0.4934840282476211, 0.4904455726865638, 0.47018725028316405, 0.47155947676030574, 0.46618593234301653, 0.4602257183254387, 0.4544869901135361, 0.4488236205633904, 0.4369864654287513, 0.4262698777024898, 0.421342219721923, 0.4163039059702589, 0.4233768072701118, 0.4070551331135197, 0.4060589053713965, 0.40276133947998477, 0.38633714232304944, 0.3905692253925576, 0.38724558202818227], "accuracy": [0.1138555034995079, 0.23761722445487976, 0.3603222966194153, 0.4247787594795227, 0.4892352521419525, 0.5411438345909119, 0.5835424661636353, 0.6490556001663208, 0.667811393737793, 0.6711134314537048, 0.6985867023468018, 0.7054550051689148, 0.6915863156318665, 0.7000396251678467, 0.7164179086685181, 0.719852089881897, 0.7213049530982971, 0.7298903465270996, 0.728701651096344, 0.7420420050621033, 0.744419515132904, 0.7456082701683044, 0.7518161535263062, 0.7609298825263977, 0.7664773464202881, 0.774270236492157, 0.7833839654922485, 0.7839123010635376, 0.7887993454933167, 0.7901201844215393, 0.7895918488502502, 0.7980451583862305, 0.804649293422699, 0.8035926818847656, 0.8067626357078552, 0.811649739742279, 0.8136309385299683, 0.8083476424217224, 0.8189142942428589, 0.8168009519577026, 0.8226125836372375, 0.8271034359931946, 0.8329150676727295, 0.8363492488861084, 0.8337075710296631, 0.8363492488861084, 0.8421608805656433, 0.8425571322441101, 0.8399154543876648, 0.8457271456718445, 0.8471800088882446, 0.8473120927810669, 0.8556333184242249, 0.8520671129226685, 0.8506141901016235], "val_loss": [1.94352354322161, 1.873817035130092, 1.7120417526790075, 1.3446058205195837, 0.9554987294333321, 0.7790431976318359, 0.7046073164258685, 0.6297040155955723, 0.6814383608954293, 0.650003331048148, 0.5912912743432182, 0.5720807484218052, 0.5801647220339093, 0.5584063529968262, 0.539307679448809, 0.5426874160766602, 0.535155006817409, 0.5306643928800311, 0.5088294574192592, 0.4984305075236729, 0.4905429056712559, 0.4833882025309971, 0.4768879583903721, 0.46171908719199045, 0.45464793273380827, 0.44549299137932913, 0.44458225795200895, 0.43556476490838186, 0.43029134614127024, 0.42168186392102924, 0.4157855936459133, 0.4141923189163208, 0.41334475789751324, 0.41379031964710783, 0.40366733925683157, 0.40802970954350065, 0.4034285375050136, 0.39647685629980906, 0.39361063071659635, 0.3915632792881557, 0.39272054604121615, 0.3919022934777396, 0.3870875324521746, 0.3806413412094116, 0.3783102546419416, 0.37381674562181744, 0.3688432148524693, 0.36836143902369906, 0.3688785263470241, 0.3682737350463867, 0.37077802419662476, 0.3712880611419678, 0.3669991833823068, 0.36259586470467703, 0.3590645023754665], "val_accuracy": [0.2809999883174896, 0.42266666889190674, 0.47733333706855774, 0.5606666803359985, 0.6506666541099548, 0.6753333210945129, 0.7049999833106995, 0.7336666584014893, 0.7179999947547913, 0.7260000109672546, 0.7403333187103271, 0.7436666488647461, 0.734666645526886, 0.7426666617393494, 0.7536666393280029, 0.7506666779518127, 0.7680000066757202, 0.762666642665863, 0.7733333110809326, 0.7786666750907898, 0.7786666750907898, 0.7853333353996277, 0.7816666960716248, 0.7866666913032532, 0.7916666865348816, 0.7963333129882812, 0.8013333082199097, 0.8136666417121887, 0.8190000057220459, 0.8196666836738586, 0.8213333487510681, 0.8190000057220459, 0.8246666789054871, 0.8236666917800903, 0.8236666917800903, 0.8243333101272583, 0.8276666402816772, 0.8349999785423279, 0.8336666822433472, 0.8333333134651184, 0.8316666483879089, 0.8330000042915344, 0.8393333554267883, 0.8429999947547913, 0.8429999947547913, 0.8426666855812073, 0.847000002861023, 0.8460000157356262, 0.8506666421890259, 0.8519999980926514, 0.8476666808128357, 0.8473333120346069, 0.847000002861023, 0.8510000109672546, 0.8510000109672546]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 3, 1, 1, 2, 0, 2, 4, 8, 1, 1, 8, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 0, 0, 1, 2, 2, 2, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [50, 85, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [9, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.693142831325531, "mapping_values": [1, 4, 4, 2, 2, 1, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3005355751320766, 2.2968677171642407, 2.2882600032170024, 2.2723239734739344, 2.255601113262335, 2.2369258288520912, 2.207416721354575, 2.1724299981121407, 2.126946011806413, 2.068074914143464, 1.9897196883333987, 1.8926300791670003, 1.7736085054345685, 1.6587336814446048, 1.5391706623783548, 1.443770193326207, 1.3910329214349761, 1.3668100880657, 1.3665829140040002, 1.3644871482003902, 1.3821836197302246, 1.292229666292329, 1.2284036040258854, 1.1231281671069318, 1.056330978933374, 0.9714434478009272, 0.9136891328836586, 0.9044061166861306, 0.9007668382991433, 0.8937541377810502, 0.8998101091010144, 0.9024493809798768], "accuracy": [0.09311848133802414, 0.10460969805717468, 0.12402588874101639, 0.1706511676311493, 0.21965394914150238, 0.260071337223053, 0.3086778521537781, 0.33958524465560913, 0.3675868511199951, 0.39043718576431274, 0.4065513014793396, 0.4209483563899994, 0.4391758143901825, 0.4497424364089966, 0.4772156774997711, 0.49372607469558716, 0.5144630670547485, 0.5288601517677307, 0.5352001190185547, 0.5536917448043823, 0.5542200207710266, 0.5783912539482117, 0.6082419753074646, 0.6256769299507141, 0.6450931429862976, 0.6586976647377014, 0.6618676781654358, 0.6583014130592346, 0.6579051613807678, 0.6659622192382812, 0.6645092964172363, 0.6820763349533081], "val_loss": [1.9679955754961287, 1.9612092290605818, 1.95035001209804, 1.9357193538120814, 1.9174543108258928, 1.8953051567077637, 1.8678906985691615, 1.8321315901620048, 1.7842557770865304, 1.7202239377158028, 1.635734932763236, 1.528371810913086, 1.4012576852525984, 1.265775510243007, 1.1382112503051758, 1.0290139402662004, 0.9391494137900216, 0.864210844039917, 0.8109987122671944, 0.7901553085872105, 0.7569760765348162, 0.7242904560906547, 0.7263306719916207, 0.7149978876113892, 0.6724765981946673, 0.6346513714109149, 0.6314684663500104, 0.6431519985198975, 0.6558041572570801, 0.6693127836499896, 0.6817843403135028, 0.6834815570286342], "val_accuracy": [0.06400000303983688, 0.11800000071525574, 0.2280000001192093, 0.3343333303928375, 0.3779999911785126, 0.4090000092983246, 0.43566668033599854, 0.45366665720939636, 0.47200000286102295, 0.4873333275318146, 0.5080000162124634, 0.5253333449363708, 0.5529999732971191, 0.581333339214325, 0.6066666841506958, 0.6413333415985107, 0.656333327293396, 0.6623333096504211, 0.6693333387374878, 0.6620000004768372, 0.6793333292007446, 0.6940000057220459, 0.7026666402816772, 0.7110000252723694, 0.7146666646003723, 0.7283333539962769, 0.737333357334137, 0.7120000123977661, 0.7070000171661377, 0.721666693687439, 0.7329999804496765, 0.7250000238418579]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 3, 1, 1, 2, 0, 2, 4, 8, 1, 1, 8, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [4, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 6, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.6759999990463257, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9649879486805506, 1.3831947143634298, 1.2302868326247849, 1.3353559199797873, 1.9145446058592508, 21.056281637096795, NaN, NaN], "accuracy": [0.3361510932445526, 0.585391640663147, 0.5749570727348328, 0.5860520601272583, 0.5189539194107056, 0.43045833706855774, 0.09747721254825592, 0.10011887550354004], "val_loss": [1.0956364018576485, 0.8379083531243461, 0.7037983962467739, 0.7972525869097028, 1.6646757125854492, 9.281755719866071, NaN, NaN], "val_accuracy": [0.5643333196640015, 0.6430000066757202, 0.7153333425521851, 0.6943333148956299, 0.5763333439826965, 0.1469999998807907, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 4, 1, 3, 2, 0, 2, 4, 9, 1, 1, 9, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 1, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 6, 13, 86, 90, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.6740000247955322, "mapping_values": [1, 20, 20, 11, 9, 5, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), alpha), grad))), alpha), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.9663210512388494, 1.1573899314624285, 0.8948714873888678, 0.7762049844456764, 0.6745169264308812, 0.6270079457323706, 0.6044020242127981, 0.5680932306326958, 0.5428601721290112, 0.5401289650099924, 0.5572146595965098, 0.5354429845403073, 0.5278674167113581, 0.5187888031921618], "accuracy": [0.3350944519042969, 0.616299033164978, 0.667811393737793, 0.6997754573822021, 0.7441553473472595, 0.7672698497772217, 0.7643640041351318, 0.7837802171707153, 0.7910447716712952, 0.7915731072425842, 0.7861577272415161, 0.7964601516723633, 0.7992339134216309, 0.7955356240272522], "val_loss": [0.9375850473131452, 0.6397352729524884, 0.60807318346841, 0.4990584339414324, 0.48063543864658903, 0.4535607951028006, 0.43723881244659424, 0.44164006199155537, 0.41008108854293823, 0.43114960193634033, 0.42423854555402485, 0.41405644587108065, 0.4227099503789629, 0.43329105206898283], "val_accuracy": [0.5899999737739563, 0.7086666822433472, 0.7450000047683716, 0.7796666622161865, 0.7829999923706055, 0.8073333501815796, 0.8009999990463257, 0.7960000038146973, 0.82833331823349, 0.8136666417121887, 0.8180000185966492, 0.8146666884422302, 0.8230000138282776, 0.8196666836738586]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 3, 1, 1, 2, 0, 2, 3, 8, 1, 1, 8, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 1, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.12485714256763458, "mapping_values": [1, 6, 6, 3, 3, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.300118338335869, 2.2980425073454613, 2.2994916337970195, 2.3010226501812, 2.302004035721208, 2.302565692957791, 2.3029242325547097], "accuracy": [0.09549596905708313, 0.1088363528251648, 0.10051512718200684, 0.10196803510189056, 0.10460969805717468, 0.09708096832036972, 0.0936468094587326], "val_loss": [1.967869690486363, 1.9691198212759835, 1.971770967755999, 1.9728780473981584, 1.973404884338379, 1.9737344469342912, 1.973867688860212], "val_accuracy": [0.09233333170413971, 0.12099999934434891, 0.09433333575725555, 0.10433333367109299, 0.10000000149011612, 0.10199999809265137, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 7, 8, 1, 1, 5, 0, 2, 4, 2, 1, 1, 8, 2, 0, 0, 3, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 1, 3, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [13, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), alpha), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 3, 1, 1, 2, 0, 2, 4, 8, 1, 1, 8, 2, 0, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 6, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 0, 2, 4, 8, 1, 6, 8, 2, 6, 1, 9, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 2, 1, 2, 0, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 16, 14, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(tf.math.sqrt(alpha), grad), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.sqrt(tf.math.add(grad, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [31940.1618562947, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.044247787445783615, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [9810239107142218.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [2, 7, 8, 1, 1, 5, 0, 2, 4, 2, 1, 1, 8, 2, 0, 0, 3, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 3, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 1, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [13, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 6, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3047543537221515, 27.124526677996396, 2.8584790353455016e+16, 125.28731336229592, 321.26721667852917, 609.5724253031588, 989.737550488836], "accuracy": [0.0882314071059227, 0.0878351628780365, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.981719970703125, 1.8520937626157523e+17, 58.30361720493862, 193.83041381835938, 408.150146484375, 701.1580810546875, 1073.0684988839287], "val_accuracy": [0.05066666752099991, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 8, 1, 1, 5, 0, 2, 4, 2, 1, 1, 8, 2, 0, 0, 3, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 2, 0, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [2, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 3, 1, 1, 2, 0, 2, 4, 1, 1, 1, 8, 2, 2, 1, 5, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 0, 0, 1, 2, 2, 2, 1, 0, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 20, 44, 70, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 3, 5, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [39, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 9, 6, 6, 4, 1, 4, 8], [1, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 47, 47, 26, 21, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), grad))), grad), tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.multiply(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))))))), grad))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], [1, 6, 8, 1, 1, 5, 0, 2, 4, 2, 1, 1, 8, 2, 0, 0, 3, 2, 3, 6, 8, 6, 1, 2, 1, 9, 4, 0, 6, 3, 2, 1, 3, 5, 3, 2, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 1, 3, 1, 2, 2, 2, 1, 0, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 0, 3, 1, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [74, 57, 44, 53, 84, 93, 20, 27, 65, 70, 14, 89, 22], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 0, 4, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [13, 81, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0], [1, 4, 6, 6, 6, 6, 4, 1, 4, 8], [3, 4, 3, 3], [12, 97], [1, 0, 1, 1], [0, 5], [3, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 3, 3, 1, 2, 1, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3012463680552515, 2.3022594856564016, 2.302974768192572, 2.300877322767704, 2.302416667111908, 2.3047012270654212], "accuracy": [0.09113723784685135, 0.09192973375320435, 0.09034473448991776, 0.09457138925790787, 0.09285431355237961, 0.0886276587843895], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]