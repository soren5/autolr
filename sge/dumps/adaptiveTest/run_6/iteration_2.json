[{"genotype": [[0], [1], [1], [], [2], [], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [45, 82, 0, 8, 21, 72, 6], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1], [8], [4], [6], [0, 1], [5], [1], []], "fitness": -0.13028571009635925, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301257357888958, 2.3016232293531673, 2.302190652061778, 2.3029093939189536, 2.3058345861690643, 2.357186176584476, 2.9229351427135937, 5.0131280557307205, 9.587905712477866, 17.84833396213276], "accuracy": [0.09457138925790787, 0.08717474341392517, 0.08638224750757217, 0.08149518072605133, 0.08294808864593506, 0.09932637959718704, 0.09602430462837219, 0.09998679161071777, 0.09536388516426086, 0.1026284471154213], "val_loss": [1.9698704310825892, 1.973114354269845, 1.9736458233424596, 1.9745736803327287, 1.9836292266845703, 2.15639100755964, 3.272944586617606, 6.211037363324847, 11.885186059134346, 21.107761928013392], "val_accuracy": [0.10133333504199982, 0.08699999749660492, 0.0689999982714653, 0.08100000023841858, 0.10733333230018616, 0.09866666793823242, 0.09799999743700027, 0.10100000351667404, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [], [0], [23], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 3, 3, 0, 6, 3, 5, 6, 5, 9, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [3, 5, 3, 2, 5, 1, 3, 0, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [97, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1], [8], [0], [6], [0, 1], [5], [2], []], "fitness": -0.12999999523162842, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.301257357888958, 2.301624569863282, 2.3021882903290902, 2.3028898660485706, 2.3058133675768357, 2.35701065377757, 2.9216982693231937, 5.0097439181708605, 9.581322904276165, 17.83741806533122], "accuracy": [0.09457138925790787, 0.0866464152932167, 0.08638224750757217, 0.08030643314123154, 0.08321225643157959, 0.09985470771789551, 0.09615638852119446, 0.09998679161071777, 0.0956280529499054, 0.1026284471154213], "val_loss": [1.9698703629629952, 1.9731181008475167, 1.9736282484872, 1.9745638711111886, 1.983589036124093, 2.1558756147112166, 3.2709413255964006, 6.20664119720459, 11.87746947152274, 21.095781053815568], "val_accuracy": [0.10133333504199982, 0.08799999952316284, 0.07233333587646484, 0.08100000023841858, 0.10733333230018616, 0.09866666793823242, 0.09799999743700027, 0.10100000351667404, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 1, 1], [3], [1, 1], []], "fitness": -0.12999999523162842, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.301257389379987, 2.3016239268164735, 2.3021873097299443, 2.3028958309847742, 2.3058154461736833, 2.356957312005622, 2.9212572305997004, 5.008529037233231, 9.578958707604631, 17.83348706590186], "accuracy": [0.09457138925790787, 0.08691058307886124, 0.08677849918603897, 0.0804385170340538, 0.08308017253875732, 0.09972262382507324, 0.09615638852119446, 0.09998679161071777, 0.0956280529499054, 0.10249637067317963], "val_loss": [1.9698704310825892, 1.9731129237583704, 1.973633084978376, 1.9745659828186035, 1.9835880143301827, 2.155695302145822, 3.2702227319989885, 6.205060277666364, 11.874691009521484, 21.091468266078405], "val_accuracy": [0.10133333504199982, 0.08799999952316284, 0.07199999690055847, 0.0820000022649765, 0.10899999737739563, 0.09866666793823242, 0.09799999743700027, 0.10100000351667404, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [], [2], [], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8, 5, 6], [5, 0, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [40, 82, 0, 8, 21, 72, 6, 12, 48, 22, 37], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1], [8], [4], [6], [0, 1], [5], [1], []], "fitness": -0.12942856550216675, "mapping_values": [1, 1, 1, 0, 1, 0, 92, 92, 59, 33, 11, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(grad, alpha))))))), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.subtract(grad, grad)))), tf.math.negative(tf.math.add(beta, grad)))), alpha))), tf.math.add(beta, alpha))), tf.math.subtract(alpha, tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))))))))), tf.math.add(beta, alpha)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.add(tf.math.sqrt(beta), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.pow(grad, tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)), tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(beta))))), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301257357888958, 2.301624479861921, 2.3021891180392915, 2.3028934011369917, 2.305820475511421, 2.356915970897914, 2.9209548731395643, 5.007707977244536, 9.577358359847134, 17.8308267599682], "accuracy": [0.09457138925790787, 0.0866464152932167, 0.08625016361474991, 0.08096684515476227, 0.08294808864593506, 0.09985470771789551, 0.09589222073554993, 0.09998679161071777, 0.0956280529499054, 0.1022322028875351], "val_loss": [1.9698703629629952, 1.9731174196515764, 1.9736329487391882, 1.9745675495692663, 1.9835843358721053, 2.1555709838867188, 3.269738333565848, 6.203992026192801, 11.872810363769531, 21.08854729788644], "val_accuracy": [0.10133333504199982, 0.08833333104848862, 0.07066666334867477, 0.08233333379030228, 0.10733333230018616, 0.09866666793823242, 0.09799999743700027, 0.10100000351667404, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [], [3], [93], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1], [], [3, 3, 0, 5, 3, 1, 1, 3, 0, 1, 2, 3, 5, 3, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 3, 1, 2, 3, 3, 4, 4, 3, 2, 4, 2], [], [0, 0], [0, 1], [8], [1], [], [1], [], [3], [71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [2], [11], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [2, 2, 4, 8, 3, 0, 8, 3, 5, 9, 5, 9, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [3, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [1, 1], [0, 1], [8], [0], [53], [0, 0, 1, 1, 0, 1, 1], [5, 7], [2, 1, 2, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, grad))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [0, 0], [5, 9], [2, 0, 1, 2], [93], [1, 0, 1, 0, 0, 1, 1, 0, 1], [1], [], [2, 2, 0, 0], [], [0, 0, 0, 1, 1], [0, 1, 1], [3], [3, 5], [], [1], [], [0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024646897656713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1], [8, 6, 5, 1, 0, 0], [2, 2, 1], [], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 1, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [45, 82, 0, 8, 21, 72, 6], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1], [8], [4], [6], [0, 1], [5], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 0, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.pow(alpha, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 8, 4, 7, 6, 5], [3, 0, 1, 0, 0, 2], [39, 99, 21], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 8, 3, 5, 3, 2, 9, 7, 8, 1, 4, 9, 0, 0, 7, 7, 2, 1, 3, 8, 5, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 1, 7, 7, 0, 2], [0, 3, 0, 5, 2, 1, 1, 2, 0, 1, 2, 3, 2, 0, 2, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [68, 59, 20, 1, 56, 77, 10, 76, 60, 22, 2, 89], [1, 0], [1, 1], [8], [0], [1], [1, 1, 1], [5], [0, 1], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 22, 22, 14, 8, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.pow(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.square(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(alpha))))))))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024646897656713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [3], [], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0], [2, 2, 4, 0, 0, 3, 2, 3, 5, 3, 5, 6, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 4, 8, 6, 8, 5, 1, 0, 3, 9, 6, 2, 2, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 9, 7, 1, 9, 9, 7, 7, 0, 6], [3, 3, 0, 5, 3, 1, 3, 3, 0, 1, 2, 3, 5, 3, 0, 3, 3, 3, 3, 1, 2, 0, 0, 2, 3, 1, 2, 3, 3, 4, 4, 3, 2, 4, 2], [68, 25, 20, 1, 39], [0, 0], [1], [8], [4], [44], [1], [3], [0, 1], [29]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029153893699643, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [], [2], [11], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [4, 3, 2, 3, 3, 5, 4, 0, 4, 2, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0], [8, 9], [4], [53], [0, 0, 1, 1, 0, 1, 1], [5, 3], [1, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 2, 2, 2, 2, 0, 1, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [0], [83], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [1, 2, 0, 0, 4, 1], [45], [0, 0, 0, 1, 0, 0, 0, 1, 1], [1], [2, 6], [1], [], [0, 0, 1, 1, 0, 1, 1], [9], [1], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024646897656713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0], [1], [], [2, 3], [], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1], [4], [3, 2], [], [1], [0, 1, 0], [8], [2], [6], [1, 0, 0, 0, 1, 1], [8, 9], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [1], [], [2], [], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [5, 5, 5, 2, 5, 1, 3, 3, 5, 4], [45], [0, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1], [2, 6], [5, 3], [6], [1], [], [0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024646897656713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [], [2], [42], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0, 1, 1, 0, 0], [0, 1, 0, 1], [8, 8], [3], [], [0, 0, 1, 1, 1], [7, 7, 5], [1, 0, 0], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3053043029091347, 3.4788460774963967, 3110960.889638812, 10910188131533.043, 3.972985024312262e+19, 1.21056946265818e+26], "accuracy": [0.08294808864593506, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.983220032283238, 60.1479252406529, 175576594.2857143, 621271295159734.9, 2.249460193678829e+21, 6.842033903927011e+27], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [1, 3, 1, 2, 2], [86], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [5, 3, 3, 2, 3, 4, 5], [1, 2, 0, 0, 2, 1], [68, 59], [1], [], [], [1], [], [0, 0, 1, 1, 0, 1, 1], [0, 7, 5], [2, 1, 3, 3], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [2], [], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 6, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [0, 5, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [26, 28, 91, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1], [4], [0, 7], [6], [0, 1], [5], [1], []], "fitness": -0.06457142531871796, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 3, 1, 2, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3028368978546974, 2.3017892522299217, 2.3002848293897484, 2.3012045901039917, 2.3004146428423757, 2.300567375717697, 2.29974882162762, 2.3011729135615338, 2.299760829219886, 2.3005097350739154, 2.300097401241947, 2.299461271816068, 2.3001605433999526], "accuracy": [0.0936468094587326, 0.09179764986038208, 0.09919429570436478, 0.09708096832036972, 0.09536388516426086, 0.09853387624025345, 0.09906221181154251, 0.09021265059709549, 0.09470347315073013, 0.09113723784685135, 0.09087307006120682, 0.09932637959718704, 0.10249637067317963], "val_loss": [1.9698615074157715, 1.969458988734654, 1.9692957741873605, 1.9693634169442313, 1.969362531389509, 1.9693751335144043, 1.9693420955113001, 1.9692141669137138, 1.96929475239345, 1.9693010193961007, 1.9694628034319197, 1.9697285379682268, 1.9699230875287737], "val_accuracy": [0.05666666850447655, 0.06400000303983688, 0.0676666647195816, 0.07266666740179062, 0.07400000095367432, 0.07633333653211594, 0.07966666668653488, 0.07999999821186066, 0.07633333653211594, 0.07633333653211594, 0.07699999958276749, 0.07366666942834854, 0.07100000232458115]}}, {"genotype": [[0], [1], [1], [], [1, 2, 1], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 9, 2, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 1, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 5, 2, 2, 0, 2, 7, 6, 9, 4, 0, 7, 0, 2], [3, 3, 2, 1, 5, 3, 0, 3, 4, 4, 0, 2, 1, 1, 1, 0, 3, 4, 3, 4, 0, 1, 1, 1, 5, 5, 2, 2, 0, 1, 3, 2, 2, 2, 1], [26, 28, 47, 46, 22, 57, 31, 41, 27, 59, 43, 91], [0, 0], [0, 1], [5], [0], [6], [0, 1], [5], [1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 50, 50, 32, 18, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.subtract(grad, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.sqrt(grad), tf.math.square(grad)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.add(beta, alpha))), tf.math.subtract(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.303274262866261, 2.302976946741945, 2.3018676589398477, 2.3031934392828557, 2.302824512023684, 2.3029242068580302], "accuracy": [0.09417514503002167, 0.0870426595211029, 0.09377889335155487, 0.09034473448991776, 0.08849557489156723, 0.08915598690509796], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1], [1], [], [2], [6], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], [5, 3, 2, 4, 0, 7, 2, 1, 4], [1, 2, 2, 0, 2, 1, 4, 3], [68, 71], [0, 0, 0], [0, 1, 1], [2], [0, 7], [6], [0, 1, 0, 1, 1], [2, 1], [1, 2, 1], [9]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.subtract(beta, alpha))", "other_info": {"loss": [2.303274262866261, 2.302976946741945, 2.3018676589398477, 2.3031934392828557, 2.302824512023684, 2.3029242068580302], "accuracy": [0.09417514503002167, 0.0870426595211029, 0.09377889335155487, 0.09034473448991776, 0.08849557489156723, 0.08915598690509796], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0], [1], [], [2, 0, 1, 2], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 6, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 4, 8, 6, 8, 5, 1, 0, 3, 9, 6, 2, 2, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 9, 7, 1, 9, 9, 7, 7, 0, 6], [2, 2, 0, 0], [], [0, 0, 0, 1, 1], [0, 1], [0], [1], [44], [1], [], [2], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303274262866261, 2.302976946741945, 2.3018676589398477, 2.3031934392828557, 2.302824512023684, 2.3029242068580302], "accuracy": [0.09417514503002167, 0.0870426595211029, 0.09377889335155487, 0.09034473448991776, 0.08849557489156723, 0.08915598690509796], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]