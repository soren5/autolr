[{"genotype": [[0], [1], [1], [], [2], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 9, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [0, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0], [0, 1], [8], [0], [6], [0, 1], [5], [1], []], "fitness": -0.1388571411371231, "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.subtract(alpha, alpha)))))))), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.square(beta)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.negative(grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), grad))))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), beta)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), beta)))))), alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(beta, beta)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))))), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3004010672173116, 2.3006172817869115, 2.3028306180396965, 2.3029703276740907, 2.30381008760253, 2.3172283581675885], "accuracy": [0.10302469879388809, 0.09668471664190292, 0.07713644206523895, 0.08096684515476227, 0.10936468094587326, 0.1018359512090683], "val_loss": [1.9694066728864397, 1.9736037254333496, 1.9738744327000208, 1.97416775567191, 1.9769007137843542, 2.024214948926653], "val_accuracy": [0.10499999672174454, 0.09733333438634872, 0.06266666948795319, 0.10100000351667404, 0.10000000149011612, 0.09799999743700027]}, "mapping_values": [1, 1, 1, 0, 1, 0, 92, 92, 57, 35, 12, 2, 2, 1, 1, 1, 2, 1, 1, 0]}, {"genotype": [[0], [0], [1], [], [3], [], [1], [1], [], [3], [], [0, 0], [0, 1], [8], [3], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 7, 8, 6, 4], [2, 0, 1, 2], [93], [1], [1], [], [3], [], [0, 0, 0, 1, 1], [0, 1, 0], [7, 1], [2], [], [0, 1], [8], [0], [77]], "fitness": -0.10000000149011612, "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302221012184759, 2.3025851429508597, 2.30258502602467, 2.3025850799688024, 2.3025849990053673, 2.302584949532961], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.9736442565917969, 1.973644188472203, 1.973644188472203, 1.973644188472203], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 1]}, {"genotype": [[0], [1], [1], [], [0], [13], [1], [1], [], [3], [], [1], [], [], [], [], [0, 0, 0, 0, 1, 0, 1], [3, 9, 5, 2, 8], [2, 0], [19, 64]], "fitness": -0.10000000149011612, "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3030808255373607, 2.302579979272393, 2.302580116762225, 2.302575854231039, 2.302571532307772, 2.3025835281853757, 2.302583706739509], "accuracy": [0.10777968913316727, 0.10817593336105347, 0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736456189836775, 1.973644801548549, 1.9736452102661133, 1.9736475944519043, 1.97365174974714, 1.9736556325639998, 1.9736576080322266], "val_accuracy": [0.09866666793823242, 0.10266666859388351, 0.10000000149011612, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 5, 2, 2]}, {"genotype": [[0], [1, 1, 0, 0, 0], [0, 0, 1, 0, 1], [1, 4, 9], [2, 1], [58], [1], [1], [], [0], [34], [1], [], [], [], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3870885.286727998, 567473377.2045965, 9688745137.857615, 69091903971.93501, 307235565394.3352, 984127360466.2169], "accuracy": [0.0948355570435524, 0.09959053993225098, 0.1014397069811821, 0.09959053993225098, 0.09734513610601425, 0.09879804402589798], "val_loss": [30820348.57142857, 1657727524.5714285, 17785184841.142857, 96944888685.71428, 363103883849.1429, 1070996614582.8572], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 1, 1, 1], [0, 0, 0, 1], [0, 3, 9], [2], [40], [1], [1], [], [3], [], [1], [], [], [], [], [0, 0, 0, 0, 1, 1], [6, 5, 9, 2], [3, 0], [72, 74]], "fitness": -0.10000000149011612, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302966593782805, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 2]}, {"genotype": [[0], [0], [1], [], [2], [], [1, 1], [0, 1], [0], [1], [], [1], [], [], [], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [1], [], [0, 0], [0, 1], [8], [0], [38], [1], [], [], [], [], [1], [], [0], [25]], "fitness": -0.10000000149011612, "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022423316112612, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9], [2], [17], [1], [1], [], [3], [], [1], [], [], [], [], [0, 0, 0, 0, 1, 1, 1, 1], [4, 6, 1, 5], [2, 2, 3, 1], []], "fitness": -0.10000000149011612, "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.square(beta), beta), sigma), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 0]}, {"genotype": [[0], [0], [1], [], [3], [], [1], [1], [], [1], [], [1], [], [], [], [], [0, 1, 1], [3], [1, 2], []], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, beta)", "other_info": {"loss": [2.3041544830668417, 2.322550431061194, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08651433140039444, 0.07317395508289337, 0.09391097724437714, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9763351849147253, 2.0175204958234514, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.024666666984558105, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0]}, {"genotype": [[0], [0], [1], [], [0], [42], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 5, 1, 2, 6, 2, 6, 8, 1, 4, 4, 6, 3, 9], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [79], [0, 1, 0, 1, 0, 0], [0, 0, 0, 1], [7, 3, 8], [1], [], [0, 0, 1, 1, 0, 1, 1], [4, 7, 3], [2, 1, 2, 3], []], "fitness": -0.10000000149011612, "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))))))), tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad))), grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.multiply(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 1, 25, 25, 14, 11, 1, 6, 4, 3, 1, 0, 7, 3, 4, 0]}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [4], [1, 3], [], [0, 0], [0, 1], [5], [2], [], [1], [], [], [], [], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 1, 4, 6, 7, 0, 4, 5], [2, 3, 1, 0, 3, 2], [52]], "fitness": -0.10000000149011612, "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.negative(sigma), tf.math.pow(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.square(sigma)), beta)))", "other_info": {"loss": [2.302676277988229, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 14, 8, 6, 1]}, {"genotype": [[0], [0], [1], [], [3], [], [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 4, 3, 4, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [5, 5, 5, 2, 5, 1, 3, 3, 5, 4], [45], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1], [8, 7, 4, 3, 0], [4], [], [1], [], [1], []], "fitness": -0.10000000149011612, "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, beta)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 1, 9, 6, 5, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1], [1], [], [0], [11], [1], [1], [], [5], [], [0], [1], [], [7], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1.048653543584269e+25, 45.60033118465022, 145.17266784837264, 301.9510963086234, 517.1163841109502, 789.5845789901175], "accuracy": [0.0870426595211029, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.447095598493302, 81.3725106375558, 195.6169215611049, 359.3220476422991, 572.2918875558036, 834.644513811384], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0], [0, 0], [5, 9], [], [6], [1, 0, 1, 0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 1, 7, 0], [1, 2, 0, 0], [68, 59], [1], [], [], [], [], [1], [], [0], [9]], "fitness": -0.10000000149011612, "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025446454878136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 2, 2, 2, 0, 1, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [2, 7, 3, 4, 8, 2, 9], [1, 1, 3, 2, 0], [30, 56], [1], [1], [], [2], [], [0], [1], [], [5], [], [1], [], [2], []], "fitness": -0.03914285823702812, "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(alpha, alpha)), tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.30392287382439, 2.3010483571267826, 2.3017049502104565, 2.3033224684514106, 2.3015289822463676, 2.302300251832397], "accuracy": [0.09021265059709549, 0.09774138033390045, 0.09747721254825592, 0.0874389111995697, 0.09391097724437714, 0.08902391046285629], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 4, 0], [0, 0, 3, 2], [28, 72], [0], [1], [], [2], [], [0, 1], [0], [0], [], [], [0, 1], [0], [3], []], "fitness": -0.03914285823702812, "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3041407585521934, 2.3022090817770042, 2.303194754978039, 2.3024168065856743, 2.3024461526975277, 2.3019385778074173], "accuracy": [0.08889182657003403, 0.09325055778026581, 0.08849557489156723, 0.09589222073554993, 0.09245806187391281, 0.08915598690509796], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0]}, {"genotype": [[0], [0, 0], [0, 1], [8], [1], [], [1], [1], [], [4], [], [1], [], [], [], [], [1], [], [1], []], "fitness": -0.03914285823702812, "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301845055246208, 2.3008612671611393, 2.302409543053916, 2.303308669051096, 2.302724234479341, 2.3033562268972743], "accuracy": [0.09219389408826828, 0.09192973375320435, 0.0866464152932167, 0.09087307006120682, 0.09192973375320435, 0.08625016361474991], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1], [4, 5, 3], [2, 0, 1], [50], [1], [1], [], [5], [], [1], [], [], [], [], [1], [], [3], []], "fitness": -0.03914285823702812, "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302668082920347, 2.302236214069532, 2.303050448472206, 2.303248539041487, 2.301846471334792, 2.3034177585410847], "accuracy": [0.09034473448991776, 0.09153348207473755, 0.08836349099874496, 0.09113723784685135, 0.09179764986038208, 0.08928807079792023], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0, 1], [0, 1], [5], [1], [], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 5, 8, 2, 2, 4, 2, 3, 6, 6, 9], [0, 2, 4, 1, 0, 0, 1], [41, 57, 62, 2], [1], [], [], [], [], [1], [], [3], []], "fitness": -0.03914285823702812, "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026720798247053, 2.302509096650998, 2.301912647149566, 2.30241518293972, 2.3032201614047336, 2.3022624961987557], "accuracy": [0.09206181764602661, 0.0874389111995697, 0.0944393053650856, 0.09245806187391281, 0.08968432247638702, 0.08875974267721176], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 11, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0]}]