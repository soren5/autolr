[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 4, 5, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [91, 92, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [4, 3], [43], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8322857022285461, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9446680595090344, 1.2378395463985428, 0.8255860217810149, 0.7111139981864135, 0.6409033002114614, 0.607636569080383, 0.5556117967056513, 0.524984794915738, 0.49852143027495555, 0.48198885336103, 0.45277761663932053, 0.4456238860168225, 0.42466383653624873, 0.40795180265693426, 0.3873387431511081, 0.3720646644068463, 0.37128410357384084, 0.3598993517947534, 0.34955547375056123, 0.3359280191140483, 0.3293962655932188, 0.32631220892829477, 0.31207897198702506, 0.3016541161478597, 0.300458159747928, 0.2962475818901833, 0.29096395854291157, 0.2754153499765765, 0.2683077930947494, 0.2611385385523446, 0.25172714183256845, 0.24152382001577982, 0.2400492336736332], "accuracy": [0.33866068720817566, 0.5729758143424988, 0.698190450668335, 0.7292299270629883, 0.7565711140632629, 0.7713643908500671, 0.7936864495277405, 0.8053097128868103, 0.8168009519577026, 0.8193105459213257, 0.8325188159942627, 0.8325188159942627, 0.8446704745292664, 0.8467837572097778, 0.857218325138092, 0.8626337051391602, 0.8639545440673828, 0.8667283058166504, 0.8709549307823181, 0.871879518032074, 0.8726720213890076, 0.8808611631393433, 0.8858803510665894, 0.8877294659614563, 0.8870691061019897, 0.8894465565681458, 0.8889182209968567, 0.896446943283081, 0.9014661312103271, 0.9035794734954834, 0.9013340473175049, 0.9070135951042175, 0.9115044474601746], "val_loss": [1.092186757496425, 0.6362081084932599, 0.5372296401432582, 0.5033460855484009, 0.45703370230538504, 0.41721402747290476, 0.39561309133257183, 0.38230492387499126, 0.36742691482816425, 0.3567478656768799, 0.3554435798100063, 0.3481634684971401, 0.340380208832877, 0.3339088814599173, 0.32089419875826153, 0.3345705100468227, 0.32585216420037405, 0.31682527916772024, 0.31448172671454294, 0.3098435912813459, 0.30976646287100656, 0.3073045696531023, 0.3153735484395708, 0.3020534941128322, 0.3187535745756967, 0.30271310465676443, 0.3050316401890346, 0.29991397687367033, 0.2963528462818691, 0.30714415652411325, 0.30665802104132517, 0.3200284923825945, 0.3058035373687744], "val_accuracy": [0.5109999775886536, 0.718999981880188, 0.7606666684150696, 0.7833333611488342, 0.7956666946411133, 0.8180000185966492, 0.8373333215713501, 0.8416666388511658, 0.8476666808128357, 0.8553333282470703, 0.8463333249092102, 0.8566666841506958, 0.8546666502952576, 0.8553333282470703, 0.8633333444595337, 0.8610000014305115, 0.8643333315849304, 0.859000027179718, 0.8686666488647461, 0.8709999918937683, 0.8636666536331177, 0.8733333349227905, 0.8706666827201843, 0.8723333477973938, 0.862666666507721, 0.8743333220481873, 0.8686666488647461, 0.878000020980835, 0.8743333220481873, 0.8743333220481873, 0.8776666522026062, 0.8733333349227905, 0.8706666827201843]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 6, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 2, 2, 0, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [91, 92, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [4, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8274285793304443, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9446683648145588, 1.23725710075293, 0.8252489679304679, 0.7099344666135499, 0.6403247173656609, 0.6071758703107862, 0.557949921159287, 0.5248903584927458, 0.4991725739384403, 0.48036048916494367, 0.4520109704677313, 0.44473681380531144, 0.4243424786450352, 0.4093456302557041, 0.38514805994234097, 0.3728746274805277, 0.3710213701455128, 0.355667684599708, 0.3498420897861907, 0.3323508283646666, 0.3320023672471445, 0.32174483432100276, 0.31489490602608794, 0.3008051566664474, 0.29837633604622943, 0.3006027856554574, 0.28971425449890686, 0.26679393318445455, 0.2651431957382048], "accuracy": [0.33866068720817566, 0.5727116465568542, 0.6989829540252686, 0.7292299270629883, 0.757099449634552, 0.7729493975639343, 0.7930260300636292, 0.8067626357078552, 0.8169330358505249, 0.8212917447090149, 0.8334434032440186, 0.8355567455291748, 0.8417646288871765, 0.8455950617790222, 0.8569541573524475, 0.8628978729248047, 0.8644828796386719, 0.8654074668884277, 0.8713511824607849, 0.8755778670310974, 0.8698983192443848, 0.8800686597824097, 0.8881257176399231, 0.8897107243537903, 0.8883898854255676, 0.8873332738876343, 0.889050304889679, 0.8994848728179932, 0.8990886211395264], "val_loss": [1.0921664919172014, 0.6365171500614711, 0.537270222391401, 0.5037989616394043, 0.45782813004084993, 0.41700245652879986, 0.3992683546883719, 0.38355880975723267, 0.36830354588372366, 0.35412933996745516, 0.3553976161139352, 0.3470699191093445, 0.3400290182658604, 0.3314550518989563, 0.3240641610963004, 0.3342028685978481, 0.3193205339568002, 0.31854309354509625, 0.3124658635684422, 0.31806459597178866, 0.3103156430380685, 0.31218062128339497, 0.308708872113909, 0.30056725229535786, 0.3152025512286595, 0.30754853997911724, 0.3017120361328125, 0.3004775898797171, 0.2977414642061506], "val_accuracy": [0.5109999775886536, 0.718999981880188, 0.7593333125114441, 0.7823333144187927, 0.7926666736602783, 0.8206666707992554, 0.8336666822433472, 0.8386666774749756, 0.8479999899864197, 0.8586666584014893, 0.8460000157356262, 0.8539999723434448, 0.8553333282470703, 0.8556666374206543, 0.8640000224113464, 0.8573333621025085, 0.8653333187103271, 0.862666666507721, 0.8696666955947876, 0.8690000176429749, 0.8633333444595337, 0.8676666617393494, 0.8683333396911621, 0.8776666522026062, 0.8713333606719971, 0.871999979019165, 0.8700000047683716, 0.8759999871253967, 0.8766666650772095]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 4, 8, 6, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [43], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8271428346633911, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 5, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9446689316530774, 1.2377210634102076, 0.8258014696227908, 0.7104043832481529, 0.6400570602244421, 0.608280631576657, 0.5571932194491482, 0.5258323314592681, 0.499486318908867, 0.47928759781612995, 0.4511687952797285, 0.4440510019201408, 0.4263817753223081, 0.4113918028849621, 0.3890809519077415, 0.3750504063199524, 0.3736650132074836, 0.3601813376886718, 0.3544028682786523, 0.33663804871436703, 0.3357939391348104, 0.33137759130943595, 0.32003582861476715, 0.30435060898562655, 0.29776043914973915, 0.2959128922010693, 0.28971949747178405, 0.26785303927242576, 0.26295575971900037, 0.26542038413527586, 0.25364930176692413, 0.24928284519817126, 0.25030086949721553, 0.23521551633311016, 0.22753185123941289, 0.22818130358665878, 0.22738143468671518, 0.21574072898607274, 0.19966173960256886, 0.2012687907707359, 0.19894356068492866, 0.19424351439688892, 0.183871238364866, 0.1794552265133415, 0.17842888295170245, 0.17293111251928173], "accuracy": [0.33866068720817566, 0.5729758143424988, 0.6976621150970459, 0.7290979027748108, 0.7567031979560852, 0.772288978099823, 0.7928939461708069, 0.8063663840293884, 0.8162726163864136, 0.8234050869941711, 0.8348963260650635, 0.8327829837799072, 0.842028796672821, 0.8459912538528442, 0.8577466607093811, 0.8622375130653381, 0.8634262084960938, 0.8681812286376953, 0.8697662353515625, 0.8739928603172302, 0.871879518032074, 0.8755778670310974, 0.8800686597824097, 0.8868049383163452, 0.8889182209968567, 0.8897107243537903, 0.8881257176399231, 0.9006736278533936, 0.9001452922821045, 0.9026548862457275, 0.9021265506744385, 0.9043719172477722, 0.9059569239616394, 0.9096552729606628, 0.9108440279960632, 0.9117686152458191, 0.9146744012832642, 0.9173160791397095, 0.9224672913551331, 0.9220710396766663, 0.9249768853187561, 0.923920214176178, 0.9306564331054688, 0.9298639297485352, 0.9318451881408691, 0.9325056076049805], "val_loss": [1.0921964304787772, 0.6372035912105015, 0.5373824323926654, 0.5024054391043526, 0.4586892468588693, 0.4173713071005685, 0.39778147424970356, 0.38437920808792114, 0.368058374949864, 0.35469107968466623, 0.35730280194963726, 0.34620072160448345, 0.34210813896996634, 0.33509468180792673, 0.3221389480999538, 0.3404410651751927, 0.3228174703461783, 0.3218761852809361, 0.3148974520819528, 0.31763347557612825, 0.3115744079862322, 0.3111973830631801, 0.3133458580289568, 0.30340650251933504, 0.3194474067006792, 0.31226048299244474, 0.2977713261331831, 0.3016255327633449, 0.2958499108042036, 0.31070709228515625, 0.3016743915421622, 0.3125178643635341, 0.30275392532348633, 0.3016964282308306, 0.3034800546509879, 0.31038514205387663, 0.3081049493380955, 0.3011354463441031, 0.31646999291011263, 0.3097198860985892, 0.31354515893118723, 0.3137997218540737, 0.3339830381529672, 0.3176570875304086, 0.31249048028673443, 0.33042575631822857], "val_accuracy": [0.5106666684150696, 0.718666672706604, 0.7590000033378601, 0.7829999923706055, 0.7946666479110718, 0.8216666579246521, 0.8356666564941406, 0.8373333215713501, 0.8476666808128357, 0.8560000061988831, 0.8460000157356262, 0.8586666584014893, 0.8516666889190674, 0.8526666760444641, 0.8653333187103271, 0.8529999852180481, 0.8669999837875366, 0.8566666841506958, 0.8686666488647461, 0.8666666746139526, 0.862666666507721, 0.8656666874885559, 0.8723333477973938, 0.8706666827201843, 0.8646666407585144, 0.8723333477973938, 0.8696666955947876, 0.875333309173584, 0.8703333139419556, 0.8703333139419556, 0.8733333349227905, 0.8766666650772095, 0.8723333477973938, 0.878333330154419, 0.8696666955947876, 0.875333309173584, 0.8776666522026062, 0.8820000290870667, 0.8723333477973938, 0.8799999952316284, 0.8823333382606506, 0.874666690826416, 0.8803333044052124, 0.8790000081062317, 0.8799999952316284, 0.8809999823570251]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 4, 5, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [43], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8242856860160828, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), grad))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9413597306019879, 1.2415655061647861, 0.8362335835497031, 0.7147999494823057, 0.645232626578087, 0.6076752987945273, 0.5628367084569431, 0.5267600892494226, 0.49957594601800337, 0.48315704647481655, 0.45226120332748254, 0.44245912178144353, 0.42126235093076575, 0.410744619021531, 0.38850779375379996, 0.3753095837380073, 0.37342233124300156, 0.3488165210022698, 0.34149506001613555, 0.32860079532868797, 0.32059965254828726, 0.31214722445801246, 0.30328544857023004, 0.29069578408675345, 0.2972893089807863, 0.29038444277538267, 0.2881689012530867, 0.2673083663837013, 0.2637050925402074, 0.25640344663838416, 0.24426944090933958, 0.2388023324158245, 0.24755859034896888, 0.235079273843274, 0.2233982880956162, 0.2226140868898396, 0.21636839962638585], "accuracy": [0.33905693888664246, 0.573107898235321, 0.6903975605964661, 0.7269845604896545, 0.7540615797042847, 0.7712323069572449, 0.7921014428138733, 0.8017435073852539, 0.8187822103500366, 0.8234050869941711, 0.8348963260650635, 0.8350284099578857, 0.846387505531311, 0.8451988101005554, 0.8564258217811584, 0.8632941246032715, 0.863558292388916, 0.870030403137207, 0.8721436858177185, 0.8759741187095642, 0.8766345381736755, 0.8840311765670776, 0.886672854423523, 0.8934090733528137, 0.8869370222091675, 0.8918240666389465, 0.8882578015327454, 0.8994848728179932, 0.8990886211395264, 0.9026548862457275, 0.9056927561759949, 0.9099194407463074, 0.9045040011405945, 0.9111081957817078, 0.9132214784622192, 0.9177123308181763, 0.9185048341751099], "val_loss": [1.098531654902867, 0.6529666696275983, 0.5379057952335903, 0.5033653974533081, 0.4595803362982614, 0.42212086064474924, 0.40185639687946867, 0.3812025359698704, 0.36832261085510254, 0.3582135098321097, 0.3569022161620004, 0.3498474359512329, 0.34104147127696444, 0.3356790542602539, 0.32865236486707416, 0.3405079245567322, 0.3210539221763611, 0.3164340683392116, 0.31422862836292814, 0.3032718300819397, 0.3138176373073033, 0.30661783048084806, 0.3090693014008658, 0.29873746633529663, 0.3072823371206011, 0.31331098079681396, 0.29298930508749826, 0.30007983105523245, 0.29139168773378643, 0.3031638775553022, 0.30790724073137554, 0.3073160648345947, 0.31439298391342163, 0.30159893206187655, 0.30220870460782734, 0.3053678103855678, 0.3155283417020525], "val_accuracy": [0.5273333191871643, 0.706333339214325, 0.7609999775886536, 0.781333327293396, 0.7933333516120911, 0.8213333487510681, 0.8270000219345093, 0.8416666388511658, 0.8486666679382324, 0.8546666502952576, 0.8500000238418579, 0.8529999852180481, 0.8513333201408386, 0.8546666502952576, 0.8619999885559082, 0.8510000109672546, 0.8640000224113464, 0.8619999885559082, 0.8640000224113464, 0.8693333268165588, 0.859666645526886, 0.8706666827201843, 0.8683333396911621, 0.8773333430290222, 0.875333309173584, 0.8659999966621399, 0.878000020980835, 0.8766666650772095, 0.8776666522026062, 0.8730000257492065, 0.875333309173584, 0.8806666731834412, 0.8759999871253967, 0.878333330154419, 0.871666669845581, 0.8740000128746033, 0.8740000128746033]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 4, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [91, 92, 30, 2, 57, 74, 34, 28, 65, 70], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 2, 0, 8, 7], [4, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.108040569024142, 1.513446122695269, 1.1887725007186052, 1.004538086285413, 0.8862719506147342, 0.8270805458177932, 0.7542620346829907, 0.7253865519881233, 0.7651663821654596, 0.7194038565998709, 0.6839315024081664, 0.6912487898095252, 0.6690758060486309, 0.6634968529051762, 0.646035242082263, 0.6419787798669785, 0.6120203028911172, 0.5990691021716574, 0.5932666355388008, 0.592449505638374, 0.5971793649754331, 0.5911627511668908, 0.5630778828474666, 0.5726751224901131, 0.5566130872171757, 0.5433265214519982, 0.566067779753832, 0.5601522136578517, 0.5272973011970016, 0.5241216970527681], "accuracy": [0.3106590807437897, 0.47906485199928284, 0.5698058605194092, 0.6232994198799133, 0.6773213744163513, 0.6889446377754211, 0.7176066637039185, 0.7268524765968323, 0.7147008180618286, 0.7246070504188538, 0.7401928305625916, 0.7372870445251465, 0.7449478507041931, 0.7494386434555054, 0.7563069462776184, 0.7605336308479309, 0.7713643908500671, 0.7717606425285339, 0.7765156626701355, 0.7757231593132019, 0.7721568942070007, 0.7763835787773132, 0.7886672616004944, 0.7771760821342468, 0.791441023349762, 0.7956677079200745, 0.7902522683143616, 0.7877426743507385, 0.8062343001365662, 0.8045172095298767], "val_loss": [1.2749602794647217, 1.0994702066693987, 0.8453607899802071, 0.7152478013719831, 0.6135021618434361, 0.5983802080154419, 0.541844231741769, 0.7291808468954903, 0.5574785470962524, 0.5314326116016933, 0.5287108251026699, 0.52287415095738, 0.5115722417831421, 0.4908703565597534, 0.5252141101019723, 0.46835938521793913, 0.4895582028797695, 0.46891811915806364, 0.4852329322269985, 0.5198229891913277, 0.4496424879346575, 0.4480337585721697, 0.4390653371810913, 0.45811338084084646, 0.4212868469102042, 0.4760884387152536, 0.4444540228162493, 0.4331576313291277, 0.42207807302474976, 0.4197254776954651], "val_accuracy": [0.5396666526794434, 0.5986666679382324, 0.6036666631698608, 0.6943333148956299, 0.7286666631698608, 0.7243333458900452, 0.7536666393280029, 0.6643333435058594, 0.7553333044052124, 0.7646666765213013, 0.7676666378974915, 0.7713333368301392, 0.768666684627533, 0.7756666541099548, 0.7696666717529297, 0.7906666398048401, 0.7826666831970215, 0.7870000004768372, 0.7926666736602783, 0.7636666893959045, 0.8063333630561829, 0.8059999942779541, 0.8016666769981384, 0.7799999713897705, 0.8143333196640015, 0.7823333144187927, 0.8076666593551636, 0.8069999814033508, 0.8140000104904175, 0.809333324432373]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 4, 3, 8, 4, 4, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [91, 92, 30, 2, 57, 74, 34, 28, 65, 70], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [47, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7688571214675903, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.07886660557224, 1.8860867896399336, 1.6013346285694674, 1.1730558326011005, 1.0269177842921176, 0.9305027593805522, 0.8476819678965876, 0.7890981640546172, 0.7123437901734203, 0.7234400449459185, 0.6675877026232431, 0.6651549250489732, 0.6452092471186983, 0.6428374239419351, 0.633793295925603, 0.5885660634096257, 0.5734152061166764, 0.5596838249837119, 0.5762593326016251, 0.5604551781548044, 0.5398711698985197, 0.5179535828765987], "accuracy": [0.29612997174263, 0.4015321731567383, 0.47285696864128113, 0.5658433437347412, 0.6118082404136658, 0.656980574131012, 0.6738871932029724, 0.7102100253105164, 0.7308149337768555, 0.7180029153823853, 0.7343811988830566, 0.739928662776947, 0.748249888420105, 0.7486461400985718, 0.748778223991394, 0.7786290049552917, 0.7796856164932251, 0.7839123010635376, 0.7758552432060242, 0.7775723338127136, 0.7901201844215393, 0.8058380484580994], "val_loss": [1.085207564490182, 1.2556689126150948, 0.862992422921317, 0.7526403154645648, 0.7838107688086373, 0.7194493157523019, 0.6138124125344413, 0.5740071364811489, 0.5762666974748883, 0.5772898197174072, 0.5241737876619611, 0.5948024136679513, 0.5122251851218087, 0.49926672663007465, 0.481685961995806, 0.4578676564352853, 0.4496318783078875, 0.4776672806058611, 0.4578754561288016, 0.45282936096191406, 0.44540672642844065, 0.4590367078781128], "val_accuracy": [0.5139999985694885, 0.5040000081062317, 0.6223333477973938, 0.67166668176651, 0.624666690826416, 0.6783333420753479, 0.7113333344459534, 0.7353333234786987, 0.7173333168029785, 0.7203333377838135, 0.7440000176429749, 0.6936666369438171, 0.750333309173584, 0.7599999904632568, 0.7713333368301392, 0.7889999747276306, 0.7963333129882812, 0.7799999713897705, 0.7886666655540466, 0.7900000214576721, 0.7963333129882812, 0.777999997138977]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 5, 4, 3, 8, 4, 4, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 0, 2, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [78], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.7562857270240784, "mapping_values": [1, 12, 12, 7, 5, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1096842709848547, 1.4813461196169073, 1.1942466822093771, 0.9604279857270076, 0.8767680161192338, 0.84249854505873, 0.7789334679371047, 0.7723185148977285, 0.7181334676696577, 0.7323829560247725, 0.6908732179117839, 0.6692344657245203, 0.6656789969002896, 0.6465528902203227, 0.6396964425896421], "accuracy": [0.3053757846355438, 0.49253731966018677, 0.5721833109855652, 0.6548672318458557, 0.6814159154891968, 0.6795667409896851, 0.7038700580596924, 0.7082287669181824, 0.7252674698829651, 0.7186633348464966, 0.737022876739502, 0.7495707273483276, 0.7479857206344604, 0.748249888420105, 0.7524765729904175], "val_loss": [1.2834776469639368, 1.0475241116115026, 0.7478996004377093, 0.6838124649865287, 0.7056942326681954, 0.6134730236870902, 0.6004791600363595, 0.5872298989977155, 0.550771883555821, 0.5326917682375226, 0.5544918094362531, 0.5497932434082031, 0.5265232494899205, 0.5096973521368844, 0.5287384986877441], "val_accuracy": [0.5640000104904175, 0.5929999947547913, 0.6666666865348816, 0.6996666789054871, 0.6696666479110718, 0.734666645526886, 0.7176666855812073, 0.7269999980926514, 0.7403333187103271, 0.7639999985694885, 0.7369999885559082, 0.7409999966621399, 0.7416666746139526, 0.7556666731834412, 0.7310000061988831]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 6, 5, 4, 1, 5, 3, 8, 4, 8, 8, 0, 2, 0, 2, 1, 8, 4, 0, 3, 4, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 0, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 15, 31, 2, 57, 74, 34, 28, 65, 70], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [1, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 5, 0, 8, 7], [0, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.11971428245306015, "mapping_values": [1, 17, 17, 10, 7, 1, 3, 3, 1, 2, 1, 4, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), grad))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.square(sigma)), tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.303202022761087, 2.302339150716348, 2.3032939446647926, 2.3034225773612946, 2.302586804637977, 2.3023066015259905, 2.302639240161098, 2.3031602946916165, 2.3021610021244787, 2.301205776024646, 2.301913273033764, 2.3003974840420898, 2.3013993425927284, 2.300973509406968, 2.301083413034524, 2.3002288645725555, 2.2994959424940538, 2.3006617186516976, 2.300370799142608, 2.3021167467424912, 2.2998482602824466, 2.301617191200322, 2.300420846102685, 2.2980291196273663, 2.300156175940658, 2.300185182925622, 2.301328491903236, 2.300101817827246, 2.298575597715699, 2.300038718969405, 2.298314589047082, 2.2982355476984524, 2.2985560927078033, 2.2989528085010527, 2.297796998088858, 2.298025965328466, 2.2977710532915356, 2.2962315135769886, 2.2979823927664564, 2.2979429990009876, 2.2992861931901234, 2.2984643697644174, 2.2980778702592426, 2.2966085592548784, 2.2981211863268225, 2.297631987176315, 2.296570393734006, 2.2982050935747504, 2.2953059123475965, 2.2980027986067224, 2.2976006155614885, 2.296722694111538, 2.294579862461838, 2.2968389223973196, 2.2962885791316023, 2.295957645830178, 2.295657643237685, 2.294931467356321, 2.295147952244912, 2.295291582638357, 2.2953077225778964, 2.2951531245204295, 2.2947059605713958, 2.294308310754232, 2.293338537846007, 2.295290718115143, 2.295053037307864, 2.2947065543662353, 2.2949370546521073, 2.2943124703097544, 2.2936040913628832, 2.2946444599777402, 2.293369721931757, 2.293600985276748, 2.295300545772431, 2.2923656367764353, 2.295628536394669, 2.293443043470351, 2.293059730101507, 2.293611076639911, 2.290672184123245, 2.292630974107399, 2.2924950865706624, 2.2922568446877234, 2.292674203669123, 2.292527766322825, 2.2917796081917836, 2.291468478275753, 2.29374816228433, 2.2927346689637154, 2.292150435745598, 2.2923385330147794, 2.293675268582853, 2.2915972914473413, 2.2920514428147927, 2.2916079857377425, 2.291579027815801, 2.291057533922449, 2.2919609723326047, 2.2918199310370757], "accuracy": [0.08955223858356476, 0.09351472556591034, 0.09232597798109055, 0.0952318087220192, 0.09325055778026581, 0.08677849918603897, 0.08757099509239197, 0.08558975160121918, 0.08928807079792023, 0.09536388516426086, 0.09576013684272766, 0.09391097724437714, 0.10196803510189056, 0.09602430462837219, 0.08928807079792023, 0.0936468094587326, 0.09576013684272766, 0.09351472556591034, 0.09840179979801178, 0.08796724677085876, 0.09377889335155487, 0.09628847241401672, 0.09298639744520187, 0.10355303436517715, 0.09351472556591034, 0.09166556596755981, 0.10236428678035736, 0.0956280529499054, 0.09549596905708313, 0.09972262382507324, 0.10210011899471283, 0.10091137140989304, 0.1002509593963623, 0.09893012791872025, 0.10381719470024109, 0.1018359512090683, 0.09998679161071777, 0.10579843819141388, 0.09813763201236725, 0.10130762308835983, 0.09470347315073013, 0.09998679161071777, 0.10394927859306335, 0.10342095047235489, 0.10619468986988068, 0.1002509593963623, 0.10434553027153015, 0.09853387624025345, 0.10540219396352768, 0.09734513610601425, 0.10566636174917221, 0.11015717685222626, 0.107647605240345, 0.1018359512090683, 0.10791176557540894, 0.10619468986988068, 0.10460969805717468, 0.10672302544116974, 0.10738343745470047, 0.10711926966905594, 0.10619468986988068, 0.108440101146698, 0.10447761416435242, 0.10777968913316727, 0.11147800832986832, 0.10619468986988068, 0.1088363528251648, 0.11293092370033264, 0.11200633645057678, 0.10566636174917221, 0.11359133571386337, 0.10751552134752274, 0.11134592443704605, 0.11279883980751038, 0.10302469879388809, 0.11517632752656937, 0.11055342853069305, 0.10910051316022873, 0.11266675591468811, 0.11266675591468811, 0.12508255243301392, 0.1162329912185669, 0.11266675591468811, 0.11847840249538422, 0.11874257028102875, 0.11451591551303864, 0.11715757846832275, 0.11795007437467575, 0.11636507511138916, 0.11227050423622131, 0.12059172987937927, 0.11649715900421143, 0.11913882195949554, 0.12217672914266586, 0.11174217611551285, 0.11808215826749802, 0.11979923397302628, 0.11411966383457184, 0.11411966383457184, 0.11834631860256195], "val_loss": [1.970379216330392, 1.970269066946847, 1.9701603480747767, 1.97005067552839, 1.9699416841779436, 1.969832147870745, 1.9697230884007044, 1.9696124621800013, 1.9695038114275252, 1.9693950925554549, 1.9692845344543457, 1.9691754749843053, 1.9690662792750768, 1.968956538609096, 1.968846321105957, 1.968738215310233, 1.9686288152422224, 1.9685204369681222, 1.96841185433524, 1.9683032035827637, 1.9681948934282576, 1.9680861745561873, 1.9679783412388392, 1.9678689411708288, 1.9677597454616003, 1.9676513671875, 1.9675418989998954, 1.9674323626926966, 1.9673237119402205, 1.9672149930681502, 1.9671075003487724, 1.9670006207057409, 1.9668927873883928, 1.966785499027797, 1.966677461351667, 1.966569219316755, 1.966460909162249, 1.9663526671273368, 1.966245446886335, 1.966137068612235, 1.9660286222185408, 1.965921197618757, 1.965813228062221, 1.965705462864467, 1.9655985151018416, 1.9654901368277413, 1.9653824397495814, 1.9652735165187292, 1.9651648657662528, 1.9650585991995675, 1.9649502209254675, 1.9648419788905553, 1.9647347586495536, 1.964627810886928, 1.9645199094499861, 1.9644124848502023, 1.9643046515328544, 1.9641964776175362, 1.964087690625872, 1.9639782905578613, 1.9638708659580775, 1.9637641225542342, 1.9636568341936385, 1.9635495458330428, 1.963441984994071, 1.963334424155099, 1.9632280213492257, 1.96312039239066, 1.9630138533455985, 1.9629051344735282, 1.9627979142325265, 1.9626896040780204, 1.9625821113586426, 1.9624740055629186, 1.962366717202323, 1.9622603143964494, 1.9621536391122, 1.9620468957083566, 1.9619402204241072, 1.9618328639439173, 1.9617251668657576, 1.9616188321794783, 1.9615116119384766, 1.9614051410130091, 1.9612984657287598, 1.961191041128976, 1.9610840252467565, 1.960977281842913, 1.9608699253627233, 1.9607622964041573, 1.9606543268476213, 1.9605467660086495, 1.96043975012643, 1.9603327342442103, 1.960226195199149, 1.9601187024797713, 1.960012640271868, 1.9599048750741142, 1.9597985403878349, 1.9596912520272392], "val_accuracy": [0.04800000041723251, 0.04800000041723251, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.05233333259820938, 0.052666667848825455, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.05433333292603493, 0.05433333292603493, 0.05533333495259285, 0.05666666850447655, 0.05666666850447655, 0.0573333315551281, 0.05833333358168602, 0.06066666543483734, 0.061666667461395264, 0.06199999898672104, 0.06300000101327896, 0.06333333253860474, 0.06466666609048843, 0.06533333659172058, 0.06566666811704636, 0.06700000166893005, 0.06733333319425583, 0.06933332979679108, 0.07000000029802322, 0.06966666877269745, 0.07000000029802322, 0.07133333384990692, 0.07133333384990692, 0.0716666653752327, 0.07266666740179062, 0.0729999989271164, 0.07433333247900009, 0.07533333450555801, 0.07533333450555801, 0.07666666805744171, 0.07699999958276749, 0.07766667008399963, 0.07866666465997696, 0.07999999821186066, 0.08100000023841858, 0.08133333176374435, 0.08233333379030228, 0.08299999684095383, 0.08366666734218597, 0.08500000089406967, 0.08566666394472122, 0.08633333444595337, 0.08766666799783707, 0.08900000154972076, 0.09000000357627869, 0.09066666662693024, 0.09133332967758179, 0.09166666865348816, 0.09200000017881393, 0.09300000220537186, 0.09366666525602341, 0.09433333575725555, 0.09533333033323288, 0.0963333323597908, 0.09700000286102295, 0.0976666659116745, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10066666454076767, 0.10199999809265137, 0.10333333164453506, 0.10433333367109299, 0.10633333027362823, 0.1066666692495346, 0.1080000028014183, 0.10999999940395355, 0.11100000143051147, 0.1120000034570694, 0.11233333498239517, 0.1133333370089531, 0.11366666853427887, 0.11533333361148834, 0.11599999666213989, 0.11666666716337204, 0.11866666376590729, 0.11999999731779099, 0.12066666781902313, 0.12133333086967468, 0.12200000137090683, 0.1223333328962326, 0.12266666442155838, 0.12333333492279053, 0.12433333694934845, 0.1263333261013031, 0.1276666671037674, 0.12833333015441895, 0.12933333218097687, 0.12999999523162842]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 5, 4, 1, 2, 4, 8, 8, 4, 5, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 1, 2, 0, 2, 2, 2, 2, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [43], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10999999940395355, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 1, 2, 0, 5, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3021999435843004, 2.299021624271754, 2.30064662928437, 2.30263880495508, 2.302610314422988, 2.3025151674915314, 2.3029876077778195], "accuracy": [0.09298639744520187, 0.1014397069811821, 0.10460969805717468, 0.10355303436517715, 0.11768590658903122, 0.10606260597705841, 0.1006472036242485], "val_loss": [1.9686472756522042, 1.9700896399361747, 1.9729547500610352, 1.9737858772277832, 1.9736804280962263, 1.974095685141427, 1.974454130445208], "val_accuracy": [0.08500000089406967, 0.1223333328962326, 0.11866666376590729, 0.11699999868869781, 0.10333333164453506, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 5, 4, 2, 2, 4, 3, 3, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [32, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 1, 2, 1, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302541266846824, 2.4319243104214427, 11.843353124862144, 68.0662037299341, 181.94458096088152, 353.73589236977836], "accuracy": [0.10645885765552521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9799425261361259, 2.907571315765381, 30.657972063337052, 108.15638296944755, 235.24434988839286, 411.7939714704241], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [2, 5, 4, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 8, 7], [4, 3], [0], [1, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 4, 3, 5, 4, 8, 7, 6, 8, 1, 2, 0, 2, 4, 0, 4, 0, 3, 2, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 2, 2, 1, 1, 0, 2, 2, 1, 3, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 1, 0, 8, 7], [4, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 2, 2, 1, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.pow(grad, tf.math.square(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [71793804546.23383, 1.447498020316465e+18, 7.6787825693129245e+25, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09734513610601425, 0.10038304328918457, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4014477784795.4287, 7.176376180710579e+19, 5.212081284133494e+27, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 9, 4, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 0, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 15, 30, 2, 57, 99, 34, 28, 65, 70], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 2, 0, 8, 7], [4, 3], [0], [0, 0, 1, 1], [7, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(beta), alpha)", "other_info": {"loss": [2.3024177905858516, 2.3025849765522635, 2.3025850799688024, 2.3025850664591507, 2.3025851294412085, 2.3025850754970763], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736443247113908, 1.973644529070173, 1.973644392830985, 1.9736443247113908, 1.973644529070173, 1.973644529070173], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 2, 4, 5, 2, 4, 5, 8, 1, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 2, 1, 2, 1, 2, 2, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1], [1, 3, 0, 8, 7], [0, 3], [43], [0, 1, 1, 1], [2, 5], [0, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 1, 3, 3, 1, 2, 1, 6, 4, 3, 1, 1, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), alpha))))), grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [2, 5, 4, 5, 2, 1, 3, 5, 4, 1, 7, 6, 8, 1, 2, 0, 2, 4, 0, 4, 0, 3, 2, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [31, 15, 30, 2, 57, 99, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [4, 3], [0], [0, 1, 1, 1], [9, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 5, 3, 2, 1, 0, 1, 1, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301699574786312, 2.3025847020764565, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 4, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [3, 0, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 15, 30, 2, 57, 99, 34, 28, 65, 70], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [4, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 2, 0, 8, 7], [4, 3], [0], [1, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1], [2, 5, 1, 5, 2, 4, 2, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 1, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [95, 60, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [89, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 2, 0, 8, 7], [0, 3], [0], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 23, 23, 13, 10, 2, 2, 2, 1, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), grad)), tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 4, 5, 6, 2, 4, 2, 5, 4, 5, 7, 6, 4, 0, 2, 0, 1, 4, 8, 6, 0, 3, 9, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 15, 30, 2, 57, 74, 34, 28, 65, 70], [1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 7, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [5, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1], [1, 8, 0, 8, 7], [0, 3], [0], [0, 0, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.303251453347257, 2.3025091487056684, 2.3035821722892487, 2.3038337802559457, 2.3031159421598058, 2.3029542694222798], "accuracy": [0.08942015469074249, 0.09298639744520187, 0.09166556596755981, 0.0944393053650856, 0.09206181764602661, 0.08558975160121918], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [2, 5, 2, 5, 2, 4, 3, 5, 4, 8, 7, 6, 8, 1, 2, 0, 2, 4, 0, 4, 0, 3, 2, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 0, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 1, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [56, 60, 30, 2, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 2, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [41, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 1, 0, 1, 0, 0, 0], [1, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [4, 3], [0], [0, 1, 1, 1], [8, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 44, 44, 26, 18, 4, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(grad), tf.math.add(alpha, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad)), grad))), grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))))))), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))))))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [2.303251453347257, 2.3025091487056684, 2.3035821722892487, 2.3038337802559457, 2.3031159421598058, 2.3029542694222798], "accuracy": [0.08942015469074249, 0.09298639744520187, 0.09166556596755981, 0.0944393053650856, 0.09206181764602661, 0.08558975160121918], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [1, 5, 4, 5, 2, 4, 3, 8, 4, 6, 7, 6, 8, 0, 2, 0, 2, 4, 8, 4, 0, 3, 0, 2, 5, 3, 1, 6, 2, 2, 8, 4, 8, 5, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 0, 2, 2, 2, 2, 2, 1, 0, 2, 2, 1, 3, 0, 1, 2, 2, 0, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [91, 92, 30, 2, 57, 74, 34, 28, 65, 70], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 3, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [16, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 0, 0, 1], [1, 3, 0, 8, 7], [4, 3], [43], [1, 0, 1, 1], [1, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.028857143595814705, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.304274260549025, 2.3060438161544385, 2.3096135968246227, 2.312502618888429, 2.3143550433565863, 2.3168046621204983], "accuracy": [0.08809932321310043, 0.08492933213710785, 0.07740060985088348, 0.07858935743570328, 0.06921146810054779, 0.05996565893292427], "val_loss": [1.9727591105869837, 1.9750612122671944, 1.9773684229169572, 1.9797285624912806, 1.9821123395647322, 1.9845385551452637], "val_accuracy": [0.03433333337306976, 0.02566666714847088, 0.017999999225139618, 0.013000000268220901, 0.011666666716337204, 0.009666666388511658]}}]