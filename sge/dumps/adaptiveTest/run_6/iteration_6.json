[{"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 3, 0, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.49799999594688416, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.266201733850044, 2.2581991117077105, 3.3299955941934503, 2.3037848472910123, 2.303152609022617, 2.3028911810194606, 2.302599471305985], "accuracy": [0.16880200803279877, 0.18518029153347015, 0.13961167633533478, 0.09932637959718704, 0.09708096832036972, 0.09747721254825592, 0.10011887550354004], "val_loss": [1.9607039179120744, 1.3598283699580602, 1.974841935294015, 1.9737414632524763, 1.9736614227294922, 1.9735702105930872, 1.9731841087341309], "val_accuracy": [0.2136666625738144, 0.46966665983200073, 0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1], [8], [3], [52], [0, 1, 0, 0], [0, 8], [1, 1], []], "fitness": -0.3857142925262451, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2661775152019743, 2.291485698294599, 2.2290028957973584, 2.4359798244024864, 2.3046039684400457, 2.3031648683541674, 2.3030744627434987, 2.30315664740066], "accuracy": [0.16933034360408783, 0.16312244534492493, 0.17263241112232208, 0.20380398631095886, 0.09787346422672272, 0.09985470771789551, 0.09893012791872025, 0.09694888442754745], "val_loss": [1.961104461124965, 1.9725123814174108, 1.9115139416285925, 1.9754837581089564, 1.973785468510219, 1.973693915775844, 1.9737144197736467, 1.97366578238351], "val_accuracy": [0.20633333921432495, 0.09799999743700027, 0.3059999942779541, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.09799999743700027, 0.10233332961797714]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [0], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3557142913341522, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.2653771737594615, 2.4074514565954686, 2.293418242490177, 2.4872683913495797, 2.3049630249307107, 2.3033454048792605, 2.303179906265154, 2.3031967875035115], "accuracy": [0.17316074669361115, 0.14978206157684326, 0.12072381377220154, 0.12838461995124817, 0.09708096832036972, 0.09774138033390045, 0.0936468094587326, 0.09311848133802414], "val_loss": [1.9300951957702637, 1.9733704158238001, 1.743645123073033, 1.9753428867885046, 1.9738268171037947, 1.9736176899501257, 1.9737120355878557, 1.9737443242754256], "val_accuracy": [0.2123333364725113, 0.10266666859388351, 0.3816666603088379, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [3], [6, 42, 84], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0, 8], [1, 1], []], "fitness": -0.3151428699493408, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.266204270074522, 2.259994909259795, 2.3039219494997125, 2.3038633370742727, 2.3031808708353663, 2.2249644228086622, 2.2877838223318396], "accuracy": [0.16814158856868744, 0.2008981704711914, 0.12310130894184113, 0.0956280529499054, 0.10289261490106583, 0.19495442509651184, 0.12402588874101639], "val_loss": [1.96116304397583, 1.6460707528250558, 1.9745757920401437, 1.9735264778137207, 1.9708453587123327, 1.9794701848711287, 2.096214226314], "val_accuracy": [0.2759999930858612, 0.32633334398269653, 0.10133333504199982, 0.10300000011920929, 0.14399999380111694, 0.10333333164453506, 0.20466665923595428]}}, {"genotype": [[0], [0, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [], [1, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.25342857837677, "mapping_values": [1, 1, 1, 0, 1, 0, 93, 93, 60, 33, 12, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.sqrt(beta))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), beta), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.square(grad), beta)))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)), tf.math.add(beta, beta))))))), tf.math.add(beta, grad)))))), tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.2661844079898508, 2.3295681025956396, 2.267400317141062, 2.734014433042138, 2.303681062433336, 2.3019450745956065], "accuracy": [0.16893409192562103, 0.14793290197849274, 0.18795403838157654, 0.09681680053472519, 0.09945846349000931, 0.10553427785634995], "val_loss": [1.9617179461887904, 1.9715770312717982, 4.485530853271484, 1.9747492245265417, 1.9734315872192383, 1.9715056419372559], "val_accuracy": [0.2709999978542328, 0.1003333330154419, 0.10266666859388351, 0.10000000149011612, 0.11266666650772095, 0.0976666659116745]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.19771428406238556, "mapping_values": [1, 1, 1, 0, 1, 0, 95, 95, 58, 37, 11, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, beta)), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad), tf.math.square(tf.math.add(beta, beta))))), grad)), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))))))))), tf.math.add(beta, grad)))))), tf.math.subtract(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.subtract(beta, tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), tf.math.add(beta, grad)))), tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), beta)))), tf.math.add(beta, alpha)), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.266205846106041, 2.232690671588987, 2.30136322556328, 2.2663900906053027, 2.304115796652862, 2.272718689838783, 2.3049560058638088, 2.3031823622189997], "accuracy": [0.16814158856868744, 0.201294407248497, 0.11517632752656937, 0.1488574892282486, 0.10051512718200684, 0.17051908373832703, 0.10487385839223862, 0.1026284471154213], "val_loss": [1.9608458110264368, 1.9747890063694544, 1.9426180975777763, 1.9739363534109933, 1.9722721236092704, 1.9779248918805803, 1.9742137363978796, 1.973736081804548], "val_accuracy": [0.23633334040641785, 0.10066666454076767, 0.3256666660308838, 0.09799999743700027, 0.09733333438634872, 0.10133333504199982, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [1], [52], [1, 1, 1], [0], [0, 1], [3]], "fitness": -0.11571428924798965, "mapping_values": [1, 1, 1, 0, 1, 0, 77, 77, 46, 31, 10, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(grad, beta)))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.square(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), beta)), tf.math.add(beta, grad)), tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))), tf.math.add(beta, grad))))), grad)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), alpha)), tf.math.divide_no_nan(tf.math.subtract(alpha, beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3012449500772063, 2.3025346313406527, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1010434553027153, 0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9735680988856725, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11866666376590729, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0], [0, 0, 1, 1], [0, 1, 7, 6, 1, 7], [1, 2], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [4, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1, 1], [8], [0], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 3, 9, 4, 4, 8], [1, 1, 2], [28]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.pow(alpha, tf.math.pow(tf.math.sqrt(alpha), beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1], [], [2, 3, 1, 2, 2], [6, 42, 84], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [68, 59], [1, 0], [1, 1], [2, 6], [6], [6], [1, 0, 0, 1, 1], [3, 0, 1, 4, 7, 1, 2, 1, 5, 0, 4, 0, 4, 8, 9, 5, 9], [1, 1], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [4, 2, 0, 9, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 0, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 4, 7, 5, 8, 0, 9, 9, 3, 5, 3, 2, 2, 2, 8, 3, 2, 5, 9, 1, 3, 4, 8, 1, 2, 1, 4, 7, 6, 9, 5, 0, 6], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 0, 3, 0, 4, 3, 4, 4, 2, 0, 0, 3, 2, 1, 1, 2, 3, 5, 1, 3, 4, 1, 1, 3, 0, 2], [68, 59, 20, 1, 56, 58, 64, 43, 50, 47, 80, 20], [1, 0], [1, 1], [8], [1], [6], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 31, 15, 8, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta))))), tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))))))), tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 1, 5, 3, 1, 3, 1, 0, 3, 5, 3, 3, 6, 0, 9, 2, 6, 4, 8, 2, 4, 0, 3, 3, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 9, 2, 5, 6, 2, 4, 5, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 1, 3, 0, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 1, 4, 3, 3, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [], [0, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 77, 77, 47, 30, 10, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), grad)), beta)), grad)))), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), grad), beta)), tf.math.add(beta, grad)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), alpha))), tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), beta), tf.math.add(tf.math.add(beta, alpha), alpha))))), beta))))), tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(alpha), grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [1.8469918897850124e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1398758441209793, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 1, 2, 3, 2, 5, 9, 0, 3, 5, 2, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 3, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1, 1], [8], [0], [52], [1, 1, 1], [7, 7, 5], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [0], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [4, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1, 1], [8], [1], [96], [0, 1, 0, 1, 1, 1], [7, 7, 5], [3, 3, 0], [40]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027675704807415, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [9, 2, 8, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 5, 0, 2, 4, 3, 8, 4, 2, 5, 1, 0, 1, 9, 2, 2, 0, 7, 1, 7, 6, 1, 1, 4, 2, 8, 3, 2, 2, 9, 5, 2, 1, 8, 0, 7, 7, 0, 2, 9, 9, 4], [1, 2, 2, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 0, 4, 0, 1, 3, 0, 2, 1, 2], [68, 41, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20, 22, 94], [0, 0], [1, 1], [8], [1], [52], [1, 1, 1], [7, 7, 5], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1], [1], [0, 1, 7, 6, 1, 7], [3, 3], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 0, 3, 2, 0, 4, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 0, 0, 9, 2, 4, 6, 8, 2, 9, 7, 5, 2, 2, 5, 9, 9, 5, 3, 1, 2, 3, 8, 3, 2, 2, 9, 1, 3, 4, 2, 0], [1, 2, 0, 1, 3, 3, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 6, 20, 13, 98, 99, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [2], [], [0, 1, 1], [0], [3, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [3], [6, 42, 84], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [5, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 0, 1], [0, 8], [3, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2, 3, 1], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 2, 4, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 3, 8, 0, 7, 9, 1, 4, 3, 2, 2, 4, 9, 6, 2, 5, 9, 1, 5, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 4], [1, 2, 3, 2, 1, 2, 3, 0, 0, 4, 1, 3, 2, 4, 2, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 2, 3, 4, 0, 1, 3, 0, 2], [68, 59, 39, 1, 56, 3, 92, 43, 83, 16, 82, 20], [0, 0, 1], [0, 0], [8, 0], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.0714285746216774, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3019429451722386, 2.3022938539890205, 2.298839290490665, 2.2992955188489215, 2.299268912078682, 2.298800477892133, 2.2990898038292005, 2.298907070584411, 2.29852588402518, 2.299693279671962, 2.2991717498473454, 2.2985707441608842, 2.299888222209057, 2.2993800231037738, 2.299851798047605], "accuracy": [0.0952318087220192, 0.09232597798109055, 0.09774138033390045, 0.09311848133802414, 0.09694888442754745, 0.09576013684272766, 0.1018359512090683, 0.10368511080741882, 0.10130762308835983, 0.09893012791872025, 0.10249637067317963, 0.10130762308835983, 0.09972262382507324, 0.10606260597705841, 0.10738343745470047], "val_loss": [1.969532081059047, 1.9687621252877372, 1.9684879439217704, 1.9683386257716589, 1.968334129878453, 1.9682751383100237, 1.9681743213108607, 1.9683106286185128, 1.9685100827898299, 1.9686411448887415, 1.9688776561192103, 1.9691897119794572, 1.9694384166172572, 1.9697073527744837, 1.9700259481157576], "val_accuracy": [0.05666666850447655, 0.0689999982714653, 0.07233333587646484, 0.07866666465997696, 0.08166666328907013, 0.0860000029206276, 0.09033333510160446, 0.09399999678134918, 0.09333333373069763, 0.09433333575725555, 0.09066666662693024, 0.08399999886751175, 0.08166666328907013, 0.08033332973718643, 0.07733333110809326]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [1, 3], [], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [8, 2, 0, 3, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 0, 0, 9, 0, 4, 6, 8, 2, 9, 7, 5, 2, 2, 5, 9, 9, 5, 3, 1, 2, 3, 8, 3, 2, 2, 9, 1, 3, 4, 2, 0], [1, 2, 1, 2, 2, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [0], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3024691555399572, 2.304290849802564, 2.301428168661732, 2.3023326528889547, 2.302367569511876, 2.302156515534622], "accuracy": [0.09417514503002167, 0.08796724677085876, 0.09166556596755981, 0.08374059200286865, 0.08968432247638702, 0.09008057415485382], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 1, 8, 3, 2, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 2, 0, 2, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 2, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 3, 0, 1, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 2, 0, 1, 3, 0, 2, 1], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1, 1], [8], [1], [], [1, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 92, 92, 56, 36, 10, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 77, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), alpha))))), tf.math.add(beta, grad)))), tf.math.add(beta, beta))))))), tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, beta)), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, grad)))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(alpha, beta), tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))))))), tf.math.add(beta, grad)))))), tf.math.square(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024691555399572, 2.304290849802564, 2.301428168661732, 2.3023326528889547, 2.302367569511876, 2.302156515534622], "accuracy": [0.09417514503002167, 0.08796724677085876, 0.09166556596755981, 0.08374059200286865, 0.08968432247638702, 0.09008057415485382], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]