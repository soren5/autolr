[{"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 3, 2, 3, 2, 3, 0, 1, 4, 2, 3, 0, 4, 4, 4, 3, 2, 3, 3, 3, 2, 0, 1, 2, 3, 5, 4, 3, 4, 0, 3, 3, 0, 2, 1, 2, 0, 0, 2], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.23885715007781982, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 26, 14, 5, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.square(beta))))), tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(beta, beta))))))), grad)))))))))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.401362296470861, 2.304173067340037, 2.3032127942989815, 2.3030415726627544, 2.302981304092619, 2.3030792153695665, 2.3029254294657324, 2.3029050400952746, 2.302567721483903, 2.2998706773917403, 2.4700647937843687, 2.3075766397457804, 2.3035172271123887, 2.303154724747387, 2.3030182538393418], "accuracy": [0.1732928305864334, 0.0944393053650856, 0.09879804402589798, 0.09694888442754745, 0.10038304328918457, 0.09774138033390045, 0.09668471664190292, 0.09826971590518951, 0.10606260597705841, 0.12957337498664856, 0.14080041646957397, 0.09932637959718704, 0.09628847241401672, 0.09430722147226334, 0.09774138033390045], "val_loss": [1.974759306226458, 1.9736683709280831, 1.9735732759748186, 1.9736608096531458, 1.973665509905134, 1.9737067903791154, 1.973555224282401, 1.9733799525669642, 1.9729230744498116, 1.9558910642351424, 1.9776748248508997, 1.9744131905691964, 1.973721640450614, 1.9737968444824219, 1.9737027032034737], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.10400000214576721, 0.14266666769981384, 0.17866666615009308, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [3], [52], [0, 1, 0, 0], [0, 8], [1, 1], []], "fitness": -0.22057142853736877, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.57739406635953, 2.33677821955456, 2.502590912586001, 2.405312896011024, 2.373461751260179, 2.3366660852914696, NaN, NaN, NaN, NaN], "accuracy": [0.18835029006004333, 0.09708096832036972, 0.11649715900421143, 0.09853387624025345, 0.10355303436517715, 0.13234710693359375, 0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.997382708958217, 1.9894606726510184, 1.991431713104248, 1.9880638803754533, 2.029893466404506, 3.5492351395743236, NaN, NaN, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.09733333438634872, 0.10000000149011612, 0.0976666659116745, 0.13899999856948853, 0.11900000274181366, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 3, 0, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.12600000202655792, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.401365036095894, 2.3041606265571786, 2.303221122196023, 2.303048544052239, 2.3030100055516214, 2.30310698970119, 2.302961154148453, 2.3029522891719156], "accuracy": [0.17316074669361115, 0.09351472556591034, 0.09642054885625839, 0.09853387624025345, 0.10117553919553757, 0.09721305221319199, 0.09602430462837219, 0.09760929644107819], "val_loss": [1.974762031010219, 1.9736755234854562, 1.973578998020717, 1.9736659186226981, 1.9736734117780412, 1.9736948694501604, 1.9735778399876185, 1.973471232822963], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10233332961797714, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 3, 0, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 47, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0, 8], [1, 1], []], "fitness": -0.12085714191198349, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.4013916514316933, 2.304165112296777, 2.3032233516663894, 2.3030456717555015, 2.3029694585216958, 2.3030771364893, 2.302954183262825, 2.3029753856686646], "accuracy": [0.17342491447925568, 0.09457138925790787, 0.09959053993225098, 0.09708096832036972, 0.1018359512090683, 0.09734513610601425, 0.09589222073554993, 0.09985470771789551], "val_loss": [1.974766458783831, 1.9736809049333846, 1.973578998020717, 1.9736629213605608, 1.9736627170017786, 1.973719528743199, 1.9735894203186035, 1.9734631947108678], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 6, 0, 3, 6, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.12085714191198349, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 28, 18, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.subtract(grad, tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.sqrt(grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.4013918403778662, 2.304165112296777, 2.3032233696477666, 2.3030453321877378, 2.3029622083736245, 2.303067865372964, 2.302951161446683, 2.3029684516275406], "accuracy": [0.17342491447925568, 0.09457138925790787, 0.09959053993225098, 0.09642054885625839, 0.10276053100824356, 0.09840179979801178, 0.09655263274908066, 0.09866596013307571], "val_loss": [1.9747665950230189, 1.9736808368137904, 1.9735793386186873, 1.973665714263916, 1.9736643518720354, 1.9737191881452287, 1.9735983439854212, 1.973471232822963], "val_accuracy": [0.09799999743700027, 0.10133333504199982, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2], [93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 9, 9, 2, 3, 3, 5, 9, 6, 3, 1, 3, 3, 0, 0, 4, 7, 2, 8, 0, 6, 4, 8, 5, 1, 0, 1, 1, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 6, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 3, 4, 3, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [1], [52], [1, 1, 1], [0], [0, 1], [3]], "fitness": -0.11571428924798965, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.301464322598666, 2.30251516988485, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9735680988856725, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11866666376590729, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0, 8], [1, 1], []], "fitness": -0.11314285546541214, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.553493382136867, 2.3356574062878477, 2.249050848141732, 2.2416247396956597, 2.2651075603876603, 2.2978409333015555, 2.333596002597378, 2.3426725236479284, 2.336228531711625, 2.3431698882647507], "accuracy": [0.1884823739528656, 0.10711926966905594, 0.16193369030952454, 0.14832915365695953, 0.14370624721050262, 0.1274600476026535, 0.10976093262434006, 0.09906221181154251, 0.09840179979801178, 0.09906221181154251], "val_loss": [1.9962260382516044, 1.9816758292061942, 1.8466429710388184, 1.8756541524614607, 1.8802664620535714, 1.9635048593793596, 2.001840727669852, 2.0222254480634416, 2.0219118935721263, 1.9915190424237932], "val_accuracy": [0.10266666859388351, 0.09799999743700027, 0.1706666648387909, 0.1589999943971634, 0.17866666615009308, 0.09733333438634872, 0.09799999743700027, 0.10000000149011612, 0.09733333438634872, 0.10100000351667404]}}, {"genotype": [[0], [0, 0], [0, 1], [0, 1, 7, 6, 1, 7], [0], [6, 42, 84], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [1, 1, 1], [0, 8], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302126224188048, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10196803510189056, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 0, 1, 1], [0, 6], [3, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, alpha))", "other_info": {"loss": [2.3027100048800815, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2, 3], [93], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 1, 2, 5, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 6, 3, 6, 3, 8, 2, 6, 8, 1, 9, 2, 3, 6, 7, 1, 7, 6, 9, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 3, 3, 0, 0, 4, 3, 3, 0, 4, 4, 3, 3, 3, 3, 0, 3, 2, 1, 1, 3, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 80, 64, 4, 50, 16, 82, 20], [0, 0], [1], [8], [1], [52], [1, 1, 1], [0], [0, 1], [10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 14, 8, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.math.multiply(grad, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024698857854244, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10408136248588562, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [6, 42, 84], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1, 1], [8], [1], [52], [1, 1, 1], [7, 7, 5], [0, 1], [19]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 30, 16, 7, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.square(alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(grad, tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))), tf.math.add(beta, grad))))))), tf.math.divide_no_nan(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027100048800815, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [93], [1, 1, 1], [0, 8], [0, 1], [31]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027100048800815, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1], [0, 1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1], [8], [3], [52], [0, 1, 0, 0], [0, 8], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [8, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 0], [2, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [3], [52], [0, 0, 1, 0, 0, 1, 0, 1, 1], [7, 0, 4, 5, 1], [1, 1, 2, 2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.square(alpha), tf.math.subtract(beta, beta)))", "other_info": {"loss": [2.3030431489147105, 2.303023132744435, 2.3029231350608645, 2.3028834036485852, 2.302800679613082, 2.3030076007706977, 2.302920247648433, 2.3031035751289366], "accuracy": [0.09760929644107819, 0.09391097724437714, 0.09721305221319199, 0.09879804402589798, 0.09708096832036972, 0.09126931428909302, 0.09219389408826828, 0.09602430462837219], "val_loss": [1.9736910547528947, 1.973600115094866, 1.9736042703901018, 1.9736791338239397, 1.9736742973327637, 1.9737495694841658, 1.9736906460353307, 1.9736571993146623], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 77, 77, 46, 31, 9, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.negative(beta))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(grad, beta))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, grad))), tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), beta)), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1], [1], [0, 1, 7, 6, 1, 7], [2, 3], [93], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [0, 3, 1, 1, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [1], [52], [0, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 15, 7, 3, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, alpha)))))))), tf.math.multiply(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13829085230827332, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1], [0, 1], [0, 1, 7, 6, 1, 7], [2], [], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 1], [0, 0], [8, 2], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1], [0, 1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2], [93], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [4, 1, 5, 3, 4, 0, 9, 8, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 0, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [53, 59, 37, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [1], [], [1, 1, 1], [0], [3, 3], []], "fitness": -0.06771428883075714, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(alpha, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026759522450266, 2.3008305660847896, 2.300765188567595, 2.300365026144225, 2.3002457660911357, 2.300561429896548, 2.300565701560133, 2.3002727290878933, 2.300258480940418, 2.300087921529036, 2.3005367537783026, 2.2994977585501943, 2.300928781155692, 2.299865249346087, 2.300214860700991], "accuracy": [0.08955223858356476, 0.09113723784685135, 0.09536388516426086, 0.09311848133802414, 0.09906221181154251, 0.09602430462837219, 0.10038304328918457, 0.09840179979801178, 0.09259014576673508, 0.09509972482919693, 0.09457138925790787, 0.10236428678035736, 0.08849557489156723, 0.09787346422672272, 0.09853387624025345], "val_loss": [1.9698872566223145, 1.969560214451381, 1.9693574224199568, 1.9692789486476354, 1.969320229121617, 1.9694134848458427, 1.9693811961582728, 1.969374179840088, 1.9694529260907854, 1.9695544924054826, 1.9697228159223283, 1.9700023787362235, 1.9702025822230749, 1.9704724720546178, 1.9706686564854212], "val_accuracy": [0.054999999701976776, 0.060333333909511566, 0.06499999761581421, 0.0716666653752327, 0.0729999989271164, 0.07466666400432587, 0.07766667008399963, 0.0820000022649765, 0.08233333379030228, 0.08266666531562805, 0.0793333351612091, 0.07633333653211594, 0.07133333384990692, 0.07133333384990692, 0.070333331823349]}}, {"genotype": [[0], [0, 1, 1], [0, 1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0, 1], [0, 0], [8, 5], [1], [52], [0, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.03914285823702812, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [2.3030838678541627, 2.301926525529381, 2.30239653609385, 2.3025118105793516, 2.30243311383705, 2.302760325245271], "accuracy": [0.08915598690509796, 0.08757099509239197, 0.08968432247638702, 0.08757099509239197, 0.09391097724437714, 0.08836349099874496], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 3, 0, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [2], [3, 1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha)", "other_info": {"loss": [2.3030838678541627, 2.301926525529381, 2.30239653609385, 2.3025118105793516, 2.30243311383705, 2.302760325245271], "accuracy": [0.08915598690509796, 0.08757099509239197, 0.08968432247638702, 0.08757099509239197, 0.09391097724437714, 0.08836349099874496], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]