[{"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 0, 0, 8, 8, 2, 3, 3, 3, 8, 0, 6, 3, 1, 4, 5, 0, 0, 4, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 64, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3162856996059418, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 24, 16, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.pow(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), tf.math.multiply(grad, tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531254977314558, 2.305444166219749, 2.303653429968797, 2.3034761285485845, 2.3028217842392777, 2.3031277859672312, 2.303239099668584, 2.3030727940338824, 2.303014926528729, 2.3029132601040514, 2.302493182502135, 2.2813088092128786, 2.2822181568201176, 2.303350283186024, 2.302971869569334, 2.3031125857199912, 2.3030805802222463], "accuracy": [0.1484612375497818, 0.09972262382507324, 0.09615638852119446, 0.09787346422672272, 0.09853387624025345, 0.09919429570436478, 0.10196803510189056, 0.09391097724437714, 0.09496764093637466, 0.09972262382507324, 0.09906221181154251, 0.13961167633533478, 0.11213842034339905, 0.1002509593963623, 0.09879804402589798, 0.09959053993225098, 0.09272222965955734], "val_loss": [1.97638886315482, 1.9742086955479212, 1.9736460958208357, 1.973571504865374, 1.9735630580357142, 1.9735684394836426, 1.9735892840794154, 1.9736484118870325, 1.9736661229814803, 1.9736345154898507, 1.9723954881940569, 1.6676175253731864, 1.9740667343139648, 1.9737097876412528, 1.9737606048583984, 1.9736364228384835, 1.9736556325639998], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.1770000010728836, 0.09799999743700027, 0.10100000351667404, 0.3166666626930237, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.10100000351667404, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1], [5, 1, 4, 0, 8, 0, 2, 2, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 1, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 5, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 2, 4, 4, 4, 3, 2, 4, 0, 3, 2, 2, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 0, 2, 2, 0, 1, 2], [68, 43, 20, 34, 56, 37, 37, 43, 50, 16, 82, 20, 50, 80], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3125714361667633, "mapping_values": [1, 1, 1, 0, 1, 0, 99, 99, 59, 40, 11, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.sqrt(grad)), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, beta)))), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.math.pow(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, beta))), grad))))), tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.square(grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), beta), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), beta)), tf.math.add(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.negative(grad), tf.math.add(beta, grad))))))))))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), beta)), beta)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531234298226635, 2.305451917642017, 2.303677079857396, 2.3035682291953696, 2.302897784152854, 2.303126091371989, 2.3032579938764854, 2.302987638292626, 2.3026772104690827, 2.2958196409311373, 10.837979019404623, 2.319824740241437, 2.3067894926034636, 2.304137447207532, 2.3033269228259443], "accuracy": [0.14832915365695953, 0.09919429570436478, 0.09668471664190292, 0.09800554811954498, 0.09840179979801178, 0.09549596905708313, 0.10091137140989304, 0.09734513610601425, 0.10011887550354004, 0.1402720957994461, 0.1320829540491104, 0.1014397069811821, 0.10817593336105347, 0.09998679161071777, 0.09430722147226334], "val_loss": [1.9762862750462122, 1.9742228644234794, 1.9736715044294084, 1.9735706193106515, 1.9735510689871651, 1.973555088043213, 1.97356230872018, 1.9734936441693987, 1.9726457595825195, 1.9437554904392786, 1.997893946511405, 1.9800264494759696, 1.975076539175851, 1.9740003858293806, 1.9738013403756278], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.25099998712539673, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 8, 0, 2, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 4, 3, 1, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 2, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [49, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.31200000643730164, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 24, 16, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.5312342667356065, 2.305451980624075, 2.303677079857396, 2.3035682291953696, 2.302897815643883, 2.30312605988096, 2.3032579938764854, 2.302987575310569, 2.302677178978054, 2.295802522943225, 12.572400584212698, 2.320683324184274, 2.307051737011542, 2.3042226488941995, 2.3033507336337], "accuracy": [0.14832915365695953, 0.09919429570436478, 0.09668471664190292, 0.09800554811954498, 0.09840179979801178, 0.09549596905708313, 0.10091137140989304, 0.09734513610601425, 0.10011887550354004, 0.1402720957994461, 0.1286487877368927, 0.10210011899471283, 0.10817593336105347, 0.1002509593963623, 0.09457138925790787], "val_loss": [1.9762862750462122, 1.9742228644234794, 1.9736715044294084, 1.9735706193106515, 1.9735510689871651, 1.973555019923619, 1.973562240600586, 1.9734936441693987, 1.9726457595825195, 1.9435454096112932, 1.9989915575299944, 1.9803547859191895, 1.975161416190011, 1.9740165301731654, 1.9737988880702428], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.2513333261013031, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 3, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [4, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.21942856907844543, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531225966330234, 2.3054341901767335, 2.3037021842536327, 2.303495570007584, 2.3028562810238027, 2.30313498339932, 2.3032554512278374, 2.3030639473221415, 2.3030211939047733, 2.3028632538618745, 2.3021688359272776, 2.285796902986203, 2.332383720204972, 2.3040934668681907, 2.303042559213705, 2.302966404238303, 2.3029751338349076], "accuracy": [0.14832915365695953, 0.09932637959718704, 0.09602430462837219, 0.09879804402589798, 0.1018359512090683, 0.09787346422672272, 0.10196803510189056, 0.09430722147226334, 0.09655263274908066, 0.1002509593963623, 0.09642054885625839, 0.14093250036239624, 0.12851670384407043, 0.09655263274908066, 0.09721305221319199, 0.09787346422672272, 0.09126931428909302], "val_loss": [1.9762862069266183, 1.9742281777518136, 1.9736509323120117, 1.9735589027404785, 1.9735631942749023, 1.9735715729849679, 1.9735868998936243, 1.9736409187316895, 1.9736308370317732, 1.9735003880092077, 1.9712656566074915, 1.9514728954860143, 1.9753578730991908, 1.9739721161978585, 1.973778315952846, 1.973611491067069, 1.973623820713588], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.1433333307504654, 0.09799999743700027, 0.1456666737794876, 0.1756666600704193, 0.10133333504199982, 0.10133333504199982, 0.09799999743700027, 0.10100000351667404, 0.10100000351667404]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 8, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 1, 1], [0, 0], [8, 4], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.19142857193946838, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 4, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.pow(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531234298226635, 2.305451949133046, 2.3036771113484242, 2.3035681977043407, 2.302897784152854, 2.3031260824285367, 2.3032606725348868, 2.3030305797114363, 2.302743288598686, 2.2998045558045175, 9.673707009306547, 2.3102060651672107, 2.3047509968099718, 2.3043271628006843, 2.3034444819226034], "accuracy": [0.14832915365695953, 0.09919429570436478, 0.09668471664190292, 0.09800554811954498, 0.09840179979801178, 0.09549596905708313, 0.1002509593963623, 0.09694888442754745, 0.09694888442754745, 0.1266675442457199, 0.13393211364746094, 0.10196803510189056, 0.10315678268671036, 0.09232597798109055, 0.10196803510189056], "val_loss": [1.9762862750462122, 1.9742228644234794, 1.9736715044294084, 1.9735706193106515, 1.9735510689871651, 1.9735554967607771, 1.9735593114580428, 1.9735420090811593, 1.9729386738368444, 1.9342402730669295, 1.9839587211608887, 1.975792067391532, 1.974358354296003, 1.9739792006356376, 1.9739673478262765], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.10499999672174454, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 3, 2, 3, 2, 3, 0, 1, 4, 2, 3, 0, 4, 4, 4, 3, 2, 3, 3, 3, 2, 0, 1, 2, 3, 5, 4, 3, 4, 0, 3, 3, 0, 2, 1, 2, 0, 0, 2], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.16857142746448517, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.5312525148105784, 2.305396017035032, 2.303685179318514, 2.303474618490771, 2.3028309151890443, 2.3031266845370078, 2.30324743137604, 2.303046527492718, 2.3029483100599886, 2.3023427721531697, 2.3364160417046103, 35.80809610123963, 2.3114558070831137, 2.304995756359652, 2.3033030387070736], "accuracy": [0.14859332144260406, 0.09760929644107819, 0.09721305221319199, 0.09826971590518951, 0.10011887550354004, 0.09879804402589798, 0.10170386731624603, 0.09536388516426086, 0.09800554811954498, 0.11240258812904358, 0.13498876988887787, 0.1014397069811821, 0.09998679161071777, 0.09787346422672272, 0.09893012791872025], "val_loss": [1.9763165201459612, 1.9742165974208288, 1.9736528396606445, 1.973569733755929, 1.973559788295201, 1.9735659190586634, 1.9735794748578752, 1.973616600036621, 1.9734345844813757, 1.97177335194179, 3.366364138466971, 1.985973698752267, 1.976858070918492, 1.9743992260524206, 1.9739162581307548], "val_accuracy": [0.09600000083446503, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.11933333426713943, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.14142857491970062, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531260690700424, 2.305460861692528, 2.303644893727109, 2.3034436883486777, 2.3028358681925285, 2.3031374979579704, 2.303422179629601, 2.3031128943635646, 2.3030138996062797, 2.3028952419135895, 2.3025982013987574], "accuracy": [0.1484612375497818, 0.09919429570436478, 0.09602430462837219, 0.1002509593963623, 0.09998679161071777, 0.09774138033390045, 0.09747721254825592, 0.09325055778026581, 0.09721305221319199, 0.10051512718200684, 0.09694888442754745], "val_loss": [1.97638886315482, 1.9742103985377721, 1.9736480031694685, 1.973564624786377, 1.9735591752188546, 1.9735517501831055, 1.9735868317740304, 1.9736449377877372, 1.9736575399126326, 1.973783220563616, 1.9726129259381975], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.09799999743700027, 0.10100000351667404]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 6, 4, 0, 3, 0, 9, 3, 5, 2, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 3, 2, 1, 0, 3, 0, 1, 4, 2, 3, 0, 4, 4, 4, 3, 2, 3, 3, 3, 2, 0, 1, 2, 3, 5, 4, 3, 4, 0, 3, 3, 0, 2, 1, 2, 0, 0, 2], [68, 43, 20, 73, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.5312439094145915, 2.3054417310184916, 2.3037089094462537, 2.3034968876237207, 2.30287487269739, 2.303134520796107, 2.3033311651083994, 2.3030595700061554, 2.3029826790539185, 2.302680317562931, 2.3005193699431254, 2.2870958842747497, 2.306554661576837, 2.303870129437258, 2.3029095905174466, 2.3030967201932766], "accuracy": [0.148064985871315, 0.09760929644107819, 0.0948355570435524, 0.09668471664190292, 0.09945846349000931, 0.09853387624025345, 0.09945846349000931, 0.09470347315073013, 0.09470347315073013, 0.10355303436517715, 0.10632677376270294, 0.15242372453212738, 0.10276053100824356, 0.09800554811954498, 0.09919429570436478, 0.09787346422672272], "val_loss": [1.9763343674795968, 1.9742172786167689, 1.9736497061593192, 1.973576477595738, 1.9735580853053503, 1.973548752920968, 1.973590918949672, 1.9736276354108537, 1.9735730716160365, 1.9732433727809362, 1.9593021529061454, 1.9764116832188197, 1.9743377821786063, 1.9738500458853585, 1.9737937109810966, 1.9735924175807409], "val_accuracy": [0.0963333323597908, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872, 0.09799999743700027, 0.23733332753181458, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09866666793823242, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [5, 1, 0, 0, 3, 6, 9, 3, 5, 3, 4, 9, 2, 3, 3, 2, 2, 0, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 0, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [3], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10999999940395355, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(alpha, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531234374245979, 2.3054519525025863, 2.3036867081764716, 2.3034842234435033, 2.3028538409414354, 2.3031240835984654, 2.303274877413688, 2.30304510636557, 2.3029462516173993, 2.302204037890411, 2.3615026290406327, 2.3214863770988403, 2.304035971272088, 2.3031681161499327], "accuracy": [0.14832915365695953, 0.09840179979801178, 0.09615638852119446, 0.09694888442754745, 0.09919429570436478, 0.09813763201236725, 0.09906221181154251, 0.09430722147226334, 0.09602430462837219, 0.11028926074504852, 0.16378284990787506, 0.09985470771789551, 0.09694888442754745, 0.09721305221319199], "val_loss": [1.9762859344482422, 1.974227019718715, 1.9736523628234863, 1.973571504865374, 1.9735604694911413, 1.9735527038574219, 1.9735849925449915, 1.9735839707510812, 1.9733544077192033, 1.9716696739196777, 1.998591695513044, 1.9754485402788435, 1.973938260759626, 1.9737021582467216], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.17633333802223206, 0.10833333432674408, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [6, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [59, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [4], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10685714334249496, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.531225493964802, 2.3054341901767335, 2.3037022157446616, 2.303495570007584, 2.302856249532774, 2.30313498339932, 2.303255356754751, 2.3030639473221415, 2.3030211939047733, 2.3028630289529466, 2.3021717597433384, 2.3356730752790513, 2.3094501466389583, 2.30391780279253], "accuracy": [0.14832915365695953, 0.09932637959718704, 0.09602430462837219, 0.09879804402589798, 0.1018359512090683, 0.09787346422672272, 0.10196803510189056, 0.09430722147226334, 0.09655263274908066, 0.1002509593963623, 0.09589222073554993, 0.15770703554153442, 0.09549596905708313, 0.09760929644107819], "val_loss": [1.9762862069266183, 1.9742281777518136, 1.9736509323120117, 1.9735589708600725, 1.9735631942749023, 1.9735715729849679, 1.9735868998936243, 1.9736408506120955, 1.973630700792585, 1.9734824725559779, 1.9712916101728166, 1.9896036556788854, 1.974884033203125, 1.9738161223275321], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767, 0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.1433333307504654, 0.09799999743700027, 0.14033333957195282, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0], [0, 1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 9, 4, 8, 8, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 3, 0, 2, 3, 2, 3, 0, 0, 4, 3, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07924976944923401, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 94, 46, 0, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 0, 1], [0, 5], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3018994572266234, 2.304049578041779, 2.3073715391160317, 2.3095034186582777, 2.3120362527177414, 2.3154807993607074, 2.3216028246251645, 2.328217796661504, 2.3345533630646704, 2.354457223325625, 2.414712693886183, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09126931428909302, 0.08981640636920929, 0.08294808864593506, 0.07991018146276474, 0.08136309683322906, 0.07779685407876968, 0.07396645098924637, 0.06987188011407852, 0.07013604789972305, 0.07845727354288101, 0.08387266844511032, 0.10342095047235489, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9714768954685755, 1.9726763452802385, 1.974320888519287, 1.976299217769078, 1.9786433492388045, 1.9811795779636927, 1.9845172337123327, 1.9891636712210519, 1.9964355060032435, 2.014923708779471, 2.378824915204729, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.030666666105389595, 0.028999999165534973, 0.0273333340883255, 0.03233333304524422, 0.0403333343565464, 0.05966666713356972, 0.07699999958276749, 0.09200000017881393, 0.10000000149011612, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [3], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 30, 16, 7, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.negative(beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(tf.math.sqrt(grad), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, beta)))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 5, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 3, 3, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08017434924840927, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1], [5, 1, 4, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 5, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 2, 2, 3, 2, 3, 0, 1, 4, 0, 3, 0, 4, 4, 4, 3, 2, 3, 3, 3, 2, 0, 1, 2, 3, 5, 4, 3, 4, 0, 3, 3, 0, 2, 1, 2, 0, 0, 2], [68, 43, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 43, 43, 28, 15, 5, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 65, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(beta)))))), tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), tf.math.add(beta, grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, grad))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [7.186698488823223, 2.429321044377206, 2.3709593286855646, 2.364989480353806, 2.3349865087192483, 2.3429694996376424, 2.3588582317134126], "accuracy": [0.16034869849681854, 0.11042134463787079, 0.1006472036242485, 0.10381719470024109, 0.1026284471154213, 0.09760929644107819, 0.1026284471154213], "val_loss": [2.1514626911708286, 2.000415802001953, 1.9901187760489327, 2.0235976491655623, 2.0396713529314314, 2.0118259702410017, 1.9867995807102747], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.09866666793823242]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [5, 1, 1, 0, 3, 0, 9, 3, 5, 3, 4, 9, 6, 3, 1, 4, 8, 5, 0, 9, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 5, 1, 1, 4, 7, 2, 8, 5, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 2, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 61, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, alpha), tf.math.subtract(tf.math.negative(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [7.185526637857175, 2.432045590466575, 2.3708280170472418, 2.3639989937175265, 2.3342486694425624, 2.3422437173626474, 2.3576806101737917], "accuracy": [0.16034869849681854, 0.10949676483869553, 0.1006472036242485, 0.10381719470024109, 0.09998679161071777, 0.09774138033390045, 0.10157178342342377], "val_loss": [2.152758462088449, 1.9980696950639998, 1.9917328017098563, 2.0230556896754672, 2.0380736078534807, 2.010613509586879, 1.9862447466169084], "val_accuracy": [0.10066666454076767, 0.10133333504199982, 0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.10066666454076767, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 4, 0, 8, 0, 2, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 2, 3, 2, 2, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 94, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0], [1], [8], [1], [52], [0, 0, 1, 0, 1], [0, 3, 5], [1, 1], []], "fitness": -0.04771428555250168, "mapping_values": [1, 1, 1, 0, 1, 0, 45, 45, 27, 18, 5, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(grad, tf.math.subtract(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, beta))), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))))))))))))), tf.math.add(beta, grad))), tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(alpha)))", "other_info": {"loss": [2.301375361355525, 2.301895232516163, 2.303027860335135, 2.30267543566619, 2.3019491257904985, 2.3018452020573847, 2.302624074711445, 2.303220101666252, 2.301560690531783, 2.303541935949813, 2.3035455709592685, 2.301275874456442, 2.3020932832178014, 2.3014051922717664, 2.3027141959266326, 2.302384989813665, 2.3003653412749503, 2.3015583232881656, 2.3019963423683976, 2.3027913900744945, 2.301048963329087, 2.3005074515334525, 2.3011549717368167, 2.300307598285325, 2.3008009480164113, 2.300287658291848, 2.300676697454023, 2.301286206977904, 2.3006548434987972, 2.300208777327028, 2.3007492307091844, 2.300017737914007, 2.3020429548223995, 2.299492454327266, 2.2997288211083857, 2.300114801389477, 2.2994646515592434, 2.2997104024150197, 2.3008371860343924, 2.300085478203093, 2.2992422996085664, 2.3006106948399068, 2.298302334376204, 2.300691716596356, 2.2987391350685313, 2.298404117695581, 2.2995030827699257, 2.2993066615085906, 2.299115706648982, 2.3002002180968892, 2.298156217797526, 2.2992836370633154, 2.298566237857644, 2.2989268419119377], "accuracy": [0.09311848133802414, 0.09391097724437714, 0.09113723784685135, 0.08981640636920929, 0.09206181764602661, 0.09377889335155487, 0.09311848133802414, 0.08638224750757217, 0.09457138925790787, 0.08757099509239197, 0.0878351628780365, 0.09826971590518951, 0.08955223858356476, 0.09430722147226334, 0.08968432247638702, 0.09457138925790787, 0.09589222073554993, 0.09008057415485382, 0.09338264167308807, 0.08836349099874496, 0.08955223858356476, 0.09615638852119446, 0.09615638852119446, 0.09576013684272766, 0.09893012791872025, 0.09272222965955734, 0.0956280529499054, 0.09272222965955734, 0.09655263274908066, 0.09311848133802414, 0.09615638852119446, 0.09470347315073013, 0.0936468094587326, 0.09496764093637466, 0.09813763201236725, 0.09470347315073013, 0.09985470771789551, 0.09549596905708313, 0.09747721254825592, 0.09945846349000931, 0.09919429570436478, 0.09853387624025345, 0.10249637067317963, 0.0882314071059227, 0.10011887550354004, 0.09985470771789551, 0.09351472556591034, 0.10487385839223862, 0.09430722147226334, 0.09470347315073013, 0.10328886657953262, 0.09747721254825592, 0.10157178342342377, 0.09655263274908066], "val_loss": [1.9703946113586426, 1.9703194754464286, 1.970240865434919, 1.970165525163923, 1.9700878007071358, 1.970008373260498, 1.9699342591421944, 1.9698552404131209, 1.9697749955313546, 1.9696932520185197, 1.9696176392691476, 1.9695453643798828, 1.9694725445338659, 1.9693952287946428, 1.9693187304905482, 1.9692514964512415, 1.9691853523254395, 1.9691136905125208, 1.9690429142543249, 1.9689700262887138, 1.9689055170331682, 1.968836443764823, 1.9687611716134208, 1.9686980928693498, 1.968632766178676, 1.9685681888035365, 1.968508039202009, 1.9684437343052454, 1.968374524797712, 1.9683139664786202, 1.9682533400399345, 1.968191283089774, 1.9681323596409388, 1.968064308166504, 1.968005657196045, 1.9679474830627441, 1.9678895132882255, 1.9678295680454798, 1.9677643775939941, 1.967703001839774, 1.9676403318132674, 1.9675822939191545, 1.9675252096993583, 1.9674604960850306, 1.9674016407557897, 1.9673468726021903, 1.9672927856445312, 1.9672440120152064, 1.9671963964189803, 1.967144216809954, 1.9670954431806291, 1.9670440810067313, 1.9669918332781111, 1.9669442858014787], "val_accuracy": [0.04766666516661644, 0.04866666719317436, 0.04899999871850014, 0.04933333396911621, 0.05066666752099991, 0.050999999046325684, 0.05166666582226753, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05299999937415123, 0.054999999701976776, 0.054999999701976776, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05700000002980232, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.05999999865889549, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.061666667461395264, 0.061666667461395264, 0.06233333423733711, 0.06266666948795319, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06466666609048843, 0.06466666609048843, 0.06533333659172058, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.0689999982714653, 0.06866666674613953, 0.06966666877269745, 0.06933332979679108, 0.07000000029802322, 0.07066666334867477, 0.07133333384990692, 0.0716666653752327, 0.07199999690055847, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07199999690055847]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 1, 4, 0, 3, 4, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 9, 4, 6, 5, 1, 3, 6, 4, 8, 0, 2, 3, 1, 5, 2, 2, 6, 7, 0, 7, 6, 1, 2, 4, 7, 2, 8, 2, 2, 9, 2, 2, 2, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 3, 4, 4, 3, 2, 4, 0, 3, 2, 0, 1, 2, 3, 5, 4, 3, 3, 1, 1, 3, 0, 2, 1, 2, 3, 2], [68, 43, 20, 1, 56, 65, 64, 59, 50, 69, 76, 20, 50, 49], [0, 0, 0, 0], [0, 0, 1, 1], [8, 6], [1, 3], [52], [1, 1, 1], [0, 8], [3, 1], [2]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 43, 43, 27, 16, 7, 4, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), tf.math.add(beta, beta))), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, beta)), grad))))), tf.math.add(beta, tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014194707136113, 2.3020268371155264, 2.3032473249363625, 2.3029757751812, 2.302343935368792, 2.3023243071679915], "accuracy": [0.09285431355237961, 0.0936468094587326, 0.08994849026203156, 0.08968432247638702, 0.09074098616838455, 0.09219389408826828], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [1], [93], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 0, 4, 9, 1, 9, 3, 5, 3, 8, 9, 6, 6, 6, 4, 6, 4, 0, 8, 6, 2, 1, 6, 6, 4, 8, 3, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 1, 3, 2, 3, 0, 0, 1, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0, 5, 0], [32, 43, 29, 34, 56, 43, 64, 43, 50, 16, 82, 20, 50, 80], [0, 0, 0, 0, 1, 1], [0, 0, 0, 1], [8, 7, 6], [1], [52], [1, 1, 1], [0], [1, 1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3014194707136113, 2.3020268371155264, 2.3032473249363625, 2.3029757751812, 2.302343935368792, 2.3023243071679915], "accuracy": [0.09285431355237961, 0.0936468094587326, 0.08994849026203156, 0.08968432247638702, 0.09074098616838455, 0.09219389408826828], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 0, 1, 1], [0, 0, 1, 1], [0, 1, 7, 6, 1, 7], [2, 2], [93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [3, 1, 9, 0, 3, 2, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [51, 43, 20, 24, 13, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3014194707136113, 2.3020268371155264, 2.3032473249363625, 2.3029757751812, 2.302343935368792, 2.3023243071679915], "accuracy": [0.09285431355237961, 0.0936468094587326, 0.08994849026203156, 0.08968432247638702, 0.09074098616838455, 0.09219389408826828], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]