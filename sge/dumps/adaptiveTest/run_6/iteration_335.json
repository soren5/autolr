[{"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8345714211463928, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.9246727886642085, 1.2621245010890163, 0.8530743667367994, 0.7442100400843435, 0.6629946769000264, 0.6204032618938704, 0.6006618927671704, 0.55725175541437, 0.5146517181566536, 0.4953881416850165, 0.48057693492593134, 0.46761845062280044, 0.4569562316814733, 0.4326877147923718, 0.4206011550907666, 0.4141033509537812, 0.3998029702107479, 0.3726336672644274, 0.39625470921851863, 0.36809490481545315, 0.35157251631610537, 0.3437238371863483, 0.3194849815791892, 0.3236604134609135, 0.31109237038322396, 0.3031414580256979, 0.29801021704678804, 0.285317989199342, 0.2829249972097941, 0.26973251754959515, 0.2581159974117604, 0.25304524226746683, 0.24959322092177577, 0.25150760750429835, 0.23983843531102836], "accuracy": [0.3535860478878021, 0.5811649560928345, 0.6740192770957947, 0.720380425453186, 0.748249888420105, 0.7633073329925537, 0.7732135653495789, 0.7889314293861389, 0.8117818236351013, 0.8144234418869019, 0.8230088353157043, 0.8289526104927063, 0.8314621448516846, 0.8451988101005554, 0.8442742228507996, 0.8455950617790222, 0.8508783578872681, 0.8623695969581604, 0.8507462739944458, 0.8627657890319824, 0.8685774803161621, 0.8672566413879395, 0.8813894987106323, 0.8837670087814331, 0.885219931602478, 0.886672854423523, 0.8835028409957886, 0.8918240666389465, 0.8919561505317688, 0.9005415439605713, 0.9000132083892822, 0.9019944667816162, 0.9038436412811279, 0.9030511379241943, 0.9085986018180847], "val_loss": [1.389845609664917, 0.6524816240583148, 0.5931685141154698, 0.49235805443355013, 0.4896050010408674, 0.4411618879863194, 0.4276642543928964, 0.3939188037599836, 0.3885650038719177, 0.38697872843061176, 0.36018690892628263, 0.3919815591403416, 0.352854107107435, 0.35163088355745586, 0.3523707815579006, 0.3503718205860683, 0.33113089629582, 0.36114920888628277, 0.3509201066834586, 0.3188773053033011, 0.32629782812935965, 0.32632687262126375, 0.32918653317860197, 0.3199490989957537, 0.31163174765450613, 0.3152089885302952, 0.30770557267325266, 0.3036225863865444, 0.312061037336077, 0.29521208150046213, 0.3073697771344866, 0.3033436877386911, 0.32516740901129587, 0.3100229672023228, 0.2995747583253043], "val_accuracy": [0.45133334398269653, 0.7303333282470703, 0.734333336353302, 0.7833333611488342, 0.7833333611488342, 0.8076666593551636, 0.8119999766349792, 0.8289999961853027, 0.8366666436195374, 0.8333333134651184, 0.8443333506584167, 0.8186666369438171, 0.8496666550636292, 0.8486666679382324, 0.8513333201408386, 0.8510000109672546, 0.859000027179718, 0.8426666855812073, 0.8483333587646484, 0.8633333444595337, 0.859666645526886, 0.8633333444595337, 0.8643333315849304, 0.8656666874885559, 0.8693333268165588, 0.8663333058357239, 0.8700000047683716, 0.8703333139419556, 0.871666669845581, 0.8736666440963745, 0.8693333268165588, 0.8713333606719971, 0.8709999918937683, 0.8736666440963745, 0.8733333349227905]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 1, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.8274285793304443, "mapping_values": [1, 25, 25, 14, 11, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), alpha))))), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(grad, grad)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [1.924939049075954, 1.2611523437273264, 0.8515521797915302, 0.7416379713914524, 0.6780465116369851, 0.6271754220381955, 0.6034859047432334, 0.5573941481710188, 0.5229348337503866, 0.5123653833687565, 0.4932919532363724, 0.476835918235993, 0.47250281360328567, 0.42861919418585503, 0.4288291794520642, 0.412045494314387, 0.3979987083818493, 0.37228958638368453, 0.40999765212919104, 0.3760265026149528, 0.3600803204082526, 0.3408112813964764, 0.32134402835090414, 0.33539070007335303, 0.31186705858810404, 0.30422016307111305, 0.31184075064804606, 0.2916512348947587, 0.29599260955580536, 0.27954459495044354, 0.2699040539662096, 0.26632384260521746, 0.2571005808789071, 0.25650930995119875, 0.24568996305368707, 0.2407434230640564, 0.2449352745276243], "accuracy": [0.3537181317806244, 0.5872408151626587, 0.6748117804527283, 0.7185312509536743, 0.7428345084190369, 0.7625148296356201, 0.772288978099823, 0.7878747582435608, 0.8105930685997009, 0.8072909712791443, 0.8107251524925232, 0.8255184292793274, 0.8259146809577942, 0.8442742228507996, 0.841500461101532, 0.8475762605667114, 0.8498216867446899, 0.8638224601745605, 0.8424250483512878, 0.8607845902442932, 0.8634262084960938, 0.8709549307823181, 0.8786157965660095, 0.8802007436752319, 0.8841632604598999, 0.8877294659614563, 0.8835028409957886, 0.8919561505317688, 0.8886540532112122, 0.8951261639595032, 0.895918607711792, 0.8994848728179932, 0.8990886211395264, 0.9034473896026611, 0.9038436412811279, 0.9072777628898621, 0.9060890078544617], "val_loss": [1.3507341316768102, 0.6458078452519008, 0.5806739500590733, 0.49689243521009174, 0.48980717999594553, 0.4434694562639509, 0.4352126887866429, 0.400335465158735, 0.40742615291050505, 0.3868212955338614, 0.36993260043007986, 0.40108537673950195, 0.3566029838153294, 0.35776394605636597, 0.34090451683316914, 0.3521248527935573, 0.3325228180204119, 0.3835103852408273, 0.35454362630844116, 0.32100468022482737, 0.32647866010665894, 0.3251550453049796, 0.3445630839892796, 0.317183826650892, 0.3084185634340559, 0.3220775212560381, 0.31471885102135794, 0.31133616822106497, 0.30785270248140606, 0.2967184441430228, 0.3237848792757307, 0.3003622123173305, 0.3158529996871948, 0.3118537834712437, 0.30347033057894024, 0.3209307704653059, 0.33145153522491455], "val_accuracy": [0.5006666779518127, 0.7289999723434448, 0.7386666536331177, 0.7876666784286499, 0.7846666574478149, 0.8053333163261414, 0.8080000281333923, 0.8309999704360962, 0.8203333616256714, 0.8363333344459534, 0.8429999947547913, 0.8136666417121887, 0.8526666760444641, 0.8450000286102295, 0.8569999933242798, 0.8479999899864197, 0.8613333106040955, 0.8243333101272583, 0.8516666889190674, 0.8616666793823242, 0.8640000224113464, 0.862666666507721, 0.8610000014305115, 0.8690000176429749, 0.8723333477973938, 0.8669999837875366, 0.8673333525657654, 0.8650000095367432, 0.8706666827201843, 0.8763333559036255, 0.8693333268165588, 0.8773333430290222, 0.8723333477973938, 0.8730000257492065, 0.875, 0.8683333396911621, 0.8723333477973938]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.5348571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302305611951901, 2.298474358750246, 2.298290616532894, 2.297574576700463, 2.295795492067187, 2.295363524712434, 2.2920930882203123, 2.2912231923535264, 2.2899555516926338, 2.286137693389028, 2.2878504423905577, 2.2839557929927676, 2.281555113460504, 2.2818544369804514, 2.2801221446149524, 2.2766801254734497, 2.2761712896825457, 2.2758141659852646, 2.2744600507073383, 2.2708584327644847, 2.2698143594820173, 2.2696302946390743, 2.2665909790265295, 2.2648416643743547, 2.2626272465621855, 2.26178572304166, 2.258521542651794, 2.255648038831637, 2.254499487101583, 2.2552181564979015, 2.2517634749081883, 2.2491916877057307, 2.2510807950026512, 2.2487829833722874, 2.2447334099533913, 2.243763615820213, 2.239551499283246, 2.2387867655342815, 2.236523562418613, 2.236890654380626, 2.2334754734684243, 2.22834882353905, 2.2300589742157926, 2.22641676474619, 2.223238883536836, 2.221962427655231, 2.21859708504355, 2.2171196195317484, 2.215229813511881, 2.2107627351191756, 2.2098459446702603, 2.2070858626239067, 2.2035568475313885, 2.2007615242525884, 2.198602922808902, 2.1954488018327116, 2.1924873291462044, 2.19077852033369, 2.186630070248867, 2.1839447612885894, 2.1792053999980805, 2.1780656002547527, 2.1738309700255067, 2.171932305264325, 2.1699253232676545, 2.162585345021234, 2.162085972945798, 2.1581674120319425, 2.1540843017065705, 2.1509637882712336, 2.148785379915158, 2.1422987971496683, 2.13967437026775, 2.1366662691612883, 2.1313282664677784, 2.1283860534110706, 2.124004840378465, 2.1202329321465614, 2.114788514338685, 2.1069542766168463, 2.1057002083059504, 2.101241943559406, 2.098590528204488, 2.090123135069531, 2.0879005064754566, 2.081677917224258, 2.0747610687532476, 2.07116572281562, 2.0679001337690535, 2.061644310051219, 2.0545589327103646, 2.048781814261545, 2.043457175604876, 2.0368019129700587, 2.033611424295831, 2.0244820198882385, 2.019189681800255, 2.0184933951565176, 2.009814507327359, 2.0016952753067017], "accuracy": [0.09457138925790787, 0.0956280529499054, 0.09998679161071777, 0.10434553027153015, 0.11240258812904358, 0.11121384054422379, 0.11847840249538422, 0.11821424216032028, 0.12257297337055206, 0.13234710693359375, 0.1286487877368927, 0.13195087015628815, 0.14595165848731995, 0.14212125539779663, 0.15110288560390472, 0.15638621151447296, 0.15559370815753937, 0.1604807823896408, 0.1620657742023468, 0.1740853190422058, 0.17051908373832703, 0.1752740740776062, 0.18861444294452667, 0.18518029153347015, 0.18993528187274933, 0.1982565075159073, 0.20221899449825287, 0.21265354752540588, 0.21661603450775146, 0.216880202293396, 0.216880202293396, 0.23193766176700592, 0.21820102632045746, 0.2285034954547882, 0.2351076453924179, 0.2401268035173416, 0.2405230551958084, 0.25201427936553955, 0.25756174325942993, 0.24554219841957092, 0.25756174325942993, 0.26984545588493347, 0.25439175963401794, 0.26760005950927734, 0.27816668152809143, 0.2810725271701813, 0.280940443277359, 0.287280410528183, 0.284110426902771, 0.2883370816707611, 0.29718664288520813, 0.30141329765319824, 0.30260202288627625, 0.30062079429626465, 0.3090741038322449, 0.3140932619571686, 0.3167349100112915, 0.3147536516189575, 0.32333904504776, 0.3269053101539612, 0.32360321283340454, 0.32901862263679504, 0.3319244384765625, 0.33866068720817566, 0.32981112599372864, 0.3461894094944, 0.33905693888664246, 0.3387927711009979, 0.35001981258392334, 0.3423590064048767, 0.3473781645298004, 0.360190212726593, 0.35239729285240173, 0.3517369031906128, 0.3641526997089386, 0.3571522831916809, 0.36507725715637207, 0.368511438369751, 0.36785101890563965, 0.3773609697818756, 0.37168142199516296, 0.36864352226257324, 0.3719455897808075, 0.3895126283168793, 0.37947431206703186, 0.38528597354888916, 0.39043718576431274, 0.3928146958351135, 0.3921542763710022, 0.3980979919433594, 0.39004093408584595, 0.4019284248352051, 0.40774005651474, 0.4069475531578064, 0.4023246467113495, 0.41011756658554077, 0.4143442213535309, 0.4069475531578064, 0.4060229957103729, 0.41526877880096436], "val_loss": [1.9689700262887138, 1.9674666268484933, 1.9659669739859444, 1.9644731794084822, 1.9629853793552943, 1.9615018708365304, 1.9600417273385184, 1.9585778372628349, 1.9571025712149483, 1.9556152479989188, 1.9541476113455636, 1.952676568712507, 1.9511940819876534, 1.9497193608965193, 1.9482379640851701, 1.9467532294137138, 1.945254189627511, 1.9437674113682337, 1.9422651018415178, 1.9407344545636858, 1.9392073495047433, 1.9376746586390905, 1.9361096109662737, 1.9345383644104004, 1.9329578535897392, 1.9313692365373885, 1.9297362055097307, 1.928089005606515, 1.9264166014535087, 1.9247411319187708, 1.9230264936174666, 1.92129305430821, 1.919581753867013, 1.9178168433053153, 1.916036673954555, 1.9142349106924874, 1.9123847143990653, 1.9105027743748255, 1.9085920878819056, 1.9066739082336426, 1.9047322273254395, 1.9027372768947057, 1.9007267270769392, 1.8986899512154716, 1.8965816497802734, 1.8944527762276786, 1.8922807148524694, 1.890092032296317, 1.8878515107291085, 1.8855558122907365, 1.8832238061087472, 1.8808413233075822, 1.87840393611363, 1.8759323528834753, 1.8734171049935477, 1.8708447047642298, 1.8682066372462682, 1.8655276979718889, 1.8627883366176061, 1.8599779946463448, 1.8571109090532576, 1.854212760925293, 1.8512371608189173, 1.8482373101370675, 1.845170566013881, 1.8419764382498605, 1.8387829916817802, 1.8355139323643275, 1.8321587017604284, 1.8287529945373535, 1.8253000804356165, 1.8217370169503349, 1.818108218056815, 1.8144283294677734, 1.810661928994315, 1.8068525450570243, 1.8029720442635673, 1.7989906583513533, 1.7949183327811105, 1.7907305444989885, 1.7865231377737862, 1.7822347368512834, 1.7778867994035994, 1.7734312329973494, 1.7689062527247839, 1.7642990521022253, 1.7595624242510115, 1.7547742979867118, 1.7498739787510462, 1.7448720250810896, 1.739828450339181, 1.7346464565822057, 1.729391438620431, 1.7240400314331055, 1.7185988426208496, 1.7130965845925468, 1.7075021266937256, 1.7018366200583321, 1.6960676738194056, 1.690148217337472], "val_accuracy": [0.0560000017285347, 0.0676666647195816, 0.07766667008399963, 0.09033333510160446, 0.09966666996479034, 0.1146666631102562, 0.12800000607967377, 0.140666663646698, 0.15433333814144135, 0.16733333468437195, 0.18066667020320892, 0.19699999690055847, 0.2160000056028366, 0.2293333262205124, 0.24433332681655884, 0.2553333342075348, 0.2633333206176758, 0.27566665410995483, 0.2866666615009308, 0.2953333258628845, 0.30799999833106995, 0.3179999887943268, 0.3293333351612091, 0.33533334732055664, 0.34466665983200073, 0.3543333411216736, 0.3596666753292084, 0.36399999260902405, 0.367333322763443, 0.37066665291786194, 0.37433332204818726, 0.3790000081062317, 0.3816666603088379, 0.3853333294391632, 0.3869999945163727, 0.3933333456516266, 0.3973333239555359, 0.3996666669845581, 0.40299999713897705, 0.406333327293396, 0.4103333353996277, 0.41366666555404663, 0.4166666567325592, 0.4193333387374878, 0.42266666889190674, 0.4269999861717224, 0.429666668176651, 0.43433332443237305, 0.4359999895095825, 0.4399999976158142, 0.4429999887943268, 0.4436666667461395, 0.445333331823349, 0.44699999690055847, 0.44866666197776794, 0.44999998807907104, 0.453000009059906, 0.45533332228660583, 0.45899999141693115, 0.4620000123977661, 0.46433332562446594, 0.4676666557788849, 0.4690000116825104, 0.4699999988079071, 0.4716666638851166, 0.4736666679382324, 0.4749999940395355, 0.4776666760444641, 0.4793333411216736, 0.48233333230018616, 0.48500001430511475, 0.48633334040641785, 0.4883333444595337, 0.4906666576862335, 0.49266666173934937, 0.49399998784065247, 0.4950000047683716, 0.49799999594688416, 0.49933332204818726, 0.500333309173584, 0.5026666522026062, 0.5040000081062317, 0.5056666731834412, 0.5059999823570251, 0.5070000290870667, 0.5083333253860474, 0.5099999904632568, 0.5133333206176758, 0.515999972820282, 0.5180000066757202, 0.5196666717529297, 0.5216666460037231, 0.5236666798591614, 0.5270000100135803, 0.5286666750907898, 0.5286666750907898, 0.5303333401679993, 0.5336666703224182, 0.5336666703224182, 0.5353333353996277]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.5348571538925171, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302305611951901, 2.298474358750246, 2.298290585041865, 2.297574576700463, 2.295795492067187, 2.2953634257676216, 2.2920930567292834, 2.2912231608624976, 2.289955457219547, 2.286137535933884, 2.2878502984450653, 2.2839556355376236, 2.281554987496389, 2.2818542480342785, 2.2801219061963733, 2.2766798105631616, 2.2761710197729377, 2.2758137971308443, 2.2744597448349753, 2.2708581763645284, 2.2698140895724093, 2.2696300202577406, 2.2665903942066334, 2.2648412999916605, 2.2626268371788107, 2.261785273223804, 2.258521110815316, 2.2556476249765365, 2.254499010264425, 2.255217598697308, 2.2517629845613785, 2.2491912468313275, 2.251080363166173, 2.2487823940806653, 2.244732969078988, 2.243763156964432, 2.23955091446335, 2.238786270715746, 2.236522941635962, 2.2368902314876, 2.2334749831216145, 2.22834849511911, 2.230058321942113, 2.226416224926974, 2.223238294245214, 2.221962040819433, 2.2185966082063917, 2.21711893576704, 2.2152293186933454, 2.210762109864799, 2.2098449370518116, 2.207084904477864, 2.2035557993839854, 2.200760570578272, 2.1986021715904096, 2.195447843686669, 2.1924860965243544, 2.190777202276679, 2.186628824117366, 2.1839436366494778, 2.1792038660700674, 2.1780641383467225, 2.173829265132698, 2.1719310772086744, 2.169923874774802, 2.162583554693264, 2.162084380507453, 2.158165225735776, 2.154082412339315, 2.1509616469757478, 2.148783351168609, 2.1422967008548626, 2.1396725933549585, 2.1366641369037276, 2.1313263500812205, 2.1283841460624378, 2.124003013993267, 2.1202308313800295, 2.1147866609341843, 2.106952378306139, 2.1056982559566375, 2.101239761829439, 2.098588413928305, 2.090121101756783, 2.0878984057089247, 2.08167592891219, 2.074759129913586, 2.0711635635387564, 2.067897817131519, 2.0616420069233365, 2.0545566744886887, 2.0487791106937396, 2.043454719399102, 2.036799438782907, 2.033609053619691, 2.024480058501, 2.019187423578579, 2.0184912764086085, 2.0098122715587867, 2.0016929270836656], "accuracy": [0.09457138925790787, 0.0956280529499054, 0.09998679161071777, 0.10434553027153015, 0.11240258812904358, 0.11121384054422379, 0.11847840249538422, 0.11821424216032028, 0.12257297337055206, 0.13234710693359375, 0.1286487877368927, 0.13195087015628815, 0.14595165848731995, 0.14212125539779663, 0.15110288560390472, 0.15638621151447296, 0.15559370815753937, 0.1604807823896408, 0.1620657742023468, 0.1740853190422058, 0.17051908373832703, 0.1752740740776062, 0.18861444294452667, 0.18518029153347015, 0.18993528187274933, 0.1982565075159073, 0.20221899449825287, 0.21265354752540588, 0.21661603450775146, 0.216880202293396, 0.216880202293396, 0.23193766176700592, 0.21820102632045746, 0.2285034954547882, 0.2351076453924179, 0.2401268035173416, 0.2405230551958084, 0.25201427936553955, 0.25756174325942993, 0.24554219841957092, 0.25756174325942993, 0.26984545588493347, 0.25439175963401794, 0.26760005950927734, 0.27816668152809143, 0.2810725271701813, 0.280940443277359, 0.287280410528183, 0.284110426902771, 0.2884691655635834, 0.29718664288520813, 0.30141329765319824, 0.30260202288627625, 0.30062079429626465, 0.3090741038322449, 0.31422534584999084, 0.3167349100112915, 0.3147536516189575, 0.32333904504776, 0.3269053101539612, 0.32360321283340454, 0.32901862263679504, 0.3319244384765625, 0.33866068720817566, 0.3299432098865509, 0.3461894094944, 0.33905693888664246, 0.3389248549938202, 0.35001981258392334, 0.3423590064048767, 0.3473781645298004, 0.360190212726593, 0.35239729285240173, 0.3517369031906128, 0.3641526997089386, 0.3572843670845032, 0.36520934104919434, 0.368511438369751, 0.36785101890563965, 0.37722888588905334, 0.37168142199516296, 0.3687755763530731, 0.3719455897808075, 0.3895126283168793, 0.37947431206703186, 0.38528597354888916, 0.390569269657135, 0.3928146958351135, 0.39202219247817993, 0.3980979919433594, 0.39004093408584595, 0.4019284248352051, 0.40774005651474, 0.4069475531578064, 0.4023246467113495, 0.41011756658554077, 0.41447630524635315, 0.4069475531578064, 0.4060229957103729, 0.41526877880096436], "val_loss": [1.9689700262887138, 1.9674666949680872, 1.9659669739859444, 1.9644731794084822, 1.9629852431161063, 1.9615018027169364, 1.9600414548601424, 1.9585776329040527, 1.9571024349757604, 1.9556151798793249, 1.9541476113455636, 1.952676432473319, 1.9511937413896834, 1.9497190884181432, 1.948237759726388, 1.9467530250549316, 1.945253917149135, 1.9437672070094518, 1.9422647612435477, 1.9407341139657157, 1.9392070089067732, 1.9376741818019323, 1.9361092703683036, 1.9345379556928362, 1.932957308632987, 1.9313687597002303, 1.9297356605529785, 1.9280883244105749, 1.9264160564967565, 1.9247405869620187, 1.9230260848999023, 1.921292509351458, 1.919581072671073, 1.9178163664681571, 1.9160359927586146, 1.9142344338553292, 1.912384033203125, 1.9105020250592912, 1.9085914748055595, 1.9066732951572962, 1.904731614249093, 1.9027368681771415, 1.900726250239781, 1.8986894743783134, 1.8965813773018974, 1.8944522993905204, 1.892280033656529, 1.8900913511003767, 1.8878508976527624, 1.8855549948556083, 1.883222988673619, 1.8808403015136719, 1.8784029824393136, 1.8759313992091589, 1.8734161513192313, 1.8708434786115373, 1.8682050704956055, 1.8655262674604143, 1.8627869061061315, 1.8599764960152763, 1.8571093423025948, 1.8542113985334123, 1.851235798427037, 1.848235743386405, 1.8451690673828125, 1.841974871499198, 1.8387811524527413, 1.8355121612548828, 1.8321567262922014, 1.8287510871887207, 1.8252981730869837, 1.821735109601702, 1.818106242588588, 1.8144260815211706, 1.8106598854064941, 1.8068504333496094, 1.8029699325561523, 1.7989887510027205, 1.7949161529541016, 1.7907284327915736, 1.7865210941859655, 1.7822326932634627, 1.7778846876961845, 1.7734291894095284, 1.768904209136963, 1.7642967360360282, 1.7595601081848145, 1.7547717094421387, 1.7498712539672852, 1.7448693684169225, 1.73982572555542, 1.7346434593200684, 1.729388850075858, 1.7240375110081263, 1.7185964584350586, 1.7130943366459437, 1.7075000149863107, 1.7018340996333532, 1.6960651874542236, 1.690145765032087], "val_accuracy": [0.0560000017285347, 0.0676666647195816, 0.07766667008399963, 0.09033333510160446, 0.09966666996479034, 0.1146666631102562, 0.12800000607967377, 0.140666663646698, 0.15433333814144135, 0.16733333468437195, 0.18066667020320892, 0.19699999690055847, 0.2160000056028366, 0.2293333262205124, 0.24433332681655884, 0.2553333342075348, 0.2633333206176758, 0.27566665410995483, 0.2866666615009308, 0.29499998688697815, 0.30799999833106995, 0.3179999887943268, 0.3293333351612091, 0.33533334732055664, 0.34466665983200073, 0.3543333411216736, 0.3596666753292084, 0.36399999260902405, 0.367333322763443, 0.37066665291786194, 0.37433332204818726, 0.3790000081062317, 0.3816666603088379, 0.3853333294391632, 0.3869999945163727, 0.3933333456516266, 0.3973333239555359, 0.3996666669845581, 0.40299999713897705, 0.4059999883174896, 0.4103333353996277, 0.41366666555404663, 0.4166666567325592, 0.4193333387374878, 0.4230000078678131, 0.4269999861717224, 0.429666668176651, 0.43433332443237305, 0.4359999895095825, 0.4403333365917206, 0.4429999887943268, 0.4436666667461395, 0.445333331823349, 0.44699999690055847, 0.4483333230018616, 0.44999998807907104, 0.45266667008399963, 0.45533332228660583, 0.45899999141693115, 0.4620000123977661, 0.46433332562446594, 0.4676666557788849, 0.4690000116825104, 0.4699999988079071, 0.4716666638851166, 0.4736666679382324, 0.4749999940395355, 0.4776666760444641, 0.47966668009757996, 0.48266667127609253, 0.48500001430511475, 0.48633334040641785, 0.4883333444595337, 0.4906666576862335, 0.49266666173934937, 0.49399998784065247, 0.4950000047683716, 0.4976666569709778, 0.49933332204818726, 0.500333309173584, 0.5026666522026062, 0.5040000081062317, 0.5056666731834412, 0.5059999823570251, 0.5070000290870667, 0.5083333253860474, 0.5099999904632568, 0.5133333206176758, 0.515999972820282, 0.5180000066757202, 0.5196666717529297, 0.5216666460037231, 0.5236666798591614, 0.5270000100135803, 0.5286666750907898, 0.5286666750907898, 0.5303333401679993, 0.5336666703224182, 0.5336666703224182, 0.5353333353996277]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [1, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.22771428525447845, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, alpha)", "other_info": {"loss": [2.5025073810575376, 2.304170125826018, 2.3032002539099987, 2.302544346417513, 2.2998195175387055, 2.2488229703027747, 2.3064785513186954, 2.3035697329234863, 2.3030713492884627, 2.303069193601577], "accuracy": [0.20723815262317657, 0.09787346422672272, 0.09932637959718704, 0.10236428678035736, 0.12362963706254959, 0.23761722445487976, 0.10011887550354004, 0.09470347315073013, 0.1006472036242485, 0.09760929644107819], "val_loss": [1.9760215623038155, 1.9738774299621582, 1.9735628536769323, 1.9728356770106725, 1.9620121547154017, 1.983381952558245, 1.9746932302202498, 1.9739302226475306, 1.9737095832824707, 1.973742893763951], "val_accuracy": [0.10100000351667404, 0.09933333098888397, 0.09866666793823242, 0.09799999743700027, 0.10999999940395355, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10300000011920929, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [3, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 4, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [43, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10742857307195663, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.9151983697574058, 2.4671483870589297, 2.4037496172567763, 2.376552556972179, 2.437792562836937, 2.3589889073274266, 2.350057560738445, 2.3590281994398543, 2.3714794533804753, 2.3901667843688794], "accuracy": [0.21001188457012177, 0.16919825971126556, 0.11266675591468811, 0.09879804402589798, 0.09813763201236725, 0.10527011007070541, 0.10117553919553757, 0.09391097724437714, 0.09919429570436478, 0.09840179979801178], "val_loss": [2.0101211411612376, 2.0290586607796803, 2.0133016450064525, 2.02236761365618, 1.9956894602094377, 2.0266397339957103, 2.0486950193132674, 2.02717011315482, 1.9958346230643136, 2.023334571293422], "val_accuracy": [0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.10100000351667404, 0.10266666859388351, 0.09799999743700027, 0.09733333438634872, 0.09799999743700027, 0.10100000351667404, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 0, 1, 1], [1, 8], [2, 3, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(alpha))))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 5, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 0, 1, 1], [1, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 9, 8, 2, 1, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [1, 1, 0, 1, 2, 2, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [20, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 25, 25, 15, 10, 2, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.negative(grad)))))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 3, 6, 8, 5, 0, 2, 3, 6, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 1, 0, 2, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 3, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [1, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7426608928269274, 7.237155396594127, 17.96867815435145, 35.60271700797473, 60.79227221378986, 96.56965551047577], "accuracy": [0.09576013684272766, 0.09602430462837219, 0.10421344637870789, 0.10276053100824356, 0.09919429570436478, 0.10276053100824356], "val_loss": [3.0725171906607494, 7.99633652823312, 16.89096995762416, 30.345748901367188, 49.100547790527344, 74.00512259347099], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 4, 8, 2, 8, 2, 9, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [20, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 3, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.multiply(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), alpha))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [96, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 0, 0, 1, 0, 0, 1], [1, 5, 8, 5, 0], [0, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 7, 5, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(tf.math.sqrt(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.negative(alpha)))", "other_info": {"loss": [2.3019735219534976, 2.3025868260518765, 2.3025848900778985, 2.3025906309554323, 2.3025852508391247, 2.30258638690948, 2.302584486110981, 2.302587713406086, 2.3025881639797263, 2.3025836085504814, 2.3025851336295156, 2.3025847115867473], "accuracy": [0.09813763201236725, 0.10038304328918457, 0.09998679161071777, 0.09457138925790787, 0.09721305221319199, 0.09998679161071777, 0.09906221181154251, 0.09840179979801178, 0.09998679161071777, 0.10038304328918457, 0.09998679161071777, 0.1018359512090683], "val_loss": [1.9736457552228654, 1.9736448696681432, 1.973644733428955, 1.9736412593296595, 1.9736407143729073, 1.9736393519810267, 1.9736382620675224, 1.9736368996756417, 1.9736358097621374, 1.9736346517290388, 1.9736340386526925, 1.9736345154898507], "val_accuracy": [0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.10233332961797714, 0.09799999743700027, 0.09799999743700027, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714, 0.10266666859388351, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 1, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [1, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), grad))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [18639116.188361425, 354231082.4609695, 1653915399.7094176, 4640279193.782592, 9910365244.863823, 18519104193.47933], "accuracy": [0.09919429570436478, 0.09589222073554993, 0.10434553027153015, 0.10302469879388809, 0.10051512718200684, 0.10289261490106583], "val_loss": [68728644.57142857, 554706157.7142857, 1877644470.857143, 4457267931.428572, 8713270125.714285, 15065368283.428572], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3025575253185955, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 1, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 1, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [20, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [0, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [3, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 2, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(alpha)), grad))))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0944393053650856, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 5, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 2, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [20, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [0, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3429057959945934, 2.7296471543174143, 3.888806523018352, 5.899464646476591, 8.699808032048802, 12.471261346187449, 16.949799882422475], "accuracy": [0.0952318087220192, 0.09628847241401672, 0.10315678268671036, 0.10170386731624603, 0.09985470771789551, 0.10289261490106583, 0.09906221181154251], "val_loss": [2.0446594102042064, 2.4400340488978793, 3.361987522670201, 4.841485023498535, 6.834204401288714, 9.334357942853655, 12.365774427141462], "val_accuracy": [0.09700000286102295, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [0, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 2, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302987173264604, 2.3008059714338356, 2.302250851099722, 2.303187658915572, 2.3030498728791815, 2.304284346054857], "accuracy": [0.09298639744520187, 0.09021265059709549, 0.09087307006120682, 0.08889182657003403, 0.09536388516426086, 0.0882314071059227], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [0, 1, 1, 1], [0, 5], [3, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302987173264604, 2.3008059714338356, 2.302250851099722, 2.303187658915572, 2.3030498728791815, 2.304284346054857], "accuracy": [0.09298639744520187, 0.09021265059709549, 0.09087307006120682, 0.08889182657003403, 0.09536388516426086, 0.0882314071059227], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [1, 3, 6, 8, 8, 8, 2, 0, 8, 1, 2, 2, 2, 2, 0, 0, 4, 8, 8, 0, 8, 2, 0, 6, 1, 3, 1, 6, 2, 0, 8, 8, 8, 2, 4, 3, 0, 5, 2, 3, 3, 9, 8, 0, 8, 0, 7, 4, 2, 6, 0, 8, 5, 8, 3], [2, 2, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 0, 2, 2, 2, 2, 1, 1, 0, 0, 0, 3, 2, 2, 1, 3, 0, 2, 2, 2, 2, 1, 2, 3], [10, 18, 17, 69, 32, 74, 20, 27, 65, 70], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 4, 6, 8, 8, 1, 2, 6, 1, 4, 1, 1, 6, 3, 4, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 2, 0, 3, 2, 3, 3, 0, 3, 0, 3, 1, 0, 1, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [44, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 5, 0, 8, 0, 5, 4], [4, 4, 3, 3], [93], [1, 1, 1, 1], [0, 5], [2, 1, 1, 3, 2, 0], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302987173264604, 2.3008059714338356, 2.302250851099722, 2.303187658915572, 2.3030498728791815, 2.304284346054857], "accuracy": [0.09298639744520187, 0.09021265059709549, 0.09087307006120682, 0.08889182657003403, 0.09536388516426086, 0.0882314071059227], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]