[{"genotype": [[0], [1], [1], [], [2], [], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [45, 82, 0, 8, 21, 72, 6], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1], [8], [4], [6], [0, 1], [5], [1], []], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301367659405663, 2.300651004994314, 2.3024596353610747, 2.302996503332146, 2.3038374306960048, 2.311667682125962, 2.449549582278204], "accuracy": [0.0952318087220192, 0.09140139818191528, 0.08519349992275238, 0.07779685407876968, 0.0878351628780365, 0.10038304328918457, 0.09998679161071777], "val_loss": [1.9695440701075964, 1.9732443264552526, 1.9736947332109724, 1.9739526339939661, 1.9755278314862932, 2.0002803121294295, 2.4137145451136996], "val_accuracy": [0.08766666799783707, 0.12300000339746475, 0.047333333641290665, 0.09366666525602341, 0.10300000011920929, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1], [1], [], [2], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 9, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [0, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0], [0, 1], [8], [0], [6], [0, 1], [5], [1], []], "fitness": -0.10057143121957779, "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.subtract(alpha, alpha)))))))), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.square(beta)), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.negative(grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), grad))))), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), beta)), tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), beta)))))), alpha)), tf.math.add(tf.math.add(alpha, tf.math.add(beta, beta)), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))))), tf.math.subtract(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3013674030057065, 2.3006504339674887, 2.302474251292275, 2.303005706900225, 2.303849927406931, 2.3116819999945744, 2.4497599525537317], "accuracy": [0.0952318087220192, 0.09074098616838455, 0.08545766770839691, 0.07806102186441422, 0.08902391046285629, 0.1002509593963623, 0.09985470771789551], "val_loss": [1.9695425033569336, 1.9732512065342493, 1.9737040655953544, 1.9739617620195662, 1.975529602595738, 2.0003221375601634, 2.414403642926897], "val_accuracy": [0.08766666799783707, 0.12166666984558105, 0.045666664838790894, 0.09600000083446503, 0.10300000011920929, 0.09799999743700027, 0.09799999743700027]}, "mapping_values": [1, 1, 1, 0, 1, 0, 92, 92, 57, 35, 12, 2, 2, 1, 1, 1, 2, 1, 1, 0]}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 7, 6, 1, 7], [3, 0, 1, 0, 0, 2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 9, 6, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [1, 2, 0, 0, 3, 2, 3, 1, 0, 4, 2, 1, 0, 4, 4, 4, 4, 2], [68, 59, 20, 1, 56], [0, 0], [1], [8], [0], [1], [1, 1, 1], [3], [0, 1], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 6, 6, 3, 48, 48, 30, 18, 5, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, beta))), tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))))))), grad)))), tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027687986308654, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [0, 0], [5, 9], [], [86], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [5, 3, 1, 2, 3, 4, 5], [1, 2, 0, 0, 4, 1], [68, 59], [1], [], [], [1], [], [0, 0, 1, 1, 0, 1, 1], [4, 7, 3], [2, 0, 3, 3], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, tf.math.add(beta, tf.math.square(alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3028158147368747, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0], [1, 0, 0, 1, 1], [5, 7, 8, 6, 4], [2, 3], [40], [1, 0, 0], [0, 1, 1], [4], [3, 2], [], [1], [0, 1, 0], [], [2], [], [1, 0, 0, 0, 1, 1], [8, 9], [0], [77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028158147368747, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [3], [42], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [1], [], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [79], [0, 0, 1, 1, 0, 0], [0, 0, 0, 1], [7, 3, 8], [3], [], [0, 0, 1, 0, 1, 1, 1], [4, 7, 5], [2, 0, 2, 3], [83]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.302820056609946, 2.302588347226023, 2.302584190977059, 2.3025879963844713, 2.302586636444392, 2.302586348144023, 2.302585829644234], "accuracy": [0.09879804402589798, 0.09655263274908066, 0.09998679161071777, 0.10038304328918457, 0.09694888442754745, 0.10394927859306335, 0.09998679161071777], "val_loss": [1.9736430304391044, 1.9736415318080358, 1.9736413955688477, 1.9736377171107702, 1.9736346517290388, 1.9736316544669015, 1.9736340386526925], "val_accuracy": [0.09799999743700027, 0.10100000351667404, 0.10100000351667404, 0.10066666454076767, 0.10066666454076767, 0.10100000351667404, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [], [0], [11], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [2, 2, 4, 8, 3, 0, 8, 3, 5, 3, 5, 9, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 3, 8, 4, 8, 5, 1, 0, 1, 9, 6, 2, 6, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 1, 9, 0, 7, 7, 0, 2], [4, 3, 2, 3, 3, 5, 4, 0, 4, 2, 2], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [1, 1], [0, 0], [8], [0], [53], [0, 0, 1, 1, 0, 1, 1], [5, 3], [2, 1, 2, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 17, 17, 10, 7, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), beta)), tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [0, 0], [5, 9], [2, 0, 1, 2], [93], [1, 0, 1, 0, 0, 1, 1, 0, 1], [1], [], [2, 2, 0, 0], [], [0, 0, 0, 1, 1], [0, 1], [0], [1], [], [1], [], [0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027687986308654, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [3], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], [2, 2, 4, 0, 3, 0, 2, 3, 5, 3, 5, 6, 7, 8, 1, 4, 3, 0, 0, 7, 7, 2, 1, 4, 8, 6, 8, 5, 1, 0, 3, 9, 6, 2, 2, 7, 0, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 9, 7, 1, 9, 9, 7, 7, 0, 6], [3, 3, 0, 5, 3, 1, 1, 3, 0, 1, 2, 3, 5, 3, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 3, 1, 2, 3, 3, 4, 4, 3, 2, 4, 2], [26, 28, 57, 46, 22, 74, 31, 75, 27, 59, 5, 91], [0, 0], [0, 1], [8], [0], [44], [1], [], [2], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 89, 89, 56, 33, 11, 2, 2, 1, 1, 1, 1, 0, 1, 0], "tree_depth": 71, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.math.subtract(alpha, alpha)))), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(grad)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)))), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))), beta), tf.math.add(tf.math.subtract(grad, alpha), tf.math.add(beta, beta))))), grad))))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), grad)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0], [0, 0], [5, 9], [], [6], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 3, 1, 4, 0, 7, 2, 2, 4], [1, 2, 0, 0, 2, 1, 4, 3], [68, 42], [1], [], [], [], [], [1], [], [0], [9]], "fitness": -0.10000000149011612, "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.pow(alpha, tf.math.add(beta, grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027687986308654, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 2, 2, 2, 0, 1, 17, 17, 9, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 1]}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 8], [2], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], [8, 4, 3, 5, 8, 3, 3, 0, 7, 3, 3, 1, 8, 1, 4], [5, 5, 5, 2, 5, 1, 3, 3, 5, 4], [45], [0, 0], [1, 1], [8], [0], [6], [1], [], [3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 15, 15, 9, 6, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), beta), tf.math.add(beta, grad))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3615076640152646, 3.027457122206924, 4.928213564412091, 7.996023990443165, 12.353890196931612, 17.963534065320147, 24.91528842106251], "accuracy": [0.09047681838274002, 0.09800554811954498, 0.09945846349000931, 0.1018359512090683, 0.09985470771789551, 0.10157178342342377, 0.1014397069811821], "val_loss": [2.0961083684648787, 2.7816829681396484, 4.297190257481167, 6.602179527282715, 9.667175565447126, 13.533296857561384, 18.257289341517858], "val_accuracy": [0.09700000286102295, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1], [1], [], [0], [11], [1], [1], [], [5], [], [0], [1], [], [7], [], [1], [], [2], []], "fitness": -0.10000000149011612, "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0]}, {"genotype": [[0], [0], [1], [], [2], [], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [5, 5, 5, 2, 5, 1, 3, 3, 5, 4], [45], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1], [2, 6], [4, 5], [6], [1], [], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 5, 4, 2, 2, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1, 1], [0, 1, 0], [6, 9], [2], [17], [1], [1], [], [3], [], [1], [], [], [], [], [0, 0, 1, 0, 0, 1], [6, 5, 9, 2], [2, 1, 3, 1], [23]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.149761087339253, 114.62132347730707, 720.3254004183573, 2487.500924354909, 5301.438905574107, 10276.13023275492, 17702.867368856078], "accuracy": [0.09813763201236725, 0.09192973375320435, 0.10051512718200684, 0.10249637067317963, 0.09642054885625839, 0.10077928751707077, 0.09655263274908066], "val_loss": [12.734605516706194, 324.8043736049107, 1427.666748046875, 3203.166573660714, 6740.475446428572, 12334.072823660714, 20334.929129464286], "val_accuracy": [0.10133333504199982, 0.10233332961797714, 0.10000000149011612, 0.10233332961797714, 0.09799999743700027, 0.09733333438634872, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0], [0, 1, 0, 1, 0, 1], [1, 4, 5], [3, 2, 1], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 9, 5], [3], [73, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0], [1, 1], [8], [5], [6], [0, 1], [5], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.pow(grad, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [3], [], [1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [8, 4, 4, 4, 5, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [0, 1, 0, 1, 2, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [45, 24, 5, 43], [0, 0], [0, 1], [8, 7, 4, 3, 0], [1], [], [0, 1], [5], [1], []], "fitness": -0.06599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 4, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), alpha)), tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.subtract(tf.math.add(beta, beta), alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, beta))))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3029585673808737, 2.301613387115533, 2.300991737737065, 2.300228418911516, 2.3000481321102813, 2.30044162013606, 2.3007334024048656, 2.3003773599835498, 2.2999660258972727, 2.300138466929117, 2.2996321934687542, 2.300142400851418, 2.298773195135469], "accuracy": [0.09259014576673508, 0.0952318087220192, 0.09906221181154251, 0.09866596013307571, 0.09628847241401672, 0.09668471664190292, 0.10051512718200684, 0.10011887550354004, 0.10249637067317963, 0.1010434553027153, 0.1002509593963623, 0.10157178342342377, 0.1006472036242485], "val_loss": [1.9699206352233887, 1.9696266310555595, 1.9693395750863212, 1.969435487474714, 1.9693920952933175, 1.9693165506635393, 1.9692378044128418, 1.9691551753452845, 1.9691899844578333, 1.969217164175851, 1.9693218639918737, 1.9695850781032018, 1.9698801040649414], "val_accuracy": [0.05533333495259285, 0.06266666948795319, 0.0663333311676979, 0.0689999982714653, 0.07233333587646484, 0.07666666805744171, 0.08133333176374435, 0.08699999749660492, 0.0860000029206276, 0.08433333039283752, 0.08100000023841858, 0.07800000160932541, 0.07533333450555801]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 0, 0], [1], [5, 7, 8, 6, 4], [2], [93], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 3, 6, 6, 1, 7, 7, 5, 5, 3, 5, 7, 4, 9, 1, 6, 8, 3, 6, 8, 5, 6, 2, 9, 5, 0, 0, 3, 7, 9, 3, 0, 3, 8, 5, 1], [3, 4, 3, 3, 3, 3, 1, 3, 2, 0, 2, 5, 0, 3, 5, 1, 3, 0], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0], [0, 1, 0], [8], [0], [2], [0, 1], [5], [1], []], "fitness": -0.06599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 47, 47, 31, 16, 5, 2, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 61, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad)), tf.math.subtract(grad, tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(beta)))))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(beta, beta), grad)), tf.math.add(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.302958585362251, 2.301613463607242, 2.3009913014288608, 2.3002264440146263, 2.3000435169110633, 2.3004331674085807, 2.300727171936307, 2.300371948092794, 2.2999598361466145, 2.3001346569869967, 2.299624604508704, 2.3001416359343283, 2.298771332504097], "accuracy": [0.09259014576673508, 0.0952318087220192, 0.09893012791872025, 0.09879804402589798, 0.09628847241401672, 0.09655263274908066, 0.10051512718200684, 0.10011887550354004, 0.10236428678035736, 0.1010434553027153, 0.1002509593963623, 0.10157178342342377, 0.10091137140989304], "val_loss": [1.9699208395821708, 1.9696273122514998, 1.9693384851728166, 1.969432967049735, 1.969386305127825, 1.9693100111825126, 1.9692324910845076, 1.9691506113324846, 1.9691857610430037, 1.9692111696515764, 1.9693194798060827, 1.9695843969072615, 1.969879082271031], "val_accuracy": [0.05533333495259285, 0.06266666948795319, 0.06599999964237213, 0.0689999982714653, 0.0729999989271164, 0.07666666805744171, 0.08133333176374435, 0.08666666597127914, 0.0860000029206276, 0.08433333039283752, 0.08133333176374435, 0.07833333313465118, 0.07566666603088379]}}, {"genotype": [[0], [0], [1], [], [1], [11], [1], [1], [], [1], [], [0, 0, 0], [0, 1, 1], [2], [3, 3], [], [1], [], [2], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, sigma), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3033031305664045, 2.302763720796943, 2.3028704962946436, 2.302087969264145, 2.302382866216137, 2.303179347771758], "accuracy": [0.09179764986038208, 0.09219389408826828, 0.09219389408826828, 0.0948355570435524, 0.09008057415485382, 0.08796724677085876], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0], [1], [], [2, 3], [], [1, 0], [0, 1], [5], [2], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [1], [0, 1], [], [0], [], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 1, 8, 0], [2, 3, 1, 0, 3, 2], [52]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(beta, sigma))", "other_info": {"loss": [2.3033031305664045, 2.302763720796943, 2.3028704962946436, 2.302087969264145, 2.302382866216137, 2.303179347771758], "accuracy": [0.09179764986038208, 0.09219389408826828, 0.09219389408826828, 0.0948355570435524, 0.09008057415485382, 0.08796724677085876], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0], [1], [], [1], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1], [8], [0, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [93, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0, 1, 0], [0, 0, 0], [0, 6, 9], [0], [53], [0, 1], [5], [1], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 4, 3, 3, 0, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3033031305664045, 2.302763720796943, 2.3028704962946436, 2.302087969264145, 2.302382866216137, 2.303179347771758], "accuracy": [0.09179764986038208, 0.09219389408826828, 0.09219389408826828, 0.0948355570435524, 0.09008057415485382, 0.08796724677085876], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]