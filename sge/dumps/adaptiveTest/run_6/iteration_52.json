[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [8, 1, 5, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 0, 3, 2], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.5368571281433105, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022257867600735, 2.3009933014241004, 2.2990053697678516, 2.2965963337761837, 2.294116051158318, 2.2953794651563064, 2.2916341270390848, 2.2900591322050246, 2.2887157871738606, 2.2881037929763157, 2.2857700215197196, 2.2850278737664365, 2.283065729704295, 2.280157952559953, 2.2798781783872704, 2.275947199647516, 2.27583302114429, 2.2755506840742274, 2.2740476927217506, 2.270739800516546, 2.270097842731055, 2.268412558913719, 2.2663923702093873, 2.264169120297314, 2.2616875015780784, 2.2609903799497126, 2.258287083691673, 2.256974519944509, 2.255460908400022, 2.253390880607894, 2.2527071089083885, 2.2504595460011236, 2.2492315419645137, 2.2463789005100674, 2.2453792413558626, 2.2423433231844516, 2.2412188352295876, 2.2389068384338064, 2.2365463922493305, 2.2344207030560725, 2.232251965657926, 2.229679133299713, 2.2272118343385516, 2.2250290930373495, 2.2223450720916413, 2.2204662117235663, 2.217646547233613, 2.215057217985049, 2.213204384196499, 2.2112311843584367, 2.208169245968689, 2.206809318926923, 2.2026302555627386, 2.200914068906031, 2.1987343273142685, 2.1943056204882376, 2.191798568637915, 2.1902681737921696, 2.1858283815256687, 2.182917037486967, 2.1799865032246935, 2.1785502446688176, 2.1722154742643864, 2.1712343469823057, 2.1698186619879154, 2.1659902894911025, 2.1629903796106174, 2.1552542988272423, 2.151526878664538, 2.1498566045107355, 2.146529805595691, 2.143788614923046, 2.136982474517923, 2.1344478828811595, 2.131003730663329, 2.1268766671123913, 2.123219648293689, 2.117980015071596, 2.1138468001575643, 2.1084846756823894, 2.1027358090321715, 2.100917439308968, 2.0949239126522117, 2.090164729585548, 2.0848039378736942, 2.0808813686557275, 2.0769102137558937, 2.0710728715801627, 2.0651073698921287, 2.0596516665812765, 2.0561495447013955, 2.0490317179337625, 2.04150412174311, 2.0379039975142264, 2.0331668725591276, 2.029064918915357, 2.023430321179109, 2.0134508763605403, 2.008670446737615, 2.0039880722426564], "accuracy": [0.0944393053650856, 0.09602430462837219, 0.09681680053472519, 0.10381719470024109, 0.11359133571386337, 0.10276053100824356, 0.11755382269620895, 0.11993131786584854, 0.11874257028102875, 0.12679962813854218, 0.13181878626346588, 0.13736626505851746, 0.1406683325767517, 0.1468762308359146, 0.1500462293624878, 0.15797120332717896, 0.1620657742023468, 0.16299036145210266, 0.16880200803279877, 0.1706511676311493, 0.17593449354171753, 0.18821820616722107, 0.17778365314006805, 0.19759608805179596, 0.1938977688550949, 0.19178444147109985, 0.20618148148059845, 0.20301149785518646, 0.20235107839107513, 0.2215031087398529, 0.21965394914150238, 0.22335226833820343, 0.22691850364208221, 0.2316734939813614, 0.2378813922405243, 0.23457930982112885, 0.23484347760677338, 0.24686303734779358, 0.25214633345603943, 0.2565050721168518, 0.2587504982948303, 0.26324132084846497, 0.2744683623313904, 0.2719587981700897, 0.27961960434913635, 0.27922335267066956, 0.28424251079559326, 0.2875445783138275, 0.28899750113487244, 0.29441288113594055, 0.2996962070465088, 0.29665830731391907, 0.30062079429626465, 0.3063003420829773, 0.3082816004753113, 0.3148857355117798, 0.3167349100112915, 0.3125082552433014, 0.32981112599372864, 0.3203011453151703, 0.3229427933692932, 0.3249240517616272, 0.3365473449230194, 0.3299432098865509, 0.33760401606559753, 0.3319244384765625, 0.3349623680114746, 0.34222692251205444, 0.349359393119812, 0.34803855419158936, 0.35464271903038025, 0.34764233231544495, 0.3575485348701477, 0.36164310574531555, 0.36428478360176086, 0.36560559272766113, 0.36322811245918274, 0.3715493381023407, 0.37405890226364136, 0.37485140562057495, 0.37947431206703186, 0.3703605830669403, 0.3769647479057312, 0.37828555703163147, 0.3803988993167877, 0.3843613862991333, 0.3839651346206665, 0.3875313699245453, 0.39043718576431274, 0.3933430314064026, 0.3929467797279358, 0.39981508255004883, 0.4015321731567383, 0.3983621597290039, 0.4017963409423828, 0.4021925628185272, 0.4069475531578064, 0.41011756658554077, 0.4072117209434509, 0.4127592146396637], "val_loss": [1.9689950261797224, 1.9674980981009347, 1.9659943580627441, 1.9644992010934013, 1.96302216393607, 1.961543083190918, 1.960064206804548, 1.9585749762398856, 1.95709262575422, 1.9556312561035156, 1.9541656630379813, 1.9526826994759696, 1.9512088639395577, 1.9497136388506209, 1.9482364654541016, 1.9467577253069197, 1.9452621596200126, 1.9437520163399833, 1.942244325365339, 1.940718650817871, 1.939178807394845, 1.9376373291015625, 1.9360692160470145, 1.9344971520560128, 1.9329088756016322, 1.931302547454834, 1.929678508213588, 1.9280149596078056, 1.926358359200614, 1.9246718542916434, 1.9229658671787806, 1.921241283416748, 1.9194910185677665, 1.917736189705985, 1.9159375599452428, 1.914116655077253, 1.912254810333252, 1.91038601739066, 1.908486979348319, 1.9065301077706474, 1.9045579092843192, 1.9025530133928572, 1.9005041803632463, 1.898409162248884, 1.896294185093471, 1.8941463742937361, 1.891948972429548, 1.8897057941981725, 1.8874414988926478, 1.885141372680664, 1.8827921322413854, 1.880418368748256, 1.8779762813023158, 1.8754912103925432, 1.8729745319911413, 1.8703876222882951, 1.8677316393171037, 1.8650426183428084, 1.8623040063040597, 1.8595052446637834, 1.8566344806126185, 1.85373626436506, 1.8507417951311385, 1.8477198055812292, 1.8446531295776367, 1.8415017809186662, 1.838313443320138, 1.8349886621747697, 1.831627641405378, 1.8281915528433663, 1.8247223581586565, 1.8211804798671178, 1.8175315856933594, 1.8138633455548967, 1.8101164954049247, 1.8062698500497, 1.8023748397827148, 1.7983669553484236, 1.7942887033735002, 1.7901206016540527, 1.7858870370047433, 1.781592777797154, 1.777181965964181, 1.7726951326642717, 1.7681283269609724, 1.7635223524911063, 1.7588215555463518, 1.7540012087140764, 1.7491045679364885, 1.7441224370683943, 1.7390364919389998, 1.733858857836042, 1.7285855157034737, 1.723240852355957, 1.7178268773215157, 1.7123502322605677, 1.706787041255406, 1.7010676860809326, 1.6952971049717493, 1.6894448484693254], "val_accuracy": [0.056333333253860474, 0.06800000369548798, 0.07733333110809326, 0.08966666460037231, 0.09933333098888397, 0.11366666853427887, 0.12666666507720947, 0.14000000059604645, 0.15433333814144135, 0.16599999368190765, 0.18033333122730255, 0.19499999284744263, 0.2133333384990692, 0.2303333282470703, 0.2423333376646042, 0.2540000081062317, 0.2619999945163727, 0.27566665410995483, 0.2853333353996277, 0.2943333387374878, 0.30533334612846375, 0.3166666626930237, 0.328000009059906, 0.33533334732055664, 0.34299999475479126, 0.351666659116745, 0.359333336353302, 0.36399999260902405, 0.36766666173934937, 0.3709999918937683, 0.37466666102409363, 0.3790000081062317, 0.382999986410141, 0.38499999046325684, 0.3893333375453949, 0.3916666805744171, 0.39533331990242004, 0.39933332800865173, 0.4020000100135803, 0.406333327293396, 0.41233333945274353, 0.4143333435058594, 0.4169999957084656, 0.41966667771339417, 0.4230000078678131, 0.42533332109451294, 0.4283333420753479, 0.4326666593551636, 0.43666666746139526, 0.4390000104904175, 0.44200000166893005, 0.4440000057220459, 0.44466665387153625, 0.44600000977516174, 0.4476666748523712, 0.44999998807907104, 0.4506666660308838, 0.45500001311302185, 0.4583333432674408, 0.46133333444595337, 0.46299999952316284, 0.4663333296775818, 0.4690000116825104, 0.46966665983200073, 0.4716666638851166, 0.4723333418369293, 0.4736666679382324, 0.47566667199134827, 0.47866666316986084, 0.48100000619888306, 0.484333336353302, 0.4860000014305115, 0.48766666650772095, 0.49000000953674316, 0.492000013589859, 0.4936666786670685, 0.4946666657924652, 0.4963333308696747, 0.49799999594688416, 0.4983333349227905, 0.5019999742507935, 0.503333330154419, 0.5036666393280029, 0.5049999952316284, 0.5053333044052124, 0.5076666474342346, 0.5099999904632568, 0.512666642665863, 0.5163333415985107, 0.5176666378974915, 0.518666684627533, 0.5210000276565552, 0.5223333239555359, 0.5253333449363708, 0.5270000100135803, 0.528333306312561, 0.531333327293396, 0.5326666831970215, 0.5353333353996277, 0.5363333225250244]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 0, 3, 2], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.5368571281433105, "mapping_values": [1, 8, 8, 4, 4, 2, 3, 3, 1, 2, 1, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3022257867600735, 2.3009933014241004, 2.2990053697678516, 2.2965963337761837, 2.2941160196672894, 2.2953795281383638, 2.2916340955480563, 2.2900591322050246, 2.2887157871738606, 2.2881037929763157, 2.2857700215197196, 2.2850278737664365, 2.283065698213266, 2.2801579660696047, 2.2798781918969215, 2.275947136665458, 2.2758328951801747, 2.275550778547314, 2.2740477601755344, 2.2707398770082547, 2.270097910184839, 2.26841268934956, 2.2663924646824736, 2.2641692462614293, 2.2616875330691073, 2.2609904609131477, 2.258287160183382, 2.2569744884534804, 2.2554608948903705, 2.2533909300803003, 2.2527071403994174, 2.250459608983181, 2.249231510473485, 2.2463789184914447, 2.2453792728468915, 2.2423432107299877, 2.2412188352295876, 2.2389068699248353, 2.2365462662852154, 2.2344207030560725, 2.2322518396938102, 2.229679101808684, 2.227211609429624, 2.2250289355822055, 2.222344977618555, 2.2204662926870014, 2.2176465787246418, 2.215057172984369, 2.2132043212144414, 2.2112310583943215, 2.2081690750038936, 2.206809273926243, 2.202630354507551, 2.2009141183784373, 2.198734376786675, 2.194305606978586, 2.1917985506565376, 2.1902682367742274, 2.1858283455629137, 2.18291701950559, 2.1799865482253735, 2.1785502761598465, 2.1722154247919803, 2.1712342525092194, 2.1698185990058576, 2.1659902894911025, 2.1629901906644444, 2.155253983916954, 2.1515264692811633, 2.1498562536376924, 2.1465293917405908, 2.1437881651051907, 2.1369819796993874, 2.134447469026059, 2.1310034562819955, 2.126875951856654, 2.1232191129461997, 2.117979335778614, 2.11384622884732, 2.1084838524439142, 2.102734994831622, 2.1009164181808675, 2.094923003978576, 2.090163870384318, 2.084802835782159, 2.080880495944846, 2.076909210609171, 2.07107198535963, 2.0651065781446825, 2.059650789398669, 2.0561485235732953, 2.0490308137318523, 2.0415029971039984, 2.037902980857852, 2.033165639937278, 2.0290636008583465, 2.0234289266303893, 2.013449576332144, 2.008669074689235, 2.0039866484860074], "accuracy": [0.0944393053650856, 0.09602430462837219, 0.09681680053472519, 0.10381719470024109, 0.11359133571386337, 0.10276053100824356, 0.11755382269620895, 0.11993131786584854, 0.11874257028102875, 0.12679962813854218, 0.13181878626346588, 0.13736626505851746, 0.1406683325767517, 0.1468762308359146, 0.1500462293624878, 0.15797120332717896, 0.1620657742023468, 0.16299036145210266, 0.16880200803279877, 0.1706511676311493, 0.17593449354171753, 0.18821820616722107, 0.17778365314006805, 0.19759608805179596, 0.1938977688550949, 0.19178444147109985, 0.20618148148059845, 0.20301149785518646, 0.20235107839107513, 0.2215031087398529, 0.21965394914150238, 0.22335226833820343, 0.22691850364208221, 0.2316734939813614, 0.2378813922405243, 0.23457930982112885, 0.23484347760677338, 0.24686303734779358, 0.25214633345603943, 0.2565050721168518, 0.2587504982948303, 0.26324132084846497, 0.2744683623313904, 0.2719587981700897, 0.27961960434913635, 0.27922335267066956, 0.28424251079559326, 0.2875445783138275, 0.28899750113487244, 0.29441288113594055, 0.2996962070465088, 0.29665830731391907, 0.30062079429626465, 0.3063003420829773, 0.3082816004753113, 0.3148857355117798, 0.3167349100112915, 0.3125082552433014, 0.3299432098865509, 0.3203011453151703, 0.3229427933692932, 0.3249240517616272, 0.3365473449230194, 0.3299432098865509, 0.33760401606559753, 0.3319244384765625, 0.3349623680114746, 0.34222692251205444, 0.349359393119812, 0.34803855419158936, 0.35464271903038025, 0.34764233231544495, 0.3575485348701477, 0.36164310574531555, 0.36428478360176086, 0.36560559272766113, 0.36322811245918274, 0.3715493381023407, 0.37405890226364136, 0.37485140562057495, 0.37947431206703186, 0.3703605830669403, 0.3769647479057312, 0.37828555703163147, 0.3803988993167877, 0.3843613862991333, 0.3839651346206665, 0.3875313699245453, 0.3903051018714905, 0.3933430314064026, 0.3929467797279358, 0.39981508255004883, 0.401400089263916, 0.3983621597290039, 0.4017963409423828, 0.4021925628185272, 0.4069475531578064, 0.41011756658554077, 0.4072117209434509, 0.4127592146396637], "val_loss": [1.9689949580601283, 1.9674980981009347, 1.9659943580627441, 1.9644992010934013, 1.96302216393607, 1.961543083190918, 1.960064206804548, 1.9585749762398856, 1.95709262575422, 1.9556311879839217, 1.9541656630379813, 1.9526826994759696, 1.9512087958199638, 1.9497135707310267, 1.9482365335736955, 1.9467576571873255, 1.9452622277396066, 1.9437520844595773, 1.9422444616045271, 1.940718650817871, 1.9391788755144392, 1.9376375334603446, 1.9360693522862025, 1.9344972201756068, 1.9329090799604143, 1.931302751813616, 1.9296785763331823, 1.9280147552490234, 1.926358359200614, 1.9246717861720495, 1.9229658671787806, 1.921241283416748, 1.9194910185677665, 1.917736189705985, 1.9159374918256487, 1.914116655077253, 1.912254742213658, 1.91038601739066, 1.908486979348319, 1.9065301077706474, 1.904557773045131, 1.902552877153669, 1.9005041122436523, 1.898409162248884, 1.896294185093471, 1.894146510532924, 1.891949040549142, 1.8897058623177665, 1.8874414988926478, 1.88514130456107, 1.8827920641217912, 1.8804185049874442, 1.87797634942191, 1.8754911422729492, 1.8729745319911413, 1.8703876904078893, 1.867731707436698, 1.8650426183428084, 1.8623039381844657, 1.8595052446637834, 1.8566344124930245, 1.853736332484654, 1.8507417270115443, 1.847719737461635, 1.8446531295776367, 1.8415017127990723, 1.838313170841762, 1.8349883896963937, 1.831627300807408, 1.8281910078866142, 1.8247219494410925, 1.8211799349103654, 1.8175311769757951, 1.8138628005981445, 1.8101159504481725, 1.8062690326145716, 1.8023741585867745, 1.7983663422720773, 1.794287954057966, 1.7901199204581124, 1.785886287689209, 1.7815918922424316, 1.7771809441702706, 1.7726942471095495, 1.768127373286656, 1.763521466936384, 1.7588206699916296, 1.7540003231593542, 1.7491037505013602, 1.7441215515136719, 1.7390356745038713, 1.7338578360421317, 1.7285843576703752, 1.7232396943228585, 1.7178256511688232, 1.7123487676892961, 1.7067857810429163, 1.7010663918086462, 1.6952955722808838, 1.6894433838980538], "val_accuracy": [0.056333333253860474, 0.06800000369548798, 0.07733333110809326, 0.08966666460037231, 0.09933333098888397, 0.11366666853427887, 0.12666666507720947, 0.14000000059604645, 0.15433333814144135, 0.16599999368190765, 0.18033333122730255, 0.19499999284744263, 0.2133333384990692, 0.2303333282470703, 0.2423333376646042, 0.2540000081062317, 0.2619999945163727, 0.27566665410995483, 0.2853333353996277, 0.2943333387374878, 0.30533334612846375, 0.3166666626930237, 0.328000009059906, 0.33533334732055664, 0.34299999475479126, 0.351666659116745, 0.359333336353302, 0.36399999260902405, 0.36766666173934937, 0.3709999918937683, 0.37466666102409363, 0.37933334708213806, 0.382999986410141, 0.38499999046325684, 0.3893333375453949, 0.3916666805744171, 0.39533331990242004, 0.39933332800865173, 0.4020000100135803, 0.406333327293396, 0.41233333945274353, 0.4143333435058594, 0.4169999957084656, 0.41966667771339417, 0.4230000078678131, 0.42533332109451294, 0.4283333420753479, 0.4326666593551636, 0.43666666746139526, 0.4390000104904175, 0.44200000166893005, 0.4440000057220459, 0.44466665387153625, 0.44600000977516174, 0.4476666748523712, 0.44999998807907104, 0.4506666660308838, 0.45500001311302185, 0.4583333432674408, 0.46133333444595337, 0.46299999952316284, 0.4663333296775818, 0.4690000116825104, 0.46966665983200073, 0.4716666638851166, 0.4723333418369293, 0.4736666679382324, 0.47566667199134827, 0.47866666316986084, 0.48100000619888306, 0.484333336353302, 0.4860000014305115, 0.48766666650772095, 0.49000000953674316, 0.49166667461395264, 0.4936666786670685, 0.4946666657924652, 0.4963333308696747, 0.49799999594688416, 0.4983333349227905, 0.5019999742507935, 0.503333330154419, 0.5036666393280029, 0.5049999952316284, 0.5053333044052124, 0.5076666474342346, 0.5099999904632568, 0.512666642665863, 0.5163333415985107, 0.5176666378974915, 0.518666684627533, 0.5210000276565552, 0.5223333239555359, 0.5253333449363708, 0.5270000100135803, 0.528333306312561, 0.531333327293396, 0.5326666831970215, 0.5353333353996277, 0.5363333225250244]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [58], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 0, 9, 7], [1], [35], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.17000000178813934, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 2, 3, 2, 5, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.24072089530316, 2.220880252117368, 2.2820956304860296, 2.2731968928258874, 2.28708206572789, 2.296109858253266, 2.29353451612304, 2.289391634187458], "accuracy": [0.21001188457012177, 0.17897239327430725, 0.14291374385356903, 0.12402588874101639, 0.11847840249538422, 0.11834631860256195, 0.12257297337055206, 0.12336547672748566], "val_loss": [1.9747814450945174, 1.9733586992536272, 1.9496700423104423, 1.9721639496939523, 1.978156294141497, 1.9627832685198103, 1.9774366787501745, 1.976477827344622], "val_accuracy": [0.09799999743700027, 0.1066666692495346, 0.18466666340827942, 0.09833333641290665, 0.10133333504199982, 0.14300000667572021, 0.10133333504199982, 0.10100000351667404]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 0, 3], [72], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 9, 5, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [79, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 0, 9, 7], [1], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.12114285677671432, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.4190458004988886, 2.3875284395544143, 2.3059950100038784, 2.280473515562582, 2.371138948979174, 2.3850006627967217, 2.388080112623296, 2.360546632260852], "accuracy": [0.17250032722949982, 0.11491216719150543, 0.12349755316972733, 0.14700831472873688, 0.10460969805717468, 0.09721305221319199, 0.09906221181154251, 0.10513802617788315], "val_loss": [1.9983793667384557, 2.0263465472630093, 1.8912681170872279, 1.965177059173584, 2.0031607491629466, 1.9904114859444755, 2.055885451180594, 2.0812790734427318], "val_accuracy": [0.10066666454076767, 0.04699999839067459, 0.15566666424274445, 0.12333333492279053, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 5, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [58], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 2, 0, 3, 7, 6, 6, 8], [1, 0, 4], [52, 73], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 11, 8, 3, 1, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), tf.math.add(sigma, alpha))), sigma)))), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.4190439987081844, 2.388703796196261, 2.313266985200069, 2.3600784131895205, 2.384468519172774, 2.376208837021926, 2.383125118685909, 2.3608631612507893], "accuracy": [0.17250032722949982, 0.11530841141939163, 0.12032756209373474, 0.12230881303548813, 0.09853387624025345, 0.09734513610601425, 0.09853387624025345, 0.1014397069811821], "val_loss": [1.9983651978628976, 2.027913434164865, 1.9406369754246302, 2.06876346043178, 1.9967528070722307, 1.9882118361336845, 2.05415255682809, 2.0679162570408414], "val_accuracy": [0.10066666454076767, 0.04333333298563957, 0.164000004529953, 0.10233332961797714, 0.10100000351667404, 0.09799999743700027, 0.09866666793823242, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 2, 0, 3], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 0, 1, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 66, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [2, 5], [1, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, alpha)", "other_info": {"loss": [2.3017623954524042, 2.318958137926881, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.1150442510843277, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9608986037118095, 2.6859205109732494, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09000000357627869, 0.10000000149011612, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 0, 3], [58], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 9, 5, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [79, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 0, 9, 7], [1], [52], [1, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07766477018594742, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [45, 96, 4], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 1, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [69, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [8, 2, 0, 8, 2], [4], [52], [0, 1, 1, 1], [7, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 0, 3], [29], [1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 9, 5, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [79, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 0, 9, 7], [1], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [35973737600878.42, 2.2069146006647045e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.09325055778026581, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.2282811774896888e+17, 1.973644392830985, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 5, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [19, 12], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1], [8, 2, 0, 9, 7], [1], [52], [1, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), grad), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2, 2], [45], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [9, 6, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 0, 1, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [80, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1], [8, 2, 0, 8, 7], [4], [52], [1, 1, 1, 1], [7, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [52348190276.099495, 7742470632206.844, 129681933494274.44, 921689551261484.5, 4047990839319932.0, 1.3505863312869942e+16], "accuracy": [0.1010434553027153, 0.09668471664190292, 0.10236428678035736, 0.10130762308835983, 0.10394927859306335, 0.1006472036242485], "val_loss": [417028440064.0, 22481310655634.285, 241309324560676.56, 1315445978768530.2, 4927582692704256.0, 1.453529491787893e+16], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [5, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0], [3, 2, 0, 9, 7], [4, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.08914285898208618, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 6, 4, 4, 0, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.6545280510203684, 2.3329663650785784, 2.3045486309241467, 2.30345945524549, 2.3029973607698784, 2.3031107901015284, 2.3029402623701216, 2.302858701644714, 2.3030624728177, 2.3029154840634876], "accuracy": [0.21965394914150238, 0.09879804402589798, 0.09972262382507324, 0.09694888442754745, 0.09774138033390045, 0.09681680053472519, 0.09206181764602661, 0.09589222073554993, 0.09919429570436478, 0.09602430462837219], "val_loss": [2.0808485576084683, 1.9758430889674596, 1.9741147586277552, 1.973824909755162, 1.9741388729640417, 1.9736591066632951, 1.9737073353358678, 1.9736167362758092, 1.9736236844744002, 1.9736661911010742], "val_accuracy": [0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09733333438634872, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [4, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2, 3], [87, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 1, 0, 8, 7], [1], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.07657142728567123, "mapping_values": [1, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 5, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.507375677673336, 2.318117237802762, 2.304336150245833, 2.3040089090470985, 2.303349098304574, 2.30312727628493, 2.302870838885546], "accuracy": [0.22005018591880798, 0.0944393053650856, 0.10434553027153015, 0.09734513610601425, 0.10091137140989304, 0.09496764093637466, 0.09351472556591034], "val_loss": [2.0191051619393483, 1.97570834841047, 1.9744240215846471, 1.9740492275782995, 1.9737516811915807, 1.973668439047677, 1.9737091745649065], "val_accuracy": [0.09733333438634872, 0.10466666519641876, 0.10266666859388351, 0.09799999743700027, 0.09866666793823242, 0.09733333438634872, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 0, 3, 2], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.06942857056856155, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.5229566636071024, 2.3189460505678388, 2.304516059595596, 2.3039222383039375, 2.30336555860235, 2.303181888027088, 2.302887613558262], "accuracy": [0.22005018591880798, 0.09496764093637466, 0.10249637067317963, 0.09760929644107819, 0.09893012791872025, 0.09536388516426086, 0.09509972482919693], "val_loss": [2.02203791482108, 1.975653852735247, 1.9744415283203125, 1.9738028390066964, 1.9738569940839494, 1.9736993653433663, 1.9736652374267578], "val_accuracy": [0.09733333438634872, 0.10833333432674408, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [8, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 0, 2, 2], [58], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1], [2, 2, 0, 9, 7], [1], [36], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.05885714292526245, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.506630391587104, 2.3179432457747664, 2.304663975067804, 2.304351204154262, 2.3033781056359395, 2.3032212906100447, 2.3028166377864037, 2.3028615553932354], "accuracy": [0.22005018591880798, 0.09681680053472519, 0.10460969805717468, 0.09959053993225098, 0.09655263274908066, 0.09932637959718704, 0.1018359512090683, 0.0952318087220192], "val_loss": [2.0177783284868513, 1.9758752414158411, 1.9747792652675085, 1.9739303588867188, 1.9736852645874023, 1.9736439159938268, 1.9734432356698173, 1.9730986186436243], "val_accuracy": [0.09733333438634872, 0.09799999743700027, 0.10266666859388351, 0.09799999743700027, 0.09833333641290665, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 1, 5, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 0, 3, 2], [14, 88, 41], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.04657142981886864, "mapping_values": [1, 8, 8, 4, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.523249762893715, 2.319222720575339, 2.30447604914131, 2.303963892873347, 2.3035528571015855, 2.303084673741081, 2.302992793342551, 2.302925907279113], "accuracy": [0.21991810202598572, 0.09655263274908066, 0.10394927859306335, 0.10157178342342377, 0.09734513610601425, 0.09721305221319199, 0.09747721254825592, 0.09721305221319199], "val_loss": [2.0233127730233327, 1.9756255831037248, 1.974376950945173, 1.9739642824445451, 1.9736828804016113, 1.9737170083182198, 1.9736926215035575, 1.9736197335379464], "val_accuracy": [0.09733333438634872, 0.10066666454076767, 0.10266666859388351, 0.09733333438634872, 0.09866666793823242, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 1, 8, 6, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 0, 1, 2], [58, 33], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [5, 2, 0, 8, 7], [1], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.044857144355773926, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.512595456400095, 2.3184055940365793, 2.304404678125549, 2.3042455211118416, 2.3035101421032724, 2.303096709832728, 2.3030961190610277, 2.3029614552026882], "accuracy": [0.22018226981163025, 0.09655263274908066, 0.10487385839223862, 0.10117553919553757, 0.09853387624025345, 0.09985470771789551, 0.09787346422672272, 0.09932637959718704], "val_loss": [2.02032927104405, 1.975971017565046, 1.9744903700692313, 1.9738295418875558, 1.9736572674342565, 1.9737035887581962, 1.9734832899911063, 1.9735958916800362], "val_accuracy": [0.09733333438634872, 0.09799999743700027, 0.10266666859388351, 0.09733333438634872, 0.10133333504199982, 0.09733333438634872, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], [8, 1, 1, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [3, 0, 2, 2], [58], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [2, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [14, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 9, 1, 7], [1], [52], [0, 1, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 5, 3, 3, 0, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3028940809968126, 2.303302944422933, 2.302977948503062, 2.302212923273135, 2.3012840009998445, 2.304241649667742], "accuracy": [0.09298639744520187, 0.09126931428909302, 0.08770307898521423, 0.0886276587843895, 0.09681680053472519, 0.08691058307886124], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [2, 1, 0, 3], [58], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 2, 9, 5, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [79, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1], [3, 2, 0, 9, 7], [1], [52], [0, 0, 1, 1], [0, 0], [3, 1], [5, 26, 61, 4, 67]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 4, 0, 1, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [2.3028940809968126, 2.303302944422933, 2.302977948503062, 2.302212923273135, 2.3012840009998445, 2.304241649667742], "accuracy": [0.09298639744520187, 0.09126931428909302, 0.08770307898521423, 0.0886276587843895, 0.09681680053472519, 0.08691058307886124], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 1, 7, 3, 9, 7, 5, 3, 9, 3, 7, 1, 1, 0, 5, 0], [0, 0, 3, 2], [58], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 1, 1, 2, 6, 5, 4, 1, 1, 6, 8, 1, 4, 5, 2, 0, 0, 6, 2, 4, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [3, 0, 0, 3, 2, 2, 3, 0, 0, 4, 1, 3, 0, 4, 4, 3, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 2, 1, 3, 4, 0, 3, 3, 3, 2, 1, 2, 0, 0, 0, 4], [79, 64, 7, 90, 56, 65, 64, 43, 50, 16, 82, 20, 50], [1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 0], [5, 2, 0, 8, 7], [1, 3], [52], [0, 0, 1, 1], [0, 5], [2, 1], [5, 26, 61, 4, 67]], "fitness": -0.03200000151991844, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.303446831594227, 2.3055611765222497, 2.3072706954889544, 2.308728034359951, 2.3103698591089454, 2.31725906295988], "accuracy": [0.09113723784685135, 0.08691058307886124, 0.08241976052522659, 0.07832518965005875, 0.08374059200286865, 0.0754193663597107], "val_loss": [1.9715961728777205, 1.972923755645752, 1.9745028359549386, 1.9764550754002161, 1.9785374232700892, 1.9811417715890067], "val_accuracy": [0.038333334028720856, 0.03099999949336052, 0.02866666577756405, 0.02433333359658718, 0.02666666731238365, 0.03433333337306976]}}]