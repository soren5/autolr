[{"genotype": [[0], [0, 1, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [3, 3], [93], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 1, 5, 3, 1, 3, 9, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 6, 5, 8, 6, 7, 9, 1, 5, 3, 1, 2, 4, 8, 6, 2, 5, 9, 1, 3, 4, 2, 5, 6, 2, 4, 3, 2, 3, 0, 0, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 3, 2, 0, 0, 3, 2, 1, 1, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [], [1, 1, 1], [7, 7, 5], [3, 3], []], "fitness": -0.4431428611278534, "mapping_values": [1, 1, 1, 0, 1, 0, 93, 93, 60, 33, 12, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.math.sqrt(beta))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), beta), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.square(grad), beta)))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha)), tf.math.add(beta, beta))))))), tf.math.add(beta, grad)))))), tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.negative(grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.1863034545406927, 2.5223044538856922, 2.708153003305413, 2.307146510301942, 2.3032180228174766, 2.254609090273233, 2.5988381826614644], "accuracy": [0.24342887103557587, 0.14753665030002594, 0.15440496802330017, 0.09853387624025345, 0.10619468986988068, 0.17183992266654968, 0.107647605240345], "val_loss": [3.216184003012521, 1.6914243357522147, 1.9767276218959264, 1.973783016204834, 1.9711000578744071, 3.3184615543910434, 1.9761628423418318], "val_accuracy": [0.1940000057220459, 0.3243333399295807, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.15399999916553497, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 8, 9, 6, 3, 1, 4, 3, 0, 0, 4, 6, 2, 1, 3, 6, 4, 8, 5, 2, 3, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2, 8, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2, 1, 2, 0, 0], [68, 59, 20, 1, 56, 65, 64, 43, 50, 16, 82, 20, 50], [0, 0], [1], [8], [1], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.4431428611278534, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.negative(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.186248693231893, 2.5153937140444502, 3.158242003068381, 2.3040151158658944, 2.2875588106488696, 2.2947571218415272, 2.258416867574224], "accuracy": [0.2440892904996872, 0.13829085230827332, 0.120459645986557, 0.10408136248588562, 0.15678246319293976, 0.12270505726337433, 0.14832915365695953], "val_loss": [3.1527552604675293, 1.9905133928571428, 1.9754178183419364, 1.9534653254917689, 1.9749088287353516, 1.8947700091770716, 1.9757419994899206], "val_accuracy": [0.19300000369548798, 0.26499998569488525, 0.10266666859388351, 0.15199999511241913, 0.10066666454076767, 0.21066667139530182, 0.09799999743700027]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.4325714409351349, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.1862314507441987, 2.502941744974056, 75.27436686538356, 2.357161962250677, 2.319328901207505, 2.307384256043722, 2.3037978009052753], "accuracy": [0.24356095492839813, 0.16140536963939667, 0.12653546035289764, 0.09866596013307571, 0.10051512718200684, 0.0944393053650856, 0.1022322028875351], "val_loss": [3.1830159596034457, 2.4156507764543806, 2.045828546796526, 1.995622226170131, 1.9795400755746024, 1.974710123879569, 1.9739336286272322], "val_accuracy": [0.19233334064483643, 0.2590000033378601, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [3], [6, 42, 84], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [3], [96], [0, 1, 0, 0], [0, 8], [1, 1], []], "fitness": -0.4308571517467499, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.1861678981321235, 2.532238992733364, 2.365990601321568, 2.268829168975471, 2.2391062875575614, 2.4758450681381317, 2.306377083256008, 2.304103143400032, 2.3035929558252253, 2.3031843132456893], "accuracy": [0.24356095492839813, 0.13749834895133972, 0.20618148148059845, 0.14370624721050262, 0.17342491447925568, 0.19614318013191223, 0.09945846349000931, 0.09813763201236725, 0.0948355570435524, 0.09391097724437714], "val_loss": [3.2242348534720287, 2.4133691787719727, 1.9828698975699288, 1.6028620515550887, 1.5132225581577845, 1.9771623611450195, 1.9743822642735072, 1.9736951419285365, 1.9736507279532296, 1.9736183711460658], "val_accuracy": [0.19166666269302368, 0.09733333438634872, 0.10266666859388351, 0.2536666691303253, 0.4099999964237213, 0.10066666454076767, 0.09733333438634872, 0.10066666454076767, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [4, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1, 1], [8], [0], [96], [0, 1, 0, 0], [0], [1, 1], []], "fitness": -0.41914284229278564, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.186277478645979, 2.518583261514809, 2.5088815677435234, 2.262296257427167, 2.128246750357349, 2.196219474285853, 2.304453077537981, 2.4567080100513863, 2.1442604493849218, 2.2144290316988213], "accuracy": [0.2436930388212204, 0.15255580842494965, 0.13049794733524323, 0.15202747285366058, 0.2587504982948303, 0.22652225196361542, 0.11055342853069305, 0.18293488025665283, 0.2250693440437317, 0.1728965789079666], "val_loss": [3.204291411808559, 2.1360020637512207, 1.9695537430899483, 1.9562409264700753, 1.430983032499041, 1.9776286397661482, 1.9579860142299108, 1.5667268208095007, 1.975944655282157, 1.6318816116877966], "val_accuracy": [0.19433332979679108, 0.12566666305065155, 0.11033333092927933, 0.1066666692495346, 0.4803333282470703, 0.10366666316986084, 0.22833333909511566, 0.4156666696071625, 0.10066666454076767, 0.4259999990463257]}}, {"genotype": [[0], [0, 1, 1], [1], [0, 1, 7, 6, 1, 7], [3, 3], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 0, 3, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 7, 5, 8, 2, 7, 9, 9, 5, 3, 1, 2, 3, 8, 6, 2, 5, 9, 1, 3, 4, 2, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.4097142815589905, "mapping_values": [1, 1, 1, 0, 1, 0, 78, 78, 51, 27, 10, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(grad))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), beta)))), grad)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), grad))))))), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, alpha)), tf.math.add(tf.math.negative(beta), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.186332571571057, 2.5135569578746937, 2.4742515153573756, 2.2600360500845595, 2.2376045224027643, 2.3044049638751445, 2.3033516468420445], "accuracy": [0.24382512271404266, 0.13855500519275665, 0.1422533392906189, 0.1534803807735443, 0.17712323367595673, 0.10157178342342377, 0.10130762308835983], "val_loss": [3.1911609513419017, 1.7680365017482214, 1.9738595826285226, 1.8889474187578474, 1.9753713607788086, 1.973860808781215, 1.9737663269042969], "val_accuracy": [0.19233334064483643, 0.4346666634082794, 0.10266666859388351, 0.320333331823349, 0.10266666859388351, 0.10000000149011612, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 1], [1], [0, 1, 7, 6, 1, 7], [3, 3], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [8, 2, 0, 3, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 0, 0, 9, 0, 4, 6, 8, 2, 9, 7, 5, 2, 2, 5, 9, 9, 5, 3, 1, 2, 3, 8, 3, 2, 2, 9, 1, 3, 4, 2, 0], [1, 2, 1, 2, 2, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 3, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 50, 20, 1, 56, 99, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.39742857217788696, "mapping_values": [1, 1, 1, 0, 1, 0, 44, 44, 30, 14, 6, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, beta)), tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))))), beta)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.1861733274689095, 2.5238487637668094, 2.458699542013976, 2.3089596867766033, 2.304366034098494, 2.302671296579837, 2.2974253267644182], "accuracy": [0.2436930388212204, 0.13432836532592773, 0.15493330359458923, 0.09509972482919693, 0.09906221181154251, 0.10117553919553757, 0.13221503794193268], "val_loss": [3.222900322505406, 1.5295665264129639, 1.9817656108311243, 1.9752898897443498, 1.973761899130685, 1.9725258009774345, 1.9358630861554826], "val_accuracy": [0.19233334064483643, 0.3776666522026062, 0.10266666859388351, 0.10266666859388351, 0.10266666859388351, 0.10566666722297668, 0.3019999861717224]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [4], [52], [0, 1, 1], [0, 8], [1, 1], []], "fitness": -0.3814285695552826, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.186258960204779, 2.5271006354786825, 3.4673331638825426, 2.271269106389415, 2.309098598050435, 2.3045958510605318, 2.3033135679844836], "accuracy": [0.24342887103557587, 0.1406683325767517, 0.14991414546966553, 0.13472460210323334, 0.14053626358509064, 0.09774138033390045, 0.10196803510189056], "val_loss": [3.219306605202811, 1.69263413974217, 1.9763313020978654, 1.8533616065979004, 1.975163527897426, 1.9736034529549735, 1.9733289309910365], "val_accuracy": [0.19166666269302368, 0.2853333353996277, 0.10266666859388351, 0.2669999897480011, 0.10066666454076767, 0.10066666454076767, 0.1276666671037674]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [3], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [3, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.1508571356534958, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.495041384625791, 2.3765401310530856, 2.3658766329579777, 2.4410673849901676, 61.655200942128545, Infinity, 3.70375066690945], "accuracy": [0.20274733006954193, 0.1200634017586708, 0.12217672914266586, 0.14172500371932983, 0.149649977684021, 0.09853387624025345, 0.10289261490106583], "val_loss": [2.030071531023298, 1.8061040469578333, 1.975968701498849, 1.8841159684317452, 1863782.892857143, 3.1113433837890625, 3.2640258244105746], "val_accuracy": [0.10233332961797714, 0.2653333246707916, 0.14133332669734955, 0.1850000023841858, 0.10233332961797714, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1], [], [2, 3, 1, 2, 2], [52], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [68, 59], [0, 0, 1, 1, 0, 0], [1, 1], [2, 6], [7], [6], [1, 0, 0, 1, 1], [3, 0, 1, 4, 7, 1, 2, 1, 5, 0, 4, 0, 4, 8, 9, 5, 9], [0, 0, 0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025708145327526, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1], [1], [0, 1, 7, 6, 1, 7], [2], [93], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 0, 3, 2, 3, 6, 2, 3, 5, 5, 3, 6, 2, 9, 2, 6, 4, 0, 7, 4, 2, 9, 0, 4, 6, 8, 2, 1, 7, 5, 8, 2, 7, 9, 9, 5, 3, 1, 6, 3, 8, 8, 2, 5, 9, 1, 3, 4, 8, 1], [3, 2, 0, 2, 3, 2, 3, 0, 1, 2, 2, 3, 0, 4, 4, 4, 4, 1, 4, 0, 3, 2, 1, 2, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 49, 20, 1, 56, 50, 78, 43, 50, 16, 82, 20], [0, 0, 1, 1, 0, 0], [0, 0, 0, 1], [7, 8], [3], [6], [1, 0, 0, 1, 1], [0], [0, 0, 0], [55]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 71, 71, 46, 25, 9, 4, 2, 2, 0, 0, 1, 0, 1, 1], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.add(tf.math.subtract(tf.math.add(beta, beta), beta), tf.math.add(beta, grad))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, alpha))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030022101363863, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1], [0, 1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [2], [96], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 6, 7, 7, 3, 1, 9], [1, 1, 2, 0, 0, 2], [15, 64, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, beta), tf.math.multiply(tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2, 3, 1, 2, 2], [83], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [68, 59], [0, 0, 1, 1, 0, 0], [0, 1], [9, 6], [1], [32], [1, 0, 0, 1, 1], [7, 7, 5], [0, 0, 0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025708145327526, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [], [3], [], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1], [9, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 0, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0, 1], [0, 1, 0, 1], [2], [0], [6], [0, 1, 1], [9], [2, 2], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 1, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030022101363863, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [42], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1], [3, 2, 4, 2, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [4, 1, 4, 3, 2, 5, 4, 3, 4, 2, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [4], [6], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 7, 8, 3, 4, 3, 4, 8, 9], [2, 3, 0, 3, 2, 2], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 15, 9, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), sigma), beta), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 1], [1], [], [2], [42], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1], [4, 2, 0, 3, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 7, 5, 8, 2, 7, 9, 9, 5, 3, 1, 2, 3, 8, 6, 2, 5, 9, 1, 3, 4, 2, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [45, 82, 0, 8, 21, 72, 6], [1, 0], [0, 1], [8], [1], [6], [1, 0, 0, 1, 1], [3], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(alpha, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [4.254774352443189e+24, 7.793534044576375, 14.972724583517087, 22.175719374411173, 29.37616359301058, 36.57440431428828], "accuracy": [0.08572183549404144, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.202759197780064, 10.286701202392578, 16.460850851876394, 22.6324097769601, 28.80269295828683, 34.967872619628906], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [3, 4, 7, 1, 2, 3, 6, 3, 9, 3, 8, 7, 2, 8, 9, 5, 4, 6, 8, 1], [3, 3, 3, 0, 3, 2, 2, 0, 0, 0, 2, 3], [93, 99, 92, 35, 35, 40], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [], [2, 3, 0, 5, 3, 1, 1, 3, 0, 1, 2, 3, 5, 3, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 3, 1, 2, 3, 3, 4, 4, 3, 2, 4, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [0, 1, 0, 1], [8, 8], [1], [6], [1, 1, 0], [2, 0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 6, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(grad, tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 1, 0, 0], [0, 8], [2, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [5.8526477826677065e+25, 45.5212955648684, 144.90698291565434, 302.37968828359755, 517.181815459161, 788.6772699160834], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.393057686941965, 81.31744384765625, 195.66339983258928, 359.284659249442, 572.2539760044643, 834.71630859375], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 1, 7, 6, 1, 7, 4, 9], [2, 3, 3, 0, 1, 0], [6, 42, 84], [1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [5, 3, 4, 1, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 8, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 5, 7, 0, 2, 3, 4, 8, 3, 3, 8, 4, 4, 2, 5, 8, 7], [0, 2, 0, 2, 3, 2, 2, 0, 0, 4, 3, 3, 0, 4, 4, 4, 3, 2, 4, 0, 3, 2, 1, 2, 2, 3, 3, 4, 3, 4, 0, 1, 3, 0, 2, 0, 1, 0, 4, 4, 3, 5, 3, 0, 0], [68, 59, 20, 1, 13, 50, 64, 43, 61, 16, 82, 20, 47, 84, 77], [0, 0], [1, 1], [8], [0], [6], [1, 1, 1], [2], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 3, 4, 4, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302936173448977, 20.01616724232452, 11.930822009218998, 2.3025849675143384, 2.3025849675143384, 2.3025849360233095, 2.3025849360233095, 2.3025850619874246], "accuracy": [0.10038304328918457, 0.09628847241401672, 0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9779575211661202, 45.59360831124442, 1.973644188472203, 1.973644188472203, 1.973644188472203, 1.973644188472203, 1.973644188472203, 1.973644188472203], "val_accuracy": [0.07100000232458115, 0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [3], [6, 42, 84], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [6], [0, 1, 0, 0], [0], [3, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302183415517831, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}]