[{"genotype": [[0], [0, 1, 1], [1], [0, 1, 7, 6, 1, 7], [3, 3], [93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [4, 2, 0, 3, 2, 3, 7, 0, 3, 5, 5, 3, 6, 0, 9, 2, 6, 4, 8, 7, 4, 0, 9, 0, 4, 6, 8, 2, 1, 7, 5, 8, 2, 7, 9, 9, 5, 3, 1, 2, 3, 8, 6, 2, 5, 9, 1, 3, 4, 2, 0], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1, 1], [8], [1], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.3708571493625641, "mapping_values": [1, 1, 1, 0, 1, 0, 78, 78, 51, 27, 10, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(grad))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))))), beta)))), grad)), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))), tf.math.add(beta, grad)))))), tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), grad))))))), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(alpha, alpha)), tf.math.add(tf.math.negative(beta), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5110228562698294, 2.2706138718287234, 2.470732597390879, 2.3327053917114053, 2.303431990628135, 2.302473399680383, 2.284366505288681], "accuracy": [0.20842689275741577, 0.1352529376745224, 0.17936864495277405, 0.146479994058609, 0.09985470771789551, 0.10289261490106583, 0.15532954037189484], "val_loss": [1.998241628919329, 1.499413285936628, 1.8281272479466029, 1.9740039961678642, 1.9734575407845634, 1.9723445347377233, 1.9794000898088728], "val_accuracy": [0.09866666793823242, 0.4183333218097687, 0.34066668152809143, 0.10133333504199982, 0.10133333504199982, 0.10199999809265137, 0.10266666859388351]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.25514286756515503, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.523067007920116, 2.3159555476559874, 2.3035065412615836, 2.3104235348117634, 2.3028597057676587, 2.1820863199555216, 2.43606792436599, 2.303856479997223, 2.3033114252404103, 2.3031023154877843, 2.3032169996424594], "accuracy": [0.20763438940048218, 0.1006472036242485, 0.0952318087220192, 0.13459251821041107, 0.109232597053051, 0.20155857503414154, 0.1228371411561966, 0.09721305221319199, 0.10011887550354004, 0.09655263274908066, 0.09549596905708313], "val_loss": [2.0301691464015414, 1.974003519330706, 1.9722988946097237, 1.9758320535932268, 1.9647811480930872, 2.4247416087559293, 1.9760331426348006, 1.9741199357169015, 1.9737755911690849, 1.9736747741699219, 1.9736261367797852], "val_accuracy": [0.09866666793823242, 0.10066666454076767, 0.10066666454076767, 0.11666666716337204, 0.2150000035762787, 0.27266666293144226, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [3], [], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [6], [0, 1, 1], [0], [1, 1], []], "fitness": -0.24742856621742249, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.523073565674937, 2.3166815607287328, 2.303490487953864, 2.2522197577144336, 2.717350715942796, 2.3061191614325085, 2.304672070277633, 2.302951723498565, 2.300040563524927], "accuracy": [0.20776647329330444, 0.1026284471154213, 0.0956280529499054, 0.14581957459449768, 0.12191256135702133, 0.1014397069811821, 0.09259014576673508, 0.09972262382507324, 0.10302469879388809], "val_loss": [2.0338572093418668, 1.97399868283953, 1.9723662648882185, 2.215736048562186, 1.9766263961791992, 1.974006107875279, 1.9737449373517717, 1.972963809967041, 1.9446678842817033], "val_accuracy": [0.09866666793823242, 0.10066666454076767, 0.10066666454076767, 0.23266667127609253, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.10100000351667404, 0.10966666787862778]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [4], [96], [0, 1, 0, 0], [0, 8], [1, 1], []], "fitness": -0.24171428382396698, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.523015150824212, 2.3161246028983786, 2.303762022530351, 2.30064920383343, 2.424481570145961, 2.2992242084219, 2.3037532868874684, 2.3031314568134773, 2.3030537461182696, 2.3028083417582836], "accuracy": [0.20776647329330444, 0.09787346422672272, 0.09285431355237961, 0.11372341960668564, 0.15598995983600616, 0.11200633645057678, 0.09549596905708313, 0.09787346422672272, 0.09219389408826828, 0.1018359512090683], "val_loss": [2.030149391719273, 1.9741392135620117, 1.9735522270202637, 1.9413863590785436, 1.7271265983581543, 1.9743739536830358, 1.9738263402666365, 1.9736055646623885, 1.9734467097691126, 1.9731152398245675], "val_accuracy": [0.09866666793823242, 0.10066666454076767, 0.11900000274181366, 0.10733333230018616, 0.22200000286102295, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0], [1], [], [3], [6, 42, 84], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0], [1], [8], [0], [52], [1, 0, 0, 1, 1], [7, 7, 5], [0, 0, 0], [39]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030924319339197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [3, 4, 7, 1, 2, 0, 6, 3, 5, 3, 8, 7, 9, 3, 0, 5, 4, 6, 8, 1], [3, 3, 1, 0, 2, 0, 3, 1, 3, 0, 0, 3, 3], [90, 4, 56, 62, 97], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [], [2, 3, 0, 5, 3, 1, 1, 3, 0, 1, 2, 3, 5, 3, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 3, 1, 2, 3, 3, 4, 4, 3, 2, 4, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1], [8, 8], [1], [52], [1, 1, 0], [2, 0], [1, 1, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 5, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(grad)))))), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1], [9, 2, 0, 7, 7, 0], [2, 3, 3, 0, 1], [93], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0], [1], [8], [0], [52], [0, 1, 1], [9], [1, 1], [99]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030924319339197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [83], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [3, 2, 0, 0, 2, 1], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1], [1], [2, 6], [1], [52], [0, 1, 1], [3], [2, 1, 3, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13551710546016693, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [], [2], [42], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0, 1, 1, 0, 0], [0, 0, 0, 1], [7, 8], [3], [], [1, 0, 0, 1, 1], [7, 7, 5], [0, 0, 0], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030924319339197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1], [5, 2, 0, 3, 2, 8, 2, 5, 9, 1, 5], [2, 3, 1, 2, 2], [83], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [8, 4, 3, 9, 8, 3, 3, 0, 7, 3, 3, 9, 8, 1, 4], [4, 3, 2, 3, 2, 5, 4, 3, 4, 2, 2], [68, 59], [0, 0, 1, 1, 0, 0], [0, 1], [2, 6], [1], [], [1, 0, 0, 1, 1], [7, 7, 5], [0, 0, 0], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302634174482713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [7, 6, 0, 7, 7, 0], [2, 0, 1, 2, 3], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 7, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [5, 5, 2, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [86, 82, 0, 8, 21, 72, 6], [0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 1], [2], [4], [6], [0, 1, 1], [9], [1], [36]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 3, 2, 1, 1, 0, 1, 1, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, beta)), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030924319339197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [9], [2, 0], [6, 42, 84], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [], [0, 0], [1], [8], [1], [52], [1, 1, 1], [0], [2, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.302078408335871, 2.3025847335674854, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [0], [6, 42, 84], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [2, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [0, 0], [1], [8], [0], [52], [0, 1, 1], [0], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302078408335871, 2.3025847335674854, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [], [0], [52], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [3, 5, 3, 2, 5, 1, 3, 3, 5, 1, 1, 1, 3, 1, 0, 0, 0, 1, 2, 1, 1, 1, 5, 5, 0, 1, 5, 3, 4, 2, 2, 4, 0, 5, 5], [65, 82, 0, 8, 21, 72, 6], [1, 0, 0, 1, 0, 0, 0, 1, 1], [1, 1], [8], [7], [6], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [3, 0, 1, 4, 7, 1, 2, 1, 5, 0, 4, 0, 4, 8, 9, 5, 9], [0, 2, 3, 3, 2, 3, 0, 0], [91, 26, 92, 47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 47, 47, 32, 15, 5, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(grad)))), tf.math.add(beta, tf.math.subtract(alpha, grad)))), tf.math.add(beta, tf.math.pow(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.square(grad)), grad))), tf.math.subtract(tf.math.add(beta, alpha), alpha)))), tf.math.add(beta, alpha)), tf.math.negative(grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))))))), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [6, 42, 84], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [68, 59, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1, 0], [1], [8], [0], [42], [0, 1, 0, 1], [3, 8], [1, 1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 77, 77, 46, 31, 9, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 59, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(alpha, tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.pow(grad, beta))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.add(beta, grad))), tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), alpha)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(alpha, beta)), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0], [1], [], [2], [11], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1], [2, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [3, 3, 0, 5, 3, 1, 1, 2, 0, 1, 2, 3, 5, 0, 0, 3, 3, 3, 0, 1, 2, 0, 0, 2, 1, 1, 2, 3, 3, 4, 4, 3, 2, 4, 3], [26, 28, 57, 46, 22, 91, 31, 75, 27, 59, 5, 91], [0, 0], [1, 1], [8], [7], [53], [1], [3, 0, 1, 4, 7, 1, 2, 1, 5, 0, 4, 0, 4, 8, 9, 5, 9], [3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1], [1], [0, 1, 7, 6, 1, 7], [2], [], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1, 1], [4, 2, 4, 9, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [1, 2, 0, 2, 3, 2, 3, 0, 0, 4, 2, 3, 0, 4, 4, 4, 4, 2, 4, 0, 3, 2, 1, 1, 2, 3, 5, 4, 3, 4, 0, 1, 3, 0, 2], [45, 82, 0, 8, 21, 72, 6], [0, 0], [0, 1], [8], [0], [6], [0, 1, 1], [0], [0, 1], [15]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [6.980330301077453, 48.33541549059851, 156.9175083642591, 357.056224528242, 693.7269418353906, 1200.1410598321565], "accuracy": [0.09840179979801178, 0.09470347315073013, 0.10117553919553757, 0.09879804402589798, 0.10302469879388809, 0.09945846349000931], "val_loss": [14.211162567138672, 60.43968636648996, 156.71546718052454, 323.9040788922991, 585.8251953125, 967.0855887276786], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1], [1], [], [2], [42], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1], [9, 2, 4, 2, 3, 0, 2, 3, 4, 3, 5, 9, 7, 8, 1, 4, 9, 0, 0, 2, 7, 2, 0, 3, 8, 3, 8, 5, 1, 0, 1, 9, 2, 2, 0, 7, 2, 0, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 7, 6, 4, 0, 7, 7, 0, 8], [4, 1, 4, 3, 2, 5, 4, 3, 4, 2, 2], [45, 82, 0, 8, 21, 72, 6], [0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1], [8], [3], [6], [1, 0, 0, 1, 1], [3], [2, 2], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1242285858.5405066, 182787475643.46057, 3175697346431.7803, 22074621540934.94, 97732303161966.44, 321783903391833.25], "accuracy": [0.09945846349000931, 0.0956280529499054, 0.10038304328918457, 0.09919429570436478, 0.10289261490106583, 0.09932637959718704], "val_loss": [9943566043.428572, 535922212864.0, 5752025963373.714, 31357212894354.285, 117456759535323.42, 346457764790272.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [0, 1, 7, 6, 1, 7], [1, 3, 1, 2, 2], [83], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0], [2, 2, 4, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [3, 2, 0, 0, 2, 1], [68, 59], [1], [1], [2, 6], [1], [], [0, 1, 1], [0, 7, 5], [1, 1], [9]], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3029010062834305, 2.303187508230999, 2.304156612017844, 2.3021041617307207, 2.3028747162184677, 2.3018099633757116], "accuracy": [0.09166556596755981, 0.08479725569486618, 0.08506141602993011, 0.08677849918603897, 0.0886276587843895, 0.09034473448991776], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1], [1], [0, 1, 7, 6, 1, 7, 2, 2, 4, 2, 3, 2, 5, 4, 3, 1, 1, 4, 7, 8, 4, 8, 2, 6, 3, 1, 3, 6, 5, 8], [1, 3, 1, 2, 2], [83], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [2, 2, 9, 0, 3, 0, 9, 3, 5, 3, 5, 9, 6, 3, 1, 4, 3, 0, 0, 4, 7, 2, 1, 3, 6, 4, 8, 5, 1, 0, 1, 9, 2, 2, 6, 7, 1, 7, 6, 1, 1, 4, 7, 2, 8, 2, 2, 9, 2, 2, 1, 1, 0, 7, 7, 0, 2], [2, 1, 0, 0, 2, 1], [68, 38, 20, 1, 56, 50, 64, 43, 50, 16, 82, 20], [1], [], [2, 6], [1], [52], [0, 1, 1, 0, 0], [0, 7, 5], [2, 1, 3, 3], []], "fitness": -0.03914285823702812, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3029010062834305, 2.303187508230999, 2.304156612017844, 2.3021041617307207, 2.3028747162184677, 2.3018099633757116], "accuracy": [0.09166556596755981, 0.08479725569486618, 0.08506141602993011, 0.08677849918603897, 0.0886276587843895, 0.09034473448991776], "val_loss": [1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026, 1.9704886163984026], "val_accuracy": [0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}]