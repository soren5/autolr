[{"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9983216236768508, 1.3986760489519607, 1.065999144245652, 0.9004880309325357, 0.8161014156051205, 0.7571254439436449, 0.7408727163951064, 0.6943364478829767, 0.6759225958688873, 0.6866568771367217, 0.6452896925893206, 0.6437927345794348, 0.6129962593777588, 0.601662735401474, 0.5953114220116983, 0.5768213787130503, 0.5744850909736697, 0.5693918272268346, 0.5487175287508835, 0.5502228463220401, 0.5291588075519034, 0.5181979655573916, 0.5252380886759347, 0.5011235541828777, 0.48815436768509757, 0.48599699204545277, 0.47843578037033463, 0.46753139902713703, 0.4666171017347814, 0.46433098590794397, 0.45372998011409804, 0.45194324194054486, 0.44811536302230837, 0.43259270225675306, 0.4432708397399417, 0.4162185334486968, 0.4279688313739206, 0.41952091158656646, 0.408108123191013, 0.39263412943684334, 0.40276282717129497, 0.41044870554306534], "accuracy": [0.3311319649219513, 0.5134063959121704, 0.6059965491294861, 0.6647734642028809, 0.6913221478462219, 0.71100252866745, 0.7218332886695862, 0.7280412316322327, 0.7446836829185486, 0.7376832365989685, 0.7547219395637512, 0.7561748623847961, 0.7677981853485107, 0.7729493975639343, 0.7750627398490906, 0.7820631265640259, 0.7814027070999146, 0.7891955971717834, 0.7928939461708069, 0.7922335267066956, 0.8016114234924316, 0.8054417967796326, 0.7997622489929199, 0.8075551390647888, 0.8141592741012573, 0.8128384351730347, 0.817989706993103, 0.819970965385437, 0.8260467648506165, 0.8198388814926147, 0.8284242749214172, 0.8245938420295715, 0.834632158279419, 0.837537944316864, 0.8330471515655518, 0.8403117060661316, 0.8355567455291748, 0.8408400416374207, 0.8498216867446899, 0.8536521196365356, 0.8515387773513794, 0.8461233377456665], "val_loss": [1.532332181930542, 0.8692977939333234, 0.771152104650225, 0.6338146924972534, 0.5926976544516427, 0.5900765487125942, 0.5645373889378139, 0.5512397289276123, 0.5305701323917934, 0.5164863041469029, 0.5062090328761509, 0.557966947555542, 0.5155602012361798, 0.48565939494541716, 0.4972776174545288, 0.5059925488063267, 0.48692124230521067, 0.48326107433864046, 0.4532884018761771, 0.4391024793897356, 0.44492392880576, 0.4242249642099653, 0.43650553056171965, 0.41940198625837055, 0.42271220684051514, 0.4520599331174578, 0.40887612104415894, 0.39589022738592966, 0.40950489044189453, 0.39850038290023804, 0.4011076773915972, 0.38922518491744995, 0.38869678122656687, 0.4068487456866673, 0.37582521779196604, 0.42843298401151386, 0.36539942026138306, 0.38469397170203073, 0.3669095976012094, 0.40936840432030813, 0.39055012805121286, 0.36306618792670114], "val_accuracy": [0.3486666679382324, 0.6309999823570251, 0.6586666703224182, 0.7196666598320007, 0.7256666421890259, 0.746666669845581, 0.7326666712760925, 0.7553333044052124, 0.7559999823570251, 0.7583333253860474, 0.7736666798591614, 0.7559999823570251, 0.7633333206176758, 0.7856666445732117, 0.7749999761581421, 0.7763333320617676, 0.7979999780654907, 0.7760000228881836, 0.8026666641235352, 0.8169999718666077, 0.8046666383743286, 0.8186666369438171, 0.809333324432373, 0.8186666369438171, 0.8213333487510681, 0.7990000247955322, 0.8299999833106995, 0.8370000123977661, 0.8270000219345093, 0.8343333601951599, 0.8326666951179504, 0.8376666903495789, 0.8389999866485596, 0.8230000138282776, 0.8379999995231628, 0.8130000233650208, 0.846666693687439, 0.8373333215713501, 0.846666693687439, 0.8296666741371155, 0.8366666436195374, 0.8456666469573975]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8162857294082642, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9983623457968966, 1.3921759831292864, 1.0811574398455697, 0.8968044587130151, 0.8095881600012128, 0.760059540510461, 0.742003138251765, 0.6944848293121921, 0.6975458578001538, 0.6793610953761917, 0.6451251611985456, 0.6283545675546643, 0.6092255466161639, 0.6015828836312179, 0.5991465530186407, 0.5727642306546493, 0.575326545662679, 0.5804698630063257, 0.5518470365515222, 0.5391718429061699, 0.5219416268836112, 0.5272807866008196, 0.5191831588233388, 0.5042588784473919, 0.48879235326306947, 0.4911151246356297, 0.4809767767155191, 0.45939946713511814, 0.46557150360946215, 0.4653341149641396, 0.4544365334236831, 0.4450904265599181, 0.447425593706784, 0.4357794563665744, 0.444258995410269], "accuracy": [0.3311319649219513, 0.5182934999465942, 0.6048077940940857, 0.6643772125244141, 0.691850483417511, 0.7145687341690063, 0.7160216569900513, 0.7290979027748108, 0.7333245277404785, 0.7375511527061462, 0.7541936039924622, 0.7592127919197083, 0.7663452625274658, 0.7697794437408447, 0.7705719470977783, 0.7841764688491821, 0.778761088848114, 0.7824593782424927, 0.789988100528717, 0.7994980812072754, 0.8039889335632324, 0.8004226684570312, 0.800290584564209, 0.8049134612083435, 0.8127063512802124, 0.8145555257797241, 0.817461371421814, 0.8247259259223938, 0.8251221776008606, 0.8186501264572144, 0.8280280232429504, 0.8255184292793274, 0.833179235458374, 0.8370096683502197, 0.833179235458374], "val_loss": [1.5333802018846785, 0.8719638926642281, 0.7603485073362078, 0.6261075394494193, 0.5935079370226178, 0.6313217537743705, 0.5540679693222046, 0.5824076448168073, 0.5531045198440552, 0.5252303055354527, 0.5073505640029907, 0.5611300979341779, 0.5046794073922294, 0.5191963740757534, 0.48132857254573275, 0.5014063119888306, 0.5152589934212821, 0.46431771346500944, 0.4443487099238804, 0.43472771985190256, 0.4412353038787842, 0.42616156169346403, 0.4455204350607736, 0.41735961607524324, 0.41513143266950336, 0.4607693978718349, 0.4091512816292899, 0.3991606320653643, 0.42409987109048025, 0.3927562066486904, 0.3960378510611398, 0.39266473054885864, 0.3905155999319894, 0.4035455584526062, 0.37725208486829487], "val_accuracy": [0.34833332896232605, 0.6313333511352539, 0.6636666655540466, 0.7210000157356262, 0.7390000224113464, 0.703000009059906, 0.7509999871253967, 0.7283333539962769, 0.7426666617393494, 0.7509999871253967, 0.7786666750907898, 0.7516666650772095, 0.7746666669845581, 0.753333330154419, 0.7836666703224182, 0.7726666927337646, 0.7620000243186951, 0.7913333177566528, 0.8113333582878113, 0.8163333535194397, 0.8066666722297668, 0.8183333277702332, 0.8040000200271606, 0.8176666498184204, 0.8173333406448364, 0.7950000166893005, 0.8273333311080933, 0.8339999914169312, 0.8176666498184204, 0.8403333425521851, 0.8353333473205566, 0.8379999995231628, 0.8393333554267883, 0.8253333568572998, 0.8356666564941406]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.19028571248054504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3013826667388604, 2.30250098434154, 2.302165066954986, 2.3027176743312014, 2.3023689593369414, 2.3000480183331944, 2.3025602503632827, 2.301059494023593, 2.300249828622798, 2.3003061109010523, 2.299581922638953, 2.298052438387797, 2.2983042524002957, 2.299064407983492, 2.3004725233848147, 2.2986459453045147, 2.299531371822415, 2.298257823129608, 2.2969497039002857, 2.298094148696327, 2.2969485530291474, 2.2985272819749305, 2.2982831688101077, 2.298505234475842, 2.2975953397434683, 2.2984007757731306, 2.2966965297272712, 2.2962868030375776, 2.2957805261446924, 2.296440528258199, 2.2970520465633166, 2.296095428087645, 2.296480016181844, 2.296287980392672, 2.296235158411645, 2.295136942130983, 2.2937823672729825, 2.296047547017547, 2.2925703450279653, 2.2949741010762885, 2.294722385378782, 2.294165395081177, 2.2947490649562803, 2.2942742957824476, 2.293114988008085, 2.292318050966224, 2.2928711188357536, 2.293581250384342, 2.2931793313913844, 2.2926816316470338, 2.2930635607647245, 2.293045277325327, 2.2920564761518913, 2.2917904943885143, 2.290329290025223, 2.2906159280140357, 2.2895972845246053, 2.289931041658074, 2.2907894904729065, 2.2898757328619936, 2.288354866697709, 2.289553808167689, 2.28974026110131, 2.2900769595598516, 2.2886378682914614, 2.2904476213133993, 2.2885892236268974, 2.288827317753929, 2.28983658381331, 2.287703465036098, 2.2883851736323426, 2.287049767489541, 2.2858698079929596, 2.2868892872228033, 2.284980096868662, 2.2855146144438163, 2.2864460682494214, 2.285915865543543, 2.28616099964752, 2.2872557675975456, 2.2858851019260102, 2.287100649686175, 2.2860214072857175, 2.285800285846991, 2.285181653749957, 2.285356415072295, 2.2854667488358134, 2.284121969734689, 2.2830891579905237, 2.2845362374622273, 2.284679943308177, 2.2843019683615187, 2.283164641167809, 2.283699193823969, 2.2848950345927794, 2.283128874665002, 2.2839189727056644, 2.281280323341459, 2.2820766249258506, 2.2823830546798676], "accuracy": [0.08836349099874496, 0.09853387624025345, 0.09298639744520187, 0.09074098616838455, 0.08796724677085876, 0.09536388516426086, 0.09192973375320435, 0.09985470771789551, 0.09126931428909302, 0.09787346422672272, 0.0948355570435524, 0.09985470771789551, 0.09998679161071777, 0.09893012791872025, 0.09351472556591034, 0.09549596905708313, 0.09642054885625839, 0.10328886657953262, 0.10196803510189056, 0.10315678268671036, 0.1002509593963623, 0.09642054885625839, 0.09602430462837219, 0.09906221181154251, 0.09800554811954498, 0.0948355570435524, 0.09959053993225098, 0.10249637067317963, 0.10593052208423615, 0.10672302544116974, 0.10566636174917221, 0.10791176557540894, 0.1022322028875351, 0.10540219396352768, 0.10685510188341141, 0.107647605240345, 0.11015717685222626, 0.10527011007070541, 0.11068551242351532, 0.10910051316022873, 0.10394927859306335, 0.11042134463787079, 0.10408136248588562, 0.1142517477273941, 0.10606260597705841, 0.11345925182104111, 0.10910051316022873, 0.10830801725387573, 0.10896842926740646, 0.11266675591468811, 0.11094967275857925, 0.11398758739233017, 0.11530841141939163, 0.11715757846832275, 0.11478008329868317, 0.1220446452498436, 0.12349755316972733, 0.11874257028102875, 0.12323339283466339, 0.12323339283466339, 0.12693171203136444, 0.12389380484819412, 0.12561088800430298, 0.12521463632583618, 0.12376172095537186, 0.12389380484819412, 0.12534672021865845, 0.12653546035289764, 0.12389380484819412, 0.1340641975402832, 0.12495046854019165, 0.13036586344242096, 0.1278562992811203, 0.13261127471923828, 0.12878087162971497, 0.12930920720100403, 0.13181878626346588, 0.13036586344242096, 0.13129045069217682, 0.13313961029052734, 0.13432836532592773, 0.13010171055793762, 0.12851670384407043, 0.13089419901371002, 0.1348566859960556, 0.13934750854969025, 0.13578127324581146, 0.14159291982650757, 0.14014001190662384, 0.13459251821041107, 0.14014001190662384, 0.1332716941833496, 0.1460837423801422, 0.13842293620109558, 0.13168670237064362, 0.13710209727287292, 0.1364416927099228, 0.14172500371932983, 0.13829085230827332, 0.14159291982650757], "val_loss": [1.9709890229361398, 1.9707918848310197, 1.9705952916826521, 1.9703993797302246, 1.97020537512643, 1.970010212489537, 1.969815458570208, 1.969620636531285, 1.9694225447518485, 1.9692268371582031, 1.9690299034118652, 1.968834400177002, 1.9686361040387834, 1.9684388978140694, 1.9682439395359583, 1.9680492537362235, 1.9678543635777064, 1.9676592690604073, 1.9674632889883858, 1.9672681944710868, 1.9670704432896204, 1.9668760299682617, 1.9666806629725866, 1.9664854322160994, 1.966290065220424, 1.9660941532679967, 1.9659005573817663, 1.9657044410705566, 1.9655091421944755, 1.9653175898960658, 1.9651224953787667, 1.9649291719709123, 1.9647368703569685, 1.9645423889160156, 1.9643504279000419, 1.9641566276550293, 1.9639639173235213, 1.963771138872419, 1.9635750225612096, 1.9633797918047224, 1.963186808994838, 1.9629923275538854, 1.9628021376473563, 1.9626101766313826, 1.9624174662998743, 1.9622242791312081, 1.9620321818760462, 1.9618353162493025, 1.9616434914725167, 1.961451734815325, 1.9612558909824915, 1.961064270564488, 1.9608708790370397, 1.960679599217006, 1.9604861395699638, 1.9602905000959123, 1.9600952012198312, 1.9599018096923828, 1.959709576198033, 1.9595176151820592, 1.9593225887843542, 1.9591283798217773, 1.9589333534240723, 1.9587394850594657, 1.9585441861833846, 1.9583519526890345, 1.958158356802804, 1.9579648971557617, 1.957771165030343, 1.9575774329049247, 1.9573856081281389, 1.9571900367736816, 1.9569970539637975, 1.9568054335457938, 1.9566099303109306, 1.9564190592084612, 1.956226144518171, 1.9560317993164062, 1.9558379309517997, 1.9556446756635393, 1.955451352255685, 1.9552602086748396, 1.9550671577453613, 1.9548735618591309, 1.9546783992222376, 1.9544813292367118, 1.9542881420680456, 1.9540940012250627, 1.9538999966212682, 1.9537066050938197, 1.9535130773271834, 1.9533183915274483, 1.9531222070966447, 1.9529290880475725, 1.9527366501944405, 1.9525415556771415, 1.9523470742361886, 1.952155930655343, 1.9519621985299247, 1.951768125806536], "val_accuracy": [0.03733333200216293, 0.039000000804662704, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.04333333298563957, 0.043666668236255646, 0.043666668236255646, 0.04466666653752327, 0.04633333161473274, 0.047333333641290665, 0.04933333396911621, 0.050999999046325684, 0.052666667848825455, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.06066666543483734, 0.06333333253860474, 0.06533333659172058, 0.06566666811704636, 0.0676666647195816, 0.07000000029802322, 0.07199999690055847, 0.07333333045244217, 0.07500000298023224, 0.07733333110809326, 0.07866666465997696, 0.08133333176374435, 0.08399999886751175, 0.08566666394472122, 0.08733333647251129, 0.08799999952316284, 0.08933333307504654, 0.08966666460037231, 0.09099999815225601, 0.09333333373069763, 0.09533333033323288, 0.09799999743700027, 0.09933333098888397, 0.10133333504199982, 0.10333333164453506, 0.10466666519641876, 0.10566666722297668, 0.1066666692495346, 0.10999999940395355, 0.11133333295583725, 0.1120000034570694, 0.11366666853427887, 0.11599999666213989, 0.11833333224058151, 0.12033333629369736, 0.12200000137090683, 0.12399999797344208, 0.12466666847467422, 0.12666666507720947, 0.12933333218097687, 0.1313333362340927, 0.13300000131130219, 0.1340000033378601, 0.1379999965429306, 0.1379999965429306, 0.14133332669734955, 0.14399999380111694, 0.1469999998807907, 0.1483333259820938, 0.15000000596046448, 0.1509999930858612, 0.15199999511241913, 0.1550000011920929, 0.15666666626930237, 0.16099999845027924, 0.16233333945274353, 0.16466666758060455, 0.16633333265781403, 0.16899999976158142, 0.17266666889190674, 0.17466667294502258, 0.17533333599567413, 0.17633333802223206, 0.1783333271741867, 0.18133333325386047, 0.18299999833106995, 0.1850000023841858, 0.1860000044107437, 0.18766666948795319, 0.18966667354106903, 0.19033333659172058, 0.1913333386182785, 0.19499999284744263, 0.1966666728258133, 0.19766665995121002, 0.19900000095367432, 0.20133332908153534, 0.20333333313465118]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 7, 0, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 9, 5, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 1, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 38, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0, 0, 0], [0, 1, 1], [3], [4, 1], [52], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], [7, 4, 9, 8, 6, 7, 4, 5, 6, 5, 2, 2, 9], [3, 3, 2, 1, 0, 0, 2, 2], [4, 9, 81, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 18, 11, 7, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 5, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 65, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.301907909292791, 2.305022936266616, 2.306685768869874, 2.3099118032947965, 2.3130621583848154, 2.312457950438617, 2.3207315306196814, 2.323487153536356, 2.3296921809335913, 2.3415454076407465, 2.3693900302951962, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.09496764093637466, 0.08651433140039444, 0.08109892904758453, 0.07634394615888596, 0.07951393723487854, 0.07198520749807358, 0.07938185334205627, 0.07726852595806122, 0.0804385170340538, 0.08136309683322906, 0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721950803484236, 1.9738194601876395, 1.9754294667925154, 1.9772411755153112, 1.9796648706708635, 1.9818410873413086, 1.9851733616420202, 1.988729613167899, 1.9946770668029785, 2.0068985394069125, 2.0501014845711842, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.024666666984558105, 0.024000000208616257, 0.029999999329447746, 0.03400000184774399, 0.04399999976158142, 0.05966666713356972, 0.07500000298023224, 0.09000000357627869, 0.0976666659116745, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [1, 0, 6, 8, 6, 7, 4, 5, 6], [0, 1, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.302565838950201, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 5, 2, 2, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 7, 2, 6, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [36, 46, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [10], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 5, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 6, 7, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad))))))))), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(alpha, tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(sigma, sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 4, 0, 3, 2, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 5, 7, 2, 1, 2, 0, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [86, 46, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 4, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 65, 20, 7, 45, 13], [1], [1, 1, 1], [9], [3, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(grad, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 3, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 8, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 2, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 65, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.multiply(grad, tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 6, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 1, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [9, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014709160958047, 2.302802353928102, 2.302676266021638, 2.3034359245189444, 2.3032972379965853, 2.301178304164354], "accuracy": [0.0882314071059227, 0.09721305221319199, 0.09245806187391281, 0.08902391046285629, 0.08638224750757217, 0.09298639744520187], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]