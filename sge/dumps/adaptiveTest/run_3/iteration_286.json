[{"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8117142915725708, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9996255550717066, 1.3187737037886436, 1.0427261523173201, 0.9148837292844656, 0.78739050759332, 0.7710071649722703, 0.7122314700109139, 0.7342343083493635, 0.6675729549493237, 0.6583706954167645, 0.6575275862363382, 0.6314661591642836, 0.6217676708569474, 0.6007053165891781, 0.5865146236459986, 0.5572473461743532, 0.5414964046303181, 0.5408292995578089, 0.5395377016165127, 0.531084900373292, 0.5096196517448667, 0.5078886083765525, 0.5223370453763742, 0.48659597960571493, 0.49355579920338444], "accuracy": [0.3280940353870392, 0.5295205116271973, 0.6229031682014465, 0.6476026773452759, 0.7078325152397156, 0.7054550051689148, 0.7283053994178772, 0.7201162576675415, 0.7506273984909058, 0.7526086568832397, 0.7516840696334839, 0.7581561207771301, 0.7567031979560852, 0.7691190242767334, 0.7769119143486023, 0.7913089394569397, 0.7947431206703186, 0.7928939461708069, 0.791441023349762, 0.7996301651000977, 0.8092722296714783, 0.8039889335632324, 0.8010830879211426, 0.8206313848495483, 0.8107251524925232], "val_loss": [1.230480773108346, 0.8540079763957432, 0.7213299444743565, 0.6175430842808315, 0.7038611173629761, 0.594597475869315, 0.6225099904196603, 0.5386631829398019, 0.5821456227983747, 0.522051283291408, 0.5522340365818569, 0.5096545049122402, 0.49369496958596365, 0.5252049480165754, 0.45829081535339355, 0.4476110764912197, 0.4578658512660435, 0.4542074884687151, 0.46238623346601215, 0.4172260420663016, 0.4427828448159354, 0.4254381060600281, 0.42503607273101807, 0.41544527666909353, 0.41407310962677], "val_accuracy": [0.5316666960716248, 0.6190000176429749, 0.6396666765213013, 0.734000027179718, 0.6776666641235352, 0.7333333492279053, 0.7160000205039978, 0.7593333125114441, 0.7260000109672546, 0.7649999856948853, 0.7649999856948853, 0.7666666507720947, 0.7746666669845581, 0.7676666378974915, 0.793666660785675, 0.8043333292007446, 0.7976666688919067, 0.8029999732971191, 0.8026666641235352, 0.8209999799728394, 0.796999990940094, 0.8176666498184204, 0.8196666836738586, 0.8100000023841858, 0.8113333582878113]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9996105842051206, 1.3198178203555304, 1.0417780792314804, 0.9081867283062298, 0.7879855659234447, 0.7751351635784537, 0.718214858784384, 0.723208108503805, 0.674371758094317, 0.6564632197097781, 0.6442909215136196, 0.6166265772050634, 0.6260250935213142, 0.6024312110168272, 0.5892677907426643, 0.5549720853563187, 0.5451889545721322, 0.5349596629935075, 0.5362001184411982, 0.5337088036814291, 0.5028227721191495, 0.5166130149172377, 0.523066118133224, 0.4906145052556522, 0.49213206923522845], "accuracy": [0.32822611927986145, 0.5295205116271973, 0.6215823292732239, 0.6510368585586548, 0.7091533541679382, 0.7077004313468933, 0.7244749665260315, 0.7231541275978088, 0.7448157668113708, 0.750231146812439, 0.755118191242218, 0.7681944370269775, 0.7556465268135071, 0.7693831920623779, 0.7788931727409363, 0.7936864495277405, 0.7936864495277405, 0.7968564033508301, 0.7918372750282288, 0.7996301651000977, 0.8131026029586792, 0.8034605979919434, 0.8024039268493652, 0.8204993009567261, 0.8117818236351013], "val_loss": [1.230437891823905, 0.8618993248258319, 0.7196399484361921, 0.6149886846542358, 0.7195418732506889, 0.592300568308149, 0.6061130251203265, 0.5425749846867153, 0.5612754821777344, 0.5200084277561733, 0.5427777085985456, 0.49967758996146067, 0.4851343631744385, 0.5379225867135184, 0.45973714760371615, 0.45083372933523996, 0.4556133917399815, 0.45384107317243305, 0.4613837514604841, 0.417931820665087, 0.45314812660217285, 0.42443100043705534, 0.4299364260264805, 0.4124485083988735, 0.4092451589448111], "val_accuracy": [0.5299999713897705, 0.6333333253860474, 0.6466666460037231, 0.737666666507721, 0.6800000071525574, 0.7353333234786987, 0.7246666550636292, 0.7566666603088379, 0.7360000014305115, 0.7613333463668823, 0.7673333287239075, 0.7699999809265137, 0.7806666493415833, 0.7680000066757202, 0.7919999957084656, 0.800000011920929, 0.7976666688919067, 0.8023333549499512, 0.8009999990463257, 0.8223333358764648, 0.7903333306312561, 0.8146666884422302, 0.8166666626930237, 0.8136666417121887, 0.8213333487510681]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [2, 4, 6, 9, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 0, 4, 1, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8097142577171326, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9996076997056094, 1.3201397947426785, 1.0426192835904289, 0.9036262547256546, 0.783323911147709, 0.773183852949824, 0.7171929732620472, 0.7000494810489695, 0.6963690212216628, 0.6480626817376874, 0.6622862231619622, 0.6231978531322144, 0.6284840889201266, 0.6022058879741824, 0.5905031961866295, 0.5603735527861876, 0.5471943139620524, 0.5431808401580658, 0.5217223184896954, 0.5409569656293091, 0.5153338678871022, 0.5063895400032439, 0.527245576316182, 0.4892492911811235, 0.49431296561482624], "accuracy": [0.3280940353870392, 0.5299167633056641, 0.6218464970588684, 0.652621865272522, 0.7116629481315613, 0.7021529674530029, 0.724739134311676, 0.7300224304199219, 0.7313432693481445, 0.7557786107063293, 0.7489103078842163, 0.7655527591705322, 0.7547219395637512, 0.767930269241333, 0.776251494884491, 0.7918372750282288, 0.7903843522071838, 0.7931581139564514, 0.8035926818847656, 0.7969884872436523, 0.8053097128868103, 0.807158887386322, 0.7985734939575195, 0.8206313848495483, 0.8107251524925232], "val_loss": [1.2305845873696464, 0.8410086291176933, 0.7087363515581403, 0.6109564134052822, 0.6569572176252093, 0.6560983828135899, 0.6016760894230434, 0.5536357504980904, 0.56354820728302, 0.5198743513652256, 0.5596983773367745, 0.5139550822121757, 0.4968637228012085, 0.5358245713370187, 0.45972796848842074, 0.45414863313947407, 0.4580895560128348, 0.4513210228511265, 0.4821715014321463, 0.4207975353513445, 0.4480665240968977, 0.4267511708395822, 0.43645807674952913, 0.41695912395204815, 0.4181434086390904], "val_accuracy": [0.5316666960716248, 0.6363333463668823, 0.6549999713897705, 0.7386666536331177, 0.703000009059906, 0.7043333053588867, 0.718666672706604, 0.7453333139419556, 0.734000027179718, 0.765666663646698, 0.762666642665863, 0.7616666555404663, 0.7730000019073486, 0.7676666378974915, 0.7946666479110718, 0.7996666431427002, 0.7973333597183228, 0.8023333549499512, 0.7950000166893005, 0.8169999718666077, 0.7960000038146973, 0.812666654586792, 0.8146666884422302, 0.812666654586792, 0.8136666417121887]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [1, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [36, 9, 76, 58]], "fitness": -0.808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2431677755127337, 1.948131495289846, 1.415696089624524, 1.1484723245903894, 1.003076159100664, 0.947493972291469, 0.8913208301025469, 0.8356351683388895, 0.8071033474303444, 0.7767209639764654, 0.7661665263287443, 0.750409271849019, 0.7429284366634245, 0.7146067192856472, 0.7116749959221259, 0.6879147983041375, 0.6708309986824058, 0.6735413690457932, 0.6568276762112083, 0.6507612179062858, 0.6397176618668003, 0.6380955082802425, 0.6439596055174673, 0.6298967702450801, 0.6179062014699312, 0.6198344688688869, 0.6079266220350874, 0.5993942001933167, 0.6010851614652545, 0.5922774633774275, 0.5967868892366482, 0.5857352511742017, 0.5751975632189382, 0.5863159413760317, 0.571105807519718, 0.5740611593264473, 0.5647530626579913, 0.5605327057296794, 0.5658092644189122, 0.5594220627898853, 0.5557321362318443, 0.5532251974500606, 0.5488926893243574, 0.5435439083696183, 0.5377915770685384, 0.5343746360597547, 0.5382220314446851, 0.5324766013474591, 0.5309372240557663], "accuracy": [0.2215031087398529, 0.41024965047836304, 0.5342755317687988, 0.5964865684509277, 0.651168942451477, 0.6561880707740784, 0.6791704893112183, 0.7037379741668701, 0.7042662501335144, 0.7186633348464966, 0.7147008180618286, 0.7232862114906311, 0.722229540348053, 0.7357020378112793, 0.7349095344543457, 0.7440232634544373, 0.7498348951339722, 0.7500990629196167, 0.7543256878852844, 0.7544577717781067, 0.7613261342048645, 0.7594769597053528, 0.7594769597053528, 0.7633073329925537, 0.7725531458854675, 0.7671377658843994, 0.7732135653495789, 0.7749306559562683, 0.7724210619926453, 0.7827235460281372, 0.774798572063446, 0.7820631265640259, 0.7854973077774048, 0.7824593782424927, 0.7841764688491821, 0.7835160493850708, 0.7932901978492737, 0.7913089394569397, 0.7860256433486938, 0.7866860628128052, 0.7922335267066956, 0.7956677079200745, 0.7956677079200745, 0.7955356240272522, 0.800290584564209, 0.8021397590637207, 0.793950617313385, 0.8001585006713867, 0.8001585006713867], "val_loss": [1.8096404756818498, 1.3133737019130163, 0.9031613554273333, 0.7828994308199201, 0.7162289960043771, 0.6966947487422398, 0.6405206578118461, 0.5982811961855207, 0.6133537292480469, 0.5794057335172381, 0.5871775320598057, 0.562473041670663, 0.5455109902790615, 0.5693554367337909, 0.5286473887307304, 0.524010419845581, 0.5250698498317173, 0.5164726461683001, 0.5226251227515084, 0.5008873088019234, 0.5091915130615234, 0.5001632486070905, 0.5181772197995868, 0.483680043901716, 0.4928143194743565, 0.49489584990910124, 0.4910180228097098, 0.47742135184151785, 0.47725413526807514, 0.48099895886012484, 0.47027250698634554, 0.4692234482084002, 0.46162530354091097, 0.4758463587079729, 0.4635131188801357, 0.4579849754061018, 0.46164630140577045, 0.45882911341530935, 0.4495318617139544, 0.48237783568246023, 0.4525348629270281, 0.44929206371307373, 0.4454464742115566, 0.4447110039847238, 0.4406308616910662, 0.441282536302294, 0.4426321302141462, 0.43209318603788105, 0.43589350155421663], "val_accuracy": [0.4480000138282776, 0.57833331823349, 0.6776666641235352, 0.6763333082199097, 0.7039999961853027, 0.7003333568572998, 0.7269999980926514, 0.7443333268165588, 0.7293333411216736, 0.75, 0.7413333058357239, 0.7553333044052124, 0.7590000033378601, 0.7440000176429749, 0.7696666717529297, 0.7680000066757202, 0.7683333158493042, 0.7730000019073486, 0.7689999938011169, 0.7743333578109741, 0.7770000100135803, 0.7766666412353516, 0.7696666717529297, 0.7913333177566528, 0.7803333401679993, 0.7839999794960022, 0.7820000052452087, 0.7946666479110718, 0.7893333435058594, 0.7833333611488342, 0.7956666946411133, 0.7979999780654907, 0.7983333468437195, 0.7906666398048401, 0.7990000247955322, 0.8040000200271606, 0.8029999732971191, 0.7976666688919067, 0.8116666674613953, 0.7906666398048401, 0.8086666464805603, 0.8046666383743286, 0.8090000152587891, 0.8169999718666077, 0.8106666803359985, 0.8059999942779541, 0.809333324432373, 0.8163333535194397, 0.8146666884422302]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8074285984039307, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.999606826963237, 1.3186473558607543, 1.0424755224855962, 0.8999592012748774, 0.7848829021464564, 0.7718077089572075, 0.7167183887437351, 0.7256510024136241, 0.684007694369782, 0.6517448081568389, 0.6473043947770312, 0.6255814528122019, 0.608563894593185, 0.6075101414723183, 0.5878723978429439, 0.556056481783243, 0.553572578366249, 0.5324008996539253, 0.5232638477523329, 0.5394684523284994, 0.5045414174300584, 0.5178519820674158, 0.5220333621911621, 0.48671393314325545, 0.49726406055875444], "accuracy": [0.32822611927986145, 0.5299167633056641, 0.6222427487373352, 0.652621865272522, 0.7111346125602722, 0.7047945857048035, 0.7273808121681213, 0.7201162576675415, 0.7380794882774353, 0.750759482383728, 0.7559106945991516, 0.7601373791694641, 0.7725531458854675, 0.7672698497772217, 0.7753269076347351, 0.7905164361000061, 0.7884030938148499, 0.7985734939575195, 0.7997622489929199, 0.7985734939575195, 0.811649739742279, 0.8006868362426758, 0.8029322624206543, 0.8247259259223938, 0.8076872229576111], "val_loss": [1.2303205217633928, 0.8501975536346436, 0.7150681189128331, 0.6133807046072823, 0.6580859592982701, 0.6523102692195347, 0.6220708233969552, 0.5359655618667603, 0.5663749660764422, 0.5112140859876361, 0.546205827168056, 0.49736673491341726, 0.5381181240081787, 0.5398869684764317, 0.4615099089486258, 0.46681363242013113, 0.4597984722682408, 0.4406584160668509, 0.48847908633095877, 0.42000441891806467, 0.45562515939985004, 0.4248676725796291, 0.4268822159085955, 0.42073959963662283, 0.4216170055525644], "val_accuracy": [0.5299999713897705, 0.6333333253860474, 0.6520000100135803, 0.7353333234786987, 0.7020000219345093, 0.7083333134651184, 0.7086666822433472, 0.7556666731834412, 0.7353333234786987, 0.7670000195503235, 0.7670000195503235, 0.7730000019073486, 0.7480000257492065, 0.7633333206176758, 0.793666660785675, 0.7910000085830688, 0.793666660785675, 0.8109999895095825, 0.7879999876022339, 0.8196666836738586, 0.7883333563804626, 0.8136666417121887, 0.8183333277702332, 0.8080000281333923, 0.8116666674613953]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9996235204678265, 1.3191504492153188, 1.04374393697554, 0.9045626461513763, 0.7917670836585341, 0.7747133850594711, 0.7320466229960021, 0.6993656203321982, 0.6843276716273742, 0.6612371471989125, 0.6463227852570808, 0.6155031803907295, 0.6279931218002797, 0.6012750983222475, 0.5879835141427828, 0.5522592551499436, 0.5495913221953866, 0.5332440469345601, 0.5332949202861517, 0.5372210283281623, 0.5051777190173921, 0.5142420260204914, 0.5245361197279775, 0.490693602437876, 0.49136239080822086], "accuracy": [0.3280940353870392, 0.5299167633056641, 0.6201294660568237, 0.652621865272522, 0.7066437602043152, 0.7079645991325378, 0.7154933214187622, 0.7382115721702576, 0.7375511527061462, 0.7471932172775269, 0.7537974119186401, 0.7672698497772217, 0.752740740776062, 0.7691190242767334, 0.7791573405265808, 0.793950617313385, 0.7878747582435608, 0.7985734939575195, 0.7935543656349182, 0.7964601516723633, 0.81112140417099, 0.8010830879211426, 0.8000264167785645, 0.8208954930305481, 0.8137630224227905], "val_loss": [1.2304681369236536, 0.8572750602449689, 0.723176223891122, 0.6191623892102923, 0.72995468548366, 0.5993564469473702, 0.6122855969837734, 0.5396179641996112, 0.5607818194798061, 0.5252191850117275, 0.5346084151949201, 0.5018737827028547, 0.49650027070726666, 0.5430726323808942, 0.46106999261038645, 0.456352915082659, 0.45921123027801514, 0.4474849360329764, 0.4596247843333653, 0.4201383760997227, 0.4502255065100534, 0.42357953105654034, 0.4310962132045201, 0.41841243846075876, 0.4224705100059509], "val_accuracy": [0.531333327293396, 0.621666669845581, 0.6396666765213013, 0.737666666507721, 0.6706666946411133, 0.734333336353302, 0.7170000076293945, 0.746999979019165, 0.7396666407585144, 0.7590000033378601, 0.7676666378974915, 0.7710000276565552, 0.7713333368301392, 0.7646666765213013, 0.793666660785675, 0.7976666688919067, 0.7983333468437195, 0.8073333501815796, 0.8029999732971191, 0.8209999799728394, 0.7940000295639038, 0.8146666884422302, 0.8180000185966492, 0.8100000023841858, 0.8096666932106018]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 9, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10400000214576721, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3009671008881325, 2.3025556618054748, 2.3025837573455923, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9733670779636927, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [36, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [0, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [91, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 1, 1], [1, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [36, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [306621754.2360783, 5705594933.965922, 26858156672.55792, 73955293546.20737, 161146914336.93408, 291213811314.8974], "accuracy": [0.10038304328918457, 0.10051512718200684, 0.09589222073554993, 0.09813763201236725, 0.10447761416435242, 0.09879804402589798], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [61, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 2, 4, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.pow(sigma, sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [9, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [22, 4, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 9, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [835849452.7187095, 15556983514.36587, 73237082074.67018, 201668060117.39532, 439438172081.01227, 794128573107.413], "accuracy": [0.10038304328918457, 0.10051512718200684, 0.09589222073554993, 0.09800554811954498, 0.10447761416435242, 0.09879804402589798], "val_loss": [3101161179.428571, 24800825929.142857, 83693223936.0, 198372959378.2857, 387430669165.7143, 669467766198.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [74438281.7333046, 1384464923.0167744, 6516150428.758156, 17941327190.325188, 39092329520.5558, 70643210231.0733], "accuracy": [0.10038304328918457, 0.10051512718200684, 0.09589222073554993, 0.09813763201236725, 0.10447761416435242, 0.09879804402589798], "val_loss": [276060818.28571427, 2206784877.714286, 7445998445.714286, 17647493705.142857, 34465285266.28571, 59552563200.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 6, 0, 2, 8, 4, 1, 2, 2, 5, 3, 6, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 9, 7, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3028601120019303, 2.303466808999046, 2.30256666659742, 2.3031893104625776, 2.3018728512751507, 2.3004798623060965], "accuracy": [0.08532558381557465, 0.0870426595211029, 0.09285431355237961, 0.09259014576673508, 0.09140139818191528, 0.09694888442754745], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 2, 0, 1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.subtract(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.302856396438423, 2.3034566834366252, 2.3025468056464256, 2.3031622120858875, 2.301837532795211, 2.3004449449273903, 2.3023456849473702], "accuracy": [0.08532558381557465, 0.08717474341392517, 0.09245806187391281, 0.09285431355237961, 0.09166556596755981, 0.09721305221319199, 0.09113723784685135], "val_loss": [1.9711837087358748, 1.9711795534406389, 1.9711754662649972, 1.9711713109697615, 1.9711670875549316, 1.971162932259696, 1.97115877696446], "val_accuracy": [0.036666665226221085, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [46, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [2.3028601120019303, 2.303466808999046, 2.30256666659742, 2.3031893104625776, 2.3018728512751507, 2.3004798623060965], "accuracy": [0.08532558381557465, 0.0870426595211029, 0.09285431355237961, 0.09259014576673508, 0.09140139818191528, 0.09694888442754745], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 6, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [2.3028601120019303, 2.303466808999046, 2.30256666659742, 2.3031893104625776, 2.3018728512751507, 2.3004798623060965], "accuracy": [0.08532558381557465, 0.0870426595211029, 0.09285431355237961, 0.09259014576673508, 0.09140139818191528, 0.09694888442754745], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 1, 8, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [8, 87, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3028601120019303, 2.303466808999046, 2.30256666659742, 2.3031893104625776, 2.3018728512751507, 2.3004798623060965], "accuracy": [0.08532558381557465, 0.0870426595211029, 0.09285431355237961, 0.09259014576673508, 0.09140139818191528, 0.09694888442754745], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]