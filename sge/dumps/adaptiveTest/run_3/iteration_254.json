[{"genotype": [[0], [1, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 1, 3, 1, 1, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8022857308387756, "mapping_values": [1, 2, 2, 1, 1, 1, 31, 31, 18, 13, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), tf.math.add(beta, grad))))))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(grad))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(alpha, tf.math.negative(tf.math.add(beta, beta)))))))))))), grad), grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9930012655484914, 1.2888005898062107, 1.0401844090757872, 0.8686704901325673, 0.8016240485135543, 0.7281263297921426, 0.7416076635908158, 0.712263727909255, 0.6605537361661599, 0.6533461504640077, 0.6620645153287883, 0.6143904958009373, 0.611711793036556, 0.5919771047788541, 0.5780550657151917, 0.5642942154034333, 0.5649318640510151, 0.5704430799757595, 0.5333483288112082, 0.5352524249088558, 0.5252135959338865, 0.5182882361109105, 0.5013536832525022, 0.5073514834662407, 0.47040642346641126, 0.48147668630345275], "accuracy": [0.3237352967262268, 0.5532954931259155, 0.6186765432357788, 0.6654338836669922, 0.6944921612739563, 0.7185312509536743, 0.7181349992752075, 0.7244749665260315, 0.7495707273483276, 0.7441553473472595, 0.7467969655990601, 0.7650244235992432, 0.761590301990509, 0.7697794437408447, 0.7761194109916687, 0.7845727205276489, 0.7827235460281372, 0.7839123010635376, 0.7987055778503418, 0.7910447716712952, 0.7988376617431641, 0.802271842956543, 0.8080834746360779, 0.8041210174560547, 0.8267071843147278, 0.8168009519577026], "val_loss": [1.3241746085030692, 0.9737560067858014, 0.6859565802982875, 0.6463032960891724, 0.6058241128921509, 0.5926600694656372, 0.5885904686791557, 0.5304472957338605, 0.5487241063799176, 0.5275118861879621, 0.5048809221812657, 0.5077129772731236, 0.50291565486363, 0.49997527258736746, 0.4877909081322806, 0.46315244265965055, 0.5853056056158883, 0.4519427844456264, 0.4389931985310146, 0.4359126772199358, 0.4343999539102827, 0.4233601263591221, 0.46899635451180594, 0.420189585004534, 0.425293036869594, 0.4311582275799343], "val_accuracy": [0.4519999921321869, 0.5879999995231628, 0.6800000071525574, 0.7203333377838135, 0.722000002861023, 0.7363333106040955, 0.7266666889190674, 0.7649999856948853, 0.749666690826416, 0.7436666488647461, 0.7726666927337646, 0.7733333110809326, 0.7710000276565552, 0.762333333492279, 0.7696666717529297, 0.7933333516120911, 0.7486666440963745, 0.7956666946411133, 0.8036666512489319, 0.8153333067893982, 0.8203333616256714, 0.8186666369438171, 0.7913333177566528, 0.8116666674613953, 0.8106666803359985, 0.8040000200271606]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [46, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9979514670079144, 1.6051522125074844, 1.0967762854121001, 0.8501118940605448, 0.8334453281252816, 0.7928489777374544, 0.7153169508576157, 0.7335023800411308, 0.6895502685807746, 0.6489188512476003, 0.6485259585518485, 0.6354063547849498, 0.5994267705771366, 0.605293466540659, 0.5722210213114888, 0.5699461072726635, 0.5587383876182557, 0.5397385254181482, 0.5612845964451287, 0.5329753139377695, 0.5283077402735872], "accuracy": [0.3401135802268982, 0.4744419455528259, 0.6067890524864197, 0.6865671873092651, 0.6794346570968628, 0.6950204968452454, 0.72672039270401, 0.7176066637039185, 0.7362303733825684, 0.7539294958114624, 0.7506273984909058, 0.7576277852058411, 0.769911527633667, 0.7677981853485107, 0.7872143983840942, 0.7858935594558716, 0.7960638999938965, 0.7943468689918518, 0.7852331399917603, 0.7998943328857422, 0.802800178527832], "val_loss": [1.6388282094682967, 1.1230569226401192, 0.7347295795168195, 0.657873136656625, 0.5931784084865025, 0.6021127700805664, 0.6006108522415161, 0.580781238419669, 0.5323196308953422, 0.5220848492213658, 0.5121709448950631, 0.5008964368275234, 0.4817682845251901, 0.47743546962738037, 0.47334756170000347, 0.46696722507476807, 0.47874724864959717, 0.4737344299043928, 0.46104860305786133, 0.47024059295654297, 0.4634507383619036], "val_accuracy": [0.49966666102409363, 0.5953333377838135, 0.6893333196640015, 0.7003333568572998, 0.718999981880188, 0.7076666951179504, 0.706333339214325, 0.7426666617393494, 0.7710000276565552, 0.7580000162124634, 0.7733333110809326, 0.7739999890327454, 0.7833333611488342, 0.7829999923706055, 0.7986666560173035, 0.8016666769981384, 0.7916666865348816, 0.7906666398048401, 0.7963333129882812, 0.7863333225250244, 0.7853333353996277]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7951428294181824, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.997867995627316, 1.6081735488052429, 1.0839373211205015, 0.8944464718834159, 0.8271360250511945, 0.7733617696811211, 0.7234119023660769, 0.7222862577850887, 0.6944169930069596, 0.6504512536700502, 0.6497550136409085, 0.6361879975079955, 0.60654124388873, 0.6074052578060462, 0.5732644323376207, 0.569832330539856, 0.566679317425932, 0.5386732878576038, 0.5642967996832213, 0.5348611899323514, 0.5221084038406048, 0.5298357058620062], "accuracy": [0.3401135802268982, 0.4737815260887146, 0.6155065298080444, 0.6654338836669922, 0.6906617283821106, 0.7080966830253601, 0.7283053994178772, 0.7207766771316528, 0.7320036888122559, 0.7506273984909058, 0.7512878179550171, 0.7543256878852844, 0.7707040309906006, 0.7662131786346436, 0.7865539789199829, 0.7845727205276489, 0.7923656105995178, 0.7976489067077637, 0.787082314491272, 0.8005547523498535, 0.8047813773155212, 0.8049134612083435], "val_loss": [1.6382741587502616, 1.1088054861341203, 0.8009165866034371, 0.6403648512704032, 0.592131495475769, 0.5644303389957973, 0.607610821723938, 0.5740923881530762, 0.536254916872297, 0.5282941034861973, 0.5020839827401298, 0.5037681034633091, 0.4857192039489746, 0.4813277210508074, 0.4740203789302281, 0.45974712712424143, 0.46136581897735596, 0.45818185806274414, 0.4827976737703596, 0.451229419027056, 0.46210145950317383, 0.4385969979422433], "val_accuracy": [0.500333309173584, 0.5979999899864197, 0.6480000019073486, 0.7036666870117188, 0.7283333539962769, 0.7360000014305115, 0.7073333263397217, 0.7413333058357239, 0.7743333578109741, 0.7536666393280029, 0.7856666445732117, 0.7706666588783264, 0.781333327293396, 0.7823333144187927, 0.79666668176651, 0.8019999861717224, 0.8069999814033508, 0.7983333468437195, 0.7850000262260437, 0.7929999828338623, 0.7870000004768372, 0.8046666383743286]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7940000295639038, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), grad)), alpha)))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha)), beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.98233545344535, 1.793162208616836, 1.1972417831578352, 0.9424889779849815, 0.8887334910712584, 0.7817316427521812, 0.7574293310805051, 0.7352523250571017, 0.7259460674489825, 0.6900441507857946, 0.6535382836391865, 0.6680434149065195, 0.641765885853166, 0.6329414862856464, 0.588201530266904, 0.6139886548427496, 0.5817146174911778, 0.5829330402248177, 0.569447993736194, 0.5743800012379778, 0.5535278344403137, 0.5349304775646286, 0.5257849318948735], "accuracy": [0.3399814963340759, 0.43851539492607117, 0.5605600476264954, 0.6551313996315002, 0.669792652130127, 0.709021270275116, 0.7092854380607605, 0.7187954187393188, 0.7235503792762756, 0.7341170310974121, 0.7572315335273743, 0.7453441023826599, 0.752212405204773, 0.7609298825263977, 0.7737419009208679, 0.7648923397064209, 0.78113853931427, 0.7744023203849792, 0.7878747582435608, 0.7833839654922485, 0.7931581139564514, 0.7946110367774963, 0.7992339134216309], "val_loss": [1.9001100403921944, 0.9099118368966239, 0.8355289357049125, 0.6967507771083287, 0.6184315511158535, 0.5700221742902484, 0.5536721433912005, 0.5566525629588536, 0.5303950990949359, 0.5112368209021432, 0.521828259740557, 0.5176289592470441, 0.4941574675696237, 0.4820285865238735, 0.49076368127550396, 0.4840212719781058, 0.4987473317555019, 0.458578314099993, 0.4593989167894636, 0.45089427062443327, 0.4504293033054897, 0.4556753124509539, 0.4559844902583531], "val_accuracy": [0.20100000500679016, 0.6143333315849304, 0.6353333592414856, 0.6806666851043701, 0.7329999804496765, 0.7483333349227905, 0.7450000047683716, 0.7473333477973938, 0.7559999823570251, 0.7713333368301392, 0.7590000033378601, 0.7580000162124634, 0.7836666703224182, 0.7870000004768372, 0.7663333415985107, 0.7860000133514404, 0.7680000066757202, 0.8006666898727417, 0.793666660785675, 0.7996666431427002, 0.7956666946411133, 0.7960000038146973, 0.7896666526794434]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9823394168432535, 1.790882109367553, 1.200322930161916, 0.9446218469202432, 0.8799949639808107, 0.7802391230406589, 0.7564718036320326, 0.7476071667094918, 0.7064970812667174, 0.6917219502562781, 0.6774174886262491, 0.6470782383243091, 0.6368524798265522, 0.645211959913375, 0.595193943721019, 0.6162791713401075, 0.5790212262796295, 0.576656024674257, 0.5780226988185272, 0.5652441747546622, 0.5616719399256209, 0.5403830531077725, 0.5262053633299896], "accuracy": [0.3399814963340759, 0.4387795627117157, 0.5589750409126282, 0.6513010263442993, 0.6715096831321716, 0.7094175219535828, 0.711530864238739, 0.7172104120254517, 0.7318716049194336, 0.739400327205658, 0.743891179561615, 0.7473253011703491, 0.7516840696334839, 0.7537974119186401, 0.7745344042778015, 0.76542067527771, 0.7784969210624695, 0.7783648371696472, 0.7840443849563599, 0.7869502305984497, 0.7844406366348267, 0.7915731072425842, 0.7996301651000977], "val_loss": [1.8985728536333357, 0.9122032438005719, 0.8067837612969535, 0.697313632283892, 0.6266430956976754, 0.5807805912835258, 0.5933572394507272, 0.5544077328273228, 0.5340933288846698, 0.526393107005528, 0.5144522190093994, 0.5391702141080584, 0.49825870990753174, 0.4810379573277065, 0.48121951307569233, 0.47355575220925467, 0.4883239780153547, 0.4560762473515102, 0.4518200159072876, 0.45823640482766287, 0.4515396697180612, 0.4609371934618269, 0.4538646936416626], "val_accuracy": [0.20100000500679016, 0.6043333411216736, 0.6430000066757202, 0.6783333420753479, 0.7379999756813049, 0.7360000014305115, 0.7366666793823242, 0.746666669845581, 0.7609999775886536, 0.7509999871253967, 0.7703333497047424, 0.7486666440963745, 0.777999997138977, 0.7870000004768372, 0.7763333320617676, 0.7833333611488342, 0.7799999713897705, 0.8019999861717224, 0.7996666431427002, 0.7956666946411133, 0.7929999828338623, 0.7896666526794434, 0.7900000214576721]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [1, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7877143025398254, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9978460501276696, 1.6047037655194643, 1.0616028083550098, 0.9069452577294801, 0.8186562842838422, 0.7796945948610846, 0.763303470728089, 0.6992781427337698, 0.6936560869138192, 0.6472518831243479, 0.6434060159124451, 0.6310942100889695, 0.6115957399904768, 0.6096170219873094, 0.5754911267148064, 0.5712566165136167, 0.5684429396255346, 0.5351653034424722, 0.552606495143778, 0.5373969929030291, 0.5289066089394701], "accuracy": [0.3401135802268982, 0.4748381972312927, 0.6218464970588684, 0.6643772125244141, 0.6931713223457336, 0.7041342258453369, 0.71100252866745, 0.7333245277404785, 0.7318716049194336, 0.7547219395637512, 0.7518161535263062, 0.7592127919197083, 0.7660810947418213, 0.7681944370269775, 0.7877426743507385, 0.7832518815994263, 0.7877426743507385, 0.7979130744934082, 0.7897239327430725, 0.8014793395996094, 0.8021397590637207], "val_loss": [1.6379263741629464, 1.0959697110312325, 0.8745417254311698, 0.6347020012991769, 0.5969559465135846, 0.5746537957872663, 0.5667150020599365, 0.5834392479487828, 0.5346004111426217, 0.5190185649054391, 0.5064415420804705, 0.4976047618048532, 0.4862573317119053, 0.48083957603999544, 0.4694631440298898, 0.45993428570883615, 0.46097144058772493, 0.45051988533564974, 0.4580340726034982, 0.4455925737108503, 0.4659664290291922], "val_accuracy": [0.5, 0.5996666550636292, 0.593666672706604, 0.7086666822433472, 0.7283333539962769, 0.7276666760444641, 0.7506666779518127, 0.7363333106040955, 0.7796666622161865, 0.7630000114440918, 0.7803333401679993, 0.7789999842643738, 0.7816666960716248, 0.7846666574478149, 0.8019999861717224, 0.8043333292007446, 0.7996666431427002, 0.8036666512489319, 0.7913333177566528, 0.800000011920929, 0.7903333306312561]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 3, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))))), grad)), tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad)), grad)))))), tf.math.add(beta, tf.math.sqrt(beta))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.pow(grad, tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9979265259871346, 1.6050270356994658, 1.091675815470797, 0.8572108194560675, 0.8511376090573125, 0.7711525173502796, 0.7186435267374485, 0.6879354177795428, 0.6715656306686623, 0.6737217534928353, 0.6611229086422948, 0.6383656975048692, 0.6171847626029571, 0.5892288075178653, 0.5829982319921787, 0.5790025606572337, 0.572012657353025, 0.536217311440741, 0.5578530976139654, 0.5315175589364455, 0.5294370288389738], "accuracy": [0.3401135802268982, 0.4733852744102478, 0.6107515692710876, 0.6811517477035522, 0.6756042838096619, 0.7080966830253601, 0.7275128960609436, 0.7357020378112793, 0.7440232634544373, 0.739400327205658, 0.7478536367416382, 0.7528728246688843, 0.7633073329925537, 0.7781006693840027, 0.7798177003860474, 0.7812706232070923, 0.7857614755630493, 0.7988376617431641, 0.7877426743507385, 0.802800178527832, 0.8017435073852539], "val_loss": [1.6395036493028914, 1.1199751581464494, 0.7634815999439785, 0.606005242892674, 0.601141197340829, 0.632930942944118, 0.5719374418258667, 0.6162087747028896, 0.538069452558245, 0.5358678443091256, 0.5133337293352399, 0.507961460522243, 0.4873227902821132, 0.5100549800055367, 0.47392453466142925, 0.45974206924438477, 0.46607160568237305, 0.46454645906175884, 0.4472966194152832, 0.45411923953465055, 0.467957752091544], "val_accuracy": [0.49933332204818726, 0.5983333587646484, 0.6776666641235352, 0.7269999980926514, 0.731333315372467, 0.6890000104904175, 0.7419999837875366, 0.7076666951179504, 0.7379999756813049, 0.7573333382606506, 0.7603333592414856, 0.762666642665863, 0.7816666960716248, 0.7563333511352539, 0.7993333339691162, 0.8040000200271606, 0.7986666560173035, 0.7943333387374878, 0.8013333082199097, 0.7976666688919067, 0.7889999747276306]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 4, 0, 2, 9, 9, 0, 4, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [59, 9, 76, 58]], "fitness": -0.36571428179740906, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.529156239655323, 2.2256780855407836, 2.292359248821242, 2.304368285990473, 2.3028295326698975, 2.2887790413139646], "accuracy": [0.2215031087398529, 0.2432967871427536, 0.11094967275857925, 0.09642054885625839, 0.09866596013307571, 0.1306300312280655], "val_loss": [1.4977623394557409, 1.9317877633231026, 1.9743685722351074, 1.9733452796936035, 1.971860749380929, 1.8875951085771834], "val_accuracy": [0.3646666705608368, 0.09666666388511658, 0.10566666722297668, 0.10233332961797714, 0.15700000524520874, 0.23366667330265045]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 5, 1, 4, 5, 2, 4, 3, 0, 2, 5, 5, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 3, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [62, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad))))))), grad)), tf.math.square(tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), grad))), tf.math.add(beta, tf.math.sqrt(beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [7, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [63, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 2, 0, 0, 2, 4, 9, 5, 0, 9, 0, 8, 1, 8, 9], [3, 3, 0, 3, 0, 3, 3, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [99, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), sigma)", "other_info": {"loss": [2.303220227158002, 2.3055905351675325, 2.3062078274787456, 2.30988207907016, 2.3119949185065685, 2.3163799743579285, 2.321809345027947, 2.3274913820151593, 2.330196011855287, 2.3420961560070586, 2.3721884171472425, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.08545766770839691, 0.09047681838274002, 0.08466517180204391, 0.0816272646188736, 0.0758156105875969, 0.07264561951160431, 0.0734381154179573, 0.07370228320360184, 0.07832518965005875, 0.08109892904758453, 0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722001211983817, 1.973778452192034, 1.9753519466945104, 1.9771167891366142, 1.9792753628322057, 1.9821242604936873, 1.9852184568132674, 1.989314419882638, 1.9953952516828264, 2.007377488272531, 2.0518998418535506, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.023333333432674408, 0.02133333310484886, 0.019333332777023315, 0.02199999988079071, 0.03166666626930237, 0.04933333396911621, 0.06333333253860474, 0.08266666531562805, 0.0963333323597908, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 6, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(alpha, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [93, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08189142495393753, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [21819094572483.76, 1.1079648233983427e+18, 8.448726285160052e+23, 1.0520524945864503e+32, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10579843819141388, 0.08572183549404144, 0.09998679161071777, 0.09998679161071777, 0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [157748080223378.28, 8.48454070857817e+17, 8.754595734231124e+25, 8.875052285893718e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.008333333767950535, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [7, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 3, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [85, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 17, 17, 10, 7, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), alpha)), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.303220227158002, 2.305589815440069, 2.306205186798525, 2.3098797173374725, 2.311993969209505, 2.3163841578151416, 2.3218165382087474, 2.3274956869647614, 2.3302178469473867, 2.342153785093633, 2.372366891608278, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.08545766770839691, 0.09047681838274002, 0.08453308790922165, 0.08149518072605133, 0.0758156105875969, 0.07264561951160431, 0.0734381154179573, 0.07370228320360184, 0.07832518965005875, 0.08109892904758453, 0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722002574375697, 1.9737768173217773, 1.9753501074654716, 1.977114268711635, 1.9792779513767786, 1.982131004333496, 1.9852206366402763, 1.9893204825265067, 1.9954188210623605, 2.0074355942862376, 2.0523067201886858, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.023333333432674408, 0.02133333310484886, 0.019333332777023315, 0.02199999988079071, 0.03166666626930237, 0.04933333396911621, 0.06333333253860474, 0.08266666531562805, 0.0963333323597908, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 6, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 3, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 9, 5, 0, 9, 0, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [99, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026971451720666, 2.303447295992429, 2.3022217946423518, 2.3035830117770946, 2.3031222082132268, 2.303302670608438], "accuracy": [0.09602430462837219, 0.08981640636920929, 0.0944393053650856, 0.08942015469074249, 0.09576013684272766, 0.09206181764602661], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 1], [2, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3026971451720666, 2.303447295992429, 2.3022217946423518, 2.3035830117770946, 2.3031222082132268, 2.303302670608438], "accuracy": [0.09602430462837219, 0.08981640636920929, 0.0944393053650856, 0.08942015469074249, 0.09576013684272766, 0.09206181764602661], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]