[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.027089768711917, 1.446337101607826, 1.0696986563107151, 0.9183982835312278, 0.8518075053450328, 0.8039382801804135, 0.7179438283320321, 0.7478221162765915, 0.7126222798506566, 0.6725137831906223, 0.6685609395603824, 0.6383952058348846, 0.6533077509254276, 0.6322242709246011, 0.6055433231574071, 0.5961703369567392, 0.6112052738280769, 0.5842129145127088, 0.5745395180681804, 0.5558856187038701], "accuracy": [0.3369435966014862, 0.49649980664253235, 0.6009774208068848, 0.6561880707740784, 0.678642213344574, 0.6984546184539795, 0.7320036888122559, 0.7117950320243835, 0.7372870445251465, 0.7490423917770386, 0.7467969655990601, 0.759080708026886, 0.7531369924545288, 0.7580240368843079, 0.7728173136711121, 0.7745344042778015, 0.767401933670044, 0.7796856164932251, 0.7847048044204712, 0.7885351777076721], "val_loss": [1.3723572322300501, 0.8013247081211635, 0.7112747260502407, 0.6865138326372419, 0.6656880378723145, 0.5875648260116577, 0.584725158555167, 0.5513165507997785, 0.5706026213509696, 0.5309886932373047, 0.528171283858163, 0.5245069435664585, 0.5815761600221906, 0.5132514238357544, 0.4766928127833775, 0.5222748517990112, 0.5330644505364555, 0.5000456741877964, 0.5084938492093768, 0.493061934198652], "val_accuracy": [0.42100000381469727, 0.6869999766349792, 0.6819999814033508, 0.6846666932106018, 0.6856666803359985, 0.7310000061988831, 0.721666693687439, 0.753333330154419, 0.7426666617393494, 0.7590000033378601, 0.7616666555404663, 0.7570000290870667, 0.7316666841506958, 0.7670000195503235, 0.7876666784286499, 0.7536666393280029, 0.7490000128746033, 0.7736666798591614, 0.7689999938011169, 0.777999997138977]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 2, 2, 4, 9, 0, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.16028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 9, 3, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3016136804229754, 2.303338136025518, 2.301205541133062, 2.3020845516687527, 2.3015342368394345, 2.303299954381239, 2.3018272547217378, 2.299887163575142, 2.301391737005415, 2.301259136691211, 2.300028228457452, 2.2989424865920673, 2.2998334467450405, 2.30048141982089, 2.2997693473542324, 2.2999859034755303, 2.3010884149750668, 2.3013639269314736, 2.2992423619608036, 2.2980553194705315, 2.3001088853903324, 2.2988914365482493, 2.297912236863533, 2.299026995948466, 2.2991976301825323, 2.299147534033468, 2.2980403586495837, 2.297311959659041, 2.2984822124238846, 2.2967605093891876, 2.2986709705637964, 2.297641646230635, 2.2970178298285107, 2.295813972860862, 2.297552354394673, 2.296486549121734, 2.29634461511852, 2.295815816723581, 2.294799140069337, 2.2976271342828114, 2.2961528464677454, 2.295454874109236, 2.296282365290307, 2.294069858763149, 2.295856504014549, 2.295047116553574, 2.2957229088042723, 2.293886182582484, 2.2950687976230517, 2.2944041051727324, 2.293985863214376, 2.2936795564643178, 2.2928748115367736, 2.294932441279369, 2.2932195231395234, 2.291953670413282, 2.2937298796007175, 2.2930681364741923, 2.2917801686376236, 2.293001680546716, 2.291628636042865, 2.291800570667475, 2.291951701436706, 2.2907375718120413, 2.2919908830156226, 2.2914873837889336, 2.290037330147014, 2.291848947343384, 2.290993515841477, 2.2914780562091828, 2.2907256380662373, 2.2908814847115058, 2.290644377135424, 2.2904385300738195, 2.2892755244339082, 2.2889357669683195, 2.291321232649219, 2.2902115171674597, 2.2893762140068725, 2.28992085355447, 2.2883982311355093, 2.2889160724474125, 2.288193519262511, 2.288593630701906, 2.2873111596559066, 2.2887816168392465, 2.2880659368548018, 2.288732887904689, 2.28748898023722, 2.2868544336764125, 2.287439960986868, 2.286617275084865, 2.287604410855242, 2.286735037456115, 2.2857011974983683, 2.2876792825082384, 2.285835117286679, 2.2871544364578513, 2.2868338887087813, 2.285738837843353], "accuracy": [0.09087307006120682, 0.09179764986038208, 0.09285431355237961, 0.09351472556591034, 0.08611807972192764, 0.09021265059709549, 0.09285431355237961, 0.09430722147226334, 0.09668471664190292, 0.09179764986038208, 0.09760929644107819, 0.10289261490106583, 0.10408136248588562, 0.0944393053650856, 0.09628847241401672, 0.09681680053472519, 0.08994849026203156, 0.09998679161071777, 0.09774138033390045, 0.10038304328918457, 0.09655263274908066, 0.10091137140989304, 0.10289261490106583, 0.09985470771789551, 0.10011887550354004, 0.10355303436517715, 0.1018359512090683, 0.10989301651716232, 0.09879804402589798, 0.10553427785634995, 0.10672302544116974, 0.10368511080741882, 0.1022322028875351, 0.10289261490106583, 0.10289261490106583, 0.10447761416435242, 0.10606260597705841, 0.10579843819141388, 0.10659094154834747, 0.10130762308835983, 0.10870426893234253, 0.10434553027153015, 0.11055342853069305, 0.10857218503952026, 0.10857218503952026, 0.10487385839223862, 0.10606260597705841, 0.11042134463787079, 0.10817593336105347, 0.10685510188341141, 0.10645885765552521, 0.1158367469906807, 0.1088363528251648, 0.11345925182104111, 0.11676132678985596, 0.11900673806667328, 0.10896842926740646, 0.11161009222269058, 0.11610091477632523, 0.11266675591468811, 0.12098798155784607, 0.12376172095537186, 0.11874257028102875, 0.12112006545066833, 0.11438383162021637, 0.11979923397302628, 0.11927089840173721, 0.12032756209373474, 0.11913882195949554, 0.11411966383457184, 0.11781799048185349, 0.11689341068267822, 0.12349755316972733, 0.12257297337055206, 0.1262712925672531, 0.12455421686172485, 0.11913882195949554, 0.12376172095537186, 0.12362963706254959, 0.11993131786584854, 0.12257297337055206, 0.12521463632583618, 0.12970545887947083, 0.12310130894184113, 0.12851670384407043, 0.1266675442457199, 0.12481838464736938, 0.12917712330818176, 0.1348566859960556, 0.1294412910938263, 0.12429005652666092, 0.12970545887947083, 0.1262712925672531, 0.1298375427722931, 0.1356491893529892, 0.1258750557899475, 0.13921542465686798, 0.13089419901371002, 0.13313961029052734, 0.13617752492427826], "val_loss": [1.971027033669608, 1.9708659308297294, 1.9707047598702567, 1.970543316432408, 1.9703808512006487, 1.9702187265668596, 1.9700585774012975, 1.9698961802891322, 1.969735758645194, 1.9695773805890764, 1.9694176401410783, 1.9692559242248535, 1.9690946170261927, 1.9689346040998186, 1.968775408608573, 1.9686151913234167, 1.9684551783970423, 1.9682935306004115, 1.9681330408368791, 1.9679722104753767, 1.9678138324192591, 1.9676551137651717, 1.9674953733171736, 1.9673357691083635, 1.967176846095494, 1.96701751436506, 1.9668556622096471, 1.9666977609906877, 1.9665395191737585, 1.9663797106061662, 1.966221536908831, 1.966062409537179, 1.9659027372087752, 1.965743132999965, 1.965583324432373, 1.9654258319309779, 1.965266568320138, 1.9651083946228027, 1.9649505615234375, 1.9647934096200126, 1.9646337372916085, 1.964474814278739, 1.964315414428711, 1.9641579219273158, 1.963998249598912, 1.9638398034232003, 1.9636818340846471, 1.9635248865400041, 1.963367325919015, 1.9632090159824915, 1.9630492074148995, 1.9628908293587821, 1.9627324513026647, 1.9625746863228934, 1.9624165807451521, 1.9622586114065987, 1.9621020725795202, 1.9619450569152832, 1.9617864063807897, 1.9616289138793945, 1.961470331464495, 1.9613128389630998, 1.9611541203090124, 1.9609946523393904, 1.960838999067034, 1.9606834820338659, 1.960524082183838, 1.9603662490844727, 1.9602073260716029, 1.9600499016898019, 1.959890297480992, 1.9597320556640625, 1.9595727239336287, 1.9594150270734514, 1.9592548779078893, 1.9590962954929896, 1.9589380536760603, 1.9587806292942591, 1.9586217062813895, 1.9584621020725794, 1.9583044733319963, 1.9581473895481654, 1.95798921585083, 1.957831927708217, 1.9576736177716936, 1.9575156484331404, 1.957357610974993, 1.9571996416364397, 1.9570422853742326, 1.9568854059491838, 1.9567274366106306, 1.9565698759896415, 1.9564109529767717, 1.956254550388881, 1.9560960360935755, 1.9559388841901506, 1.955782413482666, 1.9556251934596471, 1.9554661342075892, 1.955308301108224], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.0403333343565464, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.04233333468437195, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.045666664838790894, 0.047333333641290665, 0.04833333194255829, 0.049666665494441986, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05700000002980232, 0.05766666680574417, 0.05833333358168602, 0.05900000035762787, 0.061666667461395264, 0.06300000101327896, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.0676666647195816, 0.0689999982714653, 0.07199999690055847, 0.07266666740179062, 0.07366666942834854, 0.07566666603088379, 0.07733333110809326, 0.07833333313465118, 0.08033332973718643, 0.08299999684095383, 0.08433333039283752, 0.08566666394472122, 0.08666666597127914, 0.08799999952316284, 0.08833333104848862, 0.08933333307504654, 0.09099999815225601, 0.09166666865348816, 0.09366666525602341, 0.0949999988079071, 0.09533333033323288, 0.09866666793823242, 0.1003333330154419, 0.10133333504199982, 0.10300000011920929, 0.10433333367109299, 0.10533333569765091, 0.10566666722297668, 0.1080000028014183, 0.109333336353302, 0.11100000143051147, 0.11166666448116302, 0.11366666853427887, 0.11533333361148834, 0.11633333563804626, 0.11733333021402359, 0.11933333426713943, 0.12099999934434891, 0.12333333492279053, 0.12433333694934845, 0.12433333694934845, 0.12566666305065155, 0.12733332812786102, 0.12966667115688324, 0.13066667318344116, 0.13233333826065063, 0.13433332741260529, 0.13766667246818542, 0.1379999965429306, 0.14033333957195282, 0.14133332669734955, 0.14399999380111694, 0.1469999998807907, 0.14733333885669708, 0.14933332800865173, 0.15000000596046448, 0.15133333206176758, 0.15199999511241913, 0.1536666601896286, 0.15600000321865082, 0.15800000727176666, 0.16066665947437286, 0.16233333945274353, 0.16466666758060455, 0.16566666960716248, 0.16733333468437195, 0.16866666078567505, 0.17133332788944244]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 2, 2, 3, 2, 4, 9, 9, 2], [2, 0, 3, 4, 3, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012816730570314, 2.302486508671382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 4, 2, 0, 4, 9, 9, 9], [2, 4, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0, 1, 1], [0, 1, 1], [6], [0, 1], [70], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 2, 1, 1, 13, 13, 9, 4, 2, 3, 1, 1, 0, 0, 3, 2, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012816730570314, 2.302486508671382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 9, 4, 9, 9, 9], [0, 3, 3, 2, 0, 3, 4], [3, 56, 20, 7, 45, 13], [0, 0, 1], [0, 1, 1], [3], [1, 1], [39], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012816730570314, 2.302486508671382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [5, 5, 2, 4, 2, 0, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [70], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012816730570314, 2.302486508671382, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [4, 9, 1, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 6, 2, 0, 4, 9, 9, 9], [0, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [0, 1, 1], [9], [0, 1], [32], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 76]], "fitness": -0.1120000034570694, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301315147422324, 2.302505313192833, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735708236694336, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11566666513681412, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 5, 2, 4, 2, 0, 2, 9, 9, 9], [1, 0, 3, 4, 0, 3, 4], [60, 31, 20, 7, 45, 13], [0], [0, 1, 1], [9], [0, 1], [74], [0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [3, 66]], "fitness": -0.11171428859233856, "mapping_values": [1, 5, 5, 3, 2, 2, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3013199866802116, 2.3025081788764545, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973573957170759, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11533333361148834, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 5, 2, 4, 2, 0, 4, 9, 9, 9], [5, 2, 3, 3, 0, 3, 4], [14, 3, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11171428859233856, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3013199866802116, 2.3025081788764545, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10210011899471283, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973573957170759, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11533333361148834, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [2, 6, 2, 2, 3, 2, 4, 3, 9, 9, 7], [2, 0, 3, 3, 0, 3, 4, 3], [38, 56, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [42, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 3, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [17385165518.091278, 2.0377321330881383e+33, 2.3951788706912374, 2.4624738532947967, 2.5989673214817817, 2.8926964859527255], "accuracy": [0.05811649560928345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.2865823111398746e+34, 2.0391428811209544, 2.0829271589006697, 2.168118272508894, 2.3481107439313615, 2.7325813429696217], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 7, 2, 3, 2, 4, 9, 9, 9], [2, 3, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad))), grad)), tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 5, 9, 4, 2, 2, 4, 9, 9, 9], [1, 4, 3, 4, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [41], [0, 1, 0, 0, 1, 0, 0, 1, 1], [8, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 2, 2, 3, 9, 4, 9, 9, 9], [3, 3, 3, 2, 0, 3, 4], [61, 3, 20, 7, 45, 13], [0], [0, 1, 1], [9], [0, 1], [70], [0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 1, 1, 0, 1, 3, 3, 0, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 0], [61, 3, 3, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(grad, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3022357814772696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 7, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 4, 0, 3, 4], [61, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))))), grad), tf.math.multiply(tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 9, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 2]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 5, 2, 2, 2, 0, 4, 9, 9, 9], [3, 0, 3, 4, 0, 3, 4], [61, 3, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 65]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [1, 0, 0, 4, 0, 3, 4, 3], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302284655553979, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [5, 5, 2, 4, 2, 0, 4, 9, 9, 9], [5, 1, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0, 0], [0, 1, 1], [8], [0, 1], [70], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 2, 2, 1, 1, 1, 5, 4, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301684257392445, 2.3035796221142446, 2.3016193188916834, 2.3026741069967027, 2.3023009877777403, 2.3042393062943245, 2.302925229686646, 2.301177912982794], "accuracy": [0.09074098616838455, 0.09140139818191528, 0.09206181764602661, 0.09219389408826828, 0.08440100401639938, 0.08955223858356476, 0.08875974267721176, 0.09100515395402908], "val_loss": [1.9711871147155762, 1.9711865016392298, 1.9711857523236955, 1.9711850711277552, 1.971184389931815, 1.9711838449750627, 1.9711830956595284, 1.9711824825831823], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085, 0.036666665226221085]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], [2, 2, 2, 4, 2, 0, 4, 6, 9, 9], [5, 3, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [53], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [3, 66]], "fitness": -0.03742857277393341, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301755643996265, 2.3038253366608648, 2.3020387374493487, 2.30327205682522, 2.303080774962768, 2.305197114532555], "accuracy": [0.09034473448991776, 0.09087307006120682, 0.09140139818191528, 0.09074098616838455, 0.08281600475311279, 0.08836349099874496], "val_loss": [1.971348762512207, 1.9715102059500558, 1.9716716493879045, 1.9718335696629115, 1.9719967160906111, 1.9721595900399345], "val_accuracy": [0.03533333167433739, 0.03466666489839554, 0.03400000184774399, 0.03433333337306976, 0.032999999821186066, 0.03200000151991844]}}]