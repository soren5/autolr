[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.821142852306366, "mapping_values": [1, 7, 7, 5, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.021123738588674, 1.3647131771695549, 1.0305273170169507, 0.8981667591627673, 0.793073223881387, 0.7536819831743342, 0.7226131213985146, 0.6975020398836661, 0.6966750276968889, 0.6315203511231549, 0.6255489340421783, 0.5933025813908892, 0.5822999286393384, 0.5861000519276862, 0.5861446235386483, 0.5439118351588049, 0.529993399093967, 0.5336247585342859, 0.49103882370324514, 0.5099688919701234, 0.49899412826414136, 0.4629608083788461, 0.4722463998733463, 0.47573902105941845, 0.45977486738707046, 0.4460949776053287, 0.43595990756278846, 0.44244887395510346, 0.4330036298056572], "accuracy": [0.32043322920799255, 0.5139347314834595, 0.6242240071296692, 0.6655659675598145, 0.6988508701324463, 0.7156254053115845, 0.7235503792762756, 0.7322678565979004, 0.7363624572753906, 0.7567031979560852, 0.7617223858833313, 0.7716285586357117, 0.7857614755630493, 0.778232753276825, 0.7758552432060242, 0.7940827012062073, 0.7993659973144531, 0.7950072884559631, 0.811649739742279, 0.8054417967796326, 0.8074230551719666, 0.8252542614936829, 0.82683926820755, 0.8227446675300598, 0.8265751004219055, 0.8323867321014404, 0.8378021121025085, 0.8301413059234619, 0.8354246616363525], "val_loss": [1.2416490146092005, 0.8949826104300362, 0.7426985672542027, 0.6854022571018764, 0.6626549618584769, 0.5588723421096802, 0.5710068089621407, 0.5513104370662144, 0.5313313347952706, 0.49750140735081266, 0.5273236376898629, 0.4822194916861398, 0.5055472510201591, 0.4497630425861904, 0.4548675503049578, 0.4766028778893607, 0.4662566695894514, 0.45081913471221924, 0.42746545587267193, 0.45915469101497103, 0.4002237915992737, 0.4287053006035941, 0.5104408945356097, 0.38503237281526836, 0.40768788542066303, 0.3859973209244864, 0.4110449893133981, 0.39975943735667635, 0.3837739144052778], "val_accuracy": [0.48100000619888306, 0.5806666612625122, 0.6636666655540466, 0.7016666531562805, 0.687333345413208, 0.7549999952316284, 0.7400000095367432, 0.7570000290870667, 0.7553333044052124, 0.7826666831970215, 0.7706666588783264, 0.7829999923706055, 0.777999997138977, 0.8033333420753479, 0.7950000166893005, 0.7863333225250244, 0.7863333225250244, 0.7976666688919067, 0.8046666383743286, 0.7913333177566528, 0.8349999785423279, 0.8243333101272583, 0.7816666960716248, 0.8373333215713501, 0.8159999847412109, 0.828000009059906, 0.8193333148956299, 0.8289999961853027, 0.8309999704360962]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8197143077850342, "mapping_values": [1, 7, 7, 5, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0211287983467456, 1.3641473713835641, 1.01933718818038, 0.9356551757026987, 0.7893492744394407, 0.7408692731502711, 0.7212915312596725, 0.7000480580481052, 0.6769301804647847, 0.6395007884891325, 0.5960008816050816, 0.6288326033086604, 0.5769165773763948, 0.5829161308885896, 0.574897448892339, 0.5413217332463585, 0.5305294860087963, 0.5358422404550495, 0.49232056362202864, 0.5014703682211837, 0.49458238383672176, 0.4634686330164334, 0.46793231725488055, 0.46580830139254753, 0.46070922994027913, 0.44170546426969576, 0.4364959977211938, 0.43712138582482046, 0.4347186495937833], "accuracy": [0.32043322920799255, 0.5138026475906372, 0.6284506916999817, 0.6491876840591431, 0.7013604640960693, 0.7206445932388306, 0.7217012047767639, 0.7309470176696777, 0.737947404384613, 0.7564390301704407, 0.7757231593132019, 0.7559106945991516, 0.7877426743507385, 0.77677983045578, 0.7777044177055359, 0.7902522683143616, 0.802271842956543, 0.7980451583862305, 0.8142913579940796, 0.8082155585289001, 0.8127063512802124, 0.8265751004219055, 0.8269713521003723, 0.8253863453865051, 0.8277638554573059, 0.835160493850708, 0.8379341959953308, 0.8360850811004639, 0.8350284099578857], "val_loss": [1.241614614214216, 0.8879359109061105, 0.8016739913395473, 0.6874556030545916, 0.6451138939176287, 0.5612891401563372, 0.590181691305978, 0.5408235277448382, 0.5185926301138741, 0.49906907762799946, 0.5354034900665283, 0.48257975918906076, 0.4943064791815622, 0.44865987982068745, 0.4570317268371582, 0.46903932094573975, 0.47180419308798655, 0.44772558552878244, 0.4098260572978428, 0.45883750915527344, 0.4017427733966282, 0.43043956586292814, 0.4027861271585737, 0.3868586761610849, 0.3997861572674343, 0.3907800998006548, 0.4070391569818769, 0.4311614973204477, 0.38658249378204346], "val_accuracy": [0.48100000619888306, 0.5816666483879089, 0.6290000081062317, 0.6946666836738586, 0.7116666436195374, 0.7573333382606506, 0.7269999980926514, 0.7583333253860474, 0.7666666507720947, 0.7806666493415833, 0.762666642665863, 0.7856666445732117, 0.7913333177566528, 0.8050000071525574, 0.7919999957084656, 0.7903333306312561, 0.7886666655540466, 0.8003333210945129, 0.8286666870117188, 0.7823333144187927, 0.8339999914169312, 0.8113333582878113, 0.8270000219345093, 0.8370000123977661, 0.8209999799728394, 0.8226666450500488, 0.8140000104904175, 0.8116666674613953, 0.8270000219345093]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 5, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.803428590297699, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.021140583801295, 1.360634083272979, 1.020266241952334, 0.9406329492504854, 0.784251654200062, 0.7458599698132591, 0.7134127247571284, 0.7101043197520106, 0.6694377722158849, 0.6225553355464499, 0.6258962121480303, 0.6111302527265305, 0.5837071069857354, 0.5844964271035129, 0.5868558632289854, 0.5427444677516029, 0.5285502677942547, 0.5274340355747396, 0.5136559163858043, 0.4964905068811692, 0.49520543245607285, 0.4720642066839553, 0.4746061641589573, 0.4629170076722057, 0.46228656133388596, 0.44825973163238686, 0.4375087035889513, 0.43791166412800436, 0.43746199665398977], "accuracy": [0.32043322920799255, 0.5152555704116821, 0.6283186078071594, 0.6519614458084106, 0.7017567157745361, 0.7206445932388306, 0.7207766771316528, 0.7326641082763672, 0.7430986762046814, 0.7597411274909973, 0.7589486241340637, 0.7640998363494873, 0.7824593782424927, 0.7769119143486023, 0.7763835787773132, 0.7911768555641174, 0.802271842956543, 0.8038568496704102, 0.7989697456359863, 0.8113855719566345, 0.8112534880638123, 0.8230088353157043, 0.8224804997444153, 0.8245938420295715, 0.8280280232429504, 0.8304054737091064, 0.8360850811004639, 0.8337075710296631, 0.8333113193511963], "val_loss": [1.241866077695574, 0.8804879018238613, 0.8015664134706769, 0.6848722185407367, 0.6432504824229649, 0.5740769931248256, 0.5627921989985875, 0.5427981615066528, 0.5048877852303642, 0.5095492090497699, 0.5361558369227818, 0.48011895588466097, 0.5178613322121757, 0.45074030331202913, 0.4598331110818045, 0.46859938757760183, 0.45621815749577116, 0.45390829018184115, 0.43558584792273386, 0.4803289345332554, 0.40338328906467985, 0.4308087910924639, 0.40864264965057373, 0.3895708748272487, 0.4052569695881435, 0.38784161635807585, 0.41784095764160156, 0.4155801108905247, 0.3799724919455392], "val_accuracy": [0.48100000619888306, 0.5863333344459534, 0.6349999904632568, 0.6986666917800903, 0.7149999737739563, 0.7289999723434448, 0.7609999775886536, 0.7553333044052124, 0.765999972820282, 0.7689999938011169, 0.7736666798591614, 0.7850000262260437, 0.7730000019073486, 0.8029999732971191, 0.7963333129882812, 0.7916666865348816, 0.8083333373069763, 0.7943333387374878, 0.7973333597183228, 0.7693333625793457, 0.8270000219345093, 0.8036666512489319, 0.8240000009536743, 0.8339999914169312, 0.8169999718666077, 0.82833331823349, 0.8113333582878113, 0.8180000185966492, 0.8316666483879089]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 0, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8031428456306458, "mapping_values": [1, 9, 9, 6, 3, 2, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.021143216262357, 1.3643202107926684, 1.0219908020972197, 0.913351999967011, 0.8126405220793191, 0.7672539903440212, 0.7139251687192583, 0.702184599545874, 0.6887871002193613, 0.6361322231327995, 0.6119947622024214, 0.6075032571240376, 0.5832951183426791, 0.5865348384144473, 0.5844409904420462, 0.5484088556625745, 0.5256160539784657, 0.5355819688575804, 0.4940255084026444, 0.5033519096645964, 0.4951984852123349, 0.4672206591038798, 0.47535774643946127, 0.46824064734684023, 0.4582908610704946, 0.44675126446236585, 0.43603501561106534, 0.42774275754578533, 0.42205907369979445], "accuracy": [0.3203011453151703, 0.5144630670547485, 0.6280544400215149, 0.6625280380249023, 0.6893408894538879, 0.7099458575248718, 0.7209087014198303, 0.7329282760620117, 0.733588695526123, 0.7547219395637512, 0.7693831920623779, 0.7623828053474426, 0.7777044177055359, 0.7775723338127136, 0.7777044177055359, 0.7923656105995178, 0.8020076751708984, 0.7979130744934082, 0.8121780753135681, 0.8104609847068787, 0.8129705190658569, 0.8241975903511047, 0.8244617581367493, 0.8235371708869934, 0.8272355198860168, 0.8302733898162842, 0.8366134166717529, 0.8385946154594421, 0.8428213000297546], "val_loss": [1.2417778968811035, 0.8703341313770839, 0.6977623190198626, 0.7117962496621268, 0.6581375428608486, 0.5564940997532436, 0.5772826671600342, 0.5734235218593052, 0.5270418950489589, 0.5139874730791364, 0.5359820978982108, 0.47739080020359587, 0.5255257913044521, 0.4553766591208322, 0.4680398872920445, 0.4721203020640782, 0.4713104111807687, 0.4490410600389753, 0.41277423075267244, 0.46497888224465506, 0.40276959964207243, 0.44051321915217806, 0.41341425691332134, 0.39157783133643015, 0.40496999876839773, 0.3841902358191354, 0.39531401225498747, 0.3946784223828997, 0.3900578022003174], "val_accuracy": [0.48100000619888306, 0.5913333296775818, 0.6800000071525574, 0.6666666865348816, 0.6896666884422302, 0.7549999952316284, 0.7433333396911621, 0.737666666507721, 0.7590000033378601, 0.7703333497047424, 0.7570000290870667, 0.7853333353996277, 0.7749999761581421, 0.8013333082199097, 0.7916666865348816, 0.7839999794960022, 0.7850000262260437, 0.7996666431427002, 0.8223333358764648, 0.7829999923706055, 0.828000009059906, 0.8009999990463257, 0.8259999752044678, 0.8330000042915344, 0.8180000185966492, 0.8330000042915344, 0.8196666836738586, 0.8323333263397217, 0.8276666402816772]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 4, 6, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [43, 48, 22, 41, 42, 68, 76], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [17, 74, 76, 58]], "fitness": -0.7914285659790039, "mapping_values": [1, 26, 26, 16, 10, 7, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2689797109569367, 2.1589805241888227, 1.9100613351889164, 1.5499106316502855, 1.2942731276384796, 1.1406878581089257, 1.037756874986124, 0.9803477063107846, 0.9232540152580226, 0.8908000348691596, 0.8560757528458603, 0.8270260936013145, 0.8110506040009808, 0.7967363366471651, 0.7941836505486681, 0.7533541702166083, 0.7449636768513761, 0.7367229077243188, 0.72019028188908, 0.7135304985517492, 0.7064361309630445, 0.698499830265748, 0.6916231605843184, 0.6873785415188259, 0.6836648903361023, 0.6761549591955145, 0.6566024818723983, 0.6568176435473226, 0.6586703736752787, 0.6523183803469544, 0.6380304401151697, 0.6485827942298247, 0.6270349805444192, 0.6303445501665098, 0.6335338402764358, 0.6177519518764437, 0.6133832145896113, 0.6173521221006835, 0.6078096958293796, 0.5966882447383313, 0.6042443123932575, 0.6031259199285299], "accuracy": [0.17091533541679382, 0.3346982002258301, 0.43468499183654785, 0.5028398036956787, 0.5580504536628723, 0.5983357429504395, 0.6333377361297607, 0.6560559868812561, 0.6736230254173279, 0.6773213744163513, 0.693831741809845, 0.7005679607391357, 0.7078325152397156, 0.7087571024894714, 0.7141724824905396, 0.726192057132721, 0.7276449799537659, 0.7283053994178772, 0.7308149337768555, 0.7312111854553223, 0.7371549606323242, 0.7353057861328125, 0.7427024245262146, 0.7441553473472595, 0.7454761862754822, 0.7446836829185486, 0.7564390301704407, 0.7539294958114624, 0.7582882046699524, 0.757099449634552, 0.759609043598175, 0.7618544697761536, 0.7685906887054443, 0.767401933670044, 0.7611940503120422, 0.770439863204956, 0.7736098170280457, 0.7697794437408447, 0.7738739848136902, 0.778232753276825, 0.7729493975639343, 0.7725531458854675], "val_loss": [1.8920883451189314, 1.7288708005632674, 1.3925447804587228, 1.0611393111092704, 0.8811915261404855, 0.7880209343773978, 0.7383145775113787, 0.6858903850827899, 0.6625398056847709, 0.6392767259052822, 0.6259018353053502, 0.6052042245864868, 0.5946413789476667, 0.5836000783102853, 0.5792429276875087, 0.5707307883671352, 0.5624796492712838, 0.5624405315944127, 0.5434136050088065, 0.5396934747695923, 0.5319504397256034, 0.5431312663214547, 0.5278960466384888, 0.520393933568682, 0.5233798367636544, 0.5195122616631644, 0.5109517233712333, 0.51083391053336, 0.5064786672592163, 0.5039478199822562, 0.4984994615827288, 0.49771099431174143, 0.49275978973933626, 0.4867544003895351, 0.49735954829624723, 0.4973282814025879, 0.47899346692221506, 0.48234331607818604, 0.4766584634780884, 0.4796020303453718, 0.4756368398666382, 0.4735985483442034], "val_accuracy": [0.38199999928474426, 0.49166667461395264, 0.5706666707992554, 0.6449999809265137, 0.6756666898727417, 0.6833333373069763, 0.6933333277702332, 0.7136666774749756, 0.7266666889190674, 0.7326666712760925, 0.7396666407585144, 0.7433333396911621, 0.7426666617393494, 0.7506666779518127, 0.7480000257492065, 0.7556666731834412, 0.7553333044052124, 0.7486666440963745, 0.7649999856948853, 0.765999972820282, 0.7639999985694885, 0.7540000081062317, 0.7620000243186951, 0.7710000276565552, 0.7676666378974915, 0.7720000147819519, 0.7753333449363708, 0.7743333578109741, 0.7806666493415833, 0.7776666879653931, 0.784333348274231, 0.781333327293396, 0.7820000052452087, 0.7856666445732117, 0.7803333401679993, 0.7829999923706055, 0.7933333516120911, 0.7900000214576721, 0.7900000214576721, 0.7866666913032532, 0.7883333563804626, 0.7913333177566528]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 4, 6, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [73, 48, 22, 41, 58, 68, 80], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [17, 74, 76, 58]], "fitness": -0.7888571619987488, "mapping_values": [1, 9, 9, 4, 5, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2704835929071994, 2.162567296882804, 1.9226436958242448, 1.5741986110619488, 1.3085023800867928, 1.1535108048981049, 1.0588823111616876, 0.9992141248275732, 0.9437302570569123, 0.9063595524710939, 0.8877269413571678, 0.8416676063894076, 0.8344180641661167, 0.8051273848449613, 0.792411434903924, 0.7728301026502762, 0.768571125604473, 0.7511709912767058, 0.7433888450463718, 0.7292060538006496, 0.7244293082265838, 0.7211846517392311, 0.7156081376310668, 0.6925526062148893, 0.6949329370316135, 0.6798916981047359, 0.6769244669844462, 0.6781386360122607, 0.6734139835672325, 0.6572015840127688, 0.6549097431601943, 0.6641859024381278, 0.6473198632412362, 0.6409543326675395, 0.6353870415101828, 0.6306579723381458, 0.6192246527326043, 0.6254390271159368, 0.6178951616835805, 0.6145775039528875, 0.6161860758917223, 0.6215028160551457, 0.6151593981827129, 0.5941550379589233, 0.6066336147600334, 0.589859318432476, 0.6013963419401319, 0.5885513996671707], "accuracy": [0.1728965789079666, 0.3381323516368866, 0.4321753978729248, 0.4966318905353546, 0.5577862858772278, 0.6022982597351074, 0.6273940205574036, 0.6495839357376099, 0.6700568199157715, 0.6806234121322632, 0.6845859289169312, 0.7008321285247803, 0.6980583667755127, 0.705058753490448, 0.7161537408828735, 0.7210407853126526, 0.7176066637039185, 0.7293620109558105, 0.7316074371337891, 0.7281733155250549, 0.7376832365989685, 0.7345132827758789, 0.7339849472045898, 0.7411174178123474, 0.7467969655990601, 0.7516840696334839, 0.7473253011703491, 0.7499669790267944, 0.7477215528488159, 0.7581561207771301, 0.7508915662765503, 0.7514199018478394, 0.7539294958114624, 0.7648923397064209, 0.7668735980987549, 0.7644960880279541, 0.7667415142059326, 0.7724210619926453, 0.7703077793121338, 0.7728173136711121, 0.7666094303131104, 0.7724210619926453, 0.7695152759552002, 0.7792893648147583, 0.7729493975639343, 0.7786290049552917, 0.7765156626701355, 0.7848368883132935], "val_loss": [1.8935996464320592, 1.7338912827628, 1.4065682547433036, 1.0705456733703613, 0.8866535254887172, 0.7908200706754412, 0.7349409716469901, 0.6941250562667847, 0.6680515153067452, 0.6507758583341327, 0.6281322751726423, 0.6022534711020333, 0.5952004705156598, 0.5848182780402047, 0.5722041981560844, 0.5680156605584281, 0.5562582697187152, 0.5614600862775531, 0.545154162815639, 0.5453763689313617, 0.5411661011832101, 0.5341486760548183, 0.5277562141418457, 0.5302220412663051, 0.5186398880822318, 0.5113458292824882, 0.511655364717756, 0.5042421306882586, 0.503082275390625, 0.5106409788131714, 0.4969601971762521, 0.49303644044058664, 0.49675207478659494, 0.4925766331808908, 0.4901633603232248, 0.481459379196167, 0.4841892719268799, 0.4783503328050886, 0.4753306082316807, 0.4808077130998884, 0.48404574394226074, 0.47687855788639616, 0.4686253922326224, 0.46643430846078054, 0.46400558948516846, 0.46502680437905447, 0.462689859526498, 0.4609640325818743], "val_accuracy": [0.42266666889190674, 0.5233333110809326, 0.5533333420753479, 0.6579999923706055, 0.668666660785675, 0.6890000104904175, 0.7070000171661377, 0.7123333215713501, 0.7129999995231628, 0.7206666469573975, 0.7319999933242798, 0.7463333606719971, 0.7409999966621399, 0.7476666569709778, 0.75, 0.753333330154419, 0.7553333044052124, 0.7536666393280029, 0.7606666684150696, 0.7620000243186951, 0.7540000081062317, 0.7663333415985107, 0.768666684627533, 0.7576666474342346, 0.7670000195503235, 0.7713333368301392, 0.7739999890327454, 0.7696666717529297, 0.7696666717529297, 0.7643333077430725, 0.7733333110809326, 0.781000018119812, 0.777999997138977, 0.778333306312561, 0.7749999761581421, 0.7856666445732117, 0.7853333353996277, 0.7906666398048401, 0.7919999957084656, 0.7900000214576721, 0.7816666960716248, 0.7823333144187927, 0.7986666560173035, 0.7979999780654907, 0.7950000166893005, 0.79666668176651, 0.7979999780654907, 0.793666660785675]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [0, 74, 76, 58]], "fitness": -0.7631428837776184, "mapping_values": [1, 9, 9, 6, 3, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2968451813967503, 2.283393625601518, 2.2697430110768146, 2.2548014944444605, 2.2385525218153424, 2.2186712553598436, 2.198343624197623, 2.17127101485283, 2.1435559911656106, 2.1087658744777245, 2.066432566643391, 2.016914977090171, 1.965055396480961, 1.905728228340028, 1.8369368656105793, 1.7635154287655435, 1.705501038353315, 1.6365207358279548, 1.5707848025917646, 1.5088385844258994, 1.4488197303703196, 1.4099494819045304, 1.365831842181264, 1.321059240515143, 1.2921325407637865, 1.2477173017016365, 1.2251201709027555, 1.1963444973074324, 1.1749141982769717, 1.1489215231590488, 1.1245232407033656, 1.1182869962177824, 1.091683658500468, 1.0755669238812668, 1.0599451258418393, 1.0518411807317334, 1.0187397857367984, 1.019164296267858, 1.0043948053164238, 0.9906069791674409, 0.9842236246871847, 0.9753887419057575, 0.9644087650803936, 0.9487309102542238, 0.9483369747409259, 0.9270629096953876, 0.9323588948460177, 0.9192878626451327, 0.9093800908649099, 0.9000337318564136, 0.8989774181921216, 0.8805295648654816, 0.8780997146578859, 0.8845650168568026, 0.874599031705457, 0.8664621078043786, 0.858262785894051, 0.8593851877414571, 0.8592314460510276, 0.8528638918402015, 0.8404482533556674, 0.8498591937566587, 0.8326662348765644, 0.84185409524642, 0.8305111546101367, 0.8254692058096536, 0.8121114626080054, 0.8204984534071768, 0.8096667486348125, 0.815778346692157, 0.8001643877538944, 0.8053264834735655, 0.8047013946685494, 0.8009541366771386, 0.8009206468812415, 0.8007406971678521, 0.7869242271412129, 0.7815704288861818, 0.7884413197984974, 0.7802962879022319, 0.7830201035571877, 0.7729258699864917, 0.7639893463983386, 0.7719881952698551, 0.7718909097511408, 0.762265419057804, 0.7531598954152878, 0.7672077435638454, 0.7605651868820946, 0.7608446434756249, 0.7626719055095794, 0.75617075389985, 0.745429380238253, 0.7535779352248573, 0.742400526976809, 0.7318379882776727, 0.7470109117281452, 0.7502543304527377, 0.737442880258773, 0.7302009432685216], "accuracy": [0.10276053100824356, 0.1364416927099228, 0.17553824186325073, 0.21437062323093414, 0.25201427936553955, 0.27618545293807983, 0.31224408745765686, 0.3337736129760742, 0.35279354453086853, 0.36626601219177246, 0.39307886362075806, 0.40945714712142944, 0.4241183400154114, 0.43059042096138, 0.4551578462123871, 0.4744419455528259, 0.4791969358921051, 0.48791441321372986, 0.501518964767456, 0.518689751625061, 0.5361247062683105, 0.5419363379478455, 0.5497292280197144, 0.5567296147346497, 0.5633337497711182, 0.5783912539482117, 0.5786554217338562, 0.5927882790565491, 0.5971469879150391, 0.5999207496643066, 0.6127327680587769, 0.6118082404136658, 0.6122044920921326, 0.6277902722358704, 0.6269977688789368, 0.6239598393440247, 0.6376964449882507, 0.6473385095596313, 0.6493197679519653, 0.6509047746658325, 0.6498481035232544, 0.6546030640602112, 0.6613393425941467, 0.6645092964172363, 0.6646413803100586, 0.6707172393798828, 0.6695284843444824, 0.6713775992393494, 0.6808875799179077, 0.6803592443466187, 0.6802271604537964, 0.6885483860969543, 0.6865671873092651, 0.6856426000595093, 0.6851142644882202, 0.6921146512031555, 0.6947563290596008, 0.6926429867744446, 0.6934354901313782, 0.6956809163093567, 0.6976621150970459, 0.6914542317390442, 0.6991150379180908, 0.7017567157745361, 0.7042662501335144, 0.6995112895965576, 0.7108704447746277, 0.7058512568473816, 0.7092854380607605, 0.7100779414176941, 0.7128516435623169, 0.7059833407402039, 0.7094175219535828, 0.7169462442398071, 0.7102100253105164, 0.7082287669181824, 0.7156254053115845, 0.7191916704177856, 0.715889573097229, 0.7160216569900513, 0.718399167060852, 0.7218332886695862, 0.7235503792762756, 0.7219653725624084, 0.7191916704177856, 0.72672039270401, 0.7219653725624084, 0.7180029153823853, 0.7244749665260315, 0.724210798740387, 0.7214370369911194, 0.7252674698829651, 0.7308149337768555, 0.7235503792762756, 0.7308149337768555, 0.7302865982055664, 0.7304186820983887, 0.7217012047767639, 0.7371549606323242, 0.7320036888122559], "val_loss": [1.9582296098981584, 1.945516926901681, 1.9322150094168526, 1.9176910945347376, 1.9011877604893275, 1.8823740822928292, 1.8602358954293388, 1.8338052204677038, 1.8025537899562292, 1.7658156667436873, 1.7229358809334892, 1.6732631751469202, 1.6171306541987829, 1.555215767451695, 1.488142830984933, 1.4177735533033098, 1.3486739226749964, 1.2804298060280936, 1.2161908490317208, 1.1554760592324393, 1.101647104535784, 1.0546011584145683, 1.0124991621289934, 0.9760408060891288, 0.9434792995452881, 0.9135619231632778, 0.8881329127720424, 0.8644861493791852, 0.843077574457441, 0.824705685888018, 0.8071036338806152, 0.7932191235678536, 0.7789277008601597, 0.7651513985225132, 0.7540768384933472, 0.7443587269101825, 0.7343558583940778, 0.7240361826760429, 0.7152477673121861, 0.708071061543056, 0.700320976121085, 0.6931333541870117, 0.6866053002221244, 0.6806907653808594, 0.6743112291608538, 0.6683036088943481, 0.6641326120921544, 0.6596365656171527, 0.6547157083238874, 0.6501216888427734, 0.6455334084374564, 0.6412322861807687, 0.6379554271697998, 0.6341490575245449, 0.6306173801422119, 0.626949565751212, 0.6230094603129795, 0.6204215628760201, 0.6176032849720546, 0.6142112357275826, 0.611087577683585, 0.6080748013087681, 0.6053395782198224, 0.602711388042995, 0.6009585005896432, 0.5982178960527692, 0.5953184195927211, 0.5929295335497174, 0.5911803926740374, 0.5898943798882621, 0.5872205495834351, 0.5857171331133161, 0.5824516841343471, 0.5804881368364606, 0.5785007306507656, 0.57716851575034, 0.5757758957999093, 0.5732598985944476, 0.5719908135277885, 0.5707788126809257, 0.5684524093355451, 0.5663818802152362, 0.5647914920534406, 0.5630819627216884, 0.5617721251079014, 0.5598902702331543, 0.5579715285982404, 0.5572421721049717, 0.5560212816510882, 0.5556762729372297, 0.5547269071851458, 0.5521953446524483, 0.5518360819135394, 0.5495736088071551, 0.5478614398411342, 0.5471839223589215, 0.5460411480494908, 0.5454052005495343, 0.5435497079576764, 0.5425226858683995], "val_accuracy": [0.13766667246818542, 0.2563333213329315, 0.3336666524410248, 0.37400001287460327, 0.398333340883255, 0.42800000309944153, 0.445333331823349, 0.46533334255218506, 0.49033331871032715, 0.5063333511352539, 0.5163333415985107, 0.5286666750907898, 0.5356666445732117, 0.5446666479110718, 0.5486666560173035, 0.5533333420753479, 0.5649999976158142, 0.5746666789054871, 0.5896666646003723, 0.6006666421890259, 0.6236666440963745, 0.6433333158493042, 0.6526666879653931, 0.6566666960716248, 0.6636666655540466, 0.671999990940094, 0.6766666769981384, 0.6836666464805603, 0.6899999976158142, 0.6896666884422302, 0.6936666369438171, 0.6940000057220459, 0.6973333358764648, 0.6996666789054871, 0.7016666531562805, 0.7036666870117188, 0.7076666951179504, 0.7113333344459534, 0.7139999866485596, 0.7153333425521851, 0.715666651725769, 0.7163333296775818, 0.718999981880188, 0.7193333506584167, 0.7239999771118164, 0.7243333458900452, 0.7260000109672546, 0.7279999852180481, 0.7286666631698608, 0.7306666374206543, 0.7319999933242798, 0.734666645526886, 0.734333336353302, 0.734666645526886, 0.7360000014305115, 0.7363333106040955, 0.7383333444595337, 0.7400000095367432, 0.7386666536331177, 0.7419999837875366, 0.7419999837875366, 0.7436666488647461, 0.7436666488647461, 0.7456666827201843, 0.7423333525657654, 0.7433333396911621, 0.7446666955947876, 0.7446666955947876, 0.7459999918937683, 0.7433333396911621, 0.7443333268165588, 0.7486666440963745, 0.75, 0.7509999871253967, 0.7506666779518127, 0.750333309173584, 0.7493333220481873, 0.7526666522026062, 0.7516666650772095, 0.753000020980835, 0.7553333044052124, 0.7570000290870667, 0.7570000290870667, 0.7559999823570251, 0.7570000290870667, 0.7563333511352539, 0.7586666941642761, 0.7556666731834412, 0.7570000290870667, 0.7546666860580444, 0.7596666812896729, 0.7586666941642761, 0.7596666812896729, 0.7576666474342346, 0.7599999904632568, 0.7620000243186951, 0.7636666893959045, 0.7616666555404663, 0.7609999775886536, 0.7616666555404663]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 1, 9, 0, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 6, 3, 5, 8, 6, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [47, 74, 76, 58]], "fitness": -0.5274285674095154, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2925584839319653, 2.1130624175496844, 2.0647608875488292, 1.9489992902168995, 2.1164607642711255, 2.235637687877846, 2.3043734677762813], "accuracy": [0.2145027071237564, 0.23959846794605255, 0.24237221479415894, 0.29665830731391907, 0.2254655957221985, 0.21621978282928467, 0.10593052208423615], "val_loss": [1.9395319393702917, 1.1934189455849784, 1.9436172076633997, 1.4916754450116838, 1.9250373840332031, 1.976231234414237, 1.9675069536481584], "val_accuracy": [0.21400000154972076, 0.5486666560173035, 0.22066666185855865, 0.49033331871032715, 0.15533334016799927, 0.09799999743700027, 0.12700000405311584]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 3, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [92, 48, 22, 41, 42, 68], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [88, 74, 76, 58]], "fitness": -0.24057142436504364, "mapping_values": [1, 7, 7, 5, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.5129981811540065, 2.6818175009764134, 2.3050329591997736, 2.303540672183336, 2.303196999217698, 2.298416584238101, 2.2928386010104607, 2.2298262179441077, 2.305192236540702, 2.3032668737482793, 2.3038349454869937, 2.3030083393927785], "accuracy": [0.2118610441684723, 0.11953506618738174, 0.09853387624025345, 0.09800554811954498, 0.09774138033390045, 0.12468630075454712, 0.13221503794193268, 0.22691850364208221, 0.10328886657953262, 0.10117553919553757, 0.09576013684272766, 0.10157178342342377], "val_loss": [3.8444693429129466, 1.9760244233267648, 1.973621232169015, 1.9734718458993095, 1.9727985518319267, 1.9165308134896415, 1.9412997109549386, 1.9782135146004813, 1.9741526331220354, 1.9739693232945033, 1.973949364253453, 1.9736695289611816], "val_accuracy": [0.2590000033378601, 0.10066666454076767, 0.10233332961797714, 0.10133333504199982, 0.09833333641290665, 0.32199999690055847, 0.3319999873638153, 0.09799999743700027, 0.09666666388511658, 0.09666666388511658, 0.09799999743700027, 0.10566666722297668]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 2, 2, 8, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 0, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [9, 6, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [47, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025385992102825, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 9, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [95, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [36, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.300726905616677, 2.302336835432928, 2.3025845131302836, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10500594228506088, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9732622419084822, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09200000017881393, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [18, 48, 22, 41, 42, 68], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 4, 3, 5, 8, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 1, 0, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 11, 4, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, alpha)))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3025385992102825, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 1, 9, 0, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 1, 1, 0, 1, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 4, 4, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 9, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.pow(tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025385992102825, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 3, 4, 3, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [3, 3, 2, 1, 0, 0, 2, 2], [88, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3031600857171495, 2.3049864437696312, 2.3067455156021714, 2.3088366708514902, 2.3120224429568785, 2.3130821051488635, 2.318431100069398, 2.3215537056742153, 2.331126966937469, 2.342378981534469, 2.3681814056487682, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08717474341392517, 0.08426892012357712, 0.08387266844511032, 0.0820235088467598, 0.07621186226606369, 0.07555144280195236, 0.07924976944923401, 0.07224937528371811, 0.07277770340442657, 0.0738343670964241, 0.08360850811004639, 0.0948355570435524, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9723125185285295, 1.9737189156668526, 1.9751689093453544, 1.9770392690386092, 1.979412623814174, 1.9816211291721888, 1.9843105588640486, 1.9878295489719935, 1.9939275469098772, 2.0055544716971263, 2.0447092056274414, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02866666577756405, 0.02266666665673256, 0.021666666492819786, 0.021666666492819786, 0.02566666714847088, 0.029666665941476822, 0.04266666620969772, 0.05700000002980232, 0.07633333653211594, 0.09466666728258133, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 8, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [87, 48, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [3, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [31, 12, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 8, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [3, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [7, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [1104134395.6526525, 20772458165.98283, 94361927948.34183, 261744936221.24844, 567493009612.5024, 1039200378221.0477], "accuracy": [0.1006472036242485, 0.09655263274908066, 0.10553427785634995, 0.09919429570436478, 0.09893012791872025, 0.10408136248588562], "val_loss": [4029923766.857143, 32229233225.142857, 108762026569.14285, 257793982464.0, 503486143341.7143, 870009817380.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 2, 2, 4, 2, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 2, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [95, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [3, 1, 2, 1, 0, 0, 2, 2], [47, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 5, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 5, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.05000000074505806, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.302588400666299, 2.3026640048321165, 2.302565375433748, 2.3024313289255374, 2.3023039957378297, 2.3008070751943954, 2.302337823526939, 2.300535697821125, 2.3022490621573573, 2.3020043703448803, 2.3018214183004226, 2.3002983069832394, 2.301784190267478, 2.302455386906378, 2.301278236252111, 2.300594653026413, 2.3009988868934066, 2.3015122593449027, 2.301447706640735, 2.3018145453833854, 2.2997612548841224, 2.3022337003611395, 2.300871971812089, 2.3006158343647543, 2.3009746853764566, 2.301077247468976, 2.301272941004126, 2.3005524296660416, 2.301087678651831, 2.3020139729672766, 2.300960395219949, 2.301171992291486, 2.3007004335020764, 2.301607020983622, 2.2996513347552674, 2.300958132369092, 2.299203149930062, 2.3002186478750972, 2.2997710439019183], "accuracy": [0.08875974267721176, 0.08849557489156723, 0.09259014576673508, 0.09192973375320435, 0.09100515395402908, 0.09628847241401672, 0.0944393053650856, 0.09206181764602661, 0.09179764986038208, 0.09087307006120682, 0.08981640636920929, 0.1002509593963623, 0.08994849026203156, 0.09681680053472519, 0.09179764986038208, 0.09734513610601425, 0.09734513610601425, 0.09589222073554993, 0.09166556596755981, 0.09034473448991776, 0.09509972482919693, 0.09245806187391281, 0.09285431355237961, 0.0944393053650856, 0.09245806187391281, 0.09430722147226334, 0.09536388516426086, 0.0944393053650856, 0.0952318087220192, 0.08915598690509796, 0.09602430462837219, 0.09840179979801178, 0.09800554811954498, 0.09034473448991776, 0.10342095047235489, 0.09893012791872025, 0.09998679161071777, 0.09628847241401672, 0.09747721254825592], "val_loss": [1.9710880007062639, 1.9710029874529158, 1.9709234918866838, 1.970830304282052, 1.9707308496747697, 1.970656190599714, 1.9705860955374581, 1.9705236979893275, 1.970461368560791, 1.9703938620431083, 1.9703411374773299, 1.970282895224435, 1.9702213151114327, 1.9701536042349679, 1.9700822830200195, 1.9700443404061454, 1.970012596675328, 1.9699773107256209, 1.9699416160583496, 1.9699053083147322, 1.969886643545968, 1.9698457717895508, 1.9698124613080705, 1.9697880744934082, 1.9697608947753906, 1.9697390965053014, 1.9697140966142928, 1.9696994509015764, 1.9696873256138392, 1.9696570123944963, 1.9696367127554757, 1.9696125302995955, 1.9695946829659599, 1.9695680482046944, 1.9695579665047782, 1.9695488384791784, 1.9695512907845634, 1.9695472717285156, 1.9695416178022112], "val_accuracy": [0.03766666725277901, 0.038333334028720856, 0.03799999877810478, 0.03799999877810478, 0.03866666555404663, 0.03966666758060455, 0.0403333343565464, 0.0403333343565464, 0.04100000113248825, 0.04266666620969772, 0.04266666620969772, 0.0430000014603138, 0.0430000014603138, 0.04500000178813934, 0.04600000008940697, 0.046666666865348816, 0.04833333194255829, 0.04833333194255829, 0.050999999046325684, 0.050999999046325684, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05366666615009308, 0.054999999701976776, 0.05666666850447655, 0.05766666680574417, 0.057999998331069946, 0.057999998331069946, 0.059333331882953644, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549, 0.060333333909511566, 0.059333331882953644, 0.05966666713356972, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 1, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(sigma, beta)), tf.math.square(alpha))))))", "other_info": {"loss": [2.3026371954485976, 2.3028356597534088, 2.3028376489157343, 2.3028186949693517, 2.3028358726012725, 2.3013656004277268], "accuracy": [0.08875974267721176, 0.08796724677085876, 0.09206181764602661, 0.09047681838274002, 0.08889182657003403, 0.09457138925790787], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]