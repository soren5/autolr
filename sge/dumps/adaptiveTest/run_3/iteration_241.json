[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 8, 5, 0, 5, 2, 4, 1, 0, 2, 1, 6, 1, 6, 2, 6, 1, 0, 9, 1, 6, 6, 0, 6, 1, 3, 3, 9, 7, 0, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 9, 1, 5, 5, 2, 3, 8, 0, 7, 3, 6, 2, 7, 7, 3, 5, 7, 2, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [98, 42, 20, 7, 45, 13, 66, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 14, 10, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, alpha))))))))), tf.math.add(beta, beta)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.101109845590094, 1.8188055492647257, 1.4034542323670383, 1.0157482697664235, 0.8957976122904511, 0.7565131990381472, 0.7105892912082826, 0.673119045188792, 0.6760504105465523, 0.6319488358850319, 0.6165183869571482, 0.571642538276504, 0.5723648814870981, 0.5661244570240604, 0.5390668122476481, 0.5626167033358241, 0.5290500670454962, 0.5067270380977343, 0.5247706180046484, 0.47888844405041237, 0.47956411953631206, 0.46595838729731553, 0.4682871327030503, 0.47015526847454536, 0.4296303759311184, 0.43890221589954065, 0.4436509220190115, 0.4383404127374663, 0.4185419499425368, 0.4008500389671124, 0.39580740082013594, 0.4012165053952655, 0.4162395641103381, 0.3794814344205719, 0.37690647982288233], "accuracy": [0.28239333629608154, 0.4212125241756439, 0.5152555704116821, 0.616299033164978, 0.6630563735961914, 0.7049266695976257, 0.7217012047767639, 0.7341170310974121, 0.7384757399559021, 0.7549861073493958, 0.7672698497772217, 0.7824593782424927, 0.7812706232070923, 0.7861577272415161, 0.7907806038856506, 0.7922335267066956, 0.8013472557067871, 0.8080834746360779, 0.7968564033508301, 0.8182538747787476, 0.8141592741012573, 0.8182538747787476, 0.8220842480659485, 0.8171972036361694, 0.8397833704948425, 0.8338396549224854, 0.8345000743865967, 0.8356888294219971, 0.8418967127799988, 0.8531237840652466, 0.8544445633888245, 0.8524633646011353, 0.8401796221733093, 0.8609166741371155, 0.8618412613868713], "val_loss": [1.3884192194257463, 1.0252996172223772, 1.0758369650159563, 0.7259345735822406, 0.6185594286237445, 0.5933901923043388, 0.5338165930339268, 0.557465672492981, 0.5292131049292428, 0.49772552081516813, 0.4645164353506906, 0.49346419743129183, 0.4787530388150896, 0.5128312110900879, 0.5004066910062518, 0.44277206489018034, 0.42084611313683645, 0.409663941179003, 0.4513202905654907, 0.4457081896918161, 0.3991441471236093, 0.4130644202232361, 0.3931225282805307, 0.43262111289160593, 0.38502817494528635, 0.40103420189448763, 0.38465808970587595, 0.40550912278039114, 0.38077125379017424, 0.36057435614722116, 0.38539574827466694, 0.3563838430813381, 0.37714258262089323, 0.3719909531729562, 0.37295124360493254], "val_accuracy": [0.4886666536331177, 0.5646666884422302, 0.5683333277702332, 0.625333309173584, 0.734333336353302, 0.7139999866485596, 0.7606666684150696, 0.7493333220481873, 0.7556666731834412, 0.7806666493415833, 0.7883333563804626, 0.7699999809265137, 0.7850000262260437, 0.7486666440963745, 0.7710000276565552, 0.8056666851043701, 0.8220000267028809, 0.8203333616256714, 0.7866666913032532, 0.7860000133514404, 0.8309999704360962, 0.8246666789054871, 0.8336666822433472, 0.8113333582878113, 0.8386666774749756, 0.8259999752044678, 0.8373333215713501, 0.8119999766349792, 0.8446666598320007, 0.8513333201408386, 0.8376666903495789, 0.8503333330154419, 0.8353333473205566, 0.8420000076293945, 0.8510000109672546]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.1011257539446078, 1.8214625358550052, 1.6237548744957193, 1.0573473496522727, 0.8464677159056577, 0.7663424251464065, 0.7297299922323498, 0.7194847429212783, 0.6377785658445876, 0.657556995369613, 0.6016277756122251, 0.5950204511801045, 0.5719248510433651, 0.5730985706870614, 0.5477985698690881, 0.5293336576710697, 0.5370204467594568, 0.5149073755665541, 0.527512187805662, 0.4751952558759811, 0.48441944751662663, 0.47459520857174475, 0.4622753023817838, 0.46369865468984045, 0.4460931829394697, 0.4414168873152571, 0.4412895681764849, 0.43742456964104326, 0.4228422420529673, 0.4004407564268892, 0.42375928845702854, 0.4000782911898107, 0.4057575128947928, 0.3736318172504401], "accuracy": [0.2822612524032593, 0.42147669196128845, 0.47166821360588074, 0.6026945114135742, 0.6724342703819275, 0.709021270275116, 0.7213049530982971, 0.7236824631690979, 0.7534011602401733, 0.7511557340621948, 0.7695152759552002, 0.7689869403839111, 0.7877426743507385, 0.7783648371696472, 0.7864218950271606, 0.7998943328857422, 0.793950617313385, 0.8062343001365662, 0.7968564033508301, 0.8219521641731262, 0.813498854637146, 0.8142913579940796, 0.8257825970649719, 0.8238013386726379, 0.8337075710296631, 0.8322546482086182, 0.8380662798881531, 0.834632158279419, 0.8407079577445984, 0.8499537706375122, 0.8413683772087097, 0.8511425256729126, 0.8502179384231567, 0.8595958352088928], "val_loss": [1.3894713606153215, 1.039496796471732, 0.9488912991115025, 0.681665471621922, 0.684395432472229, 0.6111633266721453, 0.5971691097532, 0.5238233975001744, 0.5097151483808245, 0.5024558135441372, 0.4750047240938459, 0.45822090762002127, 0.4628415618624006, 0.5105247838156564, 0.4520512819290161, 0.44879506315503803, 0.4420791098049709, 0.407380257334028, 0.4158033898898533, 0.442726731300354, 0.3956245354243687, 0.4154437184333801, 0.40500167437962126, 0.4065600463322231, 0.38217222690582275, 0.4004791634423392, 0.37343357290540424, 0.3989220772470747, 0.3642629640442984, 0.39224656990596224, 0.388467652457101, 0.37291734559195383, 0.3839866008077349, 0.3586487429482596], "val_accuracy": [0.4883333444595337, 0.5746666789054871, 0.5789999961853027, 0.6790000200271606, 0.6933333277702332, 0.6943333148956299, 0.7210000157356262, 0.753333330154419, 0.7630000114440918, 0.7746666669845581, 0.7789999842643738, 0.7983333468437195, 0.7919999957084656, 0.7473333477973938, 0.7979999780654907, 0.8003333210945129, 0.7993333339691162, 0.8259999752044678, 0.8140000104904175, 0.7879999876022339, 0.8360000252723694, 0.8266666531562805, 0.8159999847412109, 0.8193333148956299, 0.8433333039283752, 0.8266666531562805, 0.8370000123977661, 0.8273333311080933, 0.8529999852180481, 0.8259999752044678, 0.8286666870117188, 0.8360000252723694, 0.828000009059906, 0.843999981880188]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7868571281433105, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))))))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.188748263915957, 1.625266438052639, 1.3149021849766416, 1.01624518730511, 0.8767376327401281, 0.8129767866151019, 0.7699612493229077, 0.703983290627522, 0.6645539763061645, 0.6242477787704579, 0.6466333020270351, 0.616484268316897, 0.6073079199098782, 0.5691348580463199, 0.5611564090002829, 0.53339191728406, 0.520679202188102, 0.5020009403365115], "accuracy": [0.2709021270275116, 0.419759601354599, 0.533350944519043, 0.6215823292732239, 0.6725663542747498, 0.6944921612739563, 0.7079645991325378, 0.7333245277404785, 0.7411174178123474, 0.7651565074920654, 0.7602694630622864, 0.7640998363494873, 0.770439863204956, 0.7872143983840942, 0.7841764688491821, 0.804649293422699, 0.8045172095298767, 0.8173292875289917], "val_loss": [1.5055876118796212, 1.1396336214882987, 0.7689398016248431, 0.6403969185692924, 0.6923090730394635, 0.596285206930978, 0.5529159477778843, 0.5167235306331089, 0.4916734184537615, 0.47765357153756277, 0.4779696123940604, 0.5761833531515939, 0.4569822209221976, 0.4508382763181414, 0.45619191442217144, 0.449935930115836, 0.44428118637629915, 0.4764650889805385], "val_accuracy": [0.3149999976158142, 0.4830000102519989, 0.6470000147819519, 0.7066666483879089, 0.6793333292007446, 0.7233333587646484, 0.7559999823570251, 0.7620000243186951, 0.7803333401679993, 0.7906666398048401, 0.781333327293396, 0.7563333511352539, 0.8050000071525574, 0.8046666383743286, 0.8040000200271606, 0.7903333306312561, 0.7996666431427002, 0.7799999713897705]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.42399999499320984, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(grad), tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3976331723600786, 2.1462249020701307, 1.5341166371698345, 1.1755604611065378, 1.3290805206196796, 1.4106941219995428, 1.5778512186803177, 2.579783594351655], "accuracy": [0.2755250334739685, 0.22876766324043274, 0.4835556745529175, 0.6000528335571289, 0.5632016658782959, 0.5131422281265259, 0.47629112005233765, 0.3921542763710022], "val_loss": [1.975219454084124, 1.3752105917249406, 0.8421746492385864, 0.8413332530430385, 1.0385614463261195, 0.9555892263139997, 0.9279538903917585, 8.217224666050502], "val_accuracy": [0.09833333641290665, 0.4723333418369293, 0.6713333129882812, 0.6486666798591614, 0.6056666374206543, 0.5863333344459534, 0.6656666398048401, 0.2163333296775818]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 1, 2, 3, 3, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.40228572487831116, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(alpha)))", "other_info": {"loss": [2.978442263404817, 2.279100308407567, 2.268403724263042, 2.3034699368769735, 2.2910284614046534, 2.235116035868038], "accuracy": [0.20380398631095886, 0.16431118547916412, 0.15863162279129028, 0.10130762308835983, 0.17593449354171753, 0.16959451138973236], "val_loss": [1.648543460028512, 1.9697649819510323, 1.9750117574419295, 1.9720657893589564, 1.9796534946986608, 1.9881443977355957], "val_accuracy": [0.4180000126361847, 0.09833333641290665, 0.09666666388511658, 0.10333333164453506, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [66, 9, 76, 58]], "fitness": -0.18942856788635254, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.755850036240934, 4.106064696432246, 2.575798474188258, 2.497038017505227, 2.524869578657149, 2.4426709825903465], "accuracy": [0.2226918488740921, 0.10302469879388809, 0.10698718577623367, 0.10196803510189056, 0.09747721254825592, 0.10051512718200684], "val_loss": [2.542664187295096, 2.2423966952732632, 2.1235717364719937, 2.057647500719343, 2.1588951519557407, 2.1550139699663435], "val_accuracy": [0.10333333164453506, 0.10133333504199982, 0.09933333098888397, 0.10133333504199982, 0.10133333504199982, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 2, 5, 0, 2, 5, 9, 9, 8, 9], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10999999940395355, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.301527513189874, 2.3017314260409982, 2.302555839257422, 2.3025847335674854, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09087307006120682, 0.1026284471154213, 0.1006472036242485, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9725687844412667, 1.9735945974077498, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09200000017881393, 0.1120000034570694, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 3, 5, 3, 1, 3, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [0, 9, 76, 58]], "fitness": -0.10971428453922272, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3015401245281444, 2.301792300593001, 2.302564435646975, 2.3025849854957157, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09179764986038208, 0.10011887550354004, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9726779120309013, 1.9736125128609794, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08733333647251129, 0.11233333498239517, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [78, 83, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 1, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 3, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026585485390103, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 9, 3, 1, 0, 5, 3, 6, 2, 5, 6, 1, 1, 3, 4, 7, 3, 8, 0, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 3, 9, 2, 7, 7, 3, 5, 7, 2, 4, 6, 9], [3, 0, 3, 1, 1, 3, 4, 1, 2, 3, 5, 1, 0, 5, 0, 1, 2, 0, 5, 5, 0, 2, 3, 0, 3, 0, 0, 1, 2, 4, 2, 2, 1, 3, 2, 0, 0, 4], [98, 42, 20, 33, 49, 13, 40, 59, 38, 94, 1, 79, 18, 37], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, alpha)))))), tf.math.add(beta, alpha)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 2, 6, 1, 0, 5, 5, 6, 2, 5, 6, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 3, 9, 2, 7, 7, 3, 5, 7, 2, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13, 27, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [71, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3020378288701857, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 1, 5, 8, 2, 4, 3, 2, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 0, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 15, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), alpha)))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 8, 0, 8, 2, 4, 8, 3, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 3, 1, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [51, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))))))))))), tf.math.add(beta, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad))))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 8, 0, 8, 2, 4, 8, 3, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 3, 3, 4, 1, 2], [46, 83, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [20, 9, 76, 58]], "fitness": -0.042571429163217545, "mapping_values": [1, 3, 3, 2, 1, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.303058019828771, 2.3019432151763195, 2.3018302059349933, 2.302080995827744, 2.3015941222897136, 2.3009221107574613, 2.3035852504743324, 2.3026007898353615, 2.3033470913183263, 2.3004193861785898, 2.3023269168925307], "accuracy": [0.08532558381557465, 0.09087307006120682, 0.09787346422672272, 0.09259014576673508, 0.09351472556591034, 0.09708096832036972, 0.08770307898521423, 0.09232597798109055, 0.09219389408826828, 0.09853387624025345, 0.09166556596755981], "val_loss": [1.9711626597813197, 1.971137523651123, 1.9711127962384904, 1.9710886137826102, 1.9710651806422643, 1.9710426330566406, 1.971019881112235, 1.9709982872009277, 1.9709762164524622, 1.9709551674979073, 1.970935344696045], "val_accuracy": [0.03700000047683716, 0.03766666725277901, 0.038333334028720856, 0.03933333232998848, 0.03966666758060455, 0.041333332657814026, 0.041333332657814026, 0.04100000113248825, 0.04100000113248825, 0.04066666588187218, 0.04100000113248825]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 2, 5, 0, 2, 5, 9, 9, 8, 9], [2, 1, 2, 3, 3, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3030786313369465, 2.3019989807497727, 2.30192981690873, 2.302230617924767, 2.301771412436138, 2.301102022185632], "accuracy": [0.08558975160121918, 0.09100515395402908, 0.09813763201236725, 0.09113723784685135, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9, 6, 1, 5], [3, 1, 5, 3, 3, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 2, 26, 26, 18, 8, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(grad, grad)))))))))))))))))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.3030786313369465, 2.3019989807497727, 2.30192981690873, 2.302230617924767, 2.301771412436138, 2.301102022185632], "accuracy": [0.08558975160121918, 0.09100515395402908, 0.09813763201236725, 0.09113723784685135, 0.09232597798109055, 0.09800554811954498], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]