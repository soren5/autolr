[{"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [2, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [43, 11]], "fitness": -0.8197143077850342, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9822824362514355, 1.4911874924133073, 1.0642446601127888, 0.8884225561083142, 0.8051631853108424, 0.754361265741083, 0.7683915405257062, 0.7060293319155716, 0.7035773776824905, 0.6649626960623392, 0.6700526163121728, 0.6428179745393233, 0.6275916127024262, 0.5968048324154793, 0.5964416535601971, 0.5748793939242919, 0.5869351245267059, 0.5755116818461672, 0.5841804560243871, 0.5420579199761982, 0.544935647955723, 0.5371649764973206, 0.5192041764516305, 0.5059627130078508, 0.4906883544106887, 0.5127512557930746, 0.4860498966038298, 0.48490646104015267, 0.4871581932100496, 0.4660552134760745, 0.47011333931517435, 0.4559803706205217, 0.4611637916988181, 0.4355232040911397, 0.44823018081310073, 0.4694986557916423, 0.4213679957824408, 0.4275848652865861, 0.42339094907238245, 0.41105644772742733], "accuracy": [0.34341567754745483, 0.49465063214302063, 0.6061286330223083, 0.6604147553443909, 0.698718786239624, 0.7185312509536743, 0.7119271159172058, 0.7337207794189453, 0.7273808121681213, 0.743891179561615, 0.7445515990257263, 0.752740740776062, 0.7602694630622864, 0.7732135653495789, 0.7692511081695557, 0.780610203742981, 0.7751948237419128, 0.7807422876358032, 0.7693831920623779, 0.7950072884559631, 0.7926297783851624, 0.7917051911354065, 0.806630551815033, 0.8084797263145447, 0.8145555257797241, 0.8013472557067871, 0.8170651197433472, 0.8164047002792358, 0.8201030492782593, 0.8214238286018372, 0.8245938420295715, 0.829216718673706, 0.8251221776008606, 0.8354246616363525, 0.83119797706604, 0.8228767514228821, 0.8465195894241333, 0.8425571322441101, 0.8429533839225769, 0.843481719493866], "val_loss": [1.5971681049891882, 0.9066724096025739, 0.6805729695728847, 0.7263949768883842, 0.6552878958838326, 0.6258678095681327, 0.5868192570550101, 0.5493994951248169, 0.5393752029963902, 0.5753589698246547, 0.5334646020616803, 0.5257108552115304, 0.48938288007463726, 0.5168094124112811, 0.4857237679617746, 0.4975988694599697, 0.47707758631025043, 0.481012191091265, 0.5039538996560233, 0.47554266452789307, 0.43554346902029856, 0.4396651131766183, 0.4376963036400931, 0.42922340972082956, 0.43760388238089426, 0.43791225978306364, 0.41616307837622507, 0.40809684140341623, 0.42282540457589285, 0.40471160411834717, 0.4061280744416373, 0.40836098364421297, 0.3944069487707956, 0.41216449226651874, 0.37723792450768606, 0.39014376061303274, 0.3838201250348772, 0.39291393756866455, 0.38915352310453144, 0.37830980334963116], "val_accuracy": [0.39133334159851074, 0.6473333239555359, 0.7023333311080933, 0.6596666574478149, 0.703000009059906, 0.7089999914169312, 0.7289999723434448, 0.7519999742507935, 0.7576666474342346, 0.7319999933242798, 0.7559999823570251, 0.7613333463668823, 0.7866666913032532, 0.7599999904632568, 0.7743333578109741, 0.7713333368301392, 0.7913333177566528, 0.7900000214576721, 0.7716666460037231, 0.784333348274231, 0.8143333196640015, 0.8190000057220459, 0.8066666722297668, 0.8113333582878113, 0.8146666884422302, 0.8076666593551636, 0.8256666660308838, 0.8270000219345093, 0.8163333535194397, 0.8323333263397217, 0.8259999752044678, 0.8233333230018616, 0.8299999833106995, 0.8236666917800903, 0.8453333377838135, 0.8343333601951599, 0.8366666436195374, 0.824999988079071, 0.8299999833106995, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 5, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.8154285550117493, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.982192096268071, 1.489597753778724, 1.063679433730237, 0.8880936967351921, 0.8185076728835161, 0.7734556894071853, 0.7172483147536884, 0.7205447824387707, 0.7019722059087636, 0.6641822826624578, 0.6634736777280914, 0.6406389769703532, 0.6272038301346466, 0.597511440440727, 0.5995209672195627, 0.5731500640222189, 0.5842955052466865, 0.5696401418617388, 0.5776213693533748, 0.5432990145421913, 0.5385563961503181, 0.5377873329753495, 0.5220423507778604, 0.505956343443418, 0.49631091728343973, 0.5143760366604202, 0.4961369111750183, 0.4799900428100332, 0.4824037236379138, 0.4663311688615945, 0.46436265478627303, 0.45704684697515724, 0.46232883648519046, 0.435259218929844, 0.4430288199806226, 0.4632590948795331, 0.42388608325442556, 0.4263755159174305, 0.423615653367484, 0.4172888545784669], "accuracy": [0.34328359365463257, 0.49372607469558716, 0.6075815558433533, 0.6598864197731018, 0.6873596906661987, 0.7102100253105164, 0.7279091477394104, 0.7288337349891663, 0.7281733155250549, 0.7432307600975037, 0.7427024245262146, 0.7519482374191284, 0.7605336308479309, 0.7746664881706238, 0.7677981853485107, 0.7803460359573364, 0.774798572063446, 0.7810064554214478, 0.7730814814567566, 0.7921014428138733, 0.7971205711364746, 0.793950617313385, 0.8037247657775879, 0.8100647330284119, 0.8096684813499451, 0.8041210174560547, 0.809140145778656, 0.8177255392074585, 0.8198388814926147, 0.8240655064582825, 0.828292191028595, 0.8286884427070618, 0.8256505131721497, 0.8359529972076416, 0.8348963260650635, 0.8253863453865051, 0.8451988101005554, 0.8392550349235535, 0.8441421389579773, 0.8405758738517761], "val_loss": [1.5954649448394775, 0.9016298907143729, 0.6782149757657733, 0.712877903665815, 0.5890847955431256, 0.5789120708193097, 0.6242424079350063, 0.5938927786690849, 0.5482770545142037, 0.5513992479869297, 0.5258208853857858, 0.526963302067348, 0.4912529332297189, 0.5155257156917027, 0.48167361531938824, 0.5116200617381504, 0.47025915554591585, 0.459310667855399, 0.516269360269819, 0.46386051177978516, 0.43536502974373953, 0.4455521958214896, 0.4332747459411621, 0.42478102445602417, 0.4820302895137242, 0.43746767725263325, 0.41785889863967896, 0.40778848954609465, 0.4292770879609244, 0.40675521748406546, 0.40768791096551077, 0.4023362823895046, 0.39547665630068096, 0.40409556456974577, 0.37702204499925884, 0.3889832156045096, 0.387078447001321, 0.3879329136439732, 0.40015459060668945, 0.37383540187563213], "val_accuracy": [0.3916666805744171, 0.6496666669845581, 0.7049999833106995, 0.6706666946411133, 0.7356666922569275, 0.746999979019165, 0.7099999785423279, 0.7210000157356262, 0.7516666650772095, 0.7403333187103271, 0.7606666684150696, 0.7606666684150696, 0.7860000133514404, 0.7586666941642761, 0.7749999761581421, 0.765333354473114, 0.79666668176651, 0.8056666851043701, 0.7670000195503235, 0.7976666688919067, 0.8163333535194397, 0.8166666626930237, 0.8149999976158142, 0.8163333535194397, 0.7853333353996277, 0.8056666851043701, 0.82833331823349, 0.8256666660308838, 0.8103333115577698, 0.8266666531562805, 0.8256666660308838, 0.8333333134651184, 0.8276666402816772, 0.8330000042915344, 0.8476666808128357, 0.8353333473205566, 0.8296666741371155, 0.8256666660308838, 0.8263333439826965, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9823719182144839, 1.492448131453328, 1.0673192159658127, 0.8892150873269355, 0.802126722407615, 0.7789499449723621, 0.7129253326878178, 0.7214600090038318, 0.6952494647934011, 0.666978190776899, 0.6629522763789999, 0.6420562034427308, 0.6315886465282237, 0.5961223337723043, 0.5993668827650301, 0.5747830359817039, 0.5865052133393153, 0.5749672883773413, 0.59711496798653, 0.5426325829053331, 0.5408188415682154, 0.537243377916754, 0.5214447943274024, 0.5062063721271475, 0.49461614988766894, 0.5047545949024941, 0.5036523488880763, 0.47863583716466335, 0.4816553398421601, 0.4670258403107821, 0.467630457187672, 0.46208185458605266, 0.45955812244162725, 0.435647825716257, 0.4465050271174313, 0.464444351812726, 0.42569059269728365, 0.42464232604580154, 0.4249978086077983, 0.4159459839753975], "accuracy": [0.34328359365463257, 0.4931977391242981, 0.6042794585227966, 0.6637167930603027, 0.6997754573822021, 0.7091533541679382, 0.7265883088111877, 0.7309470176696777, 0.7309470176696777, 0.7430986762046814, 0.7440232634544373, 0.7518161535263062, 0.7589486241340637, 0.7729493975639343, 0.7677981853485107, 0.7790252566337585, 0.7732135653495789, 0.7810064554214478, 0.7663452625274658, 0.7928939461708069, 0.7967243194580078, 0.7924976944923401, 0.8050455451011658, 0.8107251524925232, 0.8117818236351013, 0.8086118102073669, 0.8099326491355896, 0.8206313848495483, 0.8211596608161926, 0.8219521641731262, 0.8278959393501282, 0.8267071843147278, 0.826310932636261, 0.8364813327789307, 0.8318583965301514, 0.8244617581367493, 0.8436138033866882, 0.8403117060661316, 0.8412362933158875, 0.8413683772087097], "val_loss": [1.6002559321267265, 0.8988307203565326, 0.6871126038687569, 0.7403225387845721, 0.6420508112226214, 0.5827850784574237, 0.653057473046439, 0.6034883601324899, 0.5529603617531913, 0.5806514705930438, 0.532517501286098, 0.5281738213130406, 0.49253341129847933, 0.5193076133728027, 0.4818415812083653, 0.49598404339381624, 0.4820894684110369, 0.48659643105098177, 0.5071342842919486, 0.4696581023080008, 0.434652464730399, 0.44385007449558805, 0.43594581740243094, 0.42483170543398174, 0.4544844797679356, 0.43732772554670063, 0.4207957216671535, 0.41020571334021433, 0.42520188433783396, 0.40938933406557354, 0.40797766617366243, 0.4030836139406477, 0.39910517420087543, 0.40278890303203035, 0.37629057679857525, 0.3885852949959891, 0.38854300124304636, 0.3947571005140032, 0.39603969880512785, 0.37733612741742817], "val_accuracy": [0.39233332872390747, 0.6510000228881836, 0.70333331823349, 0.6669999957084656, 0.7080000042915344, 0.7286666631698608, 0.6896666884422302, 0.7099999785423279, 0.7423333525657654, 0.718999981880188, 0.7566666603088379, 0.762666642665863, 0.7823333144187927, 0.7573333382606506, 0.7763333320617676, 0.7776666879653931, 0.7879999876022339, 0.7896666526794434, 0.7696666717529297, 0.7876666784286499, 0.8133333325386047, 0.8176666498184204, 0.8100000023841858, 0.8173333406448364, 0.8026666641235352, 0.8073333501815796, 0.8256666660308838, 0.824999988079071, 0.8149999976158142, 0.8303333520889282, 0.8240000009536743, 0.8323333263397217, 0.8293333053588867, 0.8346666693687439, 0.8453333377838135, 0.8376666903495789, 0.8306666612625122, 0.8263333439826965, 0.82833331823349, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.8054285645484924, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9822776191474865, 1.4920942410344478, 1.0681329498973111, 0.8798556677212789, 0.821164527746822, 0.7741752037078068, 0.7278600752692197, 0.6984296437850356, 0.713851546338993, 0.6612729026326225, 0.6591188297878245, 0.6451553337530862, 0.6275922199045709, 0.5952460210573057, 0.6007430075559917, 0.5726047574552673, 0.5836555703110494, 0.573841145655514, 0.5881331507335518, 0.5483549901003442, 0.5398534873315702, 0.5364331816953045, 0.5230796707462184, 0.504758244319095, 0.48902944446381574, 0.5160792735762616, 0.49764649331640526, 0.4789985541685807, 0.4854866403669587, 0.4662083196342424, 0.4697993156845701, 0.45522617054590225, 0.4583042388728518, 0.43668221205516244, 0.4438436644078246, 0.46456823973229944, 0.42130233518057936, 0.43179649781824936, 0.42175917940101354, 0.41409625798924377], "accuracy": [0.34341567754745483, 0.49293357133865356, 0.6044115424156189, 0.6668868064880371, 0.6892088055610657, 0.7113987803459167, 0.7218332886695862, 0.7346453666687012, 0.7259278893470764, 0.7474573850631714, 0.7478536367416382, 0.7503632307052612, 0.7586844563484192, 0.774270236492157, 0.7668735980987549, 0.7825914621353149, 0.7738739848136902, 0.7808743715286255, 0.7685906887054443, 0.7878747582435608, 0.7954035401344299, 0.7910447716712952, 0.8057059645652771, 0.8105930685997009, 0.8128384351730347, 0.7997622489929199, 0.8124422430992126, 0.8183859586715698, 0.8186501264572144, 0.8202351331710815, 0.8269713521003723, 0.8289526104927063, 0.8267071843147278, 0.8338396549224854, 0.8334434032440186, 0.8232730031013489, 0.8457271456718445, 0.8378021121025085, 0.8437458872795105, 0.839519202709198], "val_loss": [1.5972189222063338, 0.8951294762747628, 0.681975177356175, 0.7341381822313581, 0.6299377850123814, 0.5786583934511457, 0.59105270249503, 0.5638580322265625, 0.5404320444379535, 0.5695432594844273, 0.5237093142100743, 0.5342592682157244, 0.49108116967337473, 0.5109540905271258, 0.4794675282069615, 0.5042782170431954, 0.47867585931505474, 0.4855990069253104, 0.5140395334788731, 0.4673377275466919, 0.4359114340373448, 0.4443833827972412, 0.4356015920639038, 0.43024860109601704, 0.4538487877164568, 0.433594925062997, 0.4209057092666626, 0.4120916043009077, 0.4279200775282724, 0.4094658153397696, 0.4128184063094003, 0.4012468797819955, 0.3961730514253889, 0.40489691495895386, 0.37556667838777813, 0.38786680357796804, 0.3940503001213074, 0.38862987075533184, 0.39066100120544434, 0.3752070239612034], "val_accuracy": [0.39100000262260437, 0.6503333449363708, 0.7049999833106995, 0.6566666960716248, 0.7126666903495789, 0.7443333268165588, 0.7183333039283752, 0.737666666507721, 0.7563333511352539, 0.7393333315849304, 0.762333333492279, 0.7583333253860474, 0.7803333401679993, 0.7599999904632568, 0.7823333144187927, 0.7676666378974915, 0.7896666526794434, 0.7900000214576721, 0.768666684627533, 0.7923333048820496, 0.8133333325386047, 0.8186666369438171, 0.8116666674613953, 0.812333345413208, 0.8063333630561829, 0.8106666803359985, 0.8236666917800903, 0.8220000267028809, 0.8133333325386047, 0.8240000009536743, 0.8246666789054871, 0.8296666741371155, 0.8306666612625122, 0.8353333473205566, 0.846666693687439, 0.8373333215713501, 0.8263333439826965, 0.82833331823349, 0.82833331823349, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 1, 0], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 3, 0, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [3, 0, 3, 3, 1, 3, 4, 1], [42, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 11]], "fitness": -0.22714285552501678, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.507333597691619, 2.311845490425774, 2.2934246907191995, 2.28421288905851, 2.3038620768033, 2.3031544657021845, 2.302860438406444, 2.303065116678514], "accuracy": [0.14793290197849274, 0.1088363528251648, 0.12878087162971497, 0.11861048638820648, 0.09893012791872025, 0.09589222073554993, 0.09919429570436478, 0.08994849026203156], "val_loss": [1.974630560193743, 1.972968510219029, 1.7957261630467005, 1.9741528374808175, 1.9737467765808105, 1.9737263407026018, 1.9737075396946497, 1.973778315952846], "val_accuracy": [0.10233332961797714, 0.09799999743700027, 0.2473333328962326, 0.10000000149011612, 0.10133333504199982, 0.09666666388511658, 0.09833333641290665, 0.09733333438634872]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 1, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [9, 32, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [2, 0, 3, 3, 1, 3, 4, 1], [90, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [64, 11]], "fitness": -0.10999999940395355, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2797972933375390.5, 3.825133349840195e+20, 2.3596444770596887e+28, Infinity, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.1002509593963623, 0.10500594228506088, 0.09998679161071777, 0.09813763201236725, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.378452856611986e+16, 8.110675397376851e+22, 2.396143130990127e+30, NaN, NaN, NaN, NaN], "val_accuracy": [0.09866666793823242, 0.10499999672174454, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 2, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [4, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.10428571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.507375583924543, 2.305976268338521, 2.303654308977884, 2.3029366570252154, 2.3016537608818184, 3.72808330267837], "accuracy": [0.14753665030002594, 0.1332716941833496, 0.09760929644107819, 0.10315678268671036, 0.11174217611551285, 0.18570862710475922], "val_loss": [1.9746059009007044, 1.9748403004237585, 1.9736788613455636, 1.9732740265982491, 1.9681384222848075, 9.491853986467634], "val_accuracy": [0.10199999809265137, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027, 0.09666666388511658, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 1, 2, 2], [67, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [42.40401262891228, 490.0515270301175, 1947.5663274387878, 5274.04661663853, 10912.12347807939, 20200.887206837768], "accuracy": [0.09747721254825592, 0.10553427785634995, 0.10540219396352768, 0.09972262382507324, 0.09932637959718704, 0.09457138925790787], "val_loss": [118.62101091657367, 706.1192278180804, 2205.589773995536, 5057.939174107143, 9706.849330357143, 16590.823102678572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], [6, 9, 0, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 15, 61, 59], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 3, 3, 3, 1, 3, 4, 1], [90, 22, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 13, 6, 4, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.square(alpha))), alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0], [1, 0, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 11, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 1, 2, 2], [43, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [1.074465114158973e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.055871088057756424, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1], [6, 9, 0, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 6, 9, 3, 4, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [8, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [60, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 9, 0, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [25, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 0, 3, 3, 1, 3, 4, 1], [90, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [43, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [3, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [53, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 6, 9, 3, 4, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3029705931434634, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [98, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 9, 0, 5, 4, 5, 2, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 32, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 0, 3, 3, 1, 3, 4, 1], [90, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [43, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [5, 0, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.06428571790456772, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3006762205223916, 2.301443158674864, 2.300745778221732, 2.3003095085941143, 2.3009523073790206, 2.30098978900922, 2.300479771485969, 2.2998782938119677, 2.2987708313873556, 2.300353536421927, 2.29935939449597, 2.299602279416196, 2.300572660825571, 2.2999800974115674, 2.3011794460920405], "accuracy": [0.09245806187391281, 0.09694888442754745, 0.09734513610601425, 0.09694888442754745, 0.09813763201236725, 0.09509972482919693, 0.09509972482919693, 0.09813763201236725, 0.09787346422672272, 0.09840179979801178, 0.09774138033390045, 0.10051512718200684, 0.0956280529499054, 0.09602430462837219, 0.09179764986038208], "val_loss": [1.970726694379534, 1.9702629361833846, 1.9700929096766882, 1.9700275148664201, 1.9700285366603307, 1.969956602369036, 1.969742774963379, 1.9695604188101632, 1.9695540836879186, 1.9696387563432967, 1.9698004722595215, 1.9700793538774763, 1.9701925686427526, 1.9704668181283134, 1.9706124578203474], "val_accuracy": [0.04066666588187218, 0.046666666865348816, 0.052666667848825455, 0.05666666850447655, 0.05999999865889549, 0.06233333423733711, 0.06566666811704636, 0.07100000232458115, 0.0716666653752327, 0.0729999989271164, 0.07266666740179062, 0.07066666334867477, 0.0729999989271164, 0.07266666740179062, 0.0689999982714653]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1], [6, 2, 6, 5, 4, 5, 1, 7, 8, 6, 5, 4, 5, 0, 2, 2, 2, 1, 8, 4, 2, 0, 4, 4, 4, 2, 3, 8, 0, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 3, 1, 0, 1], [20, 80, 61, 49], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 1, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 50, 50, 30, 20, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.square(tf.math.negative(tf.math.add(alpha, alpha))))))), grad))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, grad)), grad)))), tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3009052743938194, 2.3023045550185013, 2.3018581335964363, 2.3017866317039593, 2.3028668679297954, 2.303055552506664], "accuracy": [0.09166556596755981, 0.0952318087220192, 0.09549596905708313, 0.08915598690509796, 0.09377889335155487, 0.09087307006120682], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 0, 3, 3, 1, 3, 4, 1], [6, 92, 56, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 8, 9, 3, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), grad), tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(sigma), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3009052743938194, 2.3023045550185013, 2.3018581335964363, 2.3017866317039593, 2.3028668679297954, 2.303055552506664], "accuracy": [0.09166556596755981, 0.0952318087220192, 0.09549596905708313, 0.08915598690509796, 0.09377889335155487, 0.09087307006120682], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]