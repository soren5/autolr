[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), grad))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9982710904637977, 1.6318878182614123, 1.0461801072594166, 0.913196247157136, 0.8180504153275833, 0.7803935084077173, 0.7236224242236715, 0.7289233997025274, 0.6801405971501528, 0.6363935793206645, 0.6560379621170421, 0.6320079705891845, 0.6063955352842029, 0.6160189911059857, 0.5820320047218691, 0.5844469837477304, 0.5663506982270139, 0.5460772405305574, 0.5261110902273455, 0.5325418522077355, 0.51906916866402, 0.49579959732272827, 0.5143078631964877, 0.48334937009592854, 0.4916807769776461, 0.48800734098419585, 0.4725263178655579, 0.46696579614965406, 0.4497212777127049, 0.4542348347028579, 0.4457886112545617, 0.4321896477445336, 0.42297245124941724, 0.4259689153579122, 0.41505933781388793, 0.422459136084039, 0.40742418627382476, 0.4189858388954292, 0.3915398116038381, 0.3890353493001782, 0.41040500364740057, 0.3823831626381998, 0.3922984238707583, 0.38694902707352347, 0.36030070182354756, 0.3740084651100354, 0.35466531493786285, 0.36506667420643985, 0.3593956478015858, 0.3445670595927686, 0.3447481876650286, 0.34642237888162225, 0.3286861395240696, 0.32919132691002195, 0.3354173555917051, 0.32383469084092986, 0.3392361005449087, 0.3104620708521441, 0.328184835166979, 0.3229292689998152], "accuracy": [0.3299432098865509, 0.4703473746776581, 0.6223748326301575, 0.6522256135940552, 0.6950204968452454, 0.7077004313468933, 0.724739134311676, 0.7230220437049866, 0.7450799345970154, 0.7621186375617981, 0.7474573850631714, 0.7625148296356201, 0.7693831920623779, 0.7609298825263977, 0.7825914621353149, 0.7745344042778015, 0.7836481332778931, 0.7940827012062073, 0.7968564033508301, 0.7997622489929199, 0.8035926818847656, 0.8171972036361694, 0.805177628993988, 0.8203672170639038, 0.8138951063156128, 0.8108572363853455, 0.8257825970649719, 0.8256505131721497, 0.8315942287445068, 0.8286884427070618, 0.8334434032440186, 0.8457271456718445, 0.8432175517082214, 0.8388587832450867, 0.8448025584220886, 0.8408400416374207, 0.8496896028518677, 0.8403117060661316, 0.852331280708313, 0.8541803956031799, 0.8436138033866882, 0.8577466607093811, 0.8520671129226685, 0.8552370667457581, 0.8660678863525391, 0.8561616539955139, 0.8688416481018066, 0.8625016212463379, 0.8661999702453613, 0.8747853636741638, 0.8705587387084961, 0.8717474341392517, 0.8800686597824097, 0.8787478804588318, 0.8741249442100525, 0.8809932470321655, 0.8749174475669861, 0.8857482671737671, 0.8746532797813416, 0.8770307898521423], "val_loss": [1.6927987507411413, 0.7748915808541434, 0.747259429522923, 0.6723634685788836, 0.6113979986735752, 0.5763434512274606, 0.58109598500388, 0.5805226223809379, 0.5646851914269584, 0.5726041112627301, 0.5352589743477958, 0.5165464367185321, 0.5203946658543178, 0.5029499530792236, 0.5331857545035226, 0.4856986999511719, 0.4683285100119455, 0.4636319705418178, 0.45995732716151644, 0.4415043762751988, 0.42904387201581684, 0.4320202214377267, 0.4374142714909145, 0.415821373462677, 0.41351020336151123, 0.4063171999795096, 0.431070796080998, 0.42028952496392386, 0.415448214326586, 0.41255491971969604, 0.38622045516967773, 0.3855106234550476, 0.38869504417691914, 0.39642265013286043, 0.37444232191358295, 0.38079709666115896, 0.38511093173708233, 0.3707004870687212, 0.40692547389439176, 0.37539154291152954, 0.35659088407244, 0.39472298111234394, 0.35053071805409025, 0.35657855442592074, 0.3690578511783055, 0.3515697036470686, 0.34763336181640625, 0.4183898057256426, 0.34178626537323, 0.34914363282067434, 0.3448417867933001, 0.34208009924207416, 0.3515270437513079, 0.35629179647990633, 0.3404227239745004, 0.3788286192076547, 0.3420933314732143, 0.3465983697346279, 0.3533826044627598, 0.36196247168949675], "val_accuracy": [0.3659999966621399, 0.6966666579246521, 0.6763333082199097, 0.7006666660308838, 0.7260000109672546, 0.7423333525657654, 0.7333333492279053, 0.7419999837875366, 0.7613333463668823, 0.7310000061988831, 0.7699999809265137, 0.7670000195503235, 0.762666642665863, 0.7710000276565552, 0.7429999709129333, 0.7816666960716248, 0.7900000214576721, 0.7916666865348816, 0.7889999747276306, 0.8119999766349792, 0.8086666464805603, 0.8096666932106018, 0.8096666932106018, 0.8203333616256714, 0.8243333101272583, 0.8286666870117188, 0.8019999861717224, 0.809333324432373, 0.8216666579246521, 0.8286666870117188, 0.8353333473205566, 0.8386666774749756, 0.828000009059906, 0.8253333568572998, 0.8399999737739563, 0.8346666693687439, 0.8349999785423279, 0.846666693687439, 0.8226666450500488, 0.840666651725769, 0.8489999771118164, 0.8176666498184204, 0.8560000061988831, 0.8486666679382324, 0.843999981880188, 0.847000002861023, 0.8573333621025085, 0.8209999799728394, 0.856333315372467, 0.859333336353302, 0.8516666889190674, 0.8600000143051147, 0.8519999980926514, 0.8566666841506958, 0.8616666793823242, 0.8450000286102295, 0.8600000143051147, 0.8550000190734863, 0.8473333120346069, 0.8566666841506958]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 0, 1, 4, 0, 2, 4, 9, 0, 0, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.negative(grad), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9982691531357055, 1.6313867048737931, 1.0474578317256258, 0.9193069358165505, 0.8108935964468086, 0.7513028179508049, 0.7095992063739123, 0.6986155276127841, 0.727532276183292, 0.6424057986269915, 0.6480732990246502, 0.6273789772378329, 0.6259932023123853, 0.6007964595150497, 0.57908022272242, 0.5750547934123286, 0.5739747018405333, 0.5406593073156012, 0.5291179493355036, 0.5322214299976519, 0.5232986779914257, 0.494273476793687, 0.5084190557716608, 0.4940266348091902, 0.5177519157727665, 0.47988522662509936, 0.4736205522867005, 0.47162094270989346, 0.45072692709434553, 0.4498267177034284, 0.4465260357825889], "accuracy": [0.3299432098865509, 0.47166821360588074, 0.6205257177352905, 0.6530181169509888, 0.6946242451667786, 0.7185312509536743, 0.7326641082763672, 0.7306828498840332, 0.7215691208839417, 0.7604015469551086, 0.750759482383728, 0.7658169269561768, 0.7592127919197083, 0.765949010848999, 0.7824593782424927, 0.7773081660270691, 0.7836481332778931, 0.7948752045631409, 0.7960638999938965, 0.7993659973144531, 0.7992339134216309, 0.8175934553146362, 0.8083476424217224, 0.8148196935653687, 0.8058380484580994, 0.8182538747787476, 0.8248580098152161, 0.8224804997444153, 0.8313300609588623, 0.8269713521003723, 0.8310658931732178], "val_loss": [1.692826236997332, 0.7740816729409354, 0.6878530468259539, 0.6404774699892316, 0.6501919882638114, 0.5543715953826904, 0.5707972390311105, 0.5845577205930438, 0.5573265893118722, 0.5461202689579555, 0.5487103462219238, 0.5250497204916817, 0.49436564104897635, 0.48276192801339285, 0.5426016875675747, 0.49185497420174734, 0.4726520947047642, 0.45450128827776226, 0.47627828802381245, 0.4447250706808908, 0.4311700974191938, 0.43238245589392527, 0.4438610247203282, 0.41140760694231304, 0.4153950980731419, 0.4013954145567758, 0.4363068001610892, 0.4164843644414629, 0.4061574339866638, 0.4089795095579965, 0.38603510175432476], "val_accuracy": [0.3656666576862335, 0.6963333487510681, 0.6963333487510681, 0.721666693687439, 0.7099999785423279, 0.7540000081062317, 0.7419999837875366, 0.7316666841506958, 0.762666642665863, 0.7453333139419556, 0.7606666684150696, 0.7599999904632568, 0.7806666493415833, 0.7856666445732117, 0.7369999885559082, 0.781333327293396, 0.7863333225250244, 0.793666660785675, 0.7726666927337646, 0.8069999814033508, 0.8053333163261414, 0.8056666851043701, 0.815666675567627, 0.8246666789054871, 0.8259999752044678, 0.8363333344459534, 0.8019999861717224, 0.812666654586792, 0.8246666789054871, 0.8303333520889282, 0.8326666951179504]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 2, 3, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.805142879486084, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.998271616489943, 1.631584242051225, 1.0442838961296173, 0.9187419986869713, 0.8130306671198254, 0.743192184217035, 0.821917425175353, 0.7059025251161563, 0.6601362418678096, 0.6454621519410709, 0.6376727380693991, 0.629141198755838, 0.6156265150286723, 0.5985476560501958, 0.5846447185234953, 0.5861033021561332, 0.576028199574384, 0.5464151212804117, 0.5370436649926508, 0.5198254269017456, 0.524763807833486, 0.4937501988548251, 0.5101464534471882, 0.48719964726426895, 0.4934233817103485, 0.48540225208569293, 0.47739053993192976, 0.46722289769877184, 0.44876576873289675], "accuracy": [0.3299432098865509, 0.4706115424633026, 0.6203936338424683, 0.6513010263442993, 0.6873596906661987, 0.7177387475967407, 0.6877558827400208, 0.7300224304199219, 0.7512878179550171, 0.759080708026886, 0.7534011602401733, 0.7664773464202881, 0.7643640041351318, 0.7630431652069092, 0.7823272943496704, 0.7741381525993347, 0.7807422876358032, 0.7926297783851624, 0.7955356240272522, 0.8053097128868103, 0.7996301651000977, 0.8175934553146362, 0.8087438941001892, 0.8185180425643921, 0.8148196935653687, 0.8153480291366577, 0.8235371708869934, 0.8247259259223938, 0.8341038227081299], "val_loss": [1.6927950722830636, 0.7748527356556484, 0.6997307198388236, 0.6600184610911778, 0.6322123834065029, 0.5556784357343402, 0.6060896430696759, 0.5587622097560337, 0.5520449876785278, 0.5282821825572422, 0.5549658196313041, 0.5170990909848895, 0.47692086015428814, 0.49419619355882916, 0.5627048015594482, 0.5124738216400146, 0.463164176259722, 0.4572069304330008, 0.4380429812840053, 0.43801476274217876, 0.43287116289138794, 0.4243470515523638, 0.4410677296774728, 0.4115473372595651, 0.4164522460528782, 0.4051916003227234, 0.42379965100969585, 0.4058917590550014, 0.4039787309510367], "val_accuracy": [0.3659999966621399, 0.6966666579246521, 0.6966666579246521, 0.7146666646003723, 0.7170000076293945, 0.7490000128746033, 0.7250000238418579, 0.7326666712760925, 0.7590000033378601, 0.7559999823570251, 0.765999972820282, 0.7556666731834412, 0.7860000133514404, 0.777999997138977, 0.7203333377838135, 0.7703333497047424, 0.796999990940094, 0.7996666431427002, 0.8053333163261414, 0.8130000233650208, 0.8033333420753479, 0.815666675567627, 0.8119999766349792, 0.8276666402816772, 0.8236666917800903, 0.8273333311080933, 0.8059999942779541, 0.8199999928474426, 0.8256666660308838]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 4, 1, 0, 2, 4, 9, 0, 2, 4, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8025714159011841, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.negative(alpha)), alpha), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9982717158126477, 1.6324412827604498, 1.0452837039844598, 0.9098941904914976, 0.8211217262505257, 0.7482951421543056, 0.7636518897617876, 0.7128715822016795, 0.6718522880323307, 0.6369297091184023, 0.658345555852921, 0.6304173408844499, 0.6182461016607353, 0.603938618183073, 0.5785705840047545, 0.5789868711889884, 0.5646425188178195, 0.5407291949936869, 0.5324067134174453, 0.5271796182067623, 0.5256534238981769, 0.4984660159327555, 0.5074216281465488, 0.48574568440869753, 0.49391715433446093, 0.4880567586354261, 0.4757086569213313, 0.46700514590641007, 0.45057345254231346, 0.4491705607193305, 0.449313536992934], "accuracy": [0.3299432098865509, 0.4706115424633026, 0.6232994198799133, 0.6523576974868774, 0.6907938122749329, 0.7149649858474731, 0.7079645991325378, 0.7283053994178772, 0.7417778372764587, 0.7625148296356201, 0.7481178045272827, 0.7621186375617981, 0.7621186375617981, 0.7627789974212646, 0.7833839654922485, 0.7763835787773132, 0.7862898111343384, 0.7968564033508301, 0.7943468689918518, 0.8009510040283203, 0.7979130744934082, 0.8144234418869019, 0.8086118102073669, 0.8195747137069702, 0.8153480291366577, 0.8107251524925232, 0.8236692547798157, 0.8240655064582825, 0.8319904804229736, 0.8302733898162842, 0.8308017253875732], "val_loss": [1.6928350244249617, 0.7743345669337681, 0.7210845095770699, 0.65704003402165, 0.6549159969602313, 0.5634206022535052, 0.6022871732711792, 0.5532926321029663, 0.5441860812050956, 0.5459073271070208, 0.5678233419145856, 0.5281504903520856, 0.4962137256349836, 0.48575176511492046, 0.5473345518112183, 0.4823156935828073, 0.4716852051871164, 0.44586736815316336, 0.47559685366494314, 0.4516293832233974, 0.43131695474897114, 0.43399866989680697, 0.4408353396824428, 0.41841842447008404, 0.41351291111537386, 0.4036544901984079, 0.4282275608607701, 0.41702752453940256, 0.4020049146243504, 0.4330472264971052, 0.38760668890816824], "val_accuracy": [0.3656666576862335, 0.6980000138282776, 0.6883333325386047, 0.7126666903495789, 0.703000009059906, 0.7476666569709778, 0.7303333282470703, 0.7519999742507935, 0.7730000019073486, 0.7446666955947876, 0.7476666569709778, 0.7620000243186951, 0.7756666541099548, 0.7820000052452087, 0.734666645526886, 0.7803333401679993, 0.7896666526794434, 0.8023333549499512, 0.7760000228881836, 0.8023333549499512, 0.8043333292007446, 0.8100000023841858, 0.8103333115577698, 0.8186666369438171, 0.8226666450500488, 0.8320000171661377, 0.8063333630561829, 0.8116666674613953, 0.8243333101272583, 0.8143333196640015, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 9, 0, 2, 2, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7797142863273621, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))), alpha))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9586396995804423, 1.4142996645748434, 1.0245258452838453, 0.8589633855254754, 0.8522384379833067, 0.771177499427488, 0.7447027601286909, 0.7155049956863614, 0.6877628869825209, 0.6535857940677481, 0.6629438577641774, 0.6339913031932402, 0.598792533525906, 0.5960968409499724, 0.583435278306658, 0.5760358790868876], "accuracy": [0.3423590064048767, 0.4998018741607666, 0.6210539937019348, 0.6803592443466187, 0.694360077381134, 0.709021270275116, 0.7224937081336975, 0.7280412316322327, 0.7374191284179688, 0.7549861073493958, 0.7471932172775269, 0.7621186375617981, 0.7771760821342468, 0.7765156626701355, 0.78113853931427, 0.7824593782424927], "val_loss": [1.4627763884408134, 0.8613837446485247, 0.6949073927743095, 0.6533679280962262, 0.6752409934997559, 0.6443226678030831, 0.5479596342359271, 0.604617885180882, 0.5516417707715716, 0.5566095284053257, 0.496019789150783, 0.5041312149592808, 0.5147550446646554, 0.4988645485469273, 0.48072348322187153, 0.5128375973020282], "val_accuracy": [0.3919999897480011, 0.628000020980835, 0.6933333277702332, 0.7056666612625122, 0.6949999928474426, 0.6866666674613953, 0.7446666955947876, 0.7246666550636292, 0.7573333382606506, 0.7329999804496765, 0.7839999794960022, 0.7713333368301392, 0.7553333044052124, 0.7673333287239075, 0.7823333144187927, 0.7586666941642761]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 3, 1, 2, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7734285593032837, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4491537470056115, 2.3052047609952244, 2.2828879700581224, 2.2994649171860715, 2.2846574321981623, 2.2700340692723953, 2.9967361864176376, 2.296924129437462, 2.1307144744473994, 1.7999985706946318, 1.91825138727404, 1.6799152151563022, 1.6138974452582426, 1.4832328495458447, 1.5086997740808148, 1.3928116163352793, 1.294012784328065, 1.237318668918461, 1.3277740010558936, 1.1503327323964967, 1.1172722701965905, 0.9935420107501388, 0.9570360147816047, 0.9158318293738626, 0.8610231755998834, 0.8196083624695806, 0.8286600895073467, 0.7604317225406608, 0.7707942770204808, 0.7447775159261923, 0.7076677080583831, 0.7399457174678914, 0.7292436339032964, 0.6867744603712546, 0.6552925372734644], "accuracy": [0.21238937973976135, 0.09747721254825592, 0.14198917150497437, 0.10368511080741882, 0.16312244534492493, 0.12878087162971497, 0.20921939611434937, 0.12296922504901886, 0.23761722445487976, 0.38066306710243225, 0.33522653579711914, 0.43811914324760437, 0.4515916109085083, 0.4991414546966553, 0.4803856909275055, 0.5291243195533752, 0.5692775249481201, 0.5717870593070984, 0.5403513312339783, 0.5857878923416138, 0.6071853041648865, 0.6485272645950317, 0.6641130447387695, 0.6736230254173279, 0.6897371411323547, 0.7028133869171143, 0.6993792057037354, 0.713908314704895, 0.7177387475967407, 0.7334566116333008, 0.7378153204917908, 0.7333245277404785, 0.7259278893470764, 0.7433628439903259, 0.7572315335273743], "val_loss": [1.9761248316083635, 1.9729655129568917, 1.9771676063537598, 1.9222546304975237, 1.957899570465088, 1.8399363926478796, 1.9847516332353865, 1.9191176550728934, 1.598951748439244, 1.4799357482365199, 1.410555635179792, 1.412456682750157, 1.06368316922869, 1.1454312801361084, 1.0261610916682653, 1.062826224735805, 1.0192571708134242, 0.9321878296988351, 0.9411891528538295, 0.7619631460734776, 0.7454336200441632, 0.7417964935302734, 0.7082916327885219, 0.6585441146578107, 0.6301333052771432, 0.6253059250967843, 0.6176283529826573, 0.6450005769729614, 0.5708447694778442, 0.5584451981953212, 0.5523204122270856, 0.5784917899540493, 0.5903068440301078, 0.5533002955572945, 0.5552787099565778], "val_accuracy": [0.10566666722297668, 0.10433333367109299, 0.09866666793823242, 0.1133333370089531, 0.13600000739097595, 0.1783333271741867, 0.10066666454076767, 0.17599999904632568, 0.3876666724681854, 0.4243333339691162, 0.437666654586792, 0.40299999713897705, 0.5889999866485596, 0.5256666541099548, 0.5950000286102295, 0.5473333597183228, 0.5553333163261414, 0.5896666646003723, 0.6336666941642761, 0.6713333129882812, 0.6866666674613953, 0.67166668176651, 0.6930000185966492, 0.6990000009536743, 0.7413333058357239, 0.7143333554267883, 0.7353333234786987, 0.7456666827201843, 0.7573333382606506, 0.7689999938011169, 0.762666642665863, 0.734000027179718, 0.7573333382606506, 0.7586666941642761, 0.753000020980835]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 0, 1, 4, 0, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 1, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [61, 42, 20, 7, 45, 13], [1], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7474285960197449, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 16, 11, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), alpha)), alpha), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, alpha)), tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.006011791815611, 1.505163336537061, 1.0462192546154576, 0.9246125946805746, 0.8300841137749124, 0.7843475277082811, 0.7374614685628204, 0.6884742043966536, 0.6948919505128897, 0.6787919362050163], "accuracy": [0.33786818385124207, 0.4876502454280853, 0.6168273687362671, 0.6498481035232544, 0.6914542317390442, 0.7029454708099365, 0.715889573097229, 0.7382115721702576, 0.7294940948486328, 0.7423061728477478], "val_loss": [1.5673545088086809, 0.9140323230198452, 0.6874473435538155, 0.6139780793871198, 0.5771837915693011, 0.591456515448434, 0.5523947988237653, 0.5931957960128784, 0.5809659276689801, 0.5906661578587123], "val_accuracy": [0.37566667795181274, 0.590666651725769, 0.6793333292007446, 0.7229999899864197, 0.7429999709129333, 0.7123333215713501, 0.7353333234786987, 0.7139999866485596, 0.722000002861023, 0.7200000286102295]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 3, 1, 2, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.30571427941322327, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.4462634764169864, 2.30521364489787, 2.233470310199341, 2.296160781388238, 2.2829596887663324, 2.148158153255051, 2.253963438306644, 2.200986093707041, 2.314862181466127, 2.3037173109693203], "accuracy": [0.21252146363258362, 0.0948355570435524, 0.1632545292377472, 0.14132875204086304, 0.148064985871315, 0.21912561357021332, 0.17619864642620087, 0.24593845009803772, 0.09840179979801178, 0.09840179979801178], "val_loss": [1.976008755820138, 1.9720250538417272, 1.891742501940046, 1.8890012332371302, 1.7831003325326102, 1.9532299041748047, 1.8617425646100725, 2.0130812100001743, 1.9745467730930872, 1.9738505227225167], "val_accuracy": [0.10566666722297668, 0.10000000149011612, 0.19499999284744263, 0.31833332777023315, 0.40833333134651184, 0.1509999930858612, 0.3656666576862335, 0.09833333641290665, 0.09666666388511658, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 1, 1, 0], [0, 0, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [49, 80, 61], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 3, 1, 2, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.1397142857313156, "mapping_values": [1, 5, 5, 3, 2, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.447045761092527, 2.3051807566121143, 2.2597057238986795, 2.244253302514829, 3.073426529369523, 2.303999639347859, 2.30292213827533, 2.3030017346848335, 2.3029702159124295], "accuracy": [0.21252146363258362, 0.09642054885625839, 0.1422533392906189, 0.16497160494327545, 0.14674416184425354, 0.09747721254825592, 0.09893012791872025, 0.09430722147226334, 0.09232597798109055], "val_loss": [1.9758720397949219, 1.9728569303240096, 1.6794795989990234, 1.769698006766183, 1.9753522191728865, 1.9739083562578474, 1.973644392830985, 1.9736229351588659, 1.9735901696341378], "val_accuracy": [0.10566666722297668, 0.10000000149011612, 0.27399998903274536, 0.3556666672229767, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10233332961797714, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], [5, 0, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 3, 2, 1, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))))), grad)), alpha), tf.math.add(beta, alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [121542.65302089247, 2.313914522408589, 2.3054405218259677, 2.3033483901658096, 2.3031453509702975, 2.3029523689072002], "accuracy": [0.09681680053472519, 0.08942015469074249, 0.09642054885625839, 0.09774138033390045, 0.09642054885625839, 0.09549596905708313], "val_loss": [1.9878349985395158, 1.9766845703125, 1.9739960261753626, 1.9735958235604423, 1.9736628532409668, 1.9736465045383997], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [6, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025351351971137, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [1, 0, 1, 4, 2, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 19, 12, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), grad))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(alpha)), grad)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.pow(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))))))))), grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08955223858356476, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 0, 5, 4, 0, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 1, 3, 1, 3, 4, 1, 2], [41, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [9, 0, 2, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [30, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [3.8970507066704263, 14.638615692170415, 2.7977137674256842, 3.414192224521962, 4.38647437338123, 4.953442774208199], "accuracy": [0.052569013088941574, 0.09694888442754745, 0.09602430462837219, 0.09576013684272766, 0.09734513610601425, 0.09813763201236725], "val_loss": [3.46084349496024, 2.2235498428344727, 2.6771934373038158, 3.251937048775809, 4.15667860848563, 3.9031970160348073], "val_accuracy": [0.10066666454076767, 0.09966666996479034, 0.06466666609048843, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [35, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 0], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 5, 9, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [3, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025351351971137, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 1, 3, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 0, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), grad), tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.301485470902918, 2.3046204462153423, 2.3068512108631105, 2.308676895259504, 2.3097195976430145, 2.3131289740343135, 2.315970385472977, 2.3228128465915225, 2.330178853338421, 2.3420181631207417, 2.365557671852903, 1080492.736097194, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.08968432247638702, 0.08268392831087112, 0.08598599582910538, 0.08360850811004639, 0.07885351777076721, 0.07528728246688843, 0.07806102186441422, 0.07172103971242905, 0.07740060985088348, 0.08149518072605133, 0.09126931428909302, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720403126307897, 1.9734505244663783, 1.9750589643205916, 1.9769163812909807, 1.9789906910487585, 1.9811884335109167, 1.9839410781860352, 1.9876412664140974, 1.9933332715715681, 2.0040673528398787, 2.035818440573556, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.02266666665673256, 0.023333333432674408, 0.02266666665673256, 0.025333333760499954, 0.03099999949336052, 0.0403333343565464, 0.058666665107011795, 0.07066666334867477, 0.09366666525602341, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 9, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 3, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.301485470902918, 2.304620320251227, 2.3068515526982285, 2.308675698600409, 2.3097166019959174, 2.3131247365384953, 2.315964906411857, 2.3228012674976855, 2.330161701371688, 2.341969991325466, 2.36540287190645, 372723.62781577057, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.08968432247638702, 0.08268392831087112, 0.08598599582910538, 0.08360850811004639, 0.07911768555641174, 0.07528728246688843, 0.07819310575723648, 0.07172103971242905, 0.07740060985088348, 0.0812310129404068, 0.09113723784685135, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9720403126307897, 1.97345004762922, 1.975057601928711, 1.9769156319754464, 1.9789834022521973, 1.9811833926609583, 1.983931200844901, 1.9876320702689034, 1.9933178084237235, 2.0040149688720703, 2.0355442592075894, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028999999165534973, 0.02266666665673256, 0.023333333432674408, 0.02266666665673256, 0.02500000037252903, 0.03099999949336052, 0.03999999910593033, 0.05833333358168602, 0.07066666334867477, 0.09366666525602341, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 9, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301153361632005, 2.30271976275325, 2.3031563841671505, 2.3026600807665076, 2.301720994858143, 2.3020889491389975], "accuracy": [0.10196803510189056, 0.08902391046285629, 0.08677849918603897, 0.09060890227556229, 0.09470347315073013, 0.09430722147226334], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]