[{"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8202857375144958, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9961680026653341, 1.6663215826247677, 1.1276038504232584, 1.0041058382432475, 0.8138108541307008, 0.7946377575767511, 0.7072149896587064, 0.7411932652778535, 0.6705639660948886, 0.6787333642691669, 0.680640086624144, 0.6182962868585563, 0.6178803104671584, 0.6033357402919668, 0.5865688459071123, 0.5642467481097084, 0.5526757159284739, 0.5620176955661943, 0.5605160546198875, 0.5246715794275969, 0.5143952352448603, 0.5017791450173233, 0.498938309801505, 0.5015903349211502, 0.4813679751742392, 0.4820191890587817, 0.4972013927658614, 0.47242464483957314, 0.4627685356236184, 0.47244947948759386], "accuracy": [0.34883105754852295, 0.42728832364082336, 0.5879011750221252, 0.6255448460578918, 0.6984546184539795, 0.7030775547027588, 0.728701651096344, 0.7182670831680298, 0.7473253011703491, 0.7383436560630798, 0.7415136694908142, 0.7627789974212646, 0.7585523724555969, 0.7714964747428894, 0.7728173136711121, 0.7849689722061157, 0.7932901978492737, 0.7866860628128052, 0.7865539789199829, 0.800818920135498, 0.8063663840293884, 0.8100647330284119, 0.8109893202781677, 0.8115176558494568, 0.8140271902084351, 0.8182538747787476, 0.8120459914207458, 0.8203672170639038, 0.8309338092803955, 0.8219521641731262], "val_loss": [1.6100658008030482, 0.8617370980126517, 0.9306756087711879, 0.6320226873670306, 0.5947031634194511, 0.5838526317051479, 0.7346274682453701, 0.5442712477275303, 0.5612365688596453, 0.5508408887045724, 0.5168483597891671, 0.496113692011152, 0.5251740728105817, 0.4965301070894514, 0.497530426297869, 0.4631003311702183, 0.4657819781984602, 0.5316122259412494, 0.4835238627025059, 0.43330992119652884, 0.46440328870500835, 0.42443521533693584, 0.44643441268375944, 0.431051892893655, 0.40574393953595844, 0.45882063252585276, 0.4229876824787685, 0.3976812107222421, 0.4056942803519113, 0.40516602993011475], "val_accuracy": [0.26100000739097595, 0.6273333430290222, 0.6153333187103271, 0.7336666584014893, 0.7306666374206543, 0.7413333058357239, 0.6526666879653931, 0.762333333492279, 0.7356666922569275, 0.7450000047683716, 0.7713333368301392, 0.7726666927337646, 0.7699999809265137, 0.768666684627533, 0.7756666541099548, 0.7919999957084656, 0.7983333468437195, 0.7586666941642761, 0.781333327293396, 0.8119999766349792, 0.7919999957084656, 0.8163333535194397, 0.7979999780654907, 0.8026666641235352, 0.8326666951179504, 0.7873333096504211, 0.8223333358764648, 0.8296666741371155, 0.828000009059906, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9961750539160676, 1.668324012435769, 1.1239616137768977, 1.0064412484221281, 0.8177474993897971, 0.7995250703888231, 0.7444731005509422, 0.7116400753313351, 0.6743741309512103, 0.6765619740982444, 0.6744180565512711, 0.6174475957515643, 0.607556092606843, 0.6077040598739203, 0.5893559745746502, 0.5649346993379212, 0.549946470724168, 0.5546136428777332, 0.5692996600395055, 0.5234322444149657, 0.51469696648227, 0.5136631915101979, 0.4982284205921291, 0.4988892793442831, 0.4804257551881505, 0.48144441468289595, 0.4914711492251506, 0.4710948734731565, 0.4636793844239461, 0.47339478630305376, 0.4584223850016518, 0.4357811724623165, 0.4436694422748819, 0.4207316868813157, 0.43129745317472207, 0.42439322179696815, 0.4199849614188845, 0.4140858615764207, 0.3943243304799183, 0.4260729276004988, 0.38747016196914746, 0.40337127763613134, 0.386764551772575, 0.3829968555996116, 0.3781052232142909], "accuracy": [0.34883105754852295, 0.4278166592121124, 0.5894861817359924, 0.6248844265937805, 0.6975300312042236, 0.6996433734893799, 0.7124554514884949, 0.7259278893470764, 0.7452120184898376, 0.7396644949913025, 0.7407211661338806, 0.7617223858833313, 0.7664773464202881, 0.767930269241333, 0.772288978099823, 0.7839123010635376, 0.7932901978492737, 0.7872143983840942, 0.7848368883132935, 0.7994980812072754, 0.8050455451011658, 0.8054417967796326, 0.8120459914207458, 0.8120459914207458, 0.8153480291366577, 0.8208954930305481, 0.8136309385299683, 0.8211596608161926, 0.8284242749214172, 0.8190463781356812, 0.8271034359931946, 0.8387266993522644, 0.8319904804229736, 0.842028796672821, 0.8338396549224854, 0.837537944316864, 0.842028796672821, 0.8459912538528442, 0.8537842035293579, 0.8399154543876648, 0.8549728989601135, 0.845859169960022, 0.8598600029945374, 0.856689989566803, 0.8573504090309143], "val_loss": [1.6103794915335519, 0.8644604682922363, 0.927173273903983, 0.6435834169387817, 0.6053201811654227, 0.5731225865227836, 0.6461830820356097, 0.5497629983084542, 0.5793037925447736, 0.5484135661806379, 0.5128677061625889, 0.4964014121464321, 0.5317617995398385, 0.4854867288044521, 0.5001468488148281, 0.4666763203484671, 0.46324735028403147, 0.5188991001674107, 0.4811300039291382, 0.4329774635178702, 0.4517521177019392, 0.4278011662619455, 0.44349237850734163, 0.4315534063747951, 0.40195020607539583, 0.467460036277771, 0.41958370379039217, 0.4035796437944685, 0.40134696449552265, 0.43315248829977854, 0.3815658518246242, 0.411426169531686, 0.38166814191000803, 0.39708434683935984, 0.424631518977029, 0.3810791202953884, 0.39025336503982544, 0.3697400178228106, 0.40899051087243216, 0.3635819298880441, 0.380270711013249, 0.3632505536079407, 0.36883407831192017, 0.3666816013199942, 0.3830014041491917], "val_accuracy": [0.2606666684150696, 0.6286666393280029, 0.6176666617393494, 0.7286666631698608, 0.7256666421890259, 0.7400000095367432, 0.6886666417121887, 0.7516666650772095, 0.7179999947547913, 0.7490000128746033, 0.7743333578109741, 0.7736666798591614, 0.7663333415985107, 0.7770000100135803, 0.7760000228881836, 0.7933333516120911, 0.8013333082199097, 0.7670000195503235, 0.7876666784286499, 0.8143333196640015, 0.7993333339691162, 0.8159999847412109, 0.8019999861717224, 0.8013333082199097, 0.8276666402816772, 0.7799999713897705, 0.824999988079071, 0.8223333358764648, 0.8306666612625122, 0.8056666851043701, 0.8396666646003723, 0.8236666917800903, 0.8396666646003723, 0.8403333425521851, 0.8166666626930237, 0.843999981880188, 0.8286666870117188, 0.8423333168029785, 0.82833331823349, 0.8500000238418579, 0.8286666870117188, 0.847000002861023, 0.8450000286102295, 0.8483333587646484, 0.8463333249092102]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8188571333885193, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9961779176787362, 1.6664943560444212, 1.1236863731157039, 1.0059755189055701, 0.8299203209825998, 0.7971983873345014, 0.7432859946219929, 0.7074408494816826, 0.6672169797456087, 0.6837661831197234, 0.6771704890409622, 0.6184260602782132, 0.5999922286234417, 0.6181688278169523, 0.5835056307687105, 0.563153729297387, 0.5515544289579607, 0.5900533077754931, 0.5588139015229119, 0.5272706601842048, 0.5124399699334692, 0.5121565920573499, 0.494936993353245, 0.4998017031802257, 0.47587645332952766, 0.4850577649864239, 0.49228946199160145, 0.47138064213637365, 0.46079718578508927, 0.46238544920274627, 0.4513334606490855, 0.4350091236347158, 0.44722226849400276, 0.4252797603339504, 0.43267913244781775, 0.4259529315508935, 0.42104160673881896, 0.42455048534171363, 0.39978040453071656, 0.4133543809682717, 0.38841716818616784, 0.40312202088018184, 0.389195419990659], "accuracy": [0.34883105754852295, 0.42728832364082336, 0.588297426700592, 0.6234315037727356, 0.6934354901313782, 0.7003037929534912, 0.71100252866745, 0.7300224304199219, 0.7494386434555054, 0.7368907928466797, 0.7401928305625916, 0.7631752490997314, 0.7695152759552002, 0.7629110813140869, 0.7775723338127136, 0.7852331399917603, 0.7901201844215393, 0.778232753276825, 0.7882710099220276, 0.8004226684570312, 0.8076872229576111, 0.8062343001365662, 0.8142913579940796, 0.8101968169212341, 0.8166688680648804, 0.819970965385437, 0.8137630224227905, 0.8211596608161926, 0.8308017253875732, 0.826310932636261, 0.829216718673706, 0.8362171649932861, 0.8300092220306396, 0.8409721255302429, 0.8354246616363525, 0.8374059200286865, 0.8413683772087097, 0.8391229510307312, 0.8491612672805786, 0.842028796672821, 0.857218325138092, 0.8467837572097778, 0.856689989566803], "val_loss": [1.6103008815220423, 0.8618992907660348, 0.9263105392456055, 0.6473125900541034, 0.6012735026223319, 0.5728108882904053, 0.6266532114573887, 0.5468084982463292, 0.5773934125900269, 0.5436615262712751, 0.5093602452959333, 0.49786860602242605, 0.5439082043511527, 0.4737583909715925, 0.49294601167951313, 0.4735784190041678, 0.4724071366446359, 0.4910821403775896, 0.49792541776384625, 0.43330900158200947, 0.45424892221178326, 0.42929978030068533, 0.44247378621782574, 0.42452043294906616, 0.40722616229738506, 0.47564923763275146, 0.42171588965824675, 0.3981388977595738, 0.4031676394598825, 0.4079424057688032, 0.3817866359438215, 0.41357626233782085, 0.38043988602502005, 0.4026441148349217, 0.4275377648217337, 0.38063118287495207, 0.40616934640066965, 0.36501477445874897, 0.40186056920460295, 0.3722850850650242, 0.3980957099369594, 0.36451726300375803, 0.3686288169452122], "val_accuracy": [0.2606666684150696, 0.6296666860580444, 0.621999979019165, 0.7283333539962769, 0.7336666584014893, 0.7413333058357239, 0.7083333134651184, 0.7609999775886536, 0.7260000109672546, 0.7459999918937683, 0.7713333368301392, 0.7730000019073486, 0.7543333172798157, 0.7833333611488342, 0.7773333191871643, 0.7820000052452087, 0.7910000085830688, 0.7829999923706055, 0.7730000019073486, 0.8143333196640015, 0.8033333420753479, 0.815666675567627, 0.8016666769981384, 0.8040000200271606, 0.8253333568572998, 0.7766666412353516, 0.8220000267028809, 0.8289999961853027, 0.8299999833106995, 0.8196666836738586, 0.8413333296775818, 0.8263333439826965, 0.8393333554267883, 0.8360000252723694, 0.8136666417121887, 0.8450000286102295, 0.8240000009536743, 0.8479999899864197, 0.8276666402816772, 0.8403333425521851, 0.8226666450500488, 0.8450000286102295, 0.8460000157356262]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 7, 1, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.996166910650928, 1.665989898781908, 1.1246453283674225, 1.001002896943695, 0.8162322500835021, 0.7962702266874881, 0.7463995779447111, 0.7091993484845361, 0.668267267837721, 0.6816430236323004, 0.6739456830023459, 0.6212781519780243, 0.6125841545879156, 0.6012954678454845, 0.5882340678213264, 0.5672882957670116, 0.5507408546859782, 0.5693460992219945, 0.5558216975916489, 0.5212412943709024, 0.5116623300902045, 0.5146356016779305, 0.4916386693310602, 0.5052011218824879, 0.4773556190931471, 0.4844347500388554, 0.48779323563646915, 0.46684719179489387, 0.46466404372013603, 0.46424560166778284, 0.45525169657158765, 0.4399321857200653, 0.4425715027609994, 0.42498018376784097, 0.43037243223445387, 0.42536686540138074, 0.41752308501212854, 0.41941625813939676, 0.4026733613710173, 0.4126195042534212, 0.38439042326749323, 0.4033122063273562, 0.3874071016208985], "accuracy": [0.34883105754852295, 0.4283449947834015, 0.5912032723426819, 0.6252806782722473, 0.7028133869171143, 0.7022850513458252, 0.7117950320243835, 0.7290979027748108, 0.7499669790267944, 0.735569953918457, 0.7453441023826599, 0.7633073329925537, 0.7625148296356201, 0.7701756954193115, 0.7729493975639343, 0.7823272943496704, 0.7921014428138733, 0.7866860628128052, 0.7862898111343384, 0.8009510040283203, 0.8096684813499451, 0.8041210174560547, 0.8183859586715698, 0.8059701323509216, 0.8182538747787476, 0.8195747137069702, 0.8169330358505249, 0.8234050869941711, 0.8265751004219055, 0.8256505131721497, 0.8302733898162842, 0.8337075710296631, 0.8296129703521729, 0.8385946154594421, 0.835160493850708, 0.8370096683502197, 0.8444063067436218, 0.842028796672821, 0.8466516733169556, 0.8449346423149109, 0.8580108284950256, 0.848368763923645, 0.8577466607093811], "val_loss": [1.61017073903765, 0.8609953267233712, 0.9292123998914447, 0.6354836566107613, 0.5980445998055595, 0.5804576533181327, 0.6357324293681553, 0.5492780719484601, 0.5705215079443795, 0.5359730890819004, 0.5133398260389056, 0.4941638708114624, 0.5283544404166085, 0.49085826533181326, 0.5117627552577427, 0.4699214696884155, 0.4585131917681013, 0.5111118384769985, 0.4839738607406616, 0.43268596274512156, 0.4615328141621181, 0.42774306876318796, 0.44595066138676237, 0.4320872255734035, 0.40969568490982056, 0.4365476795605251, 0.41748273372650146, 0.4002091373716082, 0.4036176119531904, 0.41164698771068026, 0.3852218985557556, 0.41045678513390677, 0.37856597559792654, 0.3974255238260542, 0.43519637414387297, 0.38338336774281095, 0.39115531955446514, 0.36556820358548847, 0.39215982811791555, 0.3585692473820278, 0.3805221744946071, 0.36004848991121563, 0.36812261172703337], "val_accuracy": [0.26100000739097595, 0.6296666860580444, 0.6113333106040955, 0.731333315372467, 0.7369999885559082, 0.7360000014305115, 0.7023333311080933, 0.7566666603088379, 0.7293333411216736, 0.75, 0.7726666927337646, 0.7726666927337646, 0.7736666798591614, 0.7716666460037231, 0.7733333110809326, 0.7896666526794434, 0.8053333163261414, 0.7666666507720947, 0.7823333144187927, 0.8130000233650208, 0.8003333210945129, 0.8166666626930237, 0.8016666769981384, 0.7996666431427002, 0.8220000267028809, 0.8023333549499512, 0.8230000138282776, 0.8303333520889282, 0.8303333520889282, 0.8206666707992554, 0.8370000123977661, 0.828000009059906, 0.8396666646003723, 0.840666651725769, 0.8083333373069763, 0.8423333168029785, 0.8299999833106995, 0.8496666550636292, 0.8376666903495789, 0.8493333458900452, 0.831333339214325, 0.8476666808128357, 0.8450000286102295]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [2, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 3, 2, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7931428551673889, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))), grad)))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9553563497983202, 1.3068838273812877, 1.1280377222609606, 0.8734464371649975, 0.8098380655865108, 0.8064657013177903, 0.7599440992484712, 0.7007105147849615, 0.6943900021800056, 0.655573699224296, 0.6425923748243723, 0.6439895514783103, 0.5991437211327659, 0.6124447440631858, 0.5879263589332101, 0.5824479210047658, 0.5580994844546864, 0.5360444568923247], "accuracy": [0.3483027219772339, 0.5445780158042908, 0.5840708017349243, 0.6770572066307068, 0.6964733600616455, 0.6940959095954895, 0.7123233675956726, 0.7293620109558105, 0.7372870445251465, 0.7483819723129272, 0.7547219395637512, 0.7568352818489075, 0.7662131786346436, 0.7655527591705322, 0.7779685854911804, 0.7816668748855591, 0.7928939461708069, 0.8014793395996094], "val_loss": [1.4060750007629395, 0.7581180334091187, 0.7459772995540074, 0.7568366697856358, 0.6695599215371268, 0.7077226298195975, 0.5821721724101475, 0.5434721878596714, 0.549970098904201, 0.5028007200786045, 0.5498226710728237, 0.5013868979045323, 0.4907658100128174, 0.5085836819240025, 0.5053799833570208, 0.4867488997323172, 0.467253531728472, 0.49370958123888287], "val_accuracy": [0.4740000069141388, 0.6516666412353516, 0.671999990940094, 0.6506666541099548, 0.6990000009536743, 0.6786666512489319, 0.7206666469573975, 0.7553333044052124, 0.746999979019165, 0.7706666588783264, 0.7536666393280029, 0.7753333449363708, 0.7929999828338623, 0.7716666460037231, 0.762666642665863, 0.7763333320617676, 0.7873333096504211, 0.765333354473114]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [27, 9, 76, 58]], "fitness": -0.771142840385437, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2924690307359716, 2.2715762879917447, 2.2489603086626997, 2.221327668813399, 2.1868056796246105, 2.140565092222581, 2.0834178336937947, 2.0086698823711417, 1.9187279746139116, 1.8257921106701025, 1.7168341316110534, 1.6083385956647955, 1.5129776447046985, 1.423794494643896, 1.3512273811629545, 1.302072199092266, 1.245460577833654, 1.2064034560447545, 1.1731745219422747, 1.1380683471812958, 1.1107068164331912, 1.0768419285460453, 1.0555976377958791, 1.02880876232935, 1.0150225499538839, 0.9960333498603459, 0.9780550184597538, 0.9687377517218004, 0.9424213800117277, 0.9325169170726292, 0.9282024099275404, 0.9161549000345783, 0.9069548891819132, 0.8971253172391757, 0.8790358879295055, 0.8688637609211618, 0.8629957640711122, 0.8580694758125252, 0.8424020597349304, 0.8407502494956115, 0.8469036446507612, 0.8325877257893035, 0.8286915700653871, 0.8187515880170043, 0.8040932556263696, 0.8097306419010916, 0.8009621073871855, 0.806398373915456, 0.7933366929677027, 0.7865902950435881, 0.7758370005396363, 0.7827644906637927, 0.7721312189413934, 0.7663634856851613, 0.7732428454326176, 0.7652489866295259, 0.7625950351918394, 0.7613638359652283, 0.7435417371954444, 0.7487546951779285, 0.7440548791011184, 0.7470172705856281, 0.7362374100529554, 0.7395876524092861, 0.7353700397115704, 0.7347098563750658, 0.7249639187081458, 0.7317997284569147, 0.7180612771864722, 0.719433024157591, 0.7181540629048436, 0.7102013820229489, 0.7139103646606518, 0.7199325006257872, 0.7145168526911733, 0.7000185318784219, 0.6996782749966073, 0.699915499900389, 0.7022330213405548, 0.6972649445733405, 0.6906192588091306, 0.6953147793679016, 0.6926285454295079, 0.6834798239997161, 0.6820396783723177, 0.6793221364545942, 0.6784644956287061, 0.6779796794546972, 0.6760639750080464, 0.6681512637995553, 0.6720054254965176, 0.6675965101601441, 0.6621513554858116, 0.6683430563913848, 0.6667658833071163, 0.6642110970561625, 0.6643586808097456, 0.6573148078654563, 0.6550336842917338], "accuracy": [0.11147800832986832, 0.17131158709526062, 0.22044643759727478, 0.26878878474235535, 0.3152819871902466, 0.3463214933872223, 0.38105931878089905, 0.40826839208602905, 0.43626996874809265, 0.45489367842674255, 0.46929070353507996, 0.5019152164459229, 0.5160480737686157, 0.5378417372703552, 0.5555408596992493, 0.5612204670906067, 0.5778629183769226, 0.5872408151626587, 0.6001849174499512, 0.6015057563781738, 0.6102232336997986, 0.6300356388092041, 0.6322810649871826, 0.6432439684867859, 0.6419231295585632, 0.6458855867385864, 0.654999315738678, 0.6590939164161682, 0.6650376319885254, 0.6631884574890137, 0.6719059348106384, 0.6789063811302185, 0.678642213344574, 0.6800950765609741, 0.6864351034164429, 0.6864351034164429, 0.6893408894538879, 0.6929071545600891, 0.6996433734893799, 0.700700044631958, 0.6959450244903564, 0.7065116763114929, 0.7003037929534912, 0.6970016956329346, 0.7082287669181824, 0.7082287669181824, 0.7135120630264282, 0.7066437602043152, 0.7131158113479614, 0.7169462442398071, 0.7177387475967407, 0.7132478952407837, 0.7202483415603638, 0.720380425453186, 0.7162858247756958, 0.7211728692054749, 0.7215691208839417, 0.7202483415603638, 0.7269845604896545, 0.7333245277404785, 0.7279091477394104, 0.7224937081336975, 0.7296261787414551, 0.7277770638465881, 0.7329282760620117, 0.7323999404907227, 0.7366266250610352, 0.7316074371337891, 0.7343811988830566, 0.7314753532409668, 0.7358341217041016, 0.7382115721702576, 0.7432307600975037, 0.7380794882774353, 0.7388719916343689, 0.7396644949913025, 0.7404569983482361, 0.7417778372764587, 0.741909921169281, 0.7396644949913025, 0.7498348951339722, 0.7441553473472595, 0.7473253011703491, 0.7515519857406616, 0.7470611333847046, 0.7457403540611267, 0.7486461400985718, 0.7537974119186401, 0.7559106945991516, 0.7547219395637512, 0.7578919529914856, 0.7548540234565735, 0.7565711140632629, 0.7560427784919739, 0.7611940503120422, 0.7563069462776184, 0.7512878179550171, 0.757099449634552, 0.7592127919197083], "val_loss": [1.95111540385655, 1.9303442410060339, 1.9066925048828125, 1.8771955626351493, 1.8391506331307548, 1.790165969303676, 1.7267650876726424, 1.6479214600154333, 1.5531214305332728, 1.448873656136649, 1.3412586961473738, 1.2358405249459403, 1.1420526163918632, 1.0626343658992223, 0.9974380901881627, 0.9448428494589669, 0.8999618121555873, 0.8635326453617641, 0.8326943261282784, 0.8068410158157349, 0.7842272690364293, 0.7642240353993007, 0.745196921484811, 0.7296178340911865, 0.7178890534809658, 0.7062050444739205, 0.6942109550748553, 0.684318082673209, 0.6747671365737915, 0.6664135796683175, 0.6595943314688546, 0.6526356424604144, 0.6460773944854736, 0.6393318005970546, 0.6336560760225568, 0.6266705649239677, 0.6219378709793091, 0.6174606255122593, 0.6126596076147897, 0.6085937704358783, 0.6046422890254429, 0.600823027747018, 0.5977970021111625, 0.5939392021724156, 0.5912817886897496, 0.5869363035474505, 0.5836900132043021, 0.581470148903983, 0.5793243476322719, 0.5755296094076974, 0.572455644607544, 0.5690164566040039, 0.5661391530718122, 0.5614794152123588, 0.5602564811706543, 0.560453074319022, 0.5574550798961094, 0.5551789488111224, 0.5527827569416591, 0.5503531864711216, 0.5481300013405936, 0.5470911605017525, 0.5454824481691632, 0.5425125360488892, 0.5413339478628976, 0.538555451801845, 0.537585939679827, 0.5351084130150932, 0.5346677814211164, 0.5326031616755894, 0.5335197619029454, 0.5303924764905658, 0.5290946619851249, 0.5263068505695888, 0.5258679219654628, 0.5241584948131016, 0.5222409623009818, 0.5215777839933123, 0.5198035410472325, 0.5188781193324498, 0.5162619522639683, 0.5162997245788574, 0.5143014873777118, 0.5127023458480835, 0.512617996760777, 0.5104815108435494, 0.510087149483817, 0.5089591230664935, 0.5072498491832188, 0.5057574169976371, 0.5058802366256714, 0.5049338511058262, 0.5023048945835659, 0.502197265625, 0.5015202590397426, 0.5013139247894287, 0.4995420660291399, 0.49777809211186, 0.49746906757354736], "val_accuracy": [0.20600000023841858, 0.32899999618530273, 0.3776666522026062, 0.42500001192092896, 0.44966667890548706, 0.4793333411216736, 0.5116666555404663, 0.531000018119812, 0.5433333516120911, 0.5536666512489319, 0.5633333325386047, 0.5830000042915344, 0.6203333139419556, 0.6460000276565552, 0.6526666879653931, 0.6646666526794434, 0.6740000247955322, 0.6803333163261414, 0.6890000104904175, 0.690666675567627, 0.6996666789054871, 0.6986666917800903, 0.7080000042915344, 0.7086666822433472, 0.7123333215713501, 0.7153333425521851, 0.7213333249092102, 0.7213333249092102, 0.7196666598320007, 0.721666693687439, 0.7283333539962769, 0.7303333282470703, 0.7306666374206543, 0.7326666712760925, 0.7323333621025085, 0.7393333315849304, 0.7390000224113464, 0.7379999756813049, 0.7443333268165588, 0.7386666536331177, 0.7436666488647461, 0.7419999837875366, 0.7450000047683716, 0.7440000176429749, 0.7490000128746033, 0.7459999918937683, 0.7506666779518127, 0.7450000047683716, 0.75, 0.750333309173584, 0.7513333559036255, 0.7513333559036255, 0.753000020980835, 0.7543333172798157, 0.7553333044052124, 0.7553333044052124, 0.7556666731834412, 0.7553333044052124, 0.7546666860580444, 0.7566666603088379, 0.7573333382606506, 0.7599999904632568, 0.7586666941642761, 0.7583333253860474, 0.7599999904632568, 0.7613333463668823, 0.7596666812896729, 0.7643333077430725, 0.762666642665863, 0.762666642665863, 0.7649999856948853, 0.7603333592414856, 0.7663333415985107, 0.7643333077430725, 0.765999972820282, 0.7670000195503235, 0.7673333287239075, 0.7649999856948853, 0.765333354473114, 0.7676666378974915, 0.7696666717529297, 0.7716666460037231, 0.7713333368301392, 0.7730000019073486, 0.7733333110809326, 0.7693333625793457, 0.7713333368301392, 0.7706666588783264, 0.7716666460037231, 0.7743333578109741, 0.7730000019073486, 0.777999997138977, 0.7739999890327454, 0.778333306312561, 0.7749999761581421, 0.7746666669845581, 0.7756666541099548, 0.7773333191871643, 0.7756666541099548]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [27, 9, 76, 58]], "fitness": -0.767714262008667, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2924690172263205, 2.2715762879917447, 2.2489603086626997, 2.2213275743403122, 2.1868055132260142, 2.1405650473163744, 2.0834129980573755, 2.0086635822601733, 1.9187160199108282, 1.8257810508475847, 1.716821937056549, 1.6083336557615797, 1.5129793896068593, 1.4237975306152557, 1.351231335034822, 1.3020717649569427, 1.2454686628403902, 1.2064025452297282, 1.17316308173962, 1.1380416396870006, 1.1106978077158527, 1.0768281264375026, 1.055559972919383, 1.0287863147524858, 1.0150202470306928, 0.9960096545459383, 0.97800858348919, 0.9687145549733609, 0.9424789051227975, 0.9324938364552312, 0.9282189221540226, 0.9161567919053705, 0.9069152376230099, 0.8971199347689136, 0.8790264762135985, 0.8688381919692678, 0.862957681914866, 0.8580155565265998, 0.8423523704027219, 0.8407002149272541, 0.8468700894873612, 0.8325796197308147, 0.8286592220003579, 0.818732715829205, 0.8040610191261827, 0.8097794050585245, 0.8009895228155537, 0.8063659759292734, 0.7932542187898953, 0.7866397007439729, 0.7758850151868056, 0.7826684684391901, 0.7721276432295454, 0.766448114857052, 0.7732403052796336, 0.7652230772832287, 0.7626650561793228, 0.7613817908980859, 0.7435789191412683, 0.7487715111038924, 0.7440696532432477, 0.7470274529263737, 0.7362602301686904, 0.7395986006984526, 0.7353244696499854, 0.7346964249238047, 0.7249649418910354, 0.7318125127281699, 0.7180503431784873, 0.719511404383562, 0.7181976151630123, 0.7101975235059167, 0.7138499615765865, 0.7199687538696806, 0.7144954941213217, 0.7000782183132719, 0.6996297172394096, 0.6999572618069697, 0.7020533113998586, 0.6972927278405435, 0.6906189108253895, 0.6953304171987323, 0.6927346654099528, 0.6835326621828771, 0.6819664126594447, 0.6792664647165338, 0.6784920184965918, 0.6779874646038568, 0.6760308990829955], "accuracy": [0.11147800832986832, 0.17131158709526062, 0.22044643759727478, 0.26878878474235535, 0.3152819871902466, 0.3463214933872223, 0.38105931878089905, 0.40826839208602905, 0.4364020526409149, 0.45489367842674255, 0.46929070353507996, 0.5019152164459229, 0.5160480737686157, 0.5378417372703552, 0.555408775806427, 0.5612204670906067, 0.5775987505912781, 0.5871087312698364, 0.6003170013427734, 0.6017699241638184, 0.6100911498069763, 0.6299035549163818, 0.6325452327728271, 0.6435081362724304, 0.6413947939872742, 0.6465460062026978, 0.654999315738678, 0.6586976647377014, 0.6655659675598145, 0.6637167930603027, 0.6717738509178162, 0.6787742972373962, 0.6782459616661072, 0.6807554960250854, 0.6863030195236206, 0.6864351034164429, 0.6894729733467102, 0.6927750706672668, 0.6989829540252686, 0.700700044631958, 0.6959450244903564, 0.7063795924186707, 0.700700044631958, 0.69673752784729, 0.7080966830253601, 0.7082287669181824, 0.713379979133606, 0.7074362635612488, 0.7135120630264282, 0.7164179086685181, 0.7177387475967407, 0.7125874757766724, 0.7201162576675415, 0.7197200059890747, 0.715889573097229, 0.7207766771316528, 0.7211728692054749, 0.720380425453186, 0.7271166443824768, 0.7334566116333008, 0.7280412316322327, 0.7224937081336975, 0.7294940948486328, 0.7281733155250549, 0.7327961921691895, 0.7321357727050781, 0.7363624572753906, 0.7317395210266113, 0.735041618347168, 0.7312111854553223, 0.7359662055969238, 0.7390040755271912, 0.7434949278831482, 0.7388719916343689, 0.7391361594200134, 0.7388719916343689, 0.7413815855979919, 0.7423061728477478, 0.7425703406333923, 0.7403249144554138, 0.7486461400985718, 0.7441553473472595, 0.7474573850631714, 0.7512878179550171, 0.7475894689559937, 0.7452120184898376, 0.7490423917770386, 0.7537974119186401, 0.7563069462776184], "val_loss": [1.95111540385655, 1.9303442410060339, 1.9066925048828125, 1.8771957669939314, 1.8391507012503487, 1.7901623589651925, 1.7267598424639021, 1.6479103565216064, 1.553112200328282, 1.448871408190046, 1.3412555285862513, 1.235856396811349, 1.1420532294682093, 1.0626306193215507, 0.9974243640899658, 0.9448158059801374, 0.8999274458203997, 0.8635060276303973, 0.8326777049473354, 0.8068195411137172, 0.7842162847518921, 0.7642187220709664, 0.7452067136764526, 0.7296587739671979, 0.7178875207901001, 0.7062097617558071, 0.6942107847758702, 0.6843152386801583, 0.6747443505695888, 0.6664465836116246, 0.6595989465713501, 0.6526318277631488, 0.6460751465388707, 0.6393029519489833, 0.6336802755083356, 0.6266976254326957, 0.6219380242483956, 0.6174687147140503, 0.6126970563616071, 0.6085769278662545, 0.604635374886649, 0.6008238111223493, 0.5977268389293126, 0.5938557726996285, 0.5912103142057147, 0.5869085959025792, 0.5837244306291852, 0.5813689402171544, 0.579227226121085, 0.5755771057946342, 0.5723696436200824, 0.5689685685294015, 0.5661294630595616, 0.5614254815237862, 0.5602423122950962, 0.5604959045137677, 0.5574995449611119, 0.555141636303493, 0.5527687413351876, 0.550320931843349, 0.5480449369975499, 0.5469943795885358, 0.5454354797090802, 0.5424429518835885, 0.5412470953805106, 0.5386207955224174, 0.5376275777816772, 0.5350581748144967, 0.5346243040902274, 0.5325815847941807, 0.533414329801287, 0.5303812878472465, 0.5290898425238473, 0.5262163877487183, 0.5257802179881504, 0.5241451944623675, 0.5222934654780796, 0.5215244463511876, 0.5198097229003906, 0.5188931397029332, 0.5162167378834316, 0.5164167881011963, 0.5143672057560512, 0.5128154414040702, 0.5126620531082153, 0.5105090652193341, 0.5101413897105626, 0.5089936597006661, 0.507297158241272], "val_accuracy": [0.20600000023841858, 0.32899999618530273, 0.3776666522026062, 0.42500001192092896, 0.44966667890548706, 0.4793333411216736, 0.5116666555404663, 0.531000018119812, 0.5433333516120911, 0.5536666512489319, 0.5633333325386047, 0.5830000042915344, 0.6203333139419556, 0.6463333368301392, 0.6516666412353516, 0.6646666526794434, 0.6743333339691162, 0.6803333163261414, 0.6890000104904175, 0.6909999847412109, 0.6996666789054871, 0.6986666917800903, 0.7076666951179504, 0.7073333263397217, 0.7126666903495789, 0.7153333425521851, 0.7213333249092102, 0.721666693687439, 0.7196666598320007, 0.7213333249092102, 0.7283333539962769, 0.7296666502952576, 0.7306666374206543, 0.7326666712760925, 0.7316666841506958, 0.7390000224113464, 0.7383333444595337, 0.737666666507721, 0.7443333268165588, 0.7386666536331177, 0.7433333396911621, 0.7423333525657654, 0.7450000047683716, 0.7443333268165588, 0.7493333220481873, 0.7463333606719971, 0.750333309173584, 0.7446666955947876, 0.7506666779518127, 0.750333309173584, 0.7516666650772095, 0.7509999871253967, 0.753000020980835, 0.7540000081062317, 0.7553333044052124, 0.7556666731834412, 0.7556666731834412, 0.7556666731834412, 0.7543333172798157, 0.7570000290870667, 0.7576666474342346, 0.7596666812896729, 0.7586666941642761, 0.7586666941642761, 0.7599999904632568, 0.7613333463668823, 0.7609999775886536, 0.7643333077430725, 0.7630000114440918, 0.7630000114440918, 0.7649999856948853, 0.7606666684150696, 0.7670000195503235, 0.7643333077430725, 0.765999972820282, 0.7673333287239075, 0.7680000066757202, 0.765666663646698, 0.765333354473114, 0.7676666378974915, 0.7696666717529297, 0.7716666460037231, 0.7713333368301392, 0.7753333449363708, 0.7723333239555359, 0.7693333625793457, 0.7720000147819519, 0.7699999809265137, 0.7720000147819519]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 4, 2, 4, 8, 2, 2, 3, 2, 0, 3, 2, 6, 8, 5, 1, 0, 5, 9, 6, 2, 0, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 2, 3, 3, 2, 1, 3, 3, 3, 0, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 43, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [70, 9, 76, 58]], "fitness": -0.3985714316368103, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 24, 15, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), grad)), beta)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.square(tf.math.add(beta, grad))))))), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))), grad)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6841180863365945, 2.3032811732261314, 2.3123377463789567, 2.302545332496098, 2.2292922916445104, 2.237244872274715, 2.253335854380815, 2.304015365652735, 2.3032255188789916, 2.3026024373830065], "accuracy": [0.18953903019428253, 0.14014001190662384, 0.10051512718200684, 0.10381719470024109, 0.1974640041589737, 0.19019944965839386, 0.1582353711128235, 0.09959053993225098, 0.10077928751707077, 0.10077928751707077], "val_loss": [1.9778214863368444, 2.0041943958827426, 1.97383451461792, 1.9695375306265694, 1.8471946716308594, 1.9026359149387904, 1.9739514078412737, 1.973818574632917, 1.9735838345118932, 1.9723164694649833], "val_accuracy": [0.14499999582767487, 0.109333336353302, 0.10233332961797714, 0.14433333277702332, 0.31033334136009216, 0.22066666185855865, 0.10566666722297668, 0.09666666388511658, 0.09833333641290665, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 6, 2, 4, 8, 2, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [99, 9, 76, 58]], "fitness": -0.14257143437862396, "mapping_values": [1, 2, 2, 1, 1, 0, 20, 20, 13, 7, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(grad)))), beta)))), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7891503038533596, 2.296869670836177, 2.6481446533974027, 2.3088656879135834, 2.3033556176088488, 2.2618433962156743, 2.3054153838917846], "accuracy": [0.18253862857818604, 0.12851670384407043, 0.17699114978313446, 0.09325055778026581, 0.1018359512090683, 0.1372341811656952, 0.09906221181154251], "val_loss": [1.977745532989502, 1.8654820578438895, 1.9812695639474052, 1.974320547921317, 1.973111697605678, 1.9765286445617676, 1.9738353320530482], "val_accuracy": [0.10233332961797714, 0.13433332741260529, 0.09799999743700027, 0.10566666722297668, 0.09833333641290665, 0.09666666388511658, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 6, 3, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.12514285743236542, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7892516784821644, 2.3007214657933783, 2.314363121655733, 2.3051919460359613, 2.3031958921505806, 2.302983774784266, 2.3032171702923447, 2.3029479308450194, 2.3027135823554272], "accuracy": [0.18240654468536377, 0.12455421686172485, 0.15612204372882843, 0.09681680053472519, 0.09879804402589798, 0.0956280529499054, 0.09708096832036972, 0.1022322028875351, 0.1014397069811821], "val_loss": [1.9781386511666434, 1.9233640262058802, 1.9759086200169154, 1.9737301553998674, 1.9735297475542342, 1.9735054288591658, 1.9734866278512138, 1.9735323360988073, 1.9733967099870955], "val_accuracy": [0.10233332961797714, 0.10266666859388351, 0.09799999743700027, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [65, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 1, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06987188011407852, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 4, 2, 5, 8, 4, 0, 0, 5, 3, 3, 2, 6, 5, 9, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 3, 1, 1, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 43, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 0, 2, 9, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, grad))))))), grad)), alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [29904834.537497595, 6140789423.693567, 20715440576.22824, 41255005669.15229, 68973937095.53189, 103886161648.6826], "accuracy": [0.09959053993225098, 0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [308158765.71428573, 12214520685.714285, 27535734491.42857, 49000768658.28571, 76616510902.85715, 110389589723.42857], "val_accuracy": [0.10566666722297668, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [79, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 1, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 6, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 6, 2, 1, 1, 1, 1, 0, 1, 9, 5, 4, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.768999830522709e+28, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13261127471923828, 0.10249637067317963, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09466666728258133, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 4, 2, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 81, 20, 7, 45, 13], [1], [1, 1, 1], [9], [2, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3121207743556416, 2.403447406891236, 2.6795903248573416, 3.1866171813486686, 3.958221788813236, 4.96119856415581, 6.256506349558308], "accuracy": [0.09245806187391281, 0.09708096832036972, 0.09589222073554993, 0.09893012791872025, 0.09576013684272766, 0.09800554811954498, 0.1026284471154213], "val_loss": [1.9869770322527205, 2.066084589276995, 2.253718989236014, 2.5913193566458568, 3.1030571120125905, 3.791754722595215, 4.648372513907296], "val_accuracy": [0.09433333575725555, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3009527065907927, 2.300781454408268, 2.300716524032192, 2.2999410206977764, 2.30099237854801, 2.2997849367990972, 2.3000713901245176, 2.2988568261126012, 2.2992789847361745, 2.3001685588744967, 2.3004150452032506, 2.2998420564552986, 2.299736713106606, 2.300131974329235, 2.3006315914678566, 2.300810667816926, 2.3011334576642652, 2.2998530964542137], "accuracy": [0.08955223858356476, 0.09047681838274002, 0.09430722147226334, 0.09734513610601425, 0.09377889335155487, 0.0956280529499054, 0.09959053993225098, 0.09985470771789551, 0.09694888442754745, 0.09708096832036972, 0.09457138925790787, 0.09985470771789551, 0.10038304328918457, 0.0944393053650856, 0.09259014576673508, 0.09206181764602661, 0.09642054885625839, 0.09893012791872025], "val_loss": [1.9703756741115026, 1.9698805127825056, 1.9695361001150948, 1.9693522453308105, 1.9693893023899622, 1.9695756094796317, 1.9695543561662947, 1.9694265638078963, 1.9694197518484933, 1.9693644387381417, 1.969388144356864, 1.9695388248988561, 1.9697536059788294, 1.9701202937534876, 1.9704392978123255, 1.9705961772373743, 1.9707634108407157, 1.9709465844290597], "val_accuracy": [0.04100000113248825, 0.05066666752099991, 0.05766666680574417, 0.061000000685453415, 0.06400000303983688, 0.06499999761581421, 0.0716666653752327, 0.07699999958276749, 0.0793333351612091, 0.07966666668653488, 0.08133333176374435, 0.08133333176374435, 0.08366666734218597, 0.07833333313465118, 0.07599999755620956, 0.07599999755620956, 0.07433333247900009, 0.07366666942834854]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3013908841338817, 2.3020595938317636, 2.302553866029557, 2.3022617945786337, 2.303800718234184, 2.302019229575769], "accuracy": [0.08875974267721176, 0.08915598690509796, 0.09140139818191528, 0.0882314071059227, 0.08691058307886124, 0.09232597798109055], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 0, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03285714238882065, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.301922982505221, 2.3040335335200566, 2.3066364585794337, 2.308707578984297, 2.313579070679878, 2.3140955986269334], "accuracy": [0.0878351628780365, 0.08558975160121918, 0.08334434032440186, 0.08057060092687607, 0.07647603005170822, 0.08175934851169586], "val_loss": [1.972287927355085, 1.973710605076381, 1.9754763330732072, 1.9774821145193917, 1.9797930717468262, 1.9821081842694963], "val_accuracy": [0.027000000700354576, 0.021666666492819786, 0.021666666492819786, 0.01899999938905239, 0.017999999225139618, 0.025333333760499954]}}]