[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.831428587436676, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1306110885495664, 2.058667584590436, 1.5634513628434008, 1.0884686119253169, 0.9014697456561406, 0.7522474224808949, 0.711012498057986, 0.6764529431815696, 0.6575149624591112, 0.6136532170881827, 0.6176850596722547, 0.5739691780306613, 0.5675000889331846, 0.5501973914306524, 0.5314051288623757, 0.5257253107448626, 0.5068034919899185, 0.5119795468127203, 0.47984241482730017, 0.4743958787281342, 0.4541155520549556, 0.4634933625316544, 0.46090843344975485, 0.44728800659922247, 0.4234307569842439, 0.4453248571033223, 0.42670516508949147, 0.417038244263308, 0.41712883444683285, 0.3972056121275709, 0.3998153277746265, 0.40669381364603335, 0.38498534528869977, 0.371939304155712, 0.3588298498804795, 0.37017701293231475, 0.36706659016733895, 0.3630207422276876, 0.3613686951089135, 0.3425196368208399, 0.33818812155610206, 0.33959036267208403, 0.3538565454174735, 0.35338653388465513, 0.3196734107480687, 0.3109466754969762, 0.3354583976881584, 0.30780610862566793, 0.30263526611922675], "accuracy": [0.27882710099220276, 0.3457931578159332, 0.4496103525161743, 0.6022982597351074, 0.6655659675598145, 0.7135120630264282, 0.7304186820983887, 0.7441553473472595, 0.7485140562057495, 0.7655527591705322, 0.7600052952766418, 0.7800818681716919, 0.7857614755630493, 0.7886672616004944, 0.7964601516723633, 0.7984414100646973, 0.8049134612083435, 0.8049134612083435, 0.8161405324935913, 0.817461371421814, 0.8260467648506165, 0.8228767514228821, 0.8274996876716614, 0.8321225643157959, 0.837537944316864, 0.8304054737091064, 0.8412362933158875, 0.8403117060661316, 0.8444063067436218, 0.8450667262077332, 0.8515387773513794, 0.843481719493866, 0.8568220734596252, 0.8570862412452698, 0.869502067565918, 0.8628978729248047, 0.8598600029945374, 0.8642187118530273, 0.8627657890319824, 0.8742570281028748, 0.8710870146751404, 0.8689737319946289, 0.8651432991027832, 0.8663320541381836, 0.8831065893173218, 0.8816536664962769, 0.8734645247459412, 0.8842953443527222, 0.889578640460968], "val_loss": [1.8709245409284319, 1.2899746213640486, 1.0300230639321464, 0.8373181819915771, 0.6115142277308873, 0.5795040471213204, 0.5229944501604352, 0.5386852025985718, 0.527776837348938, 0.4893556833267212, 0.4755585193634033, 0.4770130770547049, 0.4851213012422834, 0.4455142617225647, 0.5123765638896397, 0.4369307500975473, 0.4392825535365513, 0.43951079675129484, 0.4348472016198294, 0.42194641487939016, 0.4004386493137905, 0.4152902364730835, 0.44058728218078613, 0.388504113469805, 0.3882765940257481, 0.3802131414413452, 0.3911039573805673, 0.39818382263183594, 0.36281325987407137, 0.3657820224761963, 0.3926027076584952, 0.39370170661381315, 0.41143072502953665, 0.3564381003379822, 0.38659052337918964, 0.3863293102809361, 0.35003758328301565, 0.3896609033857073, 0.3770009790148054, 0.3462413549423218, 0.37958963428224834, 0.3581212503569467, 0.3813754064696176, 0.35242692061832975, 0.35843669516699656, 0.3739072595323835, 0.3577692338398525, 0.34961836678641184, 0.35008637394223896], "val_accuracy": [0.3423333466053009, 0.5563333630561829, 0.5419999957084656, 0.6616666913032532, 0.7136666774749756, 0.7286666631698608, 0.7606666684150696, 0.753000020980835, 0.7613333463668823, 0.777999997138977, 0.7866666913032532, 0.7876666784286499, 0.7929999828338623, 0.8083333373069763, 0.7836666703224182, 0.8109999895095825, 0.8109999895095825, 0.8040000200271606, 0.8166666626930237, 0.8190000057220459, 0.8226666450500488, 0.8176666498184204, 0.7983333468437195, 0.8379999995231628, 0.8389999866485596, 0.8353333473205566, 0.8386666774749756, 0.8330000042915344, 0.8543333411216736, 0.843999981880188, 0.8306666612625122, 0.8326666951179504, 0.831333339214325, 0.8553333282470703, 0.8386666774749756, 0.8309999704360962, 0.8573333621025085, 0.82833331823349, 0.8379999995231628, 0.8583333492279053, 0.8326666951179504, 0.8619999885559082, 0.8443333506584167, 0.8633333444595337, 0.8543333411216736, 0.8456666469573975, 0.8493333458900452, 0.8526666760444641, 0.8519999980926514]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8288571238517761, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 12, 11, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.130291653473017, 1.9102643259512262, 1.5339005984303942, 1.3140549108793456, 0.9264641559796326, 0.7903965399989897, 0.7437457539275999, 0.6920239958213918, 0.680930347238565, 0.6364495811791798, 0.6156659463865567, 0.604936410509726, 0.585254957907078, 0.5664718218168421, 0.533255364034847, 0.5439568257933327, 0.5285634975100489, 0.5187492165441416, 0.49747026416178725, 0.4856134045905032, 0.47177036625991614, 0.46995830733888516, 0.46738396039208746, 0.4608056596351763, 0.4383118091250266], "accuracy": [0.27882710099220276, 0.41104212403297424, 0.47351735830307007, 0.5548804402351379, 0.6600185036659241, 0.7008321285247803, 0.7189275026321411, 0.7358341217041016, 0.7446836829185486, 0.7582882046699524, 0.7617223858833313, 0.7651565074920654, 0.7755910754203796, 0.7821952104568481, 0.8009510040283203, 0.798309326171875, 0.7959318161010742, 0.807158887386322, 0.8086118102073669, 0.816008448600769, 0.8241975903511047, 0.8244617581367493, 0.8264430165290833, 0.8248580098152161, 0.8360850811004639], "val_loss": [1.8627076830182756, 1.0253562246050154, 1.1588352748325892, 0.8908226490020752, 0.6398890699659076, 0.5921155725206647, 0.5605911527361188, 0.5758228472300938, 0.5918465512139457, 0.5424251896994454, 0.48936353410993305, 0.4887093646185739, 0.4928346020834787, 0.4468052216938564, 0.4679853745869228, 0.4723069497517177, 0.4328046270779201, 0.45126913275037495, 0.4346050024032593, 0.405278171811785, 0.3956903985568455, 0.41895621163504465, 0.4469418525695801, 0.4073330249105181, 0.39360886812210083], "val_accuracy": [0.35499998927116394, 0.6056666374206543, 0.5789999961853027, 0.628000020980835, 0.7036666870117188, 0.7350000143051147, 0.722000002861023, 0.7303333282470703, 0.734000027179718, 0.7403333187103271, 0.7736666798591614, 0.784333348274231, 0.7683333158493042, 0.8036666512489319, 0.7983333468437195, 0.7749999761581421, 0.8100000023841858, 0.7979999780654907, 0.8183333277702332, 0.8309999704360962, 0.8306666612625122, 0.8106666803359985, 0.7903333306312561, 0.8213333487510681, 0.8299999833106995]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1], [1, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8154285550117493, "mapping_values": [1, 6, 6, 5, 1, 1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.13040762252465, 1.925122375359798, 1.609996819744934, 1.0590015845827188, 0.8351430405856848, 0.8035910246457564, 0.7275586933539198, 0.6910431634449231, 0.6650521781277332, 0.6264627732699652, 0.6207097587946336, 0.579136474879505, 0.5812419337005096, 0.5549260793329309, 0.5445388932001983, 0.5451238326243185, 0.5043218365285249, 0.5194754848831664, 0.46711795782888604, 0.4774302176992419, 0.48595916172296394, 0.46466565779281754, 0.4895571229393614, 0.4548643103735149, 0.43200969297683406, 0.422507362134421, 0.4312526902990602, 0.42582424870099156, 0.4150752672358999, 0.41356933305859017, 0.38844568433621146, 0.41107090651052125, 0.3801035224611985, 0.38717128271676166, 0.36899838972998616, 0.3783494301239702, 0.35784727898665614, 0.3574984901223153, 0.3719506831319341, 0.3406107838891359, 0.3393182481922383, 0.3403533712362081, 0.3106117392567249, 0.3673274968837498, 0.32677717351201757, 0.323594349395991, 0.33501730760279713, 0.313429463253738, 0.3037915983692593], "accuracy": [0.27882710099220276, 0.40430590510368347, 0.46704530715942383, 0.6070532202720642, 0.6897371411323547, 0.6972658634185791, 0.7294940948486328, 0.7363624572753906, 0.7514199018478394, 0.7625148296356201, 0.7584202885627747, 0.778761088848114, 0.7775723338127136, 0.7906485199928284, 0.7964601516723633, 0.7898560166358948, 0.8113855719566345, 0.8021397590637207, 0.8245938420295715, 0.8195747137069702, 0.821820080280304, 0.82683926820755, 0.8168009519577026, 0.8290846943855286, 0.8350284099578857, 0.8413683772087097, 0.8392550349235535, 0.8329150676727295, 0.8449346423149109, 0.844010055065155, 0.8543124794960022, 0.8449346423149109, 0.8589354157447815, 0.8553691506385803, 0.8664641380310059, 0.8568220734596252, 0.8648791313171387, 0.8647470474243164, 0.8610487580299377, 0.8796724081039429, 0.8714832663536072, 0.8701624870300293, 0.884691596031189, 0.8594637513160706, 0.878879964351654, 0.8772949576377869, 0.8750495314598083, 0.8828424215316772, 0.8883898854255676], "val_loss": [1.8634982790265764, 1.1080952031271798, 0.9076783657073975, 0.7745775324957711, 0.6615768330437797, 0.5849270990916661, 0.5326918193272182, 0.541285514831543, 0.5328132425035749, 0.5169786044529506, 0.4765676259994507, 0.4587298631668091, 0.4725907700402396, 0.4516374724251883, 0.502484815461295, 0.4243850111961365, 0.459382380758013, 0.4497873272214617, 0.44846081733703613, 0.41189868109566824, 0.40076268570763723, 0.45703601837158203, 0.4472084215709141, 0.40982063327516827, 0.39985733372824533, 0.4102611882346017, 0.39164877789361136, 0.38432858671460834, 0.3701607074056353, 0.38583110911505564, 0.39854444776262554, 0.39698243141174316, 0.4198925069400242, 0.3575984409877232, 0.36939518792288645, 0.3834424614906311, 0.3567942806652614, 0.3718122584479196, 0.3664490580558777, 0.35579121112823486, 0.36108033997671946, 0.3518832325935364, 0.39151850768498014, 0.3562906043870108, 0.34614098923546927, 0.38818648883274626, 0.3554899607385908, 0.36037703922816683, 0.35067962748663767], "val_accuracy": [0.3556666672229767, 0.5806666612625122, 0.6016666889190674, 0.6516666412353516, 0.6853333115577698, 0.7453333139419556, 0.7576666474342346, 0.7519999742507935, 0.7633333206176758, 0.765999972820282, 0.7839999794960022, 0.8029999732971191, 0.7986666560173035, 0.7990000247955322, 0.7886666655540466, 0.8190000057220459, 0.800000011920929, 0.796999990940094, 0.8013333082199097, 0.8133333325386047, 0.8226666450500488, 0.7940000295639038, 0.7886666655540466, 0.8236666917800903, 0.8243333101272583, 0.812333345413208, 0.8349999785423279, 0.8306666612625122, 0.8433333039283752, 0.8330000042915344, 0.8330000042915344, 0.8303333520889282, 0.8246666789054871, 0.8526666760444641, 0.8523333072662354, 0.8353333473205566, 0.8546666502952576, 0.8416666388511658, 0.8489999771118164, 0.8579999804496765, 0.8486666679382324, 0.8523333072662354, 0.8346666693687439, 0.8583333492279053, 0.8579999804496765, 0.8256666660308838, 0.8473333120346069, 0.846666693687439, 0.8553333282470703]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.025258222717131, 1.3375617017079622, 1.0574908191344332, 0.8904667326944569, 0.8249442697106698, 0.7974361245579582, 0.7396973837494236, 0.7195414590199453, 0.6959662695429218, 0.6590824751034546, 0.6589102970689373, 0.6278596665440077, 0.6407439036612435, 0.6117624360666992, 0.6059682398203924, 0.587879876104155, 0.5952829317236621, 0.5760806665491702, 0.5531149827383764, 0.5521021483754123, 0.5471787051502047, 0.5389533803219242, 0.5407282705745362, 0.5282640363703692, 0.5083277310913801, 0.5187773207206736, 0.5006215615657342, 0.4967012348199927, 0.48747506775104643, 0.4774598807486183, 0.4764917776797505, 0.4688403960846324, 0.46573882307028175, 0.45571295635779896, 0.4479604898041045, 0.44795684508360323, 0.4348499137869349, 0.44744186389715507, 0.43287874335673315, 0.42898040875278803, 0.4384830698022564, 0.40906973684846515, 0.41064045975126723, 0.43707446034999176, 0.3967736731619804, 0.40932231943494907, 0.4050415266286018, 0.3983900782383664, 0.39637859237507395], "accuracy": [0.33403778076171875, 0.535860538482666, 0.6236956715583801, 0.6745476126670837, 0.6896050572395325, 0.7088891863822937, 0.7230220437049866, 0.7280412316322327, 0.7446836829185486, 0.7503632307052612, 0.7433628439903259, 0.7609298825263977, 0.7532690763473511, 0.765949010848999, 0.7701756954193115, 0.7773081660270691, 0.7728173136711121, 0.7794214487075806, 0.7890635132789612, 0.7902522683143616, 0.7943468689918518, 0.7938185334205627, 0.7954035401344299, 0.8017435073852539, 0.8086118102073669, 0.8014793395996094, 0.8086118102073669, 0.806630551815033, 0.8173292875289917, 0.8182538747787476, 0.824329674243927, 0.8241975903511047, 0.8216879963874817, 0.822348415851593, 0.834632158279419, 0.8329150676727295, 0.8360850811004639, 0.8277638554573059, 0.8405758738517761, 0.8356888294219971, 0.8372738361358643, 0.8470479249954224, 0.8492933511734009, 0.8333113193511963, 0.8515387773513794, 0.845859169960022, 0.8508783578872681, 0.8525954484939575, 0.8545766472816467], "val_loss": [1.1550709520067488, 0.8376039436885289, 0.73271301814488, 0.6610552242824009, 0.6018590245928083, 0.5904100452150617, 0.575359753199986, 0.5634582553591047, 0.5532260962894985, 0.5205174173627581, 0.5185135773250035, 0.5099923099790301, 0.517905558858599, 0.49247842175619944, 0.5278734820229667, 0.4665100063596453, 0.4822319575718471, 0.47507796968732563, 0.4894628013883318, 0.4554619789123535, 0.4537509168897356, 0.4328352298055376, 0.4531585659299578, 0.4414842980248587, 0.4396517106464931, 0.44062905652182444, 0.4248306155204773, 0.42635951723371235, 0.4159737229347229, 0.408946122441973, 0.41393535477774485, 0.45187292780194965, 0.3960046172142029, 0.3907046743801662, 0.39413745062691824, 0.3982734595026289, 0.3831846458571298, 0.39259748799460276, 0.4030951602118356, 0.39157930442265104, 0.4000351514135088, 0.37271739755358013, 0.41348648922783987, 0.36895488841193064, 0.38078869240624563, 0.3865005544253758, 0.3688546930040632, 0.3789174386433193, 0.3618936112948826], "val_accuracy": [0.4676666557788849, 0.6673333048820496, 0.6980000138282776, 0.7166666388511658, 0.7369999885559082, 0.7393333315849304, 0.7419999837875366, 0.7493333220481873, 0.753000020980835, 0.7580000162124634, 0.7639999985694885, 0.7680000066757202, 0.7676666378974915, 0.7803333401679993, 0.7699999809265137, 0.7919999957084656, 0.7876666784286499, 0.7873333096504211, 0.7913333177566528, 0.8019999861717224, 0.7923333048820496, 0.8113333582878113, 0.7919999957084656, 0.8076666593551636, 0.8153333067893982, 0.8103333115577698, 0.8190000057220459, 0.8109999895095825, 0.8253333568572998, 0.828000009059906, 0.8289999961853027, 0.8036666512489319, 0.8303333520889282, 0.8330000042915344, 0.8330000042915344, 0.8323333263397217, 0.8416666388511658, 0.8306666612625122, 0.8226666450500488, 0.8363333344459534, 0.8190000057220459, 0.8446666598320007, 0.8176666498184204, 0.8460000157356262, 0.8339999914169312, 0.8243333101272583, 0.8429999947547913, 0.8273333311080933, 0.8403333425521851]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 4, 2, 2, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.8074285984039307, "mapping_values": [1, 4, 4, 2, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0252671984791077, 1.3443991991160742, 1.035746614883573, 0.9029342519325304, 0.8172757983396649, 0.8007502718734515, 0.7404390544844751, 0.7288453071077408, 0.7001584772940215, 0.6762159483512442, 0.6363444847752626, 0.6228827444034214, 0.6468219892648958, 0.6206012302464687, 0.6074354371390307, 0.5864040829076932, 0.6051181891905775, 0.5705604388760759, 0.5556933068643393, 0.5500214885585202, 0.5459984437176391, 0.5405856907257488, 0.5436804027069891, 0.5346066260287444, 0.5069260409778655, 0.5165089624527345, 0.5036478994025247], "accuracy": [0.334169864654541, 0.5354642868041992, 0.6197332143783569, 0.6700568199157715, 0.6921146512031555, 0.6968696117401123, 0.7239466309547424, 0.7224937081336975, 0.741909921169281, 0.743891179561615, 0.7523444890975952, 0.7642319202423096, 0.7530049085617065, 0.7625148296356201, 0.7692511081695557, 0.7754589915275574, 0.7642319202423096, 0.7827235460281372, 0.7885351777076721, 0.7895918488502502, 0.7930260300636292, 0.7947431206703186, 0.7938185334205627, 0.7984414100646973, 0.8128384351730347, 0.8047813773155212, 0.8059701323509216], "val_loss": [1.1552015032087053, 0.8391388995306832, 0.8066984925951276, 0.6546041965484619, 0.6103664125714984, 0.583559376852853, 0.5879527500697544, 0.6103821311678205, 0.6022986173629761, 0.5539266041346959, 0.508685759135655, 0.5134713138852801, 0.5156666551317487, 0.4957259041922433, 0.5195261750902448, 0.47786310740879606, 0.48320816244397846, 0.4805451120649065, 0.4881240129470825, 0.45575341156550814, 0.4642505134854998, 0.4311452167374747, 0.4588629518236433, 0.43608903884887695, 0.4428653376443045, 0.4466871363776071, 0.43088248797825407], "val_accuracy": [0.4676666557788849, 0.6696666479110718, 0.6240000128746033, 0.7273333072662354, 0.7213333249092102, 0.7436666488647461, 0.7363333106040955, 0.7356666922569275, 0.7129999995231628, 0.7329999804496765, 0.762666642665863, 0.7706666588783264, 0.7720000147819519, 0.7753333449363708, 0.7793333530426025, 0.7863333225250244, 0.7839999794960022, 0.7853333353996277, 0.7886666655540466, 0.8006666898727417, 0.7886666655540466, 0.8146666884422302, 0.7879999876022339, 0.8086666464805603, 0.8146666884422302, 0.8080000281333923, 0.8140000104904175]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [8, 8, 2, 2, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 4, 6, 6, 1, 1, 2, 9, 3, 8, 6, 5, 6, 4, 2, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 3, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.8057143092155457, "mapping_values": [1, 9, 9, 5, 4, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0252671580918635, 1.3440694530894177, 1.0591244481384887, 0.9022829812578537, 0.8165682227919209, 0.8004244791754421, 0.7413792462475532, 0.7157832341045515, 0.6908142616830372, 0.6773815559846472, 0.6414301064209365, 0.6253534612748853, 0.6373464989860564, 0.6113745595375624, 0.6053954657940203, 0.5929978694331298, 0.591707207625647, 0.5761132418692089, 0.5597273436173346, 0.5482493078137086, 0.5449229570081315, 0.5400784506679385, 0.5370288497232379, 0.5337085380782194, 0.5071366190941831, 0.5203298386990859, 0.5024723091287352, 0.5010312853306984, 0.48675916560132976, 0.4795393561839805, 0.47606483418723267, 0.4663470426114039, 0.46225266358351996, 0.4590339203394793, 0.454400055385017, 0.4483772287074648, 0.43419589579554124, 0.4526412382597905, 0.43939699170186675, 0.42944409610368256, 0.4361485954383424, 0.4098932629153713, 0.4110532637757868, 0.4353095618308008, 0.3995106693279978, 0.40815301159385203, 0.40594459649531156, 0.3996991345068688, 0.395809953160148], "accuracy": [0.334169864654541, 0.5359926223754883, 0.6144498586654663, 0.6690001487731934, 0.6913221478462219, 0.6970016956329346, 0.7236824631690979, 0.7298903465270996, 0.7452120184898376, 0.7427024245262146, 0.7532690763473511, 0.763967752456665, 0.7593448758125305, 0.7647602558135986, 0.7687227725982666, 0.7746664881706238, 0.7711002230644226, 0.7817989587783813, 0.7898560166358948, 0.7903843522071838, 0.7951393723487854, 0.7964601516723633, 0.7980451583862305, 0.7981772422790527, 0.8103289008140564, 0.8024039268493652, 0.8057059645652771, 0.8054417967796326, 0.8165367841720581, 0.8177255392074585, 0.8228767514228821, 0.8264430165290833, 0.8219521641731262, 0.8236692547798157, 0.8321225643157959, 0.8297450542449951, 0.8355567455291748, 0.8247259259223938, 0.8368775844573975, 0.8325188159942627, 0.8350284099578857, 0.8474441766738892, 0.8477083444595337, 0.834632158279419, 0.8519350290298462, 0.8451988101005554, 0.8466516733169556, 0.8540483713150024, 0.8557654023170471], "val_loss": [1.1552046707698278, 0.8426572595323835, 0.7356506415775844, 0.6395594051906041, 0.6313746656690326, 0.5781396286828178, 0.573741980961391, 0.5665066071919033, 0.5646051849637713, 0.5694375889641898, 0.5070750713348389, 0.5032421180180141, 0.5086167199271066, 0.4951662506375994, 0.5357304981776646, 0.4858116592679705, 0.49197471141815186, 0.4809410401753017, 0.48300014223371235, 0.44796013832092285, 0.4590748889105661, 0.4322963867868696, 0.45524968419756207, 0.4413318463734218, 0.44687163829803467, 0.44231368814195904, 0.4333115986415318, 0.4243285741124834, 0.41996186120169504, 0.41292483466012136, 0.4108713609831674, 0.4532122441700527, 0.39399485077176777, 0.3892830354826791, 0.39357256037848337, 0.39927734647478375, 0.38752769572394236, 0.3960834060396467, 0.39861724206379484, 0.39024526732308523, 0.3990917546408517, 0.3733720694269453, 0.40642573152269634, 0.3708240049225943, 0.38509975160871235, 0.3914626496178763, 0.3669020874159677, 0.3797787938799177, 0.36447164842060636], "val_accuracy": [0.4676666557788849, 0.6693333387374878, 0.6566666960716248, 0.7323333621025085, 0.721666693687439, 0.7406666874885559, 0.7306666374206543, 0.7450000047683716, 0.734000027179718, 0.7256666421890259, 0.7670000195503235, 0.7713333368301392, 0.7710000276565552, 0.7789999842643738, 0.762666642665863, 0.777999997138977, 0.7820000052452087, 0.7856666445732117, 0.7903333306312561, 0.8050000071525574, 0.7933333516120911, 0.812333345413208, 0.7916666865348816, 0.8113333582878113, 0.8116666674613953, 0.8153333067893982, 0.8140000104904175, 0.8106666803359985, 0.8259999752044678, 0.8289999961853027, 0.8330000042915344, 0.8033333420753479, 0.8323333263397217, 0.8363333344459534, 0.831333339214325, 0.8323333263397217, 0.8403333425521851, 0.8266666531562805, 0.8293333053588867, 0.8373333215713501, 0.8209999799728394, 0.8446666598320007, 0.8216666579246521, 0.847000002861023, 0.831333339214325, 0.8199999928474426, 0.8453333377838135, 0.8286666870117188, 0.8410000205039978]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.017949852378471, 1.3901562827563383, 1.10978783449209, 0.8662596071133319, 0.8307789890458477, 0.7830290775320486, 0.726387323444829, 0.7294530046142056, 0.700406317122939, 0.6998088092080291, 0.6563683350671, 0.6440363846371879, 0.6240951042243943, 0.622364260210038, 0.6125828782722635, 0.5953271674788655, 0.6013270952934288, 0.5949269542289747, 0.5555475059517339, 0.5624676520609349, 0.5536126996453381, 0.5318898822668915, 0.536274967444272, 0.524795760064156, 0.5260216072250934, 0.537537082571159, 0.5145868370955284, 0.4989870877675943], "accuracy": [0.3427552580833435, 0.5193501710891724, 0.5996565818786621, 0.6903975605964661, 0.6885483860969543, 0.7053229212760925, 0.7300224304199219, 0.7273808121681213, 0.7392682433128357, 0.733588695526123, 0.7506273984909058, 0.7541936039924622, 0.7680623531341553, 0.7658169269561768, 0.7716285586357117, 0.774270236492157, 0.7705719470977783, 0.770439863204956, 0.7907806038856506, 0.7915731072425842, 0.7903843522071838, 0.805177628993988, 0.7980451583862305, 0.8075551390647888, 0.8045172095298767, 0.8018755912780762, 0.8119139075279236, 0.8101968169212341], "val_loss": [1.2201850754874093, 1.013225453240531, 0.7517768655504499, 0.622175931930542, 0.6335914305278233, 0.5762958696910313, 0.6014284065791539, 0.5413255180631366, 0.5972025224140712, 0.5660357815878732, 0.5615198271615165, 0.5231123992374965, 0.5255608899252755, 0.5143857683454242, 0.4883365290505545, 0.48293398107801166, 0.48557259355272564, 0.48027048792157856, 0.46876648494175505, 0.48763602120535715, 0.4656659705298288, 0.48541888168879915, 0.44694221019744873, 0.463097129549299, 0.4496262414114816, 0.4973505565098354, 0.44033304282597135, 0.46350700514657156], "val_accuracy": [0.41100001335144043, 0.5426666736602783, 0.7026666402816772, 0.7086666822433472, 0.6966666579246521, 0.7363333106040955, 0.7173333168029785, 0.7509999871253967, 0.7303333282470703, 0.7279999852180481, 0.734000027179718, 0.7586666941642761, 0.7636666893959045, 0.7680000066757202, 0.7753333449363708, 0.7896666526794434, 0.7879999876022339, 0.7916666865348816, 0.793666660785675, 0.7826666831970215, 0.796999990940094, 0.7710000276565552, 0.8103333115577698, 0.8019999861717224, 0.8046666383743286, 0.7486666440963745, 0.8066666722297668, 0.7926666736602783]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 0, 3, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7739999890327454, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.4548362653646896, 2.13570814878398, 2.2827508230376883, 2.081500468898396, 1.9375751497030353, 1.483406038883261, 1.2760297923181918, 1.0175755122287036, 0.9556784721460672, 0.8711328822088563, 0.8107382344091101, 0.7905194872264235, 0.7420632790076875, 0.7497797797479178, 0.7002343477401058, 0.6770681993615878, 0.6564352114864108, 0.6515350483034139], "accuracy": [0.23854179680347443, 0.2911108136177063, 0.16219785809516907, 0.32426363229751587, 0.3774930536746979, 0.4928014874458313, 0.5535596609115601, 0.631488561630249, 0.6501122713088989, 0.6777176260948181, 0.6939638257026672, 0.702681303024292, 0.7186633348464966, 0.7120591998100281, 0.7362303733825684, 0.7449478507041931, 0.7589486241340637, 0.7559106945991516], "val_loss": [1.9282668658665247, 1.9739808355058943, 1.7450846944536482, 1.4691387244633265, 1.46993316922869, 1.1385430608476912, 0.8856686183384487, 0.7239576237542289, 0.7049476078578404, 0.6001691818237305, 0.6183819600514003, 0.5967045511518206, 0.5202721016747611, 0.5439844982964652, 0.5491186039788383, 0.5090085438319615, 0.6077831983566284, 0.5219107525689262], "val_accuracy": [0.1850000023841858, 0.10333333164453506, 0.40433332324028015, 0.4243333339691162, 0.4129999876022339, 0.5856666564941406, 0.6346666812896729, 0.67166668176651, 0.6816666722297668, 0.722000002861023, 0.7129999995231628, 0.718999981880188, 0.7639999985694885, 0.737333357334137, 0.7400000095367432, 0.7636666893959045, 0.7213333249092102, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 4, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.7671428322792053, "mapping_values": [1, 9, 9, 5, 4, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0206264432363694, 1.6359015063618498, 1.1105330482119378, 0.8949909125100572, 0.8486901103403149, 0.7491577253160916, 0.7620671460373747, 0.7081949468365025, 0.6829138627031524, 0.6914573668677809, 0.6409248500499491, 0.6196550725709651, 0.6103620723316997], "accuracy": [0.32703739404678345, 0.4935939908027649, 0.600581169128418, 0.6641130447387695, 0.683000922203064, 0.7194558382034302, 0.7051908373832703, 0.7276449799537659, 0.7434949278831482, 0.7421740889549255, 0.7520803213119507, 0.7640998363494873, 0.7646281719207764], "val_loss": [1.6264332362583704, 1.061471768787929, 0.7142323085239956, 0.6142608608518328, 0.6220384155000959, 0.6280071565083095, 0.5667005777359009, 0.5250198841094971, 0.5961939437048775, 0.5465838738850185, 0.5903567756925311, 0.5428665706089565, 0.515187246458871], "val_accuracy": [0.5456666946411133, 0.5289999842643738, 0.6756666898727417, 0.7149999737739563, 0.7013333439826965, 0.6899999976158142, 0.7369999885559082, 0.7596666812896729, 0.7273333072662354, 0.7453333139419556, 0.7066666483879089, 0.7433333396911621, 0.7580000162124634]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [8, 8, 2, 2, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [2, 1, 7, 3, 4, 0, 6, 9, 4, 2, 9, 3, 8, 6, 5, 6, 4, 2, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.7525714039802551, "mapping_values": [1, 9, 9, 5, 4, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0328952779292493, 1.378458034974898, 1.0931499725508573, 0.9307799768202246, 0.8425548123944909, 0.7554807769718455, 0.7796541943195521, 0.7166752336661671, 0.7176978542520984, 0.6909446787005954, 0.6577730301490565, 0.681911586967237, 0.6345542198033018], "accuracy": [0.33601900935173035, 0.5214634537696838, 0.6078457236289978, 0.6565843224525452, 0.6837934255599976, 0.7098137736320496, 0.6993792057037354, 0.7298903465270996, 0.7215691208839417, 0.7327961921691895, 0.7493065595626831, 0.739400327205658, 0.7598732113838196], "val_loss": [1.154956885746547, 1.0851475851876395, 0.6940355471202305, 0.6802058390208653, 0.5918684005737305, 0.5699925763266427, 0.6003448281969342, 0.5462948254176548, 0.5685228960854667, 0.526725207056318, 0.5164633819035122, 0.5257670027869088, 0.5181789909090314], "val_accuracy": [0.5766666531562805, 0.5550000071525574, 0.7066666483879089, 0.6973333358764648, 0.7206666469573975, 0.7433333396911621, 0.7293333411216736, 0.7613333463668823, 0.7443333268165588, 0.7609999775886536, 0.7583333253860474, 0.7586666941642761, 0.7590000033378601]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.6954285502433777, "mapping_values": [1, 9, 9, 5, 4, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.454782458627701, 2.1275442015020967, 2.28450688265885, 2.1755356755884585, 2.020023276808712, 1.5164399304488836, 1.343081492600487, 1.1957284655978477, 1.0298385707032427, 0.9528301573779053, 0.9521956444967534, 0.9051871574502879, 0.8989707175231393], "accuracy": [0.23854179680347443, 0.29124289751052856, 0.1562541276216507, 0.2550521790981293, 0.3343019485473633, 0.4780081808567047, 0.5204068422317505, 0.5735041499137878, 0.6342623233795166, 0.6465460062026978, 0.643772304058075, 0.6609430909156799, 0.6712455153465271], "val_loss": [1.9281097139630998, 1.9740353993007116, 1.7593011174883162, 1.9450300761631556, 1.4867593220302038, 1.4073155607495988, 0.9812956878117153, 0.7149197884968349, 0.7132279702595302, 0.73797265120915, 0.7279212645121983, 0.6791075978960309, 0.6173043080738613], "val_accuracy": [0.18533332645893097, 0.10233332961797714, 0.421999990940094, 0.26866665482521057, 0.4189999997615814, 0.5216666460037231, 0.5616666674613953, 0.7120000123977661, 0.6726666688919067, 0.6650000214576721, 0.6690000295639038, 0.6793333292007446, 0.7110000252723694]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [8, 8, 2, 2, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [2, 5, 9, 3, 4, 6, 6, 1, 4, 2, 9, 3, 8, 6, 5, 6, 4, 2, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [7, 9, 76, 58]], "fitness": -0.31542858481407166, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3028796588928944, 2.3027732120040794, 2.302533874044392, 2.3025554775514654, 2.300003899811218, 2.3002649823262975, 2.300689358390664, 2.3016152020065053, 2.2990824548307898, 2.2989468027209847, 2.2997815435147793, 2.2989473961379314, 2.2980434916605486, 2.2978659457124975, 2.2965148000070967, 2.2958310520203358, 2.29451828802172, 2.296640741637732, 2.295780595519429, 2.2954160637780583, 2.2935749544459343, 2.294173539700431, 2.2932571780018725, 2.2932417529716687, 2.2942758523525106, 2.2927121564366044, 2.2915653924207646, 2.2924945448304936, 2.2910449973753715, 2.291369402397578, 2.29225372244669, 2.2919609761430193, 2.2881693601954676, 2.288631058136045, 2.2902529892148658, 2.2899191831758294, 2.2887821101777037, 2.2878986257745324, 2.2881860220043366, 2.288309620891375, 2.2891799331640352, 2.2862459076488526, 2.2872995227130493, 2.286619158815226, 2.2853727324322906, 2.286063631149945, 2.284796371561992, 2.285012543650194, 2.2854572267989597, 2.285482595782821, 2.283292588304614, 2.283135128562886, 2.283468627280972, 2.2827777958281557, 2.283718794312664, 2.2821756538823927, 2.282620801681289, 2.2819789660494987, 2.28084813939141, 2.28016976733265, 2.2802971307832363, 2.280054614276556, 2.278046007563236, 2.277340226783697, 2.278780067129189, 2.27730546761592, 2.2773246106344396, 2.2770605609086623, 2.2756390470193124, 2.2742481000860213, 2.2753782442075514, 2.275620150229147, 2.275375260653009, 2.2749444942086394, 2.273831427829487, 2.2741544642200906, 2.2739214658768674, 2.273848833299001, 2.273367460393446, 2.2714284225272907, 2.272198214680212, 2.271393175469004, 2.2712100330612772, 2.269827338383576, 2.2693657294051555, 2.270082736736464, 2.2695120327886165, 2.270371199661888, 2.269026981290022, 2.268251350322467, 2.2678922029801836, 2.2661505921358414, 2.2674620104913052, 2.266674379993187, 2.2660478072757844, 2.265361053722252, 2.2648136498921456, 2.2652055443144117, 2.265523649430341, 2.263464943198417], "accuracy": [0.09642054885625839, 0.0948355570435524, 0.09351472556591034, 0.09298639744520187, 0.09311848133802414, 0.09602430462837219, 0.09906221181154251, 0.09034473448991776, 0.1010434553027153, 0.09430722147226334, 0.09668471664190292, 0.1002509593963623, 0.09800554811954498, 0.10738343745470047, 0.10711926966905594, 0.10500594228506088, 0.1088363528251648, 0.10645885765552521, 0.10540219396352768, 0.10249637067317963, 0.11200633645057678, 0.11147800832986832, 0.1142517477273941, 0.11596883088350296, 0.11227050423622131, 0.11266675591468811, 0.11438383162021637, 0.11689341068267822, 0.11940298229455948, 0.11913882195949554, 0.11715757846832275, 0.12112006545066833, 0.12019548565149307, 0.12178047746419907, 0.11900673806667328, 0.12534672021865845, 0.12376172095537186, 0.12732796370983124, 0.12613920867443085, 0.12878087162971497, 0.12772421538829803, 0.12891295552253723, 0.13155461847782135, 0.13168670237064362, 0.136045441031456, 0.1364416927099228, 0.1450270712375641, 0.1352529376745224, 0.137630432844162, 0.1368379294872284, 0.136045441031456, 0.13934750854969025, 0.13855500519275665, 0.13881917297840118, 0.13551710546016693, 0.1450270712375641, 0.14330999553203583, 0.14159291982650757, 0.1468762308359146, 0.1450270712375641, 0.1488574892282486, 0.14542332291603088, 0.1534803807735443, 0.15480121970176697, 0.15361246466636658, 0.14714039862155914, 0.16338661313056946, 0.1542728841304779, 0.1604807823896408, 0.16972659528255463, 0.16351869702339172, 0.16629242897033691, 0.160084530711174, 0.1592920422554016, 0.1710474193096161, 0.16761326789855957, 0.1670849323272705, 0.16431118547916412, 0.16576409339904785, 0.17012283205986023, 0.16523577272891998, 0.17117950320243835, 0.1768590658903122, 0.17514199018478394, 0.17897239327430725, 0.17699114978313446, 0.17474573850631714, 0.17474573850631714, 0.1740853190422058, 0.18240654468536377, 0.1834632158279419, 0.18623696267604828, 0.18940694630146027, 0.18438778817653656, 0.18293488025665283, 0.1872936189174652, 0.18623696267604828, 0.18782195448875427, 0.18478403985500336, 0.19033153355121613], "val_loss": [1.9708260127476283, 1.9704607554844447, 1.9701008115495955, 1.9697418894086565, 1.9693809917994909, 1.9690221377781458, 1.9686582429068429, 1.9683000700814384, 1.9679415566580636, 1.9675836563110352, 1.9672218731471471, 1.9668667657034737, 1.966512611934117, 1.966155937739781, 1.9657998085021973, 1.9654407501220703, 1.9650825091770716, 1.9647256987435477, 1.9643703869410925, 1.96401275907244, 1.9636541094098772, 1.963296345302037, 1.9629398073468889, 1.96258578981672, 1.9622322491237096, 1.9618800708225794, 1.9615240097045898, 1.9611713545663017, 1.960817609514509, 1.9604650906154089, 1.9601147515433175, 1.9597627094813757, 1.959409441266741, 1.9590531076703752, 1.9587032454354423, 1.9583496366228377, 1.9579965727669852, 1.957646029336112, 1.9572937829153878, 1.9569405828203474, 1.9565856797354562, 1.9562297548566545, 1.9558745792933874, 1.9555166789463587, 1.9551620483398438, 1.954810619354248, 1.9544543538774763, 1.9541008131844657, 1.9537463869367326, 1.9533917563302177, 1.9530372619628906, 1.9526771136692591, 1.9523208481924874, 1.9519689423697335, 1.9516183989388602, 1.9512647901262556, 1.950906685420445, 1.9505455834524972, 1.9501874787466866, 1.9498278072902135, 1.9494736535208566, 1.9491164343697684, 1.9487549918038505, 1.9483913012913294, 1.9480340140206474, 1.9476759774344308, 1.9473190307617188, 1.9469617434910365, 1.9466039793831962, 1.946244171687535, 1.9458812986101424, 1.9455227851867676, 1.9451613426208496, 1.9447977202279227, 1.94443450655256, 1.94407320022583, 1.9437120982578822, 1.9433514731270927, 1.9429872376578194, 1.9426208904811315, 1.942258358001709, 1.9418911933898926, 1.9415260723658971, 1.941159793308803, 1.9407915387834822, 1.9404258046831404, 1.9400543485369002, 1.9396883419581823, 1.939319133758545, 1.9389467239379883, 1.9385711806161063, 1.9381943430219377, 1.9378182547433036, 1.9374455724443709, 1.9370669637407576, 1.936688014439174, 1.9363109724862235, 1.935934271131243, 1.935556207384382, 1.9351743970598494], "val_accuracy": [0.03866666555404663, 0.0403333343565464, 0.041999999433755875, 0.043666668236255646, 0.04399999976158142, 0.046666666865348816, 0.05000000074505806, 0.052666667848825455, 0.05433333292603493, 0.05533333495259285, 0.05766666680574417, 0.059333331882953644, 0.06366666406393051, 0.06566666811704636, 0.06866666674613953, 0.07266666740179062, 0.07533333450555801, 0.07900000363588333, 0.08433333039283752, 0.08699999749660492, 0.08799999952316284, 0.09066666662693024, 0.09433333575725555, 0.09799999743700027, 0.10133333504199982, 0.10499999672174454, 0.10633333027362823, 0.11033333092927933, 0.11266666650772095, 0.11666666716337204, 0.11933333426713943, 0.1236666664481163, 0.12566666305065155, 0.12966667115688324, 0.13333334028720856, 0.13766667246818542, 0.1420000046491623, 0.14733333885669708, 0.14866666495800018, 0.1509999930858612, 0.15533334016799927, 0.16066665947437286, 0.164000004529953, 0.16733333468437195, 0.17233332991600037, 0.17533333599567413, 0.179666668176651, 0.1823333352804184, 0.1850000023841858, 0.1889999955892563, 0.19099999964237213, 0.19599999487400055, 0.1979999989271164, 0.20100000500679016, 0.20366667211055756, 0.20499999821186066, 0.20800000429153442, 0.21066667139530182, 0.2123333364725113, 0.21466666460037231, 0.218666672706604, 0.22166666388511658, 0.22466666996479034, 0.22833333909511566, 0.23000000417232513, 0.23100000619888306, 0.234333336353302, 0.23733332753181458, 0.23766666650772095, 0.24199999868869781, 0.2446666657924652, 0.24899999797344208, 0.2513333261013031, 0.25466665625572205, 0.257666677236557, 0.26100000739097595, 0.2643333375453949, 0.26766666769981384, 0.2696666717529297, 0.273333340883255, 0.27566665410995483, 0.2770000100135803, 0.2786666750907898, 0.281333327293396, 0.28466665744781494, 0.2866666615009308, 0.28999999165534973, 0.2930000126361847, 0.29499998688697815, 0.29766666889190674, 0.30000001192092896, 0.3016666769981384, 0.30399999022483826, 0.304666668176651, 0.30566665530204773, 0.3073333203792572, 0.3096666634082794, 0.31166666746139526, 0.312333345413208, 0.3136666715145111]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [15, 80, 61], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 8, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 1, 3, 0, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [73, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 26, 26, 16, 10, 2, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))))))), tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [2, 8, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 8, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 41, 37, 7, 45, 13], [1], [1, 1, 1], [9], [3, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 2, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, grad), grad))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07013604789972305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [0, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 8, 3, 4, 6, 8, 1, 4, 2, 2, 2, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 0, 3, 3, 1, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 1, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3030400155258532, 2.303328719672557, 2.3034745162708914, 2.303875068994073, 2.301714880087624, 2.3023638738506995], "accuracy": [0.09602430462837219, 0.09338264167308807, 0.09153348207473755, 0.09100515395402908, 0.08849557489156723, 0.09074098616838455], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1], [8, 8, 1, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [2, 3, 7, 3, 3, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3030400155258532, 2.303328719672557, 2.3034745162708914, 2.303875068994073, 2.301714880087624, 2.3023638738506995], "accuracy": [0.09602430462837219, 0.09338264167308807, 0.09153348207473755, 0.09100515395402908, 0.08849557489156723, 0.09074098616838455], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 41, 37, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3030400155258532, 2.303328719672557, 2.3034745162708914, 2.303875068994073, 2.301714880087624, 2.3023638738506995], "accuracy": [0.09602430462837219, 0.09338264167308807, 0.09153348207473755, 0.09100515395402908, 0.08849557489156723, 0.09074098616838455], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [1, 8, 4, 2, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, alpha))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3030400155258532, 2.303328719672557, 2.3034745162708914, 2.303875068994073, 2.301714880087624, 2.3023638738506995], "accuracy": [0.09602430462837219, 0.09338264167308807, 0.09153348207473755, 0.09100515395402908, 0.08849557489156723, 0.09074098616838455], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]