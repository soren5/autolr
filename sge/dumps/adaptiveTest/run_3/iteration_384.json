[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 0, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 0, 3, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8191428780555725, "mapping_values": [1, 22, 22, 14, 8, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(alpha), alpha)))), tf.math.add(alpha, alpha))), alpha))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.200227898471879, 2.1204532335903887, 2.000476743157482, 1.389927639433453, 1.113682579189606, 0.9144386408304133, 0.7842361845785616, 0.7290338736247425, 0.6710355952273838, 0.6763641830480109, 0.6657949542608779, 0.5786348982273611, 0.5951258220834471, 0.5517884636551964, 0.544446438893414, 0.5313298449052118, 0.5165216049277598, 0.5046795930065389, 0.4812300293051319, 0.4850892471032703, 0.4666777289798625, 0.4529930845605636, 0.47023879805450125, 0.44916595477453863, 0.42509513375009955, 0.4479549932733361, 0.43172607735919283, 0.42173831720850363, 0.4259785844657431, 0.41829332823861054], "accuracy": [0.23840972781181335, 0.29863953590393066, 0.308149516582489, 0.48012152314186096, 0.5960903167724609, 0.655527651309967, 0.6980583667755127, 0.7285695672035217, 0.7442874312400818, 0.737022876739502, 0.7396644949913025, 0.7788931727409363, 0.7732135653495789, 0.7874785661697388, 0.787082314491272, 0.7965922355651855, 0.802271842956543, 0.8092722296714783, 0.8198388814926147, 0.8161405324935913, 0.8241975903511047, 0.8276317715644836, 0.8215559124946594, 0.8356888294219971, 0.8418967127799988, 0.8352925777435303, 0.8356888294219971, 0.8442742228507996, 0.8342359066009521, 0.8424250483512878], "val_loss": [1.9365978240966797, 1.4808668409075056, 1.4745547090257918, 0.8876144886016846, 0.7491226366588047, 0.6397007022585187, 0.6112498726163592, 0.5522257089614868, 0.600140026637486, 0.5051009484699794, 0.4737302235194615, 0.48204851150512695, 0.5011342253003802, 0.45089915820530485, 0.44982429913112093, 0.5148319005966187, 0.4373981441770281, 0.4367459160940988, 0.4275748474257333, 0.45607252631868633, 0.3978031022208078, 0.46881069455827984, 0.38799738032477243, 0.3925918681280954, 0.3680280106408255, 0.37489135776247295, 0.3972895996911185, 0.39445281880242483, 0.38823207787105013, 0.37741572516305105], "val_accuracy": [0.19066666066646576, 0.35333332419395447, 0.4076666533946991, 0.6026666760444641, 0.6766666769981384, 0.7113333344459534, 0.7269999980926514, 0.7590000033378601, 0.7253333330154419, 0.7713333368301392, 0.7950000166893005, 0.7773333191871643, 0.7490000128746033, 0.7950000166893005, 0.8006666898727417, 0.7576666474342346, 0.8056666851043701, 0.8053333163261414, 0.8026666641235352, 0.8069999814033508, 0.8303333520889282, 0.7749999761581421, 0.8370000123977661, 0.8230000138282776, 0.843666672706604, 0.8413333296775818, 0.8220000267028809, 0.8213333487510681, 0.8213333487510681, 0.8346666693687439]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [78, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8171428442001343, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.2002370007648095, 2.1279386659387143, 1.7679508822610774, 1.5084828264787922, 1.4585249786285, 1.0209134995598819, 0.8813035516942953, 0.7967148498615899, 0.7306520573341174, 0.6849930349232073, 0.688358821330085, 0.6143461459222456, 0.608782328619004, 0.5797291889072268, 0.5408914123134464, 0.5509506266555766, 0.5258898447139656, 0.5217591909338155, 0.5208527010114768, 0.5057242669764448, 0.47829471722396766, 0.4542052808013874, 0.48105011160630967, 0.46406987206322753, 0.4343320234041361, 0.4501961564083991, 0.44621977888282893, 0.434921779802305, 0.4234723830975719, 0.4279505290871425, 0.40516592342745533, 0.3997323182375203, 0.3922453594954101, 0.3762934061876614, 0.3761773767244263, 0.38986150062851005, 0.35777953671363555, 0.36282414119981454], "accuracy": [0.23840972781181335, 0.2981112003326416, 0.3901730179786682, 0.43626996874809265, 0.4975564777851105, 0.618280291557312, 0.6621318459510803, 0.6942279934883118, 0.7250033020973206, 0.7403249144554138, 0.7326641082763672, 0.7730814814567566, 0.7718927264213562, 0.7724210619926453, 0.7935543656349182, 0.7890635132789612, 0.7988376617431641, 0.8010830879211426, 0.809140145778656, 0.8084797263145447, 0.819442629814148, 0.8300092220306396, 0.8195747137069702, 0.8257825970649719, 0.8444063067436218, 0.8310658931732178, 0.8310658931732178, 0.837537944316864, 0.841500461101532, 0.8397833704948425, 0.852859616279602, 0.8520671129226685, 0.8518029451370239, 0.8589354157447815, 0.8568220734596252, 0.8487650156021118, 0.8656716346740723, 0.8646149635314941], "val_loss": [1.9367188726152693, 1.5797418526240758, 0.9956534249441964, 1.5932843003954207, 0.8606547968728202, 0.7205002137592861, 0.6067698342459542, 0.5773615837097168, 0.541973386492048, 0.4963012933731079, 0.48658972127096994, 0.5083534036363874, 0.4765066759926932, 0.44968542030879427, 0.4636562040873936, 0.42640501260757446, 0.42481705972126554, 0.43248807532446726, 0.4159181799207415, 0.4347687193325588, 0.404167686189924, 0.40078675746917725, 0.39815419912338257, 0.38359592642102924, 0.3822843091828482, 0.38129511901310514, 0.4028156229427883, 0.37835940292903353, 0.38335056815828594, 0.3920006922313145, 0.3571547099522182, 0.36446566241128103, 0.357154871736254, 0.36426028183528353, 0.3846746938569205, 0.35816273518971037, 0.3615623542240688, 0.381863534450531], "val_accuracy": [0.19099999964237213, 0.3473333418369293, 0.5546666383743286, 0.500333309173584, 0.6483333110809326, 0.659333348274231, 0.7283333539962769, 0.7476666569709778, 0.7519999742507935, 0.7703333497047424, 0.7820000052452087, 0.7680000066757202, 0.7856666445732117, 0.7993333339691162, 0.7863333225250244, 0.8163333535194397, 0.8100000023841858, 0.8076666593551636, 0.8169999718666077, 0.8223333358764648, 0.8263333439826965, 0.8233333230018616, 0.8339999914169312, 0.8336666822433472, 0.8370000123977661, 0.8376666903495789, 0.8190000057220459, 0.8330000042915344, 0.8256666660308838, 0.8223333358764648, 0.8476666808128357, 0.8429999947547913, 0.8500000238418579, 0.8446666598320007, 0.8360000252723694, 0.8456666469573975, 0.8473333120346069, 0.8383333086967468]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 0, 1, 1], [2, 2, 9, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [89, 14, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [78, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.200126969787533, 2.1272598656649446, 1.7349309079351993, 1.3821161627816707, 1.153327827794661, 1.0028347984092143, 0.8428146980930203, 0.7816041776721724, 0.7301629945948738, 0.6934551675526568, 0.6888069311830236, 0.6251605616946656, 0.604789733390735, 0.5836384164706009, 0.5757595183527812, 0.5507803994194391, 0.5304646976178963, 0.5251871442766458, 0.5094636908580189, 0.5114457934382349, 0.4864859372050676, 0.47949994201626145, 0.472550993731875, 0.45605744026072853, 0.4450891677414689, 0.46938116729393325, 0.4333253502294671, 0.42651956065408686, 0.4266166593522727, 0.4205551341760585, 0.412384272629417, 0.4059701163723736, 0.3918555325142948, 0.37877188653458443, 0.38843214111541635, 0.3844866274866241, 0.3576950908667691, 0.37642707651191465], "accuracy": [0.23840972781181335, 0.29837536811828613, 0.39189010858535767, 0.49993395805358887, 0.5628054141998291, 0.6110157370567322, 0.6664905548095703, 0.6989829540252686, 0.7172104120254517, 0.7288337349891663, 0.733588695526123, 0.7602694630622864, 0.7720248103141785, 0.7670056819915771, 0.7808743715286255, 0.7910447716712952, 0.7947431206703186, 0.8041210174560547, 0.8096684813499451, 0.8025360107421875, 0.8162726163864136, 0.8206313848495483, 0.8177255392074585, 0.8305375576019287, 0.8362171649932861, 0.8251221776008606, 0.8342359066009521, 0.8381983637809753, 0.8408400416374207, 0.8453308939933777, 0.8487650156021118, 0.850350022315979, 0.8544445633888245, 0.8560295701026917, 0.8520671129226685, 0.8524633646011353, 0.863029956817627, 0.8535200357437134], "val_loss": [1.9369185992649622, 1.5792671271732874, 1.3628380298614502, 0.8617885623659406, 0.7612954548427037, 0.6571127346583775, 0.6709303344999041, 0.585371698651995, 0.5324846506118774, 0.5118652071271624, 0.4939149958746774, 0.4995608329772949, 0.515028817313058, 0.5224499191556659, 0.4809057542255947, 0.44896856376102995, 0.4210286481039865, 0.43280456747327534, 0.4448416233062744, 0.46553186007908415, 0.4097657459122794, 0.42252908434186665, 0.4197695851325989, 0.39210139002118793, 0.41460523435047697, 0.3860506500516619, 0.43517145940235685, 0.40525669710976736, 0.3758395995412554, 0.38355746439525057, 0.35650569200515747, 0.360527583530971, 0.35134884289332796, 0.3739459344318935, 0.3648852791104998, 0.34608639989580425, 0.3511604070663452, 0.3643300533294678], "val_accuracy": [0.19066666066646576, 0.34566667675971985, 0.43933331966400146, 0.6556666493415833, 0.6463333368301392, 0.6913333535194397, 0.6796666383743286, 0.7336666584014893, 0.7606666684150696, 0.7559999823570251, 0.7776666879653931, 0.7693333625793457, 0.7436666488647461, 0.7553333044052124, 0.7896666526794434, 0.8023333549499512, 0.8193333148956299, 0.8116666674613953, 0.7960000038146973, 0.8023333549499512, 0.8209999799728394, 0.8130000233650208, 0.8040000200271606, 0.8293333053588867, 0.8069999814033508, 0.8393333554267883, 0.7923333048820496, 0.8216666579246521, 0.82833331823349, 0.8226666450500488, 0.8476666808128357, 0.8383333086967468, 0.8536666631698608, 0.843666672706604, 0.8426666855812073, 0.8473333120346069, 0.8503333330154419, 0.8456666469573975]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [2, 8, 8, 5, 4, 5, 1, 7, 8, 3, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 9, 9, 6, 3, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.200164520635014, 2.1256144357914812, 1.7814612795632387, 1.753786040240464, 1.1936638603246978, 0.9855544112613881, 0.8739141413501351, 0.78308523736531, 0.7372371293707703, 0.6756349093862701, 0.6965820893257553, 0.6202583693714819, 0.6444253380020549, 0.587328965519681, 0.5666078282322126, 0.5528829381718156, 0.5492904107678662, 0.553653892902666, 0.5151605070219882, 0.5215952804280373, 0.4889222057252087, 0.4857671979773928, 0.47764267771550456, 0.4645378631237649, 0.4425458597067781, 0.4649258410067779, 0.46412937769627194, 0.44827296068686945], "accuracy": [0.23840972781181335, 0.29863953590393066, 0.3961167633533478, 0.3737947344779968, 0.5540879964828491, 0.6268656849861145, 0.6715096831321716, 0.6951525807380676, 0.7230220437049866, 0.748249888420105, 0.7312111854553223, 0.7638356685638428, 0.7553823590278625, 0.7720248103141785, 0.7814027070999146, 0.791969358921051, 0.7935543656349182, 0.7903843522071838, 0.8068947196006775, 0.8013472557067871, 0.8144234418869019, 0.8189142942428589, 0.819442629814148, 0.8260467648506165, 0.8367455005645752, 0.8224804997444153, 0.8257825970649719, 0.828292191028595], "val_loss": [1.93673494883946, 1.5582775388445174, 1.0013162408556258, 0.9407998834337506, 0.7230284214019775, 0.7765427487237113, 0.6206914016178676, 0.5657215799604144, 0.5373568534851074, 0.5151488780975342, 0.5319977658135551, 0.5073097944259644, 0.48544258730752127, 0.48550636427743094, 0.4562757526125227, 0.523158345903669, 0.4342051148414612, 0.4487583637237549, 0.4230155944824219, 0.4418337770870754, 0.41624400445393156, 0.4090708919933864, 0.4047737547329494, 0.4054220914840698, 0.39924246072769165, 0.42232857431684223, 0.43362629413604736, 0.3885764649936131], "val_accuracy": [0.19066666066646576, 0.32899999618530273, 0.5636666417121887, 0.5683333277702332, 0.6566666960716248, 0.6456666588783264, 0.7160000205039978, 0.746999979019165, 0.762333333492279, 0.7593333125114441, 0.7393333315849304, 0.7720000147819519, 0.7766666412353516, 0.7680000066757202, 0.7983333468437195, 0.765666663646698, 0.8043333292007446, 0.8003333210945129, 0.8203333616256714, 0.8166666626930237, 0.8246666789054871, 0.8270000219345093, 0.8296666741371155, 0.8180000185966492, 0.8263333439826965, 0.8270000219345093, 0.8013333082199097, 0.8223333358764648]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 6, 6, 5, 4, 5, 1, 7, 8, 2, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.8022857308387756, "mapping_values": [1, 23, 23, 14, 9, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad)))), alpha))), alpha)))), tf.math.negative(grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.199134464639289, 2.0937101793106536, 1.8321912149160513, 1.5005470727334296, 1.0428149849904638, 0.9167101068141486, 0.8129470864732299, 0.7521420678269232, 0.6764712540417803, 0.6802040767424048, 0.6956306850559062, 0.6176836380333776, 0.6012106124971521, 0.5818396619975118, 0.5496782994761584, 0.5344260812372563, 0.520244669298596, 0.4995883998381479, 0.49538144577511584, 0.4995478939827423], "accuracy": [0.23814556002616882, 0.3008849620819092, 0.3595297932624817, 0.4554220139980316, 0.6033549308776855, 0.6577730774879456, 0.6869634389877319, 0.7129837274551392, 0.7436270117759705, 0.7347774505615234, 0.7342491149902344, 0.7606657147407532, 0.7734777331352234, 0.7697794437408447, 0.7906485199928284, 0.7928939461708069, 0.7981772422790527, 0.8075551390647888, 0.8161405324935913, 0.807158887386322], "val_loss": [1.9324324471609933, 1.6767842429024833, 1.745166437966483, 0.9262039661407471, 0.8642207213810512, 0.6974060535430908, 0.6094687836510795, 0.5571613822664533, 0.5359352486474174, 0.4911548069545201, 0.48793111528669086, 0.5193024703434536, 0.5032547031130109, 0.4957142046519688, 0.4414727858134678, 0.47806479249681744, 0.44000724383762907, 0.4549143314361572, 0.4269058278628758, 0.46202003955841064], "val_accuracy": [0.19200000166893005, 0.3323333263397217, 0.3100000023841858, 0.5870000123977661, 0.6306666731834412, 0.6826666593551636, 0.7193333506584167, 0.7559999823570251, 0.7476666569709778, 0.7720000147819519, 0.7760000228881836, 0.7636666893959045, 0.7326666712760925, 0.7646666765213013, 0.812666654586792, 0.7789999842643738, 0.7990000247955322, 0.7960000038146973, 0.8056666851043701, 0.8043333292007446]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [2, 8, 6, 5, 3, 5, 1, 7, 8, 6, 3, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 0, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [78, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8008571267127991, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2001630913201984, 2.1249778063825375, 1.7244500026191467, 1.7085893777194292, 1.2009736913432376, 0.9350144848564061, 0.8331584057016238, 0.7589278844416559, 0.6995566803954612, 0.654292719687894, 0.6373641823402816, 0.5970021590675109, 0.5926156022671175, 0.549202049578406, 0.5589540075348857, 0.530028631091669, 0.5186588737816937, 0.5145535907803934, 0.4916460285365007, 0.49102799226547733, 0.4755982268976104, 0.46261194453436577, 0.4591013254419908, 0.4463224756703511, 0.4287743815546259, 0.44943567453090777, 0.43101324573436733, 0.42007574305605533, 0.42800561344666077, 0.4197081635656799, 0.40190831003502736, 0.38979871755089696, 0.39430048368578935, 0.3661826277264137, 0.3768133464632348, 0.3781234884164463, 0.3497540764859985, 0.37071613837714995, 0.36615693992737686, 0.33588186504739764, 0.34101960141314586, 0.34593479862979626], "accuracy": [0.23840972781181335, 0.2975828945636749, 0.4023246467113495, 0.4060229957103729, 0.5560691952705383, 0.6412627100944519, 0.6794346570968628, 0.7148329019546509, 0.7289658188819885, 0.7494386434555054, 0.7564390301704407, 0.7729493975639343, 0.7758552432060242, 0.7890635132789612, 0.7890635132789612, 0.8004226684570312, 0.805177628993988, 0.8053097128868103, 0.8140271902084351, 0.8079513907432556, 0.8210275769233704, 0.8310658931732178, 0.8293488025665283, 0.8338396549224854, 0.8407079577445984, 0.8318583965301514, 0.8323867321014404, 0.844010055065155, 0.8385946154594421, 0.8429533839225769, 0.8491612672805786, 0.8569541573524475, 0.8540483713150024, 0.8619733452796936, 0.859199583530426, 0.8536521196365356, 0.8705587387084961, 0.8584070801734924, 0.8570862412452698, 0.8739928603172302, 0.8714832663536072, 0.8638224601745605], "val_loss": [1.9367934635707311, 1.5754001140594482, 1.4383978503090995, 1.0732296194349016, 0.8314192465373448, 0.7740846531731742, 0.6542089666639056, 0.5661146470478603, 0.5174043008259365, 0.5175444058009556, 0.4764734336308071, 0.47275136198316303, 0.47159719467163086, 0.4552045890263149, 0.46009346417018343, 0.4906835215432303, 0.41514801127570017, 0.42232413802828106, 0.45996902670179096, 0.461785043988909, 0.40082707575389315, 0.40516784361430574, 0.3951664652143206, 0.4103128569466727, 0.4052743230547224, 0.3836330771446228, 0.42187403781073435, 0.3990388172013419, 0.3718637653759548, 0.37257741178785053, 0.35405666487557547, 0.36757404463631765, 0.3618203742163522, 0.3578178031103952, 0.36234876939228605, 0.3472084658486502, 0.3493623988968985, 0.38376773255211966, 0.3406741959708078, 0.3677483286176409, 0.38338595628738403, 0.4139151658330645], "val_accuracy": [0.19099999964237213, 0.33033332228660583, 0.3959999978542328, 0.5669999718666077, 0.6399999856948853, 0.625, 0.6976666450500488, 0.75, 0.7593333125114441, 0.7699999809265137, 0.7879999876022339, 0.7860000133514404, 0.7789999842643738, 0.7979999780654907, 0.8069999814033508, 0.7833333611488342, 0.8213333487510681, 0.8149999976158142, 0.79666668176651, 0.800000011920929, 0.8296666741371155, 0.8213333487510681, 0.8286666870117188, 0.8163333535194397, 0.812333345413208, 0.8366666436195374, 0.8059999942779541, 0.8206666707992554, 0.8379999995231628, 0.8416666388511658, 0.8479999899864197, 0.8389999866485596, 0.8476666808128357, 0.8513333201408386, 0.847000002861023, 0.8500000238418579, 0.8553333282470703, 0.8393333554267883, 0.8523333072662354, 0.8500000238418579, 0.8393333554267883, 0.8169999718666077]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [89, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8005714416503906, "mapping_values": [1, 7, 7, 4, 3, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2002917543740526, 2.1225124933086352, 1.8633469631328339, 1.5449680200956437, 1.142512753796757, 0.9215812769863253, 0.8233369852825477, 0.7600045196447296, 0.6749358160494814, 0.6830692872741613, 0.6451834938655582, 0.5943222322310943, 0.5785705149921648, 0.5782255810391335, 0.5345768312405853, 0.5350193726529913, 0.5330254515211549, 0.541992996815504, 0.4982222975827699, 0.4979909605290896, 0.46538966806368537, 0.4402356297191045, 0.47634726852521037, 0.44507846132702183, 0.44804833785512305, 0.45590918727161045, 0.4254139892106452, 0.4324539209424607, 0.4048138651959947, 0.4134521624510078, 0.3955343424636202, 0.40352248219671566, 0.39174317869575126, 0.38266368547072893, 0.39731109359591565, 0.3797082019055351], "accuracy": [0.23840972781181335, 0.2985074520111084, 0.34183067083358765, 0.4383833110332489, 0.5703341960906982, 0.6481310129165649, 0.683000922203064, 0.7154933214187622, 0.7466648817062378, 0.7354378700256348, 0.7479857206344604, 0.7738739848136902, 0.7840443849563599, 0.7718927264213562, 0.7977809906005859, 0.7989697456359863, 0.7996301651000977, 0.7913089394569397, 0.8132346868515015, 0.8074230551719666, 0.8281601071357727, 0.8364813327789307, 0.8183859586715698, 0.8360850811004639, 0.8335754871368408, 0.8280280232429504, 0.8416325449943542, 0.8367455005645752, 0.8511425256729126, 0.8433496356010437, 0.8576145768165588, 0.8519350290298462, 0.8557654023170471, 0.8533879518508911, 0.8467837572097778, 0.8520671129226685], "val_loss": [1.9369714600699288, 1.5147831099373954, 1.7130023751940047, 0.8119161299296788, 0.6800895418439593, 0.6528283357620239, 0.6272939954485212, 0.5799775804792132, 0.5624677283423287, 0.4964615958077567, 0.5060436725616455, 0.4664135319846017, 0.4789466347013201, 0.4411429933139256, 0.4685862064361572, 0.46123697076525005, 0.4274505802563259, 0.42237510851451326, 0.4162656239100865, 0.43698071581976755, 0.4015869838850839, 0.39589470624923706, 0.4046303459576198, 0.3947503992489406, 0.40054174831935335, 0.3971250738416399, 0.3695300221443176, 0.4009975109781538, 0.4002850822040013, 0.4196391190801348, 0.3580025689942496, 0.3720691885266985, 0.37229572023664204, 0.3761805466243199, 0.3559435180255345, 0.3564731904438564], "val_accuracy": [0.19099999964237213, 0.3176666796207428, 0.28733333945274353, 0.6243333220481873, 0.706333339214325, 0.6830000281333923, 0.722000002861023, 0.7453333139419556, 0.7253333330154419, 0.7793333530426025, 0.777999997138977, 0.7903333306312561, 0.7866666913032532, 0.8009999990463257, 0.7906666398048401, 0.7826666831970215, 0.8096666932106018, 0.8153333067893982, 0.8233333230018616, 0.8193333148956299, 0.828000009059906, 0.8190000057220459, 0.8209999799728394, 0.8303333520889282, 0.8236666917800903, 0.8286666870117188, 0.8460000157356262, 0.8309999704360962, 0.8183333277702332, 0.8130000233650208, 0.8526666760444641, 0.8376666903495789, 0.8330000042915344, 0.8386666774749756, 0.843666672706604, 0.8423333168029785]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 8, 6, 5, 4, 9, 1, 2, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2], [89, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7997142672538757, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1121766927172683, 1.5563678084709673, 1.2038675485947161, 1.0081633101553886, 0.8343383765271027, 0.7470106539583288, 0.7016493869873321, 0.6707859220301329, 0.643227617470753, 0.5906576769715051, 0.5942542353216148, 0.6045773155527691, 0.5682231426443706, 0.5402410542881484, 0.5453841505175364, 0.5303711766469842, 0.5257285279156021, 0.512934506659841, 0.4744810997069929, 0.4916823779854871, 0.467789207439633, 0.4660446131470307, 0.44205562412746674], "accuracy": [0.29441288113594055, 0.45330867171287537, 0.5762779116630554, 0.6276581883430481, 0.6900013089179993, 0.7309470176696777, 0.7257958054542542, 0.7466648817062378, 0.7511557340621948, 0.7705719470977783, 0.7711002230644226, 0.7701756954193115, 0.7796856164932251, 0.7927618622779846, 0.7954035401344299, 0.800818920135498, 0.8039889335632324, 0.8038568496704102, 0.8256505131721497, 0.8132346868515015, 0.8210275769233704, 0.8256505131721497, 0.8348963260650635], "val_loss": [1.4034477983202254, 1.018904685974121, 0.8721774305616107, 0.7235685586929321, 0.7245088985988072, 0.5727737460817609, 0.5294498205184937, 0.5049781118120465, 0.5402528047561646, 0.45366684028080534, 0.5376054559435163, 0.5161032336098808, 0.487355147089277, 0.46884134837559294, 0.460771986416408, 0.436960050037929, 0.4125337856156485, 0.4170369505882263, 0.4274424229349409, 0.4212563293320792, 0.4116771136011396, 0.442305326461792, 0.4114146147455488], "val_accuracy": [0.36399999260902405, 0.5989999771118164, 0.612333357334137, 0.6743333339691162, 0.6913333535194397, 0.7246666550636292, 0.7636666893959045, 0.7726666927337646, 0.7416666746139526, 0.7929999828338623, 0.7436666488647461, 0.7796666622161865, 0.7789999842643738, 0.7979999780654907, 0.7950000166893005, 0.8036666512489319, 0.815666675567627, 0.8316666483879089, 0.8069999814033508, 0.8186666369438171, 0.8236666917800903, 0.7993333339691162, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 5, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [78, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.772857129573822, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2044648901818844, 2.12612417134406, 1.8682466179640254, 2.1287704897027653, 1.5357828890375096, 1.3441715028465164, 0.8903822637174297, 0.7980210234255697, 0.7534940236626584, 0.6870540345916502, 0.6743522401278628, 0.6652603616268564, 0.6120783549022083, 0.6329895315342229, 0.5896640115835411, 0.5800109460699938], "accuracy": [0.258090078830719, 0.22414475679397583, 0.37485140562057495, 0.29058247804641724, 0.49768856167793274, 0.5493329763412476, 0.6758684515953064, 0.7094175219535828, 0.7161537408828735, 0.7362303733825684, 0.7515519857406616, 0.7516840696334839, 0.7667415142059326, 0.7655527591705322, 0.7790252566337585, 0.7759873270988464], "val_loss": [2.0112583296639577, 1.6334053788866316, 1.8833065032958984, 1.4113780430385046, 1.3933303356170654, 0.6724262237548828, 0.7079486846923828, 0.5640472343989781, 0.5243841579982212, 0.5475533519472394, 0.48044962542397635, 0.4979020527430943, 0.49297148840767996, 0.4775739737919399, 0.5139469589505877, 0.4879513808659145], "val_accuracy": [0.09833333641290665, 0.4726666808128357, 0.39899998903274536, 0.42633333802223206, 0.4806666672229767, 0.7083333134651184, 0.6913333535194397, 0.7486666440963745, 0.7646666765213013, 0.7459999918937683, 0.7826666831970215, 0.7609999775886536, 0.7803333401679993, 0.7760000228881836, 0.762666642665863, 0.7646666765213013]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [38, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [0, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [75, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3026233100777747, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1], [2, 6, 6, 2, 4, 5, 1, 0, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 4, 3, 1, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 4, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 18, 18, 10, 8, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha))))), tf.math.subtract(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, beta))", "other_info": {"loss": [2.3026233100777747, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [99, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 0, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 0, 2, 1, 0, 0, 2, 2], [91, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5484985421598547, 5.453658134048295, 12.417211008582054, 23.83721728231047, 39.88509807906619, 61.750810934804164], "accuracy": [0.09760929644107819, 0.09800554811954498, 0.09893012791872025, 0.10474177449941635, 0.1022322028875351, 0.0952318087220192], "val_loss": [2.606985432761056, 5.745291709899902, 11.506774629865374, 20.083948407854354, 31.872717721121653, 47.29089573451451], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 8, 9, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [89, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12468630075454712, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 2, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 9, 4, 6, 8, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 0, 3, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 12, 12, 7, 5, 2, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [22545906.831940837, 438325240.2905825, 2044089520.5050852, 5736518166.384361, 12278155935.125082, 22726191850.325718], "accuracy": [0.10513802617788315, 0.09840179979801178, 0.10011887550354004, 0.10460969805717468, 0.10210011899471283, 0.0956280529499054], "val_loss": [87319618.28571428, 697761920.0, 2354058313.142857, 5578944658.285714, 10895192649.142857, 18825458249.142857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [59, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [99, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [2.303026746686392, 2.323832909444603, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.07713644206523895, 0.09060890227556229, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9766003744942802, 2.023318358830043, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01600000075995922, 0.09566666930913925, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 8, 9, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 5, 6, 0, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 5, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 2, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 0, 1, 1, 1, 2, 1, 2, 2], [51, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 5, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 10, 10, 6, 4, 2, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.square(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3016294297163022, 2.302767942767684, 2.3029135251325497, 2.3033175825868, 2.3030359604260737, 2.302795891213206], "accuracy": [0.09034473448991776, 0.08770307898521423, 0.08677849918603897, 0.09087307006120682, 0.09153348207473755, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [2, 2, 4, 5, 4, 5, 1, 4, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8, 2, 0, 1, 5, 2, 7, 4, 3, 8, 9, 0, 8, 3], [2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 3, 1, 2, 2, 1, 1, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 0, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 2, 3, 3, 0, 3, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 51, 51, 32, 19, 1, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), alpha))), tf.math.add(alpha, grad)))), alpha))))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), grad)), grad)), tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))))))), tf.math.add(alpha, alpha))))), grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(grad, beta))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016294297163022, 2.302767942767684, 2.3029135251325497, 2.3033175825868, 2.3030359604260737, 2.302795891213206], "accuracy": [0.09034473448991776, 0.08770307898521423, 0.08677849918603897, 0.09087307006120682, 0.09153348207473755, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [2, 8, 6, 2, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 0, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 9, 80, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 8, 8, 6, 7, 4, 5, 6], [2, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 22, 22, 13, 9, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(alpha), alpha))), tf.math.add(alpha, alpha))), grad))), tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3016294297163022, 2.302767942767684, 2.3029135251325497, 2.3033175825868, 2.3030359604260737, 2.302795891213206], "accuracy": [0.09034473448991776, 0.08770307898521423, 0.08677849918603897, 0.09087307006120682, 0.09153348207473755, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]