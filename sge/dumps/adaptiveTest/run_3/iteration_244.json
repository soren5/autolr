[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8014285564422607, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(alpha)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9924909357759442, 1.4031243419697603, 1.0171148192455834, 0.9146153002981308, 0.792528018754912, 0.7785970116918113, 0.733539001446642, 0.7115199248379154, 0.6915816203430896, 0.6385232716141407, 0.6296283451478872, 0.6393832531918183, 0.6112092942011245, 0.5942520155819762, 0.5663808169555135, 0.56973574017773, 0.5887678243842784, 0.5441680526090982, 0.5447569204485254, 0.5242933273913759, 0.5129384958843246, 0.5098121254443493, 0.48656554474271346, 0.49585468687432993, 0.4815003802480006, 0.4938505389954609, 0.469029505821881], "accuracy": [0.32465988397598267, 0.497820645570755, 0.6189407110214233, 0.653150200843811, 0.707040011882782, 0.705058753490448, 0.7243428826332092, 0.7248712182044983, 0.737947404384613, 0.7565711140632629, 0.759609043598175, 0.7515519857406616, 0.7721568942070007, 0.7714964747428894, 0.7854973077774048, 0.7848368883132935, 0.7726852297782898, 0.7932901978492737, 0.7928939461708069, 0.8006868362426758, 0.8047813773155212, 0.8086118102073669, 0.8152159452438354, 0.8096684813499451, 0.8138951063156128, 0.813498854637146, 0.8272355198860168], "val_loss": [1.5326111316680908, 0.7641643626349313, 0.6908126728875297, 0.6234629665102277, 0.6475823266165597, 0.6279748337609428, 0.5721081324986049, 0.5682026488440377, 0.5236571856907436, 0.539515665599278, 0.5482241426195417, 0.5032509565353394, 0.5057310887745449, 0.5077345541545323, 0.45449386324201313, 0.5581522839409965, 0.45638082708631245, 0.44933557510375977, 0.44456604548863005, 0.46389096123831614, 0.43221808331353323, 0.42100331612995695, 0.43799757957458496, 0.41508367231913973, 0.41766575404575895, 0.4156116247177124, 0.4406988961356027], "val_accuracy": [0.3243333399295807, 0.6493333578109741, 0.6786666512489319, 0.7319999933242798, 0.6993333101272583, 0.7076666951179504, 0.7289999723434448, 0.749666690826416, 0.7639999985694885, 0.7409999966621399, 0.7356666922569275, 0.7713333368301392, 0.7720000147819519, 0.768666684627533, 0.8013333082199097, 0.7336666584014893, 0.7940000295639038, 0.7996666431427002, 0.8069999814033508, 0.7883333563804626, 0.8059999942779541, 0.8263333439826965, 0.8019999861717224, 0.8173333406448364, 0.8143333196640015, 0.8146666884422302, 0.8063333630561829]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 4, 0, 3, 2, 8, 1, 0, 0, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.795714259147644, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2611934186413682, 2.237626276909321, 1.8794927437228928, 1.6003920804586675, 1.015569688881456, 0.8244034412703605, 0.7417974469920254, 0.6882903224378608, 0.650342543804414, 0.6263195602822345, 0.6154473889552685, 0.6050221106049061, 0.5572663388468286, 0.6180598295013651, 0.5492968477073552, 0.5502006284682947, 0.5617576597263123], "accuracy": [0.23946638405323029, 0.2156914472579956, 0.3953242599964142, 0.462950736284256, 0.6346585750579834, 0.6929071545600891, 0.717870831489563, 0.7367587089538574, 0.7539294958114624, 0.7577598690986633, 0.7670056819915771, 0.7734777331352234, 0.7957997918128967, 0.7709681391716003, 0.7943468689918518, 0.7927618622779846, 0.7840443849563599], "val_loss": [1.969339166368757, 1.6938867568969727, 1.1376689161573137, 0.9706737654549735, 0.593860558101109, 0.5813656364168439, 0.5403471333639962, 0.5395169598715646, 0.5005002021789551, 0.5482303585324969, 0.49982753821781706, 0.45660643918173655, 0.514180166380746, 0.49179909910474506, 0.4862657444817679, 0.4845425401415144, 0.4961058923176357], "val_accuracy": [0.2590000033378601, 0.45133334398269653, 0.5260000228881836, 0.6019999980926514, 0.7426666617393494, 0.7409999966621399, 0.7516666650772095, 0.7566666603088379, 0.7663333415985107, 0.7603333592414856, 0.7833333611488342, 0.7993333339691162, 0.765999972820282, 0.7853333353996277, 0.7699999809265137, 0.7540000081062317, 0.7746666669845581]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 8, 0, 5, 2, 1, 2, 0, 0, 2, 5, 8, 1, 8, 9], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7851428389549255, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2612157367743584, 2.2384727666595623, 1.9657127924599054, 1.7785404444591102, 1.0648396681517407, 0.8641978827260977, 0.728907208818376, 0.7011503672335268, 0.6868419330731957, 0.6317054752849427, 0.6041600946122944, 0.6003921195941437, 0.6086419862904774, 0.5765716262135161, 0.551882555936353, 0.5496829733431631, 0.5453267640299754, 0.5076106354513535], "accuracy": [0.23973055183887482, 0.2160876989364624, 0.3465856611728668, 0.4209483563899994, 0.6096948981285095, 0.6760005354881287, 0.7302865982055664, 0.7312111854553223, 0.7390040755271912, 0.7626469135284424, 0.7700436115264893, 0.7707040309906006, 0.7688548564910889, 0.7795535326004028, 0.7872143983840942, 0.7924976944923401, 0.7928939461708069, 0.8072909712791443], "val_loss": [1.9692623274666923, 1.7174834523882185, 1.5766824994768416, 0.9540343625204903, 0.7369924783706665, 0.5740185805729457, 0.5556005920682635, 0.6642279284340995, 0.4905095100402832, 0.5202147449765887, 0.5149824789592198, 0.5726175648825509, 0.4701727969305856, 0.4943477766854422, 0.4515421390533447, 0.45026467527662006, 0.43759039470127653, 0.46230019841875347], "val_accuracy": [0.2593333423137665, 0.44433334469795227, 0.45766666531562805, 0.6223333477973938, 0.6836666464805603, 0.7483333349227905, 0.75, 0.687333345413208, 0.7713333368301392, 0.7636666893959045, 0.7630000114440918, 0.7379999756813049, 0.7973333597183228, 0.777999997138977, 0.7929999828338623, 0.793666660785675, 0.7926666736602783, 0.7919999957084656]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 8, 0, 5, 2, 1, 2, 0, 0, 2, 5, 8, 1, 8, 9], [4, 1, 5, 3, 1, 0, 4, 0, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [17, 9, 76, 58]], "fitness": -0.62371426820755, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3015076435788466, 2.299318362031835, 2.2949251912887525, 2.294046175525551, 2.2909369887519646, 2.287066985902344, 2.2842935553757173, 2.2821805792682444, 2.279585068708618, 2.276214509828452, 2.2754369481774117, 2.2703943174150814, 2.265777898518133, 2.2647079582211838, 2.2597240581960882, 2.257705860763981, 2.2549880182328965, 2.2511410420644142, 2.2482790068990566, 2.245269089956892, 2.2408073825166053, 2.2383219368815848, 2.2325849247772336, 2.230943058334117, 2.2229571925997025, 2.2212533895696365, 2.2160196603800975, 2.21194404425827, 2.20853159620053, 2.202943319720741, 2.196267666455824, 2.193638937080604, 2.18869870119343, 2.1830919984624275, 2.177119044044534, 2.1731810573542107, 2.166234842711562, 2.15892523737348, 2.1551755968259387, 2.147942054194545, 2.1398300571905198, 2.1330806165717107, 2.1280868553198906, 2.1159487624351674, 2.1105898859447034, 2.1009838222717296, 2.0929813254636906, 2.08443898607349, 2.0760368489003564, 2.066975652927484, 2.0558228430384577, 2.0494575528515298, 2.0357325841659066, 2.0254121019761198, 2.011312699069153, 2.0050891197085177, 1.9945735879121376, 1.9842971127345939, 1.9720203885155394, 1.960763350154714, 1.9467408501980659, 1.934526622744127, 1.924425621467921, 1.9075363314052567, 1.8955544116490426, 1.8841500858888336, 1.8651724828311464, 1.8524156504649811, 1.843549745272746, 1.8246293175473993, 1.8118437817855328, 1.7947176691563438, 1.7793719843315363, 1.7643032896047917, 1.755283772780076, 1.7456220797953306, 1.7254841535350571, 1.7079326761963975, 1.6935317017823919, 1.6735291982040335, 1.6662741087336723, 1.6437765776504851, 1.6402000847777292, 1.6252607006233728, 1.6072085730671457, 1.5970197419259904, 1.5815079394994143, 1.565805373017373, 1.5581172730676753, 1.5379764639454243, 1.53073786618514, 1.5269208177205766, 1.5068898309002998, 1.4979968884869526, 1.4906189033557176, 1.479781370955908, 1.4618888674883275, 1.445556486901543, 1.4373091862044551, 1.428173070853932], "accuracy": [0.09377889335155487, 0.09694888442754745, 0.1072513535618782, 0.10857218503952026, 0.12455421686172485, 0.13247919082641602, 0.13802668452262878, 0.1422533392906189, 0.14542332291603088, 0.1604807823896408, 0.1604807823896408, 0.1760665625333786, 0.19072777032852173, 0.186104878783226, 0.20380398631095886, 0.20221899449825287, 0.2122572958469391, 0.22057852149009705, 0.22137102484703064, 0.23761722445487976, 0.2440892904996872, 0.2452780306339264, 0.260071337223053, 0.25795799493789673, 0.2712983787059784, 0.2690529525279999, 0.2925637364387512, 0.2880729138851166, 0.28860124945640564, 0.29612997174263, 0.31184783577919006, 0.31145158410072327, 0.31726324558258057, 0.33245277404785156, 0.3292827904224396, 0.3295469582080841, 0.3311319649219513, 0.33760401606559753, 0.34803855419158936, 0.3486989736557007, 0.3497556447982788, 0.3657376766204834, 0.35781270265579224, 0.37022849917411804, 0.37604016065597534, 0.38766345381736755, 0.38264429569244385, 0.38185179233551025, 0.3843613862991333, 0.3879276216030121, 0.4019284248352051, 0.39426758885383606, 0.4031171500682831, 0.402588814496994, 0.41751420497894287, 0.4053625762462616, 0.4155329465866089, 0.41830670833587646, 0.41791045665740967, 0.43059042096138, 0.4290054142475128, 0.4319112300872803, 0.43125081062316895, 0.44010037183761597, 0.43983620405197144, 0.43626996874809265, 0.4443270266056061, 0.44564786553382874, 0.44987452030181885, 0.4531765878200531, 0.45608243346214294, 0.46070531010627747, 0.47193238139152527, 0.4784044325351715, 0.46730947494506836, 0.4651961326599121, 0.47589486837387085, 0.4819706678390503, 0.48514068126678467, 0.4880464971065521, 0.49491479992866516, 0.4897635579109192, 0.4896314740180969, 0.4928014874458313, 0.5016510486602783, 0.4971602261066437, 0.5074626803398132, 0.5031039714813232, 0.5065380930900574, 0.5144630670547485, 0.5135384798049927, 0.5081230998039246, 0.5184255838394165, 0.520671010017395, 0.5159159898757935, 0.527010977268219, 0.5263505578041077, 0.5300488471984863, 0.5363888740539551, 0.5325584411621094], "val_loss": [1.9684638977050781, 1.965782710484096, 1.9630817004612513, 1.960411208016532, 1.9577772276742118, 1.955094337463379, 1.9523974827357702, 1.9497360501970564, 1.9470577921186174, 1.9443330083574568, 1.9416136060442244, 1.9388587134225028, 1.9360308647155762, 1.933159010750907, 1.9302312987191337, 1.9272192546299525, 1.9241702216012138, 1.9210817473275321, 1.917914731161935, 1.9146545273917062, 1.9112743650163924, 1.9077886172703333, 1.9041901997157507, 1.9005568368094308, 1.8967087609427316, 1.8927959033421107, 1.8887057304382324, 1.884551661355155, 1.8802497046334403, 1.8757801055908203, 1.871095929827009, 1.866316863468715, 1.8613683155604772, 1.856248106275286, 1.8508786473955428, 1.8454388890947615, 1.8397446359906877, 1.833831446511405, 1.8277504103524345, 1.821441922869001, 1.8148018292018346, 1.8080387115478516, 1.8010601316179549, 1.7937496049063546, 1.7862316540309362, 1.7783875465393066, 1.770289421081543, 1.7619408198765345, 1.753301007407052, 1.7444441659109933, 1.735259941646031, 1.7258868217468262, 1.7160203797476632, 1.7059012140546526, 1.6954237392970495, 1.6847952433994837, 1.6738383088793074, 1.6626739842551095, 1.651099477495466, 1.639322212764195, 1.6272145339420863, 1.6148131574903215, 1.6023309230804443, 1.5894805703844344, 1.576284612928118, 1.5629770415169852, 1.549433640071324, 1.5357619694301061, 1.5219460896083288, 1.5079402923583984, 1.4937497888292586, 1.4792939935411726, 1.4647440229143416, 1.4500682353973389, 1.4354568549564906, 1.4210421017238073, 1.406320640019008, 1.391622713633946, 1.3769329956599645, 1.3620788710457938, 1.347285440989903, 1.332489354269845, 1.3180477278573173, 1.3037604263850622, 1.289487259728568, 1.275369712284633, 1.2614664350237166, 1.2475693907056535, 1.2340747288295202, 1.2207099028996058, 1.207643951688494, 1.1950609683990479, 1.182605539049421, 1.1704713957650321, 1.15874297278268, 1.1471454756600517, 1.13563449042184, 1.124333347593035, 1.1133525030953544, 1.1026099068777901], "val_accuracy": [0.05166666582226753, 0.0689999982714653, 0.09366666525602341, 0.11833333224058151, 0.14499999582767487, 0.17366667091846466, 0.19699999690055847, 0.21666666865348816, 0.23766666650772095, 0.2606666684150696, 0.28066667914390564, 0.3009999990463257, 0.3109999895095825, 0.32499998807907104, 0.3356666564941406, 0.3466666638851166, 0.3526666760444641, 0.359333336353302, 0.36500000953674316, 0.3726666569709778, 0.37966665625572205, 0.3843333423137665, 0.3889999985694885, 0.39533331990242004, 0.4026666581630707, 0.4116666615009308, 0.4183333218097687, 0.4233333468437195, 0.4286666810512543, 0.43066665530204773, 0.4350000023841858, 0.43833333253860474, 0.4429999887943268, 0.44600000977516174, 0.4490000009536743, 0.45399999618530273, 0.4583333432674408, 0.4606666564941406, 0.46299999952316284, 0.46799999475479126, 0.4726666808128357, 0.4779999852180481, 0.48100000619888306, 0.4873333275318146, 0.4906666576862335, 0.49533334374427795, 0.49799999594688416, 0.503000020980835, 0.5053333044052124, 0.5096666812896729, 0.5136666893959045, 0.5183333158493042, 0.5210000276565552, 0.5223333239555359, 0.5253333449363708, 0.5273333191871643, 0.531333327293396, 0.5306666493415833, 0.5339999794960022, 0.5353333353996277, 0.5393333435058594, 0.5400000214576721, 0.5423333048820496, 0.5423333048820496, 0.5429999828338623, 0.5453333258628845, 0.5463333129882812, 0.5486666560173035, 0.5509999990463257, 0.5519999861717224, 0.5523333549499512, 0.5533333420753479, 0.5546666383743286, 0.5576666593551636, 0.5616666674613953, 0.5630000233650208, 0.5630000233650208, 0.5636666417121887, 0.5640000104904175, 0.5669999718666077, 0.5693333148956299, 0.5746666789054871, 0.5776666402816772, 0.5789999961853027, 0.5786666870117188, 0.581333339214325, 0.5826666951179504, 0.5860000252723694, 0.5886666774749756, 0.5913333296775818, 0.5926666855812073, 0.5950000286102295, 0.5993333458900452, 0.5993333458900452, 0.6033333539962769, 0.6056666374206543, 0.6110000014305115, 0.6119999885559082, 0.6173333525657654, 0.6243333220481873]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [5, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 2, 3, 1, 0, 4, 1, 2, 3, 4, 4], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.17114286124706268, "mapping_values": [1, 1, 1, 0, 1, 0, 30, 30, 18, 12, 2, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(beta, grad))))), tf.math.add(beta, tf.math.negative(grad))))))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(alpha)))", "other_info": {"loss": [4.2692337964173435, 2.3093851437705335, 2.304239537344003, 2.3031857825226205, 2.303017701486697, 2.3029495613875093, 2.30285822279213, 2.3029421906287975, 2.3031104075800015, 2.302825620444916, 2.303056000655495, 2.3030878603182856, 2.302944218178687], "accuracy": [0.18201030790805817, 0.09959053993225098, 0.10355303436517715, 0.09879804402589798, 0.10130762308835983, 0.09708096832036972, 0.0952318087220192, 0.09430722147226334, 0.09021265059709549, 0.10077928751707077, 0.09959053993225098, 0.09034473448991776, 0.10011887550354004], "val_loss": [1.9833961895533971, 1.9758238792419434, 1.9741347857883997, 1.9737073353358678, 1.9737001146589006, 1.9736640793936593, 1.9736344473702567, 1.97367034639631, 1.9735972540719169, 1.9736424854823522, 1.9735562460763114, 1.9735894884381975, 1.9735165323529924], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10300000011920929, 0.10233332961797714, 0.10066666454076767, 0.10000000149011612, 0.09833333641290665, 0.11699999868869781, 0.10566666722297668, 0.10133333504199982, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 5, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.1582857072353363, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(alpha), sigma)", "other_info": {"loss": [4.269190920090489, 2.3093999349493095, 2.304280782120654, 2.303176135119981, 2.302994036261967, 2.3028859500761567, 2.302949013664045, 2.3029979260023543], "accuracy": [0.1818782240152359, 0.09959053993225098, 0.10342095047235489, 0.1002509593963623, 0.09998679161071777, 0.09813763201236725, 0.09549596905708313, 0.09298639744520187], "val_loss": [1.9833979606628418, 1.975827762058803, 1.974121161869594, 1.9737061773027693, 1.9737072672162737, 1.9736551557268416, 1.9736191204616003, 1.9736593791416712], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10533333569765091, 0.10233332961797714, 0.10066666454076767, 0.09666666388511658, 0.09833333641290665, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 5, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [86, 9, 76, 58]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [4.28828540454215, 2.309422687280605, 2.304244116800903, 2.303167949719845, 2.303005833683107, 2.302961317051545], "accuracy": [0.18214239180088043, 0.09959053993225098, 0.10408136248588562, 0.09853387624025345, 0.1002509593963623, 0.09642054885625839], "val_loss": [1.9837921687534876, 1.9758126395089286, 1.974125930241176, 1.9737049511500768, 1.973691531590053, 1.9736595835004533], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 2, 0, 4, 2, 4, 3, 5, 9, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.380074509918068, Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03566239774227142, 0.06736230105161667, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2576285089765276, 3.27258610141381e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.008333333767950535, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [9, 0, 0, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025286480451794, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [7, 9, 3, 0, 0, 2, 4, 1, 0, 2, 5, 2, 9, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 0, 4, 0, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 5, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 0, 4, 0, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08083476126194, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 0, 8, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 0, 3, 1, 0, 4, 0, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 3, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [95705886.66479428, 1810426174.6221106, 8445221291.399287, 23559769692.71589, 50138209656.94994, 92541810336.07185], "accuracy": [0.09457138925790787, 0.09734513610601425, 0.09853387624025345, 0.0956280529499054, 0.10091137140989304, 0.09840179979801178], "val_loss": [359688566.85714287, 2875481526.857143, 9702472265.142857, 22995771977.142857, 44910346240.0, 77601350802.28572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 8, 4, 0, 3, 2, 2, 6, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 5, 3, 3, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 46, 46, 27, 19, 2, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(alpha, beta)), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.math.square(grad)), beta)))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), grad), tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025286480451794, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 2, 0, 8, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 5, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 3, 0, 8, 2, 4, 3, 2, 0, 9, 5, 8, 1, 8, 9], [2, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [75, 9, 76, 58]], "fitness": -0.09485714137554169, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, alpha))), grad)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [4.353801774720411, 2.309050325452376, 2.3041618967793163, 2.3031960724367204, 2.302975080992961, 2.3029924929181362], "accuracy": [0.18280279636383057, 0.09998679161071777, 0.10408136248588562, 0.09536388516426086, 0.09893012791872025, 0.0944393053650856], "val_loss": [1.98275545665196, 1.9758009910583496, 1.9741326059613908, 1.9737177576337541, 1.9736996378217424, 1.97366121837071], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 9, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 3, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.03885714337229729, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.302703513256421, 2.3033817611460545, 2.301917509301432, 2.3038078220749356, 2.303434686197219, 2.302545715364026, 2.302739957855551, 2.3032718484175914, 2.303408445069315, 2.303102529469325, 2.3049633897227886, 2.302864750913893, 2.301624580853651, 2.303360742427386, 2.301578535206676, 2.303005773094368], "accuracy": [0.09126931428909302, 0.08730682730674744, 0.09047681838274002, 0.08889182657003403, 0.09140139818191528, 0.0940430611371994, 0.09153348207473755, 0.08809932321310043, 0.08625016361474991, 0.09034473448991776, 0.0874389111995697, 0.09008057415485382, 0.09047681838274002, 0.09021265059709549, 0.09536388516426086, 0.08651433140039444], "val_loss": [1.9711695398603166, 1.9711480140686035, 1.97113071169172, 1.9711064611162459, 1.971085480281285, 1.9710643632071358, 1.9710406575884138, 1.9710186549595423, 1.9709995133536202, 1.9709786687578474, 1.9709546225411552, 1.9709360940115792, 1.9709166118076868, 1.9708927018301827, 1.9708762168884277, 1.9708561897277832], "val_accuracy": [0.036666665226221085, 0.03700000047683716, 0.03700000047683716, 0.03733333200216293, 0.03766666725277901, 0.03766666725277901, 0.03766666725277901, 0.038333334028720856, 0.038333334028720856, 0.038333334028720856, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03866666555404663, 0.03799999877810478]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 9, 3, 0, 0, 2, 4, 1, 0, 2, 5, 2, 9, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 1, 3, 1, 3, 4, 1, 2, 5], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 18, 10, 3, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(beta, tf.math.negative(tf.math.add(beta, grad)))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [2.302713189000986, 2.3034174514405716, 2.3019706565847864, 2.3038973632883546, 2.3035476031698305, 2.302688780965869], "accuracy": [0.09126931428909302, 0.0874389111995697, 0.09047681838274002, 0.08849557489156723, 0.09100515395402908, 0.0940430611371994], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 2, 0, 8, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [2, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.302713189000986, 2.3034174514405716, 2.3019706565847864, 2.3038973632883546, 2.3035476031698305, 2.302688780965869], "accuracy": [0.09126931428909302, 0.0874389111995697, 0.09047681838274002, 0.08849557489156723, 0.09100515395402908, 0.0940430611371994], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [0, 4, 5, 9, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 1, 3, 1, 3, 4, 1, 2, 3, 3, 2], [98, 42, 0, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [57, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(alpha, grad)))), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))))))), tf.math.add(beta, grad))))), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.302713189000986, 2.3034174514405716, 2.3019706565847864, 2.3038973632883546, 2.3035476031698305, 2.302688780965869], "accuracy": [0.09126931428909302, 0.0874389111995697, 0.09047681838274002, 0.08849557489156723, 0.09100515395402908, 0.0940430611371994], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]