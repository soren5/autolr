[{"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9689990831734623, 1.3415039767363697, 1.003662815238538, 0.8714558160567973, 0.8220141546963354, 0.7243597023932059, 0.7286011297720739, 0.7020416488626677, 0.6936714614245397, 0.6401735059636506, 0.6344820984114335, 0.6281692071078145, 0.6069973782147745, 0.5715967946284956, 0.578855122510295, 0.5704051241772664, 0.54667114972155, 0.5461982965248923, 0.5319169932242477, 0.5279029621077787, 0.5198364363307446, 0.504118927694063, 0.49323193775176244, 0.48953414387659483, 0.4703381863158093, 0.5051499059675486, 0.4615308852117642, 0.4667850655768416, 0.4382066777306399, 0.4324031005430341, 0.44247418581817477, 0.42425526361880506, 0.41326453127267104, 0.42592539487812797, 0.39928627244438303, 0.4196688998187963, 0.3982964417544244, 0.39216089840688567, 0.3983888760486598, 0.3727864786075201, 0.39555137265060775, 0.38087031552269157], "accuracy": [0.3427552580833435, 0.5260863900184631, 0.6259410977363586, 0.6724342703819275, 0.6800950765609741, 0.7231541275978088, 0.7201162576675415, 0.7305507659912109, 0.7316074371337891, 0.7563069462776184, 0.7625148296356201, 0.7569673657417297, 0.7700436115264893, 0.7810064554214478, 0.7800818681716919, 0.7819310426712036, 0.7947431206703186, 0.791441023349762, 0.8009510040283203, 0.7996301651000977, 0.8021397590637207, 0.8125742673873901, 0.8094043135643005, 0.8123101592063904, 0.8245938420295715, 0.8041210174560547, 0.8265751004219055, 0.8253863453865051, 0.8378021121025085, 0.8417646288871765, 0.8356888294219971, 0.8383304476737976, 0.8461233377456665, 0.8343679904937744, 0.8507462739944458, 0.8417646288871765, 0.8500858545303345, 0.8531237840652466, 0.850350022315979, 0.8643507957458496, 0.8469158411026001, 0.852331280708313], "val_loss": [1.429758071899414, 0.7980335610253471, 0.8491687263761248, 0.6573608602796283, 0.6041662182126727, 0.5905247926712036, 0.611041613987514, 0.6201371635709491, 0.5234982967376709, 0.5550936801092965, 0.5267409256526402, 0.517170889036996, 0.48717338698250906, 0.5518881763730731, 0.4800048896244594, 0.464780398777553, 0.475128173828125, 0.45734046186719624, 0.48746555192129953, 0.4315765840666635, 0.47535198075430735, 0.4281578574861799, 0.4088259679930551, 0.42267351491110666, 0.4008944034576416, 0.4284899149622236, 0.39832429374967304, 0.39201304742268156, 0.3892114077295576, 0.3961862751415798, 0.38728501967021395, 0.3743141634123666, 0.37355198178972515, 0.36933843578611103, 0.41106310061046053, 0.3774934836796352, 0.361883350781032, 0.38799491098948885, 0.3602013077054705, 0.3675916790962219, 0.3816831707954407, 0.381252612386431], "val_accuracy": [0.382666677236557, 0.6356666684150696, 0.6036666631698608, 0.6866666674613953, 0.7243333458900452, 0.7400000095367432, 0.7096666693687439, 0.7110000252723694, 0.7563333511352539, 0.7416666746139526, 0.7636666893959045, 0.7633333206176758, 0.7893333435058594, 0.7483333349227905, 0.7976666688919067, 0.7900000214576721, 0.7823333144187927, 0.8023333549499512, 0.768666684627533, 0.8240000009536743, 0.7866666913032532, 0.8106666803359985, 0.8246666789054871, 0.8036666512489319, 0.82833331823349, 0.8066666722297668, 0.8190000057220459, 0.8326666951179504, 0.8339999914169312, 0.8273333311080933, 0.8323333263397217, 0.8443333506584167, 0.8443333506584167, 0.8456666469573975, 0.8136666417121887, 0.8306666612625122, 0.8496666550636292, 0.8346666693687439, 0.843999981880188, 0.8493333458900452, 0.8353333473205566, 0.8326666951179504]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 0, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9689686231137016, 1.3398092004365105, 0.9963523876775667, 0.8804948293474671, 0.8423087893696257, 0.7311028351385076, 0.7247580069875862, 0.7056088941350133, 0.6791561113419771, 0.6343301439549803, 0.6345762565482043, 0.6313002794063827, 0.6101705004132545, 0.5798896438000681, 0.5629878002166622, 0.5675705148401892, 0.5500263171488221, 0.5393673758055824, 0.5285699076152449, 0.5260732890694857, 0.5252718484995309, 0.5027168213596843, 0.495791037474578, 0.48829643450172555, 0.47459065297323527, 0.49577649403966223, 0.46399415049491827, 0.46917731148093494, 0.43691366110275043, 0.4412636833577628, 0.4373234933306906, 0.42816418675446727, 0.41468571285293904, 0.42429253773099757, 0.4051232362987028, 0.41676798242430535, 0.38780246811410013, 0.4019646321297511, 0.4028311764535777, 0.3778789513508846, 0.39262788121128095, 0.38364770386937336], "accuracy": [0.34262317419052124, 0.5260863900184631, 0.6275261044502258, 0.6757363677024841, 0.6837934255599976, 0.7230220437049866, 0.7168141603469849, 0.7276449799537659, 0.7363624572753906, 0.759080708026886, 0.7635715007781982, 0.7588165402412415, 0.7662131786346436, 0.7724210619926453, 0.7840443849563599, 0.7829877138137817, 0.7902522683143616, 0.7909126877784729, 0.800818920135498, 0.8004226684570312, 0.800818920135498, 0.8128384351730347, 0.8092722296714783, 0.8125742673873901, 0.822348415851593, 0.8068947196006775, 0.8241975903511047, 0.8239334225654602, 0.8367455005645752, 0.8345000743865967, 0.837141752243042, 0.839519202709198, 0.8436138033866882, 0.8383304476737976, 0.8471800088882446, 0.845859169960022, 0.8519350290298462, 0.8469158411026001, 0.8450667262077332, 0.8650112152099609, 0.8504821062088013, 0.8498216867446899], "val_loss": [1.428588799067906, 0.8118271827697754, 0.8678435257502964, 0.6200839791979108, 0.5976171152932304, 0.5573819364820208, 0.5503215789794922, 0.5773961544036865, 0.5160721370152065, 0.5881170204707554, 0.5312958444867816, 0.5175752639770508, 0.5068948439189366, 0.5051696300506592, 0.47474004541124615, 0.483012284551348, 0.475402900150844, 0.4523887634277344, 0.44347236837659565, 0.440004757472447, 0.4527953011648996, 0.41556864976882935, 0.4101183329309736, 0.41773935726710726, 0.40913818563733784, 0.45885208674839567, 0.403497576713562, 0.3936272008078439, 0.39018258026668, 0.40317875146865845, 0.39925352164677214, 0.3805515595844814, 0.3787955812045506, 0.36646608795438496, 0.41738602944782804, 0.35756753172193256, 0.36678398506981985, 0.3871029445103237, 0.3646706427846636, 0.36616083553859163, 0.3921406183923994, 0.3838457294872829], "val_accuracy": [0.382999986410141, 0.6299999952316284, 0.5896666646003723, 0.7250000238418579, 0.7393333315849304, 0.753333330154419, 0.746666669845581, 0.7363333106040955, 0.7573333382606506, 0.7303333282470703, 0.7519999742507935, 0.7643333077430725, 0.7680000066757202, 0.7613333463668823, 0.796999990940094, 0.781333327293396, 0.781333327293396, 0.8046666383743286, 0.7983333468437195, 0.812333345413208, 0.7993333339691162, 0.8176666498184204, 0.8223333358764648, 0.809333324432373, 0.8199999928474426, 0.7876666784286499, 0.8176666498184204, 0.8299999833106995, 0.8336666822433472, 0.8196666836738586, 0.8263333439826965, 0.8373333215713501, 0.8339999914169312, 0.8420000076293945, 0.8136666417121887, 0.843999981880188, 0.8536666631698608, 0.8366666436195374, 0.8420000076293945, 0.8493333458900452, 0.8306666612625122, 0.8370000123977661]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9690012794207934, 1.3422150368766699, 1.0048040212058844, 0.8738544673148777, 0.8031388508519319, 0.7278523317669455, 0.7160125047444762, 0.6945584096912978, 0.6989452462816094, 0.6312465888870359, 0.6333438289431595, 0.6207677748744609, 0.6058125210287013, 0.5730639633926434, 0.5639997406752827, 0.5689882491054064, 0.5552746780150759, 0.5405603167938597, 0.5224337457209184, 0.5311934224028141, 0.5290779882434054, 0.49603214811938645, 0.49058977807470366, 0.4955459257882773, 0.47260563650844184, 0.4928490741299191, 0.46490753885777303, 0.47018002990986046, 0.43587083671118493, 0.43303937613058713, 0.4418739986740886, 0.4281758907771523, 0.4104783158134775, 0.4234674957686286, 0.40099958891425197, 0.4181660554782511, 0.3961773375439181, 0.3906982635124374, 0.4004205793571384, 0.36988152496063037, 0.396280165499448, 0.3811102515954257], "accuracy": [0.34262317419052124, 0.5263505578041077, 0.6269977688789368, 0.6740192770957947, 0.6979262828826904, 0.7250033020973206, 0.7281733155250549, 0.7338528633117676, 0.7310791015625, 0.7652885913848877, 0.7647602558135986, 0.7614582180976868, 0.7677981853485107, 0.7724210619926453, 0.7866860628128052, 0.7808743715286255, 0.7895918488502502, 0.7931581139564514, 0.8061022162437439, 0.7950072884559631, 0.8000264167785645, 0.816008448600769, 0.8113855719566345, 0.8095363974571228, 0.8241975903511047, 0.8087438941001892, 0.8264430165290833, 0.8214238286018372, 0.837141752243042, 0.8426892161369324, 0.8330471515655518, 0.8366134166717529, 0.8475762605667114, 0.8399154543876648, 0.8520671129226685, 0.8437458872795105, 0.8502179384231567, 0.8535200357437134, 0.8487650156021118, 0.86553955078125, 0.8470479249954224, 0.8525954484939575], "val_loss": [1.4299443449292863, 0.8014304467609951, 0.7877737283706665, 0.6650384494236538, 0.6019668919699532, 0.6052226339067731, 0.5421276433127267, 0.6112933158874512, 0.5249777691704887, 0.539165564945766, 0.5301029682159424, 0.5217705965042114, 0.49737112862723215, 0.5056960582733154, 0.47829786368778776, 0.48788353375026156, 0.47126381737845285, 0.45748952456883024, 0.46098361696515766, 0.43297663756779264, 0.4429275819233486, 0.4195129019873483, 0.4102069139480591, 0.41633239814213346, 0.40001570326941355, 0.4663372210093907, 0.39894455671310425, 0.3911661335400173, 0.3930941564696176, 0.4047092965670994, 0.395558306149074, 0.37674197128840853, 0.37242542845862253, 0.3677412782396589, 0.41452980041503906, 0.37706628016063143, 0.35856546674455914, 0.36984709330967497, 0.3579332062176296, 0.3805275559425354, 0.38619719232831684, 0.3858360392706735], "val_accuracy": [0.38233333826065063, 0.6330000162124634, 0.6356666684150696, 0.7133333086967468, 0.7233333587646484, 0.7263333201408386, 0.746999979019165, 0.7173333168029785, 0.7559999823570251, 0.7519999742507935, 0.7559999823570251, 0.762333333492279, 0.7743333578109741, 0.7609999775886536, 0.7906666398048401, 0.7836666703224182, 0.7889999747276306, 0.8033333420753479, 0.7933333516120911, 0.8149999976158142, 0.8016666769981384, 0.8143333196640015, 0.8199999928474426, 0.8116666674613953, 0.8306666612625122, 0.781000018119812, 0.8206666707992554, 0.8293333053588867, 0.8320000171661377, 0.8140000104904175, 0.824999988079071, 0.8373333215713501, 0.840666651725769, 0.8429999947547913, 0.8153333067893982, 0.8296666741371155, 0.8536666631698608, 0.8433333039283752, 0.8463333249092102, 0.8420000076293945, 0.8326666951179504, 0.8316666483879089]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 4, 6, 2, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 2, 2, 3, 0, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7154285907745361, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.029751159322575, 1.4574269916340188, 1.0311542095021329, 0.8849649752261789, 0.8935065197749397, 0.7431596592511515, 0.7538824561973998, 0.7107727171691055], "accuracy": [0.32479196786880493, 0.488971084356308, 0.613789439201355, 0.6728305220603943, 0.658961832523346, 0.7166820764541626, 0.707568347454071, 0.7314753532409668], "val_loss": [1.6664824826376778, 0.845072865486145, 0.7061304875782558, 0.7885075466973441, 0.6235054220472064, 0.6008863278797695, 0.5850417443684169, 0.6178262574332101], "val_accuracy": [0.32899999618530273, 0.5956666469573975, 0.7206666469573975, 0.609000027179718, 0.7183333039283752, 0.7066666483879089, 0.7173333168029785, 0.7083333134651184]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 8, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.12228571623563766, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [5.52457880822659, 5.40371571640848, 2.556251093570063, 12.666841928150518, 2.4880758009849995, 2.4949451559774944], "accuracy": [0.1916523575782776, 0.11927089840173721, 0.09826971590518951, 0.10394927859306335, 0.1006472036242485, 0.09760929644107819], "val_loss": [2.0714760507856096, 2.1034272057669505, 1.997161933353969, 2.1548912865774974, 2.166468756539481, 2.078289031982422], "val_accuracy": [0.10566666722297668, 0.09833333641290665, 0.10133333504199982, 0.09799999743700027, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.11057142913341522, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301781014554678, 2.3001484326430757, 2.3011255011409264, 2.301483709452222, 2.3022523824454706, 2.302408845716574, 2.3025479614616557, 2.3025799598739196, 2.302579600718736, 2.3025851114598312], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.09906221181154251, 0.10236428678035736, 0.09681680053472519, 0.1026284471154213, 0.10236428678035736, 0.09945846349000931, 0.1002509593963623, 0.09998679161071777], "val_loss": [1.9706743785313197, 1.9719130652291434, 1.9728597232273646, 1.9733272280011858, 1.9735804966517858, 1.9736380577087402, 1.973644529070173, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07866666465997696, 0.10000000149011612, 0.0820000022649765, 0.09700000286102295, 0.11400000005960464, 0.10533333569765091, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [304548422.75707936, 5842871611.004094, 26866547618.269714, 74867752348.65672, 160724814245.17764, 291050105927.2783], "accuracy": [0.09536388516426086, 0.09866596013307571, 0.10210011899471283, 0.09959053993225098, 0.10091137140989304, 0.09734513610601425], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 6, 0, 0, 3, 0, 2, 2, 5, 8, 2, 5, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 1, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 21, 21, 13, 8, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), alpha)))), grad)))), tf.math.add(beta, alpha))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [18, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 8, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(sigma), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 6, 4, 8, 6, 4, 1, 9, 5, 9, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 2, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 38, 38, 24, 14, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, grad))), grad), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.divide_no_nan(grad, grad))), tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad))))), tf.math.negative(grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [97.05093962115508, 3502.7011260845247, 29142.012974053956, 126828.71988921543, 385555.8167514199, 927085.6643607186], "accuracy": [0.09615638852119446, 0.09919429570436478, 0.1022322028875351, 0.09945846349000931, 0.10091137140989304, 0.09734513610601425], "val_loss": [429.7745622907366, 7309.532087053572, 42211.5390625, 149146.95982142858, 399655.02678571426, 897045.2857142857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 2, 1, 3, 6, 2, 5, 6, 6, 9, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 2, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.subtract(alpha, grad), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), alpha)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 9, 1, 4, 0, 0, 4, 0, 2, 2, 5, 8, 2, 5, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.pow(grad, alpha)))), grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, beta)), tf.math.square(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [228.03000628297923, 3483.560796916792, 15261.781910156766, 41768.71566875248, 88823.01755155362, 159928.8118189473], "accuracy": [0.09576013684272766, 0.09919429570436478, 0.10236428678035736, 0.09945846349000931, 0.10091137140989304, 0.09747721254825592], "val_loss": [731.7495640345982, 5252.545619419643, 17237.59988839286, 40344.32366071428, 78232.45535714286, 134560.5044642857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [73935380.27015553, 1417771874.3288865, 6518180787.3115835, 18162672293.88773, 38989894525.21041, 70603429023.1927], "accuracy": [0.09536388516426086, 0.09866596013307571, 0.10210011899471283, 0.09959053993225098, 0.10091137140989304, 0.09734513610601425], "val_loss": [276060818.28571427, 2206784877.714286, 7445998445.714286, 17647493705.142857, 34465285266.28571, 59552563200.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 5, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3027518879483955, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 8, 1, 5, 3, 6, 2, 5, 6, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 0, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(tf.math.sqrt(beta), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [304548422.75707936, 5842871611.004094, 26866547618.269714, 74867752348.65672, 160724814245.17764, 291050105927.2783], "accuracy": [0.09536388516426086, 0.09866596013307571, 0.10210011899471283, 0.09959053993225098, 0.10091137140989304, 0.09734513610601425], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 1, 6, 0, 0, 8, 0, 2, 5, 5, 8, 2, 5, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 1, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 17, 17, 12, 5, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), alpha), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.sqrt(alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 1, 6, 1, 5, 6, 6, 4, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 1, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.06971428543329239, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, grad), beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(grad, alpha))))), tf.math.add(beta, grad))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.302563472745787, 2.301142362256517, 2.3003908318141826, 2.299300024049976, 2.300165715518015, 2.299958815553862, 2.2998031830790806, 2.2995545460390234, 2.299960779775293, 2.3005978750310256, 2.299300464452014, 2.300196644589413, 2.299679966682078, 2.300224839137325, 2.3008117715459946, 2.299821105631288, 2.300446609385718, 2.2997300901338646], "accuracy": [0.09391097724437714, 0.0878351628780365, 0.09694888442754745, 0.10289261490106583, 0.0948355570435524, 0.0948355570435524, 0.1002509593963623, 0.0944393053650856, 0.10011887550354004, 0.09338264167308807, 0.09879804402589798, 0.09734513610601425, 0.10051512718200684, 0.09906221181154251, 0.09734513610601425, 0.09774138033390045, 0.09549596905708313, 0.09549596905708313], "val_loss": [1.9705209732055664, 1.9699696813310896, 1.96967990057809, 1.969609601157052, 1.9696494511195592, 1.9697026525224959, 1.9695895058768136, 1.9694792202540807, 1.969414506639753, 1.9694153240748815, 1.969503470829555, 1.9696903909955705, 1.9699136189052038, 1.9701814651489258, 1.9703938620431083, 1.9706215858459473, 1.970787865774972, 1.9709953580583846], "val_accuracy": [0.041333332657814026, 0.049666665494441986, 0.0560000017285347, 0.05900000035762787, 0.06133333221077919, 0.06400000303983688, 0.070333331823349, 0.07233333587646484, 0.07433333247900009, 0.07633333653211594, 0.07733333110809326, 0.07833333313465118, 0.08166666328907013, 0.0806666687130928, 0.08033332973718643, 0.07633333653211594, 0.07699999958276749, 0.07800000160932541]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 6, 0, 2, 4, 0, 2, 2, 5, 8, 2, 5, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.sqrt(beta)))))), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3029003390515124, 2.302328085933993, 2.3021993541352233, 2.3010293312233987, 2.302317810411293, 2.302018300149545], "accuracy": [0.09325055778026581, 0.08558975160121918, 0.09166556596755981, 0.09840179979801178, 0.09338264167308807, 0.09206181764602661], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]