[{"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.8259999752044678, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1591417861258773, 2.0407292434741255, 1.7148306948901515, 1.1466663795266374, 1.0421530912738388, 0.8102149890398447, 0.7405950655207862, 0.6918938905650189, 0.6491845065749726, 0.6642650318514197, 0.6070361540554033, 0.5982355609498775, 0.5733839984362734, 0.5849403550501717, 0.5471449408312641, 0.5592961141682414, 0.5055006604113709, 0.530905138259834, 0.4823568768709752, 0.492820345009984, 0.47808910476265487, 0.4550766644067201, 0.48974684571640414, 0.46324197114450805, 0.4492833156115532, 0.45824531051366557, 0.4255287401105561, 0.4435788448759751, 0.42460564171727844, 0.430972196473705, 0.40300040930537123, 0.40712785115410166, 0.43627918850256076], "accuracy": [0.25822216272354126, 0.3171311616897583, 0.43851539492607117, 0.6081098914146423, 0.6199973821640015, 0.6903975605964661, 0.7217012047767639, 0.7372870445251465, 0.7506273984909058, 0.7475894689559937, 0.7687227725982666, 0.7721568942070007, 0.7865539789199829, 0.7815347909927368, 0.7944789528846741, 0.7868181467056274, 0.8049134612083435, 0.7940827012062073, 0.81548011302948, 0.8121780753135681, 0.8191784620285034, 0.828820526599884, 0.8136309385299683, 0.828820526599884, 0.8330471515655518, 0.826310932636261, 0.8381983637809753, 0.8286884427070618, 0.8384625315666199, 0.8400475382804871, 0.8510104417800903, 0.8486329317092896, 0.8388587832450867], "val_loss": [1.6928466728755407, 1.7201728820800781, 1.1304995332445418, 0.7587176561355591, 0.6408747094018119, 0.559799075126648, 0.5538927146366665, 0.5401574543544224, 0.5412148748125348, 0.5368021556309291, 0.5149064915520805, 0.46905151435307096, 0.4727460486548288, 0.44844935621534077, 0.44231605529785156, 0.4255737577165876, 0.46761832918439594, 0.41882503032684326, 0.4290436591420855, 0.4107534033911569, 0.40106228419712614, 0.42888225827898296, 0.4752237967082432, 0.4024082933153425, 0.39840992859431673, 0.4183419006211417, 0.40300835030419485, 0.37865706852504183, 0.3888940555708749, 0.373677807194846, 0.3935501405170986, 0.41432710204805645, 0.39728916542870657], "val_accuracy": [0.29733332991600037, 0.2980000078678131, 0.6503333449363708, 0.6816666722297668, 0.7023333311080933, 0.7446666955947876, 0.7509999871253967, 0.7456666827201843, 0.7573333382606506, 0.7486666440963745, 0.7583333253860474, 0.7836666703224182, 0.7903333306312561, 0.8033333420753479, 0.8019999861717224, 0.812666654586792, 0.7826666831970215, 0.8140000104904175, 0.8216666579246521, 0.824999988079071, 0.8273333311080933, 0.8199999928474426, 0.8016666769981384, 0.8286666870117188, 0.8213333487510681, 0.8029999732971191, 0.8230000138282776, 0.8399999737739563, 0.8370000123977661, 0.8366666436195374, 0.8393333554267883, 0.8193333148956299, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 6, 5, 2, 5, 6, 5, 9, 1, 6, 5, 6, 3, 1, 8, 0, 0, 3, 0, 0, 0, 8, 3, 1, 3, 3, 8, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 0, 2, 0, 2, 0, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [19, 17, 35, 41, 27, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [20, 7, 76, 58]], "fitness": -0.7008571624755859, "mapping_values": [1, 12, 12, 7, 5, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.square(tf.math.divide_no_nan(tf.math.square(alpha), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3008422777873494, 2.297889687177008, 2.2892183032191395, 2.283943321411683, 2.278956044729533, 2.2754021192570058, 2.2695046636674383, 2.264331963776818, 2.257850101201636, 2.2509298240818825, 2.2446688871027187, 2.2392705243576345, 2.232854512420864, 2.2242391492082554, 2.216633973041656, 2.2100549987152567, 2.200353190285135, 2.1925621303537692, 2.181253832029928, 2.1702390166793943, 2.160108813866648, 2.14574948388194, 2.13881177550152, 2.12079168625669, 2.108150751866905, 2.093873791738099, 2.080390255291543, 2.059004081821303, 2.0435370514342783, 2.0232058393012076, 2.0055113907550637, 1.9831447421189674, 1.960011801022454, 1.9374732275397124, 1.916938146926377, 1.8941907115096603, 1.869005393232447, 1.8387074097666238, 1.8149900736038507, 1.7894741654821187, 1.7604327335522678, 1.7282993459682643, 1.707502199249056, 1.6819585587732417, 1.660600859743178, 1.6286934262741637, 1.607232738070248, 1.577450078003883, 1.5554805441366257, 1.534428932285422, 1.5138018991118645, 1.4907740482863907, 1.4706553136195488, 1.4436315042215835, 1.4317843071174596, 1.4055177178034584, 1.389336436463385, 1.3783668171633598, 1.3544090004046643, 1.3328937425620961, 1.3341129927067725, 1.3131502095057335, 1.3019478778482634, 1.2885361870502547, 1.2754026684762936, 1.2629441411629676, 1.2412807197776121, 1.2390841741320038, 1.2330112138743634, 1.2163609294150688, 1.2095521773959448, 1.2022284525827316, 1.1864764531999294, 1.1803910469319197, 1.173183057648615, 1.1698316911649018, 1.1582877467636261, 1.1525700851564378, 1.127894421232186, 1.128677367077622, 1.132891734624819, 1.1075084383744984, 1.1068628326682304, 1.0937771491717196, 1.0935176095595969, 1.091110030090993, 1.07725642143444, 1.077227690484089, 1.0582636305369784, 1.0622622436457432, 1.0546842812074726, 1.0481769537739922, 1.0490193506982017, 1.032937804485246, 1.0388180709329216, 1.0254916752712082, 1.0171909328417739, 1.0076980478554796, 1.0217306431116697, 1.0096063422111237], "accuracy": [0.09668471664190292, 0.10896842926740646, 0.12534672021865845, 0.14410249888896942, 0.15519747138023376, 0.16166952252388, 0.16933034360408783, 0.1912561058998108, 0.20499274134635925, 0.2215031087398529, 0.23378682136535645, 0.24105137586593628, 0.2588825821876526, 0.2723550498485565, 0.2864879071712494, 0.29124289751052856, 0.3086778521537781, 0.3105269968509674, 0.3209615647792816, 0.33126401901245117, 0.3431515097618103, 0.352529376745224, 0.3556993901729584, 0.3653414249420166, 0.3707568347454071, 0.37287017703056335, 0.38224804401397705, 0.39889049530029297, 0.39162594079971313, 0.404570072889328, 0.4069475531578064, 0.4201558530330658, 0.42504292726516724, 0.4295337498188019, 0.43309998512268066, 0.43349623680114746, 0.4373266398906708, 0.4551578462123871, 0.4554220139980316, 0.4640074074268341, 0.4733852744102478, 0.483819842338562, 0.4815744161605835, 0.48064985871315, 0.48646149039268494, 0.4971602261066437, 0.4979526996612549, 0.5005943775177002, 0.5025756359100342, 0.5136705636978149, 0.5149914026260376, 0.5149914026260376, 0.5255580544471741, 0.5329546928405762, 0.5326905250549316, 0.542728841304779, 0.5478800535202026, 0.544181764125824, 0.5536917448043823, 0.5551446080207825, 0.5548804402351379, 0.5638620853424072, 0.561880886554718, 0.5635979175567627, 0.5654470920562744, 0.5683529376983643, 0.5739004015922546, 0.5785233378410339, 0.5787875056266785, 0.5809007883071899, 0.5888257622718811, 0.5847312211990356, 0.5959582328796387, 0.5930524468421936, 0.5904107689857483, 0.6024303436279297, 0.603090763092041, 0.6004490852355957, 0.6061286330223083, 0.6118082404136658, 0.6067890524864197, 0.6153744459152222, 0.6168273687362671, 0.6213181614875793, 0.6166952848434448, 0.6160348653793335, 0.625148594379425, 0.6280544400215149, 0.6326773166656494, 0.6302998065948486, 0.6339981555938721, 0.6330735683441162, 0.6320168972015381, 0.640338122844696, 0.6310923099517822, 0.6435081362724304, 0.6406022906303406, 0.6440364718437195, 0.637828528881073, 0.6527539491653442], "val_loss": [1.9662707873753138, 1.9613675389971053, 1.9564949444362096, 1.9516260964529855, 1.9466941697256905, 1.9417034557887487, 1.9365660803658622, 1.931262629372733, 1.925846985408238, 1.9201980999537878, 1.914203371320452, 1.907939842769078, 1.9014395305088587, 1.8944458280290877, 1.8870635713849748, 1.8791743006025041, 1.8708614621843611, 1.8619978768484933, 1.8524977820260184, 1.8423536164419991, 1.8314267567225866, 1.8197131156921387, 1.8075168473379952, 1.7943416322980608, 1.7804344041006905, 1.7656802449907576, 1.7501607622419084, 1.733497074672154, 1.7158685752323695, 1.6971660341535295, 1.6775989873068673, 1.6571437631334578, 1.6356172561645508, 1.6131221907479423, 1.5898724283490862, 1.565909011023385, 1.5411425999232702, 1.515498467854091, 1.489384991782052, 1.4631428377968925, 1.4364896501813615, 1.409184285572597, 1.382430110658918, 1.3555990627833776, 1.3292928082602364, 1.303060565676008, 1.2772730418613978, 1.2518614360264368, 1.2272618157523019, 1.2033998285021101, 1.1805484294891357, 1.1583801678248815, 1.1371825081961495, 1.1163979939052038, 1.0969230447496687, 1.0779602868216378, 1.059919766017369, 1.0432240622384208, 1.0266975675310408, 1.010782173701695, 0.9964532511574882, 0.9824653693607875, 0.9690360341753278, 0.9565576144627163, 0.9443338598523822, 0.932734455381121, 0.9211963244846889, 0.9105650356837681, 0.9006247179848808, 0.890864372253418, 0.8814435686383929, 0.8727097340992519, 0.8640158687319074, 0.8558892181941441, 0.8482469831194196, 0.8408203295298985, 0.8336623396192279, 0.826539431299482, 0.8195700134549823, 0.8131147282464164, 0.8068337270191738, 0.8005846227918353, 0.7948225055422101, 0.7891654287065778, 0.7838858536311558, 0.7790010316031319, 0.7737110342298236, 0.7690744740622384, 0.763972316469465, 0.7595316512244088, 0.7554333209991455, 0.7507840394973755, 0.7467214720589774, 0.7425097397395543, 0.7387115955352783, 0.7349496058055333, 0.7312496559960502, 0.7275816713060651, 0.7243703433445522, 0.7207552875791278], "val_accuracy": [0.06566666811704636, 0.109333336353302, 0.1550000011920929, 0.20266667008399963, 0.2356666624546051, 0.2763333320617676, 0.31066668033599854, 0.3333333432674408, 0.351666659116745, 0.3633333444595337, 0.375, 0.3843333423137665, 0.3970000147819519, 0.4116666615009308, 0.42366665601730347, 0.429666668176651, 0.43700000643730164, 0.4436666667461395, 0.44999998807907104, 0.4573333263397217, 0.46266666054725647, 0.47099998593330383, 0.47999998927116394, 0.4873333275318146, 0.4946666657924652, 0.4986666738986969, 0.5043333172798157, 0.5130000114440918, 0.5173333287239075, 0.5226666927337646, 0.5263333320617676, 0.531000018119812, 0.5353333353996277, 0.5400000214576721, 0.5406666398048401, 0.5446666479110718, 0.546999990940094, 0.550000011920929, 0.5513333082199097, 0.5529999732971191, 0.5609999895095825, 0.5606666803359985, 0.5619999766349792, 0.5663333535194397, 0.5709999799728394, 0.5753333568572998, 0.5803333520889282, 0.5833333134651184, 0.5889999866485596, 0.5916666388511658, 0.5979999899864197, 0.6019999980926514, 0.612666666507721, 0.6179999709129333, 0.6243333220481873, 0.6303333044052124, 0.6366666555404663, 0.6393333077430725, 0.6470000147819519, 0.6516666412353516, 0.6556666493415833, 0.6576666831970215, 0.659333348274231, 0.6616666913032532, 0.6666666865348816, 0.6676666736602783, 0.671999990940094, 0.6743333339691162, 0.6763333082199097, 0.6779999732971191, 0.6806666851043701, 0.6806666851043701, 0.6806666851043701, 0.6830000281333923, 0.687666654586792, 0.687666654586792, 0.6880000233650208, 0.690666675567627, 0.6923333406448364, 0.6933333277702332, 0.6943333148956299, 0.6949999928474426, 0.6946666836738586, 0.6959999799728394, 0.6963333487510681, 0.6973333358764648, 0.6976666450500488, 0.6993333101272583, 0.699999988079071, 0.7009999752044678, 0.7020000219345093, 0.70333331823349, 0.7053333520889282, 0.7049999833106995, 0.7073333263397217, 0.7089999914169312, 0.7099999785423279, 0.7099999785423279, 0.7110000252723694, 0.7116666436195374]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 1, 6, 1, 2, 5, 3, 5, 1, 6, 5, 7, 3, 0, 0, 0, 0, 5, 0, 2, 0, 2, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 0, 0, 1, 2, 0, 2, 2, 0, 2, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 18, 30, 11, 72, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [19, 7, 76, 58]], "fitness": -0.6854285597801208, "mapping_values": [1, 17, 17, 9, 8, 3, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.square(tf.math.multiply(grad, tf.math.add(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012381318600865, 2.2992451646308765, 2.2915086015623953, 2.287182363772893, 2.283176157122133, 2.280638670231672, 2.2758461002503028, 2.2718437101862703, 2.266537818453961, 2.2608965172853925, 2.2562769463883887, 2.252403137281098, 2.2476162516193745, 2.241206533920496, 2.235779459072441, 2.231659193300946, 2.2244631733955442, 2.2196560534881704, 2.2116608546630756, 2.204280960466946, 2.198118641234471, 2.1883396835941853, 2.185374999830452, 2.1728806696579266, 2.165364664811122, 2.156620793637976, 2.1488217855913763, 2.1349964166093796, 2.1263445141041175, 2.1140387287827656, 2.103218504718392, 2.0894485742755147, 2.0751241402556126, 2.0615579594773483, 2.0494253197366286, 2.034912061540127, 2.019124570319272, 1.9994488725604287, 1.9842269655861764, 1.9663645432625527, 1.946769205696626, 1.9243790333722293, 1.907948039604956, 1.8886111785770014, 1.871568096973609, 1.8464697088469069, 1.8282570705563717, 1.8029604108499546, 1.7823581227599952, 1.7626676876090537, 1.741769179282581, 1.7181795624820013, 1.6990975058231497, 1.671680225703726, 1.6567069207042704, 1.6292889516241185, 1.6094360815740265, 1.5929003352769975, 1.5678208671336036, 1.5439917104371141, 1.5376534821760102, 1.5131080679968443, 1.4975600640503894, 1.480425430074769, 1.4639064610012298, 1.4469576511148763, 1.42265360036688, 1.4146146676197437, 1.4044136374995946, 1.3856640790888441, 1.3748727560263772, 1.3636011027735553, 1.3438414116703115, 1.3354844332308171, 1.3242752905361814, 1.3160664811346587, 1.3054747674852833, 1.2974876000691935, 1.2683125112696314, 1.2669722261272638, 1.2681584626046531, 1.2419960880166174, 1.239294077301101, 1.2229621305347291, 1.2206039506808688, 1.217030586252879, 1.203325206309797, 1.2006247561637042, 1.1815565417014755, 1.182997842175755, 1.1729441167435641, 1.1648897016840432, 1.163183876914182, 1.1459364653294979, 1.1494052264164814, 1.1363978557393946, 1.1255050570091567, 1.1139923962840095, 1.1261698537420177, 1.1135822136357099], "accuracy": [0.09496764093637466, 0.10632677376270294, 0.11834631860256195, 0.136045441031456, 0.14370624721050262, 0.14621582627296448, 0.15136705338954926, 0.17170783877372742, 0.18293488025665283, 0.19759608805179596, 0.20723815262317657, 0.21582353115081787, 0.23233389854431152, 0.24422137439250946, 0.254920095205307, 0.2631092369556427, 0.2743362784385681, 0.27922335267066956, 0.2895258367061615, 0.2977149784564972, 0.3051116168498993, 0.3185840845108032, 0.320169061422348, 0.33139610290527344, 0.3353586196899414, 0.33747193217277527, 0.3486989736557007, 0.3611147701740265, 0.35768061876296997, 0.36864352226257324, 0.37326639890670776, 0.3815876245498657, 0.38488972187042236, 0.3951921761035919, 0.3967771828174591, 0.39862632751464844, 0.40206050872802734, 0.41843879222869873, 0.41606128215789795, 0.4259675145149231, 0.4291374981403351, 0.4407607913017273, 0.4434024691581726, 0.43930789828300476, 0.4434024691581726, 0.4543653428554535, 0.45145952701568604, 0.45766741037368774, 0.45964866876602173, 0.46466779708862305, 0.4683661460876465, 0.4683661460876465, 0.4802536070346832, 0.486989825963974, 0.4880464971065521, 0.4963677227497101, 0.5004622936248779, 0.49927353858947754, 0.5087835192680359, 0.502971887588501, 0.5143309831619263, 0.523048460483551, 0.5242372155189514, 0.522520124912262, 0.5226522088050842, 0.5312376022338867, 0.5385021567344666, 0.5400871634483337, 0.5361247062683105, 0.5455026030540466, 0.5451063513755798, 0.5451063513755798, 0.559899628162384, 0.5591071248054504, 0.5555408596992493, 0.5670320987701416, 0.5600317120552063, 0.5649187564849854, 0.5694096088409424, 0.574560821056366, 0.5678246021270752, 0.5805045366287231, 0.5832782983779907, 0.5844670534133911, 0.5826178789138794, 0.5757495760917664, 0.5898824334144592, 0.5946374535560608, 0.5952978730201721, 0.591731607913971, 0.5964865684509277, 0.5958262085914612, 0.5980715751647949, 0.6009774208068848, 0.6001849174499512, 0.6050719618797302, 0.6061286330223083, 0.6111478209495544, 0.6062607169151306, 0.6201294660568237], "val_loss": [1.9671617916652135, 1.9631415094648088, 1.9591565813337053, 1.9551875931876046, 1.9511897223336356, 1.9471619469778878, 1.9430794034685408, 1.938925061907087, 1.9347124780927385, 1.9303877013070243, 1.9258548872811454, 1.9212355613708496, 1.9164998871939523, 1.9115005901881628, 1.906264100755964, 1.9007964134216309, 1.8951208932059151, 1.8891767774309431, 1.8829169273376465, 1.876312596457345, 1.869302749633789, 1.8618928364345007, 1.8542333330426897, 1.846045630318778, 1.8374936921255929, 1.828488486153739, 1.8190775598798479, 1.8090429306030273, 1.7984726088387626, 1.7872849191938127, 1.7756186894008092, 1.7634214673723494, 1.7505227497645788, 1.7370142936706543, 1.7229022298540388, 1.7082113538469588, 1.6928363186972482, 1.6766072341373988, 1.6597639151981898, 1.642382996422904, 1.624251229422433, 1.6053597245897566, 1.5861310958862305, 1.5662901060921806, 1.5461806229182653, 1.525456394468035, 1.504436697278704, 1.4829677513667516, 1.4613114425114222, 1.4395287377493722, 1.4178542750222343, 1.395897354398455, 1.3741002423422677, 1.351968833378383, 1.3302182810647147, 1.3084794453212194, 1.2871031420571464, 1.266345637185233, 1.245643070765904, 1.22525269644601, 1.2059149742126465, 1.187002454485212, 1.16851840700422, 1.1507743767329626, 1.1335411752973283, 1.1169264316558838, 1.1005496297563826, 1.0850287505558558, 1.0704356942858015, 1.0560547624315535, 1.0421882697514124, 1.029020036969866, 1.0160901887076241, 1.0039417743682861, 0.9923384189605713, 0.9811533859797886, 0.9704295907701764, 0.959923369543893, 0.9496052265167236, 0.9399265561785016, 0.9306010518755231, 0.9212364469255719, 0.9125124045780727, 0.9039265428270612, 0.895871639251709, 0.8883392470223563, 0.880634103502546, 0.8735586064202445, 0.8661688055310931, 0.8594198397227696, 0.8529392310551235, 0.8462602751595634, 0.840259143284389, 0.8340530736105782, 0.8283903087888446, 0.8227560690471104, 0.8172278915132795, 0.8117696557726178, 0.806735805102757, 0.8015456369944981], "val_accuracy": [0.05833333358168602, 0.09300000220537186, 0.12833333015441895, 0.17100000381469727, 0.20600000023841858, 0.23233333230018616, 0.27166667580604553, 0.30000001192092896, 0.31833332777023315, 0.33766666054725647, 0.351666659116745, 0.3610000014305115, 0.3713333308696747, 0.3799999952316284, 0.38999998569488525, 0.3946666717529297, 0.4099999964237213, 0.4206666648387909, 0.4269999861717224, 0.4326666593551636, 0.437333345413208, 0.4423333406448364, 0.4490000009536743, 0.45533332228660583, 0.460999995470047, 0.46566668152809143, 0.47200000286102295, 0.4763333201408386, 0.4846666753292084, 0.4896666705608368, 0.4959999918937683, 0.5013333559036255, 0.5059999823570251, 0.5130000114440918, 0.5180000066757202, 0.5226666927337646, 0.5260000228881836, 0.5296666622161865, 0.5323333144187927, 0.5363333225250244, 0.5400000214576721, 0.5413333177566528, 0.5413333177566528, 0.5456666946411133, 0.5463333129882812, 0.5486666560173035, 0.550000011920929, 0.5493333339691162, 0.5523333549499512, 0.5580000281333923, 0.5586666464805603, 0.5613333582878113, 0.5633333325386047, 0.5669999718666077, 0.5716666579246521, 0.5766666531562805, 0.5803333520889282, 0.581333339214325, 0.5860000252723694, 0.5903333425521851, 0.5929999947547913, 0.5963333249092102, 0.6046666502952576, 0.6069999933242798, 0.6136666536331177, 0.6159999966621399, 0.6209999918937683, 0.6316666603088379, 0.6370000243186951, 0.640999972820282, 0.6460000276565552, 0.6473333239555359, 0.6510000228881836, 0.6543333530426025, 0.6556666493415833, 0.656000018119812, 0.6603333353996277, 0.6613333225250244, 0.6650000214576721, 0.6673333048820496, 0.668666660785675, 0.6726666688919067, 0.6726666688919067, 0.6740000247955322, 0.6753333210945129, 0.6773333549499512, 0.6779999732971191, 0.6803333163261414, 0.6823333501815796, 0.6856666803359985, 0.6863333582878113, 0.6886666417121887, 0.6893333196640015, 0.690666675567627, 0.6930000185966492, 0.6933333277702332, 0.6946666836738586, 0.6946666836738586, 0.6953333616256714, 0.6946666836738586]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 1, 2, 5, 3, 2, 1, 5, 5, 7, 3, 1, 6, 0, 0, 5, 0, 2, 0, 8, 3, 1, 9, 3, 0, 2, 5, 8, 5], [1, 2, 2, 1, 2, 0, 0, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 18, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [19, 7, 76, 58]], "fitness": -0.6854285597801208, "mapping_values": [1, 5, 5, 2, 3, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012381318600865, 2.2992451331398476, 2.2915086645444527, 2.287182363772893, 2.283176157122133, 2.280638701722701, 2.275846113759954, 2.2718438226407343, 2.266537674508468, 2.2608964363219575, 2.2562767709518674, 2.252402930353548, 2.2476162336379972, 2.2412069477755963, 2.235779886437193, 2.23166048881038, 2.224464819872494, 2.2196576640023657, 2.2116624246483165, 2.2042829217597117, 2.1981211648940286, 2.188342126290308, 2.185377716907909, 2.1728832112988616, 2.165367062506564, 2.156622628966626, 2.14882398986892, 2.134999597014343, 2.126348184950363, 2.1140421654932124, 2.1032215771406175, 2.0894523620479504, 2.075128490300368, 2.061562138462835, 2.0494299172378883, 2.0349173113150667, 2.019129541241151, 1.999453346380673, 1.9842315271246813, 1.9663687380407906, 1.9467738278868523, 1.9243835588062697, 1.9079526460024312, 1.8886161043564909, 1.871572608897998, 1.8464742275261214, 1.8282609641229188, 1.8029640118648442, 1.7823610760201678, 1.7626700719365542, 1.741770218628241, 1.7181809279172648, 1.6990988666449776, 1.6716805045567862, 1.6567076786303516, 1.629290564232467, 1.6094376875220227, 1.5929012439506338, 1.5678211256277135, 1.5439911680513794, 1.5376522518372602, 1.5131071323511418, 1.4975593284829387, 1.4804267099331618, 1.4639068413656213, 1.4469586518840263, 1.4226529436687105, 1.4146147214221665, 1.404412614277341, 1.3856648597042118, 1.3748737451438466, 1.3636037888323485, 1.3438421629360402, 1.3354852629406986, 1.3242766961697432, 1.3160650352083256, 1.305473858622701, 1.2974862191245982, 1.2683100028832228, 1.266971491268361, 1.2681550142425257, 1.241993072199516, 1.2392884293221023, 1.2229600680612884, 1.2206009362493728, 1.217029036721061, 1.2033210407394885, 1.2006203571661447, 1.1815508463914604, 1.1829921691298972, 1.172942769100732, 1.164885513849577, 1.1631791574481676, 1.145929814865088, 1.1494004335921155, 1.1363931190477874, 1.125500178088318, 1.11398580138552, 1.1261679156581408, 1.1135789320973073], "accuracy": [0.09496764093637466, 0.10632677376270294, 0.11834631860256195, 0.136045441031456, 0.14370624721050262, 0.14621582627296448, 0.15136705338954926, 0.17170783877372742, 0.18293488025665283, 0.19759608805179596, 0.20723815262317657, 0.21582353115081787, 0.23233389854431152, 0.24422137439250946, 0.2550521790981293, 0.2631092369556427, 0.27420419454574585, 0.27922335267066956, 0.2895258367061615, 0.2977149784564972, 0.304979532957077, 0.31845200061798096, 0.320169061422348, 0.33139610290527344, 0.3353586196899414, 0.33760401606559753, 0.3486989736557007, 0.3609826862812042, 0.35768061876296997, 0.36864352226257324, 0.37326639890670776, 0.3815876245498657, 0.38502180576324463, 0.3953242599964142, 0.3967771828174591, 0.39862632751464844, 0.40206050872802734, 0.41830670833587646, 0.41606128215789795, 0.4259675145149231, 0.4291374981403351, 0.4407607913017273, 0.4434024691581726, 0.43930789828300476, 0.4434024691581726, 0.4543653428554535, 0.45145952701568604, 0.45766741037368774, 0.45964866876602173, 0.46466779708862305, 0.4683661460876465, 0.4683661460876465, 0.4802536070346832, 0.486989825963974, 0.4880464971065521, 0.4962356388568878, 0.5003302097320557, 0.4991414546966553, 0.5087835192680359, 0.502971887588501, 0.5144630670547485, 0.523048460483551, 0.5242372155189514, 0.522520124912262, 0.5226522088050842, 0.5312376022338867, 0.5385021567344666, 0.540219247341156, 0.5359926223754883, 0.5455026030540466, 0.5451063513755798, 0.5451063513755798, 0.559899628162384, 0.5591071248054504, 0.5556729435920715, 0.5671641826629639, 0.5600317120552063, 0.5649187564849854, 0.5694096088409424, 0.574560821056366, 0.5678246021270752, 0.5806366205215454, 0.5832782983779907, 0.5843349695205688, 0.5824857950210571, 0.5758816599845886, 0.5900145173072815, 0.5945053696632385, 0.5954299569129944, 0.591731607913971, 0.5964865684509277, 0.5958262085914612, 0.5980715751647949, 0.6009774208068848, 0.6001849174499512, 0.6050719618797302, 0.6061286330223083, 0.6111478209495544, 0.6062607169151306, 0.620261549949646], "val_loss": [1.9671617916652135, 1.963141577584403, 1.9591566494532995, 1.9551876613071986, 1.9511897223336356, 1.9471620150974818, 1.9430794034685408, 1.938925130026681, 1.9347121374947684, 1.9303874288286482, 1.9258546829223633, 1.9212353570120675, 1.9165002277919225, 1.9115015438624792, 1.9062649863106864, 1.9007979801722936, 1.8951225280761719, 1.8891786166599818, 1.8829189028058733, 1.8763148444039481, 1.869305201939174, 1.8618956974574499, 1.8542358534676688, 1.846048150743757, 1.837495940072196, 1.8284912109375, 1.8190804890223913, 1.809046949659075, 1.7984767641339983, 1.7872889382498605, 1.775622776576451, 1.7634260313851493, 1.7505271094185966, 1.7370187895638602, 1.722907202584403, 1.7082170758928572, 1.6928415298461914, 1.6766114575522286, 1.6597681726728166, 1.642388037272862, 1.6242565086909704, 1.6053649016789027, 1.5861360686165946, 1.5662946360451835, 1.5461855275290353, 1.5254613671983992, 1.504441159112113, 1.4829718726021903, 1.461315052849906, 1.4395308153969901, 1.417855671473912, 1.3958990233285087, 1.3741010597773962, 1.3519696167537145, 1.3302205630711146, 1.308481284550258, 1.2871047428676061, 1.2663465908595495, 1.2456446034567696, 1.2252533435821533, 1.2059150423322404, 1.1870025566646032, 1.1685189179011755, 1.1507740361349923, 1.1335403578622, 1.1169253076825822, 1.1005472115107946, 1.0850274222237724, 1.07043491091047, 1.056053638458252, 1.0421876226152693, 1.0290203775678362, 1.01608977999006, 1.0039406844547816, 0.9923371246882847, 0.9811506271362305, 0.9704263891492572, 0.9599189417702811, 0.9495994363512311, 0.9399186543055943, 0.9305926731654576, 0.9212289197104317, 0.9125072274889264, 0.9039215019771031, 0.8958643845149449, 0.8883311748504639, 0.8806262697492327, 0.8735499722617013, 0.8661617721830096, 0.8594134535108294, 0.8529339347566877, 0.8462511811937604, 0.8402527230126517, 0.8340459551130023, 0.8283851487295968, 0.822752833366394, 0.8172263588224139, 0.8117698090417045, 0.8067361627306256, 0.801546573638916], "val_accuracy": [0.05833333358168602, 0.09300000220537186, 0.12833333015441895, 0.17100000381469727, 0.20600000023841858, 0.23233333230018616, 0.27166667580604553, 0.30000001192092896, 0.31833332777023315, 0.33766666054725647, 0.351666659116745, 0.3610000014305115, 0.3709999918937683, 0.3799999952316284, 0.38999998569488525, 0.3946666717529297, 0.4099999964237213, 0.4206666648387909, 0.4269999861717224, 0.4326666593551636, 0.437333345413208, 0.4423333406448364, 0.4490000009536743, 0.45533332228660583, 0.460999995470047, 0.46566668152809143, 0.4716666638851166, 0.4763333201408386, 0.4846666753292084, 0.4896666705608368, 0.4959999918937683, 0.5013333559036255, 0.5059999823570251, 0.5130000114440918, 0.5180000066757202, 0.5226666927337646, 0.5260000228881836, 0.5296666622161865, 0.5323333144187927, 0.5363333225250244, 0.5400000214576721, 0.5413333177566528, 0.5413333177566528, 0.5456666946411133, 0.5463333129882812, 0.5486666560173035, 0.550000011920929, 0.5493333339691162, 0.5523333549499512, 0.5576666593551636, 0.5586666464805603, 0.5613333582878113, 0.5633333325386047, 0.5669999718666077, 0.5716666579246521, 0.5766666531562805, 0.5803333520889282, 0.581333339214325, 0.5860000252723694, 0.5903333425521851, 0.5929999947547913, 0.5963333249092102, 0.6046666502952576, 0.6066666841506958, 0.6136666536331177, 0.6159999966621399, 0.6209999918937683, 0.6316666603088379, 0.6370000243186951, 0.640999972820282, 0.6460000276565552, 0.6473333239555359, 0.6510000228881836, 0.6543333530426025, 0.6556666493415833, 0.656000018119812, 0.6603333353996277, 0.6613333225250244, 0.6650000214576721, 0.6669999957084656, 0.668666660785675, 0.6726666688919067, 0.6726666688919067, 0.6740000247955322, 0.6753333210945129, 0.6773333549499512, 0.6779999732971191, 0.6806666851043701, 0.6823333501815796, 0.6856666803359985, 0.6863333582878113, 0.6886666417121887, 0.6893333196640015, 0.6909999847412109, 0.6930000185966492, 0.6933333277702332, 0.6943333148956299, 0.6946666836738586, 0.6949999928474426, 0.6946666836738586]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 2, 5, 1, 2, 5, 3, 2, 1, 4, 2, 7, 1, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 61, 42, 63, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.5665714144706726, "mapping_values": [1, 31, 31, 18, 13, 5, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), grad), alpha)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad)), tf.math.negative(tf.math.square(alpha))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.163399903592558, 2.3428649625695064, 1.8204943409779792, 3.377307470054863, 2.4601968267826497, 2.3558019645430424, 2.3427280129190953, 2.339895022244517], "accuracy": [0.2860916554927826, 0.24039097130298615, 0.3747193217277527, 0.3813234567642212, 0.12230881303548813, 0.10355303436517715, 0.10170386731624603, 0.09813763201236725], "val_loss": [2.3448706354413713, 1.496436323438372, 1.1725478853498186, 1.9341202463422502, 2.0015973363603865, 1.9951446396963937, 2.0253927367074147, 1.9992260251726424], "val_accuracy": [0.1666666716337204, 0.39933332800865173, 0.5260000228881836, 0.22733333706855774, 0.10066666454076767, 0.10000000149011612, 0.09833333641290665, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 3, 6, 8, 3, 2, 1, 6, 5, 7, 3, 3, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [79, 68, 58, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [0, 1, 0], [2, 5, 8], [1, 1], [28], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.3134285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.1039035977814664, 2.2746323745925556, 2.3042901797679436, 2.3020654592878076, 2.2832990488781197, 2.3096172933675483, 2.303172236814034, 2.303232036545733, 2.302680459461507, 2.3023991763017055], "accuracy": [0.18676528334617615, 0.14634791016578674, 0.09853387624025345, 0.09945846349000931, 0.16259410977363586, 0.13776251673698425, 0.1002509593963623, 0.09787346422672272, 0.09879804402589798, 0.0956280529499054], "val_loss": [1.9732418741498674, 1.9748827389308385, 1.9733334268842424, 1.9699462481907435, 1.8296680450439453, 1.9742436408996582, 1.9737848554338728, 1.9735512733459473, 1.973689079284668, 1.9732089042663574], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.09866666793823242, 0.09833333641290665, 0.30133333802223206, 0.09866666793823242, 0.09666666388511658, 0.10566666722297668, 0.09666666388511658, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [1, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.16200000047683716, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 18, 11, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(beta), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), beta)), alpha))))))", "other_info": {"loss": [2.3052795309636887, 2.3036379798717346, 2.300296009838652, 2.2973358119719727, 2.297811913688689, 2.3276036211433757, 2.301018204403717, 2.298922689158478, 2.298458677036667, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10170386731624603, 0.11332716792821884, 0.12508255243301392, 0.12693171203136444, 0.12415797263383865, 0.11781799048185349, 0.12429005652666092, 0.13353586196899414, 0.12798838317394257, 0.10698718577623367, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9675346783229284, 1.9662300518580846, 1.9646260397774833, 1.9638877596173967, 1.963007858821324, 1.9660111836024694, 1.9563707624162947, 1.9554570061819894, 1.9533753395080566, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12133333086967468, 0.14233332872390747, 0.14233332872390747, 0.1446666717529297, 0.1459999978542328, 0.17499999701976776, 0.17933332920074463, 0.19333332777023315, 0.19433332979679108, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 1, 5, 1, 2, 5, 9, 1, 5, 5, 5, 7, 3, 1, 0, 2, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 2, 2, 0, 2, 0, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 92, 42, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [85, 7, 76, 58]], "fitness": -0.10371428728103638, "mapping_values": [1, 11, 11, 7, 4, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(tf.math.square(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.7218759496686578, 2.533829801417361, 2.384773188294862, 2.3636912893641187, 2.3959886739597565, 2.3882404319708765, 2.3647926766339262, 2.310585656705833, 2.3802520419470845, 2.4290124463084006, 2.3879460902687044, 2.375597373605672], "accuracy": [0.1592920422554016, 0.09985470771789551, 0.09972262382507324, 0.10276053100824356, 0.10117553919553757, 0.09985470771789551, 0.12217672914266586, 0.1332716941833496, 0.11438383162021637, 0.1200634017586708, 0.10289261490106583, 0.10302469879388809], "val_loss": [1.9950125558035714, 2.025541237422398, 2.029646941593715, 2.0820213726588657, 2.0100483894348145, 1.9809844153267997, 1.9857382093157088, 2.0456859724862233, 2.001549107687814, 2.01216002873012, 2.0755107743399486, 2.128200122288295], "val_accuracy": [0.09833333641290665, 0.09866666793823242, 0.10133333504199982, 0.09833333641290665, 0.10333333164453506, 0.11133333295583725, 0.15533334016799927, 0.13199999928474426, 0.1326666623353958, 0.1133333370089531, 0.10133333504199982, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [32, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 5, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035361405298174, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [0, 0, 0], [5, 5, 8], [1, 1], [28], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 5, 0, 1, 4, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3031043985248667, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 1, 1, 1, 2, 5, 3, 5, 1, 6, 5, 4, 0, 0, 0, 0, 0, 5, 0, 2, 0, 2, 3, 1, 3, 3, 2, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 0, 2, 0, 2, 0, 1, 0, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 18, 15, 13, 72, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [84, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 5, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), alpha))), grad)), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), grad)))))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.multiply(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 2, 5, 1, 9, 5, 3, 2, 1, 8, 2, 7, 1, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 1, 0, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 17, 85, 41, 72, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [8, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [84, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 1, 2, 4, 8, 2, 1, 2, 5, 7, 3, 1, 8, 0, 1, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 92, 42, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 19, 13, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.subtract(alpha, tf.math.add(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, tf.math.negative(grad)))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06921146810054779, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [6, 68, 85, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [1, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [4, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 0, 1, 1, 1], [0, 1, 0], [3, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 2, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 4, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 4, 1, 6, 5, 7, 3, 2, 8, 0, 0, 2, 0, 2, 0, 5, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 0, 1, 1, 1, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [25, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [19, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 41, 41, 24, 17, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.math.pow(tf.math.subtract(grad, grad), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303020978443154, 2.3053739549241064, 2.3019260089505447, 2.301860598777153, 2.3021358618914505, 2.303857638930065], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09285431355237961, 0.09655263274908066, 0.09509972482919693, 0.08638224750757217], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 1, 2, 4, 3, 2, 1, 2, 5, 7, 3, 1, 8, 0, 1, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 0, 2, 1, 2, 0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [94, 55, 42, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [8, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 48, 48, 29, 19, 6, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.square(grad), tf.math.negative(alpha)))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(alpha)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303020978443154, 2.3053739549241064, 2.3019260089505447, 2.301860598777153, 2.3021358618914505, 2.303857638930065], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09285431355237961, 0.09655263274908066, 0.09509972482919693, 0.08638224750757217], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 1, 5, 1, 2, 4, 3, 2, 5, 8, 5, 7, 9, 1, 8, 0, 1, 5, 0, 4, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 2, 1, 2, 0, 0, 2, 0, 2, 0, 1, 2, 2, 2, 2, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 92, 42, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [1, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [19, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303020978443154, 2.3053739549241064, 2.3019260089505447, 2.301860598777153, 2.3021358618914505, 2.303857638930065], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09285431355237961, 0.09655263274908066, 0.09509972482919693, 0.08638224750757217], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 0, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [93, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303020978443154, 2.3053739549241064, 2.3019260089505447, 2.301860598777153, 2.3021358618914505, 2.303857638930065], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09285431355237961, 0.09655263274908066, 0.09509972482919693, 0.08638224750757217], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 4, 1, 1, 6, 5, 3, 2, 1, 6, 5, 7, 3, 1, 8, 0, 0, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 3, 1, 2, 0, 0, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 68, 85, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 0, 1, 1, 1], [0, 1, 0], [5, 5, 8], [1, 1], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 2, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [48, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 18, 11, 7, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(beta), tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.divide_no_nan(tf.math.square(beta), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)), alpha)))))", "other_info": {"loss": [2.303020978443154, 2.3053739549241064, 2.3019260089505447, 2.301860598777153, 2.3021358618914505, 2.303857638930065], "accuracy": [0.09126931428909302, 0.09219389408826828, 0.09285431355237961, 0.09655263274908066, 0.09509972482919693, 0.08638224750757217], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]