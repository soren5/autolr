[{"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 2, 4, 3, 0, 2, 5, 3, 1, 2, 2, 6, 6, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.772857129573822, "mapping_values": [1, 2, 2, 1, 1, 0, 35, 35, 21, 14, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))))), grad)))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2835061619420642, 2.2307805498246864, 2.1503757097780616, 2.0094143817642376, 1.7998794155066684, 1.5795137991349082, 1.3897567822114116, 1.2549985203965308, 1.1634888665991971, 1.1000012298380426, 1.0558584624624145, 1.0146697481483784, 0.9654919340263788, 0.9352826597652478, 0.9101013706155882, 0.8907054071381675, 0.8720480528064865, 0.8553255585285147, 0.8434609625207561, 0.8203759494002281, 0.8098804132419728, 0.8011271217401238, 0.7876279699788228, 0.7924015381631913, 0.7684575523745666, 0.7605552071310101, 0.7478298539215343, 0.7600755499433045, 0.7459800415712341, 0.7360895422896563, 0.7297187582250788, 0.7234175364024226, 0.7156113396861125, 0.7146157120212887, 0.6963274621094349, 0.7086588576438011, 0.7038081502004337, 0.6969539100987454, 0.68688592321412, 0.6962170982247472, 0.6905827999366918, 0.6746631383014126, 0.6815067095023419, 0.671970103088072], "accuracy": [0.1414608359336853, 0.25637298822402954, 0.34262317419052124, 0.402588814496994, 0.46149781346321106, 0.5025756359100342, 0.5375775694847107, 0.5758816599845886, 0.5967507362365723, 0.6205257177352905, 0.6258090138435364, 0.6406022906303406, 0.6597543358802795, 0.667811393737793, 0.6723021864891052, 0.6812838315963745, 0.6951525807380676, 0.6934354901313782, 0.6975300312042236, 0.6995112895965576, 0.7111346125602722, 0.7124554514884949, 0.713379979133606, 0.7129837274551392, 0.7214370369911194, 0.7238145470619202, 0.7285695672035217, 0.7218332886695862, 0.7310791015625, 0.7268524765968323, 0.7300224304199219, 0.7298903465270996, 0.7363624572753906, 0.7342491149902344, 0.7446836829185486, 0.7358341217041016, 0.7411174178123474, 0.7458723783493042, 0.7440232634544373, 0.7424382567405701, 0.7452120184898376, 0.7515519857406616, 0.7427024245262146, 0.7535332441329956], "val_loss": [1.9263112885611398, 1.8654120990208216, 1.7596943719046456, 1.584775754383632, 1.352004051208496, 1.1360719544546944, 0.9846207414354596, 0.8811618941170829, 0.8147847993033273, 0.7661827462060111, 0.7291303702763149, 0.7061899559838432, 0.6812693391527448, 0.6677728550774711, 0.6447480065482003, 0.6324797017233712, 0.6241634573255267, 0.6146149805613926, 0.6045506170817784, 0.5986066716057914, 0.5877536705562046, 0.5826950413840157, 0.577260937009539, 0.5742529119764056, 0.5642606360571725, 0.5646008763994489, 0.5548348767416817, 0.5509766510554722, 0.5475184065955025, 0.5423931734902518, 0.5392008679253715, 0.5350020102092198, 0.5316651037761143, 0.5281847374779838, 0.5252855334963117, 0.5256540605000087, 0.5257803542273385, 0.5279742819922311, 0.5174519504819598, 0.5152066435132708, 0.5112413678850446, 0.5106451341084072, 0.5096782956804548, 0.5036499159676688], "val_accuracy": [0.3356666564941406, 0.44566667079925537, 0.5083333253860474, 0.5546666383743286, 0.5583333373069763, 0.6200000047683716, 0.6453333497047424, 0.6583333611488342, 0.6850000023841858, 0.6936666369438171, 0.7070000171661377, 0.7146666646003723, 0.7170000076293945, 0.721666693687439, 0.7316666841506958, 0.734666645526886, 0.7390000224113464, 0.7386666536331177, 0.7403333187103271, 0.7409999966621399, 0.746999979019165, 0.750333309173584, 0.7476666569709778, 0.7483333349227905, 0.75, 0.753000020980835, 0.7516666650772095, 0.7603333592414856, 0.7590000033378601, 0.7580000162124634, 0.7633333206176758, 0.7643333077430725, 0.7616666555404663, 0.7643333077430725, 0.7676666378974915, 0.7710000276565552, 0.7639999985694885, 0.7643333077430725, 0.7770000100135803, 0.7766666412353516, 0.7710000276565552, 0.7723333239555359, 0.7689999938011169, 0.7743333578109741]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 4, 0, 4, 8, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7725714445114136, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 7, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), beta))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.996219577444165, 1.4263225598594123, 1.0565591866408577, 0.9439775104284003, 0.7843307338260374, 0.7724204732521162, 0.7325859408195323, 0.6928741321225507, 0.695110264006796, 0.654080359116364, 0.6665173548638719, 0.6249467359479108, 0.5838874976050191, 0.6025629225597248, 0.5850485473371311], "accuracy": [0.32822611927986145, 0.5003302097320557, 0.6174877882003784, 0.6565843224525452, 0.6996433734893799, 0.7080966830253601, 0.7219653725624084, 0.7366266250610352, 0.7357020378112793, 0.7512878179550171, 0.7453441023826599, 0.7578919529914856, 0.78113853931427, 0.767401933670044, 0.7757231593132019], "val_loss": [1.575099229812622, 0.8828978538513184, 0.8273129463195801, 0.6099567243031093, 0.6066259145736694, 0.6400198595864433, 0.5457518100738525, 0.5697653123310634, 0.5385171345302037, 0.5070387635912214, 0.5004325594220843, 0.5111942291259766, 0.5344609192439488, 0.4927435261862619, 0.47667268344334196], "val_accuracy": [0.31466665863990784, 0.5843333601951599, 0.6206666827201843, 0.7246666550636292, 0.7283333539962769, 0.7059999704360962, 0.749666690826416, 0.7393333315849304, 0.7573333382606506, 0.7793333530426025, 0.7703333497047424, 0.7680000066757202, 0.7459999918937683, 0.7683333158493042, 0.7730000019073486]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [52, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 4, 1, 8, 8, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [88, 9, 76, 58]], "fitness": -0.3499999940395355, "mapping_values": [1, 2, 2, 2, 0, 1, 9, 9, 7, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))), grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.4219532431770134, 2.3875847843738516, 2.2863118137429654, 2.305516846254596, 2.3033856764886482, 2.303015125457558], "accuracy": [0.2148989588022232, 0.12957337498664856, 0.13076211512088776, 0.14093250036239624, 0.09866596013307571, 0.09985470771789551], "val_loss": [2.239365645817348, 1.973097596849714, 1.7931750842503138, 1.9738896914890833, 1.9736668722970145, 1.9736282484872], "val_accuracy": [0.3370000123977661, 0.10233332961797714, 0.304666668176651, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [0, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 4, 3, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 1, 9, 8, 6, 7, 4, 5, 6], [3, 1, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.16371428966522217, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 13, 9, 0, 1, 1, 1, 0, 1, 5, 3, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))))))), grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.7141441859997974e+24, 3.1258280179959694e+24, 3.130551519697646e+24, 3.024831948611514e+24, 3.072691537896998e+24, 3.156438800388592e+24], "accuracy": [0.10460969805717468, 0.1146479994058609, 0.11451591551303864, 0.11728965491056442, 0.11570466309785843, 0.11715757846832275], "val_loss": [1.8646157494723153e+24, 1.8646195788187415e+24, 1.8646233258136315e+24, 1.8646270316327535e+24, 1.8646309433307154e+24, 1.8646350197317495e+24], "val_accuracy": [0.1459999978542328, 0.1459999978542328, 0.1459999978542328, 0.1459999978542328, 0.1459999978542328, 0.1459999978542328]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [9, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 0, 0, 6, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0, 1], [0, 1, 1], [5], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 1, 0, 1, 4, 4, 3, 1, 0, 2, 1, 1, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302132782131815, 2.302568074813246, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736409868512834, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10533333569765091, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [9, 3, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [21, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302980859218855, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 8, 9, 9, 4, 4, 1, 1, 2, 2, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 6, 0, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [78, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302980859218855, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 0, 6, 1, 2, 9, 4, 4, 1, 1, 2, 2, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [93], [0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 4, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 23, 16, 1, 1, 1, 1, 0, 1, 9, 5, 4, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad))))), grad), tf.math.add(beta, grad))), alpha)))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad))))))), tf.math.square(grad))), tf.math.add(beta, beta))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.pow(tf.math.square(sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], [5, 2, 3, 2, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [88, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 15, 8, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, alpha))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(tf.math.divide_no_nan(beta, alpha), tf.math.add(tf.math.pow(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 4, 4, 8, 6, 7, 4, 5, 6, 4, 8, 3, 4, 5, 9], [1, 3, 2, 1, 0, 0, 2, 2, 2, 1], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 25, 15, 10, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.pow(alpha, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(beta), beta)))), beta))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 4, 0, 0, 3, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [54, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [88, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1160678557.9185815, 22559474860.17699, 103872541413.72711, 291827340627.8906, 625609520505.7615, 1137666449311.7], "accuracy": [0.09945846349000931, 0.09655263274908066, 0.10513802617788315, 0.09694888442754745, 0.1010434553027153, 0.10474177449941635], "val_loss": [4450904941.714286, 35596435456.0, 120125830875.42857, 284728286061.7143, 556093238710.8572, 960912050468.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 0, 3, 2, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 35, 20, 7, 45, 13], [1], [0, 1, 1], [9], [4, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 2, 0, 0, 2, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [19, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 0, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.06971428543329239, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.negative(sigma)))", "other_info": {"loss": [2.3027633452034424, 2.3013161146377827, 2.3006166893776774, 2.3008885249454174, 2.3012763257543756, 2.30049101214572, 2.299339542834829, 2.2992475210100887, 2.2984887590623724, 2.2990896121433084, 2.300325439937079, 2.2995314659491, 2.2998280893337646, 2.2999775663516178, 2.300501660270273, 2.2999824820697237, 2.300483246678453, 2.2999102230069504], "accuracy": [0.09589222073554993, 0.09694888442754745, 0.09192973375320435, 0.09668471664190292, 0.09179764986038208, 0.09945846349000931, 0.09945846349000931, 0.1010434553027153, 0.10157178342342377, 0.09787346422672272, 0.09549596905708313, 0.10381719470024109, 0.1010434553027153, 0.09893012791872025, 0.09536388516426086, 0.09536388516426086, 0.09708096832036972, 0.09945846349000931], "val_loss": [1.9703712463378906, 1.9698632785252161, 1.9695579665047782, 1.969479969569615, 1.9694549696786063, 1.9693191392081124, 1.9693593978881836, 1.9693105561392648, 1.9693504061017717, 1.9694764273507255, 1.9696059908185686, 1.9698494502476283, 1.9700648444039481, 1.970339298248291, 1.9705063956124442, 1.9707257407052177, 1.970907756260463, 1.9711140905107771], "val_accuracy": [0.041333332657814026, 0.05133333429694176, 0.058666665107011795, 0.060333333909511566, 0.06233333423733711, 0.06933332979679108, 0.07333333045244217, 0.07533333450555801, 0.07666666805744171, 0.07833333313465118, 0.0820000022649765, 0.08166666328907013, 0.08233333379030228, 0.07866666465997696, 0.07966666668653488, 0.0806666687130928, 0.08033332973718643, 0.0806666687130928]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [87, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 4, 0, 4, 8, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [5, 7, 3, 3, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [88, 9, 76, 58]], "fitness": -0.06942857056856155, "mapping_values": [1, 2, 2, 2, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.multiply(tf.math.divide_no_nan(beta, alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3027633137124135, 2.3013155253461606, 2.3006174674265263, 2.3008927354219333, 2.301285605719691, 2.30050155641286, 2.2993467721673304, 2.29925150238937, 2.298491561480517, 2.299092050462178, 2.300331503818095, 2.2995388482650196, 2.299830792807097, 2.2999817317329803, 2.3005041527222208, 2.299983305591618, 2.300484191125898, 2.2999081988266004], "accuracy": [0.09589222073554993, 0.09694888442754745, 0.09192973375320435, 0.09668471664190292, 0.09179764986038208, 0.09932637959718704, 0.09959053993225098, 0.1010434553027153, 0.1014397069811821, 0.09813763201236725, 0.09549596905708313, 0.10368511080741882, 0.10117553919553757, 0.09879804402589798, 0.0952318087220192, 0.0952318087220192, 0.09734513610601425, 0.09945846349000931], "val_loss": [1.9703712463378906, 1.96986300604684, 1.969559873853411, 1.9694859640938895, 1.9694633483886719, 1.9693282672337122, 1.9693617820739746, 1.9693108286176408, 1.969353335244315, 1.9694790158952986, 1.9696110316685267, 1.9698518344334193, 1.970069067818778, 1.9703433854239327, 1.9705068724496024, 1.9707258088248116, 1.9709065982273646, 1.9711102758135115], "val_accuracy": [0.041333332657814026, 0.05133333429694176, 0.058666665107011795, 0.060333333909511566, 0.06233333423733711, 0.0689999982714653, 0.07266666740179062, 0.07533333450555801, 0.07699999958276749, 0.07833333313465118, 0.0820000022649765, 0.08166666328907013, 0.08233333379030228, 0.07900000363588333, 0.0793333351612091, 0.08033332973718643, 0.07966666668653488, 0.0806666687130928]}}, {"genotype": [[0], [1, 0, 1], [1, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.051428571343421936, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.math.square(sigma))", "other_info": {"loss": [2.3031824810661425, 2.3025349722940214, 2.302214979416879, 2.302771608669839, 2.3035841738590395, 2.3029707350735307, 2.3011984373867835, 2.301776892316025, 2.3005178810472833, 2.300826629706189, 2.302898087096551, 2.3014047184577473, 2.3014379962875293, 2.301319238043984, 2.302479365214916, 2.2999420256079968, 2.3012937902065866, 2.301169477103015, 2.3017707583674696, 2.300118315819783, 2.299621481669341, 2.301405111749206, 2.3010038023280934, 2.3023245201733102, 2.3013623557810643, 2.301303948330731, 2.300080006290436, 2.3027771440369182, 2.3010598740573287, 2.300431481252934, 2.3014033992355682, 2.3010656171077435, 2.2999421836929614, 2.3019308091910475, 2.300821273460081, 2.3011670419332484, 2.3000846903290433, 2.2991385765677794, 2.2985574784075435, 2.3008111603995984, 2.300632883639242, 2.299039860254171, 2.3003523916915394, 2.3014110253865234, 2.298921997646976, 2.298979866569226, 2.2989545457036566, 2.3002115215497514, 2.300840157653835, 2.300501573008632, 2.3004943336304926, 2.3009140522661715, 2.298983831352735, 2.297251741159641, 2.297934638605205, 2.297607099501338, 2.29895464190875, 2.299772352039255, 2.299822392386216, 2.298410795179293, 2.298735293320472, 2.2984957546999487, 2.2977045325240315, 2.2986707157069004, 2.2979741058392436, 2.297944740706809, 2.2988116856752496, 2.299083927634716, 2.2966466352152644, 2.297985333997056, 2.2986670759423, 2.2988813260070495, 2.29882966311632, 2.2970527247541126, 2.2989693885592106, 2.2974019158297465, 2.297679333182342, 2.2986320244118112, 2.2976582518909994, 2.2972951268853765, 2.2981294766235756, 2.298849918303504, 2.297168919407476, 2.298225941738007, 2.2978240900728695, 2.2979697887341044, 2.295737974647801, 2.2962632941343153, 2.298721687936386, 2.298531043200429, 2.298744094307239, 2.297279723898893, 2.2959614963012522, 2.296408737907163, 2.297901431441291, 2.296457397844876, 2.296047821209935, 2.2964653571709164, 2.2988371365357856, 2.296500736932398], "accuracy": [0.09470347315073013, 0.0956280529499054, 0.08994849026203156, 0.09457138925790787, 0.08717474341392517, 0.09351472556591034, 0.09021265059709549, 0.09100515395402908, 0.09457138925790787, 0.09760929644107819, 0.08902391046285629, 0.09576013684272766, 0.09893012791872025, 0.09179764986038208, 0.09232597798109055, 0.08915598690509796, 0.08770307898521423, 0.0940430611371994, 0.0944393053650856, 0.09774138033390045, 0.09945846349000931, 0.09206181764602661, 0.0944393053650856, 0.09140139818191528, 0.09074098616838455, 0.09509972482919693, 0.09430722147226334, 0.0948355570435524, 0.09219389408826828, 0.10117553919553757, 0.09100515395402908, 0.09496764093637466, 0.09628847241401672, 0.08968432247638702, 0.08942015469074249, 0.08836349099874496, 0.09430722147226334, 0.1022322028875351, 0.10117553919553757, 0.1002509593963623, 0.1002509593963623, 0.09840179979801178, 0.09853387624025345, 0.0944393053650856, 0.10342095047235489, 0.09509972482919693, 0.09813763201236725, 0.0952318087220192, 0.09879804402589798, 0.09338264167308807, 0.10011887550354004, 0.0936468094587326, 0.09694888442754745, 0.09998679161071777, 0.1018359512090683, 0.10117553919553757, 0.10236428678035736, 0.09932637959718704, 0.09906221181154251, 0.10249637067317963, 0.09747721254825592, 0.10289261490106583, 0.1006472036242485, 0.09760929644107819, 0.09589222073554993, 0.09800554811954498, 0.10566636174917221, 0.10460969805717468, 0.10302469879388809, 0.10130762308835983, 0.1014397069811821, 0.10421344637870789, 0.10011887550354004, 0.10751552134752274, 0.10421344637870789, 0.1022322028875351, 0.11293092370033264, 0.10460969805717468, 0.10381719470024109, 0.10249637067317963, 0.10342095047235489, 0.09959053993225098, 0.10394927859306335, 0.10038304328918457, 0.10381719470024109, 0.09840179979801178, 0.10553427785634995, 0.10540219396352768, 0.10645885765552521, 0.10051512718200684, 0.10170386731624603, 0.10249637067317963, 0.10249637067317963, 0.10447761416435242, 0.10487385839223862, 0.10606260597705841, 0.10830801725387573, 0.10579843819141388, 0.10527011007070541, 0.10857218503952026], "val_loss": [1.9711033957345145, 1.971024853842599, 1.9709534645080566, 1.970881530216762, 1.9708076885768346, 1.9707401820591517, 1.9706739698137556, 1.9705962453569685, 1.97052001953125, 1.9704471315656389, 1.9703734261648995, 1.9703034673418318, 1.9702379362923759, 1.9701759474618095, 1.9701038088117326, 1.9700348717825753, 1.969968046460833, 1.9698941367013114, 1.9698292187282018, 1.9697620528084892, 1.9696948868887765, 1.969632829938616, 1.9695626667567663, 1.9694958414350237, 1.969435146876744, 1.9693635531834193, 1.9692978858947754, 1.969233444758824, 1.9691671643938338, 1.9691006796700614, 1.9690382821219308, 1.968977791922433, 1.9689215932573592, 1.9688608305794852, 1.968803950718471, 1.9687510899135046, 1.9686954362051827, 1.9686387607029505, 1.9685816083635603, 1.9685325622558594, 1.968477657863072, 1.968419143131801, 1.9683562006269182, 1.9682968684605189, 1.968238013131278, 1.9681804520743233, 1.968132836478097, 1.9680839947291784, 1.9680341993059431, 1.9679860387529646, 1.967935221535819, 1.9678863797869002, 1.9678383554731096, 1.9677918297903878, 1.9677369935171944, 1.967686653137207, 1.967637198311942, 1.9675871985299247, 1.9675407409667969, 1.9674941471644811, 1.9674453054155623, 1.9673946244376046, 1.9673479625156947, 1.9672966003417969, 1.9672518457685197, 1.9672092710222517, 1.9671623366219657, 1.967116015298026, 1.9670744623456682, 1.9670295715332031, 1.9669762338910783, 1.966928482055664, 1.9668784822736467, 1.9668378829956055, 1.9667923109872, 1.9667459215436662, 1.9666978972298759, 1.9666540282113212, 1.9666085243225098, 1.9665609768458776, 1.9665088653564453, 1.9664645876203264, 1.9664201055254256, 1.9663703101021903, 1.9663207190377372, 1.9662761007036482, 1.9662273270743233, 1.966174602508545, 1.9661269869123186, 1.966078758239746, 1.9660352298191615, 1.9659924507141113, 1.9659485135759627, 1.9659035546439034, 1.9658607755388533, 1.965820380619594, 1.9657773971557617, 1.9657302583966936, 1.9656924520220076, 1.9656523295811243], "val_accuracy": [0.03700000047683716, 0.03799999877810478, 0.038333334028720856, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.0416666679084301, 0.0416666679084301, 0.041999999433755875, 0.0430000014603138, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.044333335012197495, 0.044333335012197495, 0.04466666653752327, 0.04500000178813934, 0.04600000008940697, 0.04600000008940697, 0.04633333161473274, 0.046666666865348816, 0.046666666865348816, 0.047333333641290665, 0.04766666516661644, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04866666719317436, 0.04933333396911621, 0.049666665494441986, 0.05000000074505806, 0.05000000074505806, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.05166666582226753, 0.052000001072883606, 0.05299999937415123, 0.05299999937415123, 0.05299999937415123, 0.05400000140070915, 0.05433333292603493, 0.054999999701976776, 0.0560000017285347, 0.056333333253860474, 0.05700000002980232, 0.05666666850447655, 0.05700000002980232, 0.05766666680574417, 0.057999998331069946, 0.058666665107011795, 0.05900000035762787, 0.05966666713356972, 0.05999999865889549, 0.05999999865889549, 0.05999999865889549, 0.060333333909511566, 0.06066666543483734, 0.061000000685453415, 0.061666667461395264, 0.061666667461395264, 0.06233333423733711, 0.06300000101327896, 0.06333333253860474, 0.06366666406393051, 0.06366666406393051, 0.06400000303983688, 0.06466666609048843, 0.06499999761581421, 0.06533333659172058, 0.06499999761581421, 0.06566666811704636, 0.06599999964237213, 0.06700000166893005, 0.06733333319425583, 0.06733333319425583, 0.06800000369548798, 0.06800000369548798, 0.06833333522081375, 0.06833333522081375, 0.06866666674613953, 0.06866666674613953, 0.06966666877269745, 0.07000000029802322, 0.07066666334867477, 0.07100000232458115, 0.07133333384990692, 0.0716666653752327, 0.0716666653752327, 0.07199999690055847, 0.07233333587646484, 0.07266666740179062, 0.07333333045244217, 0.07366666942834854]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 8, 4, 0, 4, 8, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 1, 0, 0, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.add(sigma, beta)))", "other_info": {"loss": [2.3032186732331854, 2.3026615387066687, 2.3024164102080946, 2.303059506236822, 2.3039472382759234, 2.3034042525426854], "accuracy": [0.09470347315073013, 0.09549596905708313, 0.08915598690509796, 0.09391097724437714, 0.08611807972192764, 0.09259014576673508], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 0, 1, 8, 9, 9, 4, 4, 1, 1, 2, 2, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [82, 9, 76, 58]], "fitness": -0.03257142752408981, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 14, 8, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, beta))))), grad), tf.math.add(beta, grad))), alpha)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3037723363461415, 2.304898521195093, 2.306337378548121, 2.309084369584853, 2.3129202753340863, 2.316006196000242], "accuracy": [0.09351472556591034, 0.0944393053650856, 0.08294808864593506, 0.08545766770839691, 0.07687227427959442, 0.07951393723487854], "val_loss": [1.972377027784075, 1.9738428252083915, 1.9753073283604212, 1.977053233555385, 1.9793362617492676, 1.981947353907994], "val_accuracy": [0.02800000086426735, 0.02266666665673256, 0.022333333268761635, 0.019333332777023315, 0.019999999552965164, 0.027000000700354576]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 4, 0, 4, 8, 9, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.028285713866353035, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(alpha)), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(sigma, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.323244611238523, 2.3745056349036715, 2.425852641705367, 2.4538172454315013, 2.4531229780555135, 2.455749622031824, 2.498177786954185, 2.5955934835037677, 2.664107561268905, 2.564291792743478, 2.4966292944031307, 2.4559230888209496, 2.430039625567153], "accuracy": [0.05772024765610695, 0.020208690315485, 0.011887465603649616, 0.013340378180146217, 0.012547880411148071, 0.01439704094082117, 0.019416192546486855, 0.021793685853481293, 0.026020340621471405, 0.02549200877547264, 0.02588825859129429, 0.025359926745295525, 0.027737418189644814], "val_loss": [2.0167153903416226, 2.0651352746146068, 2.101315838950021, 2.107015609741211, 2.1015681539263045, 2.117410182952881, 2.1784294673374722, 2.2734838894435336, 2.2455031531197682, 2.1508234569004605, 2.110875810895647, 2.089047704424177, 2.075047288622175], "val_accuracy": [0.004666666500270367, 0.005333333276212215, 0.0063333334401249886, 0.007666666526347399, 0.008333333767950535, 0.010333333164453506, 0.016333334147930145, 0.017666665837168694, 0.011666666716337204, 0.01366666704416275, 0.01600000075995922, 0.015333333052694798, 0.017000000923871994]}}]